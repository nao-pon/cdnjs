{"version":3,"sources":["loadingoverlay.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","undefined","_defaults","background","backgroundClass","image","imageAnimation","imageAutoResize","imageResizeFactor","imageColor","imageClass","imageOrder","fontawesome","fontawesomeAnimation","fontawesomeAutoResize","fontawesomeResizeFactor","fontawesomeColor","fontawesomeOrder","custom","customAnimation","customAutoResize","customResizeFactor","customOrder","text","textAnimation","textAutoResize","textResizeFactor","textColor","textClass","textOrder","progress","progressAutoResize","progressResizeFactor","progressColor","progressClass","progressOrder","progressFixedPosition","progressSpeed","progressMin","progressMax","size","maxSize","minSize","direction","fade","resizeInterval","zIndex","_css","overlay","box-sizing","position","display","flex-wrap","align-items","justify-content","element","overflow","flex","element_svg","width","height","progress_fixed","left","progress_wrapper","top","progress_bar","_dataTemplate","count","settings","wholePage","resizeIntervalId","_whitelists","animations","progressPosition","_defaultValues","name","time","Show","container","_ParseSize","parseInt","data","extend","is","class","css","toLowerCase","addClass","isArray","length","fill","stroke","_CreateElement","slice","append","children","find","load","background-image","background-position","background-repeat","background-size","appendTo","wrapper","bar","fixed","margin","min","parseFloat","max","speed","progressPositionParts","replace","split","_ValidateProgressPosition","value","units","fadeTo","_IntervalResize","setInterval","Hide","force","clearInterval","fadeOut","this","remove","removeData","Resize","Text","hide","show","Progress","v","animate","isFixed","pos","getBoundingClientRect","offset","innerWidth","innerHeight","c","window","Math","each","$this","resizeFactor","hasClass","order","autoResize","animation","loadingoverlay_autoresize","loadingoverlay_resizefactor","animationName","animationTime","parts","_ValidateCssTime","_ValidateAnimation","animation-name","animation-duration","animation-timing-function","animation-iteration-count","isNaN","indexOf","LoadingOverlaySetup","LoadingOverlay","action","options","fn","join"],"mappings":"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K,OACD,OAAOwD,KAAKmB,KAAK,WACbvB,EAAKI,KAAM0C,KAGlB,IAAK,SACF,OAAO1C,KAAKmB,KAAK,WACbhB,EAAOH,QAGf,IAAK,OACD,OAAOA,KAAKmB,KAAK,WACbf,EAAKJ,KAAM0C,KAGnB,IAAK,WACD,OAAO1C,KAAKmB,KAAK,WACbZ,EAASP,KAAM0C,OA6X/BtK,EAAE,WACEA,EAAE,QAAQ8F,QACN,UACI,8DACE,OACE,sCACQ,8BACV,IACF,IACA,sDACE,OACE,sCACQ,8BACV,IACF,IAEA,6DACE,OACE,uCACQ,+BACV,IACF,IACA,qDACE,OACE,uCACQ,+BACV,IACF,IAEA,wDACE,OACU,iBACR,uCACQ,+BACV,IACA,QACU,iBACV,IACA,SACU,iBACR,mCACQ,2BACV,IACF,IACA,gDACE,OACU,iBACR,uCACQ,+BACV,IACA,QACU,iBACV,IACA,SACU,iBACR,mCACQ,2BACV,IACF,IAEA,uDACE,OACE,mCACQ,2BACV,IACA,QACE,mCACQ,2BACV,IACA,SACE,mCACQ,2BACV,IACF,IACA,+CACE,OACE,mCACQ,2BACV,IACA,QACE,mCACQ,2BACV,IACA,SACE,mCACQ,2BACV,IACF,IACJ,YACF0E,KAAK","file":"loadingoverlay.min.js","sourcesContent":["/***************************************************************************************************\r\nLoadingOverlay - A flexible loading overlay jQuery plugin\r\n    Author          : Gaspare Sganga\r\n    Version         : 2.1.0\r\n    License         : MIT\r\n    Documentation   : https://gasparesganga.com/labs/jquery-loading-overlay/\r\n***************************************************************************************************/\r\n;(function(factory){\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // AMD. Register as an anonymous module\r\n        define([\"jquery\"], factory);\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        // Node/CommonJS\r\n        factory(require(\"jquery\"));\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function($, undefined){\r\n    \"use strict\";\r\n    \r\n    // Default Settings\r\n    var _defaults = {\r\n        // Background\r\n        background              : \"rgba(255, 255, 255, 0.8)\",\r\n        backgroundClass         : \"\",\r\n        // Image\r\n        image                   : \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 1000'><circle r='80' cx='500' cy='90'/><circle r='80' cx='500' cy='910'/><circle r='80' cx='90' cy='500'/><circle r='80' cx='910' cy='500'/><circle r='80' cx='212' cy='212'/><circle r='80' cx='788' cy='212'/><circle r='80' cx='212' cy='788'/><circle r='80' cx='788' cy='788'/></svg>\",\r\n        imageAnimation          : \"2000ms rotate_right\",\r\n        imageAutoResize         : true,\r\n        imageResizeFactor       : 1,\r\n        imageColor              : \"#202020\",\r\n        imageClass              : \"\",\r\n        imageOrder              : 1,\r\n        // Font Awesome\r\n        fontawesome             : \"\",\r\n        fontawesomeAnimation    : \"\",\r\n        fontawesomeAutoResize   : true,\r\n        fontawesomeResizeFactor : 1,\r\n        fontawesomeColor        : \"#202020\",\r\n        fontawesomeOrder        : 2,\r\n        // Custom\r\n        custom                  : \"\",\r\n        customAnimation         : \"\",\r\n        customAutoResize        : true,\r\n        customResizeFactor      : 1,\r\n        customOrder             : 3,\r\n        // Text\r\n        text                    : \"\",\r\n        textAnimation           : \"\",\r\n        textAutoResize          : true,\r\n        textResizeFactor        : 0.5,\r\n        textColor               : \"#202020\",\r\n        textClass               : \"\",\r\n        textOrder               : 4,\r\n        // Progress\r\n        progress                : false,\r\n        progressAutoResize      : true,\r\n        progressResizeFactor    : 0.25,\r\n        progressColor           : \"#a0a0a0\",\r\n        progressClass           : \"\",\r\n        progressOrder           : 5,\r\n        progressFixedPosition   : \"\",\r\n        progressSpeed           : 200,\r\n        progressMin             : 0,\r\n        progressMax             : 100,\r\n        // Sizing\r\n        size                    : 50,\r\n        maxSize                 : 120,\r\n        minSize                 : 20,\r\n        // Misc\r\n        direction               : \"column\",\r\n        fade                    : true,\r\n        resizeInterval          : 50,\r\n        zIndex                  : 2147483647\r\n    };\r\n    \r\n    // Required CSS\r\n    var _css = {\r\n        overlay : {\r\n            \"box-sizing\"        : \"border-box\",\r\n            \"position\"          : \"relative\",\r\n            \"display\"           : \"flex\",\r\n            \"flex-wrap\"         : \"nowrap\",\r\n            \"align-items\"       : \"center\",\r\n            \"justify-content\"   : \"space-around\"\r\n        },\r\n        element : {\r\n            \"box-sizing\"        : \"border-box\",\r\n            \"overflow\"          : \"visible\",\r\n            \"flex\"              : \"0 0 auto\",\r\n            \"display\"           : \"flex\",\r\n            \"justify-content\"   : \"center\",\r\n            \"align-items\"       : \"center\"\r\n        },\r\n        element_svg : {\r\n            \"width\"             : \"100%\",\r\n            \"height\"            : \"100%\"\r\n        },\r\n        progress_fixed : {\r\n            \"position\"          : \"absolute\",\r\n            \"left\"              : \"0\",\r\n            \"width\"             : \"100%\"\r\n        },\r\n        progress_wrapper : {\r\n            \"position\"          : \"absolute\",\r\n            \"top\"               : \"0\",\r\n            \"left\"              : \"0\",\r\n            \"width\"             : \"100%\",\r\n            \"height\"            : \"100%\"\r\n        },\r\n        progress_bar : {\r\n            \"position\"          : \"absolute\",\r\n            \"left\"              : \"0\"\r\n        }\r\n    };\r\n    \r\n    // Data Template\r\n    var _dataTemplate = {\r\n        \"count\"             : 0,\r\n        \"overlay\"           : undefined,\r\n        \"settings\"          : undefined,\r\n        \"wholePage\"         : undefined,\r\n        \"resizeIntervalId\"  : undefined,\r\n        \"text\"              : undefined,\r\n        \"progress\"          : undefined\r\n    };\r\n    \r\n    // Whitelists\r\n    var _whitelists = {\r\n        animations : [\r\n            \"rotate_right\",\r\n            \"rotate_left\",\r\n            \"fadein\",\r\n            \"pulse\"\r\n        ],\r\n        progressPosition : [\r\n            \"top\",\r\n            \"bottom\"\r\n        ]\r\n    };\r\n    \r\n    // Default Values\r\n    var _defaultValues = {\r\n        animations : {\r\n            name    : \"rotate_right\",\r\n            time    : \"2000ms\"\r\n        },\r\n        fade : [400, 200]\r\n    };\r\n    \r\n    \r\n    $.LoadingOverlaySetup = function(settings){\r\n        $.extend(true, _defaults, settings);\r\n    };\r\n    \r\n    $.LoadingOverlay = function(action, options){\r\n        switch (action.toLowerCase()) {\r\n            case \"show\":\r\n                var settings = $.extend(true, {}, _defaults, options);\r\n                Show(\"body\", settings);\r\n                break;\r\n                \r\n            case \"hide\":\r\n                Hide(\"body\", options);\r\n                break;\r\n                \r\n            case \"resize\":\r\n                Resize(\"body\", options);\r\n                break;  \r\n                \r\n            case \"text\":\r\n                Text(\"body\", options);\r\n                break;\r\n                \r\n            case \"progress\":\r\n                Progress(\"body\", options);\r\n                break;\r\n        }\r\n    };\r\n    \r\n    $.fn.LoadingOverlay = function(action, options){\r\n        switch (action.toLowerCase()) {\r\n            case \"show\":\r\n                var settings = $.extend(true, {}, _defaults, options);\r\n                return this.each(function(){\r\n                    Show(this, settings);\r\n                });\r\n                \r\n            case \"hide\":\r\n                return this.each(function(){\r\n                    Hide(this, options);\r\n                });\r\n                \r\n             case \"resize\":\r\n                return this.each(function(){\r\n                    Resize(this, options);\r\n                });\r\n                \r\n            case \"text\":\r\n                return this.each(function(){\r\n                    Text(this, options);\r\n                });\r\n                \r\n            case \"progress\":\r\n                return this.each(function(){\r\n                    Progress(this, options);\r\n                });\r\n        }\r\n    };\r\n    \r\n    \r\n    function Show(container, settings){\r\n        container               = $(container);\r\n        settings.size           = _ParseSize(settings.size);\r\n        settings.maxSize        = parseInt(settings.maxSize, 10) || 0;\r\n        settings.minSize        = parseInt(settings.minSize, 10) || 0;\r\n        settings.resizeInterval = parseInt(settings.resizeInterval, 10) || 0;\r\n        \r\n        var data = container.data(\"loadingoverlay\");\r\n        if (typeof data === \"undefined\") {\r\n            // Init data\r\n            data = $.extend({}, _dataTemplate);\r\n            data.wholePage = container.is(\"body\");\r\n            container.data(\"loadingoverlay\", data);\r\n            \r\n            // Overlay\r\n            data.overlay = $(\"<div>\", {\r\n                \"class\" : \"loadingoverlay\"\r\n            })\r\n            .css(_css.overlay)\r\n            .css(\"flex-direction\", settings.direction.toLowerCase() === \"row\" ? \"row\" : \"column\");\r\n            if (settings.backgroundClass) {\r\n                data.overlay.addClass(settings.backgroundClass);\r\n            } else {\r\n                data.overlay.css(\"background\", settings.background);\r\n            }\r\n            if (data.wholePage) {\r\n                data.overlay.css({\r\n                    \"position\"  : \"fixed\",\r\n                    \"top\"       : 0,\r\n                    \"left\"      : 0,\r\n                    \"width\"     : \"100%\",\r\n                    \"height\"    : \"100%\"\r\n                });\r\n            }\r\n            if (typeof settings.zIndex !== \"undefined\") data.overlay.css(\"z-index\", settings.zIndex);\r\n            \r\n            // Image\r\n            if (settings.image) {\r\n                if ($.isArray(settings.imageColor)) {\r\n                    if (settings.imageColor.length === 0) {\r\n                        settings.imageColor = false;\r\n                    } else if (settings.imageColor.length  === 1) {\r\n                        settings.imageColor = {\r\n                            \"fill\"  : settings.imageColor[0]\r\n                        };\r\n                    } else {\r\n                        settings.imageColor = {\r\n                            \"fill\"      : settings.imageColor[0],\r\n                            \"stroke\"    : settings.imageColor[1]\r\n                        };\r\n                    }\r\n                } else if (settings.imageColor) {\r\n                    settings.imageColor = {\r\n                        \"fill\"  : settings.imageColor\r\n                    };\r\n                }\r\n                var element = _CreateElement(data.overlay, settings.imageOrder, settings.imageAutoResize, settings.imageResizeFactor, settings.imageAnimation);\r\n                if (settings.image.slice(0, 4).toLowerCase() === \"<svg\" && settings.image.slice(-6).toLowerCase() === \"</svg>\") {\r\n                    // Inline SVG\r\n                    element.append(settings.image);\r\n                    element.children().css(_css.element_svg);\r\n                    if (!settings.imageClass && settings.imageColor) element.find(\"*\").css(settings.imageColor);\r\n                } else if (settings.image.slice(-4).toLowerCase() === \".svg\" || settings.image.slice(0, 14).toLowerCase() === \"data:image/svg\") {\r\n                    // SVG file or base64-encoded SVG\r\n                    element.load(settings.image, function(){\r\n                        element.children().css(_css.element_svg);\r\n                        if (!settings.imageClass && settings.imageColor) element.find(\"*\").css(settings.imageColor);\r\n                    });\r\n                } else {\r\n                    // Raster\r\n                    element.css({\r\n                        \"background-image\"      : \"url(\" + settings.image + \")\",\r\n                        \"background-position\"   : \"center\",\r\n                        \"background-repeat\"     : \"no-repeat\",\r\n                        \"background-size\"       : \"cover\"\r\n                    });\r\n                }\r\n                if (settings.imageClass) element.addClass(settings.imageClass);\r\n            }\r\n            \r\n            // Font Awesome\r\n            if (settings.fontawesome) {\r\n                var element = _CreateElement(data.overlay, settings.fontawesomeOrder, settings.fontawesomeAutoResize, settings.fontawesomeResizeFactor, settings.fontawesomeAnimation)\r\n                    .addClass(\"loadingoverlay_fa\");\r\n                $(\"<div>\", {\r\n                    \"class\" : settings.fontawesome\r\n                }).appendTo(element);\r\n                if (settings.fontawesomeColor) element.css(\"color\", settings.fontawesomeColor);\r\n            }\r\n            \r\n            // Custom\r\n            if (settings.custom) {\r\n                var element = _CreateElement(data.overlay, settings.customOrder, settings.customAutoResize, settings.customResizeFactor, settings.customAnimation)\r\n                    .append(settings.custom);\r\n            }\r\n            \r\n            // Text\r\n            if (settings.text) {\r\n                data.text = _CreateElement(data.overlay, settings.textOrder, settings.textAutoResize, settings.textResizeFactor, settings.textAnimation)\r\n                        .addClass(\"loadingoverlay_text\")\r\n                        .text(settings.text);\r\n                if (settings.textClass) {\r\n                    data.text.addClass(settings.textClass);\r\n                } else if (settings.textColor) {\r\n                    data.text.css(\"color\", settings.textColor);\r\n                }\r\n            }\r\n            \r\n            // Progress\r\n            if (settings.progress) {\r\n                var element = _CreateElement(data.overlay, settings.progressOrder, settings.progressAutoResize, settings.progressResizeFactor, false)\r\n                    .addClass(\"loadingoverlay_progress\");\r\n                var wrapper = $(\"<div>\")\r\n                    .css(_css.progress_wrapper)\r\n                    .appendTo(element);\r\n                data.progress = {\r\n                    bar     : $(\"<div>\").css(_css.progress_bar).appendTo(wrapper),\r\n                    fixed   : false,\r\n                    margin  : 0,\r\n                    min     : parseFloat(settings.progressMin),\r\n                    max     : parseFloat(settings.progressMax),\r\n                    speed   : parseInt(settings.progressSpeed, 10)\r\n                };\r\n                var progressPositionParts = (settings.progressFixedPosition + \"\").replace(/\\s\\s+/g, \" \").toLowerCase().split(\" \");\r\n                if (progressPositionParts.length === 2 && _ValidateProgressPosition(progressPositionParts[0])) {\r\n                    data.progress.fixed     = progressPositionParts[0];\r\n                    data.progress.margin    = _ParseSize(progressPositionParts[1]);\r\n                } else if (progressPositionParts.length === 2 && _ValidateProgressPosition(progressPositionParts[1])) {\r\n                    data.progress.fixed     = progressPositionParts[1];\r\n                    data.progress.margin    = _ParseSize(progressPositionParts[0]);\r\n                } else if (progressPositionParts.length === 1 && _ValidateProgressPosition(progressPositionParts[0])) {\r\n                    data.progress.fixed     = progressPositionParts[0];\r\n                    data.progress.margin    = 0;\r\n                }\r\n                if (data.progress.fixed === \"top\") {\r\n                    element\r\n                        .css(_css.progress_fixed)\r\n                        .css(\"top\", data.progress.margin ? data.progress.margin.value + (data.progress.margin.fixed ? data.progress.margin.units : \"%\") : 0);\r\n                } else if (data.progress.fixed === \"bottom\") {\r\n                    element\r\n                        .css(_css.progress_fixed)\r\n                        .css(\"top\", \"auto\");\r\n                }\r\n                if (settings.progressClass) {\r\n                    data.progress.bar.addClass(settings.progressClass);\r\n                } else if (settings.progressColor) {\r\n                    data.progress.bar.css(\"background\", settings.progressColor);\r\n                } \r\n            }\r\n            \r\n            // Fade\r\n            if (!settings.fade) {\r\n                settings.fade = [0, 0];\r\n            } else if (settings.fade === true) {\r\n                settings.fade = _defaultValues.fade;\r\n            } else if (typeof settings.fade === \"string\" || typeof settings.fade === \"number\") {\r\n                settings.fade = [settings.fade, settings.fade];\r\n            } else if ($.isArray(settings.fade) && settings.fade.length < 2) {\r\n                settings.fade = [settings.fade[0], settings.fade[0]];\r\n            }\r\n            settings.fade = [parseInt(settings.fade[0], 10), parseInt(settings.fade[1], 10)]\r\n            \r\n            // Save settings\r\n            data.settings = settings;\r\n            \r\n            // Resize\r\n            data.overlay\r\n                .fadeTo(0, 0.01)\r\n                .appendTo(\"body\");\r\n            _IntervalResize(container, true);\r\n            if (settings.resizeInterval > 0) {\r\n                data.resizeIntervalId = setInterval(function(){\r\n                    _IntervalResize(container, false);\r\n                }, settings.resizeInterval);\r\n            }\r\n            \r\n            // Show LoadingOverlay\r\n            data.overlay.fadeTo(settings.fade[0], 1);\r\n        }\r\n        data.count++;\r\n    }\r\n    \r\n    function Hide(container, force){\r\n        container   = $(container);\r\n        var data    = container.data(\"loadingoverlay\");\r\n        if (typeof data === \"undefined\") return;\r\n        data.count--;\r\n        if (force || data.count <= 0) {\r\n            if (data.resizeIntervalId) clearInterval(data.resizeIntervalId);\r\n            data.overlay.fadeOut(data.settings.fade[1], function(){\r\n                $(this).remove();\r\n            });\r\n            container.removeData(\"loadingoverlay\");\r\n        }\r\n    }\r\n    \r\n    function Resize(container){\r\n        _IntervalResize($(container), true);\r\n    }\r\n    \r\n    function Text(container, value){\r\n        container   = $(container);\r\n        var data    = container.data(\"loadingoverlay\");\r\n        if (typeof data === \"undefined\" || !data.text) return;\r\n        if (value === false) {\r\n            data.text.hide();\r\n        } else {\r\n            data.text\r\n                    .show()\r\n                    .text(value);\r\n        }\r\n    }\r\n    \r\n    function Progress(container, value){\r\n        container   = $(container);\r\n        var data    = container.data(\"loadingoverlay\");\r\n        if (typeof data === \"undefined\" || !data.progress) return;\r\n        if (value === false) {\r\n            data.progress.bar.hide();\r\n        } else {\r\n            var v = ((parseFloat(value) || 0) - data.progress.min) * 100 / (data.progress.max - data.progress.min);\r\n            if (v < 0)   v = 0;\r\n            if (v > 100) v = 100;\r\n            data.progress.bar\r\n                    .show()\r\n                    .animate({\r\n                        \"width\" : v + \"%\"\r\n                    }, data.progress.speed);\r\n        }\r\n    }\r\n    \r\n    \r\n    function _IntervalResize(container, force){\r\n        var data = container.data(\"loadingoverlay\");\r\n        \r\n        // Overlay\r\n        if (!data.wholePage) {\r\n            var isFixed = container.css(\"position\") === \"fixed\";\r\n            var pos     = isFixed ? container[0].getBoundingClientRect() : container.offset();            \r\n            data.overlay.css({\r\n                \"position\"  : isFixed ? \"fixed\" : \"absolute\",\r\n                \"top\"       : pos.top + parseInt(container.css(\"border-top-width\"), 10),\r\n                \"left\"      : pos.left + parseInt(container.css(\"border-left-width\"), 10),\r\n                \"width\"     : container.innerWidth(),\r\n                \"height\"    : container.innerHeight()\r\n            });\r\n        }\r\n        \r\n        // Elements\r\n        if (data.settings.size) {\r\n            var c    = data.wholePage ? $(window) : container;\r\n            var size = data.settings.size.value;\r\n            if (!data.settings.size.fixed) {\r\n                size = Math.min(c.innerWidth(), c.innerHeight()) * size / 100;\r\n                if (data.settings.maxSize && size > data.settings.maxSize) size = data.settings.maxSize;\r\n                if (data.settings.minSize && size < data.settings.minSize) size = data.settings.minSize;\r\n            }\r\n            data.overlay.children(\".loadingoverlay_element\").each(function(){\r\n                var $this = $(this);\r\n                if (force || $this.data(\"loadingoverlay_autoresize\")) {\r\n                    var resizeFactor = $this.data(\"loadingoverlay_resizefactor\");\r\n                    if ($this.hasClass(\"loadingoverlay_fa\") || $this.hasClass(\"loadingoverlay_text\")) {\r\n                        $this.css(\"font-size\", (size * resizeFactor) + data.settings.size.units);\r\n                    } else if ($this.hasClass(\"loadingoverlay_progress\")) {\r\n                        var progress = container.data(\"loadingoverlay\").progress;\r\n                        progress.bar.css(\"height\", (size * resizeFactor) + data.settings.size.units);\r\n                        if (!progress.fixed) {\r\n                            progress.bar\r\n                                .css(\"top\", $this.position().top)\r\n                                .css(\"top\", \"-=\" + (size * resizeFactor * 0.5) + data.settings.size.units);\r\n                        } else if (progress.fixed === \"bottom\") {\r\n                            $this\r\n                                .css(\"bottom\", progress.margin ? progress.margin.value + (progress.margin.fixed ? progress.margin.units : \"%\") : 0)\r\n                                .css(\"bottom\", \"+=\" + (size * resizeFactor) + data.settings.size.units);\r\n                        }\r\n                    } else {\r\n                        $this.css({\r\n                            \"width\"  : (size * resizeFactor) + data.settings.size.units,\r\n                            \"height\" : (size * resizeFactor) + data.settings.size.units\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    \r\n    function _CreateElement(overlay, order, autoResize, resizeFactor, animation){\r\n        var element = $(\"<div>\", {\r\n            \"class\" : \"loadingoverlay_element\",\r\n            \"css\"   : {\r\n                \"order\" : order\r\n            }\r\n        })\r\n        .css(_css.element)\r\n        .data({\r\n            \"loadingoverlay_autoresize\"     : autoResize,\r\n            \"loadingoverlay_resizefactor\"   : resizeFactor\r\n        })\r\n        .appendTo(overlay);\r\n        \r\n        // Parse animation\r\n        if (animation === true) animation = _defaultValues.animations.time + \" \" + _defaultValues.animations.name;\r\n        if (typeof animation === \"string\") {\r\n            var animationName;\r\n            var animationTime;\r\n            var parts = animation.replace(/\\s\\s+/g, \" \").toLowerCase().split(\" \");\r\n            if (parts.length === 2 && _ValidateCssTime(parts[0]) && _ValidateAnimation(parts[1])) {\r\n                animationName = parts[1];\r\n                animationTime = parts[0];\r\n            } else if (parts.length === 2 && _ValidateCssTime(parts[1]) && _ValidateAnimation(parts[0])) {\r\n                animationName = parts[0];\r\n                animationTime = parts[1];\r\n            } else if (parts.length === 1 && _ValidateCssTime(parts[0])) {\r\n                animationName = _defaultValues.animations.name;\r\n                animationTime = parts[0];\r\n            } else if (parts.length === 1 && _ValidateAnimation(parts[0])) {\r\n                animationName = parts[0];\r\n                animationTime = _defaultValues.animations.time;\r\n            }\r\n            element.css({\r\n                \"animation-name\"            : \"loadingoverlay_animation__\" + animationName,\r\n                \"animation-duration\"        : animationTime,\r\n                \"animation-timing-function\" : \"linear\",\r\n                \"animation-iteration-count\" : \"infinite\"\r\n            });\r\n        }\r\n        \r\n        return element;\r\n    }\r\n    \r\n    function _ValidateCssTime(value){\r\n        return !isNaN(parseFloat(value)) && (value.slice(-1) === \"s\" || value.slice(-2) === \"ms\");\r\n    }\r\n    \r\n    function _ValidateAnimation(value){\r\n        return _whitelists.animations.indexOf(value) > -1;\r\n    }\r\n    \r\n    function _ValidateProgressPosition(value){\r\n        return _whitelists.progressPosition.indexOf(value) > -1;\r\n    }\r\n    \r\n    \r\n    function _ParseSize(value){\r\n        if (!value || value < 0) {\r\n            return false;\r\n        } else if (typeof value === \"string\" && [\"vmin\", \"vmax\"].indexOf(value.slice(-4)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-4),\r\n                value   : value.slice(0, -4)\r\n            };\r\n        } else if (typeof value === \"string\" && [\"rem\"].indexOf(value.slice(-3)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-3),\r\n                value   : value.slice(0, -3)\r\n            };\r\n        } else if (typeof value === \"string\" && [\"px\", \"em\", \"cm\", \"mm\", \"in\", \"pt\", \"pc\", \"vh\", \"vw\"].indexOf(value.slice(-2)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-2),\r\n                value   : value.slice(0, -2)\r\n            };\r\n        } else {\r\n            return {\r\n                fixed   : false,\r\n                units   : \"px\",\r\n                value   : parseFloat(value)\r\n            }; \r\n        }\r\n    }\r\n    \r\n    \r\n    $(function(){\r\n        $(\"head\").append([\r\n            \"<style>\",\r\n                \"@-webkit-keyframes loadingoverlay_animation__rotate_right {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(360deg);\",\r\n                            \"transform : rotate(360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__rotate_right {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(360deg);\",\r\n                            \"transform : rotate(360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__rotate_left {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(-360deg);\",\r\n                            \"transform : rotate(-360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__rotate_left {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(-360deg);\",\r\n                            \"transform : rotate(-360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__fadein {\",\r\n                  \"0% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(0.1, 0.1);\",\r\n                            \"transform : scale(0.1, 0.1);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                            \"opacity   : 1;\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__fadein {\",\r\n                  \"0% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(0.1, 0.1);\",\r\n                            \"transform : scale(0.1, 0.1);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                            \"opacity   : 1;\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__pulse {\",\r\n                  \"0% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__pulse {\",\r\n                  \"0% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                \"}\",\r\n            \"</style>\"\r\n        ].join(\" \"));\r\n    });\r\n    \r\n}));"]}