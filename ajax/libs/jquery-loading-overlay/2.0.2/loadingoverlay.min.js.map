{"version":3,"sources":["loadingoverlay.js"],"names":["factory","define","amd","module","exports","require","jQuery","$","undefined","_defaults","background","backgroundClass","image","imageAnimation","imageAutoResize","imageResizeFactor","imageColor","imageClass","imageOrder","fontawesome","fontawesomeAnimation","fontawesomeAutoResize","fontawesomeResizeFactor","fontawesomeColor","fontawesomeOrder","custom","customAnimation","customAutoResize","customResizeFactor","customOrder","text","textAnimation","textAutoResize","textResizeFactor","textColor","textClass","textOrder","progress","progressAutoResize","progressResizeFactor","progressColor","progressClass","progressOrder","progressSpeed","progressMin","progressMax","size","maxSize","minSize","direction","fade","_fadeValues","resizeInterval","zIndex","_css","overlay","box-sizing","position","display","flex-wrap","align-items","justify-content","element","overflow","flex","element_svg","width","height","progress_wrapper","top","left","progress_bar","_dataTemplate","count","fadeOut","resizeIntervalId","_animationsWhitelist","_animationsDefaults","name","time","Show","container","settings","value","indexOf","slice","fixed","units","parseFloat","parseInt","data","wholePage","is","extend","class","css","toLowerCase","addClass","_CreateElement","append","children","load","background-image","background-position","background-repeat","background-size","appendTo","wrapper","bar","min","max","speed","_Resize","setInterval","type","length","hide","fadeIn","Hide","force","clearInterval","this","remove","removeData","Text","show","Progress","v","animate","isFixed","pos","getBoundingClientRect","offset","innerWidth","innerHeight","c","window","Math","each","$this","resizeFactor","hasClass","order","autoResize","animation","loadingoverlay_autoresize","loadingoverlay_resizefactor","animationName","animationTime","parts","replace","split","_ValidateCssTime","_ValidateAnimation","animation-name","animation-duration","animation-timing-function","animation-iteration-count","isNaN","LoadingOverlaySetup","LoadingOverlay","action","options","fn","join"],"mappings":"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","file":"loadingoverlay.min.js","sourcesContent":["/***************************************************************************************************\r\nLoadingOverlay - A flexible loading overlay jQuery plugin\r\n    Author          : Gaspare Sganga\r\n    Version         : 2.0.2\r\n    License         : MIT\r\n    Documentation   : https://gasparesganga.com/labs/jquery-loading-overlay/\r\n***************************************************************************************************/\r\n;(function(factory){\r\n    if (typeof define === \"function\" && define.amd) {\r\n        // AMD. Register as an anonymous module\r\n        define([\"jquery\"], factory);\r\n    } else if (typeof module === \"object\" && module.exports) {\r\n        // Node/CommonJS\r\n        factory(require(\"jquery\"));\r\n    } else {\r\n        // Browser globals\r\n        factory(jQuery);\r\n    }\r\n}(function($, undefined){\r\n    \"use strict\";\r\n    \r\n    // Default Settings\r\n    var _defaults = {\r\n        // Background\r\n        background              : \"rgba(255, 255, 255, 0.8)\",\r\n        backgroundClass         : \"\",\r\n        // Image\r\n        image                   : \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1000 1000'><ellipse rx='80' ry='80' cx='500' cy='90'/><ellipse rx='80' ry='80' cx='500' cy='910'/><ellipse rx='80' ry='80' cx='90' cy='500'/><ellipse rx='80' ry='80' cx='910' cy='500'/><ellipse rx='80' ry='80' cx='212' cy='212'/><ellipse rx='80' ry='80' cx='788' cy='212'/><ellipse rx='80' ry='80' cx='212' cy='788'/><ellipse rx='80' ry='80' cx='788' cy='788'/></svg>\",\r\n        imageAnimation          : \"2000ms rotate_right\",\r\n        imageAutoResize         : true,\r\n        imageResizeFactor       : 1,\r\n        imageColor              : \"#202020\",\r\n        imageClass              : \"\",\r\n        imageOrder              : 1,\r\n        // Font Awesome\r\n        fontawesome             : \"\",\r\n        fontawesomeAnimation    : \"\",\r\n        fontawesomeAutoResize   : true,\r\n        fontawesomeResizeFactor : 1,\r\n        fontawesomeColor        : \"#202020\",\r\n        fontawesomeOrder        : 2,\r\n        // Custom\r\n        custom                  : \"\",\r\n        customAnimation         : \"\",\r\n        customAutoResize        : true,\r\n        customResizeFactor      : 1,\r\n        customOrder             : 3,\r\n        // Text\r\n        text                    : \"\",\r\n        textAnimation           : \"\",\r\n        textAutoResize          : true,\r\n        textResizeFactor        : 0.5,\r\n        textColor               : \"#202020\",\r\n        textClass               : \"\",\r\n        textOrder               : 4,\r\n        // Progress\r\n        progress                : false,\r\n        progressAutoResize      : true,\r\n        progressResizeFactor    : 0.25,\r\n        progressColor           : \"#a0a0a0\",\r\n        progressClass           : \"\",\r\n        progressOrder           : 5,\r\n        progressSpeed           : 200,\r\n        progressMin             : 0,\r\n        progressMax             : 100,\r\n        // Sizing\r\n        size                    : 50,\r\n        maxSize                 : 120,\r\n        minSize                 : 20,\r\n        // Misc\r\n        direction               : \"column\",\r\n        fade                    : true,\r\n        _fadeValues             : [400, 200],\r\n        resizeInterval          : 50,\r\n        zIndex                  : 2147483647\r\n    };\r\n    \r\n    // Required CSS\r\n    var _css = {\r\n        overlay : {\r\n            \"box-sizing\"        : \"border-box\",\r\n            \"position\"          : \"relative\",\r\n            \"display\"           : \"flex\",\r\n            \"flex-wrap\"         : \"nowrap\",\r\n            \"align-items\"       : \"center\",\r\n            \"justify-content\"   : \"space-around\"\r\n        },\r\n        element : {\r\n            \"box-sizing\"        : \"border-box\",\r\n            \"overflow\"          : \"visible\",\r\n            \"flex\"              : \"0 0 auto\",\r\n            \"display\"           : \"flex\",\r\n            \"justify-content\"   : \"center\",\r\n            \"align-items\"       : \"center\"\r\n        },\r\n        element_svg : {\r\n            \"width\"             : \"100%\",\r\n            \"height\"            : \"100%\"\r\n        },\r\n        progress_wrapper: {\r\n            \"position\"          : \"absolute\",\r\n            \"top\"               : \"0\",\r\n            \"left\"              : \"0\",\r\n            \"width\"             : \"100%\",\r\n            \"height\"            : \"100%\"\r\n        },\r\n        progress_bar : {\r\n            \"position\"          : \"absolute\",\r\n            \"left\"              : \"0\"\r\n        }\r\n    };\r\n    \r\n    // Data Template\r\n    var _dataTemplate = {\r\n        \"count\"             : 0,\r\n        \"fadeOut\"           : undefined,\r\n        \"overlay\"           : undefined,\r\n        \"resizeIntervalId\"  : undefined,\r\n        \"text\"              : undefined,\r\n        \"progress\"          : undefined\r\n    };\r\n    \r\n    // Animations whitelist and defaults\r\n    var _animationsWhitelist = [\r\n        \"rotate_right\",\r\n        \"rotate_left\",\r\n        \"fadein\",\r\n        \"pulse\"\r\n    ];\r\n    var _animationsDefaults = {\r\n        name    : \"rotate_right\",\r\n        time    : \"2000ms\"\r\n    };\r\n    \r\n    \r\n    $.LoadingOverlaySetup = function(settings){\r\n        $.extend(true, _defaults, settings);\r\n    };\r\n    \r\n    $.LoadingOverlay = function(action, options){\r\n        switch (action.toLowerCase()) {\r\n            case \"show\":\r\n                var settings = $.extend(true, {}, _defaults, options);\r\n                Show(\"body\", settings);\r\n                break;\r\n                \r\n            case \"hide\":\r\n                Hide(\"body\", options);\r\n                break;\r\n                \r\n            case \"text\":\r\n                Text(\"body\", options);\r\n                break;\r\n                \r\n            case \"progress\":\r\n                Progress(\"body\", options);\r\n                break;\r\n        }\r\n    };\r\n    \r\n    $.fn.LoadingOverlay = function(action, options){\r\n        switch (action.toLowerCase()) {\r\n            case \"show\":\r\n                var settings = $.extend(true, {}, _defaults, options);\r\n                return this.each(function(){\r\n                    Show(this, settings);\r\n                });\r\n                \r\n            case \"hide\":\r\n                return this.each(function(){\r\n                    Hide(this, options);\r\n                });\r\n                \r\n            case \"text\":\r\n                return this.each(function(){\r\n                    Text(this, options);\r\n                });\r\n                \r\n            case \"progress\":\r\n                return this.each(function(){\r\n                    Progress(this, options);\r\n                });\r\n        }\r\n    };\r\n    \r\n    \r\n    function Show(container, settings){\r\n        container               = $(container);\r\n        settings.size           = _ParseSize(settings.size);\r\n        settings.maxSize        = parseInt(settings.maxSize, 10) || 0;\r\n        settings.minSize        = parseInt(settings.minSize, 10) || 0;\r\n        settings.resizeInterval = parseInt(settings.resizeInterval, 10) || 0;\r\n        \r\n        var data        = container.data(\"loadingoverlay\");\r\n        var wholePage   = container.is(\"body\");\r\n        if (typeof data === \"undefined\") {\r\n            // Init data\r\n            data = $.extend({}, _dataTemplate);\r\n            container.data(\"loadingoverlay\", data);\r\n            \r\n            // Overlay\r\n            data.overlay = $(\"<div>\", {\r\n                \"class\" : \"loadingoverlay\"\r\n            })\r\n            .css(_css.overlay)\r\n            .css(\"flex-direction\", settings.direction.toLowerCase() === \"row\" ? \"row\" : \"column\");\r\n            if (settings.backgroundClass) {\r\n                data.overlay.addClass(settings.backgroundClass);\r\n            } else {\r\n                data.overlay.css(\"background\", settings.background);\r\n            }\r\n            if (wholePage) {\r\n                data.overlay.css({\r\n                    \"position\"  : \"fixed\",\r\n                    \"top\"       : 0,\r\n                    \"left\"      : 0,\r\n                    \"width\"     : \"100%\",\r\n                    \"height\"    : \"100%\"\r\n                });\r\n            }\r\n            if (typeof settings.zIndex !== \"undefined\") data.overlay.css(\"z-index\", settings.zIndex);\r\n            \r\n            // Image\r\n            if (settings.image) {\r\n                var element = _CreateElement(data.overlay, settings.imageOrder, settings.imageAutoResize, settings.imageResizeFactor, settings.imageAnimation);\r\n                if (settings.image.slice(0, 4).toLowerCase() === \"<svg\" && settings.image.slice(-6).toLowerCase() === \"</svg>\") {\r\n                    // Inline SVG\r\n                    element.append(settings.image);\r\n                    element.children().css(_css.element_svg);\r\n                    if (!settings.imageClass && settings.imageColor) element.css(\"fill\", settings.imageColor);\r\n                } else if (settings.image.slice(-4).toLowerCase() === \".svg\" || settings.image.slice(0, 14).toLowerCase() === \"data:image/svg\") {\r\n                    // SVG file or base64-encoded SVG\r\n                    element.load(settings.image, function(){\r\n                        element.children().css(_css.element_svg);\r\n                    });\r\n                    if (!settings.imageClass && settings.imageColor) element.css(\"fill\", settings.imageColor);\r\n                } else {\r\n                    // Raster\r\n                    element.css({\r\n                        \"background-image\"      : \"url(\" + settings.image + \")\",\r\n                        \"background-position\"   : \"center\",\r\n                        \"background-repeat\"     : \"no-repeat\",\r\n                        \"background-size\"       : \"cover\"\r\n                    });\r\n                }\r\n                if (settings.imageClass) element.addClass(settings.imageClass);\r\n            }\r\n            \r\n            // Font Awesome\r\n            if (settings.fontawesome) {\r\n                var element = _CreateElement(data.overlay, settings.fontawesomeOrder, settings.fontawesomeAutoResize, settings.fontawesomeResizeFactor, settings.fontawesomeAnimation)\r\n                    .addClass(\"loadingoverlay_fa\");\r\n                $(\"<div>\", {\r\n                    \"class\" : settings.fontawesome\r\n                }).appendTo(element);\r\n                if (settings.fontawesomeColor) element.css(\"color\", settings.fontawesomeColor);\r\n            }\r\n            \r\n            // Custom\r\n            if (settings.custom) {\r\n                var element = _CreateElement(data.overlay, settings.customOrder, settings.customAutoResize, settings.customResizeFactor, settings.customAnimation)\r\n                    .append(settings.custom);\r\n            }\r\n            \r\n            // Text\r\n            if (settings.text) {\r\n                data.text = _CreateElement(data.overlay, settings.textOrder, settings.textAutoResize, settings.textResizeFactor, settings.textAnimation)\r\n                        .addClass(\"loadingoverlay_text\")\r\n                        .text(settings.text);\r\n                if (settings.textClass) {\r\n                    data.text.addClass(settings.textClass);\r\n                } else if (settings.textColor) {\r\n                    data.text.css(\"color\", settings.textColor);\r\n                }\r\n            }\r\n            \r\n            // Progress\r\n            if (settings.progress) {\r\n                var element = _CreateElement(data.overlay, settings.progressOrder, settings.progressAutoResize, settings.progressResizeFactor, false)\r\n                    .addClass(\"loadingoverlay_progress\");\r\n                var wrapper = $(\"<div>\")\r\n                    .css(_css.progress_wrapper)\r\n                    .appendTo(element);\r\n                data.progress = {\r\n                    bar     : $(\"<div>\").css(_css.progress_bar).appendTo(wrapper),\r\n                    min     : parseFloat(settings.progressMin),\r\n                    max     : parseFloat(settings.progressMax),\r\n                    speed   : parseInt(settings.progressSpeed, 10)\r\n                };\r\n                if (settings.progressClass) {\r\n                    data.progress.bar.addClass(settings.progressClass);\r\n                } else if (settings.progressColor) {\r\n                    data.progress.bar.css(\"background\", settings.progressColor);\r\n                } \r\n            }\r\n            \r\n            // Resize\r\n            _Resize(container, data.overlay, settings, wholePage, true);\r\n            if (settings.resizeInterval > 0) {\r\n                data.resizeIntervalId = setInterval(function(){\r\n                    _Resize(container, data.overlay, settings, wholePage, false);\r\n                }, settings.resizeInterval);\r\n            }\r\n            \r\n            // Fade\r\n            if (!settings.fade) {;\r\n                settings.fade = [0, 0];\r\n            } else if (settings.fade === true) {\r\n                settings.fade = _defaults._fadeValues;\r\n            } else if (typeof settings.fade === \"string\" || typeof settings.fade === \"number\") {\r\n                settings.fade = [settings.fade, settings.fade];\r\n            } else if ($.type(settings.fade) === \"array\" && settings.fade.length < 2) {\r\n                settings.fade = [settings.fade[0], settings.fade[0]];\r\n            }\r\n            settings.fade = [parseInt(settings.fade[0], 10), parseInt(settings.fade[1], 10)]\r\n            data.fadeOut  = settings.fade[1];\r\n            \r\n            // Show LoadingOverlay\r\n            data.overlay\r\n                    .hide()\r\n                    .appendTo(\"body\")\r\n                    .fadeIn(settings.fade[0]);\r\n        }\r\n        data.count++;\r\n    }\r\n    \r\n    function Hide(container, force){\r\n        container   = $(container);\r\n        var data    = container.data(\"loadingoverlay\");\r\n        if (typeof data === \"undefined\") return;\r\n        data.count--;\r\n        if (force || data.count <= 0) {\r\n            if (data.resizeIntervalId) clearInterval(data.resizeIntervalId);\r\n            data.overlay.fadeOut(data.fadeOut, function(){\r\n                $(this).remove();\r\n            });\r\n            container.removeData(\"loadingoverlay\");\r\n        }\r\n    }\r\n    \r\n    function Text(container, value){\r\n        container   = $(container);\r\n        var data    = container.data(\"loadingoverlay\");\r\n        if (typeof data === \"undefined\" || !data.text) return;\r\n        if (value === false) {\r\n            data.text.hide();\r\n        } else {\r\n            data.text\r\n                    .show()\r\n                    .text(value);\r\n        }\r\n    }\r\n    \r\n    function Progress(container, value){\r\n        container   = $(container);\r\n        var data    = container.data(\"loadingoverlay\");\r\n        if (typeof data === \"undefined\" || !data.progress) return;\r\n        if (value === false) {\r\n            data.progress.bar.hide();\r\n        } else {\r\n            var v = ((parseFloat(value) || 0) - data.progress.min) * 100 / (data.progress.max - data.progress.min);\r\n            if (v < 0)   v = 0;\r\n            if (v > 100) v = 100;\r\n            data.progress.bar\r\n                    .show()\r\n                    .animate({\r\n                        \"width\" : v + \"%\"\r\n                    }, data.progress.speed);\r\n        }\r\n    }\r\n    \r\n    \r\n    function _Resize(container, overlay, settings, wholePage, force){\r\n        // Overlay\r\n        if (!wholePage) {\r\n            var isFixed = container.css(\"position\") === \"fixed\";\r\n            var pos     = isFixed ? container[0].getBoundingClientRect() : container.offset();            \r\n            overlay.css({\r\n                \"position\"  : isFixed ? \"fixed\" : \"absolute\",\r\n                \"top\"       : pos.top + parseInt(container.css(\"border-top-width\"), 10),\r\n                \"left\"      : pos.left + parseInt(container.css(\"border-left-width\"), 10),\r\n                \"width\"     : container.innerWidth(),\r\n                \"height\"    : container.innerHeight()\r\n            });\r\n        }\r\n        \r\n        // Elements\r\n        if (settings.size) {\r\n            var c    = wholePage ? $(window) : container;\r\n            var size = settings.size.value;\r\n            if (!settings.size.fixed) {\r\n                size = Math.min(c.innerWidth(), c.innerHeight()) * size / 100;\r\n                if (settings.maxSize && size > settings.maxSize) size = settings.maxSize;\r\n                if (settings.minSize && size < settings.minSize) size = settings.minSize;\r\n            }\r\n            overlay.children(\".loadingoverlay_element\").each(function(){\r\n                var $this = $(this);\r\n                if (force || $this.data(\"loadingoverlay_autoresize\")) {\r\n                    var resizeFactor = $this.data(\"loadingoverlay_resizefactor\");\r\n                    if ($this.hasClass(\"loadingoverlay_fa\") || $this.hasClass(\"loadingoverlay_text\")) {\r\n                        $this.css(\"font-size\", (size * resizeFactor) + settings.size.units);\r\n                    } else if ($this.hasClass(\"loadingoverlay_progress\")) {\r\n                        container.data(\"loadingoverlay\").progress.bar.css({\r\n                           \"height\" : (size * resizeFactor) + settings.size.units,\r\n                           \"top\"    : $this.position().top \r\n                        }).css(\"top\", \"-=\" + (size * resizeFactor * 0.5) + settings.size.units);\r\n                    } else {\r\n                        $this.css({\r\n                            \"width\"  : (size * resizeFactor) + settings.size.units,\r\n                            \"height\" : (size * resizeFactor) + settings.size.units\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n    \r\n    \r\n    function _CreateElement(overlay, order, autoResize, resizeFactor, animation){\r\n        var element = $(\"<div>\", {\r\n            \"class\" : \"loadingoverlay_element\",\r\n            \"css\"   : {\r\n                \"order\" : order\r\n            }\r\n        })\r\n        .css(_css.element)\r\n        .data({\r\n            \"loadingoverlay_autoresize\"     : autoResize,\r\n            \"loadingoverlay_resizefactor\"   : resizeFactor\r\n        })\r\n        .appendTo(overlay);\r\n        \r\n        // Parse animation\r\n        if (animation === true) animation = _animationsDefaults.time + \" \" + _animationsDefaults.name;\r\n        if (typeof animation === \"string\") {\r\n            var animationName;\r\n            var animationTime;\r\n            var parts = animation.replace(/\\s\\s+/g, \" \").toLowerCase().split(\" \");\r\n            if (parts.length === 2 && _ValidateCssTime(parts[0]) && _ValidateAnimation(parts[1])) {\r\n                animationName = parts[1];\r\n                animationTime = parts[0];\r\n            } else if (parts.length === 2 && _ValidateCssTime(parts[1]) && _ValidateAnimation(parts[0])) {\r\n                animationName = parts[0];\r\n                animationTime = parts[1];\r\n            } else if (parts.length === 1 && _ValidateCssTime(parts[0])) {\r\n                animationName = _animationsDefaults.name;\r\n                animationTime = parts[0];\r\n            } else if (parts.length === 1 && _ValidateAnimation(parts[0])) {\r\n                animationName = parts[0];\r\n                animationTime = _animationsDefaults.time;\r\n            }\r\n            element.css({\r\n                \"animation-name\"            : \"loadingoverlay_animation__\" + animationName,\r\n                \"animation-duration\"        : animationTime,\r\n                \"animation-timing-function\" : \"linear\",\r\n                \"animation-iteration-count\" : \"infinite\"\r\n            });\r\n        }\r\n        \r\n        return element;\r\n    }\r\n    \r\n    function _ValidateCssTime(value){\r\n        return !isNaN(parseFloat(value)) && (value.slice(-1) === \"s\" || value.slice(-2) === \"ms\");\r\n    }\r\n    \r\n    function _ValidateAnimation(value){\r\n        return _animationsWhitelist.indexOf(value) > -1;\r\n    }\r\n    \r\n    \r\n    function _ParseSize(value){\r\n        if (!value || value < 0) {\r\n            return false;\r\n        } else if (typeof value === \"string\" && [\"vmin\", \"vmax\"].indexOf(value.slice(-4)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-4),\r\n                value   : value.slice(0, -4)\r\n            };\r\n        } else if (typeof value === \"string\" && [\"rem\"].indexOf(value.slice(-3)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-3),\r\n                value   : value.slice(0, -3)\r\n            };\r\n        } else if (typeof value === \"string\" && [\"px\", \"em\", \"cm\", \"mm\", \"in\", \"pt\", \"pc\", \"vh\", \"vw\"].indexOf(value.slice(-2)) > -1) {\r\n            return {\r\n                fixed   : true,\r\n                units   : value.slice(-2),\r\n                value   : value.slice(0, -2)\r\n            };\r\n        } else {\r\n            return {\r\n                fixed   : false,\r\n                units   : \"px\",\r\n                value   : parseFloat(value)\r\n            }; \r\n        }\r\n    }\r\n    \r\n    \r\n    $(function(){\r\n        $(\"head\").append([\r\n            \"<style>\",\r\n                \"@-webkit-keyframes loadingoverlay_animation__rotate_right {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(360deg);\",\r\n                            \"transform : rotate(360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__rotate_right {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(360deg);\",\r\n                            \"transform : rotate(360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__rotate_left {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(-360deg);\",\r\n                            \"transform : rotate(-360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__rotate_left {\",\r\n                  \"to {\",\r\n                    \"-webkit-transform : rotate(-360deg);\",\r\n                            \"transform : rotate(-360deg);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__fadein {\",\r\n                  \"0% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(0.1, 0.1);\",\r\n                            \"transform : scale(0.1, 0.1);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                            \"opacity   : 1;\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__fadein {\",\r\n                  \"0% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(0.1, 0.1);\",\r\n                            \"transform : scale(0.1, 0.1);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                            \"opacity   : 1;\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                            \"opacity   : 0;\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \r\n                \"@-webkit-keyframes loadingoverlay_animation__pulse {\",\r\n                  \"0% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                \"}\",\r\n                \"@keyframes loadingoverlay_animation__pulse {\",\r\n                  \"0% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                  \"50% {\",\r\n                    \"-webkit-transform : scale(1, 1);\",\r\n                            \"transform : scale(1, 1);\",\r\n                  \"}\",\r\n                  \"100% {\",\r\n                    \"-webkit-transform : scale(0, 0);\",\r\n                            \"transform : scale(0, 0);\",\r\n                  \"}\",\r\n                \"}\",\r\n            \"</style>\"\r\n        ].join(\" \"));\r\n    });\r\n    \r\n}));"]}