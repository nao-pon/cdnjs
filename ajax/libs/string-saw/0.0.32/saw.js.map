{"version":3,"sources":["webpack://saw/webpack/bootstrap","webpack://saw/./node_modules/escape-string-regexp/index.js","webpack://saw/./lib/Matches.js","webpack://saw/./lib/Saw.js","webpack://saw/./index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","matchOperatorsRe","str","TypeError","replace","Matches","matches","match","_classCallCheck","this","RegExp","global","length","slice","index","string","begin","end","results","forEach","item","Array","argumentsToArray","args","from","isArray","Saw","_context","String","clone","matchArray","arguments","saw","context","_contextToString","some","first","toBoolean","itemFromRight","replacement","map","separator","array","toArray","result","currentSeparator","func","thisArg","bind","reduce","previousValue","currentValue","split","reverse","join","sort","toUpperCase","toString","mapStringMethodAgainstContext","methodName","filter","_escapeStringRegexp2","default","trim","toFloat","isNaN","parseFloat","NaN","parseInt","props","indexesOf","shift","indexes","push","pattern","source","flags","exec","_Saw"],"mappings":"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","file":"saw.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","class Matches {\n\tconstructor (matches, match) {\n\t\tif (!matches) return null;\n\n\t\tthis.match = match;\n\n\t\tif (match instanceof RegExp && !match.global && match.length > 1) {\n\t\t\tthis.matches = matches.slice(1);\n\t\t} else {\n\t\t\tthis.matches = matches;\n\t\t}\n\n\t\tthis.length = this.matches.length;\n\t}\n\n\titem (index) {\n\t\tlet string;\n\n\t\tif (this.matches.length === 1) {\n\t\t\tstring = this.matches[0];\n\t\t} else if (this.matches.length > 1) {\n\t\t\tstring = this.matches[this.match.global ? index : index + 1];\n\t\t}\n\n\t\treturn string  || '';\n\t}\n\n\tslice (begin, end) {\n\t\tlet results = [];\n\n\t\tif (this.matches.length === 1 || this.match.global) {\n\t\t\tresults = this.matches.slice(begin, end);\n\t\t} else if (this.matches.length > 1) {\n\t\t\tresults = this.matches.slice(begin + 1, end);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\ttoArray (begin, end) {\n\t\tlet results = [];\n\n\t\tif (this.matches.length === 1 || this.match.global) {\n\t\t\tresults = this.matches.slice(0);\n\t\t} else if (this.matches.length > 1) {\n\t\t\tresults = this.matches.slice(1);\n\t\t}\n\n\t\treturn results;\n\t}\n\n\ttoString () {\n\t\tlet string = '';\n\n\t\tif (this.matches.length === 1) {\n\t\t\tstring = this.matches[0];\n\t\t} else {\n\t\t\tthis.matches.forEach(item => {\n\t\t\t\tif (item) {\n\t\t\t\t\tstring += item;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn string;\n\t}\n\n\tclone () {\n\t\tlet matches = new Matches(null)\n\t\tmatches.match = this.match;\n\t\tmatches.matches = Array.prototype.slice.call(this.matches);\n\t\tmatches.length = this.length;\n\t\treturn matches;\n\t}\n}\n\nmodule.exports = Matches;","import Matches from './Matches';\nimport escapeStringRegexp from 'escape-string-regexp';\n\nfunction argumentsToArray (args) {\n\tlet result;\n\n\tif (args.length > 1) {\n\t\tresult = Array.from(args);\n\t} else if (Array.isArray(args[0])) {\n\t\tresult = args[0];\n\t} else {\n\t\tresult = [args[0]];\n\t}\n\n\treturn result;\n}\n\nclass Saw {\n\tconstructor (object) {\n\t\tif (typeof object === 'number') {\n\t\t\tthis._context = String(object);\n\t\t} else if (Array.isArray(object)) {\n\t\t\tthis._context = object.slice(0);\n\t\t} else if (object instanceof Matches) {\n\t\t\tthis._context = object.clone();\n\t\t} else {\n\t\t\tthis._context = object;\n\t\t}\n\t}\n\n\tmatch (match) {\n\t\tlet matchArray = argumentsToArray(arguments),\n\t\t\tsaw = new Saw(this._context),\n\t\t\tcontext = this._contextToString(this._context);\n\n\t\tmatchArray.some(match => {\n\t\t\tlet matches = typeof match === 'function' ? match(context) : context.match(match);\n\n\t\t\tif (!matches) {\n\t\t\t\tsaw._context = '';\n\t\t\t} else {\n\t\t\t\tsaw._context = new Matches(matches, match);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\thas (match) {\n\t\treturn this.match(match).first().toBoolean();\n\t}\n\n\titem (index) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tif (saw._context instanceof Matches) {\n\t\t\tsaw._context = saw._context.item(index);\n\t\t} else if (Array.isArray(saw._context)) {\n\t\t\tsaw._context = saw._context[index] || '';\n\t\t}\n\n\t\treturn saw;\n\t}\n\n\titemFromRight (index) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tif (saw._context instanceof Matches || Array.isArray(saw._context)) {\n\t\t\tlet length = saw._context.length;\n\n\t\t\tindex = length - 1 - index;\n\t\t\tif (index >= 0) {\n\t\t\t\tsaw = saw.item(index);\n\t\t\t}\n\t\t}\n\n\t\treturn saw;\n\t}\n\n\tfirst (index) {\n\t\tlet saw = new Saw(this._context);\n\n\t\treturn saw.item(0);\n\t}\n\n\tlast () {\n\t\tlet saw = new Saw(this._context);\n\n\t\treturn saw.itemFromRight(0);\n\t}\n\n\treplace (match, replacement) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tfunction replace(string, matches, replacement) {\n\t\t\tmatches = Array.isArray(matches) ? matches : [matches];\n\n\t\t\tmatches.some(match => {\n\t\t\t\tif (string.match(match)) {\n\t\t\t\t\tstring = string.replace(match, replacement);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn string;\n\t\t}\n\n\t\tif (Array.isArray(saw._context)) {\n\t\t\tsaw._context = saw._context.map(string => {\n\t\t\t\treturn string.replace(match, replacement);\n\t\t\t});\n\t\t} else {\n\t\t\tsaw._context = replace(this._contextToString(this._context), match, replacement);\n\t\t}\n\n\t\treturn saw;\n\t}\n\n\tjoin (separator) {\n\t\tlet saw = new Saw(this._context),\n\t\t\tarray = saw.toArray();\n\n\t\tif (array.length) {\n\t\t\tlet result = '';\n\n\t\t\tarray.forEach((item, index, array) => {\n\t\t\t\tlet currentSeparator = typeof separator == 'function' ? separator(item, index, array) : separator || '';\n\t\t\t\tresult += item + (array.length - 1 == index ? '' : currentSeparator);\n\t\t\t});\n\n\t\t\tsaw._context = result;\n\t\t}\n\n\t\treturn saw;\n\t}\n\n\teach (func, thisArg) {\n\t\tlet saw = new Saw(this._context);\n\n\t\t// Note: adds array as a third param\n\t\tlet array = saw.toArray();\n\t\tarray.forEach((item, index) => {\n\t\t\tif (item) {\n\t\t\t\tfunc.bind(thisArg)(item, index, array);\n\t\t\t}\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\tmap (func, thisArg) {\n\t\tlet saw = new Saw(this._context);\n\n\t\t// Note: adds array as a third param\n\t\tlet array = saw.toArray();\n\t\tsaw._context = array.map((item, index) => {\n\t\t\treturn func.bind(thisArg)(item, index, array);\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\treduce (func, thisArg) {\n\t\tlet saw = new Saw(this._context);\n\n\t\t// Note: adds array as a third param\n\t\tlet array = saw.toArray();\n\t\tsaw._context = String(array.reduce((previousValue, currentValue, index, array) => {\n\t\t\treturn func.bind(thisArg)(previousValue, currentValue, index, array);\n\t\t}));\n\n\t\treturn saw;\n\t}\n\n\treverse () {\n\t\tlet saw = new Saw(this._context);\n\n\t\tif (typeof saw._context === 'string') {\n\t\t\tsaw._context = saw._context.split('').reverse().join('');\n\t\t} else if (Array.isArray(saw._context)) {\n\t\t\tsaw._context = saw._context.reverse();\n\t\t} else if (saw._context instanceof Matches) {\n\t\t\tlet array = saw.toArray();\n\t\t\tif (array.length === 1) {\n\t\t\t\tsaw._context = (array[0] || '').split('').reverse().join('');\n\t\t\t} else {\n\t\t\t\tsaw._context = saw.toArray().reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn saw;\n\t}\n\n\tsort (func) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tif (typeof saw._context === 'string') {\n\t\t\tsaw._context = saw._context.split('').sort(func).join('');\n\t\t} else if (Array.isArray(saw._context)) {\n\t\t\tsaw._context = saw._context.sort(func);\n\t\t} else if (saw._context instanceof Matches) {\n\t\t\tlet array = saw.toArray();\n\t\t\tif (array.length === 1) {\n\t\t\t\tsaw._context = (array[0] || '').split('').sort(func).join('');\n\t\t\t} else {\n\t\t\t\tsaw._context = saw.toArray().sort(func);\n\t\t\t}\n\t\t}\n\n\t\treturn saw;\n\t}\n\n\tprepend (string) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tlet array = saw.toArray();\n\t\tsaw._context = array.map(item => string + String(item));\n\n\t\treturn saw;\n\t}\n\n\tappend (string) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tlet array = saw.toArray();\n\t\tsaw._context = array.map(item => String(item) + string);\n\n\t\treturn saw;\n\t}\n\n\tcapitalize () {\n\t\tlet saw = new Saw(this._context);\n\n\t\tlet array = saw.toArray();\n\t\tsaw._context = array.map((item, index) => {\n\t\t\treturn new Saw(item).replace(/\\b./g, match => match.toUpperCase()).toString();\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\tlowerCase (func) {\n\t\treturn this.mapStringMethodAgainstContext('toLowerCase', func);\n\t}\n\n\tupperCase (func) {\n\t\treturn this.mapStringMethodAgainstContext('toUpperCase', func);\n\t}\n\n\tmapStringMethodAgainstContext (methodName, func) {\n\t\tlet saw = new Saw(this._context);\n\n\t\t// Note: adds array as a third param\n\t\tlet array = saw.toArray();\n\t\tsaw._context = array.map((item, index) => {\n\t\t\treturn item ? String(item)[methodName]() : item;\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\tfilter (match, thisArg) {\n\t\tlet saw = new Saw(this._context);\n\n\t\t// default filter\n\t\tmatch = match || (item => item);\n\n\t\t// Note: adds array as a third param\n\t\tlet array = saw.toArray();\n\t\tsaw._context = array.filter((item, index) => {\n\t\t\tif (typeof match === 'function') {\n\t\t\t\treturn match.bind(thisArg)(item, index, array);\n\t\t\t} else {\n\t\t\t\treturn item.match(match);\n\t\t\t}\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\tfilterNot (match, thisArg) {\n\t\tlet saw = new Saw(this._context);\n\n\t\t// Note: adds array as a third param\n\t\tlet array = saw.toArray();\n\t\tsaw._context = array.filter((item, index) => {\n\t\t\tif (typeof match === 'function') {\n\t\t\t\treturn !match.bind(thisArg)(item, index, array);\n\t\t\t} else {\n\t\t\t\treturn !item.match(match);\n\t\t\t}\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\tremove () {\n\t\tlet saw = new Saw(this._context);\n\n\t\tlet context = saw.toArray(),\n\t\t\tmatches = Array.from(arguments);\n\n\t\tcontext = context.map(context => {\n\t\t\tmatches.forEach(match => {\n\t\t\t\tmatch = typeof match === 'string' ? new RegExp(escapeStringRegexp(match), 'g') : match;\n\t\t\t\tcontext = context.replace(match, '');\n\t\t\t});\n\n\t\t\treturn context;\n\t\t});\n\n\t\tsaw._context = context;\n\n\t\treturn saw;\n\t}\n\n\ttrim () {\n\t\tlet saw = new Saw(this._context);\n\n\t\tlet context = Array.isArray(saw._context) ? saw._context : saw.toArray(saw._context);\n\n\t\tsaw._context = context.map(item => {\n\t\t\treturn item ? item.trim() : item;\n\t\t});\n\n\t\treturn saw;\n\t}\n\n\tsplit (separator) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tsaw._context = saw._contextToString(saw._context).split(separator);\n\n\t\treturn saw;\n\t}\n\n\tslice (begin, end) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tsaw._context = saw._context.slice(begin, end);\n\n\t\treturn saw;\n\t}\n\n\ttransform (func) {\n\t\tlet saw = new Saw(this._context);\n\n\t\tsaw._context = func(saw._context);\n\n\t\treturn saw;\n\t}\n\n\ttoString () {\n\t\treturn this._contextToString(this._context);\n\t}\n\n\ttoArray () {\n\t\tif (Array.isArray(this._context)) {\n\t\t\treturn Array.from(this._context);\n\t\t} else if (this._context instanceof Matches) {\n\t\t\treturn this._context.toArray();\n\t\t} else {\n\t\t\treturn this.toBoolean() ? [this._context] : [];\n\t\t}\n\t}\n\n\ttoNumber () {\n\t\tlet result = this.toFloat();\n\n\t\treturn isNaN(result) ? 0 : result;\n\t}\n\n\ttoFloat () {\n\t\tlet string = this.trim().toString(),\n\t\t\tresult = parseFloat(string, 10);\n\n\t\tif (isNaN(result) || string.length != String(result).length) {\n\t\t\treturn NaN;\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\ttoInt () {\n\t\tlet string = this.trim().toString(),\n\t\t\tresult = parseInt(string, 10);\n\n\t\tif (isNaN(result) || string.length != String(result).length) {\n\t\t\treturn NaN;\n\t\t} else {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\ttoBoolean () {\n\t\treturn !!this.toString();\n\t}\n\n\ttoObject () {\n\t\tlet props = argumentsToArray(arguments),\n\t\t\tarray = this.toArray(),\n\t\t\tobject = {};\n\n\t\tprops.forEach((value, index) => {\n\t\t\tif (typeof value !== 'undefined' && typeof array[index] != 'undefined') {\n\t\t\t\tobject[value] = array[index] ;\n\t\t\t}\n\t\t});\n\n\t\treturn object;\n\t}\n\n\tindexOf (match) {\n\t\tlet saw = new Saw(this._context),\n\t\t\tindex = this.indexesOf(match).shift();\n\n\t\treturn typeof index !== 'undefined' ? index : -1;\n\t}\n\n\tindexesOf (match) {\n\t\tlet saw = new Saw(this._context),\n\t\t\tindexes = [];\n\n\t\tif (Array.isArray(this._context)) {\n\t\t\tthis._context.forEach((item, i) => {\n\t\t\t\tif (String(item).match(match) || typeof match === 'function' && match(item)) {\n\t\t\t\t\tindexes.push(i);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (typeof this._context === 'string') {\n\t\t\tlet pattern = new RegExp(\n\t\t\t\tmatch instanceof RegExp ? match.source : escapeStringRegexp(match),\n\t\t\t\tmatch instanceof RegExp ? (String(match.flags).match(/g/) ? (match.flags || '') :(match.flags || '') + 'g') : 'g'\n\t\t\t);\n\n\t\t\twhile (match = pattern.exec(this._context)) {\n\t\t\t\tindexes.push(match.index);\n\t\t\t}\n\t\t}\n\n\t\treturn indexes;\n\t}\n\n\tlength () {\n\t\tif (!this._context) {\n\t\t\treturn 0;\n\t\t} else {\n\t\t\treturn this._context.length;\n\t\t}\n\t}\n\n\t_contextToString (context) {\n\t\tif (typeof context === 'string') {\n\t\t\treturn context;\n\t\t} else if (context instanceof Matches) {\n\t\t\treturn context.toString();\n\t\t} else if (Array.isArray(context)) {\n\t\t\treturn context.join('');\n\t\t}\n\n\t\treturn '';\n\t}\n}\n\nexport default Saw;","import Saw from './lib/Saw';\n\nexport default string => new Saw(string);"],"sourceRoot":""}