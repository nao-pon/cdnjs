(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["vConsole"] = factory();
	else
		root["vConsole"] = factory();
})(this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * A Front-End Console Panel for Mobile Webpage
	 *
	 * @version 1.0.0
	 * @author WeChat
	 */

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	__webpack_require__(1);

	/**
	 * initial
	 * @constructor
	 */
	function vConsole() {
		this.html = __webpack_require__(5);
		this.$dom = null;
		this.activedTab = 'default';
		this.console = {}; // store native console methods
		this.isReady = false;
		this.readyCallback = [];

		var self = this;
		bind(window, 'load', function () {
			self._render();
			self._bindEvent();
			self._mokeConsole();
			self._autoRun();
		});
	}

	/**
	 * render panel DOM
	 * @private
	 */
	vConsole.prototype._render = function () {
		var id = '#__vconsole';
		if (!$(id)) {
			var e = document.createElement('div');
			e.innerHTML = this.html;
			document.body.appendChild(e.children[0]);
		}
		this.$dom = $(id);
	};

	/**
	 * bind DOM events
	 * @private
	 */
	vConsole.prototype._bindEvent = function () {
		var self = this;

		// show console panel
		bind($('.vc-show'), 'click', function () {
			self.show();
		});

		// hide console panel
		bind($('.vc-hide'), 'click', function () {
			self.hide();
		});

		// hide console panel when tap background mask
		bind($('.vc-mask'), 'click', function (e) {
			if (e.target != $('.vc-mask')) {
				return false;
			}
			self.hide();
		});

		// clear a log box
		bind($('.vc-clear'), 'click', function () {
			self.clearLog(self.activedTab);
		});

		// show a log box
		bind($$('.vc-tab'), 'click', function (e) {
			var tabName = e.target.dataset.tab;
			if (tabName == self.activedTab) {
				return;
			}
			self.showTab(tabName);
		});
	};

	/**
	 * replace window.console with vConsole method
	 * @private
	 */
	vConsole.prototype._mokeConsole = function () {
		if (!window.console) {
			return;
		}
		var self = this;
		this.console.log = window.console.log;
		this.console.info = window.console.info;
		this.console.warn = window.console.warn;
		this.console.debug = window.console.debug;
		this.console.error = window.console.error;
		window.console.log = function () {
			self._printLog('default', 'log', arguments);
		};
		window.console.info = function () {
			self._printLog('default', 'info', arguments);
		};
		window.console.warn = function () {
			self._printLog('default', 'warn', arguments);
		};
		window.console.debug = function () {
			self._printLog('default', 'debug', arguments);
		};
		window.console.error = function () {
			self._printLog('default', 'error', arguments);
		};
	};

	/**
	 * auto run after initial
	 * @private
	 */
	vConsole.prototype._autoRun = function () {
		// print system info
		var ua = navigator.userAgent,
		    logMsg = [];

		// current time
		var d = getDate();
		this._printLog('system', 'info', ['日志时间:', d.year + '-' + d.month + '-' + d.day + ' ' + d.hour + ':' + d.minute + ':' + d.second + ' ' + d.millisecond]);

		// device & system
		logMsg = ['系统版本:', '不明'];
		var ipod = ua.match(/(ipod).*\s([\d_]+)/i),
		    ipad = ua.match(/(ipad).*\s([\d_]+)/i),
		    iphone = ua.match(/(iphone)\sos\s([\d_]+)/i),
		    android = ua.match(/(android)\s([\d\.]+)/i);
		if (android) {
			logMsg[1] = 'Android ' + android[2];
		} else if (iphone) {
			logMsg[1] = 'iPhone, iOS ' + iphone[2].replace(/_/g, '.');
		} else if (ipad) {
			logMsg[1] = 'iPad, iOS ' + ipad[2].replace(/_/g, '.');
		} else if (ipod) {
			logMsg[1] = 'iPod, iOS ' + ipod[2].replace(/_/g, '.');
		}
		this._printLog('system', 'info', logMsg);

		// wechat app version
		var version = ua.match(/MicroMessenger\/([\d\.]+)/i);
		logMsg = ['微信版本:', '不明'];
		if (version && version[1]) {
			logMsg[1] = version[1];
			this._printLog('system', 'info', logMsg);
		}

		// network type
		var network = ua.toLowerCase().match(/ nettype\/([^ ]+)/g);
		logMsg = ['网络类型:', '不明'];
		if (network && network[0]) {
			network = network[0].split('/');
			logMsg[1] = network[1];
			this._printLog('system', 'info', logMsg);
		}

		// HTTP protocol
		logMsg = ['网址协议:', '不明'];
		if (location.protocol == 'https:') {
			logMsg[1] = 'HTTPS';
		} else if (location.protocol == 'http:') {
			logMsg[1] = 'HTTP';
		} else {
			logMsg[1] = location.protocol.replace(':', '');
		}
		this._printLog('system', 'info', logMsg);

		// performance related
		window.addEventListener('load', function (e) {
			var performance = window.performance || window.msPerformance || window.webkitPerformance;

			// timing
			if (performance && performance.timing) {
				var t = performance.timing,
				    start = t.navigationStart;
				// this._printLog('system', 'debug', ['domainLookupEnd:', (t.domainLookupEnd - start)+'ms']);
				this._printLog('system', 'info', ['连接结束点:', t.connectEnd - start + 'ms']);
				this._printLog('system', 'info', ['回包结束点:', t.responseEnd - start + 'ms']);
				// this._printLog('system', 'debug', ['domComplete:', (t.domComplete - start)+'ms']);
				// this._printLog('system', 'info', ['beforeReqTime:', (t.requestStart - start)+'ms']);
				if (t.secureConnectionStart > 0) {
					this._printLog('system', 'info', ['ssl耗时:', t.connectEnd - t.secureConnectionStart + 'ms']);
				}
				// this._printLog('system', 'info', ['req&RespTime:', (t.responseEnd - t.requestStart)+'ms']);
				this._printLog('system', 'info', ['dom渲染耗时:', t.domComplete - t.domLoading + 'ms']);
			}
		});

		while (this.readyCallback.length > 0) {
			var callback = this.readyCallback.shift();
			callback && callback.call(this);
		}
		this.isReady = true;
	};

	/**
	 * print a log to log box
	 * @private
	 * @param	string	tabName
	 * @param	string	logType		log|info|debug|error|warn
	 * @param	array	logs
	 */
	vConsole.prototype._printLog = function (tabName, logType, logs) {
		if (!logs.length) {
			return;
		}

		// generate plain text for a line
		var line = '';
		for (var i = 0; i < logs.length; i++) {
			try {
				if (typeof logs[i] == 'function') {
					line += ' ' + logs[i].toString();
				} else if (typeof logs[i] == 'object') {
					line += ' ' + JSON.stringify(logs[i]);
				} else {
					line += ' ' + logs[i];
				}
			} catch (e) {
				line += ' [' + typeof logs[i] + ']';
			}
		}

		var $logbox = $('#__vc_log_' + tabName);
		var p = document.createElement('p');
		p.className = 'vc-item vc-item-' + logType;
		p.innerHTML = line;
		$('.vc-log', $logbox).appendChild(p);
		$('.vc-content').scrollTop = $('.vc-content').scrollHeight;

		// print to traditional console
		this.console[logType].apply(window.console, logs);
	};

	/**
	 * show a log box by tab name
	 * @public
	 */
	vConsole.prototype.showTab = function (tabName) {
		var $logbox = $('#__vc_log_' + tabName);
		// set actived status
		removeClass($$('.vc-tab', this.$dom), 'vc-actived');
		addClass($('#__vc_tab_' + tabName), 'vc-actived');
		removeClass($$('.vc-logbox'), 'vc-actived');
		addClass($logbox, 'vc-actived');
		// scroll to bottom
		$('.vc-content').scrollTop = $('.vc-content').scrollHeight;
		this.activedTab = tabName;
	};

	/**
	 * clear a log box by tab name
	 * @public
	 */
	vConsole.prototype.clearLog = function (tabName) {
		var $logbox = $('#__vc_log_' + tabName);
		$('.vc-log', $logbox).innerHTML = '';
	};

	/**
	 * show console panel
	 * @public
	 */
	vConsole.prototype.show = function () {
		addClass(this.$dom, 'vc-toggle');
	};

	/**
	 * hide console panel
	 * @public
	 */
	vConsole.prototype.hide = function () {
		removeClass(this.$dom, 'vc-toggle');
	};

	/**
	 * 
	 * @public
	 */
	vConsole.prototype.ready = function (callback) {
		if (!this.isReady) {
			this.readyCallback.push(callback);
		} else {
			callback.call(this);
		}
	};

	/****************************************************************
	 Utility Functions
	****************************************************************/

	/**
	 * get single element
	 * @private
	 */
	function $(selector, contextElement) {
		if (contextElement) {
			return contextElement.querySelector(selector);
		}
		return document.querySelector(selector);
	}

	/**
	 * get multiple elements
	 * @private
	 */
	function $$(selector, contextElement) {
		var nodeList,
		    list = [];
		if (contextElement) {
			nodeList = contextElement.querySelectorAll(selector);
		} else {
			nodeList = document.querySelectorAll(selector);
		}
		if (nodeList && nodeList.length > 0) {
			list = Array.prototype.slice.call(nodeList);
		}
		return list;
	}

	/**
	 * add className to an element
	 * @private
	 */
	function addClass($el, className) {
		if (!$el) {
			return;
		}
		if (Object.prototype.toString.call($el) != '[object Array]') {
			$el = [$el];
		}
		for (var i = 0; i < $el.length; i++) {
			$el[i].className += ' ' + className;
		}
	}

	/**
	 * remove className from an element
	 * @private
	 */
	function removeClass($el, className) {
		if (!$el) {
			return;
		}
		if (Object.prototype.toString.call($el) != '[object Array]') {
			$el = [$el];
		}
		for (var i = 0; i < $el.length; i++) {
			var arr = $el[i].className.split(' ');
			for (var j = 0; j < arr.length; j++) {
				if (arr[j] == className) {
					arr[j] = '';
				}
			}
			$el[i].className = arr.join(' ');
		}
	}

	/**
	 * bind an event to element(s)
	 * @private
	 * @param	array		$el			element object or array
	 * @param	string		eventType	name of the event
	 * @param	function	fn
	 * @param	boolean		useCapture
	 */
	function bind($el, eventType, fn, useCapture) {
		if (!$el) {
			return;
		}
		if (useCapture === undefined) {
			useCapture = false;
		}
		if (Object.prototype.toString.call($el) != '[object Array]') {
			$el = [$el];
		}
		for (var i = 0; i < $el.length; i++) {
			$el[i].addEventListener(eventType, fn, useCapture);
		}
	}

	/**
	 * get formatted date by timestamp
	 * @param	int		time
	 * @return	object
	 */
	function getDate(time) {
		var d = time > 0 ? new Date(time) : new Date();
		var day = d.getDay() < 10 ? '0' + d.getDay() : d.getDay(),
		    month = d.getMonth() < 9 ? '0' + (d.getMonth() + 1) : d.getMonth() + 1,
		    year = d.getFullYear(),
		    hour = d.getHours() < 10 ? '0' + d.getHours() : d.getHours(),
		    minute = d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes(),
		    second = d.getSeconds() < 10 ? '0' + d.getSeconds() : d.getSeconds(),
		    millisecond = d.getMilliseconds() < 10 ? '0' + d.getMilliseconds() : d.getMilliseconds();
		if (millisecond < 100) {
			millisecond = '0' + millisecond;
		}
		return {
			time: +d,
			year: year,
			month: month,
			day: day,
			hour: hour,
			minute: minute,
			second: second,
			millisecond: millisecond
		};
	}

	/**
	 * export
	 */
	exports['default'] = new vConsole();
	module.exports = exports['default'];

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	// style-loader: Adds some css to the DOM by adding a <style> tag

	// load the styles
	var content = __webpack_require__(2);
	if(typeof content === 'string') content = [[module.id, content, '']];
	// add the styles to the DOM
	var update = __webpack_require__(4)(content, {});
	if(content.locals) module.exports = content.locals;
	// Hot Module Replacement
	if(false) {
		// When the styles change, update the <style> tags
		if(!content.locals) {
			module.hot.accept("!!./../node_modules/css-loader/index.js!./../node_modules/less-loader/index.js!./vconsole.less", function() {
				var newContent = require("!!./../node_modules/css-loader/index.js!./../node_modules/less-loader/index.js!./vconsole.less");
				if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];
				update(newContent);
			});
		}
		// When the module is disposed, remove the <style> tags
		module.hot.dispose(function() { update(); });
	}

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(3)();
	// imports


	// module
	exports.push([module.id, "#__vconsole {\n  font-size: 13px;\n}\n#__vconsole .vc-show {\n  display: block;\n  position: fixed;\n  right: 10px;\n  bottom: 10px;\n  color: #FFF;\n  background-color: #04BE02;\n  line-height: 1;\n  font-size: 14px;\n  padding: 8px 16px;\n  z-index: 10000;\n  border-radius: 4px;\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.4);\n}\n#__vconsole .vc-mask {\n  display: none;\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0);\n  z-index: 10001;\n  transition: background .3s;\n}\n#__vconsole .vc-panel {\n  position: fixed;\n  min-height: 80%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 10002;\n  background-color: #EFEFF4;\n  -webkit-transition: -webkit-transform 0.3s;\n  transition: -webkit-transform 0.3s;\n  transition: transform .3s;\n  transition: transform 0.3s, -webkit-transform 0.3s;\n  -webkit-transform: translate(0, 100%);\n  transform: translate(0, 100%);\n}\n#__vconsole .vc-tabbar {\n  border-bottom: 1px solid #D9D9D9;\n  overflow: hidden;\n}\n#__vconsole .vc-tabbar .vc-tab {\n  float: left;\n  line-height: 39px;\n  padding: 0 15px;\n  border-right: 1px solid #D9D9D9;\n  text-decoration: none;\n  color: #000;\n}\n#__vconsole .vc-tabbar .vc-tab.vc-actived {\n  background-color: #FFF;\n}\n#__vconsole .vc-content {\n  background-color: #FFF;\n  overflow-x: hidden;\n  overflow-y: scroll;\n  position: absolute;\n  top: 40px;\n  left: 0;\n  right: 0;\n  bottom: 40px;\n  -webkit-overflow-scrolling: touch;\n}\n#__vconsole .vc-logbox {\n  display: none;\n  position: relative;\n  height: 100%;\n}\n#__vconsole .vc-logbox .vc-log:empty:before {\n  content: \"No log\";\n  color: #999;\n  position: absolute;\n  top: 45%;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  font-size: 15px;\n  text-align: center;\n}\n#__vconsole .vc-logbox .vc-item {\n  margin: 0;\n  padding: 6px 8px;\n  line-height: 1.3;\n  border-bottom: 1px solid #EEE;\n  word-break: break-word;\n}\n#__vconsole .vc-logbox .vc-item-info {\n  color: #6A5ACD;\n}\n#__vconsole .vc-logbox .vc-item-debug {\n  color: #DAA520;\n}\n#__vconsole .vc-logbox .vc-item-warn {\n  color: #FFA500;\n  border-color: #FFB930;\n  background-color: #FFFACD;\n}\n#__vconsole .vc-logbox .vc-item-error {\n  color: #DC143C;\n  border-color: #F4A0AB;\n  background-color: #FFE4E1;\n}\n#__vconsole .vc-logbox.vc-actived {\n  display: block;\n}\n#__vconsole .vc-toolbar {\n  border-top: 1px solid #D9D9D9;\n  line-height: 39px;\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  overflow: hidden;\n}\n#__vconsole .vc-toolbar .vc-tool {\n  text-decoration: none;\n  color: #000;\n  width: 50%;\n  float: left;\n  text-align: center;\n  position: relative;\n}\n#__vconsole .vc-toolbar .vc-tool:after {\n  content: \" \";\n  position: absolute;\n  top: 7px;\n  bottom: 7px;\n  right: 0;\n  border-left: 1px solid #D9D9D9;\n}\n#__vconsole .vc-toolbar .vc-tool-last:after {\n  border: none;\n}\n#__vconsole.vc-toggle .vc-show {\n  display: none;\n}\n#__vconsole.vc-toggle .vc-mask {\n  background: rgba(0, 0, 0, 0.6);\n  display: block;\n}\n#__vconsole.vc-toggle .vc-panel {\n  -webkit-transform: translate(0, 0);\n  transform: translate(0, 0);\n}\n", ""]);

	// exports


/***/ },
/* 3 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	"use strict";

	module.exports = function () {
		var list = [];

		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for (var i = 0; i < this.length; i++) {
				var item = this[i];
				if (item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};

		// import a list of modules into the list
		list.i = function (modules, mediaQuery) {
			if (typeof modules === "string") modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for (var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if (typeof id === "number") alreadyImportedModules[id] = true;
			}
			for (i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if (typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if (mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if (mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	var stylesInDom = {},
		memoize = function(fn) {
			var memo;
			return function () {
				if (typeof memo === "undefined") memo = fn.apply(this, arguments);
				return memo;
			};
		},
		isOldIE = memoize(function() {
			return /msie [6-9]\b/.test(window.navigator.userAgent.toLowerCase());
		}),
		getHeadElement = memoize(function () {
			return document.head || document.getElementsByTagName("head")[0];
		}),
		singletonElement = null,
		singletonCounter = 0,
		styleElementsInsertedAtTop = [];

	module.exports = function(list, options) {
		if(false) {
			if(typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
		}

		options = options || {};
		// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
		// tags it will allow on a page
		if (typeof options.singleton === "undefined") options.singleton = isOldIE();

		// By default, add <style> tags to the bottom of <head>.
		if (typeof options.insertAt === "undefined") options.insertAt = "bottom";

		var styles = listToStyles(list);
		addStylesToDom(styles, options);

		return function update(newList) {
			var mayRemove = [];
			for(var i = 0; i < styles.length; i++) {
				var item = styles[i];
				var domStyle = stylesInDom[item.id];
				domStyle.refs--;
				mayRemove.push(domStyle);
			}
			if(newList) {
				var newStyles = listToStyles(newList);
				addStylesToDom(newStyles, options);
			}
			for(var i = 0; i < mayRemove.length; i++) {
				var domStyle = mayRemove[i];
				if(domStyle.refs === 0) {
					for(var j = 0; j < domStyle.parts.length; j++)
						domStyle.parts[j]();
					delete stylesInDom[domStyle.id];
				}
			}
		};
	}

	function addStylesToDom(styles, options) {
		for(var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];
			if(domStyle) {
				domStyle.refs++;
				for(var j = 0; j < domStyle.parts.length; j++) {
					domStyle.parts[j](item.parts[j]);
				}
				for(; j < item.parts.length; j++) {
					domStyle.parts.push(addStyle(item.parts[j], options));
				}
			} else {
				var parts = [];
				for(var j = 0; j < item.parts.length; j++) {
					parts.push(addStyle(item.parts[j], options));
				}
				stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
			}
		}
	}

	function listToStyles(list) {
		var styles = [];
		var newStyles = {};
		for(var i = 0; i < list.length; i++) {
			var item = list[i];
			var id = item[0];
			var css = item[1];
			var media = item[2];
			var sourceMap = item[3];
			var part = {css: css, media: media, sourceMap: sourceMap};
			if(!newStyles[id])
				styles.push(newStyles[id] = {id: id, parts: [part]});
			else
				newStyles[id].parts.push(part);
		}
		return styles;
	}

	function insertStyleElement(options, styleElement) {
		var head = getHeadElement();
		var lastStyleElementInsertedAtTop = styleElementsInsertedAtTop[styleElementsInsertedAtTop.length - 1];
		if (options.insertAt === "top") {
			if(!lastStyleElementInsertedAtTop) {
				head.insertBefore(styleElement, head.firstChild);
			} else if(lastStyleElementInsertedAtTop.nextSibling) {
				head.insertBefore(styleElement, lastStyleElementInsertedAtTop.nextSibling);
			} else {
				head.appendChild(styleElement);
			}
			styleElementsInsertedAtTop.push(styleElement);
		} else if (options.insertAt === "bottom") {
			head.appendChild(styleElement);
		} else {
			throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");
		}
	}

	function removeStyleElement(styleElement) {
		styleElement.parentNode.removeChild(styleElement);
		var idx = styleElementsInsertedAtTop.indexOf(styleElement);
		if(idx >= 0) {
			styleElementsInsertedAtTop.splice(idx, 1);
		}
	}

	function createStyleElement(options) {
		var styleElement = document.createElement("style");
		styleElement.type = "text/css";
		insertStyleElement(options, styleElement);
		return styleElement;
	}

	function createLinkElement(options) {
		var linkElement = document.createElement("link");
		linkElement.rel = "stylesheet";
		insertStyleElement(options, linkElement);
		return linkElement;
	}

	function addStyle(obj, options) {
		var styleElement, update, remove;

		if (options.singleton) {
			var styleIndex = singletonCounter++;
			styleElement = singletonElement || (singletonElement = createStyleElement(options));
			update = applyToSingletonTag.bind(null, styleElement, styleIndex, false);
			remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);
		} else if(obj.sourceMap &&
			typeof URL === "function" &&
			typeof URL.createObjectURL === "function" &&
			typeof URL.revokeObjectURL === "function" &&
			typeof Blob === "function" &&
			typeof btoa === "function") {
			styleElement = createLinkElement(options);
			update = updateLink.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
				if(styleElement.href)
					URL.revokeObjectURL(styleElement.href);
			};
		} else {
			styleElement = createStyleElement(options);
			update = applyToTag.bind(null, styleElement);
			remove = function() {
				removeStyleElement(styleElement);
			};
		}

		update(obj);

		return function updateStyle(newObj) {
			if(newObj) {
				if(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)
					return;
				update(obj = newObj);
			} else {
				remove();
			}
		};
	}

	var replaceText = (function () {
		var textStore = [];

		return function (index, replacement) {
			textStore[index] = replacement;
			return textStore.filter(Boolean).join('\n');
		};
	})();

	function applyToSingletonTag(styleElement, index, remove, obj) {
		var css = remove ? "" : obj.css;

		if (styleElement.styleSheet) {
			styleElement.styleSheet.cssText = replaceText(index, css);
		} else {
			var cssNode = document.createTextNode(css);
			var childNodes = styleElement.childNodes;
			if (childNodes[index]) styleElement.removeChild(childNodes[index]);
			if (childNodes.length) {
				styleElement.insertBefore(cssNode, childNodes[index]);
			} else {
				styleElement.appendChild(cssNode);
			}
		}
	}

	function applyToTag(styleElement, obj) {
		var css = obj.css;
		var media = obj.media;

		if(media) {
			styleElement.setAttribute("media", media)
		}

		if(styleElement.styleSheet) {
			styleElement.styleSheet.cssText = css;
		} else {
			while(styleElement.firstChild) {
				styleElement.removeChild(styleElement.firstChild);
			}
			styleElement.appendChild(document.createTextNode(css));
		}
	}

	function updateLink(linkElement, obj) {
		var css = obj.css;
		var sourceMap = obj.sourceMap;

		if(sourceMap) {
			// http://stackoverflow.com/a/26603875
			css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
		}

		var blob = new Blob([css], { type: "text/css" });

		var oldSrc = linkElement.href;

		linkElement.href = URL.createObjectURL(blob);

		if(oldSrc)
			URL.revokeObjectURL(oldSrc);
	}


/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = "<!-- vConsole -->\n<div id=\"__vconsole\" class=\"\">\n\t<div class=\"vc-show\">面板</div>\n\t<div class=\"vc-mask\">\n\t</div>\n\t<div class=\"vc-panel\">\n\t\t<div class=\"vc-tabbar\">\n\t\t\t<a class=\"vc-tab vc-actived\" data-tab=\"default\" id=\"__vc_tab_default\" href=\"javascript:;\">日志</a>\n\t\t\t<a class=\"vc-tab\" data-tab=\"system\" id=\"__vc_tab_system\" href=\"javascript:;\">系统</a>\n\t\t</div>\n\t\t<div class=\"vc-content\">\n\t\t\t<div class=\"vc-logbox vc-actived\" id=\"__vc_log_default\">\n\t\t\t\t<div class=\"vc-log\"></div>\n\t\t\t</div>\n\t\t\t<div class=\"vc-logbox\" id=\"__vc_log_system\">\n\t\t\t\t<div class=\"vc-log\"></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"vc-toolbar\">\n\t\t\t<a href=\"javascript:;\" class=\"vc-tool vc-clear\">清空</a>\n\t\t\t<a href=\"javascript:;\" class=\"vc-tool vc-tool-last vc-hide\">隐藏</a>\n\t\t</div>\n\t</div>\n</div>\n<!-- /vConsole -->";

/***/ }
/******/ ])
});
;