{"version":3,"file":"zooming.min.js","sources":["../src/utils.js","../src/modules/handler.js","../src/modules/target.js","../src/modules/zooming.js","../src/options.js","../src/modules/overlay.js","../src/index.js"],"sourcesContent":["export const webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\nexport const cursor = {\n  default: 'auto',\n  zoomIn: `${webkitPrefix}zoom-in`,\n  zoomOut: `${webkitPrefix}zoom-out`,\n  grab: `${webkitPrefix}grab`,\n  move: 'move'\n}\n\nexport function listen(el, event, handler, add = true) {\n  const options = { passive: false }\n\n  if (add) {\n    el.addEventListener(event, handler, options)\n  } else {\n    el.removeEventListener(event, handler, options)\n  }\n}\n\nexport function loadImage(src, cb) {\n  if (src) {\n    const img = new Image()\n\n    img.onload = function onImageLoad() {\n      if (cb) cb(img)\n    }\n\n    img.src = src\n  }\n}\n\nexport function getOriginalSource(el) {\n  if (el.hasAttribute('data-original')) {\n    return el.getAttribute('data-original')\n  } else if (el.parentNode.tagName === 'A') {\n    return el.parentNode.getAttribute('href')\n  } else {\n    return null\n  }\n}\n\nexport function setStyle(el, styles, remember) {\n  checkTrans(styles)\n\n  let s = el.style\n  let original = {}\n\n  for (let key in styles) {\n    if (remember) {\n      original[key] = s[key] || ''\n    }\n\n    s[key] = styles[key]\n  }\n\n  return original\n}\n\nexport function bindAll(_this, that) {\n  const methods = Object.getOwnPropertyNames(Object.getPrototypeOf(_this))\n  methods.forEach(function bindOne(method) {\n    _this[method] = _this[method].bind(that)\n  })\n}\n\nconst trans = sniffTransition(document.createElement('div'))\nexport const transformCssProp = trans.transformCssProp\nexport const transEndEvent = trans.transEndEvent\n\nfunction checkTrans(styles) {\n  const { transitionProp, transformProp } = trans\n\n  if (styles.transition) {\n    const value = styles.transition\n    delete styles.transition\n    styles[transitionProp] = value\n  }\n\n  if (styles.transform) {\n    const value = styles.transform\n    delete styles.transform\n    styles[transformProp] = value\n  }\n}\n\nfunction sniffTransition(el) {\n  let res = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end = {\n    transition: 'transitionend',\n    mozTransition: 'transitionend',\n    webkitTransition: 'webkitTransitionEnd'\n  }\n\n  trans.some(function hasTransition(prop) {\n    if (el.style[prop] !== undefined) {\n      res.transitionProp = prop\n      res.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(function hasTransform(prop) {\n    if (el.style[prop] !== undefined) {\n      res.transformProp = prop\n      res.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return res\n}\n","import { bindAll } from '../utils'\n\nconst PRESS_DELAY = 200\n\nexport default {\n  init(instance) {\n    bindAll(this, instance)\n  },\n\n  click(e) {\n    e.preventDefault()\n\n    if (isPressingMetaKey(e)) {\n      return window.open(\n        this.target.srcOriginal || e.currentTarget.src,\n        '_blank'\n      )\n    } else {\n      if (this.shown) {\n        if (this.released) {\n          this.close()\n        } else {\n          this.release()\n        }\n      } else {\n        this.open(e.currentTarget)\n      }\n    }\n  },\n\n  scroll() {\n    const el =\n      document.documentElement || document.body.parentNode || document.body\n    const scrollLeft = window.pageXOffset || el.scrollLeft\n    const scrollTop = window.pageYOffset || el.scrollTop\n\n    if (this.lastScrollPosition === null) {\n      this.lastScrollPosition = {\n        x: scrollLeft,\n        y: scrollTop\n      }\n    }\n\n    const deltaX = this.lastScrollPosition.x - scrollLeft\n    const deltaY = this.lastScrollPosition.y - scrollTop\n    const threshold = this.options.scrollThreshold\n\n    if (Math.abs(deltaY) >= threshold || Math.abs(deltaX) >= threshold) {\n      this.lastScrollPosition = null\n      this.close()\n    }\n  },\n\n  keydown(e) {\n    if (isEscape(e)) {\n      if (this.released) {\n        this.close()\n      } else {\n        this.release(this.close)\n      }\n    }\n  },\n\n  mousedown(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    e.preventDefault()\n    const { clientX, clientY } = e\n\n    this.pressTimer = setTimeout(\n      function grabOnMouseDown() {\n        this.grab(clientX, clientY)\n      }.bind(this),\n      PRESS_DELAY\n    )\n  },\n\n  mousemove(e) {\n    if (this.released) return\n    this.move(e.clientX, e.clientY)\n  },\n\n  mouseup(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) {\n      this.close()\n    } else {\n      this.release()\n    }\n  },\n\n  touchstart(e) {\n    e.preventDefault()\n    const { clientX, clientY } = e.touches[0]\n\n    this.pressTimer = setTimeout(\n      function grabOnTouchStart() {\n        this.grab(clientX, clientY)\n      }.bind(this),\n      PRESS_DELAY\n    )\n  },\n\n  touchmove(e) {\n    if (this.released) return\n\n    const { clientX, clientY } = e.touches[0]\n    this.move(clientX, clientY)\n  },\n\n  touchend(e) {\n    if (isTouching(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) {\n      this.close()\n    } else {\n      this.release()\n    }\n  },\n\n  clickOverlay() {\n    this.close()\n  },\n\n  resizeWindow() {\n    this.close()\n  }\n}\n\nfunction isLeftButton(e) {\n  return e.button === 0\n}\n\nfunction isPressingMetaKey(e) {\n  return e.metaKey || e.ctrlKey\n}\n\nfunction isTouching(e) {\n  e.targetTouches.length > 0\n}\n\nfunction isEscape(e) {\n  const code = e.key || e.code\n  return code === 'Escape' || e.keyCode === 27\n}\n","import { cursor, setStyle, getOriginalSource, transformCssProp } from '../utils'\n\nexport default {\n  init(el, instance) {\n    this.el = el\n    this.instance = instance\n    this.srcThumbnail = this.el.getAttribute('src')\n    this.srcOriginal = getOriginalSource(this.el)\n    this.rect = el.getBoundingClientRect()\n    this.translate = null\n    this.scale = null\n    this.styleOpen = null\n    this.styleClose = null\n  },\n\n  zoomIn() {\n    const options = this.instance.options\n\n    this.translate = calculateTranslate(this.rect)\n    this.scale = calculateScale(\n      this.rect,\n      options.scaleBase,\n      options.customSize\n    )\n\n    this.styleOpen = {\n      position: 'relative',\n      zIndex: options.zIndex + 1,\n      cursor: options.enableGrab ? cursor.grab : cursor.zoomOut,\n      transition: `${transformCssProp}\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px)\n        scale(${this.scale.x},${this.scale.y})`,\n      height: `${this.rect.height}px`,\n      width: `${this.rect.width}px`\n    }\n\n    // Force layout update\n    this.el.offsetWidth\n\n    // Trigger transition\n    this.styleClose = setStyle(this.el, this.styleOpen, true)\n  },\n\n  zoomOut() {\n    // Force layout update\n    this.el.offsetWidth\n\n    setStyle(this.el, { transform: 'none' })\n  },\n\n  grab(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      cursor: cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  move(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      transition: transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  restoreCloseStyle() {\n    setStyle(this.el, this.styleClose)\n  },\n\n  restoreOpenStyle() {\n    setStyle(this.el, this.styleOpen)\n  },\n\n  upgradeSource() {\n    if (this.srcOriginal) {\n      const parentNode = this.el.parentNode\n      const temp = this.el.cloneNode(false)\n\n      // Force compute the hi-res image in DOM to prevent\n      // image flickering while updating src\n      temp.setAttribute('src', this.srcOriginal)\n      temp.style.position = 'fixed'\n      temp.style.visibility = 'hidden'\n      parentNode.appendChild(temp)\n\n      // Add delay to prevent Firefox from flickering\n      setTimeout(\n        function updateSrc() {\n          this.el.setAttribute('src', this.srcOriginal)\n          parentNode.removeChild(temp)\n        }.bind(this),\n        50\n      )\n    }\n  },\n\n  downgradeSource() {\n    if (this.srcOriginal) {\n      this.el.setAttribute('src', this.srcThumbnail)\n    }\n  }\n}\n\nfunction calculateTranslate(rect) {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + rect.width / 2,\n    y: rect.top + rect.height / 2\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nfunction calculateScale(rect, scaleBase, customSize) {\n  if (customSize) {\n    return {\n      x: customSize.width / rect.width,\n      y: customSize.height / rect.height\n    }\n  } else {\n    const targetHalfWidth = rect.width / 2\n    const targetHalfHeight = rect.height / 2\n    const windowCenter = getWindowCenter()\n\n    // The distance between target edge and window edge\n    const targetEdgeToWindowEdge = {\n      x: windowCenter.x - targetHalfWidth,\n      y: windowCenter.y - targetHalfHeight\n    }\n\n    const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n    const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n    // The additional scale is based on the smaller value of\n    // scaling horizontally and scaling vertically\n    const scale = scaleBase + Math.min(scaleHorizontally, scaleVertically)\n\n    return {\n      x: scale,\n      y: scale\n    }\n  }\n}\n\nfunction getWindowCenter() {\n  const docEl = document.documentElement\n  const windowWidth = Math.min(docEl.clientWidth, window.innerWidth)\n  const windowHeight = Math.min(docEl.clientHeight, window.innerHeight)\n\n  return {\n    x: windowWidth / 2,\n    y: windowHeight / 2\n  }\n}\n","import {\n  cursor,\n  listen,\n  loadImage,\n  transEndEvent,\n  getOriginalSource\n} from '../utils'\nimport DEFAULT_OPTIONS from '../options'\n\nimport handler from './handler'\nimport overlay from './overlay'\nimport target from './target'\n\n/**\n * Zooming instance.\n */\nexport default class Zooming {\n  /**\n   * @param {Object} [options] Update default options if provided.\n   */\n  constructor(options) {\n    this.target = Object.create(target)\n    this.overlay = Object.create(overlay)\n    this.handler = Object.create(handler)\n    this.body = document.body\n\n    this.shown = false\n    this.lock = false\n    this.released = true\n    this.lastScrollPosition = null\n    this.pressTimer = null\n\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options)\n    this.overlay.init(this)\n    this.handler.init(this)\n    this.listen(this.options.defaultZoomable)\n  }\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen(el) {\n    if (typeof el === 'string') {\n      const els = document.querySelectorAll(el)\n      let i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n    } else if (el.tagName === 'IMG') {\n      el.style.cursor = cursor.zoomIn\n      listen(el, 'click', this.handler.click)\n\n      if (this.options.preloadImage) {\n        loadImage(getOriginalSource(el))\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Update options or return current options if no argument is provided.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this|this.options}\n   */\n  config(options) {\n    if (options) {\n      Object.assign(this.options, options)\n      this.overlay.updateStyle(this.options)\n      return this\n    } else {\n      return this.options\n    }\n  }\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open(el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    const target = typeof el === 'string' ? document.querySelector(el) : el\n\n    if (target.tagName !== 'IMG') return\n\n    if (this.options.onBeforeOpen) {\n      this.options.onBeforeOpen(target)\n    }\n\n    this.target.init(target, this)\n\n    if (!this.options.preloadImage) {\n      loadImage(this.target.srcOriginal)\n    }\n\n    this.shown = true\n    this.lock = true\n\n    this.target.zoomIn()\n    this.overlay.insert()\n    this.overlay.fadeIn()\n\n    listen(document, 'scroll', this.handler.scroll)\n    listen(document, 'keydown', this.handler.keydown)\n\n    if (this.options.closeOnWindowResize) {\n      listen(window, 'resize', this.handler.resizeWindow)\n    }\n\n    const onOpenEnd = () => {\n      listen(target, transEndEvent, onOpenEnd, false)\n      this.lock = false\n      this.target.upgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.handler, true)\n      }\n\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onOpenEnd)\n\n    return this\n  }\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close(cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    if (this.options.onBeforeClose) {\n      this.options.onBeforeClose(target)\n    }\n\n    this.lock = true\n    this.body.style.cursor = cursor.default\n    this.overlay.fadeOut()\n    this.target.zoomOut()\n\n    listen(document, 'scroll', this.handler.scroll, false)\n    listen(document, 'keydown', this.handler.keydown, false)\n\n    if (this.options.closeOnWindowResize) {\n      listen(window, 'resize', this.handler.resizeWindow, false)\n    }\n\n    const onCloseEnd = () => {\n      listen(target, transEndEvent, onCloseEnd, false)\n\n      this.shown = false\n      this.lock = false\n\n      this.target.downgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.handler, false)\n      }\n\n      this.target.restoreCloseStyle()\n      this.overlay.remove()\n\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onCloseEnd)\n\n    return this\n  }\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.onGrab] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab(x, y, scaleExtra = this.options.scaleExtra, cb = this.options.onGrab) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    if (this.options.onBeforeGrab) {\n      this.options.onBeforeGrab(target)\n    }\n\n    this.released = false\n    this.target.grab(x, y, scaleExtra)\n\n    const onGrabEnd = () => {\n      listen(target, transEndEvent, onGrabEnd, false)\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onGrabEnd)\n\n    return this\n  }\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.onMove] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move(x, y, scaleExtra = this.options.scaleExtra, cb = this.options.onMove) {\n    if (!this.shown || this.lock) return\n\n    this.released = false\n    this.body.style.cursor = cursor.move\n    this.target.move(x, y, scaleExtra)\n\n    const target = this.target.el\n\n    const onMoveEnd = () => {\n      listen(target, transEndEvent, onMoveEnd, false)\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onMoveEnd)\n\n    return this\n  }\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release(cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    if (this.options.onBeforeRelease) {\n      this.options.onBeforeRelease(target)\n    }\n\n    this.lock = true\n    this.body.style.cursor = cursor.default\n    this.target.restoreOpenStyle()\n\n    const onReleaseEnd = () => {\n      listen(target, transEndEvent, onReleaseEnd, false)\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onReleaseEnd)\n\n    return this\n  }\n}\n\nfunction toggleGrabListeners(el, handler, add) {\n  const types = [\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'touchstart',\n    'touchmove',\n    'touchend'\n  ]\n\n  types.forEach(function toggleListener(type) {\n    listen(el, type, handler[type], add)\n  })\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * const options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: false,\n *   closeOnWindowResize: true,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   zIndex: 998,\n *   customSize: null,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeRelease: null\n * }\n */\nexport default {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload zoomable images.\n   * @type {boolean}\n   */\n  preloadImage: false,\n\n  /**\n   * Close the zoomed image when browser window is resized.\n   * @type {boolean}\n   */\n  closeOnWindowResize: true,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The additional scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * The z-index that the overlay will be added with.\n   * @type {number}\n   */\n  zIndex: 998,\n\n  /**\n   * Scale (zoom in) to given width and height. Ignore scaleBase if set.\n   * @type {Object}\n   * @example\n   * customSize: { width: 800, height: 400 }\n   */\n  customSize: null,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n    * Same as above, except fired when grabbed.\n    * @type {Function}\n    */\n  onGrab: null,\n\n  /**\n    * Same as above, except fired when moved.\n    * @type {Function}\n    */\n  onMove: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n","import { listen, setStyle } from '../utils'\n\nexport default {\n  init(instance) {\n    this.el = document.createElement('div')\n    this.instance = instance\n    this.parent = document.body\n\n    setStyle(this.el, {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0\n    })\n\n    this.updateStyle(instance.options)\n    listen(this.el, 'click', instance.handler.clickOverlay.bind(instance))\n  },\n\n  updateStyle(options) {\n    setStyle(this.el, {\n      zIndex: options.zIndex,\n      backgroundColor: options.bgColor,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n  },\n\n  insert() {\n    this.parent.appendChild(this.el)\n  },\n\n  remove() {\n    this.parent.removeChild(this.el)\n  },\n\n  fadeIn() {\n    this.el.offsetWidth\n    this.el.style.opacity = this.instance.options.bgOpacity\n  },\n\n  fadeOut() {\n    this.el.style.opacity = 0\n  }\n}\n","import { listen } from './utils'\nimport Zooming from './modules/zooming'\n\nlisten(document, 'DOMContentLoaded', function initZooming() {\n  new Zooming()\n})\n\nexport default Zooming\n"],"names":["listen","el","event","handler","add","options","passive","addEventListener","removeEventListener","loadImage","src","cb","img","Image","onload","getOriginalSource","hasAttribute","getAttribute","parentNode","tagName","setStyle","styles","remember","s","style","original","key","bindAll","_this","that","Object","getOwnPropertyNames","getPrototypeOf","forEach","method","bind","checkTrans","transitionProp","trans","transformProp","transition","value","transform","isLeftButton","e","button","isPressingMetaKey","metaKey","ctrlKey","isTouching","targetTouches","length","isEscape","code","keyCode","calculateTranslate","rect","windowCenter","getWindowCenter","targetCenter","left","width","top","height","x","y","calculateScale","scaleBase","customSize","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","scale","Math","min","docEl","document","documentElement","clientWidth","window","innerWidth","clientHeight","innerHeight","toggleGrabListeners","type","webkitPrefix","cursor","res","tform","end","some","prop","undefined","transEndEvent","transformCssProp","replace","createElement","instance","this","preventDefault","open","target","srcOriginal","currentTarget","shown","released","close","release","body","scrollLeft","pageXOffset","scrollTop","pageYOffset","lastScrollPosition","deltaX","deltaY","threshold","scrollThreshold","abs","clientX","clientY","pressTimer","setTimeout","grab","move","touches","parent","updateStyle","clickOverlay","zIndex","bgColor","transitionDuration","transitionTimingFunction","appendChild","removeChild","offsetWidth","opacity","bgOpacity","srcThumbnail","getBoundingClientRect","translate","styleOpen","styleClose","enableGrab","zoomOut","scaleExtra","dx","dy","temp","cloneNode","setAttribute","position","visibility","Zooming","create","overlay","lock","babelHelpers.extends","DEFAULT_OPTIONS","init","defaultZoomable","els","querySelectorAll","i","zoomIn","click","preloadImage","onOpen","querySelector","onBeforeOpen","insert","fadeIn","scroll","keydown","closeOnWindowResize","resizeWindow","onOpenEnd","upgradeSource","onClose","onBeforeClose","default","fadeOut","onCloseEnd","downgradeSource","_this2","restoreCloseStyle","remove","onGrab","onBeforeGrab","onGrabEnd","onMove","onMoveEnd","onRelease","onBeforeRelease","restoreOpenStyle","onReleaseEnd"],"mappings":"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"}