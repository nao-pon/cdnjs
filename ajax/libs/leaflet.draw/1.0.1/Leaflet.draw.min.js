!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("L")):"function"==typeof define&&define.amd?define("Leaflet.Draw",["L"],e):"object"==typeof exports?exports["Leaflet.Draw"]=e(require("L")):t["Leaflet.Draw"]=e(t.L)}("undefined"!=typeof self?self:this,function(t){return function(t){var e={};function o(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=t,o.c=e,o.d=function(t,e,i){o.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:i})},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="",o(o.s=1)}([function(e,o){e.exports=t},function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=o(0),n=o.n(i),a=o(2),r=o(3);n.a.Map.mergeOptions({drawToolsClass:r.a,draw:!1,drawOptions:{}}),n.a.Map.addInitHook(function(){this.whenReady(function(){this.options.editable||console.error("Leaflet.Draw >= 2.0 requires Leaflet.Editable to function.");const t=this,e=function(){if(t.options.draw){if(t.options.drawOptions&&0!==Object.keys(t.options.drawOptions).length){const e=t.options.drawOptions.version;(e<=2||void 0===e)&&(t.options.drawOptions=a.a.convertLegacyOptions(t.options.drawOptions))}t.drawTools=new t.options.drawToolsClass(t,t.options.drawOptions)}};t.editTools?e():setTimeout(e,5)})})},function(t,e,o){"use strict";var i=o(0);o.n(i).a.DrawUtilities={defaultPrecision:{km:2,ha:2,m:0,mi:2,ac:2,yd:0,ft:0,nm:2},convertLegacyOptions:function(t){const e={version:2,draw:{},edit:{}};for(const o in t)if(o)for(const i in e[o].toolbar={},e[o].handlers={},t[o].handlers)i?(e[o].toolbar[i]=t[o].handlers[i],e[o].handlers[i]=!0):e[o].handlers[i]=!1;return e},geodesicArea:function(t){let e,o,i=t.length,n=0,a=Math.PI/180;if(i>2){for(let r=0;r<i;r++)e=t[r],n+=((o=t[(r+1)%i]).lng-e.lng)*a*(2+Math.sin(e.lat*a)+Math.sin(o.lat*a));n=6378137*n*6378137/2}return Math.abs(n)},formattedNumber:function(t,e){let o=parseFloat(t).toFixed(e),i=L.drawLocal.format&&L.drawLocal.format.numeric,n=i&&i.delimiters,a=n&&n.thousands,r=n&&n.decimal;if(a||r){const t=o.split(".");o=a?t[0].replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1"+a):t[0],r=r||".",t.length>1&&(o=o+r+t[1])}return o},readableArea:function(t,e,o){let i,n;if(o=L.Util.extend({},this.defaultPrecision,o),e){n=["ha","m"];let a=typeof e;"string"===a?n=[e]:"boolean"!==a&&(n=e),i=t>=1e6&&-1!==n.indexOf("km")?this.formattedNumber(1e-6*t,o.km)+" km²":t>=1e4&&-1!==n.indexOf("ha")?this.formattedNumber(1e-4*t,o.ha)+" ha":this.formattedNumber(t,o.m)+" m²"}else i=(t/=.836127)>=3097600?this.formattedNumber(t/3097600,o.mi)+" mi²":t>=4840?this.formattedNumber(t/4840,o.ac)+" acres":this.formattedNumber(t,o.yd)+" yd²";return i},readableDistance:function(t,e,o,i,n){let a,r;switch(n=L.Util.extend({},this.defaultPrecision,n),r=e?"string"==typeof e?e:"metric":o?"feet":i?"nauticalMile":"yards"){case"metric":a=t>1e3?this.formattedNumber(t/1e3,n.km)+" km":this.formattedNumber(t,n.m)+" m";break;case"feet":t*=3.28083,a=this.formattedNumber(t,n.ft)+" ft";break;case"nauticalMile":t*=.53996,a=this.formattedNumber(t/1e3,n.nm)+" nm";break;case"yards":default:a=(t*=1.09361)>1760?this.formattedNumber(t/1760,n.mi)+" miles":this.formattedNumber(t,n.yd)+" yd"}return a}},e.a=L.DrawUtilities},function(t,e,o){"use strict";var i=o(4),n=o(0),a=o.n(n),r=o(5);o.n(r);a.a.Draw=a.a.Evented.extend({options:{version:2,controls:!0,draw:{toolbar:{actions:{title:"Cancel drawing",text:"Cancel"},finish:{title:"Finish drawing",text:"Finish"},undo:{title:"Delete last point drawn",text:"Delete last point"},circle:{tooltips:{create:"Draw a circle",start:"Click and drag to draw circle."},radius:"Radius"},marker:{tooltips:{create:"Draw a marker",start:"Click map to place marker."}},polygon:{tooltips:{create:"Draw a polygon",start:"Click to start drawing shape.",cont:"Click to continue drawing shape.",end:"Click first point to close this shape."}},polyline:{error:"<strong>Error:</strong> shape edges cannot cross!",tooltips:{create:"Create a polyline",start:"Click to start drawing line.",cont:"Click to continue drawing line.",end:"Click last point to finish line."}},rectangle:{tooltips:{create:"Create a rectangle",start:"Click and drag to draw rectangle."}},simpleshape:{tooltips:{create:"I' not enabled right now, but I should do something about that",end:"Release mouse to finish drawing."}}},handlers:{circle:!0,marker:!0,polygon:!0,polyline:!0,rectangle:!0,simpleshape:!1}},edit:{toolbar:{actions:{save:{title:"Save changes.",text:"Save"},cancel:{title:"Cancel editing, discards all changes.",text:"Cancel"},clearAll:{title:"clear all layers.",text:"Clear All"}},buttons:{edit:"Edit layers.",editDisabled:"No layers to edit.",remove:"Delete layers.",removeDisabled:"No layers to delete."},edit:{tooltip:{text:"Drag handles, or marker to edit feature.",subtext:"Click cancel to undo changes."}},remove:{tooltip:{text:"Click on a feature to remove"}}},handlers:{edit:!0,remove:!0}}},controls:[],tooltip:null,initialize:function(t,e){a.a.setOptions(this,e),this._lastZIndex=this.options.zIndex,this.map=t,this.options.controls&&this.createConfiguredControls()},createConfiguredControls:function(){for(let[t,e]of Object.entries(this.options.draw.handlers))if(e){const e=t.charAt(0).toUpperCase()+t.slice(1).toLowerCase(),o="start"+e;if("function"==typeof this.map.editTools[o]){let n=this.options.draw.toolbar[t].tooltips,r={callback:this.map.editTools[o],handlerType:t,tooltipMessages:n||{}};this.controls.push(a.a["New"+e+"Control"]=i.a.extend({options:r}))}else console.error("Geometry type "+e+" does not exist as an edit tool.")}this.controls.forEach(function(t){this.map.addControl(new t)},this)}}),e.a=a.a.Draw},function(t,e,o){"use strict";var i=o(0),n=o.n(i);n.a.DrawControl=n.a.Control.extend({options:{position:"topright",callback:null,handlerType:null,html:null,tooltipMessages:{}},tooltip:null,onAdd:function(){const t=this._container=n.a.DomUtil.create("div","leaflet-control leaflet-bar leaflet-draw-toolbar leaflet-draw-control"),e=this.options.handlerType+" leaflet-draw-"+this.options.handlerType,o=n.a.DomUtil.create("a",e,t);return o.href="#",o.title=this.options.tooltipMessages.create?this.options.tooltipMessages.create:"",o.innerHTML=this.options.html,this.hookEvents(o),t},onRemove:function(){this.getContainer().off()},openTooltip:function(t,e,o){return t instanceof n.a.Tooltip||(this.tooltip=new n.a.Tooltip({direction:"right",permanent:!0,offset:[15,0]}),this.tooltip.setContent(t),n.a.setOptions(this.tooltip,o)),e&&this.tooltip.setLatLng(e),this._map.hasLayer(this.tooltip)?this:(this._map.openTooltip(this.tooltip,[0,0]),this._map.on("mousemove",this._updateTooltipLocation,this),this)},closeTooltip:function(){this._map.closeTooltip(this.tooltip),this._map.off("mousemove",this._updateTooltipLocation,this)},_updateTooltipLocation:function(t){this.tooltip._setPosition(t.layerPoint)},hookEvents:function(t){n.a.DomEvent.on(t,"click",n.a.DomEvent.stop).on(t,"click",function(){window.LAYER=this.options.callback.call(this._map.editTools),this.openTooltip(this.options.tooltipMessages.start)},this)}}),e.a=n.a.DrawControl},function(t,e){}])});