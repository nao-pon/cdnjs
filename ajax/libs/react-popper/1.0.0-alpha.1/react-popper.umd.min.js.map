{"version":3,"file":"react-popper.umd.min.js","sources":["../src/index.js"],"sourcesContent":["// @flow\nimport { Component, type Node } from 'react';\nimport PopperJS from 'popper.js';\n\ntype PopperInstance = {\n  destroy: () => void,\n};\n\ntype Placement =\n  | 'auto-start'\n  | 'auto'\n  | 'auto-end'\n  | 'top-start'\n  | 'top'\n  | 'top-end'\n  | 'right-start'\n  | 'right'\n  | 'right-end'\n  | 'bottom-end'\n  | 'bottom'\n  | 'bottom-start'\n  | 'left-end'\n  | 'left'\n  | 'left-start';\n\ntype getRefFn = (?HTMLElement) => void;\ntype Style = { [string]: string | number };\n\ntype RenderProp = ({|\n  referenceProps: {\n    getRef: getRefFn,\n  },\n  popperProps: {\n    getRef: getRefFn,\n    style: Style,\n    placement: ?Placement,\n  },\n  arrowProps: {\n    getRef: getRefFn,\n    style: Style,\n    placement: ?Placement,\n  },\n|}) => Node;\n\ntype PopperProps = {\n  modifiers?: {\n    [string]: { order: number, enabled: boolean, fn: Object => Object },\n  },\n  placement?: Placement,\n  eventsEnabled?: boolean,\n  referenceElement?: {\n    +getBoundingClientRect: () => {\n      width: number,\n      height: number,\n      top: number,\n      right: number,\n      bottom: number,\n      left: number,\n    },\n    +clientWidth: number,\n    +clientHeight: number,\n  },\n  children: RenderProp,\n};\n\ntype PopperState = {\n  referenceNode: ?HTMLElement,\n  popperNode: ?HTMLElement,\n  arrowNode: ?HTMLElement,\n  popperInstance: ?PopperInstance,\n  data: ?Object,\n};\n\nconst initialStyle = {\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n};\n\nconst initialArrowStyle = {};\n\nexport default class Popper extends Component<PopperProps, PopperState> {\n  static defaultProps = {\n    placement: 'bottom',\n    eventsEnabled: true,\n    referenceElement: undefined,\n  };\n\n  state = {\n    referenceNode: undefined,\n    popperNode: undefined,\n    arrowNode: undefined,\n    popperInstance: undefined,\n    data: undefined,\n  };\n\n  setReferenceNode = (referenceNode: ?HTMLElement) =>\n    this.setState({ referenceNode });\n  setPopperNode = (popperNode: ?HTMLElement) => this.setState({ popperNode });\n  setArrowNode = (arrowNode: ?HTMLElement) => this.setState({ arrowNode });\n\n  updateStateModifier = {\n    enabled: true,\n    order: 900,\n    fn: (data: Object) => {\n      this.setState({ data });\n      return data;\n    },\n  };\n\n  getOptions = () => ({\n    placement: this.props.placement,\n    eventsEnabled: this.props.eventsEnabled,\n    modifiers: {\n      ...this.props.modifiers,\n      arrow: {\n        enabled: !!this.state.arrowNode,\n        element: this.state.arrowNode,\n      },\n      applyStyle: { enabled: false },\n      updateStateModifier: this.updateStateModifier,\n    },\n  });\n\n  getPopperStyle = () =>\n    !this.state.popperNode || !this.state.data\n      ? initialStyle\n      : {\n          position: this.state.data.offsets.popper.position,\n          ...this.state.data.styles,\n        };\n\n  getPopperPlacement = () =>\n    !this.state.data ? undefined : this.state.data.placement;\n\n  getArrowStyle = () =>\n    !this.state.arrowNode || !this.state.data\n      ? initialArrowStyle\n      : this.state.data.arrowStyles;\n\n  initPopperInstance = () => {\n    const { referenceElement } = this.props;\n    const { referenceNode, popperNode, popperInstance } = this.state;\n    const reference = referenceElement || referenceNode;\n    if (reference && popperNode && !popperInstance) {\n      const popperInstance = new PopperJS(\n        reference,\n        popperNode,\n        this.getOptions()\n      );\n      this.setState({ popperInstance });\n      return true;\n    }\n    return false;\n  };\n\n  destroyPopperInstance = (callback: () => boolean) => {\n    if (this.state.popperInstance) {\n      this.state.popperInstance.destroy();\n    }\n    this.setState({ popperInstance: undefined }, callback);\n  };\n\n  updatePopperInstance = () => {\n    if (this.state.popperInstance) {\n      this.destroyPopperInstance(() => this.initPopperInstance());\n    }\n  };\n\n  componentDidUpdate(prevProps: PopperProps, prevState: PopperState) {\n    // If needed, initialize the Popper.js instance\n    // it will return `true` if it initialized a new instance, or `false` otherwise\n    // if it returns `false`, we make sure Popper props haven't changed, and update\n    // the Popper.js instance if needed\n    if (!this.initPopperInstance()) {\n      // If the Popper.js options have changed, update the instance (destroy + create)\n      if (\n        this.props.placement !== prevProps.placement ||\n        this.props.eventsEnabled !== prevProps.eventsEnabled ||\n        this.state.referenceNode !== prevState.referenceNode ||\n        this.state.arrowNode !== prevState.arrowNode ||\n        this.state.popperNode !== prevState.popperNode ||\n        this.props.referenceElement !== prevProps.referenceElement\n      ) {\n        this.updatePopperInstance();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.popperInstance) {\n      this.state.popperInstance.destroy();\n    }\n  }\n\n  render() {\n    return this.props.children({\n      referenceProps: {\n        getRef: this.setReferenceNode,\n      },\n      popperProps: {\n        getRef: this.setPopperNode,\n        style: this.getPopperStyle(),\n        placement: this.getPopperPlacement(),\n      },\n      arrowProps: {\n        getRef: this.setArrowNode,\n        style: this.getArrowStyle(),\n        placement: this.getPopperPlacement(),\n      },\n    });\n  }\n}\n\nconst placements = PopperJS.placements;\nexport { placements };\n"],"names":["initialStyle","initialArrowStyle","Popper","state","setReferenceNode","setState","referenceNode","setPopperNode","popperNode","setArrowNode","arrowNode","updateStateModifier","data","getOptions","props","placement","eventsEnabled","modifiers","enabled","getPopperStyle","offsets","popper","position","styles","getPopperPlacement","getArrowStyle","arrowStyles","initPopperInstance","referenceElement","popperInstance","reference","destroyPopperInstance","destroy","updatePopperInstance","prevProps","prevState","children","Component","defaultProps","placements","PopperJS"],"mappings":"6xCAyEMA,EAAe,UACT,UADS,SAEV,CAFU,eAGJ,MAHI,EAMfC,EAAoB,GAELC,0NAOnBC,MAAQ,qBAAA,kBAAA,iBAAA,sBAAA,YAAA,IAQRC,iBAAmB,kBACjB,GAAKC,QAAL,CAAc,CAAEC,eAAF,CAAd,KACFC,cAAgB,kBAA8B,GAAKF,QAAL,CAAc,CAAEG,YAAF,CAAd,KAC9CC,aAAe,kBAA6B,GAAKJ,QAAL,CAAc,CAAEK,WAAF,CAAd,KAE5CC,oBAAsB,WAAA,OAEb,GAFa,IAGhB,WAAkB,UACfN,SAAS,CAAEO,MAAF,KAJI,IAStBC,WAAa,iBAAO,WACP,EAAKC,KAAL,CAAWC,SADJ,eAEH,EAAKD,KAAL,CAAWE,aAFR,gBAIb,EAAKF,KAAL,CAAWG,iBACP,SACI,CAAC,CAAC,EAAKd,KAAL,CAAWO,SADjB,SAEI,EAAKP,KAAL,CAAWO,SAFf,aAIK,CAAEQ,UAAF,sBACS,EAAKP,qBAVV,KAcpBQ,eAAiB,iBACd,GAAKhB,KAAL,CAAWK,UAAZ,EAA2B,EAAKL,KAAL,CAAWS,IAAtC,aAGgB,EAAKT,KAAL,CAAWS,IAAX,CAAgBQ,OAAhB,CAAwBC,MAAxB,CAA+BC,UACtC,EAAKnB,KAAL,CAAWS,IAAX,CAAgBW,OAJzB,MAOFC,mBAAqB,iBAClB,GAAKrB,KAAL,CAAWS,IAAZ,CAA+B,EAAKT,KAAL,CAAWS,IAAX,CAAgBG,SAA/C,WAEFU,cAAgB,iBACb,GAAKtB,KAAL,CAAWO,SAAZ,EAA0B,EAAKP,KAAL,CAAWS,IAArC,CAEI,EAAKT,KAAL,CAAWS,IAAX,CAAgBc,WAFpB,MAIFC,mBAAqB,UAAM,IACjBC,GAAqB,EAAKd,KAAL,CAArBc,mBAC8C,EAAKzB,MAAnDG,IAAAA,cAAeE,IAAAA,WAAYqB,IAAAA,eAC7BC,EAAYF,QACdE,MAA2B,GAAiB,IACxCD,GAAiB,UAGrB,EAAKhB,UAAL,EAHqB,WAKlBR,SAAS,CAAEwB,gBAAF,kBAMlBE,sBAAwB,WAA6B,CAC/C,EAAK5B,KAAL,CAAW0B,cADoC,IAE5C1B,MAAM0B,eAAeG,SAFuB,GAI9C3B,SAAS,CAAEwB,qBAAF,QAGhBI,qBAAuB,UAAM,CACvB,EAAK9B,KAAL,CAAW0B,cADY,IAEpBE,sBAAsB,iBAAM,GAAKJ,kBAAL,EAAjC,8EAI+D,CAK5D,KAAKA,kBAAL,EAL4D,EAQ7D,KAAKb,KAAL,CAAWC,SAAX,GAAyBmB,EAAUnB,SAAnC,EACA,KAAKD,KAAL,CAAWE,aAAX,GAA6BkB,EAAUlB,aADvC,EAEA,KAAKb,KAAL,CAAWG,aAAX,GAA6B6B,EAAU7B,aAFvC,EAGA,KAAKH,KAAL,CAAWO,SAAX,GAAyByB,EAAUzB,SAHnC,EAIA,KAAKP,KAAL,CAAWK,UAAX,GAA0B2B,EAAU3B,UAJpC,EAKA,KAAKM,KAAL,CAAWc,gBAAX,GAAgCM,EAAUN,gBAbmB,OAexDK,qEAKY,CACjB,KAAK9B,KAAL,CAAW0B,cADM,OAEd1B,MAAM0B,eAAeG,0CAIrB,OACA,MAAKlB,KAAL,CAAWsB,QAAX,CAAoB,gBACT,QACN,KAAKhC,gBADC,CADS,aAIZ,QACH,KAAKG,aADF,OAEJ,KAAKY,cAAL,EAFI,WAGA,KAAKK,kBAAL,EAHA,CAJY,YASb,QACF,KAAKf,YADH,OAEH,KAAKgB,aAAL,EAFG,WAGC,KAAKD,kBAAL,EAHD,CATa,CAApB,SAnHyBa,aAAfnC,EACZoC,YADYpC,CACG,WACT,QADS,iBAAA,wBAAA,KAoIlBqC,GAAaC,EAASD"}