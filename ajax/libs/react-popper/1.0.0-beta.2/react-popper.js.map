{"version":3,"file":"react-popper.js","sources":["../src/Manager.js","../src/utils.js","../src/Popper.js","../src/Reference.js"],"sourcesContent":["// @flow\nimport React, { Component, type Node } from \"react\";\nimport createContext, { type Context } from \"create-react-context\";\n\nexport const ManagerContext: Context<{\n  getReferenceRef?: (?HTMLElement) => void,\n  referenceNode?: ?HTMLElement,\n}> = createContext({ getRefeferenceRef: undefined, referenceNode: undefined });\n\ntype ManagerProps = {\n  children: Node,\n};\ntype ManagerState = {\n  context: {\n    getReferenceRef?: (?HTMLElement) => void,\n    referenceNode?: ?HTMLElement,\n  },\n};\n\nexport default class Manager extends Component<ManagerProps, ManagerState> {\n  constructor() {\n    super();\n    this.state = {\n      context: {\n        getReferenceRef: this.getReferenceRef,\n        referenceNode: undefined,\n      },\n    };\n  }\n\n  getReferenceRef = (referenceNode: ?HTMLElement) =>\n    this.setState(({ context }) => ({\n      context: { ...context, referenceNode },\n    }));\n\n  render() {\n    return (\n      <ManagerContext.Provider value={this.state.context}>\n        {this.props.children}\n      </ManagerContext.Provider>\n    );\n  }\n}\n","// @flow\n\n// Takes an argument and if it's an array, returns the first item in the array,\n// otherwise returns the argument. Used for Preact compatibility.\nexport const unwrapArray = (arg: *): * => (Array.isArray(arg) ? arg[0] : arg);\n","// @flow\nimport React, { Component, type Node } from 'react';\nimport PopperJS, {\n  type Placement,\n  type Instance as PopperJS$Instance,\n  type Data,\n  type ReferenceObject,\n} from 'popper.js';\nimport { ManagerContext } from './Manager';\nimport { unwrapArray } from './utils';\n\ntype getRefFn = (?HTMLElement) => void;\ntype Style = Object;\n\ntype ReferenceElement = ReferenceObject | HTMLElement | null;\n\ntype RenderProp = ({|\n  ref: getRefFn,\n  style: Style,\n  placement: ?Placement,\n  arrowProps: {\n    ref: getRefFn,\n    style: Style,\n  },\n\n  \n|}) => Node;\n\ntype PopperProps = {\n  modifiers?: {\n    [string]: { order: number, enabled: boolean, fn: Object => Object },\n  },\n  placement?: Placement,\n  eventsEnabled?: boolean,\n  referenceElement?: ReferenceElement,\n  children: RenderProp,\n};\n\ntype PopperState = {\n  popperNode: ?HTMLElement,\n  arrowNode: ?HTMLElement,\n  popperInstance: ?PopperJS$Instance,\n  data: ?Data,\n};\n\nconst initialStyle = {\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n};\n\nconst initialArrowStyle = {};\n\nexport class Popper extends Component<PopperProps, PopperState> {\n  static defaultProps = {\n    placement: 'bottom',\n    eventsEnabled: true,\n    referenceElement: undefined,\n  };\n\n  state = {\n    popperNode: undefined,\n    arrowNode: undefined,\n    popperInstance: undefined,\n    data: undefined,\n  };\n\n  setPopperNode = (popperNode: ?HTMLElement) => this.setState({ popperNode });\n  setArrowNode = (arrowNode: ?HTMLElement) => this.setState({ arrowNode });\n\n  updateStateModifier = {\n    enabled: true,\n    order: 900,\n    fn: (data: Object) => {\n      this.setState({ data });\n      return data;\n    },\n  };\n\n  getOptions = () => ({\n    placement: this.props.placement,\n    eventsEnabled: this.props.eventsEnabled,\n    modifiers: {\n      ...this.props.modifiers,\n      arrow: {\n        enabled: !!this.state.arrowNode,\n        element: this.state.arrowNode,\n      },\n      applyStyle: { enabled: false },\n      updateStateModifier: this.updateStateModifier,\n    },\n  });\n\n  getPopperStyle = () =>\n    !this.state.popperNode || !this.state.data\n      ? initialStyle\n      : {\n          position: this.state.data.offsets.popper.position,\n          ...this.state.data.styles,\n        };\n\n  getPopperPlacement = () =>\n    !this.state.data ? undefined : this.state.data.placement;\n\n  getArrowStyle = () =>\n    !this.state.arrowNode || !this.state.data\n      ? initialArrowStyle\n      : this.state.data.arrowStyles;\n\n  initPopperInstance = () => {\n    const { referenceElement } = this.props;\n    const { popperNode, popperInstance } = this.state;\n    if (referenceElement && popperNode && !popperInstance) {\n      const popperInstance = new PopperJS(\n        referenceElement,\n        popperNode,\n        this.getOptions()\n      );\n      this.setState({ popperInstance });\n      return true;\n    }\n    return false;\n  };\n\n  destroyPopperInstance = (callback: () => boolean) => {\n    if (this.state.popperInstance) {\n      this.state.popperInstance.destroy();\n    }\n    this.setState({ popperInstance: undefined }, callback);\n  };\n\n  updatePopperInstance = () => {\n    if (this.state.popperInstance) {\n      this.destroyPopperInstance(() => this.initPopperInstance());\n    }\n  };\n\n  componentDidUpdate(prevProps: PopperProps, prevState: PopperState) {\n    // If needed, initialize the Popper.js instance\n    // it will return `true` if it initialized a new instance, or `false` otherwise\n    // if it returns `false`, we make sure Popper props haven't changed, and update\n    // the Popper.js instance if needed\n    if (!this.initPopperInstance()) {\n      // If the Popper.js options have changed, update the instance (destroy + create)\n      if (\n        this.props.placement !== prevProps.placement ||\n        this.props.eventsEnabled !== prevProps.eventsEnabled ||\n        this.state.arrowNode !== prevState.arrowNode ||\n        this.state.popperNode !== prevState.popperNode ||\n        this.props.referenceElement !== prevProps.referenceElement\n      ) {\n        this.updatePopperInstance();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.popperInstance) {\n      this.state.popperInstance.destroy();\n    }\n  }\n\n  render() {\n    return unwrapArray(this.props.children)({\n      ref: this.setPopperNode,\n      style: this.getPopperStyle(),\n      placement: this.getPopperPlacement(),\n      arrowProps: {\n        ref: this.setArrowNode,\n        style: this.getArrowStyle(),\n      },\n    });\n  }\n}\n\nconst placements = PopperJS.placements;\nexport { placements };\n\nexport default (props: PopperProps) => (\n  <ManagerContext.Consumer>\n    {({ referenceNode }) => (\n      <Popper referenceElement={referenceNode} {...props} />\n    )}\n  </ManagerContext.Consumer>\n);\n","// @flow\nimport React, { type Node } from \"react\";\nimport warning from \"warning\";\nimport { ManagerContext } from \"./Manager\";\nimport { unwrapArray } from \"./utils\";\n\ntype ReferenceProps = {\n  children: ({ ref: (?HTMLElement) => void }) => Node,\n};\nexport default ({ children }: ReferenceProps) => (\n  <ManagerContext.Consumer>\n    {({ getReferenceRef }) => {\n      warning(\n        getReferenceRef,\n        \"`Reference` should not be used outside of a `Manager` component.\"\n      );\n      return unwrapArray(children)({ ref: getReferenceRef });\n    }}\n  </ManagerContext.Consumer>\n);\n"],"names":["ManagerContext","createContext","getRefeferenceRef","undefined","referenceNode","Manager","getReferenceRef","setState","context","state","React","props","children","Component","unwrapArray","arg","Array","isArray","initialStyle","position","opacity","pointerEvents","initialArrowStyle","Popper","popperNode","arrowNode","popperInstance","data","setPopperNode","setArrowNode","updateStateModifier","enabled","order","fn","getOptions","placement","eventsEnabled","modifiers","arrow","element","applyStyle","getPopperStyle","offsets","popper","styles","getPopperPlacement","getArrowStyle","arrowStyles","initPopperInstance","referenceElement","PopperJS","destroyPopperInstance","callback","destroy","updatePopperInstance","prevProps","prevState","ref","style","arrowProps","defaultProps","placements","warning"],"mappings":"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"}