{"version":3,"file":"react-popper.umd.min.js","sources":["../src/Manager.js","../src/utils.js","../src/Popper.js","../src/Reference.js"],"sourcesContent":["// @flow\nimport React, { Component, type Node } from 'react';\nimport createContext, { type Context } from 'create-react-context';\n\nexport const ManagerContext: Context<{\n  getReferenceRef?: (?HTMLElement) => void,\n  referenceNode?: ?HTMLElement,\n}> = createContext({});\n\ntype ManagerProps = {\n  children: Node,\n};\ntype ManagerState = {\n  referenceNode?: ?HTMLElement,\n};\n\nexport default class Manager extends Component<ManagerProps, ManagerState> {\n  state = {};\n\n  getReferenceRef = (referenceNode: ?HTMLElement) =>\n    this.setState({ referenceNode });\n\n  render() {\n    return (\n      <ManagerContext.Provider\n        value={{\n          referenceNode: this.state.referenceNode,\n          getReferenceRef: this.getReferenceRef,\n        }}\n      >\n        {this.props.children}\n      </ManagerContext.Provider>\n    );\n  }\n}\n","// @flow\n\n// Takes an argument and if it's an array, returns the first item in the array,\n// otherwise returns the argument. Used for Preact compatibility.\nexport const unwrapArray = (arg: *): * => (Array.isArray(arg) ? arg[0] : arg);\n","// @flow\nimport React, { Component, type Node } from 'react';\nimport PopperJS, {\n  type Placement,\n  type Instance as PopperJS$Instance,\n  type ReferenceObject,\n} from 'popper.js';\nimport { ManagerContext } from './Manager';\nimport { unwrapArray } from './utils';\n\ntype getRefFn = (?HTMLElement) => void;\ntype Style = Object;\n\ntype ReferenceElement = ReferenceObject | HTMLElement | null;\n\ntype RenderProp = ({|\n  ref: getRefFn,\n  style: Style,\n  placement: ?Placement,\n  arrowProps: {\n    ref: getRefFn,\n    style: Style,\n  },\n|}) => Node;\n\ntype PopperProps = {\n  modifiers?: {\n    [string]: { order: number, enabled: boolean, fn: Object => Object },\n  },\n  placement?: Placement,\n  eventsEnabled?: boolean,\n  referenceElement?: ReferenceElement,\n  children: RenderProp,\n};\n\ntype PopperState = {\n  popperNode: ?HTMLElement,\n  arrowNode: ?HTMLElement,\n  popperInstance: ?PopperJS$Instance,\n  data: ?Object,\n};\n\nconst initialStyle = {\n  position: 'absolute',\n  opacity: 0,\n  pointerEvents: 'none',\n};\n\nconst initialArrowStyle = {};\n\nexport class Popper extends Component<PopperProps, PopperState> {\n  static defaultProps = {\n    placement: 'bottom',\n    eventsEnabled: true,\n    referenceElement: undefined,\n  };\n\n  state = {\n    popperNode: undefined,\n    arrowNode: undefined,\n    popperInstance: undefined,\n    data: undefined,\n  };\n\n  setPopperNode = (popperNode: ?HTMLElement) => this.setState({ popperNode });\n  setArrowNode = (arrowNode: ?HTMLElement) => this.setState({ arrowNode });\n\n  updateStateModifier = {\n    enabled: true,\n    order: 900,\n    fn: (data: Object) => {\n      this.setState({ data });\n      return data;\n    },\n  };\n\n  getOptions = () => ({\n    placement: this.props.placement,\n    eventsEnabled: this.props.eventsEnabled,\n    modifiers: {\n      ...this.props.modifiers,\n      arrow: {\n        enabled: !!this.state.arrowNode,\n        element: this.state.arrowNode,\n      },\n      applyStyle: { enabled: false },\n      updateStateModifier: this.updateStateModifier,\n    },\n  });\n\n  getPopperStyle = () =>\n    !this.state.popperNode || !this.state.data\n      ? initialStyle\n      : {\n          position: this.state.data.offsets.popper.position,\n          ...this.state.data.styles,\n        };\n\n  getPopperPlacement = () =>\n    !this.state.data ? undefined : this.state.data.placement;\n\n  getArrowStyle = () =>\n    !this.state.arrowNode || !this.state.data\n      ? initialArrowStyle\n      : this.state.data.arrowStyles;\n\n  initPopperInstance = () => {\n    const { referenceElement } = this.props;\n    const { popperNode, popperInstance } = this.state;\n    if (referenceElement && popperNode && !popperInstance) {\n      const popperInstance = new PopperJS(\n        referenceElement,\n        popperNode,\n        this.getOptions()\n      );\n      this.setState({ popperInstance });\n      return true;\n    }\n    return false;\n  };\n\n  destroyPopperInstance = (callback: () => boolean) => {\n    if (this.state.popperInstance) {\n      this.state.popperInstance.destroy();\n    }\n    this.setState({ popperInstance: undefined }, callback);\n  };\n\n  updatePopperInstance = () => {\n    if (this.state.popperInstance) {\n      this.destroyPopperInstance(() => this.initPopperInstance());\n    }\n  };\n\n  componentDidUpdate(prevProps: PopperProps, prevState: PopperState) {\n    // If needed, initialize the Popper.js instance\n    // it will return `true` if it initialized a new instance, or `false` otherwise\n    // if it returns `false`, we make sure Popper props haven't changed, and update\n    // the Popper.js instance if needed\n    if (!this.initPopperInstance()) {\n      // If the Popper.js options have changed, update the instance (destroy + create)\n      if (\n        this.props.placement !== prevProps.placement ||\n        this.props.eventsEnabled !== prevProps.eventsEnabled ||\n        this.state.arrowNode !== prevState.arrowNode ||\n        this.state.popperNode !== prevState.popperNode ||\n        this.props.referenceElement !== prevProps.referenceElement\n      ) {\n        this.updatePopperInstance();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.popperInstance) {\n      this.state.popperInstance.destroy();\n    }\n  }\n\n  render() {\n    return unwrapArray(this.props.children)({\n      ref: this.setPopperNode,\n      style: this.getPopperStyle(),\n      placement: this.getPopperPlacement(),\n      arrowProps: {\n        ref: this.setArrowNode,\n        style: this.getArrowStyle(),\n      },\n    });\n  }\n}\n\nconst placements = PopperJS.placements;\nexport { placements };\n\nexport default (props: PopperProps) => (\n  <ManagerContext.Consumer>\n    {({ referenceNode }) => (\n      <Popper referenceElement={referenceNode} {...props} />\n    )}\n  </ManagerContext.Consumer>\n);\n","// @flow\nimport React, { type Node } from 'react';\nimport { ManagerContext } from './Manager';\nimport { unwrapArray } from './utils';\n\ntype ReferenceProps = {\n  children: ({ ref: (?HTMLElement) => void }) => Node,\n};\nexport default ({ children }: ReferenceProps) => (\n  <ManagerContext.Consumer>\n    {({ getReferenceRef }) => unwrapArray(children)({ ref: getReferenceRef })}\n  </ManagerContext.Consumer>\n);\n"],"names":["ManagerContext","createContext","Manager","state","getReferenceRef","setState","referenceNode","React","Provider","props","children","Component","unwrapArray","Array","isArray","arg","initialStyle","initialArrowStyle","Popper","setPopperNode","popperNode","setArrowNode","arrowNode","updateStateModifier","data","getOptions","placement","eventsEnabled","modifiers","enabled","getPopperStyle","offsets","popper","position","styles","getPopperPlacement","getArrowStyle","arrowStyles","initPopperInstance","referenceElement","popperInstance","destroyPopperInstance","destroy","updatePopperInstance","prevProps","prevState","defaultProps","placements","PopperJS","Consumer","ref"],"mappings":"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"}