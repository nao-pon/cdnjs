{"version":3,"sources":["jquery.data-remote.js"],"names":[],"mappings":"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","file":"jquery.data-remote.js","sourcesContent":["/**\n * jquery-data-remote\n *\n * @see {@link https://github.com/codfish/jquery-data-remote}\n *\n * jQuery plugin that simplifies the common task of making api/remote requests\n * and injecting the response to the page. Optionally leverages js templating\n * engines. Inpired by ruby on rails' [unobtrusive scripting adapter for\n * jQuery](https://github.com/rails/jquery-ujs).\n */\n$.fn.dataRemote = function dataRemote(opts = {}) {\n  /**\n   * Default success callback for ajax requests.\n   *\n   * Handles hiding of loader image, debugging (if option is set),\n   * and handling the ajax requests' response (levering handlebars if option\n   * is set or handlebars template is found inside the target element).\n   *\n   * @param {jQuery} $target - jquery object containing the target element for the ajax response\n   * @param {object} options - plugin options set during instantiation\n   * @param {object} response - data response from the ajax request\n   */\n  function successCallback($target, options, response) {\n    let source;\n    let template;\n    let html;\n    let $template;\n\n    $target.find('.loader-image').hide();\n\n    if (options.debug) {\n      $.fn.dataRemote.debug($target, response);\n    }\n\n    // Use handlebars if the option is set to true *or* if a handlebars template is found\n    if (\n      (options.handlebars !== false && typeof Handlebars !== 'undefined') ||\n      $target.find('[type=\"text/x-handlebars-template\"]').length\n    ) {\n      $template = options.template\n        ? $(options.template)\n        : $target.find('[type=\"text/x-handlebars-template\"]');\n      source = $template.html();\n      template = Handlebars.compile(source);\n      html = template(response);\n    } else {\n      html = response;\n    }\n\n    // use proper jQuery method based on append option\n    // if append == true, append results to target element,\n    // or else replace inner html with results\n    const validPlacements = ['html', 'append', 'prepend', 'after', 'before'];\n    const placementIsValid = validPlacements.indexOf(options.placement) !== -1;\n    if (!placementIsValid) {\n      return;\n    }\n    $target[options.placement](html);\n  }\n\n  /**\n   * Default error callback for ajax requests.\n   *\n   * Hides the loader image, triggers debugging if it's turned on.\n   *\n   * @param {jQuery} $target - Target element for the ajax response.\n   * @param {object} options - Plugin options set during instantiation.\n   * @param {object} response - Data response from the ajax request.\n   * @param {string} error - Textual portion of the HTTP status, i.e. \"Not Found\"\n   * @return {undefined}\n   */\n  function errorCallback($target, options, response, error) {\n    $target.find('.loader-image').hide();\n\n    if (options.debug) {\n      $.fn.dataRemote.debug($target, response, error);\n    }\n  }\n\n  /**\n   * Private helper method for debounce\n   *\n   * @param {function} func - Function to debounce.\n   * @param {integer} wait - Amount of time to wait between events.\n   * @param {boolean} [immediate] - Cancels the debounce if True.\n   * @return {function} Function with debounce wrapper.\n   */\n  function debounce(func, wait, immediate) {\n    let timeout;\n    return function debounced(...args) {\n      const context = this;\n      const later = function later() {\n        timeout = null;\n        if (!immediate) func.apply(context, args);\n      };\n      const callNow = immediate && !timeout;\n      clearTimeout(timeout);\n      timeout = setTimeout(later, wait);\n      if (callNow) func.apply(context, args);\n    };\n  }\n\n  /**\n   * Private helper method for making the ajax request.\n   *\n   * @param {object} url - request url.\n   * @param {object} settings - additional settings for the request.\n   * @param {jQuery} settings.element - jQuery object containing the current data remote element.\n   * @param {object} settings.options - data remote plugin options for current data remote element.\n   * @param {jQuery} settings.$target - jQuery object where response will be injected.\n   * @return {undefined}\n   */\n  function fetch(url, settings) {\n    const $element = settings.element;\n    const $target = settings.target;\n    const { options } = settings;\n\n    // display loader image while retrieving content\n    if (options.loaderImg) {\n      $target.prepend(`\n        <div class=\"loader-image\" style=\"clear: both;\">\n          <img src=\"${options.loaderImg}\" alt=\"Loading...\">\n        </div>`);\n    }\n\n    // make the ajax request. Trigger the callbacks using $element as the\n    // context, making the value of `this` for the callbacks the $element\n    $.ajax({\n      url,\n      data: options.data,\n      type: options.type,\n      dataType: options.dataType,\n      cache: true,\n      success: (response) => {\n        options.success.call($element, $target, options, response);\n        options.complete.call($element, $target);\n      },\n      error: (response, status, error) => {\n        options.error.call($element, $target, options, response, error);\n        options.complete.call($element, $target);\n      },\n    });\n  }\n\n  // Default Settings\n  const defaults = {\n    url: null, // request url\n    data: {}, // request data\n    debug: false,\n    eventType: 'load', // js event type to fire data request on (load, click, submit, mouseover, custom, etc.)\n    dataType: 'json', // data type that's expected in response from your request\n    type: 'GET', // type of request (currently only supports GET)\n    target: '', // selector of the element where you want your response injected\n    handlebars: false, // use handlebars to render the response?\n    template: '', // handlebar template selector. by default it will look inside target\n    placement: 'html', // where to inject response relative to target (jquery DOM insertion methods <html|append|prepend|before|after>)\n    loaderImg: null, // target selector for data response\n    oneAndDone: true, // whether to remove the event binding after the first time running\n    debounceEvents: ['keyup', 'keydown', 'keypress', 'scroll', 'resize'],\n    success: successCallback, // gets passed 3 parameters ($target, options, response)\n    error: errorCallback, // gets passed 4 parameters ($target, options, response, error)\n    complete: () => {}, // callback fires after the request is made (on success OR error)\n    before: () => {}, // callback fires directly before the request is made\n  };\n\n  return this.each((idx, element) => {\n    const $element = $(element);\n\n    // Create a local copy of the options for each element. This will allow each\n    // individual element to override options from its' data attributes.\n    const options = $.extend({}, defaults, opts);\n    options.dataType = $element.data('response-type') || options.dataType;\n    options.eventType = $element.data('event-type') || options.eventType;\n    options.type = $element.data('type') || options.type;\n    options.url = $element.data('url') || options.url;\n    options.data = $element.data('data') ? $element.data('data') : options.data;\n    options.template = $element.data('template') || options.template;\n    options.placement = $element.data('response-placement') || options.placement;\n    options.target = $element.data('target') || options.target;\n    options.debug = element.hasAttribute('data-debug') ? $element.data('debug') : options.debug;\n    options.oneAndDone = element.hasAttribute('data-one-and-done')\n      ? $element.data('one-and-done')\n      : options.oneAndDone;\n    options.handlebars = element.hasAttribute('data-handlebars')\n      ? $element.data('handlebars')\n      : options.handlebars;\n\n    // if no target selector is given, default to actual element\n    const $target = options.target ? $(options.target) : $element;\n\n    // this is the callback function that will fire on whatever event\n    // is provided for this element. It's responsible for actually triggering\n    // the ajax request && the before callback\n    let callback = function callback(evt = null) {\n      if (evt) {\n        evt.preventDefault();\n      }\n\n      // if you're watching on keyup or change events, let's assume you want to\n      // send the value of the element as a query parameter.\n      // Think autosuggest search boxes.\n      // <input data-event-type=\"keyup\" name=\"q\" data-target=\"#search-results\">\n      if (['keyup', 'change'].indexOf(options.eventType) !== -1) {\n        options.data[this.name] = this.value;\n      }\n\n      // execute before request callback\n      options.before.call($element, $target);\n\n      // make the ajax request\n      fetch(options.url, {\n        element: $element,\n        target: $target,\n        options,\n      });\n    };\n\n    // if event type is 'load', execute the request immediately otherwise,\n    // execute ajax request on specified type (click, submit, mouseover, etc.)\n    if (options.eventType === 'load') {\n      callback();\n    } else {\n      // use proper jQuery method based on oneAndDone option\n      const method = options.oneAndDone ? 'one' : 'on';\n\n      // if the event type is a \"debounce event\", make sure to\n      // debounce the callback function\n      if (options.debounceEvents.indexOf(options.eventType) !== -1) {\n        callback = debounce(callback, 500);\n      }\n\n      $element[method](options.eventType, callback);\n    } // end if else (options.eventType)\n  }); // end this.each\n}; // end $.fn.dataRemote\n\n/**\n * Helper function for debugging.\n */\n$.fn.dataRemote.debug = function debug(element, output, error) {\n  if (window.console && window.console.log) {\n    window.console.log('Element: ');\n    window.console.log(element);\n    window.console.log('Response: ');\n    window.console.log(output);\n    if (error) {\n      window.console.log(' -> Error: ');\n      window.console.log(error);\n    }\n    window.console.log('------------');\n  }\n};\n"]}