{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementInternals.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js","src/Patch/DocumentFragment.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","isConnected","node","nativeValue","undefined","current","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","options","upgrade","gatherElements","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","localNameToDefinition","get","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","call","oldValue","newValue","namespace","indexOf","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","MutationObserver","_handleMutations","bind","observe","childList","subtree","disconnect","mutations","addedNodes","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_pendingDefinitions","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_flush","pendingDefinitions","elementsWithStableDefinitions","elementsWithPendingDefinitions","pendingElements","shift","pendingUpgradableElements","deferred","whenDefined","reject","prior","some","d","polyfillWrapFlushCallback","outer","inner","flush","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","DocumentFragment_prepend","DocumentFragment","DocumentFragment_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","appendPrependPatch","builtInMethod","flattenedNodes","connectedElements","nodes","apply","prepend","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodes","childNodesLength","Array","refNode","insertedNodes","slice","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","ownerDocument","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","beforeAfterPatch","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","warn","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","innerHTML","content","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","$jscompDefaultExport$$module$$src$Patch$Native.DocumentFragment_prepend","$jscompDefaultExport$$module$$src$Patch$Native.DocumentFragment_append","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.connectedCallback(element);\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {{\n   *   visitedImports: (!Set<!Node>|undefined),\n   *   upgrade: (!function(!Element)|undefined),\n   * }=} options\n   */\n  patchAndUpgradeTree(root, options = {}) {\n    const visitedImports = options.visitedImports || new Set();\n    const upgrade = options.upgrade || (element => this.upgradeElement(element));\n\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, {visitedImports, upgrade});\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      upgrade(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<!CustomElementDefinition>}\n     */\n    this._pendingDefinitions = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n    this._pendingDefinitions.push(definition);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n    this._flushPending = false;\n\n    const pendingDefinitions = this._pendingDefinitions;\n\n    /**\n     * Unupgraded elements with definitions that were defined *before* the last\n     * flush, in document order.\n     * @type {!Array<!Element>}\n     */\n    const elementsWithStableDefinitions = [];\n\n    /**\n     * A map from `localName`s of definitions that were defined *after* the last\n     * flush to unupgraded elements matching that definition, in document order.\n     * @type {!Map<string, !Array<!Element>>}\n     */\n    const elementsWithPendingDefinitions = new Map();\n    for (let i = 0; i < pendingDefinitions.length; i++) {\n      elementsWithPendingDefinitions.set(pendingDefinitions[i].localName, []);\n    }\n\n    this._internals.patchAndUpgradeTree(document, {\n      upgrade: element => {\n        // Ignore the element if it has already upgraded or failed to upgrade.\n        if (element.__CE_state !== undefined) return;\n\n        const localName = element.localName;\n\n        // If there is an applicable pending definition for the element, add the\n        // element to the list of elements to be upgraded with that definition.\n        const pendingElements = elementsWithPendingDefinitions.get(localName);\n        if (pendingElements) {\n          pendingElements.push(element);\n        // If there is *any other* applicable definition for the element, add it\n        // to the list of elements with stable definitions that need to be upgraded.\n        } else if (this._internals.localNameToDefinition(localName)) {\n          elementsWithStableDefinitions.push(element);\n        }\n      },\n    });\n\n    // Upgrade elements with 'stable' definitions first.\n    for (let i = 0; i < elementsWithStableDefinitions.length; i++) {\n      this._internals.upgradeElement(elementsWithStableDefinitions[i]);\n    }\n\n    // Upgrade elements with 'pending' definitions in the order they were defined.\n    while (pendingDefinitions.length > 0) {\n      const definition = pendingDefinitions.shift();\n      const localName = definition.localName;\n\n      // Attempt to upgrade all applicable elements.\n      const pendingUpgradableElements = elementsWithPendingDefinitions.get(definition.localName);\n      for (let i = 0; i < pendingUpgradableElements.length; i++) {\n        this._internals.upgradeElement(pendingUpgradableElements[i]);\n      }\n\n      // Resolve any promises created by `whenDefined` for the definition.\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && !this._pendingDefinitions.some(d => d.localName === localName)) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  DocumentFragment_prepend: window.DocumentFragment.prototype['prepend'],\n  DocumentFragment_append: window.DocumentFragment.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchDocumentFragment from './Patch/DocumentFragment.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchDocumentFragment(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function appendPrependPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.prepend !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'prepend', appendPrependPatch(builtIn.prepend));\n  }\n\n  if (builtIn.append !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'append', appendPrependPatch(builtIn.append));\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {!function(...(!Node|string))} builtInMethod\n   * @return {!function(...(!Node|string))}\n   */\n  function beforeAfterPatch(builtInMethod) {\n    return function(...nodes) {\n      /**\n       * A copy of `nodes`, with any DocumentFragment replaced by its children.\n       * @type {!Array<!Node>}\n       */\n      const flattenedNodes = [];\n\n      /**\n       * Elements in `nodes` that were connected before this call.\n       * @type {!Array<!Node>}\n       */\n      const connectedElements = [];\n\n      for (var i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n\n        if (node instanceof Element && Utilities.isConnected(node)) {\n          connectedElements.push(node);\n        }\n\n        if (node instanceof DocumentFragment) {\n          for (let child = node.firstChild; child; child = child.nextSibling) {\n            flattenedNodes.push(child);\n          }\n        } else {\n          flattenedNodes.push(node);\n        }\n      }\n\n      builtInMethod.apply(this, nodes);\n\n      for (let i = 0; i < connectedElements.length; i++) {\n        internals.disconnectTree(connectedElements[i]);\n      }\n\n      if (Utilities.isConnected(this)) {\n        for (let i = 0; i < flattenedNodes.length; i++) {\n          const node = flattenedNodes[i];\n          if (node instanceof Element) {\n            internals.connectTree(node);\n          }\n        }\n      }\n    };\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'before', beforeAfterPatch(builtIn.before));\n  }\n\n  if (builtIn.before !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'after', beforeAfterPatch(builtIn.after));\n  }\n\n  if (builtIn.replaceWith !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'replaceWith',\n      /**\n       * @param {...(!Node|string)} nodes\n       */\n      function(...nodes) {\n        /**\n         * A copy of `nodes`, with any DocumentFragment replaced by its children.\n         * @type {!Array<!Node>}\n         */\n        const flattenedNodes = [];\n\n        /**\n         * Elements in `nodes` that were connected before this call.\n         * @type {!Array<!Node>}\n         */\n        const connectedElements = [];\n\n        for (var i = 0; i < nodes.length; i++) {\n          const node = nodes[i];\n\n          if (node instanceof Element && Utilities.isConnected(node)) {\n            connectedElements.push(node);\n          }\n\n          if (node instanceof DocumentFragment) {\n            for (let child = node.firstChild; child; child = child.nextSibling) {\n              flattenedNodes.push(child);\n            }\n          } else {\n            flattenedNodes.push(node);\n          }\n        }\n\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.replaceWith.apply(this, nodes);\n\n        for (let i = 0; i < connectedElements.length; i++) {\n          internals.disconnectTree(connectedElements[i]);\n        }\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n          for (let i = 0; i < flattenedNodes.length; i++) {\n            const node = flattenedNodes[i];\n            if (node instanceof Element) {\n              internals.connectTree(node);\n            }\n          }\n        }\n      });\n    }\n\n  if (builtIn.remove !== undefined) {\n    Utilities.setPropertyUnchecked(destination, 'remove',\n      function() {\n        const wasConnected = Utilities.isConnected(this);\n\n        builtIn.remove.call(this);\n\n        if (wasConnected) {\n          internals.disconnectTree(this);\n        }\n      });\n  }\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n","import CustomElementInternals from '../CustomElementInternals.js';\nimport Native from './Native.js';\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  PatchParentNode(internals, DocumentFragment.prototype, {\n    prepend: Native.DocumentFragment_prepend,\n    append: Native.DocumentFragment_append,\n  });\n};\n"]}