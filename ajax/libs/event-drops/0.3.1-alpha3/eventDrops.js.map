{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///eventDrops.js","webpack:///webpack/bootstrap 148146904ab300fb25d2","webpack:///./src/filterData.js","webpack:///./src/drawer/labels.js","webpack:///./src/drawer/xAxis.js","webpack:///./src/config.js","webpack:///./src/drawer/index.js","webpack:///./src/zoom.js","webpack:///./~/configurable.js/configurable.js","webpack:///./~/d3/build/d3.js","webpack:///./src/drawer/delimiters.js","webpack:///./src/drawer/drops.js","webpack:///./src/drawer/lineSeparator.js","webpack:///./src/index.js","webpack:///./src/metaballs.js","webpack:///./src/xAxis.js","webpack:///./~/debounce/index.js","webpack:///(webpack)/buildin/global.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","filterData","data","arguments","length","undefined","scale","date","_scale$domain","domain","_scale$domain2","_slicedToArray","min","max","filter","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","Symbol","iterator","next","done","push","err","Array","isArray","TypeError","default","_filterData","_filterData2","obj","container","scales","config","labels","selectAll","text","count","x","enter","append","classed","attr","labelsWidth","idx","y","exit","remove","boolOrReturnValue","drawBottomAxis","drawTopAxis","_xAxis","_xAxis2","drawAxis","xScale","configuration","orientation","dimensions","height","lineHeight","start","Date","end","minScale","maxScale","Infinity","margin","top","left","bottom","right","labelsRightMargin","locale","axisFormat","tickFormat","formatMillisecond","d3","timeFormat","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","timeSecond","timeMinute","timeHour","timeDay","timeMonth","timeWeek","timeYear","mouseout","mouseover","zoomend","click","hasDelimiter","hasTopAxis","hasBottomAxis","eventLineColor","eventColor","metaballs","zoomable","dateFormat","_interopRequireDefault","_metaballs","_delimiters","_drops","_drops2","_labels","_labels2","_lineSeparator","_lineSeparator2","svg","defs","width","labelsContainer","chartWrapper","dropsContainer","style","axesContainer","lineSeparator","drops","delimiters","global","_debounce","_debounce2","callback","onZoom","scalingFunction","event","transform","rescaleX","axisTop","axisBottom","sumDataCount","select","requestAnimationFrame","zoom","scaleExtent","on","targetFunction","item","ascendingComparator","f","ascending","pair","a","b","tickIncrement","stop","step","Math","power","floor","log","LN10","error","pow","e10","e5","e2","tickStep","step0","abs","step1","translateX","translateY","center","offset","bandwidth","round","entering","__axis","axis","orient","context","values","tickValues","ticks","apply","tickArguments","format","identity$1","spacing","tickSizeInner","tickPadding","range","range0","range1","position","copy","selection","path","tick","order","tickExit","tickEnter","line","merge","insert","k","transition","epsilon","isFinite","getAttribute","parentNode","tickSizeOuter","each","_","slice$1","slice","tickSize","axisRight","axisLeft","dispatch","t","Error","Dispatch","parseTypenames","typenames","types","trim","split","map","indexOf","type","set","noop","concat","creatorInherit","document","ownerDocument","uri","namespaceURI","xhtml","documentElement","createElement","createElementNS","creatorFixed","fullname","space","local","local$1","Local","nextId","toString","filterContextListener","listener","index","group","contextListener","related","relatedTarget","compareDocumentPosition","event1","event0","__data__","parseTypenames$1","onRemove","typename","__on","j","removeEventListener","capture","onAdd","wrap","filterEvents","addEventListener","customEvent","that","args","sourceEvent","none","empty$1","EnterNode","parent","datum","_next","_parent","bindIndex","update","node","groupLength","dataLength","bindKey","key","keyValue","nodeByKeyValue","keyValues","keyPrefix","ascending$1","NaN","attrRemove","removeAttribute","attrRemoveNS","removeAttributeNS","attrConstant","setAttribute","attrConstantNS","setAttributeNS","attrFunction","v","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","defaultView","getComputedStyle","propertyRemove","propertyConstant","propertyFunction","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textContent","textConstant","textFunction","htmlRemove","innerHTML","htmlConstant","htmlFunction","raise","nextSibling","appendChild","lower","previousSibling","insertBefore","firstChild","constantNull","removeChild","dispatchEvent","params","window","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","Selection","groups","parents","_groups","_parents","nopropagation","stopImmediatePropagation","yesdrag","view","noclick","selection$$1","noevent","setTimeout","MozUserSelect","__noselect","DragEvent","target","subject","id","active","dx","dy","identifier","defaultFilter$1","button","defaultContainer","defaultSubject","extend","definition","create","Color","color","toLowerCase","reHex3","exec","parseInt","Rgb","reHex6","rgbn","reRgbInteger","reRgbPercent","reRgbaInteger","rgba","reRgbaPercent","reHslPercent","hsla","reHslaPercent","named","r","g","rgbConvert","rgb","opacity","h","Hsl","hslConvert","hsl","hsl2rgb","m1","m2","labConvert","Lab","Hcl","deg2rad","cos","sin","rgb2xyz","xyz2lab","Xn","Yn","Zn","lab","t3","t2","t0","lab2xyz","t1","xyz2rgb","hclConvert","atan2","rad2deg","sqrt","hcl","cubehelixConvert","Cubehelix","BC_DA","ED","EB","bl","E","C","D","cubehelix","basis","v0","v1","v2","v3","linear","exponential","hue","constant$3","isNaN","gamma","nogamma","rgbSpline","spline","colors","color$$1","zero","one","parseCss","identity$2","cssNode","cssRoot","cssView","decompose","parseSvg","svgNode","baseVal","consolidate","matrix","e","interpolateTransform","parse","pxComma","pxParen","degParen","pop","translate","xa","ya","xb","yb","q","reinterpolate","rotate","skewX","scaleX","scaleY","join","cosh","exp","sinh","tanh","hsl$1","hue$$1","lab$1","hcl$1","cubehelix$1","cubehelixGamma","cubehelix$$1","now","clockNow","setFrame","clearNow","clock","clockSkew","Timer","_call","_time","timer","delay","time","restart","timerFlush","frame","taskHead","wake","clockLast","timeout","nap","poke","pokeDelay","taskTail","sleep","clearTimeout","interval","clearInterval","setInterval","init","schedule","__transition","state","CREATED","set$1","STARTING","get$1","self","elapsed","SCHEDULED","schedules","STARTED","timeout$1","RUNNING","ENDED","tween","duration","ease","ENDING","tweenRemove","tween0","tween1","splice","tweenFunction","tweenValue","_id","attrRemove$1","attrRemoveNS$1","attrConstant$1","interpolate$$1","value1","value00","interpolate0","value0","attrConstantNS$1","getAttributeNS","attrFunction$1","value10","attrFunctionNS$1","attrTweenNS","_value","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","every","onFunction","on0","on1","sit","removeFunction","styleRemove$1","interpolate$$2","styleRemoveEnd","styleConstant$1","styleFunction$1","styleTween","textConstant$1","textFunction$1","Transition","_name","newId","linear$1","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","sinIn","halfPi","sinOut","sinInOut","pi","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounceIn","bounceOut","b1","b0","b3","b2","b4","b6","b5","b7","b8","b9","bounceInOut","inherit","timing","defaultTiming","nopropagation$1","defaultFilter","defaultExtent","ownerSVGElement","local$$1","__brush","empty","extent","brushSelection","dim","output","brushX","brush$1","X","brushY","Y","brush","overlay","initialize","cursors","handle","handles","redraw","started","handleSize","emitter","Emitter","moved","point1","mouse","shifting","lockX","lockY","point","moving","noevent$1","move","point0","mode","MODE_SPACE","MODE_DRAG","signX","W","w0","e0","w1","e1","signY","N","n0","S","s0","n1","s1","MODE_HANDLE","MODE_CENTER","flipX","flipY","emit","ended","touches","touchending","keydowned","keyCode","keyupped","altKey","changedTouches","metaKey","signsX","signsY","shiftKey","beforestart","dragDisable","interrupt","listeners","selection1","selection0","input","interpolateValue","starting","BrushEvent","constant$4","compareValue","compare","source","Path","_x0","_y0","_x1","_y1","defaultSource","defaultTarget","defaultRadius","radius","defaultStartAngle","startAngle","defaultEndAngle","endAngle","Map","map$1","createObject","setObject","createMap","setMap","Set","set$2","objectConverter","columns","Function","JSON","stringify","customConverter","row","inferColumns","rows","columnSet","forEach","column","tree","xm","ym","xp","yp","_root","leaf","x0","y0","x1","y1","_x","_y","addAll","xz","yz","cover","removeAll","defaultX","defaultY","quadtree","nodes","Quadtree","leaf_copy","vx","vy","find","nodeById","nodeId","x$1","y$1","formatSpecifier","specifier","FormatSpecifier","match","re","fill","align","sign","symbol","comma","precision","formatTypes","defaultLocale","locale$1","formatLocale","formatPrefix","Adder","reset","add$1","adder","bv","av","acos","pi$3","asin","halfPi$2","haversin","sin$1","noop$1","streamGeometry","geometry","stream","streamGeometryType","streamLine","coordinates","closed","coordinate","lineStart","lineEnd","streamPolygon","polygonStart","polygonEnd","areaRingStart","areaStream","areaPointFirst","areaRingEnd","areaPoint","lambda00","phi00","lambda","phi","radians","lambda0","cosPhi0","cos$1","quarterPi","sinPhi0","dLambda","sdLambda","adLambda","cosPhi","sinPhi","u","areaRingSum","spherical","cartesian","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","boundsPoint","ranges","lambda0$1","lambda1","phi0","phi1","linePoint","p0","normal","equatorial","inflection","phii","delta","lambda2","sign$$1","lambdai","degrees$1","antimeridian","angle","boundsLineStart","boundsStream","boundsLineEnd","boundsRingPoint","deltaSum","lambda00$1","phi00$1","boundsRingStart","boundsRingEnd","epsilon$2","rangeCompare","rangeContains","centroidPoint","centroidPointCartesian","z","W0","X0","Y0","Z0","centroidLineStart","centroidStream","centroidLinePointFirst","z0","centroidLinePoint","w","W1","X1","Y1","Z1","centroidLineEnd","centroidRingStart","centroidRingPointFirst","centroidRingEnd","centroidRingPoint","lambda00$2","phi00$2","cx","cy","cz","X2","Y2","Z2","rotationIdentity","tau$3","rotateRadians","deltaLambda","deltaPhi","deltaGamma","compose","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","invert","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","circleStream","direction","cosRadius","sinRadius","circleRadius","Intersection","points","other","entry","link$1","array","clipExtent","visible","interpolate","from","to","a1","corner","comparePoint","compareIntersection","ca","cb","activeStream","polygonInside","winding","polygon","a0","ring","bufferStream","segments","clean","startInside","cleanInside","clipPolygon","clipStream","first","v_","x_","y_","x__","y__","v__","rejoin","result","clipMin","clipMax","clipLine","clipBuffer","lengthLineStart","lengthStream","lengthPointFirst","lengthLineEnd","lambda0$2","sinPhi0$1","cosPhi0$1","lengthPoint","cosDelta","sinDelta","lengthSum","containsGeometry","containsGeometryType","containsPoint","distance","containsLine","ab","containsPolygon","polygonContains","ringRadians","pointRadians","graticuleX","sequence","graticuleY","graticule","lines","ceil","DX","DY","outline","reverse","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","areaRingStart$1","areaStream$1","areaPointFirst$1","areaPoint$1","x00","x0$1","y00","y0$1","areaRingSum$1","areaRingEnd$1","boundsPoint$1","x0$2","y0$2","centroidPoint$1","X0$1","Y0$1","Z0$1","centroidLineStart$1","centroidStream$1","centroidPointFirstLine","centroidPointLine","x0$3","y0$3","X1$1","Y1$1","Z1$1","centroidLineEnd$1","centroidRingStart$1","centroidPointFirstRing","centroidRingEnd$1","centroidPointRing","x00$1","y00$1","X2$1","Y2$1","Z2$1","PathContext","_context","lengthPointFirst$1","lengthStream$1","lengthPoint$1","x00$2","x0$4","y00$2","y0$4","lengthSum$1","PathString","_string","circle$1","validSegment","segment","clipAntimeridianLine","sign0","sign1","clipAntimeridianIntersect","cosPhi1","sinLambda0Lambda1","atan","clipAntimeridianInterpolate","transformer","methods","TransformStream","fitExtent","projection","clip","geoStream","boundsStream$1","fitSize","size","resampleNone","project","resample$1","delta2","resampleLineTo","c0","c1","depth","d2","phi2","x2","y2","dx2","dy2","dz","cosMinDistance","resampleStream","maxDepth","ringStart","ringPoint","ringEnd","a00","b00","c00","projectionMutator","projectAt","projectRotate","projectTransform","recenter","cache","cacheStream","theta","preclip","clipAntimeridian","postclip","identity$4","projectResample","resample","transformRadians","clipAngle","clipCircle","conicProjection","parallels","cylindricalEqualAreaRaw","forward","conicEqualAreaRaw","r0","sy0","r0y","multiplex","streams","sphere","azimuthalRaw","azimuthalInvert","sc","cc","mercatorRaw","tan","mercatorProjection","reclip","tany","conicConformalRaw","cy0","fy","equirectangularRaw","conicEquidistantRaw","gy","nx","gnomonicRaw","scaleTranslate","kx","ky","tx","ty","orthographicRaw","stereographicRaw","transverseMercatorRaw","defaultSeparation","meanX","children","reduce","meanXReduce","maxY","maxYReduce","leafLeft","leafRight","sum","leastCommonAncestor","aNodes","ancestors","bNodes","hierarchy","child","childs","Node","valued","defaultChildren","eachBefore","computeHeight","node_copy","copyData","Node$2","encloses","dr","encloseN","L","B","circle","l2","p1","l0","l1","head","enclose1","enclose2","enclose3","tail","r1","r2","x21","y21","r21","x3","y3","r3","a2","c2","a3","c3","A","place","ax","ay","da","db","dc","intersects","distance2","Node$1","previous","packEnclose","circles","sj","sk","aa","ba","oa","ox","oy","pack","enclose","optional","required","constantZero","defaultRadius$1","radiusLeaf","packChildren","padding","translateChild","defaultId","defaultParentId","parentId","defaultSeparation$1","nextLeft","nextRight","moveSubtree","wm","wp","shift","change","executeShifts","nextAncestor","vim","ancestor","TreeNode","treeRoot","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","i0","i1","dice","treemapDice","treemapSlice","lexicographicOrder","computeUpperHullIndexes","indexes","cross$1","Queue","_size","_error","_tasks","_data","_waiting","_active","_ended","_start","poke$1","start$1","abort","noabort","maybeNotify","queue","concurrency","fixCallback","xhr","hasResponse","responseType","response","responseText","responseOf","request$$1","ordinal","unknown","implicit","slice$4","has","band","rescale","range$$1","paddingInner","paddingOuter","ordinalRange","rangeRound","pointish","point$1","deinterpolateLinear","constant$9","deinterpolateClamp","deinterpolate","reinterpolateClamp","bimap","d0","d1","polymap","bisectRight","clamp","continuous","piecewise","unit","map$3","number$1","interpolateRound","linearish","nice","linear$2","identity$6","reinterpolate$1","pow10","powp","base","logp","log10","log2","reflect","log$1","logs","pows","raise$1","exponent","pow$1","sqrt$1","quantile$$1","thresholds","threshold","invertExtent","sort","quantiles","quantize$1","threshold$1","newInterval","floori","offseti","field","test","setTime","t0$1","t1$1","weekday","setDate","getDate","getDay","setHours","getTimezoneOffset","durationMinute$1","durationWeek$1","utcWeekday","setUTCDate","getUTCDate","getUTCDay","setUTCHours","localDate","H","M","setFullYear","utcDate","UTC","setUTCFullYear","newYear","formatLocale$1","newFormat","formats","pad","charCodeAt","pads","charAt","newParse","newDate","parseSpecifier","day$$1","U","Z","parses","parsePeriod","periodRe","periodLookup","parseShortWeekday","shortWeekdayRe","shortWeekdayLookup","parseWeekday","weekdayRe","weekdayLookup","parseShortMonth","shortMonthRe","shortMonthLookup","parseMonth","monthRe","monthLookup","parseLocaleDateTime","locale_dateTime","parseLocaleDate","locale_date","parseLocaleTime","locale_time","formatShortWeekday","locale_shortWeekdays","formatWeekday","locale_weekdays","formatShortMonth","locale_shortMonths","getMonth","locale_months","formatPeriod","locale_periods","getHours","formatUTCShortWeekday","formatUTCWeekday","formatUTCShortMonth","getUTCMonth","formatUTCMonth","formatUTCPeriod","getUTCHours","dateTime","periods","days","shortDays","months","shortMonths","formatRe","formatLookup","formatDayOfMonth","formatHour24","I","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","formatSeconds","formatWeekNumberSunday","formatWeekdayNumber","formatWeekNumberMonday","formatFullYear","formatZone","%","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekNumberSunday","formatUTCWeekdayNumber","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parseDayOfMonth","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseSeconds","parseWeekNumberSunday","parseWeekdayNumber","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","utcFormat","utcParse","requote","replace","requoteRe","RegExp","numberRe","percentRe","day","year","getMilliseconds","getMinutes","getSeconds","sunday","monday","getFullYear","utcDay","utcYear","getUTCMilliseconds","getUTCMinutes","getUTCSeconds","utcSunday","utcMonday","getUTCFullYear","defaultLocale$1","locale$2","timeParse","formatIsoNative","toISOString","parseIsoNative","date$1","number$2","calendar","year$$1","month$$1","week","hour$$1","minute$$1","second$$1","millisecond$$1","tickInterval","bisector","tickIntervals","durationYear","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","ramp","sequential","interpolator","acos$1","pi$4","asin$1","halfPi$3","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","padAngle","intersect","x10","y10","x32","y32","cornerTangents","rc","cw","x01","y01","lo","sqrt$2","x11","y11","max$2","cx0","cx1","cy1","dx0","dy0","dx1","dy1","Linear","x$3","y$3","Radial","curve","_curve","curveRadial","radial","radialLine","linkSource","linkTarget","link$2","link","buffer","argv","slice$5","x$$1","y$$1","constant$10","curveHorizontal","moveTo","bezierCurveTo","curveVertical","curveRadial$1","radialPoint","p2","p3","linkHorizontal","linkVertical","linkRadial","point$2","Basis","BasisClosed","BasisOpen","Bundle","_basis","_beta","point$3","_k","_x2","_y2","Cardinal","tension","CardinalClosed","CardinalOpen","point$4","_l01_a","epsilon$3","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","CatmullRomClosed","CatmullRomOpen","LinearClosed","sign$1","slope3","h0","h1","slope2","point$5","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","Step","_t","stepBefore","stepAfter","stackValue","sum$2","series","x$4","y$4","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","createEdge","edge","edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","bx","by","connectEdge","fm","fb","lx","ly","rx","ry","fx","clipEdges","epsilon$4","createCell","site","cellHalfedgeAngle","cell","va","vb","cellHalfedgeStart","cellHalfedgeEnd","sortCellHalfedges","clipCells","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","v00","v01","v11","v10","Circle","arc","attachCircle","lArc","rArc","lSite","cSite","rSite","epsilon2$2","ha","hc","circlePool","before","firstCircle","detachCircle","Beach","createBeach","beach","beachPool","detachBeach","beaches","removeBeach","disappearing","unshift","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","ZoomEvent","Transform","transform$1","__zoom","identity$8","nopropagation$2","defaultFilter$2","defaultExtent$1","SVGElement","clientWidth","clientHeight","defaultTransform","hi","mid","ascendingBisect","bisectLeft","pairs","cross","values0","values1","descending","number","variance","valueof","mean","deviation","constant","identity","sturges","LN2","histogram","tz","bin","bins","freedmanDiaconis","scott","median","numbers","arrays","merged","permute","permutes","scan","xi","xj","shuffle","random","transpose","zip","constructor","T","namespaces","xlink","xml","xmlns","namespace","prefix","creator","matcher","selector","matches","element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","matcher$1","mouseenter","mouseleave","selection_on","current","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","querySelector","selection_select","subgroups","subnode","subgroup","selectorAll","querySelectorAll","selection_selectAll","selection_filter","sparse","selection_enter","_enter","constant$1","selection_data","bind","enterGroup","updateGroup","_exit","selection_exit","selection_merge","groups0","groups1","m0","merges","group0","group1","selection_order","selection_sort","compareNode","sortgroups","sortgroup","selection_call","selection_nodes","selection_node","selection_size","selection_empty","selection_each","selection_attr","selection_style","selection_property","contains","selection_classed","selection_text","selection_html","selection_raise","selection_lower","selection_append","selection_insert","selection_remove","selection_datum","selection_dispatch","html","touch","preventDefault","constant$2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","mousemoved","mouseupped","mousemoving","mousedownx","mousedowny","clickDistance2","gestures","touches$$1","sublisteners","clickDistance","reI","reN","reP","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","displayable","brighter","darker","PI","basis$1","basisClosed","interpolateRgb","rgbGamma","rgb$$1","rgbBasis","rgbBasisClosed","array$1","nb","na","reA","reB","interpolateString","am","bm","bs","bi","lastIndex","valueOf","degrees","interpolateTransformCss","interpolateTransformSvg","rho","SQRT2","interpolateZoom","ux0","uy0","ux1","uy1","coshr0","hsl$2","hslLong","hcl$2","hclLong","cubehelix$2","cubehelixLong","quantize","samples","performance","interval$1","total","emptyOn","emptyTween","selection_interrupt","transition_tween","transition_attr","transition_attrTween","transition_delay","transition_duration","transition_ease","transition_filter","transition_merge","transition_on","transition_remove","transition_select","select$$1","transition_selectAll","Selection$1","transition_selection","transition_style","transition_styleTween","transition_text","transition_transition","id0","id1","selection_prototype","polyIn","custom","polyOut","polyInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","amplitude","period","elasticOut","elasticInOut","selection_transition","root$1","xy","XY","nw","ne","se","sw","pi$1","halfPi$1","tau$1","max$1","chord","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","slice$2","constant$5","pi$2","tau$2","tauEpsilon","closePath","lineTo","quadraticCurveTo","arcTo","l01_2","x20","y20","l21_2","l20_2","l21","l01","t01","t21","ccw","ribbon","sr","sa0","sa1","sx0","tr","ta0","ta1","clear","keys","entries","nest","createResult","setResult","rollup","sortValues","valuesByKey","sortKey","sortKeys","proto","dsv","delimiter","convert","parseRows","token","EOF","eol","EOL","delimiterCode","formatValue","formatRows","formatRow","reFormat","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","center$1","force","sx","sy","constant$6","jiggle","tree_add","tree_cover","tree_data","visit","tree_extent","Quad","tree_find","quads","tree_remove","retainer","tree_root","tree_size","tree_visit","tree_visitAfter","tree_x","tree_y","treeProto","visitAfter","prefixExponent","collide","quad","rj","ri","yi","strength","ri2","iterations","prepare","radii","links","defaultStrength","distances","strengths","bias","initializeStrength","initializeDistance","initialRadius","initialAngle","simulation","alphaMin","stepper","alphaTarget","alphaDecay","forces","velocityDecay","initializeNodes","initializeForce","closest","manyBody","accumulate","theta2","distanceMax2","distanceMin2","distanceMin","distanceMax","x$2","y$2","formatDecimal","toExponential","coefficient","exponent$1","formatGroup","grouping","thousands","substring","formatNumerals","numerals","formatDefault","toPrecision","out","formatPrefixAuto","formatRounded","","toFixed","toUpperCase","identity$3","prefixes","valuePrefix","valueSuffix","suffix","formatType","valueNegative","maybeSuffix","decimal","currency","percent","precisionFixed","precisionPrefix","precisionRound","temp","streamObjectType","Feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","areaSum","areaRing","area","bounds","feature","deltaMax","centroid","constant$7","pointEqual","isSubject","extent$1","sum$1","sinPhi1","absDelta","intersection","phiArc","length$1","object$1","containsObjectType","interpolate$1","sy1","kx0","ky0","kx1","ky1","areaSum$1","_radius","pointRadius","_line","_point","lengthRing","_circle","index$1","contextStream","projectionStream","measure","pointVisible","sink","pointLine","pointRing","ringSink","ringSegments","ringBuffer","polygonStarted","rotatedStart","cr","point2","smallRadius","code","notHemisphere","two","pa","pb","n2","n2n2","n1n2","determinant","n1xn2","uu","polar","meridian","q1","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercator","conicConformal","equirectangular","conicEquidistant","gnomonic","identity$5","reflectX","reflectY","orthographic","stereographic","transverseMercator","cluster","previousNode","eachAfter","separation","nodeSize","node_count","node_each","node_eachBefore","node_eachAfter","node_sum","node_sort","node_path","node_ancestors","node_descendants","node_leaves","leaves","node_links","descendants","shuffle$1","siblings","constant$8","index$2","roundNode","partition","positionNode","keyPrefix$1","preroot","ambiguous","stratify","nodeKey","nodeByKey","firstWalk","secondWalk","sizeNode","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","squarify","index$3","treemap","paddingStack","paddingLeft","paddingTop","paddingRight","paddingBottom","tile","binary","valueOffset","sums","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","resquarify","_squarify","area$1","centroid$1","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","contains$1","inside","length$2","perimeter","slice$3","defer","await","results","awaitAll","defaultSource$1","uniform","sourceRandomUniform","randomUniform","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","exponential$1","sourceRandomExponential","randomExponential","request","url","respond","status","mimeType","headers","XMLHttpRequest","user","password","XDomainRequest","onload","onerror","ontimeout","onreadystatechange","readyState","onprogress","header","send","post","method","open","setRequestHeader","overrideMimeType","type$1","defaultMimeType","createRange","createContextualFragment","json","responseXML","dsv$1","csv$1","tsv$1","array$2","millisecond","milliseconds","second","seconds","minute","minutes","hour","hours","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month","setMonth","years","utcMinute","setUTCSeconds","utcMinutes","utcHour","setUTCMinutes","utcHours","utcDays","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","utcMonths","utcYears","-","0","formatIso","parseIso","utcTime","category10","category20b","category20c","category20","cubehelix$3","warm","cool","rainbow","rainbow$1","ts","viridis","magma","inferno","plasma","abs$1","atan2$1","cos$2","min$1","sin$2","tau$4","a01","a11","a10","da0","da1","ap","rp","padRadius","cornerRadius","rc0","rc1","oc","kc","lc","areaStart","areaEnd","curveLinear","defined0","defined","area$2","x0z","y0z","arealine","lineX0","lineY0","lineY1","lineX1","descending$1","identity$7","pie","arcs","curveRadialLinear","radialLine$1","radialArea","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","circle$2","draw","cross$2","tan30","tan30_2","diamond","kr","star","square","sqrt3","triangle","wye","symbols","noop$2","basis$2","_x3","_x4","_y3","_y4","basisClosed$1","basisOpen","bundle","cardinal","_x5","_y5","cardinalClosed","cardinalOpen","x23","y23","catmullRom","catmullRomClosed","catmullRomOpen","linearClosed","_t0","px","py","natural","none$1","none$2","stack","oz","kz","sz","sij","ki","si","expand","diverging","yn","silhouette","wiggle","s2","sij0","sij1","s3","ascending$2","descending$2","insideOut","tops","bottoms","constant$11","after","grandpa","uncle","sibling","polygons","triangles","_found","voronoi","constant$12","applyX","applyY","location","invertX","invertY","rescaleY","noevent$2","wheeled","dblclicked","k0","k1","constrain","transition$$1","Gesture","wheelidled","wheel","deltaY","deltaMode","wheelDelay","touch0","touch1","touchstarting","touchDelay","dp","dl","collection","scaleBy","scaleTo","translateBy","translateExtent","version","bisect","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","quantile","dragEnable","dsvFormat","easeLinear","easeQuad","easeQuadIn","easeQuadOut","easeQuadInOut","easeCubic","easeCubicIn","easeCubicOut","easeCubicInOut","easePoly","easePolyIn","easePolyOut","easePolyInOut","easeSin","easeSinIn","easeSinOut","easeSinInOut","easeExp","easeExpIn","easeExpOut","easeExpInOut","easeCircle","easeCircleIn","easeCircleOut","easeCircleInOut","easeBounce","easeBounceIn","easeBounceOut","easeBounceInOut","easeBack","easeBackIn","easeBackOut","easeBackInOut","easeElastic","easeElasticIn","easeElasticOut","easeElasticInOut","forceCenter","forceCollide","forceLink","forceManyBody","forceSimulation","forceX","forceY","formatDefaultLocale","geoArea","geoBounds","geoCentroid","geoCircle","geoClipExtent","geoContains","geoDistance","geoGraticule","geoGraticule10","geoInterpolate","geoLength","geoPath","geoAlbers","geoAlbersUsa","geoAzimuthalEqualArea","geoAzimuthalEqualAreaRaw","geoAzimuthalEquidistant","geoAzimuthalEquidistantRaw","geoConicConformal","geoConicConformalRaw","geoConicEqualArea","geoConicEqualAreaRaw","geoConicEquidistant","geoConicEquidistantRaw","geoEquirectangular","geoEquirectangularRaw","geoGnomonic","geoGnomonicRaw","geoIdentity","geoProjection","geoProjectionMutator","geoMercator","geoMercatorRaw","geoOrthographic","geoOrthographicRaw","geoStereographic","geoStereographicRaw","geoTransverseMercator","geoTransverseMercatorRaw","geoRotation","geoTransform","packSiblings","treemapBinary","treemapSliceDice","treemapSquarify","treemapResquarify","interpolateArray","interpolateBasis","interpolateBasisClosed","interpolateDate","interpolateNumber","interpolateObject","interpolateRgbBasis","interpolateRgbBasisClosed","interpolateHsl","interpolateHslLong","interpolateLab","interpolateHcl","interpolateHclLong","interpolateCubehelix","interpolateCubehelixLong","polygonArea","polygonCentroid","polygonHull","polygonLength","scaleBand","scalePoint","scaleIdentity","scaleLinear","scaleLog","scaleOrdinal","scaleImplicit","scalePow","scaleSqrt","scaleQuantile","scaleQuantize","scaleThreshold","scaleTime","scaleUtc","schemeCategory10","schemeCategory20b","schemeCategory20c","schemeCategory20","interpolateCubehelixDefault","interpolateRainbow","interpolateWarm","interpolateCool","interpolateViridis","interpolateMagma","interpolateInferno","interpolatePlasma","scaleSequential","symbolCircle","symbolCross","symbolDiamond","symbolSquare","symbolStar","symbolTriangle","symbolWye","curveBasisClosed","curveBasisOpen","curveBasis","curveBundle","curveCardinalClosed","curveCardinalOpen","curveCardinal","curveCatmullRomClosed","curveCatmullRomOpen","curveCatmullRom","curveLinearClosed","curveMonotoneX","curveMonotoneY","curveNatural","curveStep","curveStepAfter","curveStepBefore","stackOffsetExpand","stackOffsetDiverging","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","stackOrderAscending","stackOrderDescending","stackOrderInsideOut","stackOrderNone","stackOrderReverse","timeInterval","timeMillisecond","timeMilliseconds","utcMillisecond","utcMilliseconds","timeSeconds","utcSecond","utcSeconds","timeMinutes","timeHours","timeDays","timeWeeks","timeSunday","timeSundays","timeMonday","timeMondays","timeTuesday","timeTuesdays","timeWednesday","timeWednesdays","timeThursday","timeThursdays","timeFriday","timeFridays","timeSaturday","timeSaturdays","timeMonths","timeYears","utcWeek","utcWeeks","timeFormatDefaultLocale","timeFormatLocale","isoFormat","isoParse","zoomTransform","zoomIdentity","extremum","dropLines","separators","eventDrops","getScales","yScale","eventDropGraph","chart","finalConfiguration","_drawer2","_zoom2","visibleDataInRow","timeBounds","_configurable2","_extends","assign","_configurable","newObj","_config","_config2","_drawer","_zoom","filters","where","func","wait","immediate","later","last","timestamp","debounced","callNow","eval"],"mappings":"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","file":"eventDrops.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"eventDrops\"] = factory();\n\telse\n\t\troot[\"eventDrops\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"eventDrops\"] = factory();\n\telse\n\t\troot[\"eventDrops\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 12);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nexports.default = filterData;\nfunction filterData() {\n    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var scale = arguments[1];\n    var date = arguments[2];\n\n    var _scale$domain = scale.domain(),\n        _scale$domain2 = _slicedToArray(_scale$domain, 2),\n        min = _scale$domain2[0],\n        max = _scale$domain2[1];\n\n    return data.filter(function (d) {\n        return date(d) >= min && date(d) <= max;\n    });\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _filterData = __webpack_require__(0);\n\nvar _filterData2 = _interopRequireDefault(_filterData);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (container, scales, config) {\n    return function (data) {\n        var labels = container.selectAll('.label').data(data);\n\n        var text = function text(d) {\n            var count = (0, _filterData2.default)(d.data, scales.x, config.date).length;\n            return d.name + (count > 0 ? ' (' + count + ')' : '');\n        };\n\n        labels.text(text);\n\n        labels.enter().append('text').classed('label', true).attr('x', config.labelsWidth).attr('transform', function (d, idx) {\n            return 'translate(0, ' + (40 + scales.y(idx)) + ')';\n        }).attr('text-anchor', 'end').text(text);\n\n        labels.exit().remove();\n    };\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.boolOrReturnValue = exports.drawBottomAxis = exports.drawTopAxis = undefined;\n\nvar _xAxis = __webpack_require__(14);\n\nvar _xAxis2 = _interopRequireDefault(_xAxis);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar drawAxis = function drawAxis(container, xScale, configuration, orientation, y) {\n    return container.append('g').classed('x-axis', true).classed(orientation, true).attr('transform', 'translate(0, ' + y + ')').call((0, _xAxis2.default)(xScale, configuration, orientation));\n};\n\nvar drawTopAxis = exports.drawTopAxis = function drawTopAxis(container, xScale, configuration, dimensions) {\n    return drawAxis(container, xScale, configuration, 'top', 0);\n};\n\nvar drawBottomAxis = exports.drawBottomAxis = function drawBottomAxis(container, xScale, configuration, dimensions) {\n    return drawAxis(container, xScale, configuration, 'bottom', +dimensions.height - 21);\n};\n\nvar boolOrReturnValue = exports.boolOrReturnValue = function boolOrReturnValue(x, data) {\n    return typeof x === 'function' ? x(data) : x;\n};\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar config = {\n    lineHeight: 40,\n    start: new Date(0),\n    end: new Date(),\n    minScale: 0,\n    maxScale: Infinity,\n    margin: {\n        top: 60,\n        left: 200,\n        bottom: 40,\n        right: 50\n    },\n    labelsWidth: 210,\n    labelsRightMargin: 10,\n    locale: null,\n    axisFormat: null,\n    tickFormat: function tickFormat(date) {\n        var formatMillisecond = d3.timeFormat('.%L');\n        var formatSecond = d3.timeFormat(':%S');\n        var formatMinute = d3.timeFormat('%I:%M');\n        var formatHour = d3.timeFormat('%I %p');\n        var formatDay = d3.timeFormat('%a %d');\n        var formatWeek = d3.timeFormat('%b %d');\n        var formatMonth = d3.timeFormat('%B');\n        var formatYear = d3.timeFormat('%Y');\n\n        return (d3.timeSecond(date) < date ? formatMillisecond : d3.timeMinute(date) < date ? formatSecond : d3.timeHour(date) < date ? formatMinute : d3.timeDay(date) < date ? formatHour : d3.timeMonth(date) < date ? d3.timeWeek(date) < date ? formatDay : formatWeek : d3.timeYear(date) < date ? formatMonth : formatYear)(date);\n    },\n    mouseout: function mouseout() {},\n    mouseover: function mouseover() {},\n    zoomend: function zoomend() {},\n    click: function click() {},\n    hasDelimiter: true,\n    date: function date(d) {\n        return d;\n    },\n    hasTopAxis: true,\n    hasBottomAxis: function hasBottomAxis(d) {\n        return d.length >= 10;\n    },\n    eventLineColor: 'black',\n    eventColor: null,\n    metaballs: true,\n    zoomable: true\n};\n\nconfig.dateFormat = config.locale ? config.locale.timeFormat('%d %B %Y') : d3.timeFormat('%d %B %Y');\n\nexports.default = config;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _metaballs = __webpack_require__(13);\n\nvar _delimiters = __webpack_require__(9);\n\nvar _drops = __webpack_require__(10);\n\nvar _drops2 = _interopRequireDefault(_drops);\n\nvar _labels = __webpack_require__(1);\n\nvar _labels2 = _interopRequireDefault(_labels);\n\nvar _lineSeparator = __webpack_require__(11);\n\nvar _lineSeparator2 = _interopRequireDefault(_lineSeparator);\n\nvar _xAxis = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (svg, dimensions, scales, configuration) {\n    var defs = svg.append('defs');\n\n    defs.append('clipPath').attr('id', 'drops-container-clipper').append('rect').attr('id', 'drops-container-rect').attr('width', dimensions.width - (configuration.labelsWidth + configuration.labelsRightMargin)).attr('height', dimensions.height + configuration.margin.top + configuration.margin.bottom);\n\n    var labelsContainer = svg.append('g').classed('labels', true).attr('width', configuration.labelsWidth).attr('transform', 'translate(0, ' + configuration.lineHeight + ')');\n\n    var chartWrapper = svg.append('g').attr('class', 'chart-wrapper').attr('width', dimensions.width - (configuration.labelsWidth + configuration.labelsRightMargin)).attr('transform', 'translate(' + (configuration.labelsWidth + configuration.labelsRightMargin) + ', 55)');\n\n    var dropsContainer = chartWrapper.append('g').classed('drops-container', true).attr('clip-path', 'url(#drops-container-clipper)');\n\n    if (configuration.metaballs) {\n        dropsContainer.style('filter', 'url(#metaballs)');\n    }\n\n    chartWrapper.append('g').classed('extremum', true).attr('width', dimensions.width).attr('height', 30).attr('transform', 'translate(0, -35)');\n\n    if (configuration.metaballs) {\n        (0, _metaballs.metaballs)(defs);\n    }\n\n    var axesContainer = chartWrapper.append('g').classed('axes', true);\n    var lineSeparator = (0, _lineSeparator2.default)(scales, configuration, dimensions);\n    var labels = (0, _labels2.default)(labelsContainer, scales, configuration);\n    var drops = (0, _drops2.default)(dropsContainer, scales, configuration);\n\n    return function (data) {\n        lineSeparator(axesContainer, data);\n        (0, _delimiters.delimiters)(svg, scales, configuration.labelsWidth + configuration.labelsRightMargin, configuration.dateFormat);\n        drops(data);\n        labels(data);\n        if ((0, _xAxis.boolOrReturnValue)(configuration.hasTopAxis, data)) {\n            (0, _xAxis.drawTopAxis)(axesContainer, scales.x, configuration, dimensions);\n        }\n        if ((0, _xAxis.boolOrReturnValue)(configuration.hasBottomAxis, data)) {\n            (0, _xAxis.drawBottomAxis)(axesContainer, scales.x, configuration, dimensions);\n        }\n    };\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _debounce = __webpack_require__(15);\n\nvar _debounce2 = _interopRequireDefault(_debounce);\n\nvar _labels = __webpack_require__(1);\n\nvar _labels2 = _interopRequireDefault(_labels);\n\nvar _xAxis = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (container, dimensions, scales, configuration, callback) {\n    var onZoom = function onZoom(data) {\n        var scalingFunction = d3.event.transform.rescaleX(scales.x);\n\n        if ((0, _xAxis.boolOrReturnValue)(configuration.hasTopAxis, data)) {\n            container.selectAll('.x-axis.top').call(d3.axisTop().scale(scalingFunction));\n        }\n\n        if ((0, _xAxis.boolOrReturnValue)(configuration.hasBottomAxis, data)) {\n            container.selectAll('.x-axis.bottom').call(d3.axisBottom().scale(scalingFunction));\n        }\n\n        var sumDataCount = (0, _debounce2.default)((0, _labels2.default)(container.select('.labels'), { x: scalingFunction }, configuration), 100);\n\n        global.requestAnimationFrame(function () {\n            container.selectAll('.drop-line').selectAll('.drop').attr('cx', function (d) {\n                return scalingFunction(new Date(d.date));\n            });\n\n            sumDataCount(data);\n\n            if (callback) {\n                callback(data);\n            }\n        });\n    };\n\n    var zoom = d3.zoom().scaleExtent([configuration.minScale, configuration.maxScale]).on('zoom', onZoom).on('end', configuration.zoomend);\n\n    container.call(zoom);\n    return zoom;\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(16)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction configurable(targetFunction, config) {\n\n    function configure(item) {\n        return function(value) {\n            if (!arguments.length) return config[item];\n            config[item] = value;\n\n            return targetFunction;\n        };\n    }\n\n    for (var item in config) {\n        targetFunction[item] = configure(item);\n    }\n}\n\nif(true) {\n    module.exports = configurable;\n} else if ('function' == typeof define && define.amd) {\n    define([], configurable);\n} else {\n    window.configurable = configurable;\n}\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\t true ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar delimiters = exports.delimiters = function delimiters(svg, scales, x, dateFormat) {\n    var extremum = svg.select('.extremum');\n    var domain = scales.x.domain();\n\n    extremum.selectAll('.minimum').remove();\n    extremum.selectAll('.maximum').remove();\n\n    extremum.append('text').text(dateFormat(domain[0])).classed('minimum', true);\n\n    extremum.append('text').text(dateFormat(domain[1])).classed('maximum', true).attr('transform', 'translate(' + (scales.x.range()[1] - x) + ')').attr('text-anchor', 'end');\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (container, scales, configuration) {\n    return function (data) {\n        var dropLines = container.selectAll('.drop-line').data(data).enter().append('g').classed('drop-line', true).attr('width', scales.x.range()[1]).attr('transform', function (d, idx) {\n            return 'translate(0, ' + scales.y(idx) + ')';\n        }).attr('fill', configuration.eventLineColor);\n\n        var drops = dropLines.selectAll('.drop');\n\n        drops.data(function (d) {\n            return d.data;\n        }).enter().append('circle').classed('drop', true).attr('r', 5).attr('cx', function (d) {\n            return scales.x(configuration.date(d));\n        }).attr('cy', configuration.lineHeight / 2).attr('fill', configuration.eventColor).on('click', configuration.click).on('mouseover', configuration.mouseover).on('mouseout', configuration.mouseout);\n\n        // unregister previous event handlers to prevent from memory leaks\n        drops.exit().on('click', null).on('mouseout', null).on('mouseover', null).remove();\n\n        dropLines.exit().remove();\n    };\n};\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (scales, configuration, dimensions) {\n    return function (container, data) {\n        var separators = container.selectAll('.line-separator').data(data);\n\n        separators.enter().append('g').classed('line-separator', true).attr('transform', function (d, i) {\n            return 'translate(0, ' + (scales.y(i) + configuration.lineHeight) + ')';\n        }).append('line').attr('x1', 0).attr('x2', dimensions.width - (configuration.labelsWidth + configuration.labelsRightMargin));\n\n        separators.exit().remove();\n    };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _configurable = __webpack_require__(6);\n\nvar _configurable2 = _interopRequireDefault(_configurable);\n\nvar _d = __webpack_require__(7);\n\nvar d3 = _interopRequireWildcard(_d);\n\nvar _filterData = __webpack_require__(0);\n\nvar _filterData2 = _interopRequireDefault(_filterData);\n\n__webpack_require__(8);\n\nvar _config = __webpack_require__(3);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _drawer = __webpack_require__(4);\n\nvar _drawer2 = _interopRequireDefault(_drawer);\n\nvar _zoom = __webpack_require__(5);\n\nvar _zoom2 = _interopRequireDefault(_zoom);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction eventDrops() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var finalConfiguration = _extends({}, _config2.default, config);\n\n    var yScale = function yScale(data) {\n        return d3.scaleOrdinal().domain(data.map(function (d) {\n            return d.name;\n        })).range(data.map(function (d, i) {\n            return i * finalConfiguration.lineHeight;\n        }));\n    };\n\n    var xScale = function xScale(width, timeBounds) {\n        return d3.scaleTime().domain(timeBounds).range([0, width]);\n    };\n\n    function getScales(dimensions, configuration, data) {\n        return {\n            x: xScale(dimensions.width - (configuration.labelsWidth + configuration.labelsRightMargin), [configuration.start, configuration.end]),\n            y: yScale(data)\n        };\n    }\n\n    function eventDropGraph(selection) {\n        var scales = void 0;\n\n        var chart = selection.each(function selector(data) {\n            d3.select(this).select('.event-drops-chart').remove();\n\n            var dimensions = {\n                width: this.clientWidth,\n                height: data.length * finalConfiguration.lineHeight\n            };\n\n            var svg = d3.select(this).append('svg').classed('event-drops-chart', true).attr('width', dimensions.width).attr('height', dimensions.height + finalConfiguration.margin.top + finalConfiguration.margin.bottom);\n\n            scales = getScales(dimensions, finalConfiguration, data);\n            var draw = (0, _drawer2.default)(svg, dimensions, scales, finalConfiguration);\n            draw(data);\n\n            if (finalConfiguration.zoomable) {\n                (0, _zoom2.default)(svg, dimensions, scales, finalConfiguration);\n            }\n        });\n\n        chart.scales = scales;\n        chart.visibleDataInRow = function (data, scale) {\n            return (0, _filterData2.default)(data, scale, finalConfiguration.date);\n        };\n\n        return chart;\n    }\n\n    (0, _configurable2.default)(eventDropGraph, finalConfiguration);\n\n    return eventDropGraph;\n}\n\nd3.chart = d3.chart || {};\nd3.chart.eventDrops = eventDrops;\n\nexports.default = eventDrops;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar metaballs = exports.metaballs = function metaballs(defs) {\n    var filters = defs.append('filter');\n\n    filters.attr('id', 'metaballs');\n\n    filters.append('feGaussianBlur').attr('in', 'SourceGraphic').attr('stdDeviation', 10).attr('result', 'blur');\n\n    filters.append('feColorMatrix').attr('in', 'blur').attr('mode', 'matrix').attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10').attr('result', 'contrast');\n\n    filters.append('feBlend').attr('in', 'SourceGraphic').attr('in2', 'contrast');\n\n    return filters;\n};\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nexports.default = function (xScale, configuration, where) {\n    var tickFormat = configuration.locale ? configuration.locale.timeFormat : configuration.tickFormat;\n\n    //change where so the first letter will be uppercase\n    where = '' + where[0].toUpperCase() + where.slice(1);\n\n    var axis = d3['axis' + where]().scale(xScale).tickFormat(tickFormat);\n\n    if (typeof configuration.axisFormat === 'function') {\n        configuration.axisFormat(axis);\n    }\n\n    return axis;\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// eventDrops.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 12);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 148146904ab300fb25d2","export default function filterData(data = [], scale, date) {\n    const [min, max] = scale.domain();\n    return data.filter(d => date(d) >= min && date(d) <= max);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/filterData.js","import filterData from '../filterData';\n\nexport default (container, scales, config) =>\n    (data) => {\n        const labels = container.selectAll('.label').data(data);\n\n        const text = (d) => {\n            const count = filterData(d.data, scales.x, config.date).length;\n            return d.name + (count > 0 ? ` (${count})` : '');\n        };\n\n        labels.text(text);\n\n        labels\n            .enter()\n            .append('text')\n            .classed('label', true)\n            .attr('x', config.labelsWidth)\n            .attr(\n                'transform',\n                (d, idx) => `translate(0, ${40 + scales.y(idx)})`\n            )\n            .attr('text-anchor', 'end')\n            .text(text);\n\n        labels.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/labels.js","import xAxis from '../xAxis';\n\nconst drawAxis = (container, xScale, configuration, orientation, y) => {\n    return container\n        .append('g')\n        .classed('x-axis', true)\n        .classed(orientation, true)\n        .attr('transform', `translate(0, ${y})`)\n        .call(xAxis(xScale, configuration, orientation));\n};\n\nexport const drawTopAxis = (container, xScale, configuration, dimensions) =>\n    drawAxis(container, xScale, configuration, 'top', 0);\n\nexport const drawBottomAxis = (container, xScale, configuration, dimensions) =>\n    drawAxis(\n        container,\n        xScale,\n        configuration,\n        'bottom',\n        +dimensions.height - 21\n    );\n\nexport const boolOrReturnValue = (x, data) =>\n    typeof x === 'function' ? x(data) : x;\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/xAxis.js","const config = {\n    lineHeight: 40,\n    start: new Date(0),\n    end: new Date(),\n    minScale: 0,\n    maxScale: Infinity,\n    margin: {\n        top: 60,\n        left: 200,\n        bottom: 40,\n        right: 50,\n    },\n    labelsWidth: 210,\n    labelsRightMargin: 10,\n    locale: null,\n    axisFormat: null,\n    tickFormat: date => {\n        const formatMillisecond = d3.timeFormat('.%L');\n        const formatSecond = d3.timeFormat(':%S');\n        const formatMinute = d3.timeFormat('%I:%M');\n        const formatHour = d3.timeFormat('%I %p');\n        const formatDay = d3.timeFormat('%a %d');\n        const formatWeek = d3.timeFormat('%b %d');\n        const formatMonth = d3.timeFormat('%B');\n        const formatYear = d3.timeFormat('%Y');\n\n        return (d3.timeSecond(date) < date\n            ? formatMillisecond\n            : d3.timeMinute(date) < date\n                  ? formatSecond\n                  : d3.timeHour(date) < date\n                        ? formatMinute\n                        : d3.timeDay(date) < date\n                              ? formatHour\n                              : d3.timeMonth(date) < date\n                                    ? d3.timeWeek(date) < date\n                                          ? formatDay\n                                          : formatWeek\n                                    : d3.timeYear(date) < date\n                                          ? formatMonth\n                                          : formatYear)(date);\n    },\n    mouseout: () => {},\n    mouseover: () => {},\n    zoomend: () => {},\n    click: () => {},\n    hasDelimiter: true,\n    date: d => d,\n    hasTopAxis: true,\n    hasBottomAxis: d => d.length >= 10,\n    eventLineColor: 'black',\n    eventColor: null,\n    metaballs: true,\n    zoomable: true,\n};\n\nconfig.dateFormat = config.locale\n    ? config.locale.timeFormat('%d %B %Y')\n    : d3.timeFormat('%d %B %Y');\n\nexport default config;\n\n\n\n// WEBPACK FOOTER //\n// ./src/config.js","import { metaballs } from '../metaballs';\nimport { delimiters } from './delimiters';\nimport dropsFactory from './drops';\nimport labelsFactory from './labels';\nimport lineSeparatorFactory from './lineSeparator';\nimport { drawTopAxis, drawBottomAxis, boolOrReturnValue } from './xAxis';\n\nexport default (svg, dimensions, scales, configuration) => {\n    const defs = svg.append('defs');\n\n    defs\n        .append('clipPath')\n        .attr('id', 'drops-container-clipper')\n        .append('rect')\n        .attr('id', 'drops-container-rect')\n        .attr(\n            'width',\n            dimensions.width -\n                (configuration.labelsWidth + configuration.labelsRightMargin)\n        )\n        .attr(\n            'height',\n            dimensions.height +\n                configuration.margin.top +\n                configuration.margin.bottom\n        );\n\n    const labelsContainer = svg\n        .append('g')\n        .classed('labels', true)\n        .attr('width', configuration.labelsWidth)\n        .attr('transform', `translate(0, ${configuration.lineHeight})`);\n\n    const chartWrapper = svg\n        .append('g')\n        .attr('class', 'chart-wrapper')\n        .attr(\n            'width',\n            dimensions.width -\n                (configuration.labelsWidth + configuration.labelsRightMargin)\n        )\n        .attr(\n            'transform',\n            `translate(${configuration.labelsWidth + configuration.labelsRightMargin}, 55)`\n        );\n\n    const dropsContainer = chartWrapper\n        .append('g')\n        .classed('drops-container', true)\n        .attr('clip-path', 'url(#drops-container-clipper)');\n\n    if (configuration.metaballs) {\n        dropsContainer.style('filter', 'url(#metaballs)');\n    }\n\n    chartWrapper\n        .append('g')\n        .classed('extremum', true)\n        .attr('width', dimensions.width)\n        .attr('height', 30)\n        .attr('transform', `translate(0, -35)`);\n\n    if (configuration.metaballs) {\n        metaballs(defs);\n    }\n\n    const axesContainer = chartWrapper.append('g').classed('axes', true);\n    const lineSeparator = lineSeparatorFactory(\n        scales,\n        configuration,\n        dimensions\n    );\n    const labels = labelsFactory(labelsContainer, scales, configuration);\n    const drops = dropsFactory(dropsContainer, scales, configuration);\n\n    return data => {\n        lineSeparator(axesContainer, data);\n        delimiters(\n            svg,\n            scales,\n            configuration.labelsWidth + configuration.labelsRightMargin,\n            configuration.dateFormat\n        );\n        drops(data);\n        labels(data);\n        if (boolOrReturnValue(configuration.hasTopAxis, data)) {\n            drawTopAxis(axesContainer, scales.x, configuration, dimensions);\n        }\n        if (boolOrReturnValue(configuration.hasBottomAxis, data)) {\n            drawBottomAxis(axesContainer, scales.x, configuration, dimensions);\n        }\n    };\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/index.js","import debounce from 'debounce';\nimport labels from './drawer/labels';\nimport { boolOrReturnValue } from './drawer/xAxis';\n\nexport default (container, dimensions, scales, configuration, callback) => {\n    const onZoom = (data) => {\n        const scalingFunction = d3.event.transform.rescaleX(scales.x);\n\n        if (boolOrReturnValue(configuration.hasTopAxis, data)) {\n            container\n                .selectAll('.x-axis.top')\n                .call(d3.axisTop().scale(scalingFunction));\n        }\n\n        if (boolOrReturnValue(configuration.hasBottomAxis, data)) {\n            container\n                .selectAll('.x-axis.bottom')\n                .call(d3.axisBottom().scale(scalingFunction));\n        }\n\n        const sumDataCount = debounce(\n            labels(\n                container.select('.labels'),\n                { x: scalingFunction },\n                configuration\n            ),\n            100\n        );\n\n        global.requestAnimationFrame(() => {\n            container\n                .selectAll('.drop-line')\n                .selectAll('.drop')\n                .attr('cx', d => scalingFunction(new Date(d.date)));\n\n            sumDataCount(data);\n\n            if (callback) {\n                callback(data);\n            }\n        });\n    };\n\n    const zoom = d3\n        .zoom()\n        .scaleExtent([configuration.minScale, configuration.maxScale])\n        .on('zoom', onZoom)\n        .on('end', configuration.zoomend);\n\n    container.call(zoom);\n    return zoom;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/zoom.js","'use strict';\n\nfunction configurable(targetFunction, config) {\n\n    function configure(item) {\n        return function(value) {\n            if (!arguments.length) return config[item];\n            config[item] = value;\n\n            return targetFunction;\n        };\n    }\n\n    for (var item in config) {\n        targetFunction[item] = configure(item);\n    }\n}\n\nif('object' == typeof exports && 'undefined' != typeof module) {\n    module.exports = configurable;\n} else if ('function' == typeof define && define.amd) {\n    define([], configurable);\n} else {\n    window.configurable = configurable;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/configurable.js/configurable.js\n// module id = 6\n// module chunks = 0","// https://d3js.org Version 4.9.1. Copyright 2017 Mike Bostock.\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.d3 = global.d3 || {})));\n}(this, (function (exports) { 'use strict';\n\nvar version = \"4.9.1\";\n\nvar ascending = function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n};\n\nvar bisector = function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n};\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n\nvar ascendingBisect = bisector(ascending);\nvar bisectRight = ascendingBisect.right;\nvar bisectLeft = ascendingBisect.left;\n\nvar pairs = function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n};\n\nfunction pair(a, b) {\n  return [a, b];\n}\n\nvar cross = function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n};\n\nvar descending = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar number = function(x) {\n  return x === null ? NaN : +x;\n};\n\nvar variance = function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n};\n\nvar deviation = function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n};\n\nvar extent = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n};\n\nvar array = Array.prototype;\n\nvar slice = array.slice;\nvar map = array.map;\n\nvar constant = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar identity = function(x) {\n  return x;\n};\n\nvar sequence = function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n};\n\nvar e10 = Math.sqrt(50);\nvar e5 = Math.sqrt(10);\nvar e2 = Math.sqrt(2);\n\nvar ticks = function(start, stop, count) {\n  var reverse = stop < start,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  if (reverse) n = start, start = stop, stop = n;\n\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n};\n\nfunction tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nfunction tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n\nvar sturges = function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n};\n\nvar histogram = function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = sequence(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisectRight(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n};\n\nvar threshold = function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n};\n\nvar freedmanDiaconis = function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (threshold(values, 0.75) - threshold(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n};\n\nvar scott = function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n};\n\nvar max = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n};\n\nvar mean = function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n};\n\nvar median = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return threshold(numbers.sort(ascending), 0.5);\n};\n\nvar merge = function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n};\n\nvar min = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n};\n\nvar permute = function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n};\n\nvar scan = function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n};\n\nvar shuffle = function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n};\n\nvar sum = function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n};\n\nvar transpose = function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n};\n\nfunction length(d) {\n  return d.length;\n}\n\nvar zip = function() {\n  return transpose(arguments);\n};\n\nvar slice$1 = Array.prototype.slice;\n\nvar identity$1 = function(x) {\n  return x;\n};\n\nvar top = 1;\nvar right = 2;\nvar bottom = 3;\nvar left = 4;\nvar epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity$1) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = range[0] + 0.5,\n        range1 = range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : identity$1)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice$1.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice$1.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice$1.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nfunction axisTop(scale) {\n  return axis(top, scale);\n}\n\nfunction axisRight(scale) {\n  return axis(right, scale);\n}\n\nfunction axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nfunction axisLeft(scale) {\n  return axis(left, scale);\n}\n\nvar noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nvar xhtml = \"http://www.w3.org/1999/xhtml\";\n\nvar namespaces = {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n\nvar namespace = function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n};\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nvar creator = function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n};\n\nvar nextId = 0;\n\nfunction local$1() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local$1.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nvar matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nvar matcher$1 = matcher;\n\nvar filterEvents = {};\n\nexports.event = null;\n\nif (typeof document !== \"undefined\") {\n  var element$1 = document.documentElement;\n  if (!(\"onmouseenter\" in element$1)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = exports.event; // Events can be reentrant (e.g., focus).\n    exports.event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      exports.event = event0;\n    }\n  };\n}\n\nfunction parseTypenames$1(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nvar selection_on = function(typename, value, capture) {\n  var typenames = parseTypenames$1(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n};\n\nfunction customEvent(event1, listener, that, args) {\n  var event0 = exports.event;\n  event1.sourceEvent = exports.event;\n  exports.event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    exports.event = event0;\n  }\n}\n\nvar sourceEvent = function() {\n  var current = exports.event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n};\n\nvar point = function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n};\n\nvar mouse = function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n};\n\nfunction none() {}\n\nvar selector = function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n};\n\nvar selection_select = function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nfunction empty$1() {\n  return [];\n}\n\nvar selectorAll = function(selector) {\n  return selector == null ? empty$1 : function() {\n    return this.querySelectorAll(selector);\n  };\n};\n\nvar selection_selectAll = function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n};\n\nvar selection_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n};\n\nvar sparse = function(update) {\n  return new Array(update.length);\n};\n\nvar selection_enter = function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n};\n\nfunction EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n\nvar constant$1 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nvar selection_data = function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant$1(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n};\n\nvar selection_exit = function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n};\n\nvar selection_merge = function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n};\n\nvar selection_order = function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n};\n\nvar selection_sort = function(compare) {\n  if (!compare) compare = ascending$1;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n};\n\nfunction ascending$1(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n\nvar selection_call = function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n};\n\nvar selection_nodes = function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n};\n\nvar selection_node = function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n};\n\nvar selection_size = function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n};\n\nvar selection_empty = function() {\n  return !this.node();\n};\n\nvar selection_each = function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n};\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nvar selection_attr = function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n};\n\nvar defaultView = function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n};\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nvar selection_style = function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n};\n\nfunction styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n\nfunction propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nvar selection_property = function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n};\n\nfunction classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nvar selection_classed = function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n};\n\nfunction textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nvar selection_text = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n};\n\nfunction htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nvar selection_html = function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n};\n\nfunction raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nvar selection_raise = function() {\n  return this.each(raise);\n};\n\nfunction lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nvar selection_lower = function() {\n  return this.each(lower);\n};\n\nvar selection_append = function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n};\n\nfunction constantNull() {\n  return null;\n}\n\nvar selection_insert = function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n};\n\nfunction remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nvar selection_remove = function() {\n  return this.each(remove);\n};\n\nvar selection_datum = function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n};\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nvar selection_dispatch = function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n};\n\nvar root = [null];\n\nfunction Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nvar select = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n};\n\nvar selectAll = function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n};\n\nvar touch = function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n};\n\nvar touches = function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n};\n\nfunction nopropagation() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar dragDisable = function(view) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n};\n\nfunction yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection$$1 = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection$$1.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection$$1.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection$$1.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n\nvar constant$2 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$1() {\n  return !exports.event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: exports.event.x, y: exports.event.y} : d;\n}\n\nvar drag = function() {\n  var filter = defaultFilter$1,\n      container = defaultContainer,\n      subject = defaultSubject,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection$$1) {\n    selection$$1\n        .on(\"mousedown.drag\", mousedowned)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(exports.event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    dragDisable(exports.event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = exports.event.clientX;\n    mousedowny = exports.event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = exports.event.clientX - mousedownx, dy = exports.event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(exports.event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(exports.event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches$$1 = exports.event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches$$1[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches$$1[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((exports.event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$2(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant$2(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant$2(_), drag) : subject;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n};\n\nvar define = function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n};\n\nfunction extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n\nfunction Color() {}\n\nvar darker = 0.7;\nvar brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\";\nvar reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\";\nvar reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\";\nvar reHex3 = /^#([0-9a-f]{3})$/;\nvar reHex6 = /^#([0-9a-f]{6})$/;\nvar reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\");\nvar reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\");\nvar reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\");\nvar reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\");\nvar reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\");\nvar reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nfunction color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nfunction rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nfunction rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nfunction Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nfunction hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nfunction hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n\nvar deg2rad = Math.PI / 180;\nvar rad2deg = 180 / Math.PI;\n\nvar Kn = 18;\nvar Xn = 0.950470;\nvar Yn = 1;\nvar Zn = 1.088830;\nvar t0 = 4 / 29;\nvar t1 = 6 / 29;\nvar t2 = 3 * t1 * t1;\nvar t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var b = rgb2xyz(o.r),\n      a = rgb2xyz(o.g),\n      l = rgb2xyz(o.b),\n      x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n      y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n      z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nfunction lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nfunction Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - Kn * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      xyz2rgb( 3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n      xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n      xyz2rgb( 0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nfunction hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + Kn * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - Kn * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n\nvar A = -0.14861;\nvar B = +1.78277;\nvar C = -0.29227;\nvar D = -0.90649;\nvar E = +1.97294;\nvar ED = E * D;\nvar EB = E * B;\nvar BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nfunction cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n\nfunction basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nvar basis$1 = function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar basisClosed = function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n};\n\nvar constant$3 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nfunction hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant$3(isNaN(a) ? b : a);\n}\n\nfunction gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant$3(isNaN(a) ? b : a);\n  };\n}\n\nfunction nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant$3(isNaN(a) ? b : a);\n}\n\nvar interpolateRgb = ((function rgbGamma(y) {\n  var color$$1 = gamma(y);\n\n  function rgb$$1(start, end) {\n    var r = color$$1((start = rgb(start)).r, (end = rgb(end)).r),\n        g = color$$1(start.g, end.g),\n        b = color$$1(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb$$1.gamma = rgbGamma;\n\n  return rgb$$1;\n}))(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color$$1;\n    for (i = 0; i < n; ++i) {\n      color$$1 = rgb(colors[i]);\n      r[i] = color$$1.r || 0;\n      g[i] = color$$1.g || 0;\n      b[i] = color$$1.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color$$1.opacity = 1;\n    return function(t) {\n      color$$1.r = r(t);\n      color$$1.g = g(t);\n      color$$1.b = b(t);\n      return color$$1 + \"\";\n    };\n  };\n}\n\nvar rgbBasis = rgbSpline(basis$1);\nvar rgbBasisClosed = rgbSpline(basisClosed);\n\nvar array$1 = function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(nb),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = interpolateValue(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n};\n\nvar date = function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n};\n\nvar reinterpolate = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n};\n\nvar object = function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = interpolateValue(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n};\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\nvar reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nvar interpolateString = function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: reinterpolate(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n};\n\nvar interpolateValue = function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant$3(b)\n      : (t === \"number\" ? reinterpolate\n      : t === \"string\" ? ((c = color(b)) ? (b = c, interpolateRgb) : interpolateString)\n      : b instanceof color ? interpolateRgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array$1\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : reinterpolate)(a, b);\n};\n\nvar interpolateRound = function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n};\n\nvar degrees = 180 / Math.PI;\n\nvar identity$2 = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nvar decompose = function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n};\n\nvar cssNode;\nvar cssRoot;\nvar cssView;\nvar svgNode;\n\nfunction parseCss(value) {\n  if (value === \"none\") return identity$2;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nfunction parseSvg(value) {\n  if (value == null) return identity$2;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity$2;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: reinterpolate(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: reinterpolate(xa, xb)}, {i: i - 2, x: reinterpolate(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nvar interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nvar interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n\nvar rho = Math.SQRT2;\nvar rho2 = 2;\nvar rho4 = 4;\nvar epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nvar interpolateZoom = function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    };\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    };\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n};\n\nfunction hsl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hsl(start)).h, (end = hsl(end)).h),\n        s = nogamma(start.s, end.s),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hsl$2 = hsl$1(hue);\nvar hslLong = hsl$1(nogamma);\n\nfunction lab$1(start, end) {\n  var l = nogamma((start = lab(start)).l, (end = lab(end)).l),\n      a = nogamma(start.a, end.a),\n      b = nogamma(start.b, end.b),\n      opacity = nogamma(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n\nfunction hcl$1(hue$$1) {\n  return function(start, end) {\n    var h = hue$$1((start = hcl(start)).h, (end = hcl(end)).h),\n        c = nogamma(start.c, end.c),\n        l = nogamma(start.l, end.l),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nvar hcl$2 = hcl$1(hue);\nvar hclLong = hcl$1(nogamma);\n\nfunction cubehelix$1(hue$$1) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix$$1(start, end) {\n      var h = hue$$1((start = cubehelix(start)).h, (end = cubehelix(end)).h),\n          s = nogamma(start.s, end.s),\n          l = nogamma(start.l, end.l),\n          opacity = nogamma(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix$$1.gamma = cubehelixGamma;\n\n    return cubehelix$$1;\n  })(1);\n}\n\nvar cubehelix$2 = cubehelix$1(hue);\nvar cubehelixLong = cubehelix$1(nogamma);\n\nvar quantize = function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n};\n\nvar frame = 0;\nvar timeout = 0;\nvar interval = 0;\nvar pokeDelay = 1000;\nvar taskHead;\nvar taskTail;\nvar clockLast = 0;\nvar clockNow = 0;\nvar clockSkew = 0;\nvar clock = typeof performance === \"object\" && performance.now ? performance : Date;\nvar setFrame = typeof requestAnimationFrame === \"function\" ? requestAnimationFrame : function(f) { setTimeout(f, 17); };\n\nfunction now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nfunction Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nfunction timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nfunction timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow;\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, delay);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clockNow, interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\nvar timeout$1 = function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n};\n\nvar interval$1 = function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n};\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nvar CREATED = 0;\nvar SCHEDULED = 1;\nvar STARTING = 2;\nvar STARTED = 3;\nvar RUNNING = 4;\nvar ENDING = 5;\nvar ENDED = 6;\n\nvar schedule = function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n};\n\nfunction init(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > CREATED) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction set$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id]) || schedule.state > STARTING) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction get$1(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"too late\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout$1(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout$1(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n\nvar interrupt = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n};\n\nvar selection_interrupt = function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n};\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set$1(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nvar transition_tween = function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get$1(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n};\n\nfunction tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set$1(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get$1(node, id).value[name];\n  };\n}\n\nvar interpolate$$1 = function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? reinterpolate\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n};\n\nfunction attrRemove$1(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS$1(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant$1(name, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS$1(fullname, interpolate$$1, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction$1(name, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS$1(fullname, interpolate$$1, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$1(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_attr = function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransformSvg : interpolate$$1;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS$1 : attrFunction$1)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS$1 : attrRemove$1)(fullname)\n      : (fullname.local ? attrConstantNS$1 : attrConstant$1)(fullname, i, value + \"\"));\n};\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_attrTween = function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n};\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nvar transition_delay = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get$1(this.node(), id).delay;\n};\n\nfunction durationFunction(id, value) {\n  return function() {\n    set$1(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set$1(this, id).duration = value;\n  };\n}\n\nvar transition_duration = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get$1(this.node(), id).duration;\n};\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set$1(this, id).ease = value;\n  };\n}\n\nvar transition_ease = function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get$1(this.node(), id).ease;\n};\n\nvar transition_filter = function(match) {\n  if (typeof match !== \"function\") match = matcher$1(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n};\n\nvar transition_merge = function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n};\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set$1;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nvar transition_on = function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get$1(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n};\n\nfunction removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nvar transition_remove = function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n};\n\nvar transition_select = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selector(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select$$1.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get$1(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n};\n\nvar transition_selectAll = function(select$$1) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select$$1 !== \"function\") select$$1 = selectorAll(select$$1);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select$$1.call(node, node.__data__, i, group), child, inherit = get$1(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n};\n\nvar Selection$1 = selection.prototype.constructor;\n\nvar transition_selection = function() {\n  return new Selection$1(this._groups, this._parents);\n};\n\nfunction styleRemove$1(name, interpolate$$2) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant$1(name, interpolate$$2, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction$1(name, interpolate$$2, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = styleValue(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), styleValue(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate$$2(value00 = value0, value10 = value1);\n  };\n}\n\nvar transition_style = function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransformCss : interpolate$$1;\n  return value == null ? this\n          .styleTween(name, styleRemove$1(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction$1(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant$1(name, i, value + \"\"), priority);\n};\n\nfunction styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nvar transition_styleTween = function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n};\n\nfunction textConstant$1(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction$1(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nvar transition_text = function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction$1(tweenValue(this, \"text\", value))\n      : textConstant$1(value == null ? \"\" : value + \"\"));\n};\n\nvar transition_transition = function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get$1(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n};\n\nvar id = 0;\n\nfunction Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nfunction transition(name) {\n  return selection().transition(name);\n}\n\nfunction newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n\nfunction linear$1(t) {\n  return +t;\n}\n\nfunction quadIn(t) {\n  return t * t;\n}\n\nfunction quadOut(t) {\n  return t * (2 - t);\n}\n\nfunction quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n\nfunction cubicIn(t) {\n  return t * t * t;\n}\n\nfunction cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nfunction cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n\nvar exponent = 3;\n\nvar polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nvar polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nvar polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n\nvar pi = Math.PI;\nvar halfPi = pi / 2;\n\nfunction sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nfunction sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nfunction sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n\nfunction expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nfunction expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nfunction expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n\nfunction circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nfunction circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nfunction circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n\nvar b1 = 4 / 11;\nvar b2 = 6 / 11;\nvar b3 = 8 / 11;\nvar b4 = 3 / 4;\nvar b5 = 9 / 11;\nvar b6 = 10 / 11;\nvar b7 = 15 / 16;\nvar b8 = 21 / 22;\nvar b9 = 63 / 64;\nvar b0 = 1 / b1 / b1;\n\nfunction bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nfunction bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nfunction bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n\nvar overshoot = 1.70158;\n\nvar backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nvar backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nvar backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n\nvar tau = 2 * Math.PI;\nvar amplitude = 1;\nvar period = 0.3;\n\nvar elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nvar elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nvar elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: cubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nvar selection_transition = function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n};\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n\nvar root$1 = [null];\n\nvar active = function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root$1, name, +i);\n      }\n    }\n  }\n\n  return null;\n};\n\nvar constant$4 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar BrushEvent = function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n};\n\nfunction nopropagation$1() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$1 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\nvar MODE_DRAG = {name: \"drag\"};\nvar MODE_SPACE = {name: \"space\"};\nvar MODE_HANDLE = {name: \"handle\"};\nvar MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local$$1(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nfunction brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nfunction brushX() {\n  return brush$1(X);\n}\n\nfunction brushY() {\n  return brush$1(Y);\n}\n\nvar brush = function() {\n  return brush$1(XY);\n};\n\nfunction brush$1(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local$$1(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection$$1) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(this, arguments) : selection$$1, state.extent),\n                i = interpolateValue(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection$$1 === \"function\" ? selection$$1.apply(that, args) : selection$$1, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection$$1 = local$$1(this).selection;\n\n    if (selection$$1) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection$$1[0][0])\n          .attr(\"y\", selection$$1[0][1])\n          .attr(\"width\", selection$$1[1][0] - selection$$1[0][0])\n          .attr(\"height\", selection$$1[1][1] - selection$$1[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection$$1[1][0] - handleSize / 2 : selection$$1[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection$$1[1][1] - handleSize / 2 : selection$$1[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection$$1[1][0] - selection$$1[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection$$1[1][1] - selection$$1[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (exports.event.touches) { if (exports.event.changedTouches.length < exports.event.touches.length) return noevent$1(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = exports.event.target.__data__.type,\n        mode = (exports.event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (exports.event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local$$1(that),\n        extent = state.extent,\n        selection$$1 = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && exports.event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection$$1 = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection$$1[0][0];\n      n0 = selection$$1[0][1];\n      e0 = selection$$1[1][0];\n      s0 = selection$$1[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (exports.event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(exports.event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(exports.event.view);\n    }\n\n    nopropagation$1();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent$1();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection$$1[0][0], e1 = selection$$1[1][0];\n      if (lockY) n1 = selection$$1[0][1], s1 = selection$$1[1][1];\n\n      if (selection$$1[0][0] !== w1\n          || selection$$1[0][1] !== n1\n          || selection$$1[1][0] !== e1\n          || selection$$1[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation$1();\n      if (exports.event.touches) {\n        if (exports.event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        yesdrag(exports.event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection$$1 = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection$$1)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n\n    function keyupped() {\n      switch (exports.event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (exports.event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent$1();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$4([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$4(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n\nvar cos = Math.cos;\nvar sin = Math.sin;\nvar pi$1 = Math.PI;\nvar halfPi$1 = pi$1 / 2;\nvar tau$1 = pi$1 * 2;\nvar max$1 = Math.max;\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nvar chord = function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = sequence(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(sequence(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max$1(0, tau$1 - padAngle * n) / k;\n    dx = k ? padAngle : tau$1 / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max$1(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n};\n\nvar slice$2 = Array.prototype.slice;\n\nvar constant$5 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar pi$2 = Math.PI;\nvar tau$2 = 2 * pi$2;\nvar epsilon$1 = 1e-6;\nvar tauEpsilon = tau$2 - epsilon$1;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon$1)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon$1) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi$2 - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon$1) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon$1 || Math.abs(this._y1 - y0) > epsilon$1) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau$2 + tau$2;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon$1) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi$2)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nvar ribbon = function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice$2.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi$1,\n        sa1 = endAngle.apply(this, argv) - halfPi$1,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi$1,\n        ta1 = endAngle.apply(this, argv) - halfPi$1;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$5(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n};\n\nvar prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map$1.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map$1(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nvar nest = function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) return rollup != null\n        ? rollup(array) : (sortValues != null\n        ? array.sort(sortValues)\n        : array);\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map$1(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n};\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map$1();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n\nfunction Set() {}\n\nvar proto = map$1.prototype;\n\nSet.prototype = set$2.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set$2(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nvar keys = function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n};\n\nvar values = function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n};\n\nvar entries = function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n};\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nvar dsv = function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      delimiterCode = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns;\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var EOL = {}, // sentinel value for end-of-line\n        EOF = {}, // sentinel value for end-of-file\n        rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // the current line number\n        t, // the current token\n        eol; // is the current token followed by EOL?\n\n    function token() {\n      if (I >= N) return EOF; // special case: end of file\n      if (eol) return eol = false, EOL; // special case: end of line\n\n      // special case: quotes\n      var j = I, c;\n      if (text.charCodeAt(j) === 34) {\n        var i = j;\n        while (i++ < N) {\n          if (text.charCodeAt(i) === 34) {\n            if (text.charCodeAt(i + 1) !== 34) break;\n            ++i;\n          }\n        }\n        I = i + 2;\n        c = text.charCodeAt(i + 1);\n        if (c === 13) {\n          eol = true;\n          if (text.charCodeAt(i + 2) === 10) ++I;\n        } else if (c === 10) {\n          eol = true;\n        }\n        return text.slice(j + 1, i).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // common case: find next delimiter or newline\n      while (I < N) {\n        var k = 1;\n        c = text.charCodeAt(I++);\n        if (c === 10) eol = true; // \\n\n        else if (c === 13) { eol = true; if (text.charCodeAt(I) === 10) ++I, ++k; } // \\r|\\r\\n\n        else if (c !== delimiterCode) continue;\n        return text.slice(j, I - k);\n      }\n\n      // special case: last token before EOF\n      return text.slice(j);\n    }\n\n    while ((t = token()) !== EOF) {\n      var a = [];\n      while (t !== EOL && t !== EOF) {\n        a.push(t);\n        t = token();\n      }\n      if (f && (a = f(a, n++)) == null) continue;\n      rows.push(a);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\\\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n};\n\nvar csv = dsv(\",\");\n\nvar csvParse = csv.parse;\nvar csvParseRows = csv.parseRows;\nvar csvFormat = csv.format;\nvar csvFormatRows = csv.formatRows;\n\nvar tsv = dsv(\"\\t\");\n\nvar tsvParse = tsv.parse;\nvar tsvParseRows = tsv.parseRows;\nvar tsvFormat = tsv.format;\nvar tsvFormatRows = tsv.formatRows;\n\nvar center$1 = function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n};\n\nvar constant$6 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar jiggle = function() {\n  return (Math.random() - 0.5) * 1e-6;\n};\n\nvar tree_add = function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n};\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nfunction addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\nvar tree_cover = function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n};\n\nvar tree_data = function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n};\n\nvar tree_extent = function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n};\n\nvar Quad = function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n};\n\nvar tree_find = function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n};\n\nvar tree_remove = function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n};\n\nfunction removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\nvar tree_root = function() {\n  return this._root;\n};\n\nvar tree_size = function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n};\n\nvar tree_visit = function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n};\n\nvar tree_visitAfter = function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n};\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nvar tree_x = function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n};\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nvar tree_y = function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n};\n\nfunction quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nvar collide = function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant$6(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : radius;\n  };\n\n  return force;\n};\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nvar link = function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant$6(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map$1(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant$6(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n};\n\nfunction x$1(d) {\n  return d.x;\n}\n\nfunction y$1(d) {\n  return d.y;\n}\n\nvar initialRadius = 10;\nvar initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nvar simulation = function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map$1(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n};\n\nvar manyBody = function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant$6(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x$1, y$1).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, x$$1, y$$1, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x$$1 = y$$1 = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = q.value)) {\n          strength += c, x$$1 += c * q.x, y$$1 += c * q.y;\n        }\n      }\n      quad.x = x$$1 / strength;\n      quad.y = y$$1 / strength;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x$$1 = quad.x - node.x,\n        y$$1 = quad.y - node.y,\n        w = x2 - x1,\n        l = x$$1 * x$$1 + y$$1 * y$$1;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n        if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x$$1 * quad.value * alpha / l;\n        node.vy += y$$1 * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x$$1 === 0) x$$1 = jiggle(), l += x$$1 * x$$1;\n      if (y$$1 === 0) y$$1 = jiggle(), l += y$$1 * y$$1;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x$$1 * w;\n      node.vy += y$$1 * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n};\n\nvar x$2 = function(x) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant$6(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : x;\n  };\n\n  return force;\n};\n\nvar y$2 = function(y) {\n  var strength = constant$6(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant$6(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant$6(+_), initialize(), force) : y;\n  };\n\n  return force;\n};\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nvar formatDecimal = function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n};\n\nvar exponent$1 = function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n};\n\nvar formatGroup = function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n};\n\nvar formatNumerals = function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n};\n\nvar formatDefault = function(x, p) {\n  x = x.toPrecision(p);\n\n  out: for (var n = x.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (x[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      case \"e\": break out;\n      default: if (i0 > 0) i0 = 0; break;\n    }\n  }\n\n  return i0 > 0 ? x.slice(0, i0) + x.slice(i1 + 1) : x;\n};\n\nvar prefixExponent;\n\nvar formatPrefixAuto = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n};\n\nvar formatRounded = function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n};\n\nvar formatTypes = {\n  \"\": formatDefault,\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n\n// [[fill]align][sign][symbol][0][width][,][.precision][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?([a-z%])?$/i;\n\nfunction formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n\n  var match,\n      fill = match[1] || \" \",\n      align = match[2] || \">\",\n      sign = match[3] || \"-\",\n      symbol = match[4] || \"\",\n      zero = !!match[5],\n      width = match[6] && +match[6],\n      comma = !!match[7],\n      precision = match[8] && +match[8].slice(1),\n      type = match[9] || \"\";\n\n  // The \"n\" type is an alias for \",g\".\n  if (type === \"n\") comma = true, type = \"g\";\n\n  // Map invalid types to the default format.\n  else if (!formatTypes[type]) type = \"\";\n\n  // If zero fill is specified, padding goes after sign and before digits.\n  if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n  this.fill = fill;\n  this.align = align;\n  this.sign = sign;\n  this.symbol = symbol;\n  this.zero = zero;\n  this.width = width;\n  this.comma = comma;\n  this.precision = precision;\n  this.type = type;\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + this.type;\n};\n\nvar identity$3 = function(x) {\n  return x;\n};\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"\\xB5\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nvar formatLocale = function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity$3,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity$3,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        type = specifier.type;\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = !type || /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? (type ? 6 : 12)\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = valueSuffix + (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n};\n\nvar locale$1;\n\n\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nfunction defaultLocale(definition) {\n  locale$1 = formatLocale(definition);\n  exports.format = locale$1.format;\n  exports.formatPrefix = locale$1.formatPrefix;\n  return locale$1;\n}\n\nvar precisionFixed = function(step) {\n  return Math.max(0, -exponent$1(Math.abs(step)));\n};\n\nvar precisionPrefix = function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent$1(value) / 3))) * 3 - exponent$1(Math.abs(step)));\n};\n\nvar precisionRound = function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent$1(max) - exponent$1(step)) + 1;\n};\n\n// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nvar adder = function() {\n  return new Adder;\n};\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add$1(temp, y, this.t);\n    add$1(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add$1(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n\nvar epsilon$2 = 1e-6;\nvar epsilon2$1 = 1e-12;\nvar pi$3 = Math.PI;\nvar halfPi$2 = pi$3 / 2;\nvar quarterPi = pi$3 / 4;\nvar tau$3 = pi$3 * 2;\n\nvar degrees$1 = 180 / pi$3;\nvar radians = pi$3 / 180;\n\nvar abs = Math.abs;\nvar atan = Math.atan;\nvar atan2 = Math.atan2;\nvar cos$1 = Math.cos;\nvar ceil = Math.ceil;\nvar exp = Math.exp;\n\nvar log = Math.log;\nvar pow = Math.pow;\nvar sin$1 = Math.sin;\nvar sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nvar sqrt = Math.sqrt;\nvar tan = Math.tan;\n\nfunction acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi$3 : Math.acos(x);\n}\n\nfunction asin(x) {\n  return x > 1 ? halfPi$2 : x < -1 ? -halfPi$2 : Math.asin(x);\n}\n\nfunction haversin(x) {\n  return (x = sin$1(x / 2)) * x;\n}\n\nfunction noop$1() {}\n\nfunction streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nvar geoStream = function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n};\n\nvar areaRingSum = adder();\n\nvar areaSum = adder();\nvar lambda00;\nvar phi00;\nvar lambda0;\nvar cosPhi0;\nvar sinPhi0;\n\nvar areaStream = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau$3 + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop$1;\n  },\n  sphere: function() {\n    areaSum.add(tau$3);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos$1(phi = phi / 2 + quarterPi), sinPhi0 = sin$1(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos$1(phi),\n      sinPhi = sin$1(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos$1(adLambda),\n      v = k * sdLambda * sin$1(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nvar area = function(object) {\n  areaSum.reset();\n  geoStream(object, areaStream);\n  return areaSum * 2;\n};\n\nfunction spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nfunction cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos$1(phi);\n  return [cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi)];\n}\n\nfunction cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nfunction cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nfunction cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nfunction cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nfunction cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n\nvar lambda0$1;\nvar phi0;\nvar lambda1;\nvar phi1;\nvar lambda2;\nvar lambda00$1;\nvar phi00$1;\nvar p0;\nvar deltaSum = adder();\nvar ranges;\nvar range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0$1 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon$2) phi1 = 90;\n    else if (deltaSum < -epsilon$2) phi0 = -90;\n    range[0] = lambda0$1, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign$$1 = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees$1 * sign$$1,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = inflection[1] * degrees$1;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign$$1 * lambda2 < lambdai && lambdai < sign$$1 * lambda)) {\n      phii = -inflection[1] * degrees$1;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0$1) {\n        if (lambda < lambda0$1) lambda0$1 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0$1, lambda) > angle(lambda0$1, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0$1, lambda1)) lambda0$1 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0$1 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0$1, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00$1 = lambda, phi00$1 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00$1, phi00$1);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon$2) lambda0$1 = -(lambda1 = 180);\n  range[0] = lambda0$1, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nvar bounds = function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0$1 = phi0 = Infinity);\n  ranges = [];\n  geoStream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0$1 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0$1 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0$1, phi0], [lambda1, phi1]];\n};\n\nvar W0;\nvar W1;\nvar X0;\nvar Y0;\nvar Z0;\nvar X1;\nvar Y1;\nvar Z1;\nvar X2;\nvar Y2;\nvar Z2;\nvar lambda00$2;\nvar phi00$2;\nvar x0;\nvar y0;\nvar z0; // previous point\n\nvar centroidStream = {\n  sphere: noop$1,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  centroidPointCartesian(cosPhi * cos$1(lambda), cosPhi * sin$1(lambda), sin$1(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00$2, phi00$2);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00$2 = lambda, phi00$2 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos$1(phi);\n  x0 = cosPhi * cos$1(lambda);\n  y0 = cosPhi * sin$1(lambda);\n  z0 = sin$1(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos$1(phi),\n      x = cosPhi * cos$1(lambda),\n      y = cosPhi * sin$1(lambda),\n      z = sin$1(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nvar centroid = function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  geoStream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2$1) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon$2) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2$1) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees$1, asin(z / sqrt(m)) * degrees$1];\n};\n\nvar constant$7 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar compose = function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n};\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nfunction rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau$3) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi$3 ? lambda - tau$3 : lambda < -pi$3 ? lambda + tau$3 : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos$1(deltaPhi),\n      sinDeltaPhi = sin$1(deltaPhi),\n      cosDeltaGamma = cos$1(deltaGamma),\n      sinDeltaGamma = sin$1(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos$1(phi),\n        x = cos$1(lambda) * cosPhi,\n        y = sin$1(lambda) * cosPhi,\n        z = sin$1(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nvar rotation = function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees$1, coordinates[1] *= degrees$1, coordinates;\n  };\n\n  return forward;\n};\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nfunction circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos$1(radius),\n      sinRadius = sin$1(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau$3;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau$3;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos$1(t), -sinRadius * sin$1(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau$3 - epsilon$2) % tau$3;\n}\n\nvar circle = function() {\n  var center = constant$7([0, 0]),\n      radius = constant$7(90),\n      precision = constant$7(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees$1, x[1] *= degrees$1;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant$7([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant$7(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant$7(+_), circle) : precision;\n  };\n\n  return circle;\n};\n\nvar clipBuffer = function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop$1,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n};\n\nvar clipLine = function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n};\n\nvar pointEqual = function(a, b) {\n  return abs(a[0] - b[0]) < epsilon$2 && abs(a[1] - b[1]) < epsilon$2;\n};\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nvar clipPolygon = function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link$1(subject);\n  link$1(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n};\n\nfunction link$1(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n\nvar clipMax = 1e9;\nvar clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nfunction clipExtent(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon$2 ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon$2 ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon$2 ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipPolygon(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n\nvar extent$1 = function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipExtent(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n};\n\nvar sum$1 = adder();\n\nvar polygonContains = function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      normal = [sin$1(lambda), -cos$1(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum$1.reset();\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin$1(phi0),\n        cosPhi0 = cos$1(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin$1(phi1),\n          cosPhi1 = cos$1(phi1),\n          delta = lambda1 - lambda0,\n          sign$$1 = delta >= 0 ? 1 : -1,\n          absDelta = sign$$1 * delta,\n          antimeridian = absDelta > pi$3,\n          k = sinPhi0 * sinPhi1;\n\n      sum$1.add(atan2(k * sign$$1 * sin$1(absDelta), cosPhi0 * cosPhi1 + k * cos$1(absDelta)));\n      angle += antimeridian ? delta + sign$$1 * tau$3 : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon$2 || angle < epsilon$2 && sum$1 < -epsilon$2) ^ (winding & 1);\n};\n\nvar lengthSum = adder();\nvar lambda0$2;\nvar sinPhi0$1;\nvar cosPhi0$1;\n\nvar lengthStream = {\n  sphere: noop$1,\n  point: noop$1,\n  lineStart: lengthLineStart,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop$1;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0$2 = lambda, sinPhi0$1 = sin$1(phi), cosPhi0$1 = cos$1(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin$1(phi),\n      cosPhi = cos$1(phi),\n      delta = abs(lambda - lambda0$2),\n      cosDelta = cos$1(delta),\n      sinDelta = sin$1(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0$1 * sinPhi - sinPhi0$1 * cosPhi * cosDelta,\n      z = sinPhi0$1 * sinPhi + cosPhi0$1 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0$2 = lambda, sinPhi0$1 = sinPhi, cosPhi0$1 = cosPhi;\n}\n\nvar length$1 = function(object) {\n  lengthSum.reset();\n  geoStream(object, lengthStream);\n  return +lengthSum;\n};\n\nvar coordinates = [null, null];\nvar object$1 = {type: \"LineString\", coordinates: coordinates};\n\nvar distance = function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length$1(object$1);\n};\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon$2;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nvar contains = function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n};\n\nfunction graticuleX(y0, y1, dy) {\n  var y = sequence(y0, y1 - epsilon$2, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = sequence(x0, x1 - epsilon$2, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nfunction graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return sequence(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(sequence(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(sequence(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon$2; }).map(x))\n        .concat(sequence(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon$2; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon$2], [180, 90 - epsilon$2]])\n      .extentMinor([[-180, -80 - epsilon$2], [180, 80 + epsilon$2]]);\n}\n\nfunction graticule10() {\n  return graticule()();\n}\n\nvar interpolate$1 = function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos$1(y0),\n      sy0 = sin$1(y0),\n      cy1 = cos$1(y1),\n      sy1 = sin$1(y1),\n      kx0 = cy0 * cos$1(x0),\n      ky0 = cy0 * sin$1(x0),\n      kx1 = cy1 * cos$1(x1),\n      ky1 = cy1 * sin$1(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin$1(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin$1(t *= d) / k,\n        A = sin$1(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees$1,\n      atan2(z, sqrt(x * x + y * y)) * degrees$1\n    ];\n  } : function() {\n    return [x0 * degrees$1, y0 * degrees$1];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n};\n\nvar identity$4 = function(x) {\n  return x;\n};\n\nvar areaSum$1 = adder();\nvar areaRingSum$1 = adder();\nvar x00;\nvar y00;\nvar x0$1;\nvar y0$1;\n\nvar areaStream$1 = {\n  point: noop$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: function() {\n    areaStream$1.lineStart = areaRingStart$1;\n    areaStream$1.lineEnd = areaRingEnd$1;\n  },\n  polygonEnd: function() {\n    areaStream$1.lineStart = areaStream$1.lineEnd = areaStream$1.point = noop$1;\n    areaSum$1.add(abs(areaRingSum$1));\n    areaRingSum$1.reset();\n  },\n  result: function() {\n    var area = areaSum$1 / 2;\n    areaSum$1.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart$1() {\n  areaStream$1.point = areaPointFirst$1;\n}\n\nfunction areaPointFirst$1(x, y) {\n  areaStream$1.point = areaPoint$1;\n  x00 = x0$1 = x, y00 = y0$1 = y;\n}\n\nfunction areaPoint$1(x, y) {\n  areaRingSum$1.add(y0$1 * x - x0$1 * y);\n  x0$1 = x, y0$1 = y;\n}\n\nfunction areaRingEnd$1() {\n  areaPoint$1(x00, y00);\n}\n\nvar x0$2 = Infinity;\nvar y0$2 = x0$2;\nvar x1 = -x0$2;\nvar y1 = x1;\n\nvar boundsStream$1 = {\n  point: boundsPoint$1,\n  lineStart: noop$1,\n  lineEnd: noop$1,\n  polygonStart: noop$1,\n  polygonEnd: noop$1,\n  result: function() {\n    var bounds = [[x0$2, y0$2], [x1, y1]];\n    x1 = y1 = -(y0$2 = x0$2 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint$1(x, y) {\n  if (x < x0$2) x0$2 = x;\n  if (x > x1) x1 = x;\n  if (y < y0$2) y0$2 = y;\n  if (y > y1) y1 = y;\n}\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0$1 = 0;\nvar Y0$1 = 0;\nvar Z0$1 = 0;\nvar X1$1 = 0;\nvar Y1$1 = 0;\nvar Z1$1 = 0;\nvar X2$1 = 0;\nvar Y2$1 = 0;\nvar Z2$1 = 0;\nvar x00$1;\nvar y00$1;\nvar x0$3;\nvar y0$3;\n\nvar centroidStream$1 = {\n  point: centroidPoint$1,\n  lineStart: centroidLineStart$1,\n  lineEnd: centroidLineEnd$1,\n  polygonStart: function() {\n    centroidStream$1.lineStart = centroidRingStart$1;\n    centroidStream$1.lineEnd = centroidRingEnd$1;\n  },\n  polygonEnd: function() {\n    centroidStream$1.point = centroidPoint$1;\n    centroidStream$1.lineStart = centroidLineStart$1;\n    centroidStream$1.lineEnd = centroidLineEnd$1;\n  },\n  result: function() {\n    var centroid = Z2$1 ? [X2$1 / Z2$1, Y2$1 / Z2$1]\n        : Z1$1 ? [X1$1 / Z1$1, Y1$1 / Z1$1]\n        : Z0$1 ? [X0$1 / Z0$1, Y0$1 / Z0$1]\n        : [NaN, NaN];\n    X0$1 = Y0$1 = Z0$1 =\n    X1$1 = Y1$1 = Z1$1 =\n    X2$1 = Y2$1 = Z2$1 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint$1(x, y) {\n  X0$1 += x;\n  Y0$1 += y;\n  ++Z0$1;\n}\n\nfunction centroidLineStart$1() {\n  centroidStream$1.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream$1.point = centroidPointLine;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0$3, dy = y - y0$3, z = sqrt(dx * dx + dy * dy);\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction centroidLineEnd$1() {\n  centroidStream$1.point = centroidPoint$1;\n}\n\nfunction centroidRingStart$1() {\n  centroidStream$1.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd$1() {\n  centroidPointRing(x00$1, y00$1);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream$1.point = centroidPointRing;\n  centroidPoint$1(x00$1 = x0$3 = x, y00$1 = y0$3 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0$3,\n      dy = y - y0$3,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1$1 += z * (x0$3 + x) / 2;\n  Y1$1 += z * (y0$3 + y) / 2;\n  Z1$1 += z;\n\n  z = y0$3 * x - x0$3 * y;\n  X2$1 += z * (x0$3 + x);\n  Y2$1 += z * (y0$3 + y);\n  Z2$1 += z * 3;\n  centroidPoint$1(x0$3 = x, y0$3 = y);\n}\n\nfunction PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau$3);\n        break;\n      }\n    }\n  },\n  result: noop$1\n};\n\nvar lengthSum$1 = adder();\nvar lengthRing;\nvar x00$2;\nvar y00$2;\nvar x0$4;\nvar y0$4;\n\nvar lengthStream$1 = {\n  point: noop$1,\n  lineStart: function() {\n    lengthStream$1.point = lengthPointFirst$1;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint$1(x00$2, y00$2);\n    lengthStream$1.point = noop$1;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum$1;\n    lengthSum$1.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst$1(x, y) {\n  lengthStream$1.point = lengthPoint$1;\n  x00$2 = x0$4 = x, y00$2 = y0$4 = y;\n}\n\nfunction lengthPoint$1(x, y) {\n  x0$4 -= x, y0$4 -= y;\n  lengthSum$1.add(sqrt(x0$4 * x0$4 + y0$4 * y0$4));\n  x0$4 = x, y0$4 = y;\n}\n\nfunction PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle$1(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle$1(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle$1(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n\nvar index$1 = function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      geoStream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    geoStream(object, projectionStream(areaStream$1));\n    return areaStream$1.result();\n  };\n\n  path.measure = function(object) {\n    geoStream(object, projectionStream(lengthStream$1));\n    return lengthStream$1.result();\n  };\n\n  path.bounds = function(object) {\n    geoStream(object, projectionStream(boundsStream$1));\n    return boundsStream$1.result();\n  };\n\n  path.centroid = function(object) {\n    geoStream(object, projectionStream(centroidStream$1));\n    return centroidStream$1.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity$4) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n};\n\nvar clip = function(pointVisible, clipLine, interpolate, start) {\n  return function(rotate, sink) {\n    var line = clipLine(sink),\n        rotatedStart = rotate.invert(start[0], start[1]),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, rotatedStart);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipPolygon(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      var point = rotate(lambda, phi);\n      if (pointVisible(lambda = point[0], phi = point[1])) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      var point = rotate(lambda, phi);\n      line.point(point[0], point[1]);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      var point = rotate(lambda, phi);\n      ringSink.point(point[0], point[1]);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n};\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi$2 - epsilon$2 : halfPi$2 - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi$2 - epsilon$2 : halfPi$2 - b[1]);\n}\n\nvar clipAntimeridian = clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi$3, -halfPi$2]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi$3 : -pi$3,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi$3) < epsilon$2) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi$2 : -halfPi$2);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi$3) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon$2) lambda0 -= sign0 * epsilon$2; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon$2) lambda1 -= sign1 * epsilon$2;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin$1(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon$2\n      ? atan((sin$1(phi0) * (cosPhi1 = cos$1(phi1)) * sin$1(lambda1)\n          - sin$1(phi1) * (cosPhi0 = cos$1(phi0)) * sin$1(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi$2;\n    stream.point(-pi$3, phi);\n    stream.point(0, phi);\n    stream.point(pi$3, phi);\n    stream.point(pi$3, 0);\n    stream.point(pi$3, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi$3, -phi);\n    stream.point(-pi$3, 0);\n    stream.point(-pi$3, phi);\n  } else if (abs(from[0] - to[0]) > epsilon$2) {\n    var lambda = from[0] < to[0] ? pi$3 : -pi$3;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n\nvar clipCircle = function(radius, delta) {\n  var cr = cos$1(radius),\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon$2; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos$1(lambda) * cos$1(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi$3 : -pi$3), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon$2;\n            point1[1] += epsilon$2;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi$3) < epsilon$2,\n        meridian = polar || delta < epsilon$2;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon$2 ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi$3 ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi$3 - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi$3, radius - pi$3]);\n};\n\nvar transform = function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n};\n\nfunction transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n\nfunction fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream$1));\n\n  var b = boundsStream$1.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nfunction fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nvar maxDepth = 16;\nvar cosMinDistance = cos$1(30 * radians); // cos(minimum angular distance)\n\nvar resample = function(project, delta2) {\n  return +delta2 ? resample$1(project, delta2) : resampleNone(project);\n};\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample$1(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon$2 || abs(lambda0 - lambda1) < epsilon$2 ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nfunction projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      dx, dy, lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, projectRotate, // rotate\n      theta = null, preclip = clipAntimeridian, // clip angle\n      x0 = null, y0, x1, y1, postclip = identity$4, // clip extent\n      delta2 = 0.5, projectResample = resample(projectTransform, delta2), // precision\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    point = projectRotate(point[0] * radians, point[1] * radians);\n    return [point[0] * k + dx, dy - point[1] * k];\n  }\n\n  function invert(point) {\n    point = projectRotate.invert((point[0] - dx) / k, (dy - point[1]) / k);\n    return point && [point[0] * degrees$1, point[1] * degrees$1];\n  }\n\n  function projectTransform(x, y) {\n    return x = project(x, y), [x[0] * k + dx, dy - x[1] * k];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(preclip(rotate, projectResample(postclip(cacheStream = stream))));\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians, 6 * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees$1;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees$1, phi * degrees$1];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees$1, deltaPhi * degrees$1, deltaGamma * degrees$1];\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  function recenter() {\n    projectRotate = compose(rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma), project);\n    var center = project(lambda, phi);\n    dx = x - center[0] * k;\n    dy = y + center[1] * k;\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n\nfunction conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi$3 / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees$1, phi1 * degrees$1];\n  };\n\n  return p;\n}\n\nfunction cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos$1(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin$1(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n\nfunction conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin$1(y0), n = (sy0 + sin$1(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon$2) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin$1(y)) / n;\n    return [r * sin$1(x *= n), r0 - r * cos$1(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nvar conicEqualArea = function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n};\n\nvar albers = function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n};\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nvar albersUsa = function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon$2, y + 0.120 * k + epsilon$2], [x - 0.214 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon$2, y + 0.166 * k + epsilon$2], [x - 0.115 * k - epsilon$2, y + 0.234 * k - epsilon$2]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n};\n\nfunction azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos$1(x),\n        cy = cos$1(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin$1(x),\n      k * sin$1(y)\n    ];\n  }\n}\n\nfunction azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin$1(c),\n        cc = cos$1(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n\nvar azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nvar azimuthalEqualArea = function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n};\n\nvar azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin$1(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nvar azimuthalEquidistant = function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n};\n\nfunction mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi$2 + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi$2];\n};\n\nvar mercator = function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau$3);\n};\n\nfunction mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi$3 * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n\nfunction tany(y) {\n  return tan((halfPi$2 + y) / 2);\n}\n\nfunction conicConformalRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : log(cy0 / cos$1(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi$2 + epsilon$2) y = -halfPi$2 + epsilon$2; }\n    else { if (y > halfPi$2 - epsilon$2) y = halfPi$2 - epsilon$2; }\n    var r = f / pow(tany(y), n);\n    return [r * sin$1(n * x), f - r * cos$1(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi$2];\n  };\n\n  return project;\n}\n\nvar conicConformal = function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n};\n\nfunction equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nvar equirectangular = function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n};\n\nfunction conicEquidistantRaw(y0, y1) {\n  var cy0 = cos$1(y0),\n      n = y0 === y1 ? sin$1(y0) : (cy0 - cos$1(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon$2) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin$1(nx), g - gy * cos$1(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nvar conicEquidistant = function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n};\n\nfunction gnomonicRaw(x, y) {\n  var cy = cos$1(y), k = cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nvar gnomonic = function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n};\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity$4 : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nvar identity$5 = function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity$4, // scale, translate and reflect\n      x0 = null, y0, x1, y1, clip = identity$4, // clip extent\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(clip(cacheStream = stream));\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (clip = _ == null ? (x0 = y0 = x1 = y1 = null, identity$4) : clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    }\n  };\n};\n\nfunction orthographicRaw(x, y) {\n  return [cos$1(y) * sin$1(x), sin$1(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nvar orthographic = function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon$2);\n};\n\nfunction stereographicRaw(x, y) {\n  var cy = cos$1(y), k = 1 + cos$1(x) * cy;\n  return [cy * sin$1(x) / k, sin$1(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nvar stereographic = function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n};\n\nfunction transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi$2 + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi$2];\n};\n\nvar transverseMercator = function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n};\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nvar cluster = function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n};\n\nfunction count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nvar node_count = function() {\n  return this.eachAfter(count);\n};\n\nvar node_each = function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n};\n\nvar node_eachBefore = function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n};\n\nvar node_eachAfter = function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n};\n\nvar node_sum = function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n};\n\nvar node_sort = function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n};\n\nvar node_path = function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n};\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n\nvar node_ancestors = function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n};\n\nvar node_descendants = function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n};\n\nvar node_leaves = function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n};\n\nvar node_links = function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n};\n\nfunction hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nfunction computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nfunction Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n\nfunction Node$2(value) {\n  this._ = value;\n  this.next = null;\n}\n\nvar shuffle$1 = function(array) {\n  var i,\n      n = (array = array.slice()).length,\n      head = null,\n      node = head;\n\n  while (n) {\n    var next = new Node$2(array[n - 1]);\n    if (node) node = node.next = next;\n    else node = head = next;\n    array[i] = array[--n];\n  }\n\n  return {\n    head: head,\n    tail: node\n  };\n};\n\nvar enclose = function(circles) {\n  return encloseN(shuffle$1(circles), []);\n};\n\nfunction encloses(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r - b.r;\n  return dr * dr + 1e-6 > dx * dx + dy * dy;\n}\n\n// Returns the smallest circle that contains circles L and intersects circles B.\nfunction encloseN(L, B) {\n  var circle,\n      l0 = null,\n      l1 = L.head,\n      l2,\n      p1;\n\n  switch (B.length) {\n    case 1: circle = enclose1(B[0]); break;\n    case 2: circle = enclose2(B[0], B[1]); break;\n    case 3: circle = enclose3(B[0], B[1], B[2]); break;\n  }\n\n  while (l1) {\n    p1 = l1._, l2 = l1.next;\n    if (!circle || !encloses(circle, p1)) {\n\n      // Temporarily truncate L before l1.\n      if (l0) L.tail = l0, l0.next = null;\n      else L.head = L.tail = null;\n\n      B.push(p1);\n      circle = encloseN(L, B); // Note: reorders L!\n      B.pop();\n\n      // Move l1 to the front of L and reconnect the truncated list L.\n      if (L.head) l1.next = L.head, L.head = l1;\n      else l1.next = null, L.head = L.tail = l1;\n      l0 = L.tail, l0.next = l2;\n\n    } else {\n      l0 = l1;\n    }\n    l1 = l2;\n  }\n\n  L.tail = l0;\n  return circle;\n}\n\nfunction enclose1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction enclose2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction enclose3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = 2 * (x1 - x2),\n      b2 = 2 * (y1 - y2),\n      c2 = 2 * (r2 - r1),\n      d2 = x1 * x1 + y1 * y1 - r1 * r1 - x2 * x2 - y2 * y2 + r2 * r2,\n      a3 = 2 * (x1 - x3),\n      b3 = 2 * (y1 - y3),\n      c3 = 2 * (r3 - r1),\n      d3 = x1 * x1 + y1 * y1 - r1 * r1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / ab - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / ab - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (xa * xb + ya * yb + r1),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = (-B - Math.sqrt(B * B - 4 * A * C)) / (2 * A);\n  return {\n    x: xa + xb * r + x1,\n    y: ya + yb * r + y1,\n    r: r\n  };\n}\n\nfunction place(a, b, c) {\n  var ax = a.x,\n      ay = a.y,\n      da = b.r + c.r,\n      db = a.r + c.r,\n      dx = b.x - ax,\n      dy = b.y - ay,\n      dc = dx * dx + dy * dy;\n  if (dc) {\n    var x = 0.5 + ((db *= db) - (da *= da)) / (2 * dc),\n        y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n    c.x = ax + x * dx + y * dy;\n    c.y = ay + x * dy - y * dx;\n  } else {\n    c.x = ax + db;\n    c.y = ay;\n  }\n}\n\nfunction intersects(a, b) {\n  var dx = b.x - a.x,\n      dy = b.y - a.y,\n      dr = a.r + b.r;\n  return dr * dr - 1e-6 > dx * dx + dy * dy;\n}\n\nfunction distance2(node, x, y) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab - x,\n      dy = (a.y * b.r + b.y * a.r) / ab - y;\n  return dx * dx + dy * dy;\n}\n\nfunction Node$1(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nfunction packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the weighted centroid.\n  var aa = a.r * a.r,\n      ba = b.r * b.r,\n      ca = c.r * c.r,\n      oa = aa + ba + ca,\n      ox = aa * a.x + ba * b.x + ca * c.x,\n      oy = aa * a.y + ba * b.y + ca * c.y,\n      cx, cy, i, j, k, sj, sk;\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node$1(a), b = new Node$1(b), c = new Node$1(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node$1(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Update the weighted centroid.\n    oa += ca = c._.r * c._.r;\n    ox += ca * c._.x;\n    oy += ca * c._.y;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = distance2(a, cx = ox / oa, cy = oy / oa);\n    while ((c = c.next) !== b) {\n      if ((ca = distance2(c, cx, cy)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nvar siblings = function(circles) {\n  packEnclose(circles);\n  return circles;\n};\n\nfunction optional(f) {\n  return f == null ? null : required(f);\n}\n\nfunction required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n\nfunction constantZero() {\n  return 0;\n}\n\nvar constant$8 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction defaultRadius$1(d) {\n  return Math.sqrt(d.value);\n}\n\nvar index$2 = function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius$1))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant$8(+x), pack) : padding;\n  };\n\n  return pack;\n};\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n\nvar roundNode = function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n};\n\nvar treemapDice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n};\n\nvar partition = function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n};\n\nvar keyPrefix$1 = \"$\";\nvar preroot = {depth: -1};\nvar ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nvar stratify = function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix$1 + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix$1 + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n};\n\nfunction defaultSeparation$1(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nvar tree = function() {\n  var separation = defaultSeparation$1,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n};\n\nvar treemapSlice = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n};\n\nvar phi = (1 + Math.sqrt(5)) / 2;\n\nfunction squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nvar squarify = ((function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n}))(phi);\n\nvar index$3 = function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant$8(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n};\n\nvar binary = function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n};\n\nvar sliceDice = function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? treemapSlice : treemapDice)(parent, x0, y0, x1, y1);\n};\n\nvar resquarify = ((function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n}))(phi);\n\nvar area$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n};\n\nvar centroid$1 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n};\n\n// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nvar cross$1 = function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n};\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross$1(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nvar hull = function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n};\n\nvar contains$1 = function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n};\n\nvar length$2 = function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n};\n\nvar slice$3 = [].slice;\n\nvar noabort = {};\n\nfunction Queue(size) {\n  this._size = size;\n  this._call =\n  this._error = null;\n  this._tasks = [];\n  this._data = [];\n  this._waiting =\n  this._active =\n  this._ended =\n  this._start = 0; // inside a synchronous task callback?\n}\n\nQueue.prototype = queue.prototype = {\n  constructor: Queue,\n  defer: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"defer after await\");\n    if (this._error != null) return this;\n    var t = slice$3.call(arguments, 1);\n    t.push(callback);\n    ++this._waiting, this._tasks.push(t);\n    poke$1(this);\n    return this;\n  },\n  abort: function() {\n    if (this._error == null) abort(this, new Error(\"abort\"));\n    return this;\n  },\n  await: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = function(error, results) { callback.apply(null, [error].concat(results)); };\n    maybeNotify(this);\n    return this;\n  },\n  awaitAll: function(callback) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback\");\n    if (this._call) throw new Error(\"multiple await\");\n    this._call = callback;\n    maybeNotify(this);\n    return this;\n  }\n};\n\nfunction poke$1(q) {\n  if (!q._start) {\n    try { start$1(q); } // let the current task complete\n    catch (e) {\n      if (q._tasks[q._ended + q._active - 1]) abort(q, e); // task errored synchronously\n      else if (!q._data) throw e; // await callback errored synchronously\n    }\n  }\n}\n\nfunction start$1(q) {\n  while (q._start = q._waiting && q._active < q._size) {\n    var i = q._ended + q._active,\n        t = q._tasks[i],\n        j = t.length - 1,\n        c = t[j];\n    t[j] = end(q, i);\n    --q._waiting, ++q._active;\n    t = c.apply(null, t);\n    if (!q._tasks[i]) continue; // task finished synchronously\n    q._tasks[i] = t || noabort;\n  }\n}\n\nfunction end(q, i) {\n  return function(e, r) {\n    if (!q._tasks[i]) return; // ignore multiple callbacks\n    --q._active, ++q._ended;\n    q._tasks[i] = null;\n    if (q._error != null) return; // ignore secondary errors\n    if (e != null) {\n      abort(q, e);\n    } else {\n      q._data[i] = r;\n      if (q._waiting) poke$1(q);\n      else maybeNotify(q);\n    }\n  };\n}\n\nfunction abort(q, e) {\n  var i = q._tasks.length, t;\n  q._error = e; // ignore active callbacks\n  q._data = undefined; // allow gc\n  q._waiting = NaN; // prevent starting\n\n  while (--i >= 0) {\n    if (t = q._tasks[i]) {\n      q._tasks[i] = null;\n      if (t.abort) {\n        try { t.abort(); }\n        catch (e) { /* ignore */ }\n      }\n    }\n  }\n\n  q._active = NaN; // allow notification\n  maybeNotify(q);\n}\n\nfunction maybeNotify(q) {\n  if (!q._active && q._call) {\n    var d = q._data;\n    q._data = undefined; // allow gc\n    q._call(q._error, d);\n  }\n}\n\nfunction queue(concurrency) {\n  if (concurrency == null) concurrency = Infinity;\n  else if (!((concurrency = +concurrency) >= 1)) throw new Error(\"invalid concurrency\");\n  return new Queue(concurrency);\n}\n\nvar defaultSource$1 = function() {\n  return Math.random();\n};\n\nvar uniform = ((function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n}))(defaultSource$1);\n\nvar normal = ((function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n}))(defaultSource$1);\n\nvar logNormal = ((function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n}))(defaultSource$1);\n\nvar irwinHall = ((function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n}))(defaultSource$1);\n\nvar bates = ((function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n}))(defaultSource$1);\n\nvar exponential$1 = ((function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n}))(defaultSource$1);\n\nvar request = function(url, callback) {\n  var request,\n      event = dispatch(\"beforesend\", \"progress\", \"load\", \"error\"),\n      mimeType,\n      headers = map$1(),\n      xhr = new XMLHttpRequest,\n      user = null,\n      password = null,\n      response,\n      responseType,\n      timeout = 0;\n\n  // If IE does not support CORS, use XDomainRequest.\n  if (typeof XDomainRequest !== \"undefined\"\n      && !(\"withCredentials\" in xhr)\n      && /^(http(s)?:)?\\/\\//.test(url)) xhr = new XDomainRequest;\n\n  \"onload\" in xhr\n      ? xhr.onload = xhr.onerror = xhr.ontimeout = respond\n      : xhr.onreadystatechange = function(o) { xhr.readyState > 3 && respond(o); };\n\n  function respond(o) {\n    var status = xhr.status, result;\n    if (!status && hasResponse(xhr)\n        || status >= 200 && status < 300\n        || status === 304) {\n      if (response) {\n        try {\n          result = response.call(request, xhr);\n        } catch (e) {\n          event.call(\"error\", request, e);\n          return;\n        }\n      } else {\n        result = xhr;\n      }\n      event.call(\"load\", request, result);\n    } else {\n      event.call(\"error\", request, o);\n    }\n  }\n\n  xhr.onprogress = function(e) {\n    event.call(\"progress\", request, e);\n  };\n\n  request = {\n    header: function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers.get(name);\n      if (value == null) headers.remove(name);\n      else headers.set(name, value + \"\");\n      return request;\n    },\n\n    // If mimeType is non-null and no Accept header is set, a default is used.\n    mimeType: function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return request;\n    },\n\n    // Specifies what type the response value should take;\n    // for instance, arraybuffer, blob, document, or text.\n    responseType: function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return request;\n    },\n\n    timeout: function(value) {\n      if (!arguments.length) return timeout;\n      timeout = +value;\n      return request;\n    },\n\n    user: function(value) {\n      return arguments.length < 1 ? user : (user = value == null ? null : value + \"\", request);\n    },\n\n    password: function(value) {\n      return arguments.length < 1 ? password : (password = value == null ? null : value + \"\", request);\n    },\n\n    // Specify how to convert the response content to a specific type;\n    // changes the callback value on \"load\" events.\n    response: function(value) {\n      response = value;\n      return request;\n    },\n\n    // Alias for send(\"GET\", …).\n    get: function(data, callback) {\n      return request.send(\"GET\", data, callback);\n    },\n\n    // Alias for send(\"POST\", …).\n    post: function(data, callback) {\n      return request.send(\"POST\", data, callback);\n    },\n\n    // If callback is non-null, it will be used for error and load events.\n    send: function(method, data, callback) {\n      xhr.open(method, url, true, user, password);\n      if (mimeType != null && !headers.has(\"accept\")) headers.set(\"accept\", mimeType + \",*/*\");\n      if (xhr.setRequestHeader) headers.each(function(value, name) { xhr.setRequestHeader(name, value); });\n      if (mimeType != null && xhr.overrideMimeType) xhr.overrideMimeType(mimeType);\n      if (responseType != null) xhr.responseType = responseType;\n      if (timeout > 0) xhr.timeout = timeout;\n      if (callback == null && typeof data === \"function\") callback = data, data = null;\n      if (callback != null && callback.length === 1) callback = fixCallback(callback);\n      if (callback != null) request.on(\"error\", callback).on(\"load\", function(xhr) { callback(null, xhr); });\n      event.call(\"beforesend\", request, xhr);\n      xhr.send(data == null ? null : data);\n      return request;\n    },\n\n    abort: function() {\n      xhr.abort();\n      return request;\n    },\n\n    on: function() {\n      var value = event.on.apply(event, arguments);\n      return value === event ? request : value;\n    }\n  };\n\n  if (callback != null) {\n    if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    return request.get(callback);\n  }\n\n  return request;\n};\n\nfunction fixCallback(callback) {\n  return function(error, xhr) {\n    callback(error == null ? xhr : null);\n  };\n}\n\nfunction hasResponse(xhr) {\n  var type = xhr.responseType;\n  return type && type !== \"text\"\n      ? xhr.response // null on error\n      : xhr.responseText; // \"\" on error\n}\n\nvar type$1 = function(defaultMimeType, response) {\n  return function(url, callback) {\n    var r = request(url).mimeType(defaultMimeType).response(response);\n    if (callback != null) {\n      if (typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n      return r.get(callback);\n    }\n    return r;\n  };\n};\n\nvar html = type$1(\"text/html\", function(xhr) {\n  return document.createRange().createContextualFragment(xhr.responseText);\n});\n\nvar json = type$1(\"application/json\", function(xhr) {\n  return JSON.parse(xhr.responseText);\n});\n\nvar text = type$1(\"text/plain\", function(xhr) {\n  return xhr.responseText;\n});\n\nvar xml = type$1(\"application/xml\", function(xhr) {\n  var xml = xhr.responseXML;\n  if (!xml) throw new Error(\"parse error\");\n  return xml;\n});\n\nvar dsv$1 = function(defaultMimeType, parse) {\n  return function(url, row, callback) {\n    if (arguments.length < 3) callback = row, row = null;\n    var r = request(url).mimeType(defaultMimeType);\n    r.row = function(_) { return arguments.length ? r.response(responseOf(parse, row = _)) : row; };\n    r.row(row);\n    return callback ? r.get(callback) : r;\n  };\n};\n\nfunction responseOf(parse, row) {\n  return function(request$$1) {\n    return parse(request$$1.responseText, row);\n  };\n}\n\nvar csv$1 = dsv$1(\"text/csv\", csvParse);\n\nvar tsv$1 = dsv$1(\"text/tab-separated-values\", tsvParse);\n\nvar array$2 = Array.prototype;\n\nvar map$3 = array$2.map;\nvar slice$4 = array$2.slice;\n\nvar implicit = {name: \"implicit\"};\n\nfunction ordinal(range) {\n  var index = map$1(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice$4.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map$1();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice$4.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n\nfunction band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range$$1 = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range$$1[1] < range$$1[0],\n        start = range$$1[reverse - 0],\n        stop = range$$1[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = [+_[0], +_[1]], rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range$$1)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nfunction point$1() {\n  return pointish(band().paddingInner(1));\n}\n\nvar constant$9 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nvar number$1 = function(x) {\n  return +x;\n};\n\nvar unit = [0, 1];\n\nfunction deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant$9(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range$$1, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range$$1[0], r1 = range$$1[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range$$1, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range$$1.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range$$1 = range$$1.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range$$1[i], range$$1[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisectRight(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nfunction copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nfunction continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range$$1 = unit,\n      interpolate$$1 = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range$$1.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range$$1, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate$$1)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range$$1, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range$$1 = slice$4.call(_), interpolate$$1 = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, rescale()) : interpolate$$1;\n  };\n\n  return rescale();\n}\n\nvar tickFormat = function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return exports.formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return exports.format(specifier);\n};\n\nfunction linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nfunction linear$2() {\n  var scale = continuous(deinterpolateLinear, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear$2());\n  };\n\n  return linearish(scale);\n}\n\nfunction identity$6() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map$3.call(_, number$1), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity$6().domain(domain);\n  };\n\n  return linearish(scale);\n}\n\nvar nice = function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n};\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant$9(b);\n}\n\nfunction reinterpolate$1(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nfunction log$1() {\n  var scale = continuous(deinterpolate, reinterpolate$1).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = exports.format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log$1().base(base));\n  };\n\n  return scale;\n}\n\nfunction raise$1(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nfunction pow$1() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise$1(b, exponent) - (a = raise$1(a, exponent)))\n        ? function(x) { return (raise$1(x, exponent) - a) / b; }\n        : constant$9(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise$1(b, exponent) - (a = raise$1(a, exponent));\n    return function(t) { return raise$1(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow$1().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nfunction sqrt$1() {\n  return pow$1().exponent(0.5);\n}\n\nfunction quantile$$1() {\n  var domain = [],\n      range$$1 = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range$$1.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range$$1[bisectRight(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), rescale()) : range$$1.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile$$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nfunction quantize$1() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range$$1 = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range$$1 = slice$4.call(_)).length - 1, rescale()) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize$1()\n        .domain([x0, x1])\n        .range(range$$1);\n  };\n\n  return linearish(scale);\n}\n\nfunction threshold$1() {\n  var domain = [0.5],\n      range$$1 = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range$$1[bisectRight(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range$$1 = slice$4.call(_), n = Math.min(domain.length, range$$1.length - 1), scale) : range$$1.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range$$1.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold$1()\n        .domain(domain)\n        .range(range$$1);\n  };\n\n  return scale;\n}\n\nvar t0$1 = new Date;\nvar t1$1 = new Date;\n\nfunction newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(new Date(+start)); while (offseti(start, step), floori(start), start < stop)\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) while (--step >= 0) while (offseti(date, 1), !test(date)) {} // eslint-disable-line no-empty\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0$1.setTime(+start), t1$1.setTime(+end);\n      floori(t0$1), floori(t1$1);\n      return Math.floor(count(t0$1, t1$1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n\nvar millisecond = newInterval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return newInterval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nvar milliseconds = millisecond.range;\n\nvar durationSecond$1 = 1e3;\nvar durationMinute$1 = 6e4;\nvar durationHour$1 = 36e5;\nvar durationDay$1 = 864e5;\nvar durationWeek$1 = 6048e5;\n\nvar second = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationSecond$1) * durationSecond$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond$1);\n}, function(start, end) {\n  return (end - start) / durationSecond$1;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nvar seconds = second.range;\n\nvar minute = newInterval(function(date) {\n  date.setTime(Math.floor(date / durationMinute$1) * durationMinute$1);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getMinutes();\n});\n\nvar minutes = minute.range;\n\nvar hour = newInterval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute$1 % durationHour$1;\n  if (offset < 0) offset += durationHour$1;\n  date.setTime(Math.floor((+date - offset) / durationHour$1) * durationHour$1 + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getHours();\n});\n\nvar hours = hour.range;\n\nvar day = newInterval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationDay$1;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nvar days = day.range;\n\nfunction weekday(i) {\n  return newInterval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute$1) / durationWeek$1;\n  });\n}\n\nvar sunday = weekday(0);\nvar monday = weekday(1);\nvar tuesday = weekday(2);\nvar wednesday = weekday(3);\nvar thursday = weekday(4);\nvar friday = weekday(5);\nvar saturday = weekday(6);\n\nvar sundays = sunday.range;\nvar mondays = monday.range;\nvar tuesdays = tuesday.range;\nvar wednesdays = wednesday.range;\nvar thursdays = thursday.range;\nvar fridays = friday.range;\nvar saturdays = saturday.range;\n\nvar month = newInterval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nvar months = month.range;\n\nvar year = newInterval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nvar years = year.range;\n\nvar utcMinute = newInterval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute$1);\n}, function(start, end) {\n  return (end - start) / durationMinute$1;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nvar utcMinutes = utcMinute.range;\n\nvar utcHour = newInterval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour$1);\n}, function(start, end) {\n  return (end - start) / durationHour$1;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nvar utcHours = utcHour.range;\n\nvar utcDay = newInterval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay$1;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nvar utcDays = utcDay.range;\n\nfunction utcWeekday(i) {\n  return newInterval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek$1;\n  });\n}\n\nvar utcSunday = utcWeekday(0);\nvar utcMonday = utcWeekday(1);\nvar utcTuesday = utcWeekday(2);\nvar utcWednesday = utcWeekday(3);\nvar utcThursday = utcWeekday(4);\nvar utcFriday = utcWeekday(5);\nvar utcSaturday = utcWeekday(6);\n\nvar utcSundays = utcSunday.range;\nvar utcMondays = utcMonday.range;\nvar utcTuesdays = utcTuesday.range;\nvar utcWednesdays = utcWednesday.range;\nvar utcThursdays = utcThursday.range;\nvar utcFridays = utcFriday.range;\nvar utcSaturdays = utcSaturday.range;\n\nvar utcMonth = newInterval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nvar utcMonths = utcMonth.range;\n\nvar utcYear = newInterval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : newInterval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nvar utcYears = utcYear.range;\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nfunction formatLocale$1(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"S\": formatSeconds,\n    \"U\": formatWeekNumberSunday,\n    \"w\": formatWeekdayNumber,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"S\": formatUTCSeconds,\n    \"U\": formatUTCWeekNumberSunday,\n    \"w\": formatUTCWeekdayNumber,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"S\": parseSeconds,\n    \"U\": parseWeekNumberSunday,\n    \"w\": parseWeekdayNumber,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0);\n      if (i != string.length) return null;\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n        var day$$1 = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day$$1 + 5) % 7 : d.w + d.U * 7 - (day$$1 + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"};\nvar numberRe = /^\\s*\\d+/;\nvar percentRe = /^%/;\nvar requoteRe = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?:\\:?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + day.count(year(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(sunday.count(year(d), d), p, 2);\n}\n\nfunction formatWeekdayNumber(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(monday.count(year(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekdayNumber(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nvar locale$2;\n\n\n\n\n\ndefaultLocale$1({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nfunction defaultLocale$1(definition) {\n  locale$2 = formatLocale$1(definition);\n  exports.timeFormat = locale$2.format;\n  exports.timeParse = locale$2.parse;\n  exports.utcFormat = locale$2.utcFormat;\n  exports.utcParse = locale$2.utcParse;\n  return locale$2;\n}\n\nvar isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : exports.utcFormat(isoSpecifier);\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : exports.utcParse(isoSpecifier);\n\nvar durationSecond = 1000;\nvar durationMinute = durationSecond * 60;\nvar durationHour = durationMinute * 60;\nvar durationDay = durationHour * 24;\nvar durationWeek = durationDay * 7;\nvar durationMonth = durationDay * 30;\nvar durationYear = durationDay * 365;\n\nfunction date$1(t) {\n  return new Date(t);\n}\n\nfunction number$2(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nfunction calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format) {\n  var scale = continuous(deinterpolateLinear, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second$$1,  1,      durationSecond],\n    [second$$1,  5,  5 * durationSecond],\n    [second$$1, 15, 15 * durationSecond],\n    [second$$1, 30, 30 * durationSecond],\n    [minute$$1,  1,      durationMinute],\n    [minute$$1,  5,  5 * durationMinute],\n    [minute$$1, 15, 15 * durationMinute],\n    [minute$$1, 30, 30 * durationMinute],\n    [  hour$$1,  1,      durationHour  ],\n    [  hour$$1,  3,  3 * durationHour  ],\n    [  hour$$1,  6,  6 * durationHour  ],\n    [  hour$$1, 12, 12 * durationHour  ],\n    [   day$$1,  1,      durationDay   ],\n    [   day$$1,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month$$1,  1,      durationMonth ],\n    [ month$$1,  3,  3 * durationMonth ],\n    [  year$$1,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second$$1(date) < date ? formatMillisecond\n        : minute$$1(date) < date ? formatSecond\n        : hour$$1(date) < date ? formatMinute\n        : day$$1(date) < date ? formatHour\n        : month$$1(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year$$1(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year$$1;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = tickStep(start, stop, interval);\n        interval = millisecond$$1;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map$3.call(_, number$2)) : domain().map(date$1);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year$$1, month$$1, week, day$$1, hour$$1, minute$$1, second$$1, millisecond$$1, format));\n  };\n\n  return scale;\n}\n\nvar time = function() {\n  return calendar(year, month, sunday, day, hour, minute, second, millisecond, exports.timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n};\n\nvar utcTime = function() {\n  return calendar(utcYear, utcMonth, utcSunday, utcDay, utcHour, utcMinute, second, millisecond, exports.utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n};\n\nvar colors = function(s) {\n  return s.match(/.{6}/g).map(function(x) {\n    return \"#\" + x;\n  });\n};\n\nvar category10 = colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n\nvar category20b = colors(\"393b795254a36b6ecf9c9ede6379398ca252b5cf6bcedb9c8c6d31bd9e39e7ba52e7cb94843c39ad494ad6616be7969c7b4173a55194ce6dbdde9ed6\");\n\nvar category20c = colors(\"3182bd6baed69ecae1c6dbefe6550dfd8d3cfdae6bfdd0a231a35474c476a1d99bc7e9c0756bb19e9ac8bcbddcdadaeb636363969696bdbdbdd9d9d9\");\n\nvar category20 = colors(\"1f77b4aec7e8ff7f0effbb782ca02c98df8ad62728ff98969467bdc5b0d58c564bc49c94e377c2f7b6d27f7f7fc7c7c7bcbd22dbdb8d17becf9edae5\");\n\nvar cubehelix$3 = cubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n\nvar warm = cubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar cool = cubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar rainbow = cubehelix();\n\nvar rainbow$1 = function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  rainbow.h = 360 * t - 100;\n  rainbow.s = 1.5 - 1.5 * ts;\n  rainbow.l = 0.8 - 0.9 * ts;\n  return rainbow + \"\";\n};\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nvar viridis = ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nvar magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nvar inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nvar plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n\nfunction sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) / (x1 - x0);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n\nvar constant$10 = function(x) {\n  return function constant() {\n    return x;\n  };\n};\n\nvar abs$1 = Math.abs;\nvar atan2$1 = Math.atan2;\nvar cos$2 = Math.cos;\nvar max$2 = Math.max;\nvar min$1 = Math.min;\nvar sin$2 = Math.sin;\nvar sqrt$2 = Math.sqrt;\n\nvar epsilon$3 = 1e-12;\nvar pi$4 = Math.PI;\nvar halfPi$3 = pi$4 / 2;\nvar tau$4 = 2 * pi$4;\n\nfunction acos$1(x) {\n  return x > 1 ? 0 : x < -1 ? pi$4 : Math.acos(x);\n}\n\nfunction asin$1(x) {\n  return x >= 1 ? halfPi$3 : x <= -1 ? -halfPi$3 : Math.asin(x);\n}\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt$2(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt$2(max$2(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nvar arc = function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant$10(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi$3,\n        a1 = endAngle.apply(this, arguments) - halfPi$3,\n        da = abs$1(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon$3)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau$4 - epsilon$3) {\n      context.moveTo(r1 * cos$2(a0), r1 * sin$2(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon$3) {\n        context.moveTo(r0 * cos$2(a1), r0 * sin$2(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon$3) && (padRadius ? +padRadius.apply(this, arguments) : sqrt$2(r0 * r0 + r1 * r1)),\n          rc = min$1(abs$1(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon$3) {\n        var p0 = asin$1(rp / r0 * sin$2(ap)),\n            p1 = asin$1(rp / r1 * sin$2(ap));\n        if ((da0 -= p0 * 2) > epsilon$3) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon$3) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos$2(a01),\n          y01 = r1 * sin$2(a01),\n          x10 = r0 * cos$2(a10),\n          y10 = r0 * sin$2(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon$3) {\n        var x11 = r1 * cos$2(a11),\n            y11 = r1 * sin$2(a11),\n            x00 = r0 * cos$2(a00),\n            y00 = r0 * sin$2(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi$4) {\n          var oc = da0 > epsilon$3 ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin$2(acos$1((ax * bx + ay * by) / (sqrt$2(ax * ax + ay * ay) * sqrt$2(bx * bx + by * by))) / 2),\n              lc = sqrt$2(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min$1(rc, (r0 - lc) / (kc - 1));\n          rc1 = min$1(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon$3)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon$3) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon$3) || !(da0 > epsilon$3)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon$3) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2$1(t0.y01, t0.x01), atan2$1(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2$1(t0.cy + t0.y11, t0.cx + t0.x11), atan2$1(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2$1(t1.y11, t1.x11), atan2$1(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi$4 / 2;\n    return [cos$2(a) * r, sin$2(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant$10(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n};\n\nfunction Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nvar curveLinear = function(context) {\n  return new Linear(context);\n};\n\nfunction x$3(p) {\n  return p[0];\n}\n\nfunction y$3(p) {\n  return p[1];\n}\n\nvar line = function() {\n  var x$$1 = x$3,\n      y$$1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x$$1(d, i, data), +y$$1(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : x$$1;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), line) : y$$1;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n};\n\nvar area$2 = function() {\n  var x0 = x$3,\n      x1 = null,\n      y0 = constant$10(0),\n      y1 = y$3,\n      defined = constant$10(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant$10(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant$10(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant$10(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n};\n\nvar descending$1 = function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n};\n\nvar identity$7 = function(d) {\n  return d;\n};\n\nvar pie = function() {\n  var value = identity$7,\n      sortValues = descending$1,\n      sort = null,\n      startAngle = constant$10(0),\n      endAngle = constant$10(tau$4),\n      padAngle = constant$10(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau$4, Math.max(-tau$4, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant$10(+_), pie) : padAngle;\n  };\n\n  return pie;\n};\n\nvar curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nfunction curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n\nfunction radialLine(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nvar radialLine$1 = function() {\n  return radialLine(line().curve(curveRadialLinear));\n};\n\nvar radialArea = function() {\n  var a = area$2().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return radialLine(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return radialLine(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return radialLine(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return radialLine(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n};\n\nvar slice$5 = Array.prototype.slice;\n\nvar radialPoint = function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n};\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link$2(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x$$1 = x$3,\n      y$$1 = y$3,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice$5.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x$$1.apply(this, (argv[0] = s, argv)), +y$$1.apply(this, argv), +x$$1.apply(this, (argv[0] = t, argv)), +y$$1.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : x$$1;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$10(+_), link) : y$$1;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial$1(context, x0, y0, x1, y1) {\n  var p0 = radialPoint(x0, y0),\n      p1 = radialPoint(x0, y0 = (y0 + y1) / 2),\n      p2 = radialPoint(x1, y0),\n      p3 = radialPoint(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nfunction linkHorizontal() {\n  return link$2(curveHorizontal);\n}\n\nfunction linkVertical() {\n  return link$2(curveVertical);\n}\n\nfunction linkRadial() {\n  var l = link$2(curveRadial$1);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n\nvar circle$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi$4);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau$4);\n  }\n};\n\nvar cross$2 = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n\nvar tan30 = Math.sqrt(1 / 3);\nvar tan30_2 = tan30 * 2;\n\nvar diamond = {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n\nvar ka = 0.89081309152928522810;\nvar kr = Math.sin(pi$4 / 10) / Math.sin(7 * pi$4 / 10);\nvar kx = Math.sin(tau$4 / 10) * kr;\nvar ky = -Math.cos(tau$4 / 10) * kr;\n\nvar star = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau$4 * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n\nvar square = {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n\nvar sqrt3 = Math.sqrt(3);\n\nvar triangle = {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n\nvar c = -0.5;\nvar s = Math.sqrt(3) / 2;\nvar k = 1 / Math.sqrt(12);\nvar a = (k / 2 + 1) * 3;\n\nvar wye = {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n\nvar symbols = [\n  circle$2,\n  cross$2,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nvar symbol = function() {\n  var type = constant$10(circle$2),\n      size = constant$10(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant$10(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant$10(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n};\n\nvar noop$2 = function() {};\n\nfunction point$2(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nfunction Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point$2(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basis$2 = function(context) {\n  return new Basis(context);\n};\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisClosed$1 = function(context) {\n  return new BasisClosed(context);\n};\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point$2(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nvar basisOpen = function(context) {\n  return new BasisOpen(context);\n};\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nvar bundle = ((function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n}))(0.85);\n\nfunction point$3(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nfunction Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point$3(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinal = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalClosed = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$3(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar cardinalOpen = ((function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n}))(0);\n\nfunction point$4(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon$3) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon$3) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRom = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomClosed = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point$4(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nvar catmullRomOpen = ((function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n}))(0.5);\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop$2,\n  areaEnd: noop$2,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nvar linearClosed = function(context) {\n  return new LinearClosed(context);\n};\n\nfunction sign$1(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign$1(s0) + sign$1(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point$5(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point$5(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point$5(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point$5(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n};\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nfunction monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nfunction monotoneY(context) {\n  return new MonotoneY(context);\n}\n\nfunction Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nvar natural = function(context) {\n  return new Natural(context);\n};\n\nfunction Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nvar step = function(context) {\n  return new Step(context, 0.5);\n};\n\nfunction stepBefore(context) {\n  return new Step(context, 0);\n}\n\nfunction stepAfter(context) {\n  return new Step(context, 1);\n}\n\nvar none$1 = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n};\n\nvar none$2 = function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n};\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nvar stack = function() {\n  var keys = constant$10([]),\n      order = none$2,\n      offset = none$1,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant$10(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? none$2 : typeof _ === \"function\" ? _ : constant$10(slice$5.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? none$1 : _, stack) : offset;\n  };\n\n  return stack;\n};\n\nvar expand = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none$1(series, order);\n};\n\nvar diverging = function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n};\n\nvar silhouette = function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none$1(series, order);\n};\n\nvar wiggle = function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none$1(series, order);\n};\n\nvar ascending$2 = function(series) {\n  var sums = series.map(sum$2);\n  return none$2(series).sort(function(a, b) { return sums[a] - sums[b]; });\n};\n\nfunction sum$2(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n\nvar descending$2 = function(series) {\n  return ascending$2(series).reverse();\n};\n\nvar insideOut = function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum$2),\n      order = none$2(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n};\n\nvar reverse = function(series) {\n  return none$2(series).reverse();\n};\n\nvar constant$11 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction x$4(d) {\n  return d[0];\n}\n\nfunction y$4(d) {\n  return d[1];\n}\n\nfunction RedBlackTree() {\n  this._ = null; // root node\n}\n\nfunction RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nfunction createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nfunction createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nfunction setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nfunction clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon$4\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon$4)) {\n      delete edges[i];\n    }\n  }\n}\n\nfunction createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nfunction cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nfunction cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nfunction sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nfunction clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon$4 || Math.abs(endY - startY) > epsilon$4) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon$4 && y1 - endY > epsilon$4 ? [x0, Math.abs(startX - x0) < epsilon$4 ? startY : y1]\n              : Math.abs(endY - y1) < epsilon$4 && x1 - endX > epsilon$4 ? [Math.abs(startY - y1) < epsilon$4 ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon$4 && endY - y0 > epsilon$4 ? [x1, Math.abs(startX - x1) < epsilon$4 ? startY : y0]\n              : Math.abs(endY - y0) < epsilon$4 && endX - x0 > epsilon$4 ? [Math.abs(startY - y0) < epsilon$4 ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n\nvar circlePool = [];\n\nvar firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nfunction attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2$2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nfunction detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nfunction removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon$4\n      && Math.abs(y - lArc.circle.cy) < epsilon$4) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon$4\n      && Math.abs(y - rArc.circle.cy) < epsilon$4) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon$4) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon$4) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon$4) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon$4) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n\nvar epsilon$4 = 1e-6;\nvar epsilon2$2 = 1e-12;\nvar beaches;\nvar cells;\nvar circles;\nvar edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nfunction Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n};\n\nvar voronoi = function() {\n  var x$$1 = x$4,\n      y$$1 = y$4,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x$$1(d, i, data) / epsilon$4) * epsilon$4, Math.round(y$$1(d, i, data) / epsilon$4) * epsilon$4];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : x$$1;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y$$1 = typeof _ === \"function\" ? _ : constant$11(+_), voronoi) : y$$1;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n};\n\nvar constant$12 = function(x) {\n  return function() {\n    return x;\n  };\n};\n\nfunction ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n\nfunction Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nvar identity$8 = new Transform(1, 0, 0);\n\ntransform$1.prototype = Transform.prototype;\n\nfunction transform$1(node) {\n  return node.__zoom || identity$8;\n}\n\nfunction nopropagation$2() {\n  exports.event.stopImmediatePropagation();\n}\n\nvar noevent$2 = function() {\n  exports.event.preventDefault();\n  exports.event.stopImmediatePropagation();\n};\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter$2() {\n  return !exports.event.button;\n}\n\nfunction defaultExtent$1() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity$8;\n}\n\nvar zoom = function() {\n  var filter = defaultFilter$2,\n      extent = defaultExtent$1,\n      k0 = 0,\n      k1 = Infinity,\n      x0 = -k1,\n      x1 = k1,\n      y0 = x0,\n      y1 = x1,\n      duration = 250,\n      interpolate$$1 = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection$$1) {\n    selection$$1\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .property(\"__zoom\", defaultTransform);\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection$$1 = collection.selection ? collection.selection() : collection;\n    selection$$1.property(\"__zoom\", defaultTransform);\n    if (collection !== selection$$1) {\n      schedule(collection, transform);\n    } else {\n      selection$$1.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection$$1, k) {\n    zoom.scaleTo(selection$$1, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection$$1, k) {\n    zoom.transform(selection$$1, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e);\n    });\n  };\n\n  zoom.translateBy = function(selection$$1, x, y) {\n    zoom.transform(selection$$1, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments));\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(k0, Math.min(k1, k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function constrain(transform, extent) {\n    var dx0 = transform.invertX(extent[0][0]) - x0,\n        dx1 = transform.invertX(extent[1][0]) - x1,\n        dy0 = transform.invertY(extent[0][1]) - y0,\n        dy1 = transform.invertY(extent[1][1]) - y1;\n    return transform.translate(\n      dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n      dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n    );\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition$$1, transform, center) {\n    transition$$1\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate$$1(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(k0, Math.min(k1, t.k * Math.pow(2, -exports.event.deltaY * (exports.event.deltaMode ? 120 : 1) / 500))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent$2();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(exports.event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = exports.event.clientX,\n        y0 = exports.event.clientY;\n\n    dragDisable(exports.event.view);\n    nopropagation$2();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent$2();\n      if (!g.moved) {\n        var dx = exports.event.clientX - x0, dy = exports.event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      yesdrag(exports.event.view, g.moved);\n      noevent$2();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (exports.event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments));\n\n    noevent$2();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        started,\n        n = touches$$1.length, i, t, p;\n\n    nopropagation$2();\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t, p, l;\n\n    noevent$2();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i], p = touch(this, touches$$1, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches$$1 = exports.event.changedTouches,\n        n = touches$$1.length, i, t;\n\n    nopropagation$2();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches$$1[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant$12(!!_), zoom) : filter;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant$12([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (k0 = +_[0], k1 = +_[1], zoom) : [k0, k1];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], zoom) : [[x0, y0], [x1, y1]];\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate$$1 = _, zoom) : interpolate$$1;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n    \n  return zoom;\n};\n\nexports.version = version;\nexports.bisect = bisectRight;\nexports.bisectRight = bisectRight;\nexports.bisectLeft = bisectLeft;\nexports.ascending = ascending;\nexports.bisector = bisector;\nexports.cross = cross;\nexports.descending = descending;\nexports.deviation = deviation;\nexports.extent = extent;\nexports.histogram = histogram;\nexports.thresholdFreedmanDiaconis = freedmanDiaconis;\nexports.thresholdScott = scott;\nexports.thresholdSturges = sturges;\nexports.max = max;\nexports.mean = mean;\nexports.median = median;\nexports.merge = merge;\nexports.min = min;\nexports.pairs = pairs;\nexports.permute = permute;\nexports.quantile = threshold;\nexports.range = sequence;\nexports.scan = scan;\nexports.shuffle = shuffle;\nexports.sum = sum;\nexports.ticks = ticks;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.transpose = transpose;\nexports.variance = variance;\nexports.zip = zip;\nexports.axisTop = axisTop;\nexports.axisRight = axisRight;\nexports.axisBottom = axisBottom;\nexports.axisLeft = axisLeft;\nexports.brush = brush;\nexports.brushX = brushX;\nexports.brushY = brushY;\nexports.brushSelection = brushSelection;\nexports.chord = chord;\nexports.ribbon = ribbon;\nexports.nest = nest;\nexports.set = set$2;\nexports.map = map$1;\nexports.keys = keys;\nexports.values = values;\nexports.entries = entries;\nexports.color = color;\nexports.rgb = rgb;\nexports.hsl = hsl;\nexports.lab = lab;\nexports.hcl = hcl;\nexports.cubehelix = cubehelix;\nexports.dispatch = dispatch;\nexports.drag = drag;\nexports.dragDisable = dragDisable;\nexports.dragEnable = yesdrag;\nexports.dsvFormat = dsv;\nexports.csvParse = csvParse;\nexports.csvParseRows = csvParseRows;\nexports.csvFormat = csvFormat;\nexports.csvFormatRows = csvFormatRows;\nexports.tsvParse = tsvParse;\nexports.tsvParseRows = tsvParseRows;\nexports.tsvFormat = tsvFormat;\nexports.tsvFormatRows = tsvFormatRows;\nexports.easeLinear = linear$1;\nexports.easeQuad = quadInOut;\nexports.easeQuadIn = quadIn;\nexports.easeQuadOut = quadOut;\nexports.easeQuadInOut = quadInOut;\nexports.easeCubic = cubicInOut;\nexports.easeCubicIn = cubicIn;\nexports.easeCubicOut = cubicOut;\nexports.easeCubicInOut = cubicInOut;\nexports.easePoly = polyInOut;\nexports.easePolyIn = polyIn;\nexports.easePolyOut = polyOut;\nexports.easePolyInOut = polyInOut;\nexports.easeSin = sinInOut;\nexports.easeSinIn = sinIn;\nexports.easeSinOut = sinOut;\nexports.easeSinInOut = sinInOut;\nexports.easeExp = expInOut;\nexports.easeExpIn = expIn;\nexports.easeExpOut = expOut;\nexports.easeExpInOut = expInOut;\nexports.easeCircle = circleInOut;\nexports.easeCircleIn = circleIn;\nexports.easeCircleOut = circleOut;\nexports.easeCircleInOut = circleInOut;\nexports.easeBounce = bounceOut;\nexports.easeBounceIn = bounceIn;\nexports.easeBounceOut = bounceOut;\nexports.easeBounceInOut = bounceInOut;\nexports.easeBack = backInOut;\nexports.easeBackIn = backIn;\nexports.easeBackOut = backOut;\nexports.easeBackInOut = backInOut;\nexports.easeElastic = elasticOut;\nexports.easeElasticIn = elasticIn;\nexports.easeElasticOut = elasticOut;\nexports.easeElasticInOut = elasticInOut;\nexports.forceCenter = center$1;\nexports.forceCollide = collide;\nexports.forceLink = link;\nexports.forceManyBody = manyBody;\nexports.forceSimulation = simulation;\nexports.forceX = x$2;\nexports.forceY = y$2;\nexports.formatDefaultLocale = defaultLocale;\nexports.formatLocale = formatLocale;\nexports.formatSpecifier = formatSpecifier;\nexports.precisionFixed = precisionFixed;\nexports.precisionPrefix = precisionPrefix;\nexports.precisionRound = precisionRound;\nexports.geoArea = area;\nexports.geoBounds = bounds;\nexports.geoCentroid = centroid;\nexports.geoCircle = circle;\nexports.geoClipExtent = extent$1;\nexports.geoContains = contains;\nexports.geoDistance = distance;\nexports.geoGraticule = graticule;\nexports.geoGraticule10 = graticule10;\nexports.geoInterpolate = interpolate$1;\nexports.geoLength = length$1;\nexports.geoPath = index$1;\nexports.geoAlbers = albers;\nexports.geoAlbersUsa = albersUsa;\nexports.geoAzimuthalEqualArea = azimuthalEqualArea;\nexports.geoAzimuthalEqualAreaRaw = azimuthalEqualAreaRaw;\nexports.geoAzimuthalEquidistant = azimuthalEquidistant;\nexports.geoAzimuthalEquidistantRaw = azimuthalEquidistantRaw;\nexports.geoConicConformal = conicConformal;\nexports.geoConicConformalRaw = conicConformalRaw;\nexports.geoConicEqualArea = conicEqualArea;\nexports.geoConicEqualAreaRaw = conicEqualAreaRaw;\nexports.geoConicEquidistant = conicEquidistant;\nexports.geoConicEquidistantRaw = conicEquidistantRaw;\nexports.geoEquirectangular = equirectangular;\nexports.geoEquirectangularRaw = equirectangularRaw;\nexports.geoGnomonic = gnomonic;\nexports.geoGnomonicRaw = gnomonicRaw;\nexports.geoIdentity = identity$5;\nexports.geoProjection = projection;\nexports.geoProjectionMutator = projectionMutator;\nexports.geoMercator = mercator;\nexports.geoMercatorRaw = mercatorRaw;\nexports.geoOrthographic = orthographic;\nexports.geoOrthographicRaw = orthographicRaw;\nexports.geoStereographic = stereographic;\nexports.geoStereographicRaw = stereographicRaw;\nexports.geoTransverseMercator = transverseMercator;\nexports.geoTransverseMercatorRaw = transverseMercatorRaw;\nexports.geoRotation = rotation;\nexports.geoStream = geoStream;\nexports.geoTransform = transform;\nexports.cluster = cluster;\nexports.hierarchy = hierarchy;\nexports.pack = index$2;\nexports.packSiblings = siblings;\nexports.packEnclose = enclose;\nexports.partition = partition;\nexports.stratify = stratify;\nexports.tree = tree;\nexports.treemap = index$3;\nexports.treemapBinary = binary;\nexports.treemapDice = treemapDice;\nexports.treemapSlice = treemapSlice;\nexports.treemapSliceDice = sliceDice;\nexports.treemapSquarify = squarify;\nexports.treemapResquarify = resquarify;\nexports.interpolate = interpolateValue;\nexports.interpolateArray = array$1;\nexports.interpolateBasis = basis$1;\nexports.interpolateBasisClosed = basisClosed;\nexports.interpolateDate = date;\nexports.interpolateNumber = reinterpolate;\nexports.interpolateObject = object;\nexports.interpolateRound = interpolateRound;\nexports.interpolateString = interpolateString;\nexports.interpolateTransformCss = interpolateTransformCss;\nexports.interpolateTransformSvg = interpolateTransformSvg;\nexports.interpolateZoom = interpolateZoom;\nexports.interpolateRgb = interpolateRgb;\nexports.interpolateRgbBasis = rgbBasis;\nexports.interpolateRgbBasisClosed = rgbBasisClosed;\nexports.interpolateHsl = hsl$2;\nexports.interpolateHslLong = hslLong;\nexports.interpolateLab = lab$1;\nexports.interpolateHcl = hcl$2;\nexports.interpolateHclLong = hclLong;\nexports.interpolateCubehelix = cubehelix$2;\nexports.interpolateCubehelixLong = cubehelixLong;\nexports.quantize = quantize;\nexports.path = path;\nexports.polygonArea = area$1;\nexports.polygonCentroid = centroid$1;\nexports.polygonHull = hull;\nexports.polygonContains = contains$1;\nexports.polygonLength = length$2;\nexports.quadtree = quadtree;\nexports.queue = queue;\nexports.randomUniform = uniform;\nexports.randomNormal = normal;\nexports.randomLogNormal = logNormal;\nexports.randomBates = bates;\nexports.randomIrwinHall = irwinHall;\nexports.randomExponential = exponential$1;\nexports.request = request;\nexports.html = html;\nexports.json = json;\nexports.text = text;\nexports.xml = xml;\nexports.csv = csv$1;\nexports.tsv = tsv$1;\nexports.scaleBand = band;\nexports.scalePoint = point$1;\nexports.scaleIdentity = identity$6;\nexports.scaleLinear = linear$2;\nexports.scaleLog = log$1;\nexports.scaleOrdinal = ordinal;\nexports.scaleImplicit = implicit;\nexports.scalePow = pow$1;\nexports.scaleSqrt = sqrt$1;\nexports.scaleQuantile = quantile$$1;\nexports.scaleQuantize = quantize$1;\nexports.scaleThreshold = threshold$1;\nexports.scaleTime = time;\nexports.scaleUtc = utcTime;\nexports.schemeCategory10 = category10;\nexports.schemeCategory20b = category20b;\nexports.schemeCategory20c = category20c;\nexports.schemeCategory20 = category20;\nexports.interpolateCubehelixDefault = cubehelix$3;\nexports.interpolateRainbow = rainbow$1;\nexports.interpolateWarm = warm;\nexports.interpolateCool = cool;\nexports.interpolateViridis = viridis;\nexports.interpolateMagma = magma;\nexports.interpolateInferno = inferno;\nexports.interpolatePlasma = plasma;\nexports.scaleSequential = sequential;\nexports.creator = creator;\nexports.local = local$1;\nexports.matcher = matcher$1;\nexports.mouse = mouse;\nexports.namespace = namespace;\nexports.namespaces = namespaces;\nexports.select = select;\nexports.selectAll = selectAll;\nexports.selection = selection;\nexports.selector = selector;\nexports.selectorAll = selectorAll;\nexports.style = styleValue;\nexports.touch = touch;\nexports.touches = touches;\nexports.window = defaultView;\nexports.customEvent = customEvent;\nexports.arc = arc;\nexports.area = area$2;\nexports.line = line;\nexports.pie = pie;\nexports.radialArea = radialArea;\nexports.radialLine = radialLine$1;\nexports.linkHorizontal = linkHorizontal;\nexports.linkVertical = linkVertical;\nexports.linkRadial = linkRadial;\nexports.symbol = symbol;\nexports.symbols = symbols;\nexports.symbolCircle = circle$2;\nexports.symbolCross = cross$2;\nexports.symbolDiamond = diamond;\nexports.symbolSquare = square;\nexports.symbolStar = star;\nexports.symbolTriangle = triangle;\nexports.symbolWye = wye;\nexports.curveBasisClosed = basisClosed$1;\nexports.curveBasisOpen = basisOpen;\nexports.curveBasis = basis$2;\nexports.curveBundle = bundle;\nexports.curveCardinalClosed = cardinalClosed;\nexports.curveCardinalOpen = cardinalOpen;\nexports.curveCardinal = cardinal;\nexports.curveCatmullRomClosed = catmullRomClosed;\nexports.curveCatmullRomOpen = catmullRomOpen;\nexports.curveCatmullRom = catmullRom;\nexports.curveLinearClosed = linearClosed;\nexports.curveLinear = curveLinear;\nexports.curveMonotoneX = monotoneX;\nexports.curveMonotoneY = monotoneY;\nexports.curveNatural = natural;\nexports.curveStep = step;\nexports.curveStepAfter = stepAfter;\nexports.curveStepBefore = stepBefore;\nexports.stack = stack;\nexports.stackOffsetExpand = expand;\nexports.stackOffsetDiverging = diverging;\nexports.stackOffsetNone = none$1;\nexports.stackOffsetSilhouette = silhouette;\nexports.stackOffsetWiggle = wiggle;\nexports.stackOrderAscending = ascending$2;\nexports.stackOrderDescending = descending$2;\nexports.stackOrderInsideOut = insideOut;\nexports.stackOrderNone = none$2;\nexports.stackOrderReverse = reverse;\nexports.timeInterval = newInterval;\nexports.timeMillisecond = millisecond;\nexports.timeMilliseconds = milliseconds;\nexports.utcMillisecond = millisecond;\nexports.utcMilliseconds = milliseconds;\nexports.timeSecond = second;\nexports.timeSeconds = seconds;\nexports.utcSecond = second;\nexports.utcSeconds = seconds;\nexports.timeMinute = minute;\nexports.timeMinutes = minutes;\nexports.timeHour = hour;\nexports.timeHours = hours;\nexports.timeDay = day;\nexports.timeDays = days;\nexports.timeWeek = sunday;\nexports.timeWeeks = sundays;\nexports.timeSunday = sunday;\nexports.timeSundays = sundays;\nexports.timeMonday = monday;\nexports.timeMondays = mondays;\nexports.timeTuesday = tuesday;\nexports.timeTuesdays = tuesdays;\nexports.timeWednesday = wednesday;\nexports.timeWednesdays = wednesdays;\nexports.timeThursday = thursday;\nexports.timeThursdays = thursdays;\nexports.timeFriday = friday;\nexports.timeFridays = fridays;\nexports.timeSaturday = saturday;\nexports.timeSaturdays = saturdays;\nexports.timeMonth = month;\nexports.timeMonths = months;\nexports.timeYear = year;\nexports.timeYears = years;\nexports.utcMinute = utcMinute;\nexports.utcMinutes = utcMinutes;\nexports.utcHour = utcHour;\nexports.utcHours = utcHours;\nexports.utcDay = utcDay;\nexports.utcDays = utcDays;\nexports.utcWeek = utcSunday;\nexports.utcWeeks = utcSundays;\nexports.utcSunday = utcSunday;\nexports.utcSundays = utcSundays;\nexports.utcMonday = utcMonday;\nexports.utcMondays = utcMondays;\nexports.utcTuesday = utcTuesday;\nexports.utcTuesdays = utcTuesdays;\nexports.utcWednesday = utcWednesday;\nexports.utcWednesdays = utcWednesdays;\nexports.utcThursday = utcThursday;\nexports.utcThursdays = utcThursdays;\nexports.utcFriday = utcFriday;\nexports.utcFridays = utcFridays;\nexports.utcSaturday = utcSaturday;\nexports.utcSaturdays = utcSaturdays;\nexports.utcMonth = utcMonth;\nexports.utcMonths = utcMonths;\nexports.utcYear = utcYear;\nexports.utcYears = utcYears;\nexports.timeFormatDefaultLocale = defaultLocale$1;\nexports.timeFormatLocale = formatLocale$1;\nexports.isoFormat = formatIso;\nexports.isoParse = parseIso;\nexports.now = now;\nexports.timer = timer;\nexports.timerFlush = timerFlush;\nexports.timeout = timeout$1;\nexports.interval = interval$1;\nexports.transition = transition;\nexports.active = active;\nexports.interrupt = interrupt;\nexports.voronoi = voronoi;\nexports.zoom = zoom;\nexports.zoomTransform = transform$1;\nexports.zoomIdentity = identity$8;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/d3/build/d3.js\n// module id = 7\n// module chunks = 0","export const delimiters = (svg, scales, x, dateFormat) => {\n    const extremum = svg.select('.extremum');\n    const domain = scales.x.domain();\n\n    extremum.selectAll('.minimum').remove();\n    extremum.selectAll('.maximum').remove();\n\n    extremum\n        .append('text')\n        .text(dateFormat(domain[0]))\n        .classed('minimum', true);\n\n    extremum\n        .append('text')\n        .text(dateFormat(domain[1]))\n        .classed('maximum', true)\n        .attr('transform', `translate(${scales.x.range()[1] - x})`)\n        .attr('text-anchor', 'end');\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/delimiters.js","export default (container, scales, configuration) =>\n    (data) => {\n        const dropLines = container\n            .selectAll('.drop-line')\n            .data(data)\n            .enter()\n            .append('g')\n            .classed('drop-line', true)\n            .attr('width', scales.x.range()[1])\n            .attr('transform', (d, idx) => `translate(0, ${scales.y(idx)})`)\n            .attr('fill', configuration.eventLineColor);\n\n        const drops = dropLines.selectAll('.drop');\n\n        drops\n            .data(d => d.data)\n            .enter()\n            .append('circle')\n            .classed('drop', true)\n            .attr('r', 5)\n            .attr('cx', d => scales.x(configuration.date(d)))\n            .attr('cy', configuration.lineHeight / 2)\n            .attr('fill', configuration.eventColor)\n            .on('click', configuration.click)\n            .on('mouseover', configuration.mouseover)\n            .on('mouseout', configuration.mouseout);\n\n        // unregister previous event handlers to prevent from memory leaks\n        drops\n            .exit()\n            .on('click', null)\n            .on('mouseout', null)\n            .on('mouseover', null)\n            .remove();\n\n        dropLines.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/drops.js","export default (scales, configuration, dimensions) =>\n    (container, data) => {\n        const separators = container.selectAll('.line-separator').data(data);\n\n        separators\n            .enter()\n            .append('g')\n            .classed('line-separator', true)\n            .attr(\n                'transform',\n                (d, i) =>\n                    `translate(0, ${scales.y(i) + configuration.lineHeight})`\n            )\n            .append('line')\n            .attr('x1', 0)\n            .attr(\n                'x2',\n                dimensions.width -\n                    (configuration.labelsWidth +\n                        configuration.labelsRightMargin)\n            );\n\n        separators.exit().remove();\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer/lineSeparator.js","import configurable from 'configurable.js';\n\nimport * as d3 from 'd3/build/d3';\nimport filterData from './filterData';\n\nimport './style.css';\n\nimport defaultConfig from './config';\nimport drawer from './drawer';\nimport zoom from './zoom';\n\nfunction eventDrops(config = {}) {\n    const finalConfiguration = { ...defaultConfig, ...config };\n\n    const yScale = data =>\n        d3\n            .scaleOrdinal()\n            .domain(data.map(d => d.name))\n            .range(data.map((d, i) => i * finalConfiguration.lineHeight));\n\n    const xScale = (width, timeBounds) =>\n        d3.scaleTime().domain(timeBounds).range([0, width]);\n\n    function getScales(dimensions, configuration, data) {\n        return {\n            x: xScale(\n                dimensions.width -\n                    (configuration.labelsWidth +\n                        configuration.labelsRightMargin),\n                [configuration.start, configuration.end]\n            ),\n            y: yScale(data),\n        };\n    }\n\n    function eventDropGraph(selection) {\n        let scales;\n\n        const chart = selection.each(function selector(data) {\n            d3.select(this).select('.event-drops-chart').remove();\n\n            const dimensions = {\n                width: this.clientWidth,\n                height: data.length * finalConfiguration.lineHeight,\n            };\n\n            const svg = d3\n                .select(this)\n                .append('svg')\n                .classed('event-drops-chart', true)\n                .attr('width', dimensions.width)\n                .attr(\n                    'height',\n                    dimensions.height +\n                        finalConfiguration.margin.top +\n                        finalConfiguration.margin.bottom\n                );\n\n            scales = getScales(dimensions, finalConfiguration, data);\n            const draw = drawer(svg, dimensions, scales, finalConfiguration);\n            draw(data);\n\n            if (finalConfiguration.zoomable) {\n                zoom(svg, dimensions, scales, finalConfiguration);\n            }\n        });\n\n        chart.scales = scales;\n        chart.visibleDataInRow = (data, scale) =>\n            filterData(data, scale, finalConfiguration.date);\n\n        return chart;\n    }\n\n    configurable(eventDropGraph, finalConfiguration);\n\n    return eventDropGraph;\n}\n\nd3.chart = d3.chart || {};\nd3.chart.eventDrops = eventDrops;\n\nexport default eventDrops;\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","export const metaballs = defs => {\n    const filters = defs.append('filter');\n\n    filters.attr('id', 'metaballs');\n\n    filters\n        .append('feGaussianBlur')\n        .attr('in', 'SourceGraphic')\n        .attr('stdDeviation', 10)\n        .attr('result', 'blur');\n\n    filters\n        .append('feColorMatrix')\n        .attr('in', 'blur')\n        .attr('mode', 'matrix')\n        .attr('values', '1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 50 -10')\n        .attr('result', 'contrast');\n\n    filters\n        .append('feBlend')\n        .attr('in', 'SourceGraphic')\n        .attr('in2', 'contrast');\n\n    return filters;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/metaballs.js","export default (xScale, configuration, where) => {\n    const tickFormat = configuration.locale\n        ? configuration.locale.timeFormat\n        : configuration.tickFormat;\n\n    //change where so the first letter will be uppercase\n    where = `${where[0].toUpperCase()}${where.slice(1)}`;\n\n    const axis = d3[`axis${where}`]().scale(xScale).tickFormat(tickFormat);\n\n    if (typeof configuration.axisFormat === 'function') {\n        configuration.axisFormat(axis);\n    }\n\n    return axis;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/xAxis.js","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/debounce/index.js\n// module id = 15\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 16\n// module chunks = 0"],"sourceRoot":""}