{"version":3,"file":"ef.min.js","sources":["../node_modules/eft-parser/src/escape-parser.js","../node_modules/eft-parser/src/eft-parser.js","../node_modules/ef-core/src/lib/utils/type-of.js","../node_modules/ef-core/src/lib/utils/literals-mix.js","../node_modules/ef-core/src/lib/utils/array-helper.js","../node_modules/ef-core/src/lib/render-queue.js","../node_modules/ef-core/src/lib/utils/polyfills.js","../node_modules/ef-core/src/lib/resolver.js","../node_modules/ef-core/src/lib/subscriber-call-stack.js","../node_modules/ef-core/src/lib/utils/isnan.js","../node_modules/ef-core/src/lib/binding.js","../node_modules/ef-core/src/lib/utils/event-helper.js","../node_modules/ef-core/src/lib/element-creator.js","../node_modules/ef-core/src/lib/utils/dom-helper.js","../node_modules/ef-core/src/lib/utils/dom-arr-helper.js","../node_modules/ef-core/src/lib/creator.js","../node_modules/ef-core/src/mount-options.js","../node_modules/ef-core/src/lib/renderer.js","../src/ef.js","../src/lib/parser.js","../node_modules/ef-core/src/ef-core.js"],"sourcesContent":["// Set the escape character\nconst char = '&'\nconst doubleChar = char + char\n\n// Initlize RegExp\nconst oct = new RegExp(`\\\\${char}[0-7]{1,3}`, 'g')\nconst ucp = new RegExp(`\\\\${char}u\\\\[.*?\\\\]`, 'g')\nconst uni = new RegExp(`\\\\${char}u.{0,4}`, 'g')\nconst hex = new RegExp(`\\\\${char}x.{0,2}`, 'g')\nconst esc = new RegExp(`\\\\${char}`, 'g')\nconst b = new RegExp(`\\\\${char}b`, 'g')\nconst t = new RegExp(`\\\\${char}t`, 'g')\nconst n = new RegExp(`\\\\${char}n`, 'g')\nconst v = new RegExp(`\\\\${char}v`, 'g')\nconst f = new RegExp(`\\\\${char}f`, 'g')\nconst r = new RegExp(`\\\\${char}r`, 'g')\n\n// Escape octonary sequence\nconst O2C = () => {\n\tthrow new SyntaxError('Octal escape sequences are not allowed in EFML.')\n}\n\n// Escape unicode code point sequence\nconst UC2C = (val) => {\n\tval = val.substr(3, val.length - 4)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\ttry {\n\t\treturn String.fromCodePoint(val)\n\t} catch (err) {\n\t\tthrow new SyntaxError('Undefined Unicode code-point')\n\t}\n}\n\n// Escape unicode sequence\nconst U2C = (val) => {\n\tval = val.substring(2)\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid Unicode escape sequence')\n\treturn String.fromCharCode(val)\n}\n\n// Escape hexadecimal sequence\nconst X2C = (val) => {\n\tval = `00${val.substring(2)}`\n\tval = parseInt(val, 16)\n\tif (!val) throw new SyntaxError('Invalid hexadecimal escape sequence')\n\treturn String.fromCharCode(val)\n}\n\nconst efEscape = (string) => {\n\t// Split strings\n\tconst splitArr = string.split(doubleChar)\n\tconst escaped = []\n\n\t// Escape all known escape characters\n\tfor (let i of splitArr) {\n\t\tconst escapedStr = i\n\t\t\t.replace(oct, O2C)\n\t\t\t.replace(ucp, UC2C)\n\t\t\t.replace(uni, U2C)\n\t\t\t.replace(hex, X2C)\n\t\t\t.replace(b, '\\b')\n\t\t\t.replace(t, '\\t')\n\t\t\t.replace(n, '\\n')\n\t\t\t.replace(v, '\\v')\n\t\t\t.replace(f, '\\f')\n\t\t\t.replace(r, '\\r')\n\t\t\t// Remove all useless escape characters\n\t\t\t.replace(esc, '')\n\t\tescaped.push(escapedStr)\n\t}\n\t// Return escaped string\n\treturn escaped.join(char)\n}\n\nconst checkEscape = string => string[string.length - 1] === char\n\nconst splitWith = (string, char) => {\n\tconst splitArr = string.split(char)\n\tconst escapedSplit = []\n\tlet escaped = false\n\tfor (let i of splitArr) {\n\t\tif (escaped) escapedSplit[escapedSplit.length - 1] += `${char}${i}`\n\t\telse escapedSplit.push(i)\n\t\tescaped = checkEscape(i)\n\t}\n\treturn escapedSplit\n}\n\nconst splitBy = (string, char) => {\n\tconst splitArr = string.split(doubleChar)\n\tconst escaped = splitWith(splitArr.shift(), char)\n\tfor (let i of splitArr) {\n\t\tconst escapedSplit = splitWith(i, char)\n\t\tescaped[escaped.length - 1] += `${doubleChar}${escapedSplit.shift()}`\n\t\tescaped.push(...escapedSplit)\n\t}\n\treturn escaped\n}\n\nexport { efEscape, splitBy }\n","import { efEscape, splitBy } from './escape-parser.js'\n\nconst typeSymbols = '>#%@.-+'\nconst reserved = [\n\t'$ctx', '$data', '$refs', '$methods', '$mount', '$umount',\n\t'$subscribe', '$unsubscribe', '$update', '$destroy', '__DIRECTMOUNT__'\n]\nconst mustache = /\\{\\{.+?\\}\\}/g\nconst spaceIndent = /^(\\t*)( *).*/\nconst hashref = /#([^}]|}[^}])*$/\n\nconst getErrorMsg = (msg, line = -2) => `Failed to parse eft template: ${msg}. at line ${line + 1}`\n\nconst isEmpty = string => !string.replace(/\\s/, '')\n\nconst checkValidType = obj => ['number', 'boolean', 'string'].indexOf(typeof obj) > -1\n\nconst ESCAPE = (string) => {\n\tif (!string) return [string, false]\n\ttry {\n\t\tconst parsed = JSON.parse(string)\n\t\tif (['number', 'boolean'].indexOf(typeof parsed) === -1) return [efEscape(string), true]\n\t\treturn [parsed, false]\n\t} catch (e) {\n\t\treturn [efEscape(string), true]\n\t}\n}\n\nconst getOffset = (string, parsingInfo) => {\n\tif (parsingInfo.offset !== null) return\n\tparsingInfo.offset = string.match(/\\s*/)[0]\n\tif (parsingInfo.offset) parsingInfo.offsetReg = parsingInfo.offset\n}\n\nconst removeOffset = (string, parsingInfo, i) => {\n\tif (parsingInfo.offsetReg) {\n\t\tlet removed = false\n\t\tstring = string.replace(parsingInfo.offsetReg, () => {\n\t\t\tremoved = true\n\t\t\treturn ''\n\t\t})\n\t\tif (!removed) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got -1`, i))\n\t}\n\treturn string\n}\n\nconst getIndent = (string, parsingInfo) => {\n\tif (parsingInfo.indentReg) return\n\tconst spaces = string.match(spaceIndent)[2]\n\tif (spaces) {\n\t\tparsingInfo.indentReg = new RegExp(spaces, 'g')\n\t}\n}\n\nconst getDepth = (string, parsingInfo, i) => {\n\tlet depth = 0\n\tif (parsingInfo.indentReg) string = string.replace(/^\\s*/, str => str.replace(parsingInfo.indentReg, '\\t'))\n\tconst content = string.replace(/^\\t*/, (str) => {\n\t\tdepth = str.length\n\t\treturn ''\n\t})\n\tif (/^\\s/.test(content)) throw new SyntaxError(getErrorMsg('Bad indent', i))\n\treturn { depth, content }\n}\n\nconst resolveDepth = (ast, depth) => {\n\tlet currentNode = ast\n\tfor (let i = 0; i < depth; i++) currentNode = currentNode[currentNode.length - 1]\n\treturn currentNode\n}\n\nconst splitDefault = (string) => {\n\tstring = string.slice(2, string.length - 2)\n\tconst [_path, ..._default] = splitBy(string, '=')\n\tconst pathArr = splitBy(_path.trim(), '.').map(efEscape)\n\tconst [defaultVal, escaped] = ESCAPE(_default.join('=').trim())\n\tif (checkValidType(defaultVal) && (escaped || (!escaped && defaultVal !== ''))) return [pathArr, defaultVal]\n\treturn [pathArr]\n}\n\nconst splitLiterals = (string) => {\n\tconst strs = string.split(mustache)\n\tif (strs.length === 1) return ESCAPE(string)[0]\n\tconst tmpl = []\n\tif (strs.length === 2 && !strs[0] && !strs[1]) tmpl.push(0)\n\telse tmpl.push(strs.map(efEscape))\n\tconst mustaches = string.match(mustache)\n\tif (mustaches) tmpl.push(...mustaches.map(splitDefault))\n\treturn tmpl\n}\n\nconst pushStr = (textArr, str) => {\n\tif (str) textArr.push(str)\n}\n\nconst parseText = (string) => {\n\tconst result = splitLiterals(string)\n\tif (checkValidType(result)) return [`${result}`]\n\tconst [strs, ...exprs] = result\n\tconst textArr = []\n\tfor (let i = 0; i < exprs.length; i++) {\n\t\tpushStr(textArr, strs[i])\n\t\ttextArr.push(exprs[i])\n\t}\n\tpushStr(textArr, strs[strs.length - 1])\n\treturn textArr\n}\n\nconst dotToSpace = val => val.replace(/\\./g, ' ')\n\nconst parseTag = (string) => {\n\tconst tagInfo = {}\n\tconst [tag, ...content] = splitBy(string.replace(hashref, (val) => {\n\t\ttagInfo.ref = val.slice(1)\n\t\treturn ''\n\t}), '.')\n\ttagInfo.tag = efEscape(tag)\n\ttagInfo.class = splitLiterals(content.join('.'))\n\tif (typeof tagInfo.class === 'string') tagInfo.class = dotToSpace(tagInfo.class).trim()\n\telse if (tagInfo.class[0]) tagInfo.class[0] = tagInfo.class[0].map(dotToSpace)\n\treturn tagInfo\n}\n\nconst parseNodeProps = (string) => {\n\tconst splited = splitBy(string, '=')\n\treturn {\n\t\tname: efEscape(splited.shift().trim()),\n\t\tvalue: splitLiterals(splited.join('=').trim())\n\t}\n}\n\nconst parseEvent = (string) => {\n\tconst splited = splitBy(string, '=')\n\treturn {\n\t\tname: splited.shift().trim(),\n\t\tvalue: splited.join('=').trim()\n\t}\n}\n\nconst setOption = (options, option) => {\n\tswitch (option) {\n\t\tcase 'stop': {\n\t\t\toptions.s = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'stopImmediate': {\n\t\t\toptions.i = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'prevent': {\n\t\t\toptions.p = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'shift': {\n\t\t\toptions.h = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'alt': {\n\t\t\toptions.a = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'ctrl': {\n\t\t\toptions.c = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'meta': {\n\t\t\toptions.t = 1\n\t\t\tbreak\n\t\t}\n\t\tcase 'capture': {\n\t\t\toptions.u = 1\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tconsole.warn(`Abandoned unsupported eft event option '${option}'.`)\n\t\t}\n\t}\n}\n\nconst getOption = (options, keys, option) => {\n\tconst keyCode = parseInt(option, 10)\n\tif (isNaN(keyCode)) return setOption(options, efEscape(option))\n\tkeys.push(keyCode)\n}\n\nconst getEventOptions = (name) => {\n\tconst options = {}\n\tconst keys = []\n\tconst [listener, ...ops] = splitBy(name, '.')\n\toptions.l = efEscape(listener)\n\tfor (let i of ops) getOption(options, keys, i)\n\tif (keys.length > 0) options.k = keys\n\treturn options\n}\n\nconst splitEvents = (string) => {\n\tconst [name, ...value] = splitBy(string, ':')\n\tconst content = value.join(':')\n\tconst escapedName = efEscape(name.trim())\n\tif (content) return [escapedName, splitLiterals(content)]\n\treturn [escapedName]\n}\n\nconst parseLine = ({line, ast, parsingInfo, i}) => {\n\tif (isEmpty(line)) return\n\tgetOffset(line, parsingInfo)\n\n\tconst trimmedLine = removeOffset(line, parsingInfo, i)\n\tgetIndent(trimmedLine, parsingInfo)\n\n\tlet { depth, content } = getDepth(trimmedLine, parsingInfo, i)\n\n\tif (content) {\n\t\tif (depth < 0 || depth - parsingInfo.prevDepth > 1 || (depth - parsingInfo.prevDepth === 1 && ['comment', 'tag'].indexOf(parsingInfo.prevType) === -1) || (parsingInfo.prevType !== 'comment' && depth === 0 && parsingInfo.topExists)) throw new SyntaxError(getErrorMsg(`Expected indent to be grater than 0 and less than ${parsingInfo.prevDepth + 1}, but got ${depth}`, i))\n\t\tconst type = content[0]\n\t\tcontent = content.slice(1)\n\t\tif (!parsingInfo.topExists && typeSymbols.indexOf(type) >= 0 && type !== '>') throw new SyntaxError(getErrorMsg('No top level entry', i))\n\t\tif (!content && typeSymbols.indexOf(type) >= 0) throw new SyntaxError(getErrorMsg('Empty content', i))\n\t\t// Jump back to upper level\n\t\tif (depth < parsingInfo.prevDepth || (depth === parsingInfo.prevDepth && parsingInfo.prevType === 'tag')) parsingInfo.currentNode = resolveDepth(ast, depth)\n\t\tparsingInfo.prevDepth = depth\n\n\t\tswitch (type) {\n\t\t\tcase '>': {\n\t\t\t\tif (!parsingInfo.topExists) {\n\t\t\t\t\tparsingInfo.topExists = true\n\t\t\t\t\tparsingInfo.minDepth = depth\n\t\t\t\t}\n\t\t\t\tconst info = parseTag(content)\n\t\t\t\tconst newNode = [{\n\t\t\t\t\tt: info.tag\n\t\t\t\t}]\n\t\t\t\tif (info.class) {\n\t\t\t\t\tnewNode[0].a = {}\n\t\t\t\t\tnewNode[0].a.class = info.class\n\t\t\t\t}\n\t\t\t\tif (info.ref) newNode[0].r = info.ref\n\t\t\t\tparsingInfo.currentNode.push(newNode)\n\t\t\t\tparsingInfo.currentNode = newNode\n\t\t\t\tparsingInfo.prevType = 'tag'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '#': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].a) parsingInfo.currentNode[0].a = {}\n\t\t\t\tparsingInfo.currentNode[0].a[name] = value\n\t\t\t\tparsingInfo.prevType = 'attr'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '%': {\n\t\t\t\tconst { name, value } = parseNodeProps(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].p) parsingInfo.currentNode[0].p = {}\n\t\t\t\tparsingInfo.currentNode[0].p[name] = value\n\t\t\t\tparsingInfo.prevType = 'prop'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '@': {\n\t\t\t\tconst { name, value } = parseEvent(content)\n\t\t\t\tif (!parsingInfo.currentNode[0].e) parsingInfo.currentNode[0].e = []\n\t\t\t\tconst options = getEventOptions(name)\n\t\t\t\tconst [method, _value] = splitEvents(value)\n\t\t\t\toptions.m = method\n\t\t\t\tif (_value) options.v = _value\n\t\t\t\tparsingInfo.currentNode[0].e.push(options)\n\t\t\t\tparsingInfo.prevType = 'event'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '.': {\n\t\t\t\tparsingInfo.currentNode.push(...parseText(content))\n\t\t\t\tparsingInfo.prevType = 'text'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '-': {\n\t\t\t\tif (reserved.indexOf(content) !== -1) throw new SyntaxError(getErrorMsg(`Reserved name '${content}' should not be used`, i))\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 0\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'node'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase '+': {\n\t\t\t\tparsingInfo.currentNode.push({\n\t\t\t\t\tn: content,\n\t\t\t\t\tt: 1\n\t\t\t\t})\n\t\t\t\tparsingInfo.prevType = 'list'\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\tparsingInfo.prevType = 'comment'\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst parseEft = (template) => {\n\tif (!template) throw new TypeError(getErrorMsg('Template required, but nothing given'))\n\tconst tplType = typeof template\n\tif (tplType !== 'string') throw new TypeError(getErrorMsg(`Expected a string, but got a(n) ${tplType}`))\n\tconst lines = template.split(/\\r?\\n/)\n\tconst ast = []\n\tconst parsingInfo = {\n\t\tindentReg: null,\n\t\tprevDepth: 0,\n\t\toffset: null,\n\t\toffsetReg: null,\n\t\tprevType: 'comment',\n\t\tcurrentNode: ast,\n\t\ttopExists: false,\n\t}\n\tfor (let i = 0; i < lines.length; i++) parseLine({line: lines[i], ast, parsingInfo, i})\n\n\tif (ast[0]) return ast[0]\n\tthrow new SyntaxError(getErrorMsg('Nothing to be parsed', lines.length - 1))\n}\n\nexport default parseEft\n","const typeOf = (obj) => {\n\tif (Array.isArray(obj)) return 'array'\n\treturn typeof obj\n}\n\nexport default typeOf\n","const mixStr = (strs, ...exprs) => {\n\tlet string = ''\n\tfor (let i = 0; i < exprs.length; i++) string += (strs[i] + exprs[i])\n\treturn string + strs[strs.length - 1]\n}\n\nconst getVal = ({dataNode, _key}) => dataNode[_key]\n\nconst mixVal = (strs, ...exprs) => {\n\tif (!strs) return getVal(exprs[0])\n\tconst template = [strs]\n\ttemplate.push(...exprs.map(getVal))\n\treturn mixStr(...template)\n}\n\nexport { mixStr, mixVal }\n","const proto = Array.prototype\n\nconst ARR = {\n\tcopy(arr) {\n\t\treturn proto.slice.call(arr, 0)\n\t},\n\tempty(arr) {\n\t\tarr.length = 0\n\t\treturn arr\n\t},\n\tequals(left, right) {\n\t\tif (!Array.isArray(right)) return false\n\t\tif (left === right) return true\n\t\tif (left.length !== right.length) return false\n\t\tfor (let i = 0, l = left.length; i < l; i++) {\n\t\t\tif (left[i] !== right[i]) return false\n\t\t}\n\t\treturn true\n\t},\n\tpop(arr) {\n\t\treturn proto.pop.call(arr)\n\t},\n\tpush(arr, ...items) {\n\t\treturn proto.push.apply(arr, items)\n\t},\n\tremove(arr, item) {\n\t\tconst index = proto.indexOf.call(arr, item)\n\t\tif (index > -1) {\n\t\t\tproto.splice.call(arr, index, 1)\n\t\t\treturn item\n\t\t}\n\t},\n\treverse(arr) {\n\t\treturn proto.reverse.call(arr)\n\t},\n\trightUnique(arr) {\n\t\tconst newArr = []\n\t\tfor (let i = 0; i < arr.length; i++) {\n\t\t\tfor (let j = i + 1; j < arr.length; j++) if (arr[i] === arr[j]) j = i += 1\n\t\t\tnewArr.push(arr[i])\n\t\t}\n\t\treturn newArr\n\t},\n\tshift(arr) {\n\t\treturn proto.shift.call(arr)\n\t},\n\tslice(arr, index, length) {\n\t\treturn proto.slice.call(arr, index, length)\n\t},\n\tsort(arr, fn) {\n\t\treturn proto.sort.call(arr, fn)\n\t},\n\tsplice(arr, ...args) {\n\t\treturn proto.splice.apply(arr, args)\n\t},\n\tunshift(arr, ...items) {\n\t\treturn proto.unshift.apply(arr, items)\n\t}\n}\n\nif (window.Set && Array.from) ARR.unique = arr => Array.from(new Set(arr))\nelse ARR.unique = ARR.rightUnique\n\nexport default ARR\n","import ARR from './utils/array-helper.js'\n\nconst modificationQueue = []\nconst domQueue = []\nconst userQueue = []\nlet count = 0\n\nconst queue = handlers => modificationQueue.push(...handlers)\nconst queueDom = handler => domQueue.push(handler)\nconst onNextRender = handler => userQueue.push(handler)\n\nconst isPaused = () => count > 0\n\nconst inform = () => {\n\tcount += 1\n\treturn count\n}\n\nconst execModifications = () => {\n\tconst renderQueue = ARR.unique(modificationQueue)\n\tfor (let i of renderQueue) i()\n\tif (process.env.NODE_ENV !== 'production') console.info('[EF]', `${modificationQueue.length} modification operation(s) cached, ${renderQueue.length} executed.`)\n\tARR.empty(modificationQueue)\n}\n\nconst execDomModifications = () => {\n\tconst domRenderQueue = ARR.rightUnique(domQueue)\n\tfor (let i of domRenderQueue) i()\n\tif (process.env.NODE_ENV !== 'production') console.info('[EF]', `${domQueue.length} DOM operation(s) cached, ${domRenderQueue.length} executed.`)\n\tARR.empty(domQueue)\n}\n\nconst execUserQueue = () => {\n\tif (userQueue.length === 0) return\n\tconst userFnQueue = ARR.unique(userQueue)\n\tfor (let i of userFnQueue) i()\n\tif (process.env.NODE_ENV !== 'production') console.info('[EF]', `${userQueue.length} user operation(s) cached, ${userFnQueue.length} executed.`)\n\tARR.empty(userQueue)\n}\n\nconst exec = (immediate) => {\n\tif (!immediate && (count -= 1) > 0) return count\n\tcount = 0\n\n\tif (modificationQueue.length > 0) execModifications()\n\n\tif (domQueue.length > 0) execDomModifications()\n\n\t// Execute user queue after DOM update\n\tif (userQueue.length > 0) setTimeout(execUserQueue, 0)\n\n\treturn count\n}\n\nconst bundle = (cb) => {\n\tinform()\n\ttry {\n\t\treturn exec(cb(inform, exec))\n\t} catch (e) {\n\t\tconsole.error('[EF]', 'Error caught when executing bundle:\\n', e)\n\t\treturn exec()\n\t}\n}\n\nexport { queue, queueDom, onNextRender, inform, exec, bundle, isPaused }\n","// Enough for ef's usage, so no need for a full polyfill\nconst _assign = (ee, er) => {\n\tfor (let i in er) ee[i] = er[i]\n\treturn ee\n}\n\nconst assign = Object.assign || _assign\n\nexport { assign }\n","import { inform, exec } from './render-queue.js'\nimport { assign } from './utils/polyfills.js'\n\nconst resolveAllPath = ({_path, handlers, subscribers, innerData}) => {\n\tfor (let i of _path) {\n\t\tif (!handlers[i]) handlers[i] = {}\n\t\tif (!subscribers[i]) subscribers[i] = {}\n\t\tif (!innerData[i]) innerData[i] = {}\n\t\thandlers = handlers[i]\n\t\tsubscribers = subscribers[i]\n\t\tinnerData = innerData[i]\n\t}\n\treturn {\n\t\thandlerNode: handlers,\n\t\tsubscriberNode: subscribers,\n\t\tdataNode: innerData\n\t}\n}\n\nconst resolveReactivePath = (_path, obj, enume) => {\n\tfor (let i of _path) {\n\t\tif (!obj[i]) {\n\t\t\tconst node = {}\n\t\t\tObject.defineProperty(obj, i, {\n\t\t\t\tget() {\n\t\t\t\t\treturn node\n\t\t\t\t},\n\t\t\t\tset(data) {\n\t\t\t\t\tinform()\n\t\t\t\t\tassign(node, data)\n\t\t\t\t\texec()\n\t\t\t\t},\n\t\t\t\tconfigurable: !enume,\n\t\t\t\tenumerable: enume\n\t\t\t})\n\t\t}\n\t\tobj = obj[i]\n\t}\n\treturn obj\n}\n\nconst resolve = ({ _path, _key, data, handlers, subscribers, innerData }) => {\n\tconst parentNode = resolveReactivePath(_path, data, true)\n\tconst {handlerNode, subscriberNode, dataNode} = resolveAllPath({_path, handlers, subscribers, innerData})\n\tif (!handlerNode[_key]) handlerNode[_key] = []\n\tif (!subscriberNode[_key]) subscriberNode[_key] = []\n\tif (!Object.prototype.hasOwnProperty.call(dataNode, _key)) dataNode[_key] = ''\n\treturn { parentNode, handlerNode: handlerNode[_key], subscriberNode: subscriberNode[_key], dataNode }\n}\n\nconst resolveSubscriber = (_path, subscribers) => {\n\tconst pathArr = _path.split('.')\n\tconst key = pathArr.pop()\n\tfor (let i of pathArr) {\n\t\tif (!subscribers[i]) subscribers[i] = {}\n\t\tsubscribers = subscribers[i]\n\t}\n\treturn subscribers[key]\n}\n\nexport { resolveReactivePath, resolve, resolveSubscriber }\n","import { inform, exec } from './render-queue.js'\nimport ARR from './utils/array-helper.js'\n\nconst subscriberCallStack = []\n\nconst checkStack = subscriberNode => subscriberCallStack.indexOf(subscriberNode) >= 0\n\nconst pushStack = subscriberNode => subscriberCallStack.push(subscriberNode)\n\nconst popStack = subscriberNode => ARR.remove(subscriberCallStack, subscriberNode)\n\nconst execSubscribers = (subscriberNode, data) => {\n\t// Stop chain reaction when being called again in the context\n\t// There is no way for the caller to know it shouldn't update the node again\n\t// So this is the only method to avoid recursion\n\t// Push the current subscriberNode to stack as an identifier\n\tpushStack(subscriberNode)\n\t// Execute the subscriber function\n\tinform()\n\ttry {\n\t\tfor (const subscriber of subscriberNode) subscriber(data)\n\t} catch (e) {\n\t\tconsole.error('[EF]', 'Error caught when executing subscribers:\\n', e)\n\t}\n\texec()\n\t// Remove the subscriberNode from the stack so it could be called again\n\tpopStack(subscriberNode)\n}\n\nexport { subscriberCallStack, checkStack, pushStack, popStack, execSubscribers }\n","/* eslint-disable no-self-compare */\nconst isnan = obj => obj !== obj\n\nexport default isnan\n","import { resolve } from './resolver.js'\nimport { inform, exec, queue } from './render-queue.js'\nimport { execSubscribers } from './subscriber-call-stack.js'\nimport ARR from './utils/array-helper.js'\nimport isnan from './utils/isnan.js'\n\nconst initDataNode = ({parentNode, dataNode, handlerNode, subscriberNode, state, _key}) => {\n\tObject.defineProperty(parentNode, _key, {\n\t\tget() {\n\t\t\treturn dataNode[_key]\n\t\t},\n\t\tset(value) {\n\t\t\t// Comparing NaN is like eating a cake and suddenly encounter a grain of sand\n\t\t\tif (dataNode[_key] === value || (isnan(dataNode[_key]) && isnan(value))) return\n\t\t\tdataNode[_key] = value\n\t\t\tinform()\n\t\t\tqueue(handlerNode)\n\t\t\texec()\n\t\t\tif (subscriberNode.length > 0) execSubscribers(subscriberNode, {state, value})\n\t\t},\n\t\tenumerable: true\n\t})\n}\n\nconst initBinding = ({bind, state, handlers, subscribers, innerData}) => {\n\tconst _path = ARR.copy(bind[0])\n\tconst _key = _path.pop()\n\tconst { parentNode, handlerNode, subscriberNode, dataNode } = resolve({\n\t\t_path,\n\t\t_key,\n\t\tdata: state.$data,\n\t\thandlers,\n\t\tsubscribers,\n\t\tinnerData\n\t})\n\n\t// Initlize data binding node if not exist\n\tif (!Object.prototype.hasOwnProperty.call(parentNode, _key)) initDataNode({parentNode, dataNode, handlerNode, subscriberNode, state, _key})\n\t// Update default value\n\t// bind[1] is the default value for this node\n\tif (bind.length > 1) parentNode[_key] = bind[1]\n\n\treturn {dataNode, parentNode, handlerNode, subscriberNode, _key}\n}\n\nexport default initBinding\n","/* Get new events that works in all target browsers\n * though a little bit old-fashioned\n */\nconst getEvent = (name, props = {\n\tbubbles: false,\n\tcancelable: false\n}) => {\n\tconst event = document.createEvent('Event')\n\tevent.initEvent(name, props.bubbles, props.cancelable)\n\treturn event\n}\n\nexport default getEvent\n","import initBinding from './binding.js'\nimport { queue, inform, exec } from './render-queue.js'\nimport ARR from './utils/array-helper.js'\nimport getEvent from './utils/event-helper.js'\nimport { mixVal } from './utils/literals-mix.js'\n\nconst checkValidType = obj => ['number', 'boolean', 'string'].indexOf(typeof obj) > -1\n\n// SVG tags require namespace to work properly\nconst createByTag = (tag, svg) => {\n\tif (svg) return document.createElementNS('http://www.w3.org/2000/svg', tag)\n\treturn document.createElement(tag)\n}\n\nconst getElement = ({tag, ref, refs, svg}) => {\n\tconst element = createByTag(tag, svg)\n\tif (ref) Object.defineProperty(refs, ref, {\n\t\tvalue: element,\n\t\tenumerable: true\n\t})\n\treturn element\n}\n\nconst regTmpl = ({val, state, handlers, subscribers, innerData, handler}) => {\n\tif (Array.isArray(val)) {\n\t\tconst [strs, ...exprs] = val\n\t\tconst tmpl = [strs]\n\t\tconst _handler = () => handler(mixVal(...tmpl))\n\t\ttmpl.push(...exprs.map((item) => {\n\t\t\tconst {dataNode, handlerNode, _key} = initBinding({bind: item, state, handlers, subscribers, innerData})\n\t\t\thandlerNode.push(_handler)\n\t\t\treturn {dataNode, _key}\n\t\t}))\n\t\treturn _handler\n\t}\n\treturn () => val\n}\n\nconst updateOthers = ({parentNode, handlerNode, _handler, _key, value}) => {\n\t// Remove handler for this element temporarily\n\tARR.remove(handlerNode, _handler)\n\tinform()\n\tparentNode[_key] = value\n\texec()\n\t// Add back the handler\n\tARR.push(handlerNode, _handler)\n}\n\nconst addValListener = ({_handler, state, handlers, subscribers, innerData, element, key, expr}) => {\n\tconst {parentNode, handlerNode, _key} = initBinding({bind: expr, state, handlers, subscribers, innerData})\n\tconst _update = () => updateOthers({parentNode, handlerNode, _handler, _key, value: element.value})\n\tif (key === 'value') {\n\t\t// Listen to input, keyup and change events in order to work in most browsers.\n\t\telement.addEventListener('input', _update, true)\n\t\telement.addEventListener('keyup', _update, true)\n\t\telement.addEventListener('change', _update, true)\n\t\t// // Remove keyup and change listener if browser supports input event correctly\n\t\t// const removeListener = () => {\n\t\t// \telement.removeEventListener('input', removeListener, true)\n\t\t// \telement.removeEventListener('keyup', _update, true)\n\t\t// \telement.removeEventListener('change', _update, true)\n\t\t// }\n\t\t// element.addEventListener('input', removeListener, true)\n\t} else {\n\t\telement.addEventListener('change', () => {\n\t\t\t// Trigger change to the element it-self\n\t\t\telement.dispatchEvent(getEvent('ef-change-event'))\n\t\t\tif (element.tagName === 'INPUT' && element.type === 'radio' && element.name !== '') {\n\t\t\t\t// Trigger change to the the same named radios\n\t\t\t\tconst radios = document.querySelectorAll(`input[name=${element.name}]`)\n\t\t\t\tif (radios) {\n\t\t\t\t\tconst selected = ARR.copy(radios)\n\t\t\t\t\tARR.remove(selected, element)\n\n\t\t\t\t\t/* Event triggering could cause unwanted render triggers\n\t\t\t\t\t * no better ways came up at the moment\n\t\t\t\t\t */\n\t\t\t\t\tfor (let i of selected) i.dispatchEvent(getEvent('ef-change-event'))\n\t\t\t\t}\n\t\t\t}\n\t\t}, true)\n\t\t// Use custom event to avoid loops and conflicts\n\t\telement.addEventListener('ef-change-event', () => updateOthers({parentNode, handlerNode, _handler, _key, value: element.checked}))\n\t}\n}\n\nconst getAttrHandler = (element, key) => {\n\tif (key === 'class') return (val) => {\n\t\tval = `${val}`.replace(/\\s+/g, ' ').trim()\n\t\t// Remove attribute when value is empty\n\t\tif (!val) return element.removeAttribute(key)\n\t\telement.setAttribute(key, val)\n\t}\n\treturn (val) => {\n\t\t// Remove attribute when value is empty\n\t\tif (val === '') return element.removeAttribute(key)\n\t\telement.setAttribute(key, val)\n\t}\n}\n\nconst addAttr = ({element, attr, key, state, handlers, subscribers, innerData}) => {\n\tif (checkValidType(attr)) element.setAttribute(key, attr)\n\telse {\n\t\tconst handler = getAttrHandler(element, key)\n\t\tqueue([regTmpl({val: attr, state, handlers, subscribers, innerData, handler})])\n\t}\n}\n\nconst addProp = ({element, prop, key, state, handlers, subscribers, innerData}) => {\n\tif (checkValidType(prop)) element[key] = prop\n\telse {\n\t\tconst handler = (val) => {\n\t\t\telement[key] = val\n\t\t}\n\t\tconst _handler = regTmpl({val: prop, state, handlers, subscribers, innerData, handler})\n\t\tif ((key === 'value' ||\n\t\t\tkey === 'checked') &&\n\t\t\t!prop[0]) addValListener({_handler, state, handlers, subscribers, innerData, element, key, expr: prop[1]})\n\t\tqueue([_handler])\n\t}\n}\n\n\nconst rawHandler = val => val\n\nconst addEvent = ({element, event, state, handlers, subscribers, innerData}) => {\n\n\t/**\n\t *  l: listener                 : string\n\t *  m: method                   : string\n\t *  s: stopPropagation          : number/undefined\n\t *  i: stopImmediatePropagation : number/undefined\n\t *  p: preventDefault           : number/undefined\n\t *  h: shiftKey                 : number/undefined\n\t *  a: altKey                   : number/undefined\n\t *  c: ctrlKey                  : number/undefined\n\t *  t: metaKey                  : number/undefined\n\t *  u: capture                  : number/undefined\n\t *  k: keyCodes                 : array/undefined\n\t *  v: value                    : string/array/undefined\n\t */\n\tconst {l, m, s, i, p, h, a, c, t, u, k, v} = event\n\tconst _handler = regTmpl({val: v, state, handlers, subscribers, innerData, handler: rawHandler})\n\telement.addEventListener(l, (e) => {\n\t\tif (!!h !== !!e.shiftKey ||\n\t\t\t!!a !== !!e.altKey ||\n\t\t\t!!c !== !!e.ctrlKey ||\n\t\t\t!!t !== !!e.metaKey ||\n\t\t\t(k && k.indexOf(e.which) === -1)) return\n\t\tif (s) e.stopPropagation()\n\t\tif (i) e.stopImmediatePropagation()\n\t\tif (p) e.preventDefault()\n\t\tif (state.$methods[m]) state.$methods[m]({e, value: _handler(), state})\n\t\telse if (process.env.NODE_ENV !== 'production') console.warn('[EF]', `Method named '${m}' not found! Value been passed is:`, _handler())\n\t}, !!u)\n}\n\nconst createElement = ({info, state, innerData, refs, handlers, subscribers, svg}) => {\n\n\t/**\n\t *  t: tag       : string\n\t *  a: attr      : object\n\t *  p: prop      : object\n\t *  e: event     : array\n\t *  r: reference : string\n\t */\n\tconst {t, a, p, e, r} = info\n\tconst element = getElement({tag: t, ref: r, refs, svg})\n\tfor (let i in a) addAttr({element, attr: a[i], key: i, state, handlers, subscribers, innerData})\n\tfor (let i in p) addProp({element, prop: p[i], key: i, state, handlers, subscribers, innerData})\n\tfor (let i in e) addEvent({element, event: e[i], state, handlers, subscribers, innerData})\n\treturn element\n}\n\nexport default createElement\n","const proto = Node.prototype\n// const safeZone = document.createDocumentFragment()\n\nconst DOM = {\n\t// addClass(node, className) {\n\t// \tconst classes = className.split(' ')\n\t// \tnode.classList.add(...classes)\n\t// },\n\n\t// removeClass(node, className) {\n\t// \tconst classes = className.split(' ')\n\t// \tnode.classList.remove(...classes)\n\t// },\n\n\t// toggleClass(node, className) {\n\t// \tconst classes = className.split(' ')\n\t// \tconst classArr = node.className.split(' ')\n\t// \tfor (let i of classes) {\n\t// \t\tconst classIndex = classArr.indexOf(i)\n\t// \t\tif (classIndex > -1) {\n\t// \t\t\tclassArr.splice(classIndex, 1)\n\t// \t\t} else {\n\t// \t\t\tclassArr.push(i)\n\t// \t\t}\n\t// \t}\n\t// \tnode.className = classArr.join(' ').trim()\n\t// },\n\n\t// replaceWith(node, newNode) {\n\t// \tconst parent = node.parentNode\n\t// \tif (parent) proto.replaceChild.call(parent, newNode, node)\n\t// },\n\n\t// swap(node, newNode) {\n\t// \tconst nodeParent = node.parentNode\n\t// \tconst newNodeParent = newNode.parentNode\n\t// \tconst nodeSibling = node.nextSibling\n\t// \tconst newNodeSibling = newNode.nextSibling\n\t// \tif (nodeParent && newNodeParent) {\n\t// \t\tproto.insertBefore.call(nodeParent, newNode, nodeSibling)\n\t// \t\tproto.insertBefore.call(newNodeParent, node, newNodeSibling)\n\t// \t}\n\t// },\n\n\tbefore(node, ...nodes) {\n\t\tconst tempFragment = document.createDocumentFragment()\n\t\tnodes.reverse()\n\t\tfor (let i of nodes) proto.appendChild.call(tempFragment, i)\n\t\tproto.insertBefore.call(node.parentNode, tempFragment, node)\n\t},\n\n\tafter(node, ...nodes) {\n\t\tconst tempFragment = document.createDocumentFragment()\n\t\tfor (let i of nodes) proto.appendChild.call(tempFragment, i)\n\t\tif (node.nextSibling) proto.insertBefore.call(node.parentNode, tempFragment, node.nextSibling)\n\t\telse proto.appendChild.call(node.parentNode, tempFragment)\n\t},\n\n\tappend(node, ...nodes) {\n\t\tif ([1,9,11].indexOf(node.nodeType) === -1) return\n\t\tconst tempFragment = document.createDocumentFragment()\n\t\tfor (let i of nodes) proto.appendChild.call(tempFragment, i)\n\t\tproto.appendChild.call(node, tempFragment)\n\t},\n\n\t// prepend(node, ...nodes) {\n\t// \tif ([1,9,11].indexOf(node.nodeType) === -1) {\n\t// \t\treturn\n\t// \t}\n\t// \tconst tempFragment = document.createDocumentFragment()\n\t// \tnodes.reverse()\n\t// \tfor (let i of nodes) {\n\t// \t\tproto.appendChild.call(tempFragment, i)\n\t// \t}\n\t// \tif (node.firstChild) {\n\t// \t\tproto.insertBefore.call(node, tempFragment, node.firstChild)\n\t// \t} else {\n\t// \t\tproto.appendChild.call(node, tempFragment)\n\t// \t}\n\t// },\n\n\t// appendTo(node, newNode) {\n\t// \tproto.appendChild.call(newNode, node)\n\t// },\n\n\t// prependTo(node, newNode) {\n\t// \tif (newNode.firstChild) {\n\t// \t\tproto.insertBefore.call(newNode, node, node.firstChild)\n\t// \t} else {\n\t// \t\tproto.appendChild.call(newNode, node)\n\t// \t}\n\t// },\n\n\t// empty(node) {\n\t// \tnode.innerHTML = ''\n\t// },\n\n\tremove(node) {\n\t\tproto.removeChild.call(node.parentNode, node)\n\t},\n\n\t// safeRemove(node) {\n\t// \tproto.appendChild.call(safeZone, node)\n\t// }\n}\n\nexport default DOM\n","import DOM from './dom-helper.js'\nimport ARR from './array-helper.js'\nimport { inform, exec } from '../render-queue.js'\n\nconst DOMARR = {\n\tempty() {\n\t\tinform()\n\t\tfor (let i of ARR.copy(this)) i.$destroy()\n\t\texec()\n\t\tARR.empty(this)\n\t},\n\tpop() {\n\t\tif (this.length === 0) return\n\t\tconst poped = ARR.pop(this)\n\t\tpoped.$umount()\n\t\treturn poped\n\t},\n\tpush({state, key, anchor}, ...items) {\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of items) ARR.push(elements, i.$mount({parent: state, key}))\n\t\tif (this.length === 0) DOM.after(anchor, ...elements)\n\t\telse DOM.after(this[this.length - 1].$ctx.nodeInfo.placeholder, ...elements)\n\t\texec()\n\t\treturn ARR.push(this, ...items)\n\t},\n\tremove(item) {\n\t\tif (this.indexOf(item) === -1) return\n\t\titem.$umount()\n\t\treturn item\n\t},\n\treverse({state, key, anchor}) {\n\t\tif (this.length === 0) return this\n\t\tconst tempArr = ARR.copy(this)\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i = tempArr.length - 1; i >= 0; i--) {\n\t\t\ttempArr[i].$umount()\n\t\t\tARR.push(elements, tempArr[i].$mount({parent: state, key}))\n\t\t}\n\t\tARR.push(this, ...ARR.reverse(tempArr))\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn this\n\t},\n\tshift() {\n\t\tif (this.length === 0) return\n\t\tconst shifted = ARR.shift(this)\n\t\tshifted.$umount()\n\t\treturn shifted\n\t},\n\tsort({state, key, anchor}, fn) {\n\t\tif (this.length === 0) return this\n\t\tconst sorted = ARR.copy(ARR.sort(this, fn))\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of sorted) {\n\t\t\ti.$umount()\n\t\t\tARR.push(elements, i.$mount({parent: state, key}))\n\t\t}\n\t\tARR.push(this, ...sorted)\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn this\n\t},\n\tsplice(...args) {\n\t\tif (this.length === 0) return this\n\t\tconst spliced = ARR.splice(ARR.copy(this), ...args)\n\t\tinform()\n\t\tfor (let i of spliced) i.$umount()\n\t\texec()\n\t\treturn spliced\n\t},\n\tunshift({state, key, anchor}, ...items) {\n\t\tif (this.length === 0) return this.push(...items).length\n\t\tconst elements = []\n\t\tinform()\n\t\tfor (let i of items) ARR.push(elements, i.$mount({parent: state, key}))\n\t\tDOM.after(anchor, ...elements)\n\t\texec()\n\t\treturn ARR.unshift(this, ...items)\n\t}\n}\n\nconst defineArr = (arr, info) => {\n\tObject.defineProperties(arr, {\n\t\tempty: {value: DOMARR.empty},\n\t\tpop: {value: DOMARR.pop},\n\t\tpush: {value: DOMARR.push.bind(arr, info)},\n\t\tremove: {value: DOMARR.remove},\n\t\treverse: {value: DOMARR.reverse.bind(arr, info)},\n\t\tshift: {value: DOMARR.shift},\n\t\tsort: {value: DOMARR.sort.bind(arr, info)},\n\t\tsplice: {value: DOMARR.splice},\n\t\tunshift: {value: DOMARR.unshift.bind(arr, info)}\n\t})\n\treturn arr\n}\n\nexport default defineArr\n","import createElement from './element-creator.js'\nimport { queue, inform, exec } from './render-queue.js'\nimport DOM from './utils/dom-helper.js'\nimport ARR from './utils/array-helper.js'\nimport defineArr from './utils/dom-arr-helper.js'\nimport typeOf from './utils/type-of.js'\nimport initBinding from './binding.js'\n\nconst bindTextNode = ({node, state, handlers, subscribers, innerData, element}) => {\n\t// Data binding text node\n\tconst textNode = document.createTextNode('')\n\tconst { dataNode, handlerNode, _key } = initBinding({bind: node, state, handlers, subscribers, innerData})\n\tconst handler = () => {\n\t\ttextNode.textContent = dataNode[_key]\n\t}\n\thandlerNode.push(handler)\n\tqueue([handler])\n\n\t// Append element to the component\n\tDOM.append(element, textNode)\n}\n\nconst updateMountingNode = ({state, children, key, anchor, value}) => {\n\tif (children[key] === value) return\n\tif (value) {\n\t\tif (value.$ctx.nodeInfo.parent && process.env.NODE_ENV !== 'production') console.warn('[EF]', 'Better detach the component before attaching it to a new component!')\n\t\tif (value.$ctx.nodeInfo.element.contains(state.$ctx.nodeInfo.element)) {\n\t\t\tif (process.env.NODE_ENV !== 'production') console.warn('[EF]', 'Cannot mount a component to it\\'s child component!')\n\t\t\treturn\n\t\t}\n\t}\n\n\tinform()\n\t// Update component\n\tif (children[key]) children[key].$umount()\n\t// Update stored value\n\tchildren[key] = value\n\tif (value) value.$mount({target: anchor, parent: state, option: 'before', key})\n\texec()\n}\n\nconst bindMountingNode = ({state, key, children, anchor}) => {\n\tObject.defineProperty(state, key, {\n\t\tget() {\n\t\t\treturn children[key]\n\t\t},\n\t\tset(value) {\n\t\t\tupdateMountingNode({state, children, key, anchor, value})\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t})\n}\n\nconst updateMountingList = ({state, children, key, anchor, value}) => {\n\tif (value) value = ARR.copy(value)\n\telse value = []\n\tconst fragment = document.createDocumentFragment()\n\t// Update components\n\tinform()\n\tif (children[key]) {\n\t\tfor (let j of value) {\n\t\t\tif (j.$ctx.nodeInfo.element.contains(state.$ctx.nodeInfo.element)) {\n\t\t\t\tif (process.env.NODE_ENV !== 'production') console.warn('[EF]', 'Cannot mount a component to it\\'s child component!')\n\t\t\t\treturn\n\t\t\t}\n\t\t\tj.$umount()\n\t\t\tDOM.append(fragment, j.$mount({parent: state, key}))\n\t\t}\n\t\tfor (let j of ARR.copy(children[key])) j.$umount()\n\t} else for (let j of value) DOM.append(fragment, j.$mount({parent: state, key}))\n\t// Update stored value\n\tchildren[key].length = 0\n\tARR.push(children[key], ...value)\n\t// Append to current component\n\tDOM.after(anchor, fragment)\n\texec()\n}\n\nconst bindMountingList = ({state, key, children, anchor}) => {\n\tchildren[key] = defineArr([], {state, key, anchor})\n\tObject.defineProperty(state, key, {\n\t\tget() {\n\t\t\treturn children[key]\n\t\t},\n\t\tset(value) {\n\t\t\tif (children[key] && ARR.equals(children[key], value)) return\n\t\t\tupdateMountingList({state, children, key, anchor, value})\n\t\t},\n\t\tenumerable: true,\n\t\tconfigurable: true\n\t})\n}\n\nconst resolveAST = ({node, nodeType, element, state, innerData, refs, children, handlers, subscribers, svg, create}) => {\n\tswitch (nodeType) {\n\t\tcase 'string': {\n\t\t\t// Static text node\n\t\t\tDOM.append(element, document.createTextNode(node))\n\t\t\tbreak\n\t\t}\n\t\tcase 'array': {\n\t\t\tif (typeOf(node[0]) === 'object') DOM.append(element, create({node, state, innerData, refs, children, handlers, subscribers, svg, create}))\n\t\t\telse bindTextNode({node, state, handlers, subscribers, innerData, element})\n\t\t\tbreak\n\t\t}\n\t\tcase 'object': {\n\t\t\tconst anchor = document.createTextNode('')\n\t\t\tif (node.t === 0) bindMountingNode({state, key: node.n, children, anchor})\n\t\t\telse if (node.t === 1) bindMountingList({state, key: node.n, children, anchor})\n\t\t\telse throw new TypeError(`Not a standard ef.js AST: Unknown mounting point type '${node.t}'`)\n\t\t\t// Append anchor\n\t\t\tDOM.append(element, anchor)\n\t\t\t// Display anchor indicator in development mode\n\t\t\tif (process.env.NODE_ENV !== 'production') {\n\t\t\t\tDOM.before(anchor, document.createComment(`Start of mounting point '${node.n}'`))\n\t\t\t\tDOM.after(anchor, document.createComment(`End of mounting point '${node.n}'`))\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tthrow new TypeError(`Not a standard ef.js AST: Unknown node type '${nodeType}'`)\n\t\t}\n\t}\n}\n\nconst create = ({node, state, innerData, refs, children, handlers, subscribers, svg, create}) => {\n\tconst [info, ...childNodes] = node\n\tif (!svg && info.t === 'svg') svg = true\n\t// First create an element according to the description\n\tconst element = createElement({info, state, innerData, refs, handlers, subscribers, svg})\n\n\t// Append child nodes\n\tfor (let i of childNodes) resolveAST({node: i, nodeType: typeOf(i), element, state, innerData, refs, children, handlers, subscribers, svg, create})\n\n\treturn element\n}\n\nexport default create\n","const mountOptions = {\n\tBEFORE: 'before',\n\tAFTER: 'after',\n\tAPPEND: 'append',\n\tREPLACE: 'replace'\n}\n\nexport default mountOptions\n","import create from './creator.js'\nimport initBinding from './binding.js'\nimport { queueDom, inform, exec } from './render-queue.js'\nimport { resolveReactivePath, resolveSubscriber } from './resolver.js'\nimport DOM from './utils/dom-helper.js'\nimport ARR from './utils/array-helper.js'\nimport { assign } from './utils/polyfills.js'\nimport mountOptions from '../mount-options.js'\n\nconst unsubscribe = (_path, fn, subscribers) => {\n\tconst subscriberNode = resolveSubscriber(_path, subscribers)\n\tARR.remove(subscriberNode, fn)\n}\n\nconst state = class {\n\tconstructor (ast) {\n\t\tconst children = {}\n\t\tconst refs = {}\n\t\tconst innerData = {}\n\t\tconst methods = {}\n\t\tconst handlers = {}\n\t\tconst subscribers = {}\n\t\tconst nodeInfo = {\n\t\t\tplaceholder: document.createTextNode(''),\n\t\t\treplace: [],\n\t\t\tparent: null,\n\t\t\tkey: null\n\t\t}\n\n\t\t/* Detatched components will be put in the safe zone.\n\t\t * Split safe zone to each component in order to make\n\t\t * the component memory recycleable when lost reference\n\t\t */\n\t\tconst safeZone = document.createDocumentFragment()\n\n\t\tif (process.env.NODE_ENV !== 'production') nodeInfo.placeholder = document.createComment('EF COMPONENT PLACEHOLDER')\n\n\t\tconst mount = () => {\n\t\t\tif (nodeInfo.replace.length > 0) {\n\t\t\t\tfor (let i of nodeInfo.replace) DOM.remove(i)\n\t\t\t\tARR.empty(nodeInfo.replace)\n\t\t\t}\n\t\t\tDOM.before(nodeInfo.placeholder, nodeInfo.element)\n\t\t}\n\n\t\tconst ctx = {\n\t\t\tmount, refs, innerData, methods, handlers,\n\t\t\tsubscribers, nodeInfo, safeZone\n\t\t}\n\n\t\tObject.defineProperty(this, '$ctx', {\n\t\t\tget() {\n\t\t\t\treturn ctx\n\t\t\t}\n\t\t})\n\n\t\tinform()\n\t\t// Init root data node\n\t\tresolveReactivePath(['$data'], this, false)\n\n\t\tnodeInfo.element = create({node: ast, state: this, innerData, refs, children, handlers, subscribers, svg: false, create})\n\t\tDOM.append(safeZone, nodeInfo.placeholder)\n\t\tqueueDom(mount)\n\t\texec()\n\t}\n\n\tget $methods() {\n\t\tconst { methods } = this.$ctx\n\t\treturn methods\n\t}\n\n\tset $methods(newMethods) {\n\t\tconst { methods } = this.$ctx\n\t\tassign(methods, newMethods)\n\t}\n\n\tget $refs() {\n\t\treturn this.$ctx.refs\n\t}\n\n\t$mount({target, option, parent, key}) {\n\t\tconst { nodeInfo, mount } = this.$ctx\n\t\tif (typeof target === 'string') target = document.querySelector(target)\n\n\t\tinform()\n\t\tif (nodeInfo.parent) {\n\t\t\tthis.$umount()\n\t\t\tif (process.env.NODE_ENV !== 'production') console.warn('[EF]', 'Component detached from previous mounting point.')\n\t\t}\n\n\t\tif (!parent) parent = target\n\t\tif (!key) key = '__DIRECTMOUNT__'\n\t\tnodeInfo.parent = parent\n\t\tnodeInfo.key = key\n\t\tqueueDom(mount)\n\n\t\tif (!target) {\n\t\t\texec()\n\t\t\treturn nodeInfo.placeholder\n\t\t}\n\n\t\tswitch (option) {\n\t\t\tcase mountOptions.BEFORE: {\n\t\t\t\tDOM.before(target, nodeInfo.placeholder)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.AFTER: {\n\t\t\t\tDOM.after(target, nodeInfo.placeholder)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.REPLACE: {\n\t\t\t\tDOM.before(target, nodeInfo.placeholder)\n\t\t\t\tnodeInfo.replace.push(target)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase mountOptions.APPEND:\n\t\t\tdefault: {\n\t\t\t\tDOM.append(target, nodeInfo.placeholder)\n\t\t\t}\n\t\t}\n\t\treturn exec()\n\t}\n\n\t$umount() {\n\t\tconst { nodeInfo, safeZone, mount } = this.$ctx\n\t\tconst { parent, key } = nodeInfo\n\t\tnodeInfo.parent = null\n\t\tnodeInfo.key = null\n\n\t\tinform()\n\t\tif (parent && key !== '__DIRECTMOUNT__' && parent[key]) {\n\t\t\tif (Array.isArray(parent[key])) ARR.remove(parent[key], this)\n\t\t\telse {\n\t\t\t\tparent[key] = null\n\t\t\t\treturn exec()\n\t\t\t}\n\t\t}\n\t\tDOM.append(safeZone, nodeInfo.placeholder)\n\t\tqueueDom(mount)\n\t\treturn exec()\n\t}\n\n\t$subscribe(pathStr, subscriber) {\n\t\tconst { handlers, subscribers, innerData } = this.$ctx\n\t\tconst _path = pathStr.split('.')\n\t\tconst { dataNode, subscriberNode, _key } = initBinding({bind: [_path], state: this, handlers, subscribers, innerData})\n\t\tinform()\n\t\t// Execute the subscriber function immediately\n\t\ttry {\n\t\t\tsubscriber({state: this, value: dataNode[_key]})\n\t\t\t// Put the subscriber inside the subscriberNode\n\t\t\tsubscriberNode.push(subscriber)\n\t\t} catch (e) {\n\t\t\tconsole.error('[EF]', 'Error caught when registering subscriber:\\n', e)\n\t\t}\n\t\texec()\n\t}\n\n\t$unsubscribe(_path, fn) {\n\t\tconst { subscribers } = this.$ctx\n\t\tunsubscribe(_path, fn, subscribers)\n\t}\n\n\t$update(newState) {\n\t\tinform()\n\t\tconst tmpState = assign({}, newState)\n\t\tif (tmpState.$data) {\n\t\t\tassign(this.$data, tmpState.$data)\n\t\t\tdelete(tmpState.$data)\n\t\t}\n\t\tif (tmpState.$methods) {\n\t\t\tassign(this.$methods, tmpState.$methods)\n\t\t\tdelete(tmpState.$methods)\n\t\t}\n\t\tassign(this, tmpState)\n\t\texec()\n\t}\n\n\t$destroy() {\n\t\tconst { nodeInfo } = this.$ctx\n\t\tinform()\n\t\tthis.$umount()\n\t\tfor (let i in this) {\n\t\t\tthis[i] = null\n\t\t\tdelete this[i]\n\t\t}\n\t\t// Push DOM removement operation to query\n\t\tqueueDom(() => {\n\t\t\tDOM.remove(nodeInfo.element)\n\t\t\tDOM.remove(nodeInfo.placeholder)\n\t\t})\n\t\t// Render\n\t\treturn exec()\n\t}\n}\n\nexport default state\n","// Import everything\nimport parse from './lib/parser.js'\nimport typeOf from 'ef-core/src/lib/utils/type-of.js'\nimport { mixStr } from 'ef-core/src/lib/utils/literals-mix.js'\nimport parseEft from 'eft-parser'\nimport { version } from '../package.json'\n// Import core components\nimport {\n\tcreate as createComponent,\n\tonNextRender,\n\tinform,\n\texec,\n\tbundle,\n\tisPaused,\n\tmountOptions\n} from 'ef-core'\n\n// Set parser\nlet parser = parseEft\n\nconst create = (value) => {\n\tconst valType = typeOf(value)\n\tif (valType === 'string') value = parse(value, parser)\n\telse if (valType !== 'array') throw new TypeError('Cannot create new component without proper template or AST!')\n\n\treturn createComponent(value)\n}\n\n// Change parser\nconst setParser = (newParser) => {\n\tparser = newParser\n}\n\nconst t = (...args) => create(mixStr(...args))\n\nexport {\n\tt,\n\tcreate,\n\tonNextRender,\n\tinform,\n\texec,\n\tbundle,\n\tisPaused,\n\tsetParser,\n\tparseEft,\n\tmountOptions,\n\tversion\n}\n\nif (process.env.NODE_ENV !== 'production') console.info('[EF]', `ef.js v${version} initialized!`)\n","import eftParser from 'eft-parser'\n\nconst parse = (template, parser) => {\n\tif (!parser) parser = eftParser\n\treturn parser(template)\n}\n\nexport default parse\n","// Import everything\nimport state from './lib/renderer.js'\nimport mountOptions from './mount-options.js'\nimport { onNextRender, inform, exec, bundle, isPaused } from './lib/render-queue.js'\nimport { version } from '../package.json'\n\nconst create = (value) => {\n\tconst ast = value\n\tconst ef = class extends state {\n\t\tconstructor(newState) {\n\t\t\tinform()\n\t\t\tsuper(ast)\n\t\t\tif (newState) this.$update(newState)\n\t\t\texec()\n\t\t}\n\t}\n\treturn ef\n}\n\nexport { create, onNextRender, inform, exec, bundle, isPaused, mountOptions, version }\n\nif (process.env.NODE_ENV !== 'production') console.info('[EF]', `ef-core v${version} initialized!`)\n"],"names":["const","oct","RegExp","ucp","uni","hex","esc","b","t","n","v","f","r","O2C","SyntaxError","UC2C","val","substr","length","parseInt","String","fromCodePoint","err","U2C","substring","fromCharCode","X2C","efEscape","string","escaped","split","char","let","escapedStr","replace","push","join","checkEscape","splitWith","escapedSplit","i","splitBy","splitArr","shift","reserved","mustache","spaceIndent","hashref","getErrorMsg","msg","line","checkValidType","obj","indexOf","ESCAPE","parsed","JSON","parse","e","splitDefault","slice","pathArr","_path","trim","map","_default","defaultVal","splitLiterals","strs","tmpl","mustaches","match","pushStr","textArr","str","dotToSpace","parseNodeProps","splited","name","value","getOption","options","keys","option","keyCode","isNaN","s","p","h","a","c","u","console","warn","setOption","parseLine","ref","parsingInfo","offset","offsetReg","getOffset","trimmedLine","removed","prevDepth","removeOffset","indentReg","spaces","getIndent","depth","content","test","getDepth","prevType","topExists","type","currentNode","ast","resolveDepth","minDepth","info","tagInfo","tag","class","parseTag","newNode","parseEvent","l","listener","ops","k","getEventOptions","escapedName","splitEvents","m","method","_value","ref$6","result","exprs","parseText","parseEft","template","TypeError","tplType","lines","typeOf","Array","isArray","mixStr","getVal","proto","prototype","ARR","copy","arr","call","empty","equals","left","right","pop","apply","items","remove","item","index","splice","reverse","rightUnique","newArr","j","sort","fn","args","unshift","window","Set","from","unique","modificationQueue","domQueue","userQueue","count","queue","handlers","queueDom","handler","inform","execUserQueue","exec","immediate","execModifications","execDomModifications","setTimeout","assign","Object","ee","er","resolveReactivePath","enume","node","defineProperty","get","set","data","configurable","enumerable","subscriberCallStack","execSubscribers","subscriberNode","pushStack","subscriber","error","popStack","isnan","initBinding","bind","_key","parentNode","subscribers","innerData","handlerNode","dataNode","resolveAllPath","hasOwnProperty","resolve","state","$data","initDataNode","getEvent","props","bubbles","cancelable","event","document","createEvent","initEvent","getElement","ref$1","element","svg","createElementNS","createElement","createByTag","refs","regTmpl","_handler","updateOthers","addAttr","attr","setAttribute","key","removeAttribute","getAttrHandler","addProp","prop","expr","_update","addEventListener","dispatchEvent","tagName","radios","querySelectorAll","selected","checked","addValListener","rawHandler","addEvent","shiftKey","altKey","ctrlKey","metaKey","which","stopPropagation","stopImmediatePropagation","preventDefault","$methods","Node","DOM","before","tempFragment","createDocumentFragment","nodes","appendChild","insertBefore","after","nextSibling","append","nodeType","removeChild","DOMARR","$destroy","this","poped","$umount","elements","$mount","parent","anchor","$ctx","nodeInfo","placeholder","tempArr","shifted","sorted","spliced","bindMountingNode","children","contains","target","updateMountingNode","bindMountingList","defineProperties","fragment","updateMountingList","resolveAST","createTextNode","create","textNode","textContent","bindTextNode","childNodes","mountOptions","BEFORE","AFTER","APPEND","REPLACE","safeZone","mount","ctx","prototypeAccessors","newMethods","methods","$refs","querySelector","$subscribe","pathStr","$unsubscribe","resolveSubscriber","unsubscribe","$update","newState","tmpState","parser","valType","eftParser","super","createComponent","cb","newParser"],"mappings":"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"}