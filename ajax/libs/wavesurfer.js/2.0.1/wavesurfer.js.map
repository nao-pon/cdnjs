{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 3ff260114b09d1ac5d75","webpack:///./src/util/index.js","webpack:///./src/util/observer.js","webpack:///./src/util/request-animation-frame.js","webpack:///./src/webaudio.js","webpack:///./src/wavesurfer.js","webpack:///./src/util/ajax.js","webpack:///./src/util/get-id.js","webpack:///./src/util/max.js","webpack:///./src/util/min.js","webpack:///./src/util/extend.js","webpack:///./src/util/style.js","webpack:///./src/util/frame.js","webpack:///./node_modules/debounce/index.js","webpack:///./src/drawer.multicanvas.js","webpack:///./src/drawer.js","webpack:///./src/mediaelement.js","webpack:///./src/peakcache.js"],"names":["default","Observer","handlers","event","fn","push","name","callback","un","e","i","length","splice","handler","args","apply","setTimeout","on","forEach","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","element","bind","util","PLAYING","PAUSED","FINISHED","WebAudio","AudioContext","webkitAudioContext","WaveSurferAudioContext","sampleRate","WaveSurferOfflineAudioContext","OfflineAudioContext","webkitOfflineAudioContext","params","audioContext","offlineAudioContext","stateBehaviors","init","addOnAudioProcess","getPlayedPercents","duration","getDuration","getCurrentTime","startPosition","getPlayedTime","removeOnAudioProcess","fireEvent","ac","getAudioContext","lastPlay","currentTime","scheduledPause","states","Object","create","analyser","buffer","filters","gainNode","mergedPeaks","offlineAc","peaks","playbackRate","scriptNode","source","splitPeaks","state","explicitDuration","createVolumeNode","createScriptNode","createAnalyserNode","setState","setPlaybackRate","audioRate","setLength","filter","disconnect","connect","call","setFilters","disconnectFilters","reduce","prev","curr","createScriptProcessor","scriptBufferSize","createJavaScriptNode","destination","onaudioprocess","time","pause","createAnalyser","createGain","createGainNode","value","gain","arraybuffer","errback","getOfflineAudioContext","decodeAudioData","data","channels","numberOfChannels","c","first","last","newBuffer","createBuffer","sampleSize","sampleStep","chan","getChannelData","start","end","min","max","j","splitChannels","isPaused","unAll","disconnectSource","closeAudioContext","close","createSource","createBufferSource","noteGrainOn","stop","noteOff","adjustedTime","seekTo","resume","play","PluginClass","ws","WaveSurfer","wavesurfer","defaultParams","autoCenter","backend","barHeight","container","cursorColor","cursorWidth","dragSelection","fillParent","forceDecode","height","hideScrollbar","interact","loopSelection","maxCanvasWidth","mediaContainer","mediaControls","mediaType","minPxPerSec","normalize","partialRender","pixelRatio","devicePixelRatio","screen","deviceXDPI","logicalXDPI","plugins","progressColor","removeMediaElementOnDestroy","renderer","responsive","scrollParent","skipLength","waveColor","backends","MediaElement","extend","document","querySelector","Error","savedVolume","isMuted","tmpEvents","currentAjax","drawer","peakCache","Drawer","Backend","initialisedPluginList","isDestroyed","isReady","prevWidth","_onResize","debounce","wrapper","clientWidth","registerPlugins","createDrawer","createBackend","createPeakCache","addPlugin","plugin","deferInit","initPlugin","instance","staticProps","keys","pluginStaticProp","Instance","observerPrototypeKeys","getOwnPropertyNames","prototype","key","destroyPlugin","destroy","addEventListener","drawBuffer","progress","supportsWebAudio","seconds","skip","offset","position","Math","seekAndCenter","recenter","isFinite","console","error","paused","oldScrollParent","newVolume","setVolume","getVolume","rate","getPlaybackRate","setMute","mute","color","updateCursor","setHeight","nominalWidth","round","parentWidth","getWidth","width","getScrollX","newRanges","addRangeToPeakCache","getPeaks","drawPeaks","pxPerSec","decodeArrayBuffer","loadDecodedBuffer","load","blob","reader","FileReader","onProgress","loadArrayBuffer","target","result","readAsArrayBuffer","empty","url","preload","preloadIgnoreReasons","indexOf","activeReasons","reason","warn","join","loadBuffer","loadMediaElement","action","once","getArrayBuffer","setPeaks","urlOrElt","elt","loadElt","src","err","ajax","responseType","statusText","percentComplete","lengthComputable","loaded","total","accuracy","noWindow","arr","map","val","json","JSON","stringify","open","encodeURIComponent","format","quality","getImage","xhr","abort","cancelAjax","clearTmpEvents","setWidth","destroyAllPlugins","removeEventListener","options","XMLHttpRequest","fired100","method","status","response","send","getId","random","toString","substring","values","largest","Infinity","smallest","Number","dest","sources","style","el","styles","prop","frame","func","MultiCanvas","maxCanvasElementWidth","hasProgressCanvas","halfPixel","canvases","progressWave","createWrapper","createElements","appendChild","createElement","zIndex","left","top","bottom","overflow","display","boxSizing","borderRightStyle","pointerEvents","addCanvas","borderRightWidth","borderRightColor","totalWidth","requiredCanvases","ceil","removeCanvas","entry","canvasWidth","updateDimensions","clearWaveForEntry","leftOffset","wave","waveCtx","getContext","progressCtx","lastEntry","pop","parentElement","removeChild","elementWidth","canvas","offsetLeft","clearRect","channelIndex","prepareDraw","absmax","hasMinVals","offsetY","halfH","undefined","peakIndexScale","bar","barWidth","gap","step","scale","peak","floor","h","fillRect","reflectedPeaks","len","drawLine","setFillStyles","drawLineToContext","ctx","canvasStart","canvasEnd","beginPath","moveTo","lineTo","closePath","fill","x","y","startCanvas","endCanvas","intersection","x1","y1","x2","y2","fillRectToContext","Array","channelPeaks","some","fillStyle","type","images","toDataURL","lastPos","userSelect","webkitUserSelect","overflowX","overflowY","setupWrapperEvents","noPrevent","preventDefault","clientX","targetTouches","bbox","getBoundingClientRect","scrollLeft","scrollWidth","scrollbarHeight","offsetHeight","clientHeight","clientY","handleEvent","clearWave","drawBars","drawWave","percent","recenterOnPosition","immediate","half","maxScroll","updateSize","minPxDelta","pos","newPos","updateProgress","parentNode","media","toLowerCase","elementPosition","onPlayEnd","createTimer","onAudioProcess","controls","autoplay","prevMedia","_load","seekable","clearPlayEnd","setPlayEnd","_onPlayEnd","volume","PeakCache","clearPeakCache","peakCacheRanges","peakCacheLength","uncachedRanges","item","concat","sort","a","b","uncachedRangePairs","peakCacheRangePairs"],"mappings":"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","file":"wavesurfer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"WaveSurfer\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WaveSurfer\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ff260114b09d1ac5d75","export { default as ajax } from './ajax';\nexport { default as getId } from './get-id';\nexport { default as max } from './max';\nexport { default as min } from './min';\nexport { default as Observer } from './observer';\nexport { default as extend } from './extend';\nexport { default as style } from './style';\nexport { default as requestAnimationFrame } from './request-animation-frame';\nexport { default as frame } from './frame';\nexport { default as debounce } from 'debounce';\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/index.js","/**\n * @typedef {Object} ListenerDescriptor\n * @property {string} name The name of the event\n * @property {function} callback The callback\n * @property {function} un The function to call to remove the listener\n */\n\n/**\n * Observer class\n */\nexport default class Observer {\n    /**\n     * Instantiate Observer\n     */\n    constructor() {\n        /**\n         * @private\n         * @todo Initialise the handlers here already and remove the conditional\n         * assignment in `on()`\n         */\n        this.handlers = null;\n    }\n    /**\n     * Attach a handler function for an event.\n     *\n     * @param {string} event Name of the event to listen to\n     * @param {function} fn The callback to trigger when the event is fired\n     * @return {ListenerDescriptor}\n     */\n    on(event, fn) {\n        if (!this.handlers) {\n            this.handlers = {};\n        }\n\n        let handlers = this.handlers[event];\n        if (!handlers) {\n            handlers = this.handlers[event] = [];\n        }\n        handlers.push(fn);\n\n        // Return an event descriptor\n        return {\n            name: event,\n            callback: fn,\n            un: (e, fn) => this.un(e, fn)\n        };\n    }\n\n    /**\n     * Remove an event handler.\n     *\n     * @param {string} event Name of the event the listener that should be\n     * removed listens to\n     * @param {function} fn The callback that should be removed\n     */\n    un(event, fn) {\n        if (!this.handlers) {\n            return;\n        }\n\n        const handlers = this.handlers[event];\n        let i;\n        if (handlers) {\n            if (fn) {\n                for (i = handlers.length - 1; i >= 0; i--) {\n                    if (handlers[i] == fn) {\n                        handlers.splice(i, 1);\n                    }\n                }\n            } else {\n                handlers.length = 0;\n            }\n        }\n    }\n\n    /**\n     * Remove all event handlers.\n     */\n    unAll() {\n        this.handlers = null;\n    }\n\n    /**\n     * Attach a handler to an event. The handler is executed at most once per\n     * event type.\n     *\n     * @param {string} event The event to listen to\n     * @param {function} handler The callback that is only to be called once\n     * @return {ListenerDescriptor}\n     */\n    once(event, handler) {\n        const fn = (...args) => {\n            /*  eslint-disable no-invalid-this */\n            handler.apply(this, args);\n            /*  eslint-enable no-invalid-this */\n            setTimeout(() => {\n                this.un(event, fn);\n            }, 0);\n        };\n        return this.on(event, fn);\n    }\n\n    /**\n     * Manually fire an event\n     *\n     * @param {string} event The event to fire manually\n     * @param {...any} args The arguments with which to call the listeners\n     */\n    fireEvent(event, ...args) {\n        if (!this.handlers) {\n            return;\n        }\n        const handlers = this.handlers[event];\n        handlers &&\n            handlers.forEach(fn => {\n                fn(...args);\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/observer.js","/**\n * Returns the requestAnimationFrame function for the browser, or a shim with\n * setTimeout if none is found\n *\n * @return {function}\n */\nexport default (\n    window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    ((callback, element) => setTimeout(callback, 1000 / 60))\n).bind(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/request-animation-frame.js","import * as util from './util';\n\n// using consts to prevent someone writing the string wrong\nconst PLAYING = 'playing';\nconst PAUSED = 'paused';\nconst FINISHED = 'finished';\n\n/**\n * WebAudio backend\n *\n * @extends {Observer}\n */\nexport default class WebAudio extends util.Observer {\n    /** @private */\n    static scriptBufferSize = 256;\n    /** @private */\n    audioContext = null;\n    /** @private */\n    offlineAudioContext = null;\n    /** @private */\n    stateBehaviors = {\n        [PLAYING]: {\n            init() {\n                this.addOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition + this.getPlayedTime();\n            }\n        },\n        [PAUSED]: {\n            init() {\n                this.removeOnAudioProcess();\n            },\n            getPlayedPercents() {\n                const duration = this.getDuration();\n                return this.getCurrentTime() / duration || 0;\n            },\n            getCurrentTime() {\n                return this.startPosition;\n            }\n        },\n        [FINISHED]: {\n            init() {\n                this.removeOnAudioProcess();\n                this.fireEvent('finish');\n            },\n            getPlayedPercents() {\n                return 1;\n            },\n            getCurrentTime() {\n                return this.getDuration();\n            }\n        }\n    };\n\n    /**\n     * Does the browser support this backend\n     *\n     * @return {boolean}\n     */\n    supportsWebAudio() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n\n    /**\n     * Get the audio context used by this backend or create one\n     *\n     * @return {AudioContext}\n     */\n    getAudioContext() {\n        if (!window.WaveSurferAudioContext) {\n            window.WaveSurferAudioContext = new (window.AudioContext ||\n                window.webkitAudioContext)();\n        }\n        return window.WaveSurferAudioContext;\n    }\n\n    /**\n     * Get the offline audio context used by this backend or create one\n     *\n     * @param {number} sampleRate\n     * @return {OfflineAudioContext}\n     */\n    getOfflineAudioContext(sampleRate) {\n        if (!window.WaveSurferOfflineAudioContext) {\n            window.WaveSurferOfflineAudioContext = new (window.OfflineAudioContext ||\n                window.webkitOfflineAudioContext)(1, 2, sampleRate);\n        }\n        return window.WaveSurferOfflineAudioContext;\n    }\n\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super();\n        /** @private */\n        this.params = params;\n        /** @private */\n        this.ac = params.audioContext || this.getAudioContext();\n        /**@private */\n        this.lastPlay = this.ac.currentTime;\n        /** @private */\n        this.startPosition = 0;\n        /** @private  */\n        this.scheduledPause = null;\n        /** @private */\n        this.states = {\n            [PLAYING]: Object.create(this.stateBehaviors[PLAYING]),\n            [PAUSED]: Object.create(this.stateBehaviors[PAUSED]),\n            [FINISHED]: Object.create(this.stateBehaviors[FINISHED])\n        };\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.filters = [];\n        /** @private */\n        this.gainNode = null;\n        /** @private */\n        this.mergedPeaks = null;\n        /** @private */\n        this.offlineAc = null;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.analyser = null;\n        /** @private */\n        this.scriptNode = null;\n        /** @private */\n        this.source = null;\n        /** @private */\n        this.splitPeaks = [];\n        /** @private */\n        this.state = null;\n        /** @private */\n        this.explicitDuration = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.createVolumeNode();\n        this.createScriptNode();\n        this.createAnalyserNode();\n\n        this.setState(PAUSED);\n        this.setPlaybackRate(this.params.audioRate);\n        this.setLength(0);\n    }\n\n    /** @private */\n    disconnectFilters() {\n        if (this.filters) {\n            this.filters.forEach(filter => {\n                filter && filter.disconnect();\n            });\n            this.filters = null;\n            // Reconnect direct path\n            this.analyser.connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    setState(state) {\n        if (this.state !== this.states[state]) {\n            this.state = this.states[state];\n            this.state.init.call(this);\n        }\n    }\n\n    /**\n     * Unpacked `setFilters()`\n     *\n     * @param {...AudioNode} filters\n     */\n    setFilter(...filters) {\n        this.setFilters(filters);\n    }\n\n    /**\n     * Insert custom Web Audio nodes into the graph\n     *\n     * @param {AudioNode[]} filters Packed filters array\n     * @example\n     * const lowpass = wavesurfer.backend.ac.createBiquadFilter();\n     * wavesurfer.backend.setFilter(lowpass);\n     */\n    setFilters(filters) {\n        // Remove existing filters\n        this.disconnectFilters();\n\n        // Insert filters if filter array not empty\n        if (filters && filters.length) {\n            this.filters = filters;\n\n            // Disconnect direct path before inserting filters\n            this.analyser.disconnect();\n\n            // Connect each filter in turn\n            filters\n                .reduce((prev, curr) => {\n                    prev.connect(curr);\n                    return curr;\n                }, this.analyser)\n                .connect(this.gainNode);\n        }\n    }\n\n    /** @private */\n    createScriptNode() {\n        if (this.ac.createScriptProcessor) {\n            this.scriptNode = this.ac.createScriptProcessor(\n                WebAudio.scriptBufferSize\n            );\n        } else {\n            this.scriptNode = this.ac.createJavaScriptNode(\n                WebAudio.scriptBufferSize\n            );\n        }\n\n        this.scriptNode.connect(this.ac.destination);\n    }\n\n    /** @private */\n    addOnAudioProcess() {\n        this.scriptNode.onaudioprocess = () => {\n            const time = this.getCurrentTime();\n\n            if (time >= this.getDuration()) {\n                this.setState(FINISHED);\n                this.fireEvent('pause');\n            } else if (time >= this.scheduledPause) {\n                this.pause();\n            } else if (this.state === this.states[PLAYING]) {\n                this.fireEvent('audioprocess', time);\n            }\n        };\n    }\n\n    /** @private */\n    removeOnAudioProcess() {\n        this.scriptNode.onaudioprocess = null;\n    }\n\n    /** @private */\n    createAnalyserNode() {\n        this.analyser = this.ac.createAnalyser();\n        this.analyser.connect(this.gainNode);\n    }\n\n    /**\n     * Create the gain node needed to control the playback volume.\n     *\n     * @private\n     */\n    createVolumeNode() {\n        // Create gain node using the AudioContext\n        if (this.ac.createGain) {\n            this.gainNode = this.ac.createGain();\n        } else {\n            this.gainNode = this.ac.createGainNode();\n        }\n        // Add the gain node to the graph\n        this.gainNode.connect(this.ac.destination);\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.gainNode.gain.value = value;\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.gainNode.gain.value;\n    }\n\n    /** @private */\n    decodeArrayBuffer(arraybuffer, callback, errback) {\n        if (!this.offlineAc) {\n            this.offlineAc = this.getOfflineAudioContext(\n                this.ac ? this.ac.sampleRate : 44100\n            );\n        }\n        this.offlineAc.decodeAudioData(\n            arraybuffer,\n            data => callback(data),\n            errback\n        );\n    }\n\n    /**\n     * Set pre-decoded peaks\n     *\n     * @param {number[]|number[][]} peaks\n     * @param {?number} duration\n     */\n    setPeaks(peaks, duration) {\n        this.explicitDuration = duration;\n        this.peaks = peaks;\n    }\n\n    /**\n     * Set the rendered length (different from the length of the audio).\n     *\n     * @param {number} length\n     */\n    setLength(length) {\n        // No resize, we can preserve the cached peaks.\n        if (this.mergedPeaks && length == 2 * this.mergedPeaks.length - 1 + 2) {\n            return;\n        }\n\n        this.splitPeaks = [];\n        this.mergedPeaks = [];\n        // Set the last element of the sparse array so the peak arrays are\n        // appropriately sized for other calculations.\n        const channels = this.buffer ? this.buffer.numberOfChannels : 1;\n        let c;\n        for (c = 0; c < channels; c++) {\n            this.splitPeaks[c] = [];\n            this.splitPeaks[c][2 * (length - 1)] = 0;\n            this.splitPeaks[c][2 * (length - 1) + 1] = 0;\n        }\n        this.mergedPeaks[2 * (length - 1)] = 0;\n        this.mergedPeaks[2 * (length - 1) + 1] = 0;\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of arrays of\n     * peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.peaks) {\n            return this.peaks;\n        }\n\n        first = first || 0;\n        last = last || length - 1;\n\n        this.setLength(length);\n\n        /**\n         * The following snippet fixes a buffering data issue on the Safari\n         * browser which returned undefined It creates the missing buffer based\n         * on 1 channel, 4096 samples and the sampleRate from the current\n         * webaudio context 4096 samples seemed to be the best fit for rendering\n         * will review this code once a stable version of Safari TP is out\n         */\n        if (!this.buffer.length) {\n            const newBuffer = this.createBuffer(1, 4096, this.sampleRate);\n            this.buffer = newBuffer.buffer;\n        }\n\n        const sampleSize = this.buffer.length / length;\n        const sampleStep = ~~(sampleSize / 10) || 1;\n        const channels = this.buffer.numberOfChannels;\n        let c;\n\n        for (c = 0; c < channels; c++) {\n            const peaks = this.splitPeaks[c];\n            const chan = this.buffer.getChannelData(c);\n            let i;\n\n            for (i = first; i <= last; i++) {\n                const start = ~~(i * sampleSize);\n                const end = ~~(start + sampleSize);\n                let min = 0;\n                let max = 0;\n                let j;\n\n                for (j = start; j < end; j += sampleStep) {\n                    const value = chan[j];\n\n                    if (value > max) {\n                        max = value;\n                    }\n\n                    if (value < min) {\n                        min = value;\n                    }\n                }\n\n                peaks[2 * i] = max;\n                peaks[2 * i + 1] = min;\n\n                if (c == 0 || max > this.mergedPeaks[2 * i]) {\n                    this.mergedPeaks[2 * i] = max;\n                }\n\n                if (c == 0 || min < this.mergedPeaks[2 * i + 1]) {\n                    this.mergedPeaks[2 * i + 1] = min;\n                }\n            }\n        }\n\n        return this.params.splitChannels ? this.splitPeaks : this.mergedPeaks;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return this.state.getPlayedPercents.call(this);\n    }\n\n    /** @private */\n    disconnectSource() {\n        if (this.source) {\n            this.source.disconnect();\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        if (!this.isPaused()) {\n            this.pause();\n        }\n        this.unAll();\n        this.buffer = null;\n        this.disconnectFilters();\n        this.disconnectSource();\n        this.gainNode.disconnect();\n        this.scriptNode.disconnect();\n        this.analyser.disconnect();\n\n        // close the audioContext if closeAudioContext option is set to true\n        if (this.params.closeAudioContext) {\n            // check if browser supports AudioContext.close()\n            if (\n                typeof this.ac.close === 'function' &&\n                this.ac.state != 'closed'\n            ) {\n                this.ac.close();\n            }\n            // clear the reference to the audiocontext\n            this.ac = null;\n            // clear the actual audiocontext, either passed as param or the\n            // global singleton\n            if (!this.params.audioContext) {\n                window.WaveSurferAudioContext = null;\n            } else {\n                this.params.audioContext = null;\n            }\n            // clear the offlineAudioContext\n            window.WaveSurferOfflineAudioContext = null;\n        }\n    }\n\n    /**\n     * Loaded a decoded audio buffer\n     *\n     * @param {Object} buffer\n     */\n    load(buffer) {\n        this.startPosition = 0;\n        this.lastPlay = this.ac.currentTime;\n        this.buffer = buffer;\n        this.createSource();\n    }\n\n    /** @private */\n    createSource() {\n        this.disconnectSource();\n        this.source = this.ac.createBufferSource();\n\n        //adjust for old browsers.\n        this.source.start = this.source.start || this.source.noteGrainOn;\n        this.source.stop = this.source.stop || this.source.noteOff;\n\n        this.source.playbackRate.value = this.playbackRate;\n        this.source.buffer = this.buffer;\n        this.source.connect(this.analyser);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return this.state !== this.states[PLAYING];\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        if (!this.buffer) {\n            if (this.explicitDuration) {\n                return this.explicitDuration;\n            }\n            return 0;\n        }\n        return this.buffer.duration;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     * @param {number} end Position to end at in seconds\n     * @return {{start: number, end: number}}\n     */\n    seekTo(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        this.scheduledPause = null;\n\n        if (start == null) {\n            start = this.getCurrentTime();\n            if (start >= this.getDuration()) {\n                start = 0;\n            }\n        }\n        if (end == null) {\n            end = this.getDuration();\n        }\n\n        this.startPosition = start;\n        this.lastPlay = this.ac.currentTime;\n\n        if (this.state === this.states[FINISHED]) {\n            this.setState(PAUSED);\n        }\n\n        return {\n            start: start,\n            end: end\n        };\n    }\n\n    /**\n     * Get the playback position in seconds\n     *\n     * @return {number}\n     */\n    getPlayedTime() {\n        return (this.ac.currentTime - this.lastPlay) * this.playbackRate;\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     */\n    play(start, end) {\n        if (!this.buffer) {\n            return;\n        }\n\n        // need to re-create source on each playback\n        this.createSource();\n\n        const adjustedTime = this.seekTo(start, end);\n\n        start = adjustedTime.start;\n        end = adjustedTime.end;\n\n        this.scheduledPause = end;\n\n        this.source.start(0, start, end - start);\n\n        if (this.ac.state == 'suspended') {\n            this.ac.resume && this.ac.resume();\n        }\n\n        this.setState(PLAYING);\n\n        this.fireEvent('play');\n    }\n\n    /**\n     * Pauses the loaded audio.\n     */\n    pause() {\n        this.scheduledPause = null;\n\n        this.startPosition += this.getPlayedTime();\n        this.source && this.source.stop(0);\n\n        this.setState(PAUSED);\n\n        this.fireEvent('pause');\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audioclip's\n     * duration.\n     *\n     * @return {number}\n     */\n    getCurrentTime() {\n        return this.state.getCurrentTime.call(this);\n    }\n\n    /**\n     * Returns the current playback rate. (0=no playback, 1=normal playback)\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        value = value || 1;\n        if (this.isPaused()) {\n            this.playbackRate = value;\n        } else {\n            this.pause();\n            this.playbackRate = value;\n            this.play();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/webaudio.js","import * as util from './util';\nimport MultiCanvas from './drawer.multicanvas';\nimport WebAudio from './webaudio';\nimport MediaElement from './mediaelement';\nimport PeakCache from './peakcache';\n\n/*\n * This work is licensed under a BSD-3-Clause License.\n */\n\n/** @external {HTMLElement} https://developer.mozilla.org/en/docs/Web/API/HTMLElement */\n/** @external {OfflineAudioContext} https://developer.mozilla.org/en-US/docs/Web/API/OfflineAudioContext */\n/** @external {File} https://developer.mozilla.org/en-US/docs/Web/API/File */\n/** @external {Blob} https://developer.mozilla.org/en-US/docs/Web/API/Blob */\n/** @external {CanvasRenderingContext2D} https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D */\n/** @external {MediaStreamConstraints} https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamConstraints */\n/** @external {AudioNode} https://developer.mozilla.org/de/docs/Web/API/AudioNode */\n\n/**\n * @typedef {Object} WavesurferParams\n * @property {AudioContext} audioContext=null Use your own previously\n * initialized AudioContext or leave blank.\n * @property {number} audioRate=1 Speed at which to play audio. Lower number is\n * slower.\n * @property {boolean} autoCenter=true If a scrollbar is present, center the\n * waveform around the progress\n * @property {string} backend='WebAudio' `'WebAudio'|'MediaElement'` In most cases\n * you don't have to set this manually. MediaElement is a fallback for\n * unsupported browsers.\n * @property {number} barHeight=1 The height of the wave\n * @property {boolean} closeAudioContext=false Close and nullify all audio\n * contexts when the destroy method is called.\n * @property {!string|HTMLElement} container CSS selector or HTML element where\n * the waveform should be drawn. This is the only required parameter.\n * @property {string} cursorColor='#333' The fill color of the cursor indicating\n * the playhead position.\n * @property {number} cursorWidth=1 Measured in pixels.\n * @property {boolean} fillParent=true Whether to fill the entire container or\n * draw only according to `minPxPerSec`.\n * @property {boolean} forceDecode=false Force decoding of audio using web audio\n * when zooming to get a more detailed waveform.\n * @property {number} height=128 The height of the waveform. Measured in\n * pixels.\n * @property {boolean} hideScrollbar=false Whether to hide the horizontal\n * scrollbar when one would normally be shown.\n * @property {boolean} interact=true Whether the mouse interaction will be\n * enabled at initialization. You can switch this parameter at any time later\n * on.\n * @property {boolean} loopSelection=true (Use with regions plugin) Enable\n * looping of selected regions\n * @property {number} maxCanvasWidth=4000 Maximum width of a single canvas in\n * pixels, excluding a small overlap (2 * `pixelRatio`, rounded up to the next\n * even integer). If the waveform is longer than this value, additional canvases\n * will be used to render the waveform, which is useful for very large waveforms\n * that may be too wide for browsers to draw on a single canvas.\n * @property {boolean} mediaControls=false (Use with backend `MediaElement`)\n * this enables the native controls for the media element\n * @property {string} mediaType='audio' (Use with backend `MediaElement`)\n * `'audio'|'video'`\n * @property {number} minPxPerSec=20 Minimum number of pixels per second of\n * audio.\n * @property {boolean} normalize=false If true, normalize by the maximum peak\n * instead of 1.0.\n * @property {boolean} partialRender=false Use the PeakCache to improve\n * rendering speed of large waveforms\n * @property {number} pixelRatio=window.devicePixelRatio The pixel ratio used to\n * calculate display\n * @property {PluginDefinition[]} plugins=[] An array of plugin definitions to\n * register during instantiation, they will be directly initialised unless they\n * are added with the `deferInit` property set to true.\n * @property {string} progressColor='#555' The fill color of the part of the\n * waveform behind the cursor.\n * @property {boolean} removeMediaElementOnDestroy=true Set to false to keep the\n * media element in the DOM when the player is destroyed. This is useful when\n * reusing an existing media element via the `loadMediaElement` method.\n * @property {Object} renderer=MultiCanvas Can be used to inject a custom\n * renderer.\n * @property {boolean|number} responsive=false If set to `true` resize the\n * waveform, when the window is resized. This is debounced with a `100ms`\n * timeout by default. If this parameter is a number it represents that timeout.\n * @property {boolean} scrollParent=false Whether to scroll the container with a\n * lengthy waveform. Otherwise the waveform is shrunk to the container width\n * (see fillParent).\n * @property {number} skipLength=2 Number of seconds to skip with the\n * skipForward() and skipBackward() methods.\n * @property {boolean} splitChannels=false Render with seperate waveforms for\n * the channels of the audio\n * @property {string} waveColor='#999' The fill color of the waveform after the\n * cursor.\n */\n\n/**\n * @typedef {Object} PluginDefinition\n * @desc The Object used to describe a plugin\n * @example wavesurfer.addPlugin(pluginDefinition);\n * @property {string} name The name of the plugin, the plugin instance will be\n * added as a property to the wavesurfer instance under this name\n * @property {?Object} staticProps The properties that should be added to the\n * wavesurfer instance as static properties\n * @property {?boolean} deferInit Don't initialise plugin\n * automatically\n * @property {Object} params={} The plugin parameters, they are the first parameter\n * passed to the plugin class constructor function\n * @property {PluginClass} instance The plugin instance factory, is called with\n * the dependency specified in extends. Returns the plugin class.\n */\n\n/**\n * @interface PluginClass\n *\n * @desc This is the interface which is implemented by all plugin classes. Note\n * that this only turns into an observer after being passed through\n * `wavesurfer.addPlugin`.\n *\n * @extends {Observer}\n */\nclass PluginClass {\n    /**\n     * Plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {Object} params={} The plugin params (specific to the plugin)\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    create(params) {}\n    /**\n     * Construct the plugin\n     *\n     * @param {Object} ws The wavesurfer instance\n     * @param {Object} params={} The plugin params (specific to the plugin)\n     */\n    constructor(ws, params) {}\n    /**\n     * Initialise the plugin\n     *\n     * Start doing something. This is called by\n     * `wavesurfer.initPlugin(pluginName)`\n     */\n    init() {}\n    /**\n     * Destroy the plugin instance\n     *\n     * Stop doing something. This is called by\n     * `wavesurfer.destroyPlugin(pluginName)`\n     */\n    destroy() {}\n}\n\n/**\n * WaveSurfer core library class\n *\n * @extends {Observer}\n * @example\n * const params = {\n *   container: '#waveform',\n *   waveColor: 'violet',\n *   progressColor: 'purple'\n * };\n *\n * // initialise like this\n * const wavesurfer = WaveSurfer.create(params);\n *\n * // or like this ...\n * const wavesurfer = new WaveSurfer(params);\n * wavesurfer.init();\n *\n * // load audio file\n * wavesurfer.load('example/media/demo.wav');\n */\nexport default class WaveSurfer extends util.Observer {\n    /** @private */\n    defaultParams = {\n        audioContext: null,\n        audioRate: 1,\n        autoCenter: true,\n        backend: 'WebAudio',\n        barHeight: 1,\n        container: null,\n        cursorColor: '#333',\n        cursorWidth: 1,\n        dragSelection: true,\n        fillParent: true,\n        forceDecode: false,\n        height: 128,\n        hideScrollbar: false,\n        interact: true,\n        loopSelection: true,\n        maxCanvasWidth: 4000,\n        mediaContainer: null,\n        mediaControls: false,\n        mediaType: 'audio',\n        minPxPerSec: 20,\n        normalize: false,\n        partialRender: false,\n        pixelRatio:\n            window.devicePixelRatio || screen.deviceXDPI / screen.logicalXDPI,\n        plugins: [],\n        progressColor: '#555',\n        removeMediaElementOnDestroy: true,\n        renderer: MultiCanvas,\n        responsive: false,\n        scrollParent: false,\n        skipLength: 2,\n        splitChannels: false,\n        waveColor: '#999'\n    };\n\n    /** @private */\n    backends = {\n        MediaElement,\n        WebAudio\n    };\n\n    /**\n     * Instantiate this class, call its `init` function and returns it\n     *\n     * @param {WavesurferParams} params\n     * @return {Object} WaveSurfer instance\n     * @example const wavesurfer = WaveSurfer.create(params);\n     */\n    static create(params) {\n        const wavesurfer = new WaveSurfer(params);\n        return wavesurfer.init();\n    }\n\n    /**\n     * Functions in the `util` property are available as a prototype property to\n     * all instances\n     *\n     * @type {Object}\n     * @example\n     * const wavesurfer = WaveSurfer.create(params);\n     * wavesurfer.util.style(myElement, { background: 'blue' });\n     */\n    util = util;\n\n    /**\n     * Functions in the `util` property are available as a static property of the\n     * WaveSurfer class\n     *\n     * @type {Object}\n     * @example\n     * WaveSurfer.util.style(myElement, { background: 'blue' });\n     */\n    static util = util;\n\n    /**\n     * Initialise wavesurfer instance\n     *\n     * @param {WavesurferParams} params Instantiation options for wavesurfer\n     * @example\n     * const wavesurfer = new WaveSurfer(params);\n     * @returns {this}\n     */\n    constructor(params) {\n        super();\n        /**\n         * Extract relevant parameters (or defaults)\n         * @private\n         */\n        this.params = util.extend({}, this.defaultParams, params);\n\n        /** @private */\n        this.container =\n            'string' == typeof params.container\n                ? document.querySelector(this.params.container)\n                : this.params.container;\n\n        if (!this.container) {\n            throw new Error('Container element not found');\n        }\n\n        if (this.params.mediaContainer == null) {\n            /** @private */\n            this.mediaContainer = this.container;\n        } else if (typeof this.params.mediaContainer == 'string') {\n            /** @private */\n            this.mediaContainer = document.querySelector(\n                this.params.mediaContainer\n            );\n        } else {\n            /** @private */\n            this.mediaContainer = this.params.mediaContainer;\n        }\n\n        if (!this.mediaContainer) {\n            throw new Error('Media Container element not found');\n        }\n\n        if (this.params.maxCanvasWidth <= 1) {\n            throw new Error('maxCanvasWidth must be greater than 1');\n        } else if (this.params.maxCanvasWidth % 2 == 1) {\n            throw new Error('maxCanvasWidth must be an even number');\n        }\n\n        /**\n         * @private Used to save the current volume when muting so we can\n         * restore once unmuted\n         * @type {number}\n         */\n        this.savedVolume = 0;\n\n        /**\n         * @private The current muted state\n         * @type {boolean}\n         */\n        this.isMuted = false;\n\n        /**\n         * @private Will hold a list of event descriptors that need to be\n         * cancelled on subsequent loads of audio\n         * @type {Object[]}\n         */\n        this.tmpEvents = [];\n\n        /**\n         * @private Holds any running audio downloads\n         * @type {Observer}\n         */\n        this.currentAjax = null;\n        /** @private */\n        this.arraybuffer = null;\n        /** @private */\n        this.drawer = null;\n        /** @private */\n        this.backend = null;\n        /** @private */\n        this.peakCache = null;\n\n        // cache constructor objects\n        if (typeof this.params.renderer !== 'function') {\n            throw new Error('Renderer parameter is invalid');\n        }\n        /**\n         * @private The uninitialised Drawer class\n         */\n        this.Drawer = this.params.renderer;\n        /**\n         * @private The uninitialised Backend class\n         */\n        this.Backend = this.backends[this.params.backend];\n\n        /**\n         * @private map of plugin names that are currently initialised\n         */\n        this.initialisedPluginList = {};\n        /** @private */\n        this.isDestroyed = false;\n        /** @private */\n        this.isReady = false;\n\n        // responsive debounced event listener. If this.params.responsive is not\n        // set, this is never called. Use 100ms or this.params.responsive as\n        // timeout for the debounce function.\n        let prevWidth = 0;\n        this._onResize = util.debounce(() => {\n            if (\n                prevWidth != this.drawer.wrapper.clientWidth &&\n                !this.params.scrollParent\n            ) {\n                prevWidth = this.drawer.wrapper.clientWidth;\n                this.drawer.fireEvent('redraw');\n            }\n        }, typeof this.params.responsive === 'number' ? this.params.responsive : 100);\n\n        return this;\n    }\n\n    /**\n     * Initialise the wave\n     *\n     * @example\n     * var wavesurfer = new WaveSurfer(params);\n     * wavesurfer.init();\n     * @return {this}\n     */\n    init() {\n        this.registerPlugins(this.params.plugins);\n        this.createDrawer();\n        this.createBackend();\n        this.createPeakCache();\n        return this;\n    }\n\n    /**\n     * Add and initialise array of plugins (if `plugin.deferInit` is falsey),\n     * this function is called in the init function of wavesurfer\n     *\n     * @param {PluginDefinition[]} plugins An array of plugin definitions\n     * @emits {WaveSurfer#plugins-registered} Called with the array of plugin definitions\n     * @return {this}\n     */\n    registerPlugins(plugins) {\n        // first instantiate all the plugins\n        plugins.forEach(plugin => this.addPlugin(plugin));\n\n        // now run the init functions\n        plugins.forEach(plugin => {\n            // call init function of the plugin if deferInit is falsey\n            // in that case you would manually use initPlugins()\n            if (!plugin.deferInit) {\n                this.initPlugin(plugin.name);\n            }\n        });\n        this.fireEvent('plugins-registered', plugins);\n        return this;\n    }\n\n    /**\n     * Add a plugin object to wavesurfer\n     *\n     * @param {PluginDefinition} plugin A plugin definition\n     * @emits {WaveSurfer#plugin-added} Called with the name of the plugin that was added\n     * @example wavesurfer.addPlugin(WaveSurfer.minimap());\n     * @return {this}\n     */\n    addPlugin(plugin) {\n        if (!plugin.name) {\n            throw new Error('Plugin does not have a name!');\n        }\n        if (!plugin.instance) {\n            throw new Error(\n                `Plugin ${plugin.name} does not have an instance property!`\n            );\n        }\n\n        // staticProps properties are applied to wavesurfer instance\n        if (plugin.staticProps) {\n            Object.keys(plugin.staticProps).forEach(pluginStaticProp => {\n                /**\n                 * Properties defined in a plugin definition's `staticProps` property are added as\n                 * staticProps properties of the WaveSurfer instance\n                 */\n                this[pluginStaticProp] = plugin.staticProps[pluginStaticProp];\n            });\n        }\n\n        const Instance = plugin.instance;\n\n        // turn the plugin instance into an observer\n        const observerPrototypeKeys = Object.getOwnPropertyNames(\n            util.Observer.prototype\n        );\n        observerPrototypeKeys.forEach(key => {\n            Instance.prototype[key] = util.Observer.prototype[key];\n        });\n\n        /**\n         * Instantiated plugin classes are added as a property of the wavesurfer\n         * instance\n         * @type {Object}\n         */\n        this[plugin.name] = new Instance(plugin.params || {}, this);\n        this.fireEvent('plugin-added', plugin.name);\n        return this;\n    }\n\n    /**\n     * Initialise a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-initialised\n     * @example wavesurfer.initPlugin('minimap');\n     * @return {this}\n     */\n    initPlugin(name) {\n        if (!this[name]) {\n            throw new Error(`Plugin ${name} has not been added yet!`);\n        }\n        if (this.initialisedPluginList[name]) {\n            // destroy any already initialised plugins\n            this.destroyPlugin(name);\n        }\n        this[name].init();\n        this.initialisedPluginList[name] = true;\n        this.fireEvent('plugin-initialised', name);\n        return this;\n    }\n\n    /**\n     * Destroy a plugin\n     *\n     * @param {string} name A plugin name\n     * @emits WaveSurfer#plugin-destroyed\n     * @example wavesurfer.destroyPlugin('minimap');\n     * @returns {this}\n     */\n    destroyPlugin(name) {\n        if (!this[name]) {\n            throw new Error(\n                `Plugin ${name} has not been added yet and cannot be destroyed!`\n            );\n        }\n        if (!this.initialisedPluginList[name]) {\n            throw new Error(\n                `Plugin ${name} is not active and cannot be destroyed!`\n            );\n        }\n        if (typeof this[name].destroy !== 'function') {\n            throw new Error(`Plugin ${name} does not have a destroy function!`);\n        }\n\n        this[name].destroy();\n        delete this.initialisedPluginList[name];\n        this.fireEvent('plugin-destroyed', name);\n        return this;\n    }\n\n    /**\n     * Destroy all initialised plugins. Convenience function to use when\n     * wavesurfer is removed\n     *\n     * @private\n     */\n    destroyAllPlugins() {\n        Object.keys(this.initialisedPluginList).forEach(name =>\n            this.destroyPlugin(name)\n        );\n    }\n\n    /**\n     * Create the drawer and draw the waveform\n     *\n     * @private\n     * @emits WaveSurfer#drawer-created\n     */\n    createDrawer() {\n        this.drawer = new this.Drawer(this.container, this.params);\n        this.drawer.init();\n        this.fireEvent('drawer-created', this.drawer);\n\n        if (this.params.responsive !== false) {\n            window.addEventListener('resize', this._onResize, true);\n            window.addEventListener('orientationchange', this._onResize, true);\n        }\n\n        this.drawer.on('redraw', () => {\n            this.drawBuffer();\n            this.drawer.progress(this.backend.getPlayedPercents());\n        });\n\n        // Click-to-seek\n        this.drawer.on('click', (e, progress) => {\n            setTimeout(() => this.seekTo(progress), 0);\n        });\n\n        // Relay the scroll event from the drawer\n        this.drawer.on('scroll', e => {\n            if (this.params.partialRender) {\n                this.drawBuffer();\n            }\n            this.fireEvent('scroll', e);\n        });\n    }\n\n    /**\n     * Create the backend\n     *\n     * @private\n     * @emits WaveSurfer#backend-created\n     */\n    createBackend() {\n        if (this.backend) {\n            this.backend.destroy();\n        }\n\n        // Back compat\n        if (this.params.backend == 'AudioElement') {\n            this.params.backend = 'MediaElement';\n        }\n\n        if (\n            this.params.backend == 'WebAudio' &&\n            !this.Backend.prototype.supportsWebAudio.call(null)\n        ) {\n            this.params.backend = 'MediaElement';\n        }\n\n        this.backend = new this.Backend(this.params);\n        this.backend.init();\n        this.fireEvent('backend-created', this.backend);\n\n        this.backend.on('finish', () => this.fireEvent('finish'));\n        this.backend.on('play', () => this.fireEvent('play'));\n        this.backend.on('pause', () => this.fireEvent('pause'));\n\n        this.backend.on('audioprocess', time => {\n            this.drawer.progress(this.backend.getPlayedPercents());\n            this.fireEvent('audioprocess', time);\n        });\n    }\n\n    /**\n     * Create the peak cache\n     *\n     * @private\n     */\n    createPeakCache() {\n        if (this.params.partialRender) {\n            this.peakCache = new PeakCache();\n        }\n    }\n\n    /**\n     * Get the duration of the audio clip\n     *\n     * @example const duration = wavesurfer.getDuration();\n     * @return {number} Duration in seconds\n     */\n    getDuration() {\n        return this.backend.getDuration();\n    }\n\n    /**\n     * Get the current playback position\n     *\n     * @example const currentTime = wavesurfer.getCurrentTime();\n     * @return {number} Playback position in seconds\n     */\n    getCurrentTime() {\n        return this.backend.getCurrentTime();\n    }\n\n    /**\n     * Set the current play time in seconds.\n     *\n     * @param {number} seconds A positive number in seconds. E.g. 10 means 10\n     * seconds, 60 means 1 minute\n     */\n    setCurrentTime(seconds) {\n        if (this.getDuration() >= seconds) {\n            this.seekTo(1);\n        } else {\n            this.seekTo(seconds / this.getDuration());\n        }\n    }\n\n    /**\n     * Starts playback from the current position. Optional start and end\n     * measured in seconds can be used to set the range of audio to play.\n     *\n     * @param {?number} start Position to start at\n     * @param {?number} end Position to end at\n     * @emits WaveSurfer#interaction\n     * @example\n     * // play from second 1 to 5\n     * wavesurfer.play(1, 5);\n     */\n    play(start, end) {\n        this.fireEvent('interaction', () => this.play(start, end));\n        this.backend.play(start, end);\n    }\n\n    /**\n     * Stops playback\n     *\n     * @example wavesurfer.pause();\n     */\n    pause() {\n        this.backend.isPaused() || this.backend.pause();\n    }\n\n    /**\n     * Toggle playback\n     *\n     * @example wavesurfer.playPause();\n     */\n    playPause() {\n        this.backend.isPaused() ? this.play() : this.pause();\n    }\n\n    /**\n     * Get the current playback state\n     *\n     * @example const isPlaying = wavesurfer.isPlaying();\n     * @return {boolean} False if paused, true if playing\n     */\n    isPlaying() {\n        return !this.backend.isPaused();\n    }\n\n    /**\n     * Skip backward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipBackward();\n     */\n    skipBackward(seconds) {\n        this.skip(-seconds || -this.params.skipLength);\n    }\n\n    /**\n     * Skip forward\n     *\n     * @param {?number} seconds Amount to skip back, if not specified `skipLength`\n     * is used\n     * @example wavesurfer.skipForward();\n     */\n    skipForward(seconds) {\n        this.skip(seconds || this.params.skipLength);\n    }\n\n    /**\n     * Skip a number of seconds from the current position (use a negative value\n     * to go backwards).\n     *\n     * @param {number} offset Amount to skip back or forwards\n     * @example\n     * // go back 2 seconds\n     * wavesurfer.skip(-2);\n     */\n    skip(offset) {\n        const duration = this.getDuration() || 1;\n        let position = this.getCurrentTime() || 0;\n        position = Math.max(0, Math.min(duration, position + (offset || 0)));\n        this.seekAndCenter(position / duration);\n    }\n\n    /**\n     * Seeks to a position and centers the view\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @example\n     * // seek and go to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekAndCenter(progress) {\n        this.seekTo(progress);\n        this.drawer.recenter(progress);\n    }\n\n    /**\n     * Seeks to a position\n     *\n     * @param {number} progress Between 0 (=beginning) and 1 (=end)\n     * @emits WaveSurfer#interaction\n     * @emits WaveSurfer#seek\n     * @example\n     * // seek to the middle of the audio\n     * wavesurfer.seekTo(0.5);\n     */\n    seekTo(progress) {\n        // return an error if progress is not a number between 0 and 1\n        if (\n            typeof progress !== 'number' ||\n            !isFinite(progress) ||\n            progress < 0 ||\n            progress > 1\n        ) {\n            return console.error(\n                'Error calling wavesurfer.seekTo, parameter must be a number between 0 and 1!'\n            );\n        }\n        this.fireEvent('interaction', () => this.seekTo(progress));\n\n        const paused = this.backend.isPaused();\n        // avoid draw wrong position while playing backward seeking\n        if (!paused) {\n            this.backend.pause();\n        }\n        // avoid small scrolls while paused seeking\n        const oldScrollParent = this.params.scrollParent;\n        this.params.scrollParent = false;\n        this.backend.seekTo(progress * this.getDuration());\n        this.drawer.progress(progress);\n\n        if (!paused) {\n            this.backend.play();\n        }\n        this.params.scrollParent = oldScrollParent;\n        this.fireEvent('seek', progress);\n    }\n\n    /**\n     * Stops and goes to the beginning.\n     *\n     * @example wavesurfer.stop();\n     */\n    stop() {\n        this.pause();\n        this.seekTo(0);\n        this.drawer.progress(0);\n    }\n\n    /**\n     * Set the playback volume.\n     *\n     * @param {number} newVolume A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    setVolume(newVolume) {\n        this.backend.setVolume(newVolume);\n    }\n\n    /**\n     * Get the playback volume.\n     *\n     * @return {number} A value between 0 and 1, 0 being no\n     * volume and 1 being full volume.\n     */\n    getVolume() {\n        return this.backend.getVolume();\n    }\n\n    /**\n     * Set the playback rate.\n     *\n     * @param {number} rate A positive number. E.g. 0.5 means half the normal\n     * speed, 2 means double speed and so on.\n     * @example wavesurfer.setPlaybackRate(2);\n     */\n    setPlaybackRate(rate) {\n        this.backend.setPlaybackRate(rate);\n    }\n\n    /**\n     * Get the playback rate.\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.backend.getPlaybackRate();\n    }\n\n    /**\n     * Toggle the volume on and off. It not currenly muted it will save the\n     * current volume value and turn the volume off. If currently muted then it\n     * will restore the volume to the saved value, and then rest the saved\n     * value.\n     *\n     * @example wavesurfer.toggleMute();\n     */\n    toggleMute() {\n        this.setMute(!this.isMuted);\n    }\n\n    /**\n     * Enable or disable muted audio\n     *\n     * @param {boolean} mute\n     * @example\n     * // unmute\n     * wavesurfer.setMute(false);\n     */\n    setMute(mute) {\n        // ignore all muting requests if the audio is already in that state\n        if (mute === this.isMuted) {\n            return;\n        }\n\n        if (mute) {\n            // If currently not muted then save current volume,\n            // turn off the volume and update the mute properties\n            this.savedVolume = this.backend.getVolume();\n            this.backend.setVolume(0);\n            this.isMuted = true;\n        } else {\n            // If currently muted then restore to the saved volume\n            // and update the mute properties\n            this.backend.setVolume(this.savedVolume);\n            this.isMuted = false;\n        }\n    }\n\n    /**\n     * Get the current mute status.\n     *\n     * @example const isMuted = wavesurfer.getMute();\n     * @return {boolean}\n     */\n    getMute() {\n        return this.isMuted;\n    }\n\n    /**\n     * Get the list of current set filters as an array.\n     *\n     * Filters must be set with setFilters method first\n     *\n     * @return {array}\n     */\n    getFilters() {\n        return this.backend.filters || [];\n    }\n\n    /**\n     * Toggles `scrollParent` and redraws\n     *\n     * @example wavesurfer.toggleScroll();\n     */\n    toggleScroll() {\n        this.params.scrollParent = !this.params.scrollParent;\n        this.drawBuffer();\n    }\n\n    /**\n     * Toggle mouse interaction\n     *\n     * @example wavesurfer.toggleInteraction();\n     */\n    toggleInteraction() {\n        this.params.interact = !this.params.interact;\n    }\n\n    /**\n     * Get the fill color of the waveform after the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getWaveColor() {\n        return this.params.waveColor;\n    }\n\n    /**\n     * Set the fill color of the waveform after the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setWaveColor('#ddd');\n     */\n    setWaveColor(color) {\n        this.params.waveColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the waveform behind the cursor.\n     *\n     * @return {string} A CSS color string.\n     */\n    getProgressColor() {\n        return this.params.progressColor;\n    }\n\n    /**\n     * Set the fill color of the waveform behind the cursor.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setProgressColor('#400');\n     */\n    setProgressColor(color) {\n        this.params.progressColor = color;\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @return {string} A CSS color string.\n     */\n    getCursorColor() {\n        return this.params.cursorColor;\n    }\n\n    /**\n     * Set the fill color of the cursor indicating the playhead\n     * position.\n     *\n     * @param {string} color A CSS color string.\n     * @example wavesurfer.setCursorColor('#222');\n     */\n    setCursorColor(color) {\n        this.params.cursorColor = color;\n        this.drawer.updateCursor();\n    }\n\n    /**\n     * Get the height of the waveform.\n     *\n     * @return {number} Height measured in pixels.\n     */\n    getHeight() {\n        return this.params.height;\n    }\n\n    /**\n     * Set the height of the waveform.\n     *\n     * @param {number} height Height measured in pixels.\n     * @example wavesurfer.setHeight(200);\n     */\n    setHeight(height) {\n        this.params.height = height;\n        this.drawer.setHeight(height * this.params.pixelRatio);\n        this.drawBuffer();\n    }\n\n    /**\n     * Get the correct peaks for current wave viewport and render wave\n     *\n     * @private\n     * @emits WaveSurfer#redraw\n     */\n    drawBuffer() {\n        const nominalWidth = Math.round(\n            this.getDuration() *\n                this.params.minPxPerSec *\n                this.params.pixelRatio\n        );\n        const parentWidth = this.drawer.getWidth();\n        let width = nominalWidth;\n        let start = this.drawer.getScrollX();\n        let end = Math.max(start + parentWidth, width);\n        // Fill container\n        if (\n            this.params.fillParent &&\n            (!this.params.scrollParent || nominalWidth < parentWidth)\n        ) {\n            width = parentWidth;\n            start = 0;\n            end = width;\n        }\n\n        let peaks;\n        if (this.params.partialRender) {\n            const newRanges = this.peakCache.addRangeToPeakCache(\n                width,\n                start,\n                end\n            );\n            let i;\n            for (i = 0; i < newRanges.length; i++) {\n                peaks = this.backend.getPeaks(\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n                this.drawer.drawPeaks(\n                    peaks,\n                    width,\n                    newRanges[i][0],\n                    newRanges[i][1]\n                );\n            }\n        } else {\n            peaks = this.backend.getPeaks(width, start, end);\n            this.drawer.drawPeaks(peaks, width, start, end);\n        }\n        this.fireEvent('redraw', peaks, width);\n    }\n\n    /**\n     * Horizontally zooms the waveform in and out. It also changes the parameter\n     * `minPxPerSec` and enables the `scrollParent` option. Calling the function\n     * with a falsey parameter will reset the zoom state.\n     *\n     * @param {?number} pxPerSec Number of horizontal pixels per second of\n     * audio, if none is set the waveform returns to unzoomed state\n     * @emits WaveSurfer#zoom\n     * @example wavesurfer.zoom(20);\n     */\n    zoom(pxPerSec) {\n        if (!pxPerSec) {\n            this.params.minPxPerSec = this.defaultParams.minPxPerSec;\n            this.params.scrollParent = false;\n        } else {\n            this.params.minPxPerSec = pxPerSec;\n            this.params.scrollParent = true;\n        }\n\n        this.drawBuffer();\n        this.drawer.progress(this.backend.getPlayedPercents());\n\n        this.drawer.recenter(this.getCurrentTime() / this.getDuration());\n        this.fireEvent('zoom', pxPerSec);\n    }\n\n    /**\n     * Decode buffer and load\n     *\n     * @private\n     * @param {ArrayBuffer} arraybuffer\n     */\n    loadArrayBuffer(arraybuffer) {\n        this.decodeArrayBuffer(arraybuffer, data => {\n            if (!this.isDestroyed) {\n                this.loadDecodedBuffer(data);\n            }\n        });\n    }\n\n    /**\n     * Directly load an externally decoded AudioBuffer\n     *\n     * @private\n     * @param {AudioBuffer} buffer\n     * @emits WaveSurfer#ready\n     */\n    loadDecodedBuffer(buffer) {\n        this.backend.load(buffer);\n        this.drawBuffer();\n        this.fireEvent('ready');\n        this.isReady = true;\n    }\n\n    /**\n     * Loads audio data from a Blob or File object\n     *\n     * @param {Blob|File} blob Audio data\n     * @example\n     */\n    loadBlob(blob) {\n        // Create file reader\n        const reader = new FileReader();\n        reader.addEventListener('progress', e => this.onProgress(e));\n        reader.addEventListener('load', e =>\n            this.loadArrayBuffer(e.target.result)\n        );\n        reader.addEventListener('error', () =>\n            this.fireEvent('error', 'Error reading file')\n        );\n        reader.readAsArrayBuffer(blob);\n        this.empty();\n    }\n\n    /**\n     * Loads audio and re-renders the waveform.\n     *\n     * @param {string|HTMLMediaElement} url The url of the audio file or the\n     * audio element with the audio\n     * @param {?number[]|number[][]} peaks Wavesurfer does not have to decode\n     * the audio to render the waveform if this is specified\n     * @param {?string} preload (Use with backend `MediaElement`)\n     * `'none'|'metadata'|'auto'` Preload attribute for the media element\n     * @param {?number} duration The duration of the audio. This is used to\n     * render the peaks data in the correct size for the audio duration (as\n     * befits the current minPxPerSec and zoom value) without having to decode\n     * the audio.\n     * @example\n     * // using ajax or media element to load (depending on backend)\n     * wavesurfer.load('http://example.com/demo.wav');\n     *\n     * // setting preload attribute with media element backend and supplying\n     * peaks wavesurfer.load(\n     *   'http://example.com/demo.wav',\n     *   [0.0218, 0.0183, 0.0165, 0.0198, 0.2137, 0.2888],\n     *   true,\n     * );\n     */\n    load(url, peaks, preload, duration) {\n        this.empty();\n        this.isMuted = false;\n\n        if (preload) {\n            // check whether the preload attribute will be usable and if not log\n            // a warning listing the reasons why not and nullify the variable\n            const preloadIgnoreReasons = {\n                \"Preload is not 'auto', 'none' or 'metadata'\":\n                    ['auto', 'metadata', 'none'].indexOf(preload) === -1,\n                'Peaks are not provided': !peaks,\n                'Backend is not of type MediaElement':\n                    this.params.backend !== 'MediaElement',\n                'Url is not of type string': typeof url !== 'string'\n            };\n            const activeReasons = Object.keys(preloadIgnoreReasons).filter(\n                reason => preloadIgnoreReasons[reason]\n            );\n            if (activeReasons.length) {\n                console.warn(\n                    'Preload parameter of wavesurfer.load will be ignored because:\\n\\t- ' +\n                        activeReasons.join('\\n\\t- ')\n                );\n                // stop invalid values from being used\n                preload = null;\n            }\n        }\n\n        switch (this.params.backend) {\n            case 'WebAudio':\n                return this.loadBuffer(url, peaks, duration);\n            case 'MediaElement':\n                return this.loadMediaElement(url, peaks, preload, duration);\n        }\n    }\n\n    /**\n     * Loads audio using Web Audio buffer backend.\n     *\n     * @private\n     * @param {string} url\n     * @param {?number[]|number[][]} peaks\n     * @param {?number} duration\n     */\n    loadBuffer(url, peaks, duration) {\n        const load = action => {\n            if (action) {\n                this.tmpEvents.push(this.once('ready', action));\n            }\n            return this.getArrayBuffer(url, data => this.loadArrayBuffer(data));\n        };\n\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n            this.drawBuffer();\n            this.tmpEvents.push(this.once('interaction', load));\n        } else {\n            return load();\n        }\n    }\n\n    /**\n     * Either create a media element, or load an existing media element.\n     *\n     * @private\n     * @param {string|HTMLMediaElement} urlOrElt Either a path to a media file, or an\n     * existing HTML5 Audio/Video Element\n     * @param {number[]|number[][]} peaks Array of peaks. Required to bypass web audio\n     * dependency\n     * @param {?boolean} preload Set to true if the preload attribute of the\n     * audio element should be enabled\n     * @param {?number} duration\n     */\n    loadMediaElement(urlOrElt, peaks, preload, duration) {\n        let url = urlOrElt;\n\n        if (typeof urlOrElt === 'string') {\n            this.backend.load(url, this.mediaContainer, peaks, preload);\n        } else {\n            const elt = urlOrElt;\n            this.backend.loadElt(elt, peaks);\n\n            // If peaks are not provided,\n            // url = element.src so we can get peaks with web audio\n            url = elt.src;\n        }\n\n        this.tmpEvents.push(\n            this.backend.once('canplay', () => {\n                this.drawBuffer();\n                this.fireEvent('ready');\n                this.isReady = true;\n            }),\n            this.backend.once('error', err => this.fireEvent('error', err))\n        );\n\n        // If no pre-decoded peaks provided or pre-decoded peaks are\n        // provided with forceDecode flag, attempt to download the\n        // audio file and decode it with Web Audio.\n        if (peaks) {\n            this.backend.setPeaks(peaks, duration);\n        }\n\n        if (\n            (!peaks || this.params.forceDecode) &&\n            this.backend.supportsWebAudio()\n        ) {\n            this.getArrayBuffer(url, arraybuffer => {\n                this.decodeArrayBuffer(arraybuffer, buffer => {\n                    this.backend.buffer = buffer;\n                    this.backend.setPeaks(null);\n                    this.drawBuffer();\n                    this.fireEvent('waveform-ready');\n                });\n            });\n        }\n    }\n\n    /**\n     * Decode an array buffer and pass data to a callback\n     *\n     * @private\n     * @param {Object} arraybuffer\n     * @param {function} callback\n     */\n    decodeArrayBuffer(arraybuffer, callback) {\n        this.arraybuffer = arraybuffer;\n\n        this.backend.decodeArrayBuffer(\n            arraybuffer,\n            data => {\n                // Only use the decoded data if we haven't been destroyed or\n                // another decode started in the meantime\n                if (!this.isDestroyed && this.arraybuffer == arraybuffer) {\n                    callback(data);\n                    this.arraybuffer = null;\n                }\n            },\n            () => this.fireEvent('error', 'Error decoding audiobuffer')\n        );\n    }\n\n    /**\n     * Load an array buffer by ajax and pass to a callback\n     *\n     * @param {string} url\n     * @param {function} callback\n     * @private\n     */\n    getArrayBuffer(url, callback) {\n        const ajax = util.ajax({\n            url: url,\n            responseType: 'arraybuffer'\n        });\n\n        this.currentAjax = ajax;\n\n        this.tmpEvents.push(\n            ajax.on('progress', e => {\n                this.onProgress(e);\n            }),\n            ajax.on('success', (data, e) => {\n                callback(data);\n                this.currentAjax = null;\n            }),\n            ajax.on('error', e => {\n                this.fireEvent('error', 'XHR error: ' + e.target.statusText);\n                this.currentAjax = null;\n            })\n        );\n\n        return ajax;\n    }\n\n    /**\n     * Called while the audio file is loading\n     *\n     * @private\n     * @param {Event} e\n     * @emits WaveSurfer#loading\n     */\n    onProgress(e) {\n        let percentComplete;\n        if (e.lengthComputable) {\n            percentComplete = e.loaded / e.total;\n        } else {\n            // Approximate progress with an asymptotic\n            // function, and assume downloads in the 1-3 MB range.\n            percentComplete = e.loaded / (e.loaded + 1000000);\n        }\n        this.fireEvent('loading', Math.round(percentComplete * 100), e.target);\n    }\n\n    /**\n     * Exports PCM data into a JSON array and opens in a new window.\n     *\n     * @param {number} length=1024 The scale in which to export the peaks. (Integer)\n     * @param {number} accuracy=10000 (Integer)\n     * @param {?boolean} noWindow Set to true to disable opening a new\n     * window with the JSON\n     * @param {number} start\n     * @todo Update exportPCM to work with new getPeaks signature\n     * @return {JSON} JSON of peaks\n     */\n    exportPCM(length, accuracy, noWindow, start) {\n        length = length || 1024;\n        start = start || 0;\n        accuracy = accuracy || 10000;\n        noWindow = noWindow || false;\n        const peaks = this.backend.getPeaks(length, start);\n        const arr = [].map.call(\n            peaks,\n            val => Math.round(val * accuracy) / accuracy\n        );\n        const json = JSON.stringify(arr);\n        if (!noWindow) {\n            window.open(\n                'data:application/json;charset=utf-8,' +\n                    encodeURIComponent(json)\n            );\n        }\n        return json;\n    }\n\n    /**\n     * Save waveform image as data URI.\n     *\n     * The default format is `image/png`. Other supported types are\n     * `image/jpeg` and `image/webp`.\n     *\n     * @param {string} format='image/png'\n     * @param {number} quality=1\n     * @return {string} data URI of image\n     */\n    exportImage(format, quality) {\n        if (!format) {\n            format = 'image/png';\n        }\n        if (!quality) {\n            quality = 1;\n        }\n\n        return this.drawer.getImage(format, quality);\n    }\n\n    /**\n     * Cancel any ajax request currently in progress\n     */\n    cancelAjax() {\n        if (this.currentAjax) {\n            this.currentAjax.xhr.abort();\n            this.currentAjax = null;\n        }\n    }\n\n    /**\n     * @private\n     */\n    clearTmpEvents() {\n        this.tmpEvents.forEach(e => e.un());\n    }\n\n    /**\n     * Display empty waveform.\n     */\n    empty() {\n        if (!this.backend.isPaused()) {\n            this.stop();\n            this.backend.disconnectSource();\n        }\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.drawer.progress(0);\n        this.drawer.setWidth(0);\n        this.drawer.drawPeaks({ length: this.drawer.getWidth() }, 0);\n    }\n\n    /**\n     * Remove events, elements and disconnect WebAudio nodes.\n     *\n     * @emits WaveSurfer#destroy\n     */\n    destroy() {\n        this.destroyAllPlugins();\n        this.fireEvent('destroy');\n        this.cancelAjax();\n        this.clearTmpEvents();\n        this.unAll();\n        if (this.params.responsive !== false) {\n            window.removeEventListener('resize', this._onResize, true);\n            window.removeEventListener(\n                'orientationchange',\n                this._onResize,\n                true\n            );\n        }\n        this.backend.destroy();\n        this.drawer.destroy();\n        this.isDestroyed = true;\n        this.arraybuffer = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/wavesurfer.js","import Observer from './observer';\n\n/**\n * Perform an ajax request\n *\n * @param {Options} options Description\n *\n * @returns {Object} Observer instance\n */\nexport default function ajax(options) {\n    const instance = new Observer();\n    const xhr = new XMLHttpRequest();\n    let fired100 = false;\n    xhr.open(options.method || 'GET', options.url, true);\n    xhr.responseType = options.responseType || 'json';\n    xhr.addEventListener('progress', e => {\n        instance.fireEvent('progress', e);\n        if (e.lengthComputable && e.loaded == e.total) {\n            fired100 = true;\n        }\n    });\n    xhr.addEventListener('load', e => {\n        if (!fired100) {\n            instance.fireEvent('progress', e);\n        }\n        instance.fireEvent('load', e);\n        if (200 == xhr.status || 206 == xhr.status) {\n            instance.fireEvent('success', xhr.response, e);\n        } else {\n            instance.fireEvent('error', e);\n        }\n    });\n    xhr.addEventListener('error', e => instance.fireEvent('error', e));\n    xhr.send();\n    instance.xhr = xhr;\n    return instance;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/ajax.js","/**\n * Get a random prefixed ID\n *\n * @returns {String} Random ID\n */\nexport default function getId() {\n    return (\n        'wavesurfer_' +\n        Math.random()\n            .toString(32)\n            .substring(2)\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/get-id.js","/**\n * Get the largest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number} Largest number found\n */\nexport default function max(values) {\n    let largest = -Infinity;\n    Object.keys(values).forEach(i => {\n        if (values[i] > largest) {\n            largest = values[i];\n        }\n    });\n    return largest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/max.js","/**\n * Get the smallest value\n *\n * @param   {Array} values Array of numbers\n * @returns {Number}       Smallest number found\n */\nexport default function min(values) {\n    let smallest = Number(Infinity);\n    Object.keys(values).forEach(i => {\n        if (values[i] < smallest) {\n            smallest = values[i];\n        }\n    });\n    return smallest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/min.js","/**\n * Extend an object shallowly with others\n *\n * @param {Object} dest The target object\n * @param {Object[]} sources The objects to use for extending\n *\n * @return {Object} Merged object\n */\nexport default function extend(dest, ...sources) {\n    sources.forEach(source => {\n        Object.keys(source).forEach(key => {\n            dest[key] = source[key];\n        });\n    });\n    return dest;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/extend.js","/**\n * Apply a map of styles to an element\n *\n * @param {HTMLElement} el The element that the styles will be applied to\n * @param {Object} styles The map of propName: attribute, both are used as-is\n *\n * @return {HTMLElement} el\n */\nexport default function style(el, styles) {\n    Object.keys(styles).forEach(prop => {\n        if (el.style[prop] !== styles[prop]) {\n            el.style[prop] = styles[prop];\n        }\n    });\n    return el;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/style.js","import reqAnimationFrame from './request-animation-frame';\n\n/**\n * Create a function which will be called at the next requestAnimationFrame\n * cycle\n *\n * @param {function} func The function to call\n *\n * @return {func} The function wrapped within a requestAnimationFrame\n */\nexport default function frame(func) {\n    return (...args) => reqAnimationFrame(() => func(...args));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/frame.js","/**\n * Returns a function, that, as long as it continues to be invoked, will not\n * be triggered. The function will be called after it stops being called for\n * N milliseconds. If `immediate` is passed, trigger the function on the\n * leading edge, instead of the trailing. The function also has a property 'clear' \n * that is a function which will clear the timer to prevent previously scheduled executions. \n *\n * @source underscore.js\n * @see http://unscriptable.com/2009/03/20/debouncing-javascript-methods/\n * @param {Function} function to wrap\n * @param {Number} timeout in ms (`100`)\n * @param {Boolean} whether to execute at the beginning (`false`)\n * @api public\n */\n\nmodule.exports = function debounce(func, wait, immediate){\n  var timeout, args, context, timestamp, result;\n  if (null == wait) wait = 100;\n\n  function later() {\n    var last = Date.now() - timestamp;\n\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      if (!immediate) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n    }\n  };\n\n  var debounced = function(){\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    var callNow = immediate && !timeout;\n    if (!timeout) timeout = setTimeout(later, wait);\n    if (callNow) {\n      result = func.apply(context, args);\n      context = args = null;\n    }\n\n    return result;\n  };\n\n  debounced.clear = function() {\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n  \n  debounced.flush = function() {\n    if (timeout) {\n      result = func.apply(context, args);\n      context = args = null;\n      \n      clearTimeout(timeout);\n      timeout = null;\n    }\n  };\n\n  return debounced;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/debounce/index.js\n// module id = 12\n// module chunks = 0","import Drawer from './drawer';\nimport * as util from './util';\n\n/**\n * @typedef {Object} CanvasEntry\n * @private\n * @property {HTMLElement} wave The wave node\n * @property {CanvasRenderingContext2D} waveCtx The canvas rendering context\n * @property {?HTMLElement} progress The progress wave node\n * @property {?CanvasRenderingContext2D} progressCtx The progress wave canvas\n * rendering context\n * @property {?number} start Start of the area the canvas should render, between 0 and 1\n * @property {?number} end End of the area the canvas should render, between 0 and 1\n */\n\n/**\n * MultiCanvas renderer for wavesurfer. Is currently the default and sole built\n * in renderer.\n */\nexport default class MultiCanvas extends Drawer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super(container, params);\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCanvasWidth = params.maxCanvasWidth;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxCanvasElementWidth = Math.round(\n            params.maxCanvasWidth / params.pixelRatio\n        );\n\n        /**\n         * Whether or not the progress wave is renderered. If the `waveColor`\n         * and `progressColor` are the same colour it is not.\n         * @type {boolean}\n         */\n        this.hasProgressCanvas = params.waveColor != params.progressColor;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.halfPixel = 0.5 / params.pixelRatio;\n        /**\n         * @private\n         * @type {Array}\n         */\n        this.canvases = [];\n        /** @private */\n        this.progressWave = null;\n    }\n\n    /**\n     * Initialise the drawer\n     */\n    init() {\n        this.createWrapper();\n        this.createElements();\n    }\n\n    /**\n     * Create the canvas elements and style them\n     *\n     * @private\n     */\n    createElements() {\n        this.progressWave = this.wrapper.appendChild(\n            this.style(document.createElement('wave'), {\n                position: 'absolute',\n                zIndex: 3,\n                left: 0,\n                top: 0,\n                bottom: 0,\n                overflow: 'hidden',\n                width: '0',\n                display: 'none',\n                boxSizing: 'border-box',\n                borderRightStyle: 'solid',\n                pointerEvents: 'none'\n            })\n        );\n\n        this.addCanvas();\n        this.updateCursor();\n    }\n\n    /**\n     * Update cursor style from params.\n     */\n    updateCursor() {\n        this.style(this.progressWave, {\n            borderRightWidth: this.params.cursorWidth + 'px',\n            borderRightColor: this.params.cursorColor\n        });\n    }\n\n    /**\n     * Adjust to the updated size by adding or removing canvases\n     */\n    updateSize() {\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n        const requiredCanvases = Math.ceil(\n            totalWidth / this.maxCanvasElementWidth\n        );\n\n        while (this.canvases.length < requiredCanvases) {\n            this.addCanvas();\n        }\n\n        while (this.canvases.length > requiredCanvases) {\n            this.removeCanvas();\n        }\n\n        this.canvases.forEach((entry, i) => {\n            // Add some overlap to prevent vertical white stripes, keep the width even for simplicity.\n            let canvasWidth =\n                this.maxCanvasWidth + 2 * Math.ceil(this.params.pixelRatio / 2);\n\n            if (i == this.canvases.length - 1) {\n                canvasWidth =\n                    this.width -\n                    this.maxCanvasWidth * (this.canvases.length - 1);\n            }\n\n            this.updateDimensions(entry, canvasWidth, this.height);\n            this.clearWaveForEntry(entry);\n        });\n    }\n\n    /**\n     * Add a canvas to the canvas list\n     *\n     * @private\n     */\n    addCanvas() {\n        const entry = {};\n        const leftOffset = this.maxCanvasElementWidth * this.canvases.length;\n\n        entry.wave = this.wrapper.appendChild(\n            this.style(document.createElement('canvas'), {\n                position: 'absolute',\n                zIndex: 2,\n                left: leftOffset + 'px',\n                top: 0,\n                bottom: 0,\n                height: '100%',\n                pointerEvents: 'none'\n            })\n        );\n        entry.waveCtx = entry.wave.getContext('2d');\n\n        if (this.hasProgressCanvas) {\n            entry.progress = this.progressWave.appendChild(\n                this.style(document.createElement('canvas'), {\n                    position: 'absolute',\n                    left: leftOffset + 'px',\n                    top: 0,\n                    bottom: 0,\n                    height: '100%'\n                })\n            );\n            entry.progressCtx = entry.progress.getContext('2d');\n        }\n\n        this.canvases.push(entry);\n    }\n\n    /**\n     * Pop one canvas from the list\n     *\n     * @private\n     */\n    removeCanvas() {\n        const lastEntry = this.canvases.pop();\n        lastEntry.wave.parentElement.removeChild(lastEntry.wave);\n        if (this.hasProgressCanvas) {\n            lastEntry.progress.parentElement.removeChild(lastEntry.progress);\n        }\n    }\n\n    /**\n     * Update the dimensions of a canvas element\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {number} width The new width of the element\n     * @param {number} height The new height of the element\n     */\n    updateDimensions(entry, width, height) {\n        const elementWidth = Math.round(width / this.params.pixelRatio);\n        const totalWidth = Math.round(this.width / this.params.pixelRatio);\n\n        // Where the canvas starts and ends in the waveform, represented as a decimal between 0 and 1.\n        entry.start = entry.waveCtx.canvas.offsetLeft / totalWidth || 0;\n        entry.end = entry.start + elementWidth / totalWidth;\n\n        entry.waveCtx.canvas.width = width;\n        entry.waveCtx.canvas.height = height;\n        this.style(entry.waveCtx.canvas, { width: elementWidth + 'px' });\n\n        this.style(this.progressWave, { display: 'block' });\n\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.canvas.width = width;\n            entry.progressCtx.canvas.height = height;\n            this.style(entry.progressCtx.canvas, {\n                width: elementWidth + 'px'\n            });\n        }\n    }\n\n    /**\n     * Clear the whole waveform\n     */\n    clearWave() {\n        this.canvases.forEach(entry => this.clearWaveForEntry(entry));\n    }\n\n    /**\n     * Clear one canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    clearWaveForEntry(entry) {\n        entry.waveCtx.clearRect(\n            0,\n            0,\n            entry.waveCtx.canvas.width,\n            entry.waveCtx.canvas.height\n        );\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.clearRect(\n                0,\n                0,\n                entry.progressCtx.canvas.width,\n                entry.progressCtx.canvas.height\n            );\n        }\n    }\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0. Must be an integer.\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                // if drawBars was called within ws.empty we don't pass a start and\n                // don't want anything to happen\n                if (start === undefined) {\n                    return;\n                }\n                // Skip every other value if there are negatives.\n                const peakIndexScale = hasMinVals ? 2 : 1;\n                const length = peaks.length / peakIndexScale;\n                const bar = this.params.barWidth * this.params.pixelRatio;\n                const gap = Math.max(this.params.pixelRatio, ~~(bar / 2));\n                const step = bar + gap;\n\n                const scale = length / this.width;\n                const first = start;\n                const last = end;\n                let i;\n\n                for (i = first; i < last; i += step) {\n                    const peak =\n                        peaks[Math.floor(i * scale * peakIndexScale)] || 0;\n                    const h = Math.round(peak / absmax * halfH);\n                    this.fillRect(\n                        i + this.halfPixel,\n                        halfH - h + offsetY,\n                        bar + this.halfPixel,\n                        h * 2\n                    );\n                }\n            }\n        );\n    }\n\n    /**\n     * Draw a waveform\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {\n        return this.prepareDraw(\n            peaks,\n            channelIndex,\n            start,\n            end,\n            ({ absmax, hasMinVals, height, offsetY, halfH, peaks }) => {\n                if (!hasMinVals) {\n                    const reflectedPeaks = [];\n                    const len = peaks.length;\n                    let i;\n                    for (i = 0; i < len; i++) {\n                        reflectedPeaks[2 * i] = peaks[i];\n                        reflectedPeaks[2 * i + 1] = -peaks[i];\n                    }\n                    peaks = reflectedPeaks;\n                }\n\n                // if drawWave was called within ws.empty we don't pass a start and\n                // end and simply want a flat line\n                if (start !== undefined) {\n                    this.drawLine(peaks, absmax, halfH, offsetY, start, end);\n                }\n\n                // Always draw a median line\n                this.fillRect(\n                    0,\n                    halfH + offsetY - this.halfPixel,\n                    this.width,\n                    this.halfPixel\n                );\n            }\n        );\n    }\n\n    /**\n     * Tell the canvas entries to render their portion of the waveform\n     *\n     * @private\n     * @param {number[]} peaks Peak data\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLine(peaks, absmax, halfH, offsetY, start, end) {\n        this.canvases.forEach(entry => {\n            this.setFillStyles(entry);\n            this.drawLineToContext(\n                entry,\n                entry.waveCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n            this.drawLineToContext(\n                entry,\n                entry.progressCtx,\n                peaks,\n                absmax,\n                halfH,\n                offsetY,\n                start,\n                end\n            );\n        });\n    }\n\n    /**\n     * Render the actual waveform line on a canvas\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     * @param {Canvas2DContextAttributes} ctx Essentially `entry.[wave|progress]Ctx`\n     * @param {number[]} peaks\n     * @param {number} absmax Maximum peak value (absolute)\n     * @param {number} halfH Half the height of the waveform\n     * @param {number} offsetY Offset to the top\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that\n     * should be rendered\n     */\n    drawLineToContext(entry, ctx, peaks, absmax, halfH, offsetY, start, end) {\n        if (!ctx) {\n            return;\n        }\n\n        const length = peaks.length / 2;\n        const scale =\n            this.params.fillParent && this.width != length\n                ? this.width / length\n                : 1;\n\n        const first = Math.round(length * entry.start);\n        // Use one more peak value to make sure we join peaks at ends -- unless,\n        // of course, this is the last canvas.\n        const last = Math.round(length * entry.end) + 1;\n        if (first > end || last < start) {\n            return;\n        }\n        const canvasStart = Math.min(first, start);\n        const canvasEnd = Math.max(last, end);\n        let i;\n        let j;\n\n        ctx.beginPath();\n        ctx.moveTo(\n            (canvasStart - first) * scale + this.halfPixel,\n            halfH + offsetY\n        );\n\n        for (i = canvasStart; i < canvasEnd; i++) {\n            const peak = peaks[2 * i] || 0;\n            const h = Math.round(peak / absmax * halfH);\n            ctx.lineTo(\n                (i - first) * scale + this.halfPixel,\n                halfH - h + offsetY\n            );\n        }\n\n        // Draw the bottom edge going backwards, to make a single\n        // closed hull to fill.\n        for (j = canvasEnd - 1; j >= canvasStart; j--) {\n            const peak = peaks[2 * j + 1] || 0;\n            const h = Math.round(peak / absmax * halfH);\n            ctx.lineTo(\n                (j - first) * scale + this.halfPixel,\n                halfH - h + offsetY\n            );\n        }\n\n        ctx.closePath();\n        ctx.fill();\n    }\n\n    /**\n     * Draw a rectangle on the waveform\n     *\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRect(x, y, width, height) {\n        const startCanvas = Math.floor(x / this.maxCanvasWidth);\n        const endCanvas = Math.min(\n            Math.ceil((x + width) / this.maxCanvasWidth) + 1,\n            this.canvases.length\n        );\n        let i;\n        for (i = startCanvas; i < endCanvas; i++) {\n            const entry = this.canvases[i];\n            const leftOffset = i * this.maxCanvasWidth;\n\n            const intersection = {\n                x1: Math.max(x, i * this.maxCanvasWidth),\n                y1: y,\n                x2: Math.min(\n                    x + width,\n                    i * this.maxCanvasWidth + entry.waveCtx.canvas.width\n                ),\n                y2: y + height\n            };\n\n            if (intersection.x1 < intersection.x2) {\n                this.setFillStyles(entry);\n\n                this.fillRectToContext(\n                    entry.waveCtx,\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1\n                );\n\n                this.fillRectToContext(\n                    entry.progressCtx,\n                    intersection.x1 - leftOffset,\n                    intersection.y1,\n                    intersection.x2 - intersection.x1,\n                    intersection.y2 - intersection.y1\n                );\n            }\n        }\n    }\n\n    /**\n     * Performs preparation tasks and calculations which are shared by drawBars and drawWave\n     *\n     * @private\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number?} start The x-offset of the beginning of the area that\n     * should be rendered (If this isn't set only a flat line is rendered)\n     * @param {number?} end The x-offset of the end of the area that should be\n     * rendered\n     * @param {function} fn The render function to call\n     */\n    prepareDraw(peaks, channelIndex, start, end, fn) {\n        return util.frame(() => {\n            // Split channels and call this function with the channelIndex set\n            if (peaks[0] instanceof Array) {\n                const channels = peaks;\n                if (this.params.splitChannels) {\n                    this.setHeight(\n                        channels.length *\n                            this.params.height *\n                            this.params.pixelRatio\n                    );\n                    return channels.forEach((channelPeaks, i) =>\n                        this.prepareDraw(channelPeaks, i, start, end, fn)\n                    );\n                }\n                peaks = channels[0];\n            }\n            // calculate maximum modulation value, either from the barHeight\n            // parameter or if normalize=true from the largest value in the peak\n            // set\n            let absmax = 1 / this.params.barHeight;\n            if (this.params.normalize) {\n                const max = util.max(peaks);\n                const min = util.min(peaks);\n                absmax = -min > max ? -min : max;\n            }\n\n            // Bar wave draws the bottom only as a reflection of the top,\n            // so we don't need negative values\n            const hasMinVals = [].some.call(peaks, val => val < 0);\n            const height = this.params.height * this.params.pixelRatio;\n            const offsetY = height * channelIndex || 0;\n            const halfH = height / 2;\n\n            return fn({\n                absmax: absmax,\n                hasMinVals: hasMinVals,\n                height: height,\n                offsetY: offsetY,\n                halfH: halfH,\n                peaks: peaks\n            });\n        })();\n    }\n\n    /**\n     * Draw the actual rectangle on a canvas\n     *\n     * @private\n     * @param {Canvas2DContextAttributes} ctx\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     */\n    fillRectToContext(ctx, x, y, width, height) {\n        if (!ctx) {\n            return;\n        }\n        ctx.fillRect(x, y, width, height);\n    }\n\n    /**\n     * Set the fill styles for a certain entry (wave and progress)\n     *\n     * @private\n     * @param {CanvasEntry} entry\n     */\n    setFillStyles(entry) {\n        entry.waveCtx.fillStyle = this.params.waveColor;\n        if (this.hasProgressCanvas) {\n            entry.progressCtx.fillStyle = this.params.progressColor;\n        }\n    }\n\n    /**\n     * Return image data of the waveform\n     *\n     * @param {string} type='image/png' An optional value of a format type.\n     * @param {number} quality=0.92 An optional value between 0 and 1.\n     * @return {string|string[]} images A data URL or an array of data URLs\n     */\n    getImage(type, quality) {\n        const images = this.canvases.map(entry =>\n            entry.wave.toDataURL(type, quality)\n        );\n        return images.length > 1 ? images : images[0];\n    }\n\n    /**\n     * Render the new progress\n     *\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {\n        this.style(this.progressWave, { width: position + 'px' });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer.multicanvas.js","import * as util from './util';\n/**\n * Parent class for renderers\n *\n * @extends {Observer}\n */\nexport default class Drawer extends util.Observer {\n    /**\n     * @param {HTMLElement} container The container node of the wavesurfer instance\n     * @param {WavesurferParams} params The wavesurfer initialisation options\n     */\n    constructor(container, params) {\n        super();\n        /** @private */\n        this.container = container;\n        /**\n         * @type {WavesurferParams}\n         * @private\n         */\n        this.params = params;\n        /**\n         * The width of the renderer\n         * @type {number}\n         */\n        this.width = 0;\n        /**\n         * The height of the renderer\n         * @type {number}\n         */\n        this.height = params.height * this.params.pixelRatio;\n        /** @private */\n        this.lastPos = 0;\n        /**\n         * The `<wave>` element which is added to the container\n         * @type {HTMLElement}\n         */\n        this.wrapper = null;\n    }\n\n    /**\n     * Alias of `util.style`\n     *\n     * @param {HTMLElement} el The element that the styles will be applied to\n     * @param {Object} styles The map of propName: attribute, both are used as-is\n     * @return {HTMLElement} el\n     */\n    style(el, styles) {\n        return util.style(el, styles);\n    }\n\n    /**\n     * Create the wrapper `<wave>` element, style it and set up the events for\n     * interaction\n     */\n    createWrapper() {\n        this.wrapper = this.container.appendChild(\n            document.createElement('wave')\n        );\n\n        this.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: this.params.height + 'px'\n        });\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: '100%',\n                overflowX: this.params.hideScrollbar ? 'hidden' : 'auto',\n                overflowY: 'hidden'\n            });\n        }\n\n        this.setupWrapperEvents();\n    }\n\n    /**\n     * Handle click event\n     *\n     * @param {Event} e Click event\n     * @param {?boolean} noPrevent Set to true to not call `e.preventDefault()`\n     * @return {number} Playback position from 0 to 1\n     */\n    handleEvent(e, noPrevent) {\n        !noPrevent && e.preventDefault();\n\n        const clientX = e.targetTouches\n            ? e.targetTouches[0].clientX\n            : e.clientX;\n        const bbox = this.wrapper.getBoundingClientRect();\n\n        const nominalWidth = this.width;\n        const parentWidth = this.getWidth();\n\n        let progress;\n\n        if (!this.params.fillParent && nominalWidth < parentWidth) {\n            progress =\n                (clientX - bbox.left) * this.params.pixelRatio / nominalWidth ||\n                0;\n\n            if (progress > 1) {\n                progress = 1;\n            }\n        } else {\n            progress =\n                (clientX - bbox.left + this.wrapper.scrollLeft) /\n                    this.wrapper.scrollWidth || 0;\n        }\n\n        return progress;\n    }\n\n    /**\n     * @private\n     */\n    setupWrapperEvents() {\n        this.wrapper.addEventListener('click', e => {\n            const scrollbarHeight =\n                this.wrapper.offsetHeight - this.wrapper.clientHeight;\n            if (scrollbarHeight != 0) {\n                // scrollbar is visible.  Check if click was on it\n                const bbox = this.wrapper.getBoundingClientRect();\n                if (e.clientY >= bbox.bottom - scrollbarHeight) {\n                    // ignore mousedown as it was on the scrollbar\n                    return;\n                }\n            }\n\n            if (this.params.interact) {\n                this.fireEvent('click', e, this.handleEvent(e));\n            }\n        });\n\n        this.wrapper.addEventListener('scroll', e =>\n            this.fireEvent('scroll', e)\n        );\n    }\n\n    /**\n     * Draw peaks on the canvas\n     *\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} length The width of the area that should be drawn\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawPeaks(peaks, length, start, end) {\n        if (!this.setWidth(length)) {\n            this.clearWave();\n        }\n\n        this.params.barWidth\n            ? this.drawBars(peaks, 0, start, end)\n            : this.drawWave(peaks, 0, start, end);\n    }\n\n    /**\n     * Scroll to the beginning\n     */\n    resetScroll() {\n        if (this.wrapper !== null) {\n            this.wrapper.scrollLeft = 0;\n        }\n    }\n\n    /**\n     * Recenter the viewport at a certain percent of the waveform\n     *\n     * @param {number} percent Value from 0 to 1 on the waveform\n     */\n    recenter(percent) {\n        const position = this.wrapper.scrollWidth * percent;\n        this.recenterOnPosition(position, true);\n    }\n\n    /**\n     * Recenter the viewport on a position, either scroll there immediately or\n     * in steps of 5 pixels\n     *\n     * @param {number} position X-offset in pixels\n     * @param {boolean} immediate Set to true to immediately scroll somewhere\n     */\n    recenterOnPosition(position, immediate) {\n        const scrollLeft = this.wrapper.scrollLeft;\n        const half = ~~(this.wrapper.clientWidth / 2);\n        const maxScroll = this.wrapper.scrollWidth - this.wrapper.clientWidth;\n        let target = position - half;\n        let offset = target - scrollLeft;\n\n        if (maxScroll == 0) {\n            // no need to continue if scrollbar is not there\n            return;\n        }\n\n        // if the cursor is currently visible...\n        if (!immediate && -half <= offset && offset < half) {\n            // we'll limit the \"re-center\" rate.\n            const rate = 5;\n            offset = Math.max(-rate, Math.min(rate, offset));\n            target = scrollLeft + offset;\n        }\n\n        // limit target to valid range (0 to maxScroll)\n        target = Math.max(0, Math.min(maxScroll, target));\n        // no use attempting to scroll if we're not moving\n        if (target != scrollLeft) {\n            this.wrapper.scrollLeft = target;\n        }\n    }\n\n    /**\n     * Get the current scroll position in pixels\n     *\n     * @return {number}\n     */\n    getScrollX() {\n        return Math.round(this.wrapper.scrollLeft * this.params.pixelRatio);\n    }\n\n    /**\n     * Get the width of the container\n     *\n     * @return {number}\n     */\n    getWidth() {\n        return Math.round(this.container.clientWidth * this.params.pixelRatio);\n    }\n\n    /**\n     * Set the width of the container\n     *\n     * @param {number} width\n     */\n    setWidth(width) {\n        if (this.width == width) {\n            return false;\n        }\n\n        this.width = width;\n\n        if (this.params.fillParent || this.params.scrollParent) {\n            this.style(this.wrapper, {\n                width: ''\n            });\n        } else {\n            this.style(this.wrapper, {\n                width: ~~(this.width / this.params.pixelRatio) + 'px'\n            });\n        }\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Set the height of the container\n     *\n     * @param {number} height\n     */\n    setHeight(height) {\n        if (height == this.height) {\n            return false;\n        }\n        this.height = height;\n\n        this.style(this.wrapper, {\n            height: ~~(this.height / this.params.pixelRatio) + 'px'\n        });\n\n        this.updateSize();\n        return true;\n    }\n\n    /**\n     * Called by wavesurfer when progress should be renderered\n     *\n     * @param {number} progress From 0 to 1\n     */\n    progress(progress) {\n        const minPxDelta = 1 / this.params.pixelRatio;\n        const pos = Math.round(progress * this.width) * minPxDelta;\n\n        if (pos < this.lastPos || pos - this.lastPos >= minPxDelta) {\n            this.lastPos = pos;\n\n            if (this.params.scrollParent && this.params.autoCenter) {\n                const newPos = ~~(this.wrapper.scrollWidth * progress);\n                this.recenterOnPosition(newPos);\n            }\n\n            this.updateProgress(pos);\n        }\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     */\n    destroy() {\n        this.unAll();\n        if (this.wrapper) {\n            if (this.wrapper.parentNode == this.container) {\n                this.container.removeChild(this.wrapper);\n            }\n            this.wrapper = null;\n        }\n    }\n\n    /* Renderer-specific methods */\n\n    /**\n     * Called after cursor related params have changed.\n     *\n     * @abstract\n     */\n    updateCursor() {}\n\n    /**\n     * Called when the size of the container changes so the renderer can adjust\n     *\n     * @abstract\n     */\n    updateSize() {}\n\n    /**\n     * Draw a waveform with bars\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawBars(peaks, channelIndex, start, end) {}\n\n    /**\n     * Draw a waveform\n     *\n     * @abstract\n     * @param {number[]|number[][]} peaks Can also be an array of arrays for split channel\n     * rendering\n     * @param {number} channelIndex The index of the current channel. Normally\n     * should be 0\n     * @param {number} start The x-offset of the beginning of the area that\n     * should be rendered\n     * @param {number} end The x-offset of the end of the area that should be\n     * rendered\n     */\n    drawWave(peaks, channelIndex, start, end) {}\n\n    /**\n     * Clear the waveform\n     *\n     * @abstract\n     */\n    clearWave() {}\n\n    /**\n     * Render the new progress\n     *\n     * @abstract\n     * @param {number} position X-Offset of progress position in pixels\n     */\n    updateProgress(position) {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/drawer.js","import WebAudio from './webaudio';\nimport * as util from './util';\n\n/**\n * MediaElement backend\n */\nexport default class MediaElement extends WebAudio {\n    /**\n     * Construct the backend\n     *\n     * @param {WavesurferParams} params\n     */\n    constructor(params) {\n        super(params);\n        /** @private */\n        this.params = params;\n\n        // Dummy media to catch errors\n        /** @private */\n        this.media = {\n            currentTime: 0,\n            duration: 0,\n            paused: true,\n            playbackRate: 1,\n            play() {},\n            pause() {}\n        };\n\n        /** @private */\n        this.mediaType = params.mediaType.toLowerCase();\n        /** @private */\n        this.elementPosition = params.elementPosition;\n        /** @private */\n        this.peaks = null;\n        /** @private */\n        this.playbackRate = 1;\n        /** @private */\n        this.buffer = null;\n        /** @private */\n        this.onPlayEnd = null;\n    }\n\n    /**\n     * Initialise the backend, called in `wavesurfer.createBackend()`\n     */\n    init() {\n        this.setPlaybackRate(this.params.audioRate);\n        this.createTimer();\n    }\n\n    /**\n     * Create a timer to provide a more precise `audioprocess` event.\n     *\n     * @private\n     */\n    createTimer() {\n        const onAudioProcess = () => {\n            if (this.isPaused()) {\n                return;\n            }\n            this.fireEvent('audioprocess', this.getCurrentTime());\n\n            // Call again in the next frame\n            const requestAnimationFrame =\n                window.requestAnimationFrame ||\n                window.webkitRequestAnimationFrame;\n            requestAnimationFrame(onAudioProcess);\n        };\n\n        this.on('play', onAudioProcess);\n    }\n\n    /**\n     * Create media element with url as its source,\n     * and append to container element.\n     *\n     * @param {string} url Path to media file\n     * @param {HTMLElement} container HTML element\n     * @param {number[]|number[][]} peaks Array of peak data\n     * @param {string} preload HTML 5 preload attribute value\n     */\n    load(url, container, peaks, preload) {\n        const media = document.createElement(this.mediaType);\n        media.controls = this.params.mediaControls;\n        media.autoplay = this.params.autoplay || false;\n        media.preload = preload == null ? 'auto' : preload;\n        media.src = url;\n        media.style.width = '100%';\n\n        const prevMedia = container.querySelector(this.mediaType);\n        if (prevMedia) {\n            container.removeChild(prevMedia);\n        }\n        container.appendChild(media);\n\n        this._load(media, peaks);\n    }\n\n    /**\n     * Load existing media element.\n     *\n     * @param {HTMLMediaElement} elt HTML5 Audio or Video element\n     * @param {number[]|number[][]} peaks Array of peak data\n     */\n    loadElt(elt, peaks) {\n        elt.controls = this.params.mediaControls;\n        elt.autoplay = this.params.autoplay || false;\n\n        this._load(elt, peaks);\n    }\n\n    /**\n     * Private method called by both load (from url)\n     * and loadElt (existing media element).\n     *\n     * @param {HTMLMediaElement} media HTML5 Audio or Video element\n     * @param {number[]|number[][]} peaks Array of peak data\n     * @private\n     */\n    _load(media, peaks) {\n        // load must be called manually on iOS, otherwise peaks won't draw\n        // until a user interaction triggers load --> 'ready' event\n        if (typeof media.load == 'function') {\n            // Resets the media element and restarts the media resource. Any\n            // pending events are discarded. How much media data is fetched is\n            // still affected by the preload attribute.\n            media.load();\n        }\n\n        media.addEventListener('error', () => {\n            this.fireEvent('error', 'Error loading media element');\n        });\n\n        media.addEventListener('canplay', () => {\n            this.fireEvent('canplay');\n        });\n\n        media.addEventListener('ended', () => {\n            this.fireEvent('finish');\n        });\n\n        // Listen to and relay play and pause events to enable\n        // playback control from the external media element\n        media.addEventListener('play', () => {\n            this.fireEvent('play');\n        });\n\n        media.addEventListener('pause', () => {\n            this.fireEvent('pause');\n        });\n\n        this.media = media;\n        this.peaks = peaks;\n        this.onPlayEnd = null;\n        this.buffer = null;\n        this.setPlaybackRate(this.playbackRate);\n    }\n\n    /**\n     * Used by `wavesurfer.isPlaying()` and `wavesurfer.playPause()`\n     *\n     * @return {boolean}\n     */\n    isPaused() {\n        return !this.media || this.media.paused;\n    }\n\n    /**\n     * Used by `wavesurfer.getDuration()`\n     *\n     * @return {number}\n     */\n    getDuration() {\n        if (this.explicitDuration) {\n            return this.explicitDuration;\n        }\n        let duration = (this.buffer || this.media).duration;\n        if (duration >= Infinity) {\n            // streaming audio\n            duration = this.media.seekable.end(0);\n        }\n        return duration;\n    }\n\n    /**\n     * Returns the current time in seconds relative to the audioclip's\n     * duration.\n     *\n     * @return {number}\n     */\n    getCurrentTime() {\n        return this.media && this.media.currentTime;\n    }\n\n    /**\n     * Get the position from 0 to 1\n     *\n     * @return {number}\n     */\n    getPlayedPercents() {\n        return this.getCurrentTime() / this.getDuration() || 0;\n    }\n\n    /**\n     * Get the audio source playback rate.\n     *\n     * @return {number}\n     */\n    getPlaybackRate() {\n        return this.playbackRate || this.media.playbackRate;\n    }\n\n    /**\n     * Set the audio source playback rate.\n     *\n     * @param {number} value\n     */\n    setPlaybackRate(value) {\n        this.playbackRate = value || 1;\n        this.media.playbackRate = this.playbackRate;\n    }\n\n    /**\n     * Used by `wavesurfer.seekTo()`\n     *\n     * @param {number} start Position to start at in seconds\n     */\n    seekTo(start) {\n        if (start != null) {\n            this.media.currentTime = start;\n        }\n        this.clearPlayEnd();\n    }\n\n    /**\n     * Plays the loaded audio region.\n     *\n     * @param {number} start Start offset in seconds, relative to the beginning\n     * of a clip.\n     * @param {number} end When to stop relative to the beginning of a clip.\n     * @emits MediaElement#play\n     */\n    play(start, end) {\n        this.seekTo(start);\n        this.media.play();\n        end && this.setPlayEnd(end);\n    }\n\n    /**\n     * Pauses the loaded audio.\n     *\n     * @emits MediaElement#pause\n     */\n    pause() {\n        this.media && this.media.pause();\n        this.clearPlayEnd();\n    }\n\n    /** @private */\n    setPlayEnd(end) {\n        this._onPlayEnd = time => {\n            if (time >= end) {\n                this.pause();\n                this.seekTo(end);\n            }\n        };\n        this.on('audioprocess', this._onPlayEnd);\n    }\n\n    /** @private */\n    clearPlayEnd() {\n        if (this._onPlayEnd) {\n            this.un('audioprocess', this._onPlayEnd);\n            this._onPlayEnd = null;\n        }\n    }\n\n    /**\n     * Compute the max and min value of the waveform when broken into\n     * <length> subranges.\n     *\n     * @param {number} length How many subranges to break the waveform into.\n     * @param {number} first First sample in the required range.\n     * @param {number} last Last sample in the required range.\n     * @return {number[]|number[][]} Array of 2*<length> peaks or array of\n     * arrays of peaks consisting of (max, min) values for each subrange.\n     */\n    getPeaks(length, first, last) {\n        if (this.buffer) {\n            return super.getPeaks(length, first, last);\n        }\n        return this.peaks || [];\n    }\n\n    /**\n     * Get the current volume\n     *\n     * @return {number} value A floating point value between 0 and 1.\n     */\n    getVolume() {\n        return this.media.volume;\n    }\n\n    /**\n     * Set the audio volume\n     *\n     * @param {number} value A floating point value between 0 and 1.\n     */\n    setVolume(value) {\n        this.media.volume = value;\n    }\n\n    /**\n     * This is called when wavesurfer is destroyed\n     *\n     */\n    destroy() {\n        this.pause();\n        this.unAll();\n\n        if (\n            this.params.removeMediaElementOnDestroy &&\n            this.media &&\n            this.media.parentNode\n        ) {\n            this.media.parentNode.removeChild(this.media);\n        }\n\n        this.media = null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/mediaelement.js","/**\n * Caches the decoded peaks data to improve rendering speed for lage audio\n *\n * Is used if the option parameter `partialRender` is set to `true`\n */\nexport default class PeakCache {\n    /**\n     * Instantiate cache\n     */\n    constructor() {\n        this.clearPeakCache();\n    }\n\n    /**\n     * Empty the cache\n     */\n    clearPeakCache() {\n        /**\n         * Flat array with entries that are always in pairs to mark the\n         * beginning and end of each subrange.  This is a convenience so we can\n         * iterate over the pairs for easy set difference operations.\n         * @private\n         */\n        this.peakCacheRanges = [];\n        /**\n         * Length of the entire cachable region, used for resetting the cache\n         * when this changes (zoom events, for instance).\n         * @private\n         */\n        this.peakCacheLength = -1;\n    }\n\n    /**\n     * Add a range of peaks to the cache\n     *\n     * @param {number} length The length of the range\n     * @param {number} start The x offset of the start of the range\n     * @param {number} end The x offset of the end of the range\n     * @return {number[][]}\n     */\n    addRangeToPeakCache(length, start, end) {\n        if (length != this.peakCacheLength) {\n            this.clearPeakCache();\n            this.peakCacheLength = length;\n        }\n\n        // Return ranges that weren't in the cache before the call.\n        let uncachedRanges = [];\n        let i = 0;\n        // Skip ranges before the current start.\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] < start\n        ) {\n            i++;\n        }\n        // If |i| is even, |start| falls after an existing range.  Otherwise,\n        // |start| falls between an existing range, and the uncached region\n        // starts when we encounter the next node in |peakCacheRanges| or\n        // |end|, whichever comes first.\n        if (i % 2 == 0) {\n            uncachedRanges.push(start);\n        }\n        while (\n            i < this.peakCacheRanges.length &&\n            this.peakCacheRanges[i] <= end\n        ) {\n            uncachedRanges.push(this.peakCacheRanges[i]);\n            i++;\n        }\n        // If |i| is even, |end| is after all existing ranges.\n        if (i % 2 == 0) {\n            uncachedRanges.push(end);\n        }\n\n        // Filter out the 0-length ranges.\n        uncachedRanges = uncachedRanges.filter((item, pos, arr) => {\n            if (pos == 0) {\n                return item != arr[pos + 1];\n            } else if (pos == arr.length - 1) {\n                return item != arr[pos - 1];\n            }\n            return item != arr[pos - 1] && item != arr[pos + 1];\n        });\n\n        // Merge the two ranges together, uncachedRanges will either contain\n        // wholly new points, or duplicates of points in peakCacheRanges.  If\n        // duplicates are detected, remove both and extend the range.\n        this.peakCacheRanges = this.peakCacheRanges.concat(uncachedRanges);\n        this.peakCacheRanges = this.peakCacheRanges\n            .sort((a, b) => a - b)\n            .filter((item, pos, arr) => {\n                if (pos == 0) {\n                    return item != arr[pos + 1];\n                } else if (pos == arr.length - 1) {\n                    return item != arr[pos - 1];\n                }\n                return item != arr[pos - 1] && item != arr[pos + 1];\n            });\n\n        // Push the uncached ranges into an array of arrays for ease of\n        // iteration in the functions that call this.\n        const uncachedRangePairs = [];\n        for (i = 0; i < uncachedRanges.length; i += 2) {\n            uncachedRangePairs.push([uncachedRanges[i], uncachedRanges[i + 1]]);\n        }\n\n        return uncachedRangePairs;\n    }\n\n    /**\n     * For testing\n     *\n     * @return {number[][]}\n     */\n    getCacheRanges() {\n        const peakCacheRangePairs = [];\n        let i;\n        for (i = 0; i < this.peakCacheRanges.length; i += 2) {\n            peakCacheRangePairs.push([\n                this.peakCacheRanges[i],\n                this.peakCacheRanges[i + 1]\n            ]);\n        }\n        return peakCacheRangePairs;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/peakcache.js"],"sourceRoot":""}