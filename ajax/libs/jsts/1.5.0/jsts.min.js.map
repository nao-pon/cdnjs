{"version":3,"sources":["../src/org/locationtech/jts/util/NumberUtil.js","../src/java/lang/IllegalArgumentException.js","../src/java/lang/Double.js","../src/java/lang/Comparable.js","../src/java/lang/Cloneable.js","../src/java/util/Comparator.js","../src/java/io/Serializable.js","../src/java/lang/RuntimeException.js","../src/org/locationtech/jts/util/AssertionFailedException.js","../src/org/locationtech/jts/util/Assert.js","../src/org/locationtech/jts/geom/Coordinate.js","../src/java/util/Iterator.js","../src/java/util/Collection.js","../src/java/util/IndexOutOfBoundsException.js","../src/java/util/List.js","../src/java/util/NoSuchElementException.js","../src/java/util/OperationNotSupported.js","../src/java/util/ArrayList.js","../src/org/locationtech/jts/geom/CoordinateList.js","../src/org/locationtech/jts/geom/Envelope.js","../src/java/lang/Exception.js","../src/org/locationtech/jts/algorithm/NotRepresentableException.js","../src/java/lang/StringBuffer.js","../src/java/lang/Integer.js","../src/java/lang/Character.js","../src/org/locationtech/jts/math/DD.js","../src/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","../src/org/locationtech/jts/algorithm/Orientation.js","../src/java/lang/System.js","../src/org/locationtech/jts/algorithm/HCoordinate.js","../src/org/locationtech/jts/math/MathUtil.js","../src/org/locationtech/jts/algorithm/Distance.js","../src/org/locationtech/jts/geom/CoordinateSequence.js","../src/org/locationtech/jts/geom/CoordinateSequenceFactory.js","../src/org/locationtech/jts/geom/GeometryComponentFilter.js","../src/org/locationtech/jts/geom/Geometry.js","../src/org/locationtech/jts/geom/CoordinateFilter.js","../src/org/locationtech/jts/algorithm/BoundaryNodeRule.js","../src/org/locationtech/jts/geom/CoordinateArrays.js","../src/java/util/Map.js","../src/java/util/SortedMap.js","../src/java/util/Set.js","../src/java/util/HashSet.js","../src/java/util/TreeMap.js","../src/org/locationtech/jts/geom/Lineal.js","../src/java/util/SortedSet.js","../src/java/util/TreeSet.js","../src/java/util/Arrays.js","../src/org/locationtech/jts/geom/Dimension.js","../src/org/locationtech/jts/geom/GeometryFilter.js","../src/org/locationtech/jts/geom/CoordinateSequenceFilter.js","../src/org/locationtech/jts/geom/GeometryCollection.js","../src/org/locationtech/jts/geom/MultiLineString.js","../src/org/locationtech/jts/operation/BoundaryOp.js","../src/org/locationtech/jts/algorithm/Length.js","../src/java/io/IOException.js","../src/org/locationtech/jts/util/StringUtil.js","../src/java/lang/StringBuilder.js","../src/org/locationtech/jts/geom/CoordinateSequences.js","../src/org/locationtech/jts/geom/LineString.js","../src/org/locationtech/jts/geom/Puntal.js","../src/org/locationtech/jts/geom/Point.js","../src/org/locationtech/jts/algorithm/Area.js","../src/org/locationtech/jts/geom/Polygonal.js","../src/org/locationtech/jts/geom/Polygon.js","../src/org/locationtech/jts/geom/MultiPoint.js","../src/org/locationtech/jts/geom/LinearRing.js","../src/org/locationtech/jts/geom/MultiPolygon.js","../src/org/locationtech/jts/geom/util/GeometryEditor.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","../src/Map.js","../src/java/util/HashMap.js","../src/org/locationtech/jts/geom/PrecisionModel.js","../src/org/locationtech/jts/geom/GeometryFactory.js","../src/org/locationtech/jts/io/WKTParser.js","../src/org/locationtech/jts/io/WKTWriter.js","../src/org/locationtech/jts/algorithm/LineIntersector.js","../src/org/locationtech/jts/algorithm/RobustLineIntersector.js","../src/org/locationtech/jts/geom/LineSegment.js","../src/org/locationtech/jts/geom/Location.js","../src/org/locationtech/jts/geom/IntersectionMatrix.js","../src/org/locationtech/jts/algorithm/Centroid.js","../src/org/locationtech/jts/algorithm/RayCrossingCounter.js","../src/org/locationtech/jts/algorithm/CGAlgorithms.js","../src/org/locationtech/jts/algorithm/PointLocation.js","../src/java/util/EmptyStackException.js","../src/java/util/Stack.js","../src/org/locationtech/jts/util/UniqueCoordinateArrayFilter.js","../src/org/locationtech/jts/algorithm/ConvexHull.js","../src/org/locationtech/jts/algorithm/InteriorPointArea.js","../src/org/locationtech/jts/algorithm/InteriorPointLine.js","../src/org/locationtech/jts/algorithm/InteriorPointPoint.js","../src/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","../src/org/locationtech/jts/index/bintree/NodeBase.js","../src/org/locationtech/jts/index/bintree/Interval.js","../src/org/locationtech/jts/index/quadtree/DoubleBits.js","../src/org/locationtech/jts/index/bintree/Key.js","../src/org/locationtech/jts/index/bintree/Node.js","../src/org/locationtech/jts/index/quadtree/IntervalSize.js","../src/org/locationtech/jts/index/bintree/Root.js","../src/org/locationtech/jts/index/bintree/Bintree.js","../src/org/locationtech/jts/index/chain/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/Quadrant.js","../src/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","../src/org/locationtech/jts/algorithm/RobustDeterminant.js","../src/org/locationtech/jts/algorithm/PointInRing.js","../src/org/locationtech/jts/algorithm/MCPointInRing.js","../src/org/locationtech/jts/algorithm/Angle.js","../src/org/locationtech/jts/geom/Triangle.js","../src/org/locationtech/jts/algorithm/MinimumBoundingCircle.js","../src/org/locationtech/jts/algorithm/MinimumDiameter.js","../src/org/locationtech/jts/geom/util/GeometryTransformer.js","../src/org/locationtech/jts/densify/Densifier.js","../src/org/locationtech/jts/edgegraph/HalfEdge.js","../src/org/locationtech/jts/edgegraph/MarkHalfEdge.js","../src/org/locationtech/jts/edgegraph/EdgeGraph.js","../src/org/locationtech/jts/dissolve/DissolveHalfEdge.js","../src/org/locationtech/jts/dissolve/DissolveEdgeGraph.js","../src/org/locationtech/jts/dissolve/LineDissolver.js","../src/org/locationtech/jts/geom/GeometryCollectionIterator.js","../src/org/locationtech/jts/algorithm/PointLocator.js","../src/org/locationtech/jts/geomgraph/Position.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","../src/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","../src/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","../src/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","../src/org/locationtech/jts/geomgraph/TopologyLocation.js","../src/org/locationtech/jts/geomgraph/Label.js","../src/org/locationtech/jts/index/ItemVisitor.js","../src/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","../src/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","../src/org/locationtech/jts/geom/util/LinearComponentExtracter.js","../src/org/locationtech/jts/index/ArrayListVisitor.js","../src/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","../src/org/locationtech/jts/geomgraph/EdgeIntersection.js","../src/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","../src/org/locationtech/jts/geomgraph/Depth.js","../src/org/locationtech/jts/geomgraph/GraphComponent.js","../src/org/locationtech/jts/geomgraph/Edge.js","../src/org/locationtech/jts/geomgraph/Node.js","../src/org/locationtech/jts/geomgraph/NodeMap.js","../src/org/locationtech/jts/geomgraph/EdgeEnd.js","../src/org/locationtech/jts/geom/TopologyException.js","../src/org/locationtech/jts/geomgraph/DirectedEdge.js","../src/org/locationtech/jts/geomgraph/NodeFactory.js","../src/org/locationtech/jts/geomgraph/PlanarGraph.js","../src/org/locationtech/jts/geomgraph/GeometryGraph.js","../src/org/locationtech/jts/index/quadtree/NodeBase.js","../src/org/locationtech/jts/index/quadtree/Key.js","../src/org/locationtech/jts/index/quadtree/Node.js","../src/org/locationtech/jts/index/quadtree/Root.js","../src/org/locationtech/jts/index/SpatialIndex.js","../src/org/locationtech/jts/index/quadtree/Quadtree.js","../src/org/locationtech/jts/index/strtree/Boundable.js","../src/org/locationtech/jts/index/strtree/ItemBoundable.js","../src/org/locationtech/jts/util/PriorityQueue.js","../src/org/locationtech/jts/index/strtree/BoundablePairDistanceComparator.js","../src/org/locationtech/jts/index/strtree/AbstractNode.js","../src/org/locationtech/jts/index/strtree/BoundablePair.js","../src/org/locationtech/jts/index/strtree/AbstractSTRtree.js","../src/org/locationtech/jts/index/strtree/ItemDistance.js","../src/org/locationtech/jts/index/strtree/STRtree.js","../src/org/locationtech/jts/io/GeoJSONParser.js","../src/org/locationtech/jts/io/GeoJSONReader.js","../src/org/locationtech/jts/io/GeoJSONWriter.js","../src/org/locationtech/jts/io/WKTReader.js","../src/org/locationtech/jts/io/OL3Parser.js","../src/org/locationtech/jts/noding/SegmentPointComparator.js","../src/org/locationtech/jts/noding/SegmentNode.js","../src/org/locationtech/jts/noding/SegmentNodeList.js","../src/org/locationtech/jts/noding/Octant.js","../src/org/locationtech/jts/noding/SegmentString.js","../src/org/locationtech/jts/noding/NodableSegmentString.js","../src/org/locationtech/jts/noding/NodedSegmentString.js","../src/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","../src/org/locationtech/jts/noding/Noder.js","../src/org/locationtech/jts/noding/SinglePassNoder.js","../src/org/locationtech/jts/noding/MCIndexNoder.js","../src/org/locationtech/jts/noding/ScaledNoder.js","../src/org/locationtech/jts/operation/IsSimpleOp.js","../src/org/locationtech/jts/operation/buffer/BufferParameters.js","../src/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","../src/java/util/LinkedList.js","../src/org/locationtech/jts/operation/buffer/BufferSubgraph.js","../src/org/locationtech/jts/geomgraph/EdgeRing.js","../src/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/PolygonBuilder.js","../src/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","../src/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","../src/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","../src/org/locationtech/jts/geomgraph/EdgeEndStar.js","../src/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","../src/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","../src/org/locationtech/jts/noding/OrientedCoordinateArray.js","../src/org/locationtech/jts/geomgraph/EdgeList.js","../src/org/locationtech/jts/noding/SegmentIntersector.js","../src/org/locationtech/jts/noding/IntersectionAdder.js","../src/org/locationtech/jts/operation/buffer/BufferBuilder.js","../src/org/locationtech/jts/noding/NodingValidator.js","../src/org/locationtech/jts/noding/snapround/HotPixel.js","../src/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","../src/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","../src/org/locationtech/jts/operation/buffer/BufferOp.js","../src/org/locationtech/jts/geom/util/PolygonExtracter.js","../src/org/locationtech/jts/operation/distance/GeometryLocation.js","../src/org/locationtech/jts/geom/util/PointExtracter.js","../src/org/locationtech/jts/operation/distance/ConnectedElementLocationFilter.js","../src/org/locationtech/jts/operation/distance/DistanceOp.js","../src/org/locationtech/jts/operation/linemerge/EdgeString.js","../src/org/locationtech/jts/planargraph/GraphComponent.js","../src/org/locationtech/jts/planargraph/DirectedEdge.js","../src/org/locationtech/jts/operation/linemerge/LineMergeDirectedEdge.js","../src/org/locationtech/jts/planargraph/Edge.js","../src/org/locationtech/jts/planargraph/DirectedEdgeStar.js","../src/org/locationtech/jts/planargraph/Node.js","../src/org/locationtech/jts/operation/linemerge/LineMergeEdge.js","../src/org/locationtech/jts/planargraph/NodeMap.js","../src/org/locationtech/jts/planargraph/PlanarGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMergeGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMerger.js","../src/org/locationtech/jts/noding/BasicSegmentString.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinder.js","../src/org/locationtech/jts/noding/FastNodingValidator.js","../src/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","../src/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","../src/org/locationtech/jts/operation/overlay/LineBuilder.js","../src/org/locationtech/jts/operation/overlay/PointBuilder.js","../src/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","../src/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","../src/org/locationtech/jts/precision/CommonBits.js","../src/org/locationtech/jts/precision/CommonBitsRemover.js","../src/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","../src/org/locationtech/jts/operation/GeometryGraphOperation.js","../src/org/locationtech/jts/operation/overlay/OverlayOp.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeDirectedEdge.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeEdge.js","../src/org/locationtech/jts/operation/polygonize/EdgeRing.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeGraph.js","../src/org/locationtech/jts/operation/polygonize/Polygonizer.js","../src/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundle.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","../src/org/locationtech/jts/operation/relate/RelateNode.js","../src/org/locationtech/jts/operation/relate/RelateNodeFactory.js","../src/org/locationtech/jts/operation/relate/RelateComputer.js","../src/org/locationtech/jts/operation/predicate/RectangleContains.js","../src/org/locationtech/jts/algorithm/RectangleLineIntersector.js","../src/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","../src/org/locationtech/jts/operation/predicate/RectangleIntersects.js","../src/org/locationtech/jts/operation/relate/RelateOp.js","../src/org/locationtech/jts/geom/util/GeometryCombiner.js","../src/org/locationtech/jts/operation/union/PointGeometryUnion.js","../src/org/locationtech/jts/geom/util/GeometryExtracter.js","../src/org/locationtech/jts/operation/union/CascadedPolygonUnion.js","../src/org/locationtech/jts/operation/union/UnaryUnionOp.js","../src/org/locationtech/jts/operation/valid/ConnectedInteriorTester.js","../src/org/locationtech/jts/operation/relate/RelateNodeGraph.js","../src/org/locationtech/jts/operation/valid/ConsistentAreaTester.js","../src/org/locationtech/jts/operation/valid/IndexedNestedRingTester.js","../src/org/locationtech/jts/operation/valid/TopologyValidationError.js","../src/org/locationtech/jts/operation/valid/IsValidOp.js","../src/org/locationtech/jts/precision/PrecisionReducerCoordinateOperation.js","../src/org/locationtech/jts/precision/GeometryPrecisionReducer.js","../src/org/locationtech/jts/simplify/DouglasPeuckerLineSimplifier.js","../src/org/locationtech/jts/simplify/DouglasPeuckerSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLineSegment.js","../src/org/locationtech/jts/simplify/TaggedLineString.js","../src/org/locationtech/jts/simplify/LineSegmentIndex.js","../src/org/locationtech/jts/simplify/TaggedLineStringSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLinesSimplifier.js","../src/org/locationtech/jts/simplify/TopologyPreservingSimplifier.js","../src/org/locationtech/jts/triangulate/SplitSegment.js","../src/org/locationtech/jts/triangulate/ConstraintSplitPointFinder.js","../src/org/locationtech/jts/triangulate/NonEncroachingSplitPointFinder.js","../src/org/locationtech/jts/triangulate/quadedge/TrianglePredicate.js","../src/org/locationtech/jts/triangulate/quadedge/Vertex.js","../src/org/locationtech/jts/triangulate/ConstraintVertex.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdge.js","../src/org/locationtech/jts/triangulate/IncrementalDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LastFoundQuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LocateFailureException.js","../src/org/locationtech/jts/triangulate/quadedge/TriangleVisitor.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.js","../src/org/locationtech/jts/triangulate/Segment.js","../src/org/locationtech/jts/index/kdtree/KdNodeVisitor.js","../src/org/locationtech/jts/index/kdtree/KdNode.js","../src/org/locationtech/jts/index/kdtree/KdTree.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/VoronoiDiagramBuilder.js","../src/org/locationtech/jts/linearref/LinearLocation.js","../src/org/locationtech/jts/linearref/LinearIterator.js","../src/org/locationtech/jts/linearref/LocationIndexOfPoint.js","../src/org/locationtech/jts/linearref/LocationIndexOfLine.js","../src/org/locationtech/jts/linearref/LinearGeometryBuilder.js","../src/org/locationtech/jts/linearref/ExtractLineByLocation.js","../src/org/locationtech/jts/linearref/LocationIndexedLine.js","../src/org/locationtech/jts/linearref/LengthIndexOfPoint.js","../src/org/locationtech/jts/linearref/LengthLocationMap.js","../src/org/locationtech/jts/linearref/LengthIndexedLine.js","../src/org/locationtech/jts/operation/union/UnionOp.js","../src/Array.js","../src/Number.js","../src/Math.js","../src/extend.js","../src/inherits.js","../src/hasInterface.js","../src/java/io/ByteArrayOutputStream.js","../src/java/io/PrintStream.js","../src/java/io/LineNumberReader.js","../src/java/io/StringReader.js","../src/java/text/DecimalFormat.js","../src/java/util/Collections.js","../src/org/locationtech/jts/monkey.js","../src/jsts.js"],"names":["NumberUtil","IllegalArgumentException","Double","Comparable","Clonable","Comparator","Serializable","RuntimeException","message","name","stack","Error","call","this","AssertionFailedException","arguments","length","Assert","Coordinate","x","y","z","c","NULL_ORDINATE","DimensionalComparator","_dimensionsToTest","dimensionsToTest","Iterator","Collection","IndexOutOfBoundsException","List","NoSuchElementException","OperationNotSupported","ArrayList","array_","addAll","CoordinateList","apply","coord","ensureCapacity","add","allowRepeated","Envelope","_minx","_maxx","_miny","_maxy","init","p","env","p1","p2","x1","x2","y1","y2","Exception","NotRepresentableException","StringBuffer","str","Integer","value","Character","DD","_hi","_lo","dd","parse","hi","lo","CGAlgorithmsDD","Orientation","System","HCoordinate","w","_x","_y","_w","q1","q2","px","py","pw","qx","qy","qw","MathUtil","Distance","CoordinateSequence","CoordinateSequenceFactory","GeometryComponentFilter","Geometry","_envelope","_factory","_SRID","_userData","factory","getSRID","CoordinateFilter","BoundaryNodeRule","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","CoordinateArrays","ForwardComparator","BidirectionalComparator","Map","SortedMap","Set","HashSet","colorOf","BLACK","color","parentOf","parent","setColor","leftOf","left","rightOf","right","TreeMap","root_","size_","Lineal","SortedSet","TreeSet","Arrays","Dimension","GeometryFilter","CoordinateSequenceFilter","GeometryCollection","_geometries","geometries","hasNullElements","MultiLineString","lineStrings","BoundaryOp","_geom","_geomFact","_bnRule","_endpointMap","geom","MOD2_BOUNDARY_RULE","bnRule","getFactory","Counter","count","Length","IOException","StringUtil","StringBuilder","CoordinateSequences","LineString","_points","points","Puntal","Point","_coordinates","coordinates","Area","Polygonal","Polygon","_shell","_holes","shell","holes","createLinearRing","isEmpty","hasNonEmptyElements","MultiPoint","LinearRing","Array","GeometryFactory","getCoordinateSequenceFactory","create","hasInterface","validateConstruction","MultiPolygon","polygons","GeometryEditor","_isUserDataCopied","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","_dimension","Number","isInteger","size","fill","i","coordSeq","getDimension","getCoordinateCopy","dimension","CoordinateArraySequenceFactory","is","a","b","sharedIterator","itp","array","array2","done","push","v","k","splice","indexOf","sharedSize","_values","HashMap","map_","MapImpl","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","scale","pm","_name","nameToTypeMap","put","_precisionModel","_coordinateSequenceFactory","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","SRID","WKTParser","geometryFactory","WKTWriter","parser","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","RobustLineIntersector","LineSegment","p0","ls","x0","y0","Location","IntersectionMatrix","_matrix","setAll","FALSE","elements","set","other","INTERIOR","BOUNDARY","EXTERIOR","Centroid","_areaBasePt","_triangleCent3","_areasum2","_cg3","_lineCentSum","_totalLength","_ptCount","_ptCentSum","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","CGAlgorithms","PointLocation","EmptyStackException","Stack","UniqueCoordinateArrayFilter","treeSet","list","ConvexHull","_geomFactory","_inputPts","geometry","extractCoordinates","pts","geomFactory","filterCoordinates","RadialComparator","_origin","origin","InteriorPointArea","_interiorPoint","_maxWidth","g","SafeBisectorFinder","_poly","_centreY","_hiY","MAX_VALUE","_loY","poly","getEnvelopeInternal","getMaxY","getMinY","avg","InteriorPointLine","_centroid","_minDistance","getCentroid","getCoordinate","addInterior","addEndpoints","InteriorPointPoint","MonotoneChainSelectAction","selectedSegment","NodeBase","_items","_subnode","Interval","min","max","interval","DoubleBits","Key","_pt","_level","_interval","computeKey","Node","_centre","level","getMin","getMax","IntervalSize","Root","Bintree","_root","_minExtent","MonotoneChain","_pts","_start","_end","_env","_context","_id","start","end","context","Quadrant","MonotoneChainBuilder","RobustDeterminant","PointInRing","MCPointInRing","_ring","_tree","_crossings","ring","buildIndex","MCSelecter","mcp","Angle","Triangle","MinimumBoundingCircle","_input","_extremalPts","_radius","MinimumDiameter","_inputGeom","_isConvex","_convexHullPts","_minBaseSeg","_minWidthPt","_minPtIndex","_minWidth","inputGeom","isConvex","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","Densifier","_distanceTolerance","DensifyTransformer","distanceTolerance","HalfEdge","_orig","_sym","_next","orig","MarkHalfEdge","_isMarked","EdgeGraph","_vertexMap","DissolveHalfEdge","_isStart","DissolveEdgeGraph","LineDissolver","_graph","_lines","_nodeEdgeStack","_ringStartEdge","GeometryCollectionIterator","_parent","_atStart","_max","_index","_subcollectionIterator","getNumGeometries","PointLocator","_boundaryRule","OGC_SFS_BOUNDARY_RULE","_isIn","_numBoundaries","boundaryRule","Position","mce","chainIndex","SweepLineEvent","_label","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","DELETE","label","obj","INSERT","EdgeSetIntersector","SegmentIntersector","_hasIntersection","_hasProper","_hasProperInterior","_properIntersectionPoint","_li","_includeProper","_recordIsolated","_isSelfIntersection","_numIntersections","numTests","_bdyNodes","_isDone","_isDoneWhenProperInt","li","includeProper","recordIsolated","SimpleMCSweepLineIntersector","events","nOverlaps","TopologyLocation","location","on","ON","gl","LEFT","RIGHT","Label","elt","onLoc","lbl","geomIndex","NONE","setLocation","leftLoc","rightLoc","setLocations","ItemVisitor","PointOnGeometryLocator","IntervalRTreeNode","_min","POSITIVE_INFINITY","NEGATIVE_INFINITY","NodeComparator","IntervalRTreeLeafNode","_item","item","IntervalRTreeBranchNode","_node1","_node2","n1","n2","buildExtent","SortedPackedIntervalRTree","_leaves","LinearComponentExtracter","_isForcedToLineString","lines","isForcedToLineString","ArrayListVisitor","IndexedPointInAreaLocator","IntervalIndexedGeometry","SegmentVisitor","_counter","counter","EdgeIntersection","segmentIndex","dist","EdgeIntersectionList","_nodeMap","edge","MonotoneChainIndexer","MonotoneChainEdge","e","startIndex","getCoordinates","mcb","getChainStartIndices","Depth","_depth","j","NULL_VALUE","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","Edge","eiList","_mce","_isIsolated","_depthDelta","_coord","_edges","edges","NodeMap","nodeMap","nodeFact","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","TopologyException","pt","msg","msgWithCoord","DirectedEdge","_isForward","_nextMin","_edgeRing","_minEdgeRing","isForward","n","getNumPoints","computeDirectedLabel","NodeFactory","PlanarGraph","_nodes","_edgeEndList","GeometryGraph","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","_ptLocator","argIndex","parentGeom","boundaryNodeRule","itemEnv","_centrex","_centrey","getMinX","getMaxX","SpatialIndex","Quadtree","Boundable","ItemBoundable","_bounds","bounds","PriorityQueue","_size","BoundablePairDistanceComparator","normalOrder","AbstractNode","_childBoundables","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","distance","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity","isTrue","ItemDistance","STRtree","STRtreeNode","GeoJSONParser","GeoJSONReader","getPrecisionModel","GeoJSONWriter","WKTReader","p2c","OL3Parser","olReference","ol","SegmentPointComparator","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","equals2D","SegmentNodeList","NodeVertexIterator","_nodeList","_nodeIt","_currNode","_nextNode","_currSegIndex","nodeList","getEdge","iterator","readNextNode","Octant","SegmentString","NodableSegmentString","NodedSegmentString","_data","data","MonotoneChainOverlapAction","_overlapSeg1","_overlapSeg2","Noder","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","si","SegmentOverlapAction","_si","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","noder","scaleFactor","isIntegerPrecision","IsSimpleOp","_isClosedEndpointsInInterior","_nonSimpleLocation","isInBoundary","EndpointInfo","isClosed","degree","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","endCapStyle","setEndCapStyle","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","LinkedList","BufferSubgraph","_finder","_dirEdgeList","_rightMostCoord","EdgeRing","_startDe","_maxNodeDegree","_isHole","_geometryFactory","computePoints","computeRing","MinimalEdgeRing","MaximalEdgeRing","PolygonBuilder","_shellList","BufferInputLineSimplifier","_inputLine","_distanceTol","_isDeleted","_angleOrientation","COUNTERCLOCKWISE","inputLine","OffsetSegmentString","_ptList","_minimimVertexDistance","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","Math","PI","getQuadrantSegments","getJoinStyle","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","SubgraphDepthLocater","_subgraphs","_seg","subgraphs","DepthSegment","_upwardSeg","_leftDepth","seg","depth","OffsetCurveSetBuilder","_curveBuilder","_curveList","curveBuilder","SimplePointInAreaLocator","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","DirectedEdgeStar","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","OverlayNodeFactory","OrientedCoordinateArray","_orientation","orientation","EdgeList","_ocaMap","IntersectionAdder","_hasInterior","numIntersections","numInteriorIntersections","numProperIntersections","BufferBuilder","_workingPrecisionModel","_workingNoder","NodingValidator","_segStrings","segStrings","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","MCIndexPointSnapper","index","HotPixelSnapAction","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","hotPixel","parentEdge","hotPixelVertexIndex","InteriorIntersectionFinderAdder","_interiorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","setPrecisionModel","getScale","BufferOp","_argGeom","_resultGeometry","_saveException","PolygonExtracter","_comps","comps","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","segIndex","PointExtracter","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_minDistanceLocation","g0","g1","terminateDistance","EdgeString","_directedEdges","_from","_to","_edgeDirection","_angle","from","to","directionPt","edgeDirection","dx","dy","quadrant","atan2","LineMergeDirectedEdge","_dirEdge","de0","de1","setDirectedEdges","_outEdges","_sorted","_deStar","deStar","LineMergeEdge","_line","line","_dirEdges","LineMergeGraph","LineMerger","_mergedLineStrings","_edgeStrings","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","FastNodingValidator","_isValid","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","_mapOp","mapOp","LineBuilder","_op","_lineEdgesList","_resultLineList","op","ptLocator","PointBuilder","_resultPointList","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","GeometrySnapper","_srcGeom","srcGeom","SnapTransformer","_snapPts","_isSelfSnap","snapPts","isSelfSnap","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","_commonBitsX","_commonBitsY","Translater","trans","SnapOverlayOp","_cbr","g2","computeSnapTolerance","SnapIfNeededOverlayOp","GeometryGraphOperation","_resultPrecisionModel","_arg","setComputationPrecision","compareTo","OverlayOp","_resultGeom","_resultPolyList","PolygonizeDirectedEdge","PolygonizeEdge","_deList","_lowestEdge","_ringPts","_isProcessed","_isIncludedSet","_isIncluded","EnvelopeComparator","PolygonizeGraph","Polygonizer","_lineStringAdder","LineStringAdder","_dangles","_cutEdges","_invalidRingLines","_holeList","_polyList","_isCheckingRingsValid","_extractOnlyPolygonal","extractOnlyPolygonal","EdgeEndBuilder","EdgeEndBundle","_edgeEnds","getDirectedCoordinate","getLabel","insert","EdgeEndBundleStar","RelateNode","RelateNodeFactory","RelateComputer","_im","_isolatedEdges","arg","RectangleContains","_rectEnv","rectangle","RectangleLineIntersector","_diagUp0","_diagUp1","_diagDown0","_diagDown1","rectEnv","ShortCircuitedGeometryVisitor","RectangleIntersects","_rectangle","EnvelopeIntersectsVisitor","_intersects","GeometryContainsPointVisitor","_rectSeq","_containsPoint","getExteriorRing","getCoordinateSequence","RectangleIntersectsSegmentVisitor","_rectIntersector","RelateOp","_relate","GeometryCombiner","_skipEmpty","_inputGeoms","geoms","extractFactory","PointGeometryUnion","_pointGeom","_otherGeom","pointGeom","otherGeom","GeometryExtracter","_geometryType","geometryType","CascadedPolygonUnion","_inputPolys","polys","UnaryUnionOp","_polygons","extract","geomFact","ConnectedInteriorTester","_geomGraph","_disconnectedRingcoord","geomGraph","RelateNodeGraph","ConsistentAreaTester","_nodeGraph","IndexedNestedRingTester","_rings","_totalEnv","_nestedPt","graph","TopologyValidationError","_errorType","errorType","copy","IsValidOp","_parentGeometry","_isSelfTouchingRingFormingHoleValid","_validErr","parentGeometry","PrecisionReducerCoordinateOperation","_targetPM","_removeCollapsed","targetPM","removeCollapsed","GeometryPrecisionReducer","_changePrecisionModel","_isPointwise","DouglasPeuckerLineSimplifier","_usePt","DouglasPeuckerSimplifier","_isEnsureValidTopology","DPTransformer","isEnsureValidTopology","TaggedLineSegment","TaggedLineString","_parentLine","_segs","_resultSegs","_minimumSize","parentLine","minimumSize","LineSegmentIndex","LineSegmentVisitor","_querySeg","querySeg","TaggedLineStringSimplifier","_inputIndex","_outputIndex","_linePts","inputIndex","outputIndex","TaggedLinesSimplifier","TopologyPreservingSimplifier","_lineSimplifier","_linestringMap","LineStringTransformer","linestringMap","LineStringMapBuilderFilter","tps","SplitSegment","_segLen","_splitPt","_minimumLen","getLength","ConstraintSplitPointFinder","NonEncroachingSplitPointFinder","TrianglePredicate","Vertex","_z","ConstraintVertex","_isOnConstraint","_constraint","QuadEdge","_rot","_vertex","IncrementalDelaunayTriangulator","_subdiv","_isUsingTolerance","subdiv","getTolerance","QuadEdgeLocator","LastFoundQuadEdgeLocator","_lastEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","QuadEdgeSubdivision","_visitedKey","_quadEdges","_startingEdge","_tolerance","_edgeCoincidenceTolerance","_frameVertex","_frameEnv","_locator","_triEdges","tolerance","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","TriangleCircumcentreVisitor","TriangleEdgesListVisitor","_triList","TriangleVertexListVisitor","TriangleCoordinatesVisitor","_coordList","_triCoords","Segment","_ls","z1","z2","KdNodeVisitor","KdNode","_left","_right","_count","KdTree","_numberOfNodes","BestMatchVisitor","_matchNode","_matchDist","ConformingDelaunayTriangulator","_initialVertices","_segVertices","_segments","_incDel","_convexHull","_splitFinder","_kdt","_vertexFactory","_computeAreaEnv","initialVertices","DelaunayTriangulationBuilder","_siteCoords","ConformingDelaunayTriangulationBuilder","_constraintLines","_constraintVertexMap","VoronoiDiagramBuilder","_clipEnv","_diagramEnv","LinearLocation","_componentIndex","_segmentIndex","_segmentFraction","loc","segmentFraction","componentIndex","normalize","doNormalize","LinearIterator","_linearGeom","_numLines","_currentLine","_vertexIndex","linear","getComponentIndex","segmentEndVertexIndex","linearGeom","vertexIndex","loadCurrentLine","LocationIndexOfPoint","LocationIndexOfLine","LinearGeometryBuilder","_ignoreInvalidLines","_fixInvalidLines","_lastPt","ExtractLineByLocation","LocationIndexedLine","checkGeometryType","LengthIndexOfPoint","LengthLocationMap","LengthIndexedLine","UnionOp","prototype","defineProperty","undefined","TypeError","arrayLike","Object","relativeStart","parseInt","relativeEnd","isFinite","val","floor","parseFloat","isNaN","trunc","ceil","extend","target","source","key","hasOwnProperty","equalsWithTolerance","abs","doubleToLongBits","longBitsToDouble","isInfinite","constructor","inherits","shouldNeverReachHere","assertion","equals","expectedValue","actualValue","ordinateIndex","X","Y","Z","o","CloneNotSupportedException","dz","sqrt","result","hashCode","Cloneable","f","o1","o2","c1","c2","compX","compare","compY","serialVersionUID","NaN","interfaces_","hasNext","next","remove","toArray","get","clear","element","oldElement","Iterator_","len","found","arrayList","arrayList_","position_","coll","isChanged","clone","coordArrayType","inc","getWidth","getHeight","otherEnvelope","isNull","intersects","intMinX","intMinY","covers","expandToInclude","h","transX","transY","expandBy","deltaX","deltaY","setToNull","q","minq","maxq","minp","maxp","append","setCharAt","substr","toString","intValue","isWhitespace","toUpperCase","insertDecimalPoint","magnitude","mag","TEN","pow","divide","gt","lt","ONE","multiply","decimalPointPos","buf","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","negate","isZero","le","selfDivide","yhi","ylo","hc","tc","hy","ty","C","U","u","SPLIT","createNaN","exp","r","s","selfMultiply","sqr","reciprocal","fhi","flo","ge","isNegative","ax","axdd","d2","H","S","T","t","zhi","zlo","hx","tx","ex","toStandardNotation","toSciNotation","specialStr","getSpecialNumberString","sigDigits","extractSignificantDigits","num","charAt","stringOfChar","numZeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","substring","digitsWithDecimal","isPositive","strlen","signCh","numBeforeDec","ch","isDigit","d","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","log","xMag","TWO_PI","PI_2","E","EPS","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","selfSubtract","signum","signOfDet2x2","det","intersection","denom1","denom2","denom","numx1","numx2","fracP","doubleValue","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","errbound","DP_SAFE_EPSILON","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","prev","disc","CLOCKWISE","STRAIGHT","COLLINEAR","arraycopy","src","srcPos","dest","destPos","getProperty","getX","getY","xInt","yInt","log10","ln","LOG_10","v1","v2","v3","v4","clamp","wrap","average","segmentToSegment","A","B","D","pointToSegment","noIntersection","r_num","len2","pointToLinePerpendicular","pointToSegmentString","minDistance","M","getTypeCode","TYPECODE_GEOMETRYCOLLECTION","equalsTopo","equalsExact","geometryChangedFilter","norm","compareToSameClass","comp","toGeometry","computeEnvelopeInternal","userData","aElement","bElement","comparison","TYPECODE_MULTIPOINT","TYPECODE_MULTILINESTRING","TYPECODE_MULTIPOLYGON","TYPECODE_POINT","TYPECODE_LINESTRING","TYPECODE_LINEARRING","TYPECODE_POLYGON","TYPENAME_POINT","TYPENAME_MULTIPOINT","TYPENAME_LINESTRING","TYPENAME_LINEARRING","TYPENAME_MULTILINESTRING","TYPENAME_POLYGON","TYPENAME_MULTIPOLYGON","TYPENAME_GEOMETRYCOLLECTION","geometryChangedAction","boundaryCount","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","isRing","ptNotInList","testPts","testPt","scroll","firstCoordinate","newCoordinates","coord1","coord2","coordinateComparator","coordList","toCoordinateArray","hasRepeatedPoints","removeRepeatedPoints","reverse","last","mid","tmp","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","coordinate","increasingDirection","minCoordinate","minCoord","npts","extractPts","iPts","forwardComp","dir1","dir2","i1","i2","comparePt","values","entrySet","contains","javascript","util","hashSet","hashSet_","cmp","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","l","treeSet_","sort","comparator","slice","concat","asList","toDimensionSymbol","dimensionValue","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","SYM_A","toDimensionValue","dimensionSymbol","seq","childCoordinates","area","getArea","isEquivalentClass","otherCollection","getBoundaryDimension","sum","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","thisGeom","getGeometryN","holeComp","filter","isDone","isGeometryChanged","geometryChanged","checkNotGeometryCollection","nLines","revLines","createMultiLineString","getBoundary","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createPoint","createMultiPointFromCoords","boundaryLineString","boundaryMultiLineString","getStartPoint","createMultiPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","getValue","getKey","bop","ofLine","chars","String","getStackTrace","os","ps","printStackTrace","stackTrace","lineNumberReader","readLine","NEWLINE","split","separator","separatorlen","tokenList","tmpString","pos","token","res","SIMPLE_ORDINATE_FORMAT","format","spaces","copyCoord","minDim","dim","setOrdinate","getOrdinate","isEqual","cs1","cs2","cs1Size","fact","newseq","swap","cs","builder","ensureValidRing","createClosedRing","expandEnvelope","isSimple","otherLineString","equal","getPointN","createLineString","point","ofRing","ofRingSigned","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","rings","shellCopy","holeCopies","MINIMUM_VALID_SIZE","createMultiPolygon","allRings","allRingsArray","isUserDataCopied","operation","editInternal","setUserData","getUserData","editGeometryCollection","editPolygon","edit","getClass","getName","collection","collectionForType","polygon","newPolygon","createPolygon","hole","cloneCoordinates","strBuilder","instance","instanceObject","MapPolyfill","proto","objectOnly","_keys","_itp","forEach","createCollection","has","callback","entries","MapInterface","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","FLOATING_SINGLE","description","round","makePrecise","maxSigDigits","mostPrecise","pm1","pm2","maximumPreciseValue","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","regExes","wkt","type","replace","matches","typeStr","exec","search","emptyTypeStr","toLowerCase","extractGeometry","getGeometryType","wktType","multipoint","join","linestring","linearring","multilinestring","multipolygon","coords","trim","components","trimParens","parenComma","doubleParenComma","wktArray","read","write","intIndex","computeIntLineIndex","catBuilder","isEndPoint","isCollinear","p3","p4","computeIntersect","getEdgeDistance","hasIntersection","isInteriorIntersection","inputLineIndex","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","toLineString","getTopologySummary","ptIndex","pdx","pdy","nonRobustComputeEdgeDistance","DONT_INTERSECT","DO_INTERSECT","POINT_INTERSECTION","intPt","env0","env1","computeIntersection","n3","n4","normPt","smallestInAbsValue","nearestEndpoint","intersectionWithNormalization","isInSegmentEnvelopes","x3","x4","xabs","intPtDD","isIn","out","println","normalizeToEnvCentre","safeHCoordinateIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","computeCollinearIntersection","nearestPt","minDist","orient0","orient1","getIntersection","projectionFactor","pf0","pf1","newp0","project","newp1","midPoint","closestPt","close00","closestPoint","close01","close10","close11","factor","comp0","temp","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","inputPt","segFrac","bits0","java","lang","hash0","bits1","toLocationSymbol","locationValue","isDisjoint","dimensionSymbols","row","col","column","minimumDimensionSymbols","setAtLeast","minimumDimensionValue","dimensionOfGeometryA","dimensionOfGeometryB","isTouches","ai","bi","requiredDimensionSymbols","im","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","basePt","lineLen","segmentLen","midx","midy","addPoint","isPositiveArea","addTriangle","addLineSegments","cent","setAreaBasePoint","sign","centroid3","area2","addShell","addHole","minx","maxx","orient","getLocation","locatePointInRing","countSegment","isOnSegment","signedArea","distanceLineLine","distancePointLine","isPointInRing","computeLength","computeOrientation","distancePointLinePerpendicular","isOnLine","lineIntersector","locateInRing","isInRing","pop","peek","empty","inputPts","octPts","computeOctPts","closeRing","cleanRing","linearRing","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","polyPts","computeOctRing","reducedSet","reducedPts","padArray3","reduce","sortedPts","preSort","cHS","grahamScan","cH","lineOrPolygon","pad","polarCompare","dxp","dyp","dxq","dyq","oq","width","bisector","horizontalBisector","intersections","widestIntersection","widestGeometry","centre","bisectY","getBisectorY","addPolygon","process","updateInterval","mc","getLineSegment","select","hasChildren","hasItems","items","addAllItems","subSize","resultItems","isSearchMatch","addAllItemsFromOverlapping","itemInterval","isPrunable","maxSubDepth","sqd","nodeSize","getSubnodeIndex","subnodeIndex","overlaps","exponent","NumW","Qty","Sign","Expo","Mant","Bin","ExW","CVTFWD","powerOf2","computeLevel","computeInterval","searchInterval","find","node","childNode","createSubnode","getSubnode","getNode","createNode","getInterval","getLevel","createExpanded","addInterval","expandInt","largerNode","isZeroWidth","maxAbs","MIN_BINARY_EXPONENT","insertContained","tree","collectStats","insertInterval","ensureExtent","query","foundItems","del","minExtent","searchEnv","start0","end0","mcs","computeSelect","mco","computeOverlaps","start1","end1","overlap","mid0","mid1","id","isNorthern","quad","NE","NW","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","SE","SW","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","mcList","mcEnv","getEnvelope","rayEnv","mcSelecter","segs","testMonotoneChain","testLineSegment","toDegrees","radians","angle","PI_TIMES_2","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","a1","a2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","PI_OVER_2","PI_OVER_4","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","compute","hullPts","lowestPoint","Q","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","computeCirclePoints","computeCentre","centrePoint","buffer","minSin","minAngPt","minAng","ang","computeMinimumDiameter","convexGeom","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","computeWidthConvex","getConvexHull","maxPerpDistance","distancePerpendicular","nextPerpDistance","maxIndex","nextIndex","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","lineIntersection","getMinimumDiameter","getDiameter","getMinimumRectangle","transformCoordinates","isAllValidLinearRings","transformLinearRing","buildGeometry","transGeomList","transformGeom","transformLineString","transformPoint","transformPolygon","transform","transformMultiPoint","transformMultiLineString","transformMultiPolygon","transformGeometryCollection","seqSize","densifyPoints","precModel","densifiedSegCount","densifiedSegLen","segFract","pointAlong","densify","densifier","setDistanceTolerance","getResultGeometry","roughGeom","createValidArea","newPts","roughAreaGeom","oNext","insertAfter","ecmp","ePrev","save","setNext","sym","quadrant2","compareAngularDirection","setSym","e0","e1","isMarked","setMarkBoth","setMark","markBoth","mark","eAdj","eAdjDest","createEdge","isValidEdge","eSame","isStart","computeResult","eNode","prevNode","stackEdges","buildLines","eStartRing","eNext","addLine","eStart","updateRingStartEdge","buildRing","getVertexEdges","buildLine","lineString","doneStart","addEdge","setStart","dissolve","getResult","isAtomic","UnsupportedOperationException","locate","updateLocationInfo","locateOnPoint","locateOnLineString","locateInPolygon","ml","mpoly","geomi","computeLocation","shellLoc","locateInPolygonRing","holeLoc","opposite","position","computeIntersectsForChain","deleteEventIndex","pe","ev","Collections","alen","segIndex0","segIndex1","getIntersectionNum","isAdjacentSegments","maxSegIndex","isDoneWhenProperInt","bdyNodes","isIntersection","isBoundaryPointInternal","bdyNodes0","bdyNodes1","p00","p01","p10","p11","setIsolated","isTrivialIntersection","isProper","addIntersections","isBoundaryPoint","isDelete","getInsertEvent","setDeleteEventIndex","prepareEvents","isInsert","processOverlaps","getDeleteEventIndex","edges0","edges1","addEdges","computeIntersections","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","getObject","ev1","mc1","isSameLabel","locValue","newLoc","posIndex","locIndex","setAllLocations","setAllLocationsIfNull","isLine","merge","flip","isArea","isAnyNull","side","isEqualOnSide","allPositionsEqual","toLineLabel","lineLabel","queryMin","queryMax","mid2","visitor","visitItem","buildLevel","buildTree","buildRoot","getGeometry","getLines","forceToLineString","rcc","getItems","print","maxSegmentIndex","edgeList","eiPrev","ei","newEdge","createSplitEdge","ei0","ei1","lastSegStartPt","useIntPt1","ipt","eiNew","chainIndex0","chainIndex1","depthValue","minDepth","newValue","depthAtLocation","isVisited","isInResult","isCovered","getGeometryCount","computeIM","isIsolated","isEqualForward","isEqualReverse","iRev","updateIM","normalizedSegmentIndex","nextSegIndex","nextPt","depthDelta","addIntersection","setAtLeastIfValid","getEdges","label2","eltIndex","nLoc","setLabel","onLocation","mergeLabel","computeMergedLocation","setNode","addNode","className","lastDotPos","lastIndexOf","compareDirection","depthVal","isInteriorAreaEdge","nextMin","getDepthDelta","minEdgeRing","isExteriorIfArea0","isExteriorIfArea1","edgeRing","printReverse","de","setVisited","directionFactor","oppositePos","oppositeDepth","setDepth","depthFactor","currLocation","nextLocation","nodeit","linkResultDirectedEdges","linkAllDirectedEdges","ep0","ep1","eCoord","matchInSameDirection","getEdgeEnds","ee","edgesToAdd","de2","nodes","determineBoundary","computeRingSelfNodes","computeSelfNodes","isDoneIfProperInt","setIsDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","edgelist","addSplitEdges","setBoundaryNodes","getBoundaryNodes","insertPoint","addPolygonRing","insertEdge","insertBoundaryPoint","isBoundaryNode","lr","cwLeft","cwRight","eLoc","eiIt","addSelfIntersectionNode","addLineString","addCollection","findEdge","visitItems","visit","centrex","centrey","computeQuadLevel","quadSize","miny","maxy","insertNode","addEnv","expandEnv","isZeroX","isZeroY","insertEnv","posEnv","delX","delY","minItem","reorder","child","distance1","getDistance","distance2","childBoundable","computeBounds","priQ","isComp1","isComposite","isComp2","expand","nd","bndComposite","bndOther","getChildBoundables","bp","isLeaves","getBounds","searchBounds","childBoundables","getIntersectsOp","queryInternal","getItem","build","childToRemove","valuesTree","itemsTree","valuesTreeForNode","valuesTreeForChild","boundables","boundablesAtLevel","top","boundable","createHigherLevels","removeItem","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","lastNode","getNodeCapacity","addChildBoundable","compareDoubles","IntersectsOp","item1","item2","verticalSlices","createParentBoundablesFromVerticalSlice","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","yComparator","minLeafCount","xComparator","createParentBoundablesFromVerticalSlices","itemDist","getRoot","nearestNeighbour","initBndPair","distanceLowerBound","minPair","currentDistance","bndPair","poll","expandToQueue","getBoundable","bnd","maxDistance","kNearestNeighbors","centreX","resultIterator","centreY","aBounds","bBounds","geometryTypes","json","JSON","feature","bbox","featureCollection","features","sub","geoJson","shellGeoJson","holeGeoJson","getType","reducePrecision","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","getLinearRings","multiPoint","getPoints","multiLineString","getLineStrings","multiPolygon","getPolygons","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","geometryCollection","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","addEdgeCoordinates","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","isInterior","addCollapsedNodes","collapsedVertexIndex","numVerticesBetween","findCollapseIndex","getData","getSegmentOctant","splitEdges","edgePts","pt0","splitnPts","ptn","adx","ady","safeOctant","addIntersectionNode","getNodedSubstrings","resultEdgelist","getNodeList","mc2","start2","segStr","setId","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","getId","ss1","getContext","ss2","processIntersections","ss","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","computeNodes","mp","isSimpleLinearGeometry","endPoints","getEdgeIterator","getMaximumSegmentIndex","eiInfo","hasProperIntersection","getProperIntersectionPoint","hasNonEndpointIntersection","hasClosedEndpointIntersection","getEdgeIntersectionList","isSimpleMultiPoint","isSimplePolygonal","isSimpleGeometryCollection","computeSimple","quadSegs","JOIN_BEVEL","JOIN_MITRE","simplifyFactor","isSingleSided","bufferDistanceError","alpha","cos","CAP_FLAT","CAP_SQUARE","getRightmostSideOfSegment","checkForRightmostCoordinate","pPrev","pNext","usePrev","star","getRightmostEdge","getSym","dirEdgeList","findRightmostEdgeAtNode","findRightmostEdgeAtVertex","getRightmostSide","addLast","removeFirst","shift","startEdge","computeDepths","copySymDepths","outsideDepth","clearVisitedEdges","setEdgeDepths","addReachable","getDepth","setInResult","nodesVisited","nodeQueue","startNode","computeNodeDepth","adjNode","edgeEnv","nodeStack","symNode","isFirstEdge","getEdgeRing","addPoints","setEdgeRing","getNext","getOutgoingDegree","getLinearRing","containsPoint","computeMaxNodeDegree","deLabel","holeLR","er","setMinEdgeRing","getNextMin","minEdgeRings","getMinEdgeRing","minEr","linkMinimalDirectedEdges","edgeRings","shellList","freeHoleList","isHole","resultPolyList","toPolygon","getShell","findEdgeRingContaining","setShell","maxEdgeRings","getMaxNodeDegree","linkDirectedEdgesForMinimalEdgeRings","buildMinimalRings","findShell","placePolygonHoles","dirEdges","computePolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","getNodes","buildMaximalEdgeRings","buildMinimalEdgeRings","sortShellsAndHoles","placeFreeHoles","i0","distanceTol","isConcave","isShallow","isShallowSampled","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isDeletable","NUM_PTS_TO_CHECK","deleteShallowConcavities","collapseLine","simplify","INIT","KEEP","COORDINATE_ARRAY_TYPE","bufPt","isRedundant","addPt","lastPt","startPt","minimimVertexDistance","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","offsetL","offsetR","getEndCapStyle","addDirectedFillet","squareCapSideOffset","squareCapLOffset","squareCapROffset","offset0","offset1","isMitreWithinLimit","getMitreLimit","addLimitedMitreJoin","OFFSET_SEGMENT_SEPARATION_FACTOR","addMitreJoin","addBevelJoin","addCornerFillet","addPts","direction","radius","startAngle","endAngle","s1","s2","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","mitreMidLine","bevelEndLeft","pointAlongOffset","bevelEndRight","totalAngle","nSegs","currAngleInc","currAngle","offset","sideSign","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","setMinimumVertexDistance","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","distTol","simplifyTolerance","addSegments","simp2","initSideSegments","addFirstSegment","addNextSegment","simp1","addLastSegment","simp","addLineEndCap","createCircle","createSquare","computeSingleSidedBufferCurve","computeLineBufferCurve","bufDistance","getSimplifyFactor","getLineCurve","copyCoordinates","computeRingBufferCurve","stabbingRayLeftPt","stabbedSegments","bsg","findStabbedSegments","getDirectedEdges","dirEdge","isHorizontal","ds","minX","maxX","orientIndex","seg0","seg1","compare0","curve","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","triangleCoord","bufferDistance","tri","getBufferParameters","cwLeftLoc","cwRightLoc","getRingCurve","ringCoord","isTriangleErodedCompletely","envMinDimension","locatePointInPolygon","containsPointInPolygon","locateInGeometry","iNextCW","startLoc","currLoc","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","eSearch","computeLabel","propagateSideLabels","hasDimensionalCollapseEdge","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","insertEdgeEnd","deLast","quad0","getQuadrant","getDy","nodeLabel","prevOut","firstIn","edgeIndex","findIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","setNextMin","isLineEdge","setCovered","computeLabelling","eLabel","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","edgeColl","existingEdge","findEqualEdge","existingLabel","labelToMerge","isPointwiseEqual","mergeDelta","newDelta","setDepthDelta","subgraphList","polyBuilder","processedGraphs","subgraph","getRightmostCoordinate","computeDepth","findResultEdges","reverseOrder","bufferSegStrList","getCurves","createEmptyResultGeometry","computeNodedEdges","createSubgraphs","buildSubgraphs","getNoder","oldLabel","insertUniqueEdge","lLoc","rLoc","convertSegStrings","checkEndPtVertexIntersections","ss0","checkInteriorIntersections","pts0","hasInteriorIntersection","checkCollapses","checkCollapse","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","intersectsScaled","copyScaled","pScaled","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsLeft","intersectsBottom","snap","pixelEnv","getSafeEnvelope","hotPixelSnapAction","isNodeAdded","addSnappedNode","inputSegmentStrings","nv","checkValid","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","getInteriorIntersections","edge0","getIndex","snapRound","fixedPM","bufBuilder","setWorkingPrecisionModel","setNoder","precDigits","MAX_PRECISION_DIGITS","bufferReducedPrecision","precisionDigits","precisionScaleFactor","bufferFixedPrecision","bufferOriginalPrecision","argPM","computeGeometry","bufferOp","geomBuf","bufOp","maxPrecisionDigits","bufEnvMax","minUnitLog10","CAP_BUTT","singletonList","getLocations","locPtPoly","computeContainmentDistance","polyGeomIndex","polyGeom","locationsIndex","insideLocs","locs","ptLoc","locGeom","computeMinDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistanceLinesPoints","computeMinDistancePoints","computeFacetDistance","coord0","segClosestPoint","line0","line1","closestPoints","points0","points1","pt1","isWithinDistance","nearestPoints","forwardDirectedEdges","reverseDirectedEdges","coordinateList","directedEdge","getEdgeDirection","getLine","getComponentWithVisitedState","visitedState","visited","setMarked","marked","toEdges","getToNode","getDegree","getOutEdges","setEdge","getFromNode","addOutEdge","fromNode","sortEdges","modi","getEdgesBetween","node0","node1","commonEdges","retainAll","nodesFound","nodeIterator","getDirEdge","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","findNode","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringStartingWith","edgeIterator","buildEdgeStringsForObviousStartNodes","buildEdgeStringsForIsolatedLoops","edgeString","current","buildEdgeStringsForUnprocessedNodes","isCheckEndSegmentsOnly","findAllIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","setFindAllIntersections","createAnyIntersectionFinder","createIntersectionCounter","setKeepIntersections","getIntersections","execute","getErrorMessage","getInteriorIntersection","intSegs","getIntersectionSegments","isValid","mapped","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","targetIndex","getArgGeometry","findCoveredLineEdges","collectLines","isResultOfOp","setVisitedEdge","isCoveredSet","isCoveredByA","edgesList","labelIsolatedLine","INTERSECTION","isCoveredByLA","isIncidentEdgeInResult","filterCoveredNodeToPoint","extractNonCoveredResultNodes","srcCoords","srcPt","snapVert","findSnapForVertex","snapVertices","snapSegments","distinctPtCount","snapPt","findSegmentIndexToSnap","snapIndex","allowSnappingToSourceVertices","snapGeom","extractTargetCoordinates","cleanResult","snappedGeom","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapTo","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","SNAP_PRECISION_FACTOR","snapToSelf","snapper","setAllowSnappingToSourceVertices","snapLine","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","long","bits","padStr","Long","toBinaryString","bitStr","getBit","nBits","num1","num2","invCoord","getCommonCoordinate","getCommon","xp","yp","remGeom","removeCommonBits","addCommonBits","prepGeom","overlayOp","prepareResult","union","UNION","symDifference","SYMDIFFERENCE","difference","DIFFERENCE","isSuccess","savedException","resultPointList","resultLineList","opcode","createEmptyResult","mergeSymLabels","newEdges","isCollapsed","getCollapsedEdge","overlayOpCode","computeOverlay","copyPoints","computeEdgeIntersections","baseSplitEdges","computeSplitEdges","insertUniqueEdges","computeLabelsFromDepths","replaceCollapsedEdges","labelIncompleteNodes","findResultAreaEdges","cancelDuplicateResultEdges","lineBuilder","pointBuilder","getNodeIterator","graphNode","getDelta","toLine","updateNodeLabelling","ni","labelIncompleteNode","updateLabelling","geom1","isGeometryCollection","MapOp","resultDimension","dim0","dim1","loc0","loc1","getRing","startDE","setRing","hasShell","holeER","isIncluded","adjRing","isOuterHole","getOuterHole","adjShell","isIncludedSet","setIncluded","isProcessed","findDirEdgesInRing","minShellEnv","tryShellRing","tryShellEnv","obj0","obj1","r1","iNode","computeNextCWEdges","linePts","endPt","nStart","nEnd","findLabeledEdgeRings","cutLines","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","findEdgeRing","ringEdges","intNodes","findIntersectionNodes","computeNextCCWEdges","nodesToRemove","findNodesOfDegree","dangleLines","deleteAllEdges","toNode","getDegreeNonDeleted","edgeRingStarts","currLabel","prevDE","outDE","firstOutDE","prevInDE","inDE","polygonize","validEdgeRingList","invalidRingList","getLineString","deleteDangles","deleteCutEdges","getEdgeRings","findValidRings","findShellsAndHoles","assignHolesToShells","includeAll","findDisjointShells","extractPolygons","isCheckingRingsValid","computeHole","findOuterShells","outerHoleER","setProcessed","polyList","getPolygon","holeList","assignHoleToShell","isMoreToScan","updateIncluded","eiCurr","eiNext","computeEdgeEnds","createEdgeEndForPrev","createEdgeEndForNext","foundInterior","computeLabelSide","computeLabelOn","computeLabelSides","eb","intersector","dimA","dimB","hasProper","hasProperInterior","hasProperInteriorIntersection","thisIndex","labelIsolatedEdge","computeDisjointIM","computeIntersectionNodes","copyNodesAndLabels","labelIsolatedNodes","computeProperIntersectionIM","eeBuilder","ee0","insertEdgeEnds","ee1","labelNodeEdges","labelIsolatedEdges","setLabelBoundary","labelIsolatedNode","updateIMFromEdges","ga","gb","isPointContainedInBoundary","isLineStringContainedInBoundary","isContainedInBoundary","isLineSegmentContainedInBoundary","segEnv","isSegUpwards","applyTo","ecpVisitor","riVisitor","elementEnv","rectPt","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","isRectangle","getIntersectionMatrix","isCovers","isIntersects","touches","relate","relOp","isOverlaps","crosses","isCrosses","isContains","elems","elemGeom","extractElements","combine","combiner","createList","obj2","locater","exteriorCoords","ptComp","isOfType","Class","clz","toGeometryType","geomTree","unionTree","disjointGeoms","intersectingGeoms","elem","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","STRTREE_NODE_CAPACITY","itemTree","binaryUnion","unionSafe","unionOptimized","restrictToPolygons","reduceToGeometries","common","disjointPolys","g0Int","extractByEnvelope","g1Int","unionAll","gColl","unionPoints","ptGeom","unionNoOpt","unionLines","lineGeom","unionPolygons","unionLA","unionWithNull","findDifferentPoint","findEdgeInSameDirection","findEdgeEnd","intDe","visitLinkedDirectedEdges","visitInteriorRing","startDe","setInteriorEdgesInResult","buildEdgeRings","visitShellInteriors","hasUnvisitedShellEdge","nodeIt","eeList","edgeIt","isAreaLabelsConsistent","eeb","isNodeEdgeAreaLabelsConsistent","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","findPtNotNode","errMsg","locStr","getMessage","ERROR","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","checkInvalidCoordinates","nestedTester","innerHole","isNonNested","getNestedPoint","cat","isNodeConsistentArea","getInvalidPoint","hasDuplicateRings","shellPts","holePts","shellPt","holePt","checkNoSelfIntersectingRing","cit","isInteriorsConnected","nodeSet","isFirst","pir","hasTooFewPoints","checkClosedRing","checkTooFewPoints","checkNoSelfIntersectingRings","checkClosedRings","checkConsistentArea","checkHolesInShell","checkHolesNotNested","checkConnectedInteriors","checkShellsNotNested","polyShell","badNestedPt","checkShellInsideHole","checkShellNotNested","testCoords","reducedCoords","noRepeatedCoords","minLength","collapsedCoords","geomToBuffer","changePM","bufGeom","finalGeom","geomEdit","createFactory","finalRemoveCollapsed","newPM","createEditor","inputFactory","changePrecisionModel","reducePW","reducePointwise","fixPolygonalTopology","isPointwise","reducer","setPointwise","simplifySection","tss","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","resultSegsSize","getSegments","newSeg","sectionIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","getSegment","addToResult","isValidToSimplify","getResultSize","getMinimumSize","furthestPtIndex","findFurthestPoint","hasBadIntersection","flatten","maxDist","midPt","getParentCoordinates","isInLineSection","getParent","taggedLines","tlss","taggedLine","createCoordinateSequence","getResultCoordinates","minFrac","pointAlongReverse","getConstrainedLength","minLen","encroachPt","lineSeg","midPtLen","splitSeg","projPt","projectedSplitPoint","maxSplitLen","setMinimumLength","splitAt","getSplitPoint","triArea","isInCircleDDNormalized","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","checkRobustInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","isInCircleDDFast","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","isInCircleNormalized","triAreaDDSlow","isInCircleRobust","t1","t2","hcc","nre","err","getZ","sa","crossProduct","BEHIND","magn","BEYOND","ORIGIN","DESTINATION","BETWEEN","circleCenter","edgeLength","el","ptLen","isOnConstraint","constraint","qe","equalsOriented","invRot","rot","setOrig","makeEdge","q0","q3","base","setDest","oPrev","lNext","beta","t3","t4","connect","isVertexOfEdge","isOnEdge","delete","isInCircle","lPrev","vertices","insertSite","isLive","locateFromEdge","triEdges","includeFrame","visitTriangles","getTriangleVertices","cellPts","startQE","cellPoly","locator","ea","ec","leftTri","getTriangleEdges","rightTri","vLeftTriOther","isFrameVertex","vRightTriOther","triVisitor","edgeStack","visitedEdges","fetchTriangleToVisit","getTriangles","vd","curr","edgeCount","isFrame","isFrameEdge","quadEdges","getPrimaryEdges","visitedVertices","qd","priQE","getPrimary","eSym","eRot","eRotSym","iter","maxIter","toLineSegment","dPrev","cells","getVertexUniqueEdges","getVoronoiCellPolygon","vorCells","getVoronoiCellPolygons","triPtsList","getTriangleCoordinates","tris","triPt","locEdge","triEdge","ccVertex","matchNode","findBestMatchNode","increment","insertExact","queryEnv","queryNode","currentNode","odd","discriminant","searchRight","getLeft","getRight","queryEnvelope","leafNode","isOddLevel","isLessThan","setLeft","setRight","toCoordinates","kdnodes","includeRepeated","getCount","update","addConstraintVertices","splits","enforceGabriel","MAX_SPLIT_ITER","segments","segVertices","hull","getPointArray","computeConvexHull","insertSites","getStart","getEnd","segRadius","closestNonGabriel","testRadius","splitFinder","segsToInsert","newSegments","segsToRemove","findNonGabrielPoint","findSplitPoint","splitVertex","createVertex","getStartX","getStartY","getStartZ","getEndX","getEndY","getEndZ","removeAll","setOnConstraint","vertexEnv","computeVertexEnvelope","allPointsEnv","delta","vertexFactory","computeBoundingBox","setLocator","kdnode","isRepeated","snappedV","siteEnv","toVertices","extractUniqueCoordinates","unique","coordsCopy","verts","containsKey","createVertices","createConstraintSegments","cdt","createSiteVertices","setConstraints","formInitialDelaunay","enforceConstraints","getSubdivision","constraintLines","constraintSegs","getVoronoiDiagram","clipGeometryCollection","clipEnv","clipPoly","clipped","nseg","lineComp","pointAlongSegmentByFraction","setToEnd","lastLine","getSegmentLength","lenToStart","lenToEnd","componentIndex1","segmentIndex1","segmentFraction1","getEndLocation","compareLocationValues","componentIndex0","segmentIndex0","segmentFraction0","getSegmentFraction","getSegmentIndex","indexOfFromStart","minIndex","minComponentIndex","minSegmentIndex","isEndOfLine","getSegmentStart","getSegmentEnd","segDistance","candidateComponentIndex","candidateSegmentIndex","getVertexIndex","endLoc","closestAfter","indexOfAfter","subLine","locPt","subLineLoc","indicesOf","endLine","rawPts","validCoordinateSequence","fixInvalidLines","allowRepeatedPoints","ignoreInvalidLines","setFixInvalidLines","isVertex","startSegmentIndex","lastSegmentIndex","newCoordinateArray","computeLinear","indexLow","toLowest","ptMeasure","segmentStartMeasure","segMeasureToPt","segmentNearestMeasure","projFactor","totalLength","isEndpoint","compIndex","resolveLower","forwardLength","getLocationForward","resolveHigher","positiveIndex","getStartIndex","getEndIndex","locLow","startIndex2","clampIndex","endIndex2","resolveStartLower","locationOf","isEquals","coveredBy","within","disjoint","args","_len","_key","intersectionPattern","centPt","interiorPt","getInteriorPoint","toText"],"mappings":"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","file":"dist/jsts.min.js.map","sourcesContent":["import extend from '../../../../extend';\nexport default function NumberUtil() {}\nextend(NumberUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NumberUtil;\n\t}\n});\nNumberUtil.equalsWithTolerance = function (x1, x2, tolerance) {\n\treturn Math.abs(x1 - x2) <= tolerance;\n};\n","export default function IllegalArgumentException () {}\n","export default function Double () {}\nDouble.isNaN = n => Number.isNaN(n)\nDouble.doubleToLongBits = n => n\nDouble.longBitsToDouble = n => n\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\n","export default function Comparable () {}\n","export default function Clonable () {}\n","export default function Comparator () {}\n","export default function Serializable () {}\n","export default function RuntimeException (message) {\n  this.name = 'RuntimeException'\n  this.message = message\n  this.stack = (new Error()).stack\n  Error.call(this, message)\n}\n\nRuntimeException.prototype = Object.create(Error.prototype)\nRuntimeException.prototype.constructor = Error\n","import extend from '../../../../extend';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport inherits from '../../../../inherits';\nexport default function AssertionFailedException() {\n\tif (arguments.length === 0) {\n\t\tRuntimeException.call(this);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tRuntimeException.call(this, message);\n\t}\n}\ninherits(AssertionFailedException, RuntimeException);\nextend(AssertionFailedException.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn AssertionFailedException;\n\t}\n});\n","import extend from '../../../../extend';\nimport AssertionFailedException from './AssertionFailedException';\nexport default function Assert() {}\nextend(Assert.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Assert;\n\t}\n});\nAssert.shouldNeverReachHere = function () {\n\tif (arguments.length === 0) {\n\t\tAssert.shouldNeverReachHere(null);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n\t}\n};\nAssert.isTrue = function () {\n\tif (arguments.length === 1) {\n\t\tlet assertion = arguments[0];\n\t\tAssert.isTrue(assertion, null);\n\t} else if (arguments.length === 2) {\n\t\tlet assertion = arguments[0], message = arguments[1];\n\t\tif (!assertion) {\n\t\t\tif (message === null) {\n\t\t\t\tthrow new AssertionFailedException();\n\t\t\t} else {\n\t\t\t\tthrow new AssertionFailedException(message);\n\t\t\t}\n\t\t}\n\t}\n};\nAssert.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1];\n\t\tAssert.equals(expectedValue, actualValue, null);\n\t} else if (arguments.length === 3) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2];\n\t\tif (!actualValue.equals(expectedValue)) {\n\t\t\tthrow new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\n\t\t}\n\t}\n};\n","import NumberUtil from '../util/NumberUtil';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Comparator from '../../../../java/util/Comparator';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nexport default function Coordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.z = null;\n\tif (arguments.length === 0) {\n\t\tCoordinate.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet c = arguments[0];\n\t\tCoordinate.call(this, c.x, c.y, c.z);\n\t} else if (arguments.length === 2) {\n\t\tlet x = arguments[0], y = arguments[1];\n\t\tCoordinate.call(this, x, y, Coordinate.NULL_ORDINATE);\n\t} else if (arguments.length === 3) {\n\t\tlet x = arguments[0], y = arguments[1], z = arguments[2];\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n}\nextend(Coordinate.prototype, {\n\tsetOrdinate: function (ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Y:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Z:\n\t\t\t\tthis.z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t\t}\n\t},\n\tequals2D: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tif (this.x !== other.x) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.y !== other.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet c = arguments[0], tolerance = arguments[1];\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetOrdinate: function (ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\treturn this.x;\n\t\t\tcase Coordinate.Y:\n\t\t\t\treturn this.y;\n\t\t\tcase Coordinate.Z:\n\t\t\t\treturn this.z;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t},\n\tequals3D: function (other) {\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Coordinate)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.equals2D(other);\n\t},\n\tequalInZ: function (c, tolerance) {\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this.x < other.x) return -1;\n\t\tif (this.x > other.x) return 1;\n\t\tif (this.y < other.y) return -1;\n\t\tif (this.y > other.y) return 1;\n\t\treturn 0;\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\tvar coord = null;\n\t\t\treturn coord;\n\t\t} catch (e) {\n\t\t\tif (e instanceof CloneNotSupportedException) {\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n\t\t\t\treturn null;\n\t\t\t} else throw e;\n\t\t} finally {}\n\t},\n\tcopy: function () {\n\t\treturn new Coordinate(this);\n\t},\n\ttoString: function () {\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n\t},\n\tdistance3D: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\tvar dz = this.z - c.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t},\n\tdistance: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\n\t\treturn result;\n\t},\n\tsetCoordinate: function (other) {\n\t\tthis.x = other.x;\n\t\tthis.y = other.y;\n\t\tthis.z = other.z;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Cloneable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Coordinate;\n\t}\n});\nCoordinate.hashCode = function () {\n\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\tlet x = arguments[0];\n\t\tvar f = Double.doubleToLongBits(x);\n\t\treturn Math.trunc(f ^ f >>> 32);\n\t}\n};\nfunction DimensionalComparator() {\n\tthis._dimensionsToTest = 2;\n\tif (arguments.length === 0) {\n\t\tDimensionalComparator.call(this, 2);\n\t} else if (arguments.length === 1) {\n\t\tlet dimensionsToTest = arguments[0];\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n\t\tthis._dimensionsToTest = dimensionsToTest;\n\t}\n}\nextend(DimensionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar c1 = o1;\n\t\tvar c2 = o2;\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\n\t\tif (compX !== 0) return compX;\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\n\t\tif (compY !== 0) return compY;\n\t\tif (this._dimensionsToTest <= 2) return 0;\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\n\t\treturn compZ;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn DimensionalComparator;\n\t}\n});\nDimensionalComparator.compare = function (a, b) {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\tif (Double.isNaN(a)) {\n\t\tif (Double.isNaN(b)) return 0;\n\t\treturn -1;\n\t}\n\tif (Double.isNaN(b)) return 1;\n\treturn 0;\n};\nCoordinate.DimensionalComparator = DimensionalComparator;\nCoordinate.serialVersionUID = 6683108902428366910;\nCoordinate.NULL_ORDINATE = Double.NaN;\nCoordinate.X = 0;\nCoordinate.Y = 1;\nCoordinate.Z = 2;\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default function Iterator() {};\n\n/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */\nIterator.prototype.hasNext = function() {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function() {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function() {};\n","import Iterator from './Iterator'\n\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nexport default function Collection() {};\n\n/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.add = function() {};\n\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function() {};\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function() {};\n\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function() {};\n\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function() {};\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function IndexOutOfBoundsException(message) {\n  this.message = message || '';\n};\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nexport default function List() { };\nList.prototype = Object.create(Collection.prototype);\nList.prototype.constructor = List\n\n/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */\nList.prototype.get = function() { };\n\n\n/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */\nList.prototype.set = function() { };\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nList.prototype.isEmpty = function() { };\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function NoSuchElementException(message) {\n  this.message = message || '';\n};\nNoSuchElementException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function OperationNotSupported(message) {\n  this.message = message || '';\n};\nOperationNotSupported.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n","import Collection from './Collection'\nimport IndexOutOfBoundsException from './IndexOutOfBoundsException'\nimport Iterator from './Iterator'\nimport List from './List'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nexport default function ArrayList () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nArrayList.prototype = Object.create(List.prototype)\nArrayList.prototype.constructor = ArrayList;\n\nArrayList.prototype.ensureCapacity = function () {}\nArrayList.prototype.interfaces_ = function () { return [List, Collection] }\n\n/**\n * @override\n */\nArrayList.prototype.add = function(e) {\n  if (arguments.length === 1) {\n    this.array_.push(e)\n  } else {\n    this.array_.splice(arguments[0], arguments[1])\n  }\n  return true\n};\n\nArrayList.prototype.clear = function() {\n  this.array_ = []\n}\n\n/**\n * @override\n */\nArrayList.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.set = function(index, element) {\n  var oldElement = this.array_[index];\n  this.array_[index] = element;\n  return oldElement;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.remove = function(o) {\n  var found = false;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1);\n      found = true;\n      break;\n    }\n  }\n\n  return found;\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = function(arrayList) {\n  /**\n   * @type {ArrayList}\n   * @private\n  */\n  this.arrayList_ = arrayList;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.arrayList_.get(this.position_++);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.arrayList_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * TODO: should be in ListIterator\n * @override\n */\nIterator_.prototype.set = function(element) {\n  return this.arrayList_.set(this.position_ - 1, element);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\n};\n","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function CoordinateList() {\n\tArrayList.apply(this);\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet coord = arguments[0];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, true);\n\t} else if (arguments.length === 2) {\n\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, allowRepeated);\n\t}\n}\ninherits(CoordinateList, ArrayList);\nextend(CoordinateList.prototype, {\n\tgetCoordinate: function (i) {\n\t\treturn this.get(i);\n\t},\n\taddAll: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"boolean\" && hasInterface(arguments[0], Collection))) {\n\t\t\tlet coll = arguments[0], allowRepeated = arguments[1];\n\t\t\tvar isChanged = false;\n\t\t\tfor (var i = coll.iterator(); i.hasNext(); ) {\n\t\t\t\tthis.add(i.next(), allowRepeated);\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\treturn isChanged;\n\t\t} else return ArrayList.prototype.addAll.apply(this, arguments);\n\t},\n\tclone: function () {\n\t\tvar clone = ArrayList.prototype.clone.call(this);\n\t\tfor (var i = 0; i < this.size(); i++) {\n\t\t\tclone.add(i, this.get(i).clone());\n\t\t}\n\t\treturn clone;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this.toArray(CoordinateList.coordArrayType);\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet coord = arguments[0];\n\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(coord, allowRepeated, true);\n\t\t\t\treturn true;\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tif (this.size() >= 1) {\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\n\t\t\t\t\t\tif (last.equals2D(coord)) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet obj = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(obj, allowRepeated);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\")) {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2];\n\t\t\t\tif (direction) {\n\t\t\t\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = coord.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n\t\t\t\tlet i = arguments[0], coord = arguments[1], allowRepeated = arguments[2];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tvar size = this.size();\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\tvar prev = this.get(i - 1);\n\t\t\t\t\t\t\tif (prev.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < size) {\n\t\t\t\t\t\t\tvar next = this.get(i);\n\t\t\t\t\t\t\tif (next.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, i, coord);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3];\n\t\t\tvar inc = 1;\n\t\t\tif (start > end) inc = -1;\n\t\t\tfor (var i = start; i !== end; i += inc) {\n\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tcloseRing: function () {\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateList;\n\t}\n});\nCoordinateList.coordArrayType = new Array(0).fill(null);\n","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function Envelope() {\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tif (arguments.length === 0) {\n\t\tthis.init();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\tlet env = arguments[0];\n\t\t\tthis.init(env);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t} else if (arguments.length === 4) {\n\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\tthis.init(x1, x2, y1, y2);\n\t}\n}\nextend(Envelope.prototype, {\n\tgetArea: function () {\n\t\treturn this.getWidth() * this.getHeight();\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Envelope)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherEnvelope = other;\n\t\tif (this.isNull()) {\n\t\t\treturn otherEnvelope.isNull();\n\t\t}\n\t\treturn this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY();\n\t},\n\tintersection: function (env) {\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n\t\tvar intMinX = this._minx > env._minx ? this._minx : env._minx;\n\t\tvar intMinY = this._miny > env._miny ? this._miny : env._miny;\n\t\tvar intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n\t\tvar intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n\t},\n\tisNull: function () {\n\t\treturn this._maxx < this._minx;\n\t},\n\tgetMaxX: function () {\n\t\treturn this._maxx;\n\t},\n\tcovers: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy;\n\t\t}\n\t},\n\tintersects: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.intersects(p.x, p.y);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\t\tlet a = arguments[0], b = arguments[1];\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar envminx = a.x < b.x ? a.x : b.x;\n\t\t\t\tif (envminx > this._maxx) return false;\n\t\t\t\tvar envmaxx = a.x > b.x ? a.x : b.x;\n\t\t\t\tif (envmaxx < this._minx) return false;\n\t\t\t\tvar envminy = a.y < b.y ? a.y : b.y;\n\t\t\t\tif (envminy > this._maxy) return false;\n\t\t\t\tvar envmaxy = a.y > b.y ? a.y : b.y;\n\t\t\t\tif (envmaxy < this._miny) return false;\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\t\tif (this.isNull()) return false;\n\t\t\t\treturn !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny);\n\t\t\t}\n\t\t}\n\t},\n\tgetMinY: function () {\n\t\treturn this._miny;\n\t},\n\tgetMinX: function () {\n\t\treturn this._minx;\n\t},\n\texpandToInclude: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.expandToInclude(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (other.isNull()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\tthis._minx = other.getMinX();\n\t\t\t\t\tthis._maxx = other.getMaxX();\n\t\t\t\t\tthis._miny = other.getMinY();\n\t\t\t\t\tthis._maxy = other.getMaxY();\n\t\t\t\t} else {\n\t\t\t\t\tif (other._minx < this._minx) {\n\t\t\t\t\t\tthis._minx = other._minx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxx > this._maxx) {\n\t\t\t\t\t\tthis._maxx = other._maxx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._miny < this._miny) {\n\t\t\t\t\t\tthis._miny = other._miny;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxy > this._maxy) {\n\t\t\t\t\t\tthis._maxy = other._maxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) {\n\t\t\t\tthis._minx = x;\n\t\t\t\tthis._maxx = x;\n\t\t\t\tthis._miny = y;\n\t\t\t\tthis._maxy = y;\n\t\t\t} else {\n\t\t\t\tif (x < this._minx) {\n\t\t\t\t\tthis._minx = x;\n\t\t\t\t}\n\t\t\t\tif (x > this._maxx) {\n\t\t\t\t\tthis._maxx = x;\n\t\t\t\t}\n\t\t\t\tif (y < this._miny) {\n\t\t\t\t\tthis._miny = y;\n\t\t\t\t}\n\t\t\t\tif (y > this._maxy) {\n\t\t\t\t\tthis._maxy = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tminExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w < h) return w;\n\t\treturn h;\n\t},\n\tgetWidth: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxx - this._minx;\n\t},\n\tcompareTo: function (o) {\n\t\tvar env = o;\n\t\tif (this.isNull()) {\n\t\t\tif (env.isNull()) return 0;\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (env.isNull()) return 1;\n\t\t}\n\t\tif (this._minx < env._minx) return -1;\n\t\tif (this._minx > env._minx) return 1;\n\t\tif (this._miny < env._miny) return -1;\n\t\tif (this._miny > env._miny) return 1;\n\t\tif (this._maxx < env._maxx) return -1;\n\t\tif (this._maxx > env._maxx) return 1;\n\t\tif (this._maxy < env._maxy) return -1;\n\t\tif (this._maxy > env._maxy) return 1;\n\t\treturn 0;\n\t},\n\ttranslate: function (transX, transY) {\n\t\tif (this.isNull()) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n\t},\n\ttoString: function () {\n\t\treturn \"Env[\" + this._minx + \" : \" + this._maxx + \", \" + this._miny + \" : \" + this._maxy + \"]\";\n\t},\n\tsetToNull: function () {\n\t\tthis._minx = 0;\n\t\tthis._maxx = -1;\n\t\tthis._miny = 0;\n\t\tthis._maxy = -1;\n\t},\n\tgetHeight: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxy - this._miny;\n\t},\n\tmaxExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w > h) return w;\n\t\treturn h;\n\t},\n\texpandBy: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\tthis.expandBy(distance, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deltaX = arguments[0], deltaY = arguments[1];\n\t\t\tif (this.isNull()) return null;\n\t\t\tthis._minx -= deltaX;\n\t\t\tthis._maxx += deltaX;\n\t\t\tthis._miny -= deltaY;\n\t\t\tthis._maxy += deltaY;\n\t\t\tif (this._minx > this._maxx || this._miny > this._maxy) this.setToNull();\n\t\t}\n\t},\n\tcontains: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\treturn this.covers(other);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\treturn this.covers(x, y);\n\t\t}\n\t},\n\tcentre: function () {\n\t\tif (this.isNull()) return null;\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.setToNull();\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet env = arguments[0];\n\t\t\t\tthis._minx = env._minx;\n\t\t\t\tthis._maxx = env._maxx;\n\t\t\t\tthis._miny = env._miny;\n\t\t\t\tthis._maxy = env._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\t\tif (x1 < x2) {\n\t\t\t\tthis._minx = x1;\n\t\t\t\tthis._maxx = x2;\n\t\t\t} else {\n\t\t\t\tthis._minx = x2;\n\t\t\t\tthis._maxx = x1;\n\t\t\t}\n\t\t\tif (y1 < y2) {\n\t\t\t\tthis._miny = y1;\n\t\t\t\tthis._maxy = y2;\n\t\t\t} else {\n\t\t\t\tthis._miny = y2;\n\t\t\t\tthis._maxy = y1;\n\t\t\t}\n\t\t}\n\t},\n\tgetMaxY: function () {\n\t\treturn this._maxy;\n\t},\n\tdistance: function (env) {\n\t\tif (this.intersects(env)) return 0;\n\t\tvar dx = 0.0;\n\t\tif (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx;\n\t\tvar dy = 0.0;\n\t\tif (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy;\n\t\tif (dx === 0.0) return dy;\n\t\tif (dy === 0.0) return dx;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this._minx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._miny);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxy);\n\t\treturn result;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Envelope;\n\t}\n});\nEnvelope.intersects = function () {\n\tif (arguments.length === 3) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q = arguments[2];\n\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar minq = Math.min(q1.x, q2.x);\n\t\tvar maxq = Math.max(q1.x, q2.x);\n\t\tvar minp = Math.min(p1.x, p2.x);\n\t\tvar maxp = Math.max(p1.x, p2.x);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\tminq = Math.min(q1.y, q2.y);\n\t\tmaxq = Math.max(q1.y, q2.y);\n\t\tminp = Math.min(p1.y, p2.y);\n\t\tmaxp = Math.max(p1.y, p2.y);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\treturn true;\n\t}\n};\nEnvelope.serialVersionUID = 5873921885273102420;\n","export default function Exception () {}\n","import extend from '../../../../extend';\nimport Exception from '../../../../java/lang/Exception';\nimport inherits from '../../../../inherits';\nexport default function NotRepresentableException() {\n\tException.call(this, \"Projective point not representable on the Cartesian plane.\");\n}\ninherits(NotRepresentableException, Exception);\nextend(NotRepresentableException.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NotRepresentableException;\n\t}\n});\n","export default function StringBuffer (str) {\n  this.str = str\n}\n\nStringBuffer.prototype.append = function (e) {\n  this.str += e\n}\n\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n}\n\nStringBuffer.prototype.toString = function (e) {\n  return this.str\n}\n","export default function Integer (value) {\n  this.value = value\n}\n\nInteger.prototype.intValue = function () {\n  return this.value\n}\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1\n  if (this.value > o) return 1\n  return 0\n}\n\nInteger.isNaN = n => Number.isNaN(n)\n","export default function Character () {}\nCharacter.isWhitespace = c => ((c <= 32 && c >= 0) || c == 127)\nCharacter.toUpperCase = c => c.toUpperCase()\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Character from '../../../../java/lang/Character';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function DD() {\n\tthis._hi = 0.0;\n\tthis._lo = 0.0;\n\tif (arguments.length === 0) {\n\t\tthis.init(0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet x = arguments[0];\n\t\t\tthis.init(x);\n\t\t} else if (arguments[0] instanceof DD) {\n\t\t\tlet dd = arguments[0];\n\t\t\tthis.init(dd);\n\t\t} else if (typeof arguments[0] === \"string\") {\n\t\t\tlet str = arguments[0];\n\t\t\tDD.call(this, DD.parse(str));\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet hi = arguments[0], lo = arguments[1];\n\t\tthis.init(hi, lo);\n\t}\n}\nextend(DD.prototype, {\n\tle: function (y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo;\n\t},\n\textractSignificantDigits: function (insertDecimalPoint, magnitude) {\n\t\tvar y = this.abs();\n\t\tvar mag = DD.magnitude(y._hi);\n\t\tvar scale = DD.TEN.pow(mag);\n\t\ty = y.divide(scale);\n\t\tif (y.gt(DD.TEN)) {\n\t\t\ty = y.divide(DD.TEN);\n\t\t\tmag += 1;\n\t\t} else if (y.lt(DD.ONE)) {\n\t\t\ty = y.multiply(DD.TEN);\n\t\t\tmag -= 1;\n\t\t}\n\t\tvar decimalPointPos = mag + 1;\n\t\tvar buf = new StringBuffer();\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\n\t\tfor (var i = 0; i <= numDigits; i++) {\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\n\t\t\t\tbuf.append('.');\n\t\t\t}\n\t\t\tvar digit = Math.trunc(y._hi);\n\t\t\tif (digit < 0 || digit > 9) {}\n\t\t\tif (digit < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar rebiasBy10 = false;\n\t\t\tvar digitChar = 0;\n\t\t\tif (digit > 9) {\n\t\t\t\trebiasBy10 = true;\n\t\t\t\tdigitChar = '9';\n\t\t\t} else {\n\t\t\t\tdigitChar = '0' + digit;\n\t\t\t}\n\t\t\tbuf.append(digitChar);\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\n\t\t\tvar continueExtractingDigits = true;\n\t\t\tvar remMag = DD.magnitude(y._hi);\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n\t\t\tif (!continueExtractingDigits) break;\n\t\t}\n\t\tmagnitude[0] = mag;\n\t\treturn buf.toString();\n\t},\n\tsqr: function () {\n\t\treturn this.multiply(this);\n\t},\n\tdoubleValue: function () {\n\t\treturn this._hi + this._lo;\n\t},\n\tsubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(y.negate());\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(-y);\n\t\t}\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this._hi === y._hi && this._lo === y._lo;\n\t\t}\n\t},\n\tisZero: function () {\n\t\treturn this._hi === 0.0 && this._lo === 0.0;\n\t},\n\tselfSubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y._hi, -y._lo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y, 0.0);\n\t\t}\n\t},\n\tgetSpecialNumberString: function () {\n\t\tif (this.isZero()) return \"0.0\";\n\t\tif (this.isNaN()) return \"NaN \";\n\t\treturn null;\n\t},\n\tmin: function (x) {\n\t\tif (this.le(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tselfDivide: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / yhi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * yhi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - yhi;\n\t\t\tU = C * yhi;\n\t\t\thy = u - hy;\n\t\t\tty = yhi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * ylo) / yhi;\n\t\t\tu = C + c;\n\t\t\tthis._hi = u;\n\t\t\tthis._lo = C - u + c;\n\t\t\treturn this;\n\t\t}\n\t},\n\tdump: function () {\n\t\treturn \"DD<\" + this._hi + \", \" + this._lo + \">\";\n\t},\n\tdivide: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / y._hi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * y._hi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - y._hi;\n\t\t\tU = C * y._hi;\n\t\t\thy = u - hy;\n\t\t\tty = y._hi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n\t\t\tu = C + c;\n\t\t\tvar zhi = u;\n\t\t\tvar zlo = C - u + c;\n\t\t\treturn new DD(zhi, zlo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfDivide(y, 0.0);\n\t\t}\n\t},\n\tge: function (y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo;\n\t},\n\tpow: function (exp) {\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\n\t\tvar r = new DD(this);\n\t\tvar s = DD.valueOf(1.0);\n\t\tvar n = Math.abs(exp);\n\t\tif (n > 1) {\n\t\t\twhile (n > 0) {\n\t\t\t\tif (n % 2 === 1) {\n\t\t\t\t\ts.selfMultiply(r);\n\t\t\t\t}\n\t\t\t\tn /= 2;\n\t\t\t\tif (n > 0) r = r.sqr();\n\t\t\t}\n\t\t} else {\n\t\t\ts = r;\n\t\t}\n\t\tif (exp < 0) return s.reciprocal();\n\t\treturn s;\n\t},\n\tceil: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.ceil(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.ceil(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this._hi < other._hi) return -1;\n\t\tif (this._hi > other._hi) return 1;\n\t\tif (this._lo < other._lo) return -1;\n\t\tif (this._lo > other._lo) return 1;\n\t\treturn 0;\n\t},\n\trint: function () {\n\t\tif (this.isNaN()) return this;\n\t\tvar plus5 = this.add(0.5);\n\t\treturn plus5.floor();\n\t},\n\tsetValue: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t}\n\t},\n\tmax: function (x) {\n\t\tif (this.ge(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tsqrt: function () {\n\t\tif (this.isZero()) return DD.valueOf(0.0);\n\t\tif (this.isNegative()) {\n\t\t\treturn DD.NaN;\n\t\t}\n\t\tvar x = 1.0 / Math.sqrt(this._hi);\n\t\tvar ax = this._hi * x;\n\t\tvar axdd = DD.valueOf(ax);\n\t\tvar diffSq = this.subtract(axdd.sqr());\n\t\tvar d2 = diffSq._hi * (x * 0.5);\n\t\treturn axdd.add(d2);\n\t},\n\tselfAdd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfAdd(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\tvar H = null, h = null, S = null, s = null, e = null, f = null;\n\t\t\t\tS = this._hi + y;\n\t\t\t\te = S - this._hi;\n\t\t\t\ts = S - e;\n\t\t\t\ts = y - e + (this._hi - s);\n\t\t\t\tf = s + this._lo;\n\t\t\t\tH = S + f;\n\t\t\t\th = f + (S - H);\n\t\t\t\tthis._hi = H + h;\n\t\t\t\tthis._lo = h + (H - this._hi);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null;\n\t\t\tS = this._hi + yhi;\n\t\t\tT = this._lo + ylo;\n\t\t\te = S - this._hi;\n\t\t\tf = T - this._lo;\n\t\t\ts = S - e;\n\t\t\tt = T - f;\n\t\t\ts = yhi - e + (this._hi - s);\n\t\t\tt = ylo - f + (this._lo - t);\n\t\t\te = s + T;\n\t\t\tH = S + e;\n\t\t\th = e + (S - H);\n\t\t\te = t + h;\n\t\t\tvar zhi = H + e;\n\t\t\tvar zlo = e + (H - zhi);\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfMultiply: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hx = null, tx = null, hy = null, ty = null, C = null, c = null;\n\t\t\tC = DD.SPLIT * this._hi;\n\t\t\thx = C - this._hi;\n\t\t\tc = DD.SPLIT * yhi;\n\t\t\thx = C - hx;\n\t\t\ttx = this._hi - hx;\n\t\t\thy = c - yhi;\n\t\t\tC = this._hi * yhi;\n\t\t\thy = c - hy;\n\t\t\tty = yhi - hy;\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n\t\t\tvar zhi = C + c;\n\t\t\thx = C - zhi;\n\t\t\tvar zlo = c + hx;\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfSqr: function () {\n\t\treturn this.selfMultiply(this);\n\t},\n\tfloor: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.floor(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.floor(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tnegate: function () {\n\t\tif (this.isNaN()) return this;\n\t\treturn new DD(-this._hi, -this._lo);\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CloneNotSupportedException) {\n\t\t\t\treturn null;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tmultiply: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (y.isNaN()) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y, 0.0);\n\t\t}\n\t},\n\tisNaN: function () {\n\t\treturn Double.isNaN(this._hi);\n\t},\n\tintValue: function () {\n\t\treturn Math.trunc(this._hi);\n\t},\n\ttoString: function () {\n\t\tvar mag = DD.magnitude(this._hi);\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\n\t\treturn this.toSciNotation();\n\t},\n\ttoStandardNotation: function () {\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\n\t\tvar decimalPointPos = magnitude[0] + 1;\n\t\tvar num = sigDigits;\n\t\tif (sigDigits.charAt(0) === '.') {\n\t\t\tnum = \"0\" + sigDigits;\n\t\t} else if (decimalPointPos < 0) {\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n\t\t} else if (sigDigits.indexOf('.') === -1) {\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\n\t\t\tnum = sigDigits + zeroes + \".0\";\n\t\t}\n\t\tif (this.isNegative()) return \"-\" + num;\n\t\treturn num;\n\t},\n\treciprocal: function () {\n\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\tC = 1.0 / this._hi;\n\t\tc = DD.SPLIT * C;\n\t\thc = c - C;\n\t\tu = DD.SPLIT * this._hi;\n\t\thc = c - hc;\n\t\ttc = C - hc;\n\t\thy = u - this._hi;\n\t\tU = C * this._hi;\n\t\thy = u - hy;\n\t\tty = this._hi - hy;\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\tc = (1.0 - U - u - C * this._lo) / this._hi;\n\t\tvar zhi = C + c;\n\t\tvar zlo = C - zhi + c;\n\t\treturn new DD(zhi, zlo);\n\t},\n\ttoSciNotation: function () {\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\t\tif (digits.charAt(0) === '0') {\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\n\t\t}\n\t\tvar trailingDigits = \"\";\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n\t\treturn digitsWithDecimal + expStr;\n\t},\n\tabs: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isNegative()) return this.negate();\n\t\treturn new DD(this);\n\t},\n\tisPositive: function () {\n\t\treturn this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0;\n\t},\n\tlt: function (y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo < y._lo;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t}\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\tthis._hi = x;\n\t\t\t\tthis._lo = 0.0;\n\t\t\t} else if (arguments[0] instanceof DD) {\n\t\t\t\tlet dd = arguments[0];\n\t\t\t\tthis._hi = dd._hi;\n\t\t\t\tthis._lo = dd._lo;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet hi = arguments[0], lo = arguments[1];\n\t\t\tthis._hi = hi;\n\t\t\tthis._lo = lo;\n\t\t}\n\t},\n\tgt: function (y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo > y._lo;\n\t},\n\tisNegative: function () {\n\t\treturn this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0;\n\t},\n\ttrunc: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isPositive()) return this.floor(); else return this.ceil();\n\t},\n\tsignum: function () {\n\t\tif (this._hi > 0) return 1;\n\t\tif (this._hi < 0) return -1;\n\t\tif (this._lo > 0) return 1;\n\t\tif (this._lo < 0) return -1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable, Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn DD;\n\t}\n});\nDD.sqr = function (x) {\n\treturn DD.valueOf(x).selfMultiply(x);\n};\nDD.valueOf = function () {\n\tif (typeof arguments[0] === \"string\") {\n\t\tlet str = arguments[0];\n\t\treturn DD.parse(str);\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tlet x = arguments[0];\n\t\treturn new DD(x);\n\t}\n};\nDD.sqrt = function (x) {\n\treturn DD.valueOf(x).sqrt();\n};\nDD.parse = function (str) {\n\tvar i = 0;\n\tvar strlen = str.length;\n\twhile (Character.isWhitespace(str.charAt(i))) i++;\n\tvar isNegative = false;\n\tif (i < strlen) {\n\t\tvar signCh = str.charAt(i);\n\t\tif (signCh === '-' || signCh === '+') {\n\t\t\ti++;\n\t\t\tif (signCh === '-') isNegative = true;\n\t\t}\n\t}\n\tvar val = new DD();\n\tvar numDigits = 0;\n\tvar numBeforeDec = 0;\n\tvar exp = 0;\n\twhile (true) {\n\t\tif (i >= strlen) break;\n\t\tvar ch = str.charAt(i);\n\t\ti++;\n\t\tif (Character.isDigit(ch)) {\n\t\t\tvar d = ch - '0';\n\t\t\tval.selfMultiply(DD.TEN);\n\t\t\tval.selfAdd(d);\n\t\t\tnumDigits++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === '.') {\n\t\t\tnumBeforeDec = numDigits;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === 'e' || ch === 'E') {\n\t\t\tvar expStr = str.substring(i);\n\t\t\ttry {\n\t\t\t\texp = Integer.parseInt(expStr);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof NumberFormatException) {\n\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t\tbreak;\n\t\t}\n\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n\t}\n\tvar val2 = val;\n\tvar numDecPlaces = numDigits - numBeforeDec - exp;\n\tif (numDecPlaces === 0) {\n\t\tval2 = val;\n\t} else if (numDecPlaces > 0) {\n\t\tvar scale = DD.TEN.pow(numDecPlaces);\n\t\tval2 = val.divide(scale);\n\t} else if (numDecPlaces < 0) {\n\t\tvar scale = DD.TEN.pow(-numDecPlaces);\n\t\tval2 = val.multiply(scale);\n\t}\n\tif (isNegative) {\n\t\treturn val2.negate();\n\t}\n\treturn val2;\n};\nDD.createNaN = function () {\n\treturn new DD(Double.NaN, Double.NaN);\n};\nDD.copy = function (dd) {\n\treturn new DD(dd);\n};\nDD.magnitude = function (x) {\n\tvar xAbs = Math.abs(x);\n\tvar xLog10 = Math.log(xAbs) / Math.log(10);\n\tvar xMag = Math.trunc(Math.floor(xLog10));\n\tvar xApprox = Math.pow(10, xMag);\n\tif (xApprox * 10 <= xAbs) xMag += 1;\n\treturn xMag;\n};\nDD.stringOfChar = function (ch, len) {\n\tvar buf = new StringBuffer();\n\tfor (var i = 0; i < len; i++) {\n\t\tbuf.append(ch);\n\t}\n\treturn buf.toString();\n};\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\nDD.NaN = new DD(Double.NaN, Double.NaN);\nDD.EPS = 1.23259516440783e-32;\nDD.SPLIT = 134217729.0;\nDD.MAX_PRINT_DIGITS = 32;\nDD.TEN = DD.valueOf(10.0);\nDD.ONE = DD.valueOf(1.0);\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\nDD.SCI_NOT_ZERO = \"0.0E0\";\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport DD from '../math/DD';\nexport default function CGAlgorithmsDD() {}\nextend(CGAlgorithmsDD.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CGAlgorithmsDD;\n\t}\n});\nCGAlgorithmsDD.orientationIndex = function (p1, p2, q) {\n\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n\tif (index <= 1) return index;\n\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n};\nCGAlgorithmsDD.signOfDet2x2 = function () {\n\tif (arguments[0] instanceof DD) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3];\n\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\treturn det.signum();\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tlet dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3];\n\t\tvar x1 = DD.valueOf(dx1);\n\t\tvar y1 = DD.valueOf(dy1);\n\t\tvar x2 = DD.valueOf(dx2);\n\t\tvar y2 = DD.valueOf(dy2);\n\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\treturn det.signum();\n\t}\n};\nCGAlgorithmsDD.intersection = function (p1, p2, q1, q2) {\n\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n\tvar denom = denom1.subtract(denom2);\n\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numx = numx1.subtract(numx2);\n\tvar fracP = numx.selfDivide(denom).doubleValue();\n\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numy = numy1.subtract(numy2);\n\tvar fracQ = numy.selfDivide(denom).doubleValue();\n\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n\treturn new Coordinate(x, y);\n};\nCGAlgorithmsDD.orientationIndexFilter = function (pa, pb, pc) {\n\tvar detsum = null;\n\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\n\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\n\tvar det = detleft - detright;\n\tif (detleft > 0.0) {\n\t\tif (detright <= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = detleft + detright;\n\t\t}\n\t} else if (detleft < 0.0) {\n\t\tif (detright >= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = -detleft - detright;\n\t\t}\n\t} else {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\tif (det >= errbound || -det >= errbound) {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\treturn 2;\n};\nCGAlgorithmsDD.signum = function (x) {\n\tif (x > 0) return 1;\n\tif (x < 0) return -1;\n\treturn 0;\n};\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nexport default function Orientation() {}\nextend(Orientation.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Orientation;\n\t}\n});\nOrientation.index = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nOrientation.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = Orientation.index(prev, hiPt, next);\n\tvar isCCW = null;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nOrientation.CLOCKWISE = -1;\nOrientation.RIGHT = Orientation.CLOCKWISE;\nOrientation.COUNTERCLOCKWISE = 1;\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE;\nOrientation.COLLINEAR = 0;\nOrientation.STRAIGHT = Orientation.COLLINEAR;\n","export default function System () { }\n\nSystem.arraycopy = (src, srcPos, dest, destPos, len) => {\n  let c = 0\n  for (let i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i]\n    c++\n  }\n}\n\nSystem.getProperty = (name) => {\n  return {\n    'line.separator': '\\n'\n  }[name]\n}\n","import NotRepresentableException from './NotRepresentableException';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function HCoordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.w = null;\n\tif (arguments.length === 0) {\n\t\tthis.x = 0.0;\n\t\tthis.y = 0.0;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 1) {\n\t\tlet p = arguments[0];\n\t\tthis.x = p.x;\n\t\tthis.y = p.y;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 2) {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tlet _x = arguments[0], _y = arguments[1];\n\t\t\tthis.x = _x;\n\t\t\tthis.y = _y;\n\t\t\tthis.w = 1.0;\n\t\t} else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y * p2.w - p2.y * p1.w;\n\t\t\tthis.y = p2.x * p1.w - p1.x * p2.w;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y - p2.y;\n\t\t\tthis.y = p2.x - p1.x;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _w = arguments[2];\n\t\tthis.x = _x;\n\t\tthis.y = _y;\n\t\tthis.w = _w;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar px = p1.y - p2.y;\n\t\tvar py = p2.x - p1.x;\n\t\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\t\tvar qx = q1.y - q2.y;\n\t\tvar qy = q2.x - q1.x;\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\t\tthis.x = py * qw - qy * pw;\n\t\tthis.y = qx * pw - px * qw;\n\t\tthis.w = px * qy - qx * py;\n\t}\n}\nextend(HCoordinate.prototype, {\n\tgetY: function () {\n\t\tvar a = this.y / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetX: function () {\n\t\tvar a = this.x / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetCoordinate: function () {\n\t\tvar p = new Coordinate();\n\t\tp.x = this.getX();\n\t\tp.y = this.getY();\n\t\treturn p;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HCoordinate;\n\t}\n});\nHCoordinate.intersection = function (p1, p2, q1, q2) {\n\tvar px = p1.y - p2.y;\n\tvar py = p2.x - p1.x;\n\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\tvar qx = q1.y - q2.y;\n\tvar qy = q2.x - q1.x;\n\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\tvar x = py * qw - qy * pw;\n\tvar y = qx * pw - px * qw;\n\tvar w = px * qy - qx * py;\n\tvar xInt = x / w;\n\tvar yInt = y / w;\n\tif (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n\t\tthrow new NotRepresentableException();\n\t}\n\treturn new Coordinate(xInt, yInt);\n};\n","import Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function MathUtil() {}\nextend(MathUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MathUtil;\n\t}\n});\nMathUtil.log10 = function (x) {\n\tvar ln = Math.log(x);\n\tif (Double.isInfinite(ln)) return ln;\n\tif (Double.isNaN(ln)) return ln;\n\treturn ln / MathUtil.LOG_10;\n};\nMathUtil.min = function (v1, v2, v3, v4) {\n\tvar min = v1;\n\tif (v2 < min) min = v2;\n\tif (v3 < min) min = v3;\n\tif (v4 < min) min = v4;\n\treturn min;\n};\nMathUtil.clamp = function () {\n\tif (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\")) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t} else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t}\n};\nMathUtil.wrap = function (index, max) {\n\tif (index < 0) {\n\t\treturn max - -index % max;\n\t}\n\treturn index % max;\n};\nMathUtil.max = function () {\n\tif (arguments.length === 3) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\treturn max;\n\t} else if (arguments.length === 4) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\tif (v4 > max) max = v4;\n\t\treturn max;\n\t}\n};\nMathUtil.average = function (x1, x2) {\n\treturn (x1 + x2) / 2.0;\n};\nMathUtil.LOG_10 = Math.log(10);\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport Envelope from '../geom/Envelope';\nexport default function Distance() {}\nextend(Distance.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Distance;\n\t}\n});\nDistance.segmentToSegment = function (A, B, C, D) {\n\tif (A.equals(B)) return Distance.pointToSegment(A, C, D);\n\tif (C.equals(D)) return Distance.pointToSegment(D, A, B);\n\tvar noIntersection = false;\n\tif (!Envelope.intersects(A, B, C, D)) {\n\t\tnoIntersection = true;\n\t} else {\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\tif (denom === 0) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\tvar s = s_num / denom;\n\t\t\tvar r = r_num / denom;\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\tnoIntersection = true;\n\t\t\t}\n\t\t}\n\t}\n\tif (noIntersection) {\n\t\treturn MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B));\n\t}\n\treturn 0.0;\n};\nDistance.pointToSegment = function (p, A, B) {\n\tif (A.x === B.x && A.y === B.y) return p.distance(A);\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n\tif (r <= 0.0) return p.distance(A);\n\tif (r >= 1.0) return p.distance(B);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nDistance.pointToLinePerpendicular = function (p, A, B) {\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nDistance.pointToSegmentString = function (p, line) {\n\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\tvar minDistance = p.distance(line[0]);\n\tfor (var i = 0; i < line.length - 1; i++) {\n\t\tvar dist = Distance.pointToSegment(p, line[i], line[i + 1]);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t}\n\t}\n\treturn minDistance;\n};\n","import extend from '../../../../extend';\nimport Cloneable from '../../../../java/lang/Cloneable';\nexport default function CoordinateSequence() {}\nextend(CoordinateSequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {},\n\tsize: function () {},\n\tgetOrdinate: function (index, ordinateIndex) {},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {},\n\tgetDimension: function () {},\n\tgetX: function (index) {},\n\texpandEnvelope: function (env) {},\n\tcopy: function () {},\n\tgetY: function (index) {},\n\ttoCoordinateArray: function () {},\n\tinterfaces_: function () {\n\t\treturn [Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequence;\n\t}\n});\nCoordinateSequence.X = 0;\nCoordinateSequence.Y = 1;\nCoordinateSequence.Z = 2;\nCoordinateSequence.M = 3;\n","import hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nexport default function CoordinateSequenceFactory() {}\nextend(CoordinateSequenceFactory.prototype, {\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFactory;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function GeometryComponentFilter() {}\nextend(GeometryComponentFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryComponentFilter;\n\t}\n});\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nexport default function Geometry() {\n\tthis._envelope = null;\n\tthis._factory = null;\n\tthis._SRID = null;\n\tthis._userData = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n\tthis._SRID = factory.getSRID();\n}\nextend(Geometry.prototype, {\n\tisGeometryCollection: function () {\n\t\treturn this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t},\n\tgetFactory: function () {\n\t\treturn this._factory;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this;\n\t},\n\tgetArea: function () {\n\t\treturn 0.0;\n\t},\n\tisRectangle: function () {\n\t\treturn false;\n\t},\n\tequals: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g === null) return false;\n\t\t\treturn this.equalsTopo(g);\n\t\t} else if (arguments[0] instanceof Object) {\n\t\t\tlet o = arguments[0];\n\t\t\tif (!(o instanceof Geometry)) return false;\n\t\t\tvar g = o;\n\t\t\treturn this.equalsExact(g);\n\t\t}\n\t},\n\tequalsExact: function (other) {\n\t\treturn this === other || this.equalsExact(other, 0);\n\t},\n\tgeometryChanged: function () {\n\t\tthis.apply(Geometry.geometryChangedFilter);\n\t},\n\tgeometryChangedAction: function () {\n\t\tthis._envelope = null;\n\t},\n\tequalsNorm: function (g) {\n\t\tif (g === null) return false;\n\t\treturn this.norm().equalsExact(g.norm());\n\t},\n\tgetLength: function () {\n\t\treturn 0.0;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn 1;\n\t},\n\tcompareTo: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o, comp);\n\t\t}\n\t},\n\tgetUserData: function () {\n\t\treturn this._userData;\n\t},\n\tgetSRID: function () {\n\t\treturn this._SRID;\n\t},\n\tgetEnvelope: function () {\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\n\t},\n\tcheckNotGeometryCollection: function (g) {\n\t\tif (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) {\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\t}\n\t},\n\tequal: function (a, b, tolerance) {\n\t\tif (tolerance === 0) {\n\t\t\treturn a.equals(b);\n\t\t}\n\t\treturn a.distance(b) <= tolerance;\n\t},\n\tnorm: function () {\n\t\tvar copy = this.copy();\n\t\tcopy.normalize();\n\t\treturn copy;\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this._factory.getPrecisionModel();\n\t},\n\tgetEnvelopeInternal: function () {\n\t\tif (this._envelope === null) {\n\t\t\tthis._envelope = this.computeEnvelopeInternal();\n\t\t}\n\t\treturn new Envelope(this._envelope);\n\t},\n\tsetSRID: function (SRID) {\n\t\tthis._SRID = SRID;\n\t},\n\tsetUserData: function (userData) {\n\t\tthis._userData = userData;\n\t},\n\tcompare: function (a, b) {\n\t\tvar i = a.iterator();\n\t\tvar j = b.iterator();\n\t\twhile (i.hasNext() && j.hasNext()) {\n\t\t\tvar aElement = i.next();\n\t\t\tvar bElement = j.next();\n\t\t\tvar comparison = aElement.compareTo(bElement);\n\t\t\tif (comparison !== 0) {\n\t\t\t\treturn comparison;\n\t\t\t}\n\t\t}\n\t\tif (i.hasNext()) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (j.hasNext()) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t},\n\thashCode: function () {\n\t\treturn this.getEnvelopeInternal().hashCode();\n\t},\n\tisGeometryCollectionOrDerived: function () {\n\t\tif (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Cloneable, Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Geometry;\n\t}\n});\nGeometry.hasNonEmptyElements = function (geometries) {\n\tfor (var i = 0; i < geometries.length; i++) {\n\t\tif (!geometries[i].isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.hasNullElements = function (array) {\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i] === null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.serialVersionUID = 8763622679187376702;\nGeometry.TYPECODE_POINT = 0;\nGeometry.TYPECODE_MULTIPOINT = 1;\nGeometry.TYPECODE_LINESTRING = 2;\nGeometry.TYPECODE_LINEARRING = 3;\nGeometry.TYPECODE_MULTILINESTRING = 4;\nGeometry.TYPECODE_POLYGON = 5;\nGeometry.TYPECODE_MULTIPOLYGON = 6;\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7;\nGeometry.TYPENAME_POINT = \"Point\";\nGeometry.TYPENAME_MULTIPOINT = \"MultiPoint\";\nGeometry.TYPENAME_LINESTRING = \"LineString\";\nGeometry.TYPENAME_LINEARRING = \"LinearRing\";\nGeometry.TYPENAME_MULTILINESTRING = \"MultiLineString\";\nGeometry.TYPENAME_POLYGON = \"Polygon\";\nGeometry.TYPENAME_MULTIPOLYGON = \"MultiPolygon\";\nGeometry.TYPENAME_GEOMETRYCOLLECTION = \"GeometryCollection\";\nGeometry.geometryChangedFilter = {\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tfilter: function (geom) {\n\t\tgeom.geometryChangedAction();\n\t}\n};\n","import extend from '../../../../extend';\nexport default function CoordinateFilter() {}\nextend(CoordinateFilter.prototype, {\n\tfilter: function (coord) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateFilter;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function BoundaryNodeRule() {}\nextend(BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryNodeRule;\n\t}\n});\nfunction Mod2BoundaryNodeRule() {}\nextend(Mod2BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount % 2 === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn Mod2BoundaryNodeRule;\n\t}\n});\nfunction EndPointBoundaryNodeRule() {}\nextend(EndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn EndPointBoundaryNodeRule;\n\t}\n});\nfunction MultiValentEndPointBoundaryNodeRule() {}\nextend(MultiValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MultiValentEndPointBoundaryNodeRule;\n\t}\n});\nfunction MonoValentEndPointBoundaryNodeRule() {}\nextend(MonoValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MonoValentEndPointBoundaryNodeRule;\n\t}\n});\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n","import CoordinateList from './CoordinateList';\nimport Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport System from '../../../../java/lang/System';\nimport Comparator from '../../../../java/util/Comparator';\nimport Envelope from './Envelope';\nexport default function CoordinateArrays() {}\nextend(CoordinateArrays.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArrays;\n\t}\n});\nCoordinateArrays.isRing = function (pts) {\n\tif (pts.length < 4) return false;\n\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\n\treturn true;\n};\nCoordinateArrays.ptNotInList = function (testPts, pts) {\n\tfor (var i = 0; i < testPts.length; i++) {\n\t\tvar testPt = testPts[i];\n\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n\t}\n\treturn null;\n};\nCoordinateArrays.scroll = function (coordinates, firstCoordinate) {\n\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n\tif (i < 0) return null;\n\tvar newCoordinates = new Array(coordinates.length).fill(null);\n\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (!coord1[i].equals(coord2[i])) return false;\n\t\t}\n\t\treturn true;\n\t} else if (arguments.length === 3) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\nCoordinateArrays.intersection = function (coordinates, env) {\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n\t}\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.hasRepeatedPoints = function (coord) {\n\tfor (var i = 1; i < coord.length; i++) {\n\t\tif (coord[i - 1].equals(coord[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCoordinateArrays.removeRepeatedPoints = function (coord) {\n\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n\tvar coordList = new CoordinateList(coord, false);\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.reverse = function (coord) {\n\tvar last = coord.length - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tvar tmp = coord[i];\n\t\tcoord[i] = coord[last - i];\n\t\tcoord[last - i] = tmp;\n\t}\n};\nCoordinateArrays.removeNull = function (coord) {\n\tvar nonNull = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) nonNull++;\n\t}\n\tvar newCoord = new Array(nonNull).fill(null);\n\tif (nonNull === 0) return newCoord;\n\tvar j = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\n\t}\n\treturn newCoord;\n};\nCoordinateArrays.copyDeep = function () {\n\tif (arguments.length === 1) {\n\t\tlet coordinates = arguments[0];\n\t\tvar copy = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tcopy[i] = new Coordinate(coordinates[i]);\n\t\t}\n\t\treturn copy;\n\t} else if (arguments.length === 5) {\n\t\tlet src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\n\t\t}\n\t}\n};\nCoordinateArrays.isEqualReversed = function (pts1, pts2) {\n\tfor (var i = 0; i < pts1.length; i++) {\n\t\tvar p1 = pts1[i];\n\t\tvar p2 = pts2[pts1.length - i - 1];\n\t\tif (p1.compareTo(p2) !== 0) return false;\n\t}\n\treturn true;\n};\nCoordinateArrays.envelope = function (coordinates) {\n\tvar env = new Envelope();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tenv.expandToInclude(coordinates[i]);\n\t}\n\treturn env;\n};\nCoordinateArrays.toCoordinateArray = function (coordList) {\n\treturn coordList.toArray(CoordinateArrays.coordArrayType);\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function (n, c) {\n\treturn c.length >= n ? c : [];\n};\nCoordinateArrays.indexOf = function (coordinate, coordinates) {\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (coordinate.equals(coordinates[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nCoordinateArrays.increasingDirection = function (pts) {\n\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n\t\tvar j = pts.length - 1 - i;\n\t\tvar comp = pts[i].compareTo(pts[j]);\n\t\tif (comp !== 0) return comp;\n\t}\n\treturn 1;\n};\nCoordinateArrays.compare = function (pts1, pts2) {\n\tvar i = 0;\n\twhile (i < pts1.length && i < pts2.length) {\n\t\tvar compare = pts1[i].compareTo(pts2[i]);\n\t\tif (compare !== 0) return compare;\n\t\ti++;\n\t}\n\tif (i < pts2.length) return -1;\n\tif (i < pts1.length) return 1;\n\treturn 0;\n};\nCoordinateArrays.minCoordinate = function (coordinates) {\n\tvar minCoord = null;\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n\t\t\tminCoord = coordinates[i];\n\t\t}\n\t}\n\treturn minCoord;\n};\nCoordinateArrays.extract = function (pts, start, end) {\n\tstart = MathUtil.clamp(start, 0, pts.length);\n\tend = MathUtil.clamp(end, -1, pts.length);\n\tvar npts = end - start + 1;\n\tif (end < 0) npts = 0;\n\tif (start >= pts.length) npts = 0;\n\tif (end < start) npts = 0;\n\tvar extractPts = new Array(npts).fill(null);\n\tif (npts === 0) return extractPts;\n\tvar iPts = 0;\n\tfor (var i = start; i <= end; i++) {\n\t\textractPts[iPts++] = pts[i];\n\t}\n\treturn extractPts;\n};\nfunction ForwardComparator() {}\nextend(ForwardComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\treturn CoordinateArrays.compare(pts1, pts2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn ForwardComparator;\n\t}\n});\nfunction BidirectionalComparator() {}\nextend(BidirectionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n\t\tif (isEqualRev) return 0;\n\t\treturn forwardComp;\n\t},\n\tOLDcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (comparePt !== 0) return comparePt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t}\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn BidirectionalComparator;\n\t}\n});\nCoordinateArrays.ForwardComparator = ForwardComparator;\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nexport default function Map() {};\n\n\n/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */\nMap.prototype.get = function() {};\n\n\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap.prototype.put = function() {};\n\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap.prototype.size = function() {};\n\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap.prototype.values = function() {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap.prototype.entrySet = function() {};\n","import Map from './Map'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nexport default function SortedMap() {};\nSortedMap.prototype = new Map();\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default function Set() {};\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport Set from './Set'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nexport default function HashSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nHashSet.prototype = new Set();\n\n\n/**\n * @override\n */\nHashSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e === o) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.remove = function(o) {\n  throw new javascript.util.OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(hashSet) {\n  /**\n   * @type {HashSet}\n   * @private\n   */\n  this.hashSet_ = hashSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.hashSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.hashSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","import ArrayList from './ArrayList'\nimport SortedMap from './SortedMap'\nimport HashSet from './HashSet'\n\nconst BLACK = 0\nconst RED = 1\nfunction colorOf (p) { return (p == null ? BLACK : p.color) }\nfunction parentOf (p) { return (p == null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) p.color = c }\nfunction leftOf (p) { return (p == null ? null : p.left) }\nfunction rightOf (p) { return (p == null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nexport default function TreeMap() {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n};\nTreeMap.prototype = new SortedMap();\n\n\n/**\n * @override\n */\nTreeMap.prototype.get = function(key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return p.value;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.put = function(key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue() { return this.value },\n      getKey() { return this.key }\n    };\n    this.size_ = 1;\n    return null;\n  }\n  var t = this.root_, parent, cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue;\n    }\n  } while (t !== null);\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue() { return this.value },\n    getKey() { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null;\n};\n\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function(x) {\n  x.color = RED;\n  while (x != null && x != this.root_ && x.parent.color == RED) {\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.values = function() {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function() {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet;\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function(p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null)\n      r.left.parent = p;\n    r.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = r;\n    else if (p.parent.left == p)\n      p.parent.left = r;\n    else\n      p.parent.right = r;\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function(p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) l.right.parent = p;\n    l.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = l;\n    else if (p.parent.right == p)\n      p.parent.right = l;\n    else p.parent.left = l;\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function() {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p;\n};\n\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function(t) {\n  if (t === null)\n    return null;\n  else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p;\n  } else {\n    var p = t.parent;\n    var ch = t;\n    while (p !== null && ch === p.right) {\n      ch = p;\n      p = p.parent;\n    }\n    return p;\n  }\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.size = function() {\n  return this.size_;\n};\n","import extend from '../../../../extend';\nexport default function Lineal() {}\nextend(Lineal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Lineal;\n\t}\n});\n","import Set from './Set'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nexport default function SortedSet() {};\nSortedSet.prototype = new Set();\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport SortedSet from './SortedSet'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nexport default function TreeSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nTreeSet.prototype = new SortedSet();\n\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this.array_.splice(i, 0, o);\n      return true;\n    }\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function(e) {\n  throw new OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.treeSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.treeSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","import ArrayList from './ArrayList'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nexport default function Arrays() {};\n\n/**\n */\nArrays.sort = function() {\n  var a = arguments[0], i, t, comparator, compare;\n  if (arguments.length === 1) {\n    compare = function(a, b) {\n      return a.compareTo(b);\n    }\n    a.sort(compare);\n    return;\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  }\n};\n\n\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function(array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList;\n};\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Character from '../../../../java/lang/Character';\nexport default function Dimension() {}\nextend(Dimension.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Dimension;\n\t}\n});\nDimension.toDimensionSymbol = function (dimensionValue) {\n\tswitch (dimensionValue) {\n\t\tcase Dimension.FALSE:\n\t\t\treturn Dimension.SYM_FALSE;\n\t\tcase Dimension.TRUE:\n\t\t\treturn Dimension.SYM_TRUE;\n\t\tcase Dimension.DONTCARE:\n\t\t\treturn Dimension.SYM_DONTCARE;\n\t\tcase Dimension.P:\n\t\t\treturn Dimension.SYM_P;\n\t\tcase Dimension.L:\n\t\t\treturn Dimension.SYM_L;\n\t\tcase Dimension.A:\n\t\t\treturn Dimension.SYM_A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n};\nDimension.toDimensionValue = function (dimensionSymbol) {\n\tswitch (Character.toUpperCase(dimensionSymbol)) {\n\t\tcase Dimension.SYM_FALSE:\n\t\t\treturn Dimension.FALSE;\n\t\tcase Dimension.SYM_TRUE:\n\t\t\treturn Dimension.TRUE;\n\t\tcase Dimension.SYM_DONTCARE:\n\t\t\treturn Dimension.DONTCARE;\n\t\tcase Dimension.SYM_P:\n\t\t\treturn Dimension.P;\n\t\tcase Dimension.SYM_L:\n\t\t\treturn Dimension.L;\n\t\tcase Dimension.SYM_A:\n\t\t\treturn Dimension.A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n};\nDimension.P = 0;\nDimension.L = 1;\nDimension.A = 2;\nDimension.FALSE = -1;\nDimension.TRUE = -2;\nDimension.DONTCARE = -3;\nDimension.SYM_FALSE = 'F';\nDimension.SYM_TRUE = 'T';\nDimension.SYM_DONTCARE = '*';\nDimension.SYM_P = '0';\nDimension.SYM_L = '1';\nDimension.SYM_A = '2';\n","import extend from '../../../../extend';\nexport default function GeometryFilter() {}\nextend(GeometryFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFilter;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function CoordinateSequenceFilter() {}\nextend(CoordinateSequenceFilter.prototype, {\n\tfilter: function (seq, i) {},\n\tisDone: function () {},\n\tisGeometryChanged: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFilter;\n\t}\n});\n","import TreeSet from '../../../../java/util/TreeSet';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function GeometryCollection() {\n\tthis._geometries = null;\n\tlet geometries = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tif (geometries === null) {\n\t\tgeometries = [];\n\t}\n\tif (Geometry.hasNullElements(geometries)) {\n\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\n\t}\n\tthis._geometries = geometries;\n}\ninherits(GeometryCollection, Geometry);\nextend(GeometryCollection.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tvar envelope = new Envelope();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tenvelope.expandToInclude(this._geometries[i].getEnvelopeInternal());\n\t\t}\n\t\treturn envelope;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this._geometries[n];\n\t},\n\tgetCoordinates: function () {\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar childCoordinates = this._geometries[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tarea += this._geometries[i].getArea();\n\t\t}\n\t\treturn area;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherCollection = other;\n\t\t\tif (this._geometries.length !== otherCollection._geometries.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tif (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tthis._geometries[i].normalize();\n\t\t}\n\t\tArrays.sort(this._geometries);\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._geometries[0].getCoordinate();\n\t},\n\tgetBoundaryDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getBoundaryDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t},\n\tgetDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetLength: function () {\n\t\tvar sum = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tsum += this._geometries[i].getLength();\n\t\t}\n\t\treturn sum;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = 0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tnumPoints += this._geometries[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn this._geometries.length;\n\t},\n\treverse: function () {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this._geometries));\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o._geometries));\n\t\t\treturn this.compare(theseElements, otherElements);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar gc = o;\n\t\t\tvar n1 = this.getNumGeometries();\n\t\t\tvar n2 = gc.getNumGeometries();\n\t\t\tvar i = 0;\n\t\t\twhile (i < n1 && i < n2) {\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < n1) return 1;\n\t\t\tif (i < n2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._geometries.length === 0) return null;\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t\tif (filter.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tthis.checkNotGeometryCollection(this);\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_GEOMETRYCOLLECTION;\n\t},\n\tcopy: function () {\n\t\tvar geometries = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tgeometries[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new GeometryCollection(geometries, this._factory);\n\t},\n\tisEmpty: function () {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollection;\n\t}\n});\nGeometryCollection.serialVersionUID = -5694727726395021467;\n","import Geometry from './Geometry';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function MultiLineString() {\n\tlet lineStrings = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, lineStrings, factory);\n}\ninherits(MultiLineString, GeometryCollection);\nextend(MultiLineString.prototype, {\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isClosed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTILINESTRING;\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\treverse: function () {\n\t\tvar nLines = this._geometries.length;\n\t\tvar revLines = new Array(nLines).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevLines[nLines - 1 - i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiLineString(revLines);\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTILINESTRING;\n\t},\n\tcopy: function () {\n\t\tvar lineStrings = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\n\t\t\tlineStrings[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiLineString(lineStrings, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiLineString;\n\t}\n});\nMultiLineString.serialVersionUID = 8166665132445433741;\n","import LineString from '../geom/LineString';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function BoundaryOp() {\n\tthis._geom = null;\n\tthis._geomFact = null;\n\tthis._bnRule = null;\n\tthis._endpointMap = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tBoundaryOp.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], bnRule = arguments[1];\n\t\tthis._geom = geom;\n\t\tthis._geomFact = geom.getFactory();\n\t\tthis._bnRule = bnRule;\n\t}\n}\nextend(BoundaryOp.prototype, {\n\tboundaryMultiLineString: function (mLine) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\n\t\tif (bdyPts.length === 1) {\n\t\t\treturn this._geomFact.createPoint(bdyPts[0]);\n\t\t}\n\t\treturn this._geomFact.createMultiPointFromCoords(bdyPts);\n\t},\n\tgetBoundary: function () {\n\t\tif (this._geom instanceof LineString) return this.boundaryLineString(this._geom);\n\t\tif (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom);\n\t\treturn this._geom.getBoundary();\n\t},\n\tboundaryLineString: function (line) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tif (line.isClosed()) {\n\t\t\tvar closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n\t\t\tif (closedEndpointOnBoundary) {\n\t\t\t\treturn line.getStartPoint();\n\t\t\t} else {\n\t\t\t\treturn this._geomFact.createMultiPoint();\n\t\t\t}\n\t\t}\n\t\treturn this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n\t},\n\tgetEmptyMultiPoint: function () {\n\t\treturn this._geomFact.createMultiPoint();\n\t},\n\tcomputeBoundaryCoordinates: function (mLine) {\n\t\tvar bdyPts = new ArrayList();\n\t\tthis._endpointMap = new TreeMap();\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\n\t\t\tvar line = mLine.getGeometryN(i);\n\t\t\tif (line.getNumPoints() === 0) continue;\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n\t\t}\n\t\tfor (var it = this._endpointMap.entrySet().iterator(); it.hasNext(); ) {\n\t\t\tvar entry = it.next();\n\t\t\tvar counter = entry.getValue();\n\t\t\tvar valence = counter.count;\n\t\t\tif (this._bnRule.isInBoundary(valence)) {\n\t\t\t\tbdyPts.add(entry.getKey());\n\t\t\t}\n\t\t}\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\n\t},\n\taddEndpoint: function (pt) {\n\t\tvar counter = this._endpointMap.get(pt);\n\t\tif (counter === null) {\n\t\t\tcounter = new Counter();\n\t\t\tthis._endpointMap.put(pt, counter);\n\t\t}\n\t\tcounter.count++;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryOp;\n\t}\n});\nBoundaryOp.getBoundary = function () {\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tvar bop = new BoundaryOp(g);\n\t\treturn bop.getBoundary();\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bnRule = arguments[1];\n\t\tvar bop = new BoundaryOp(g, bnRule);\n\t\treturn bop.getBoundary();\n\t}\n};\nfunction Counter() {\n\tthis.count = null;\n}\nextend(Counter.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Counter;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nexport default function Length() {}\nextend(Length.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Length;\n\t}\n});\nLength.ofLine = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\n","export default function IOException () {}\n","import PrintStream from '../../../../java/io/PrintStream';\nimport StringReader from '../../../../java/io/StringReader';\nimport DecimalFormat from '../../../../java/text/DecimalFormat';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream';\nimport Assert from './Assert';\nimport IOException from '../../../../java/io/IOException';\nimport LineNumberReader from '../../../../java/io/LineNumberReader';\nexport default function StringUtil() {}\nextend(StringUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn StringUtil;\n\t}\n});\nStringUtil.chars = function (c, n) {\n\tvar ch = new Array(n).fill(null);\n\tfor (var i = 0; i < n; i++) {\n\t\tch[i] = c;\n\t}\n\treturn new String(ch);\n};\nStringUtil.getStackTrace = function () {\n\tif (arguments.length === 1) {\n\t\tlet t = arguments[0];\n\t\tvar os = new ByteArrayOutputStream();\n\t\tvar ps = new PrintStream(os);\n\t\tt.printStackTrace(ps);\n\t\treturn os.toString();\n\t} else if (arguments.length === 2) {\n\t\tlet t = arguments[0], depth = arguments[1];\n\t\tvar stackTrace = \"\";\n\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(t));\n\t\tvar lineNumberReader = new LineNumberReader(stringReader);\n\t\tfor (var i = 0; i < depth; i++) {\n\t\t\ttry {\n\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof IOException) {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t} else throw e;\n\t\t\t} finally {}\n\t\t}\n\t\treturn stackTrace;\n\t}\n};\nStringUtil.split = function (s, separator) {\n\tvar separatorlen = separator.length;\n\tvar tokenList = new ArrayList();\n\tvar tmpString = \"\" + s;\n\tvar pos = tmpString.indexOf(separator);\n\twhile (pos >= 0) {\n\t\tvar token = tmpString.substring(0, pos);\n\t\ttokenList.add(token);\n\t\ttmpString = tmpString.substring(pos + separatorlen);\n\t\tpos = tmpString.indexOf(separator);\n\t}\n\tif (tmpString.length > 0) tokenList.add(tmpString);\n\tvar res = new Array(tokenList.size()).fill(null);\n\tfor (var i = 0; i < res.length; i++) {\n\t\tres[i] = tokenList.get(i);\n\t}\n\treturn res;\n};\nStringUtil.toString = function () {\n\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\tlet d = arguments[0];\n\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n\t}\n};\nStringUtil.spaces = function (n) {\n\treturn StringUtil.chars(' ', n);\n};\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n","export default function StringBuilder (str) {\n    this.str = str\n  }\n  \n  StringBuilder.prototype.append = function (e) {\n    this.str += e\n  }\n  \n  StringBuilder.prototype.setCharAt = function (i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  \n  StringBuilder.prototype.toString = function (e) {\n    return this.str\n  }\n  ","import hasInterface from '../../../../hasInterface';\nimport StringUtil from '../util/StringUtil';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default function CoordinateSequences() {}\nextend(CoordinateSequences.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequences;\n\t}\n});\nCoordinateSequences.copyCoord = function (src, srcPos, dest, destPos) {\n\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\n\tfor (var dim = 0; dim < minDim; dim++) {\n\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n\t}\n};\nCoordinateSequences.isRing = function (seq) {\n\tvar n = seq.size();\n\tif (n === 0) return true;\n\tif (n <= 3) return false;\n\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n};\nCoordinateSequences.isEqual = function (cs1, cs2) {\n\tvar cs1Size = cs1.size();\n\tvar cs2Size = cs2.size();\n\tif (cs1Size !== cs2Size) return false;\n\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\tfor (var i = 0; i < cs1Size; i++) {\n\t\tfor (var d = 0; d < dim; d++) {\n\t\t\tvar v1 = cs1.getOrdinate(i, d);\n\t\t\tvar v2 = cs2.getOrdinate(i, d);\n\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\nCoordinateSequences.extend = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tif (n > 0) {\n\t\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n\t}\n\treturn newseq;\n};\nCoordinateSequences.reverse = function (seq) {\n\tvar last = seq.size() - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tCoordinateSequences.swap(seq, i, last - i);\n\t}\n};\nCoordinateSequences.swap = function (seq, i, j) {\n\tif (i === j) return null;\n\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\n\t\tvar tmp = seq.getOrdinate(i, dim);\n\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n\t\tseq.setOrdinate(j, dim, tmp);\n\t}\n};\nCoordinateSequences.copy = function (src, srcPos, dest, destPos, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n\t}\n};\nCoordinateSequences.toString = function () {\n\tif (arguments.length === 1 && hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet cs = arguments[0];\n\t\tvar size = cs.size();\n\t\tif (size === 0) return \"()\";\n\t\tvar dim = cs.getDimension();\n\t\tvar builder = new StringBuilder();\n\t\tbuilder.append('(');\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif (i > 0) builder.append(\" \");\n\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\tif (d > 0) builder.append(\",\");\n\t\t\t\tbuilder.append(StringUtil.toString(cs.getOrdinate(i, d)));\n\t\t\t}\n\t\t}\n\t\tbuilder.append(')');\n\t\treturn builder.toString();\n\t}\n};\nCoordinateSequences.ensureValidRing = function (fact, seq) {\n\tvar n = seq.size();\n\tif (n === 0) return seq;\n\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\tif (isClosed) return seq;\n\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\n};\nCoordinateSequences.createClosedRing = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1);\n\treturn newseq;\n};\n","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport Length from '../algorithm/Length';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport CoordinateSequences from './CoordinateSequences';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport inherits from '../../../../inherits';\nexport default function LineString() {\n\tthis._points = null;\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(points);\n}\ninherits(LineString, Geometry);\nextend(LineString.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\treturn this._points.expandEnvelope(new Envelope());\n\t},\n\tisRing: function () {\n\t\treturn this.isClosed() && this.isSimple();\n\t},\n\tgetCoordinates: function () {\n\t\treturn this._points.toCoordinateArray();\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherLineString = other;\n\t\t\tif (this._points.size() !== otherLineString._points.size()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tif (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n\t\t\tvar j = this._points.size() - 1 - i;\n\t\t\tif (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n\t\t\t\tif (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n\t\t\t\t\tvar copy = this._points.copy();\n\t\t\t\t\tCoordinateSequences.reverse(copy);\n\t\t\t\t\tthis._points = copy;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._points.getCoordinate(0);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n\t},\n\tgetEndPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(this.getNumPoints() - 1);\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_LINESTRING;\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\tgetLength: function () {\n\t\treturn Length.ofLine(this._points);\n\t},\n\tgetNumPoints: function () {\n\t\treturn this._points.size();\n\t},\n\treverse: function () {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar revLine = this.getFactory().createLineString(seq);\n\t\treturn revLine;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar line = o;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\twhile (i < this._points.size() && j < line._points.size()) {\n\t\t\t\tvar comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn comparison;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (i < this._points.size()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (j < line._points.size()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar line = o;\n\t\t\treturn comp.compare(this._points, line._points);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points.getCoordinate(i));\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._points.size() === 0) return null;\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points, i);\n\t\t\t\tif (filter.isDone()) break;\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tisEquivalentClass: function (other) {\n\t\treturn other instanceof LineString;\n\t},\n\tgetCoordinateN: function (n) {\n\t\treturn this._points.getCoordinate(n);\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_LINESTRING;\n\t},\n\tcopy: function () {\n\t\treturn new LineString(this._points.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this._points;\n\t},\n\tisEmpty: function () {\n\t\treturn this._points.size() === 0;\n\t},\n\tinit: function (points) {\n\t\tif (points === null) {\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tif (points.size() === 1) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n\t\t}\n\t\tthis._points = points;\n\t},\n\tisCoordinate: function (pt) {\n\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\tif (this._points.getCoordinate(i).equals(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetStartPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(0);\n\t},\n\tgetPointN: function (n) {\n\t\treturn this.getFactory().createPoint(this._points.getCoordinate(n));\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn LineString;\n\t}\n});\nLineString.serialVersionUID = 3110669828065365560;\n","import extend from '../../../../extend';\nexport default function Puntal() {}\nextend(Puntal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Puntal;\n\t}\n});\n","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Puntal from './Puntal';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function Point() {\n\tthis._coordinates = null;\n\tlet coordinates = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(coordinates);\n}\ninherits(Point, Geometry);\nextend(Point.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\tvar env = new Envelope();\n\t\tenv.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n\t\treturn env;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {},\n\tgetCoordinate: function () {\n\t\treturn this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_POINT;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.isEmpty() ? 0 : 1;\n\t},\n\treverse: function () {\n\t\treturn this.copy();\n\t},\n\tgetX: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().x;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tvar point = other;\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet other = arguments[0], comp = arguments[1];\n\t\t\tvar point = other;\n\t\t\treturn comp.compare(this._coordinates, point._coordinates);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfilter.filter(this.getCoordinate());\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) return null;\n\t\t\tfilter.filter(this._coordinates, 0);\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_POINT;\n\t},\n\tcopy: function () {\n\t\treturn new Point(this._coordinates.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this._coordinates;\n\t},\n\tgetY: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().y;\n\t},\n\tisEmpty: function () {\n\t\treturn this._coordinates.size() === 0;\n\t},\n\tinit: function (coordinates) {\n\t\tif (coordinates === null) {\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tAssert.isTrue(coordinates.size() <= 1);\n\t\tthis._coordinates = coordinates;\n\t},\n\tisSimple: function () {\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn Point;\n\t}\n});\nPoint.serialVersionUID = 4902022702746614570;\n","import hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nexport default function Area() {}\nextend(Area.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Area;\n\t}\n});\nArea.ofRing = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t}\n};\nArea.ofRingSigned = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\tvar n = ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tring.getCoordinate(0, p1);\n\t\tring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\n","import extend from '../../../../extend';\nexport default function Polygonal() {}\nextend(Polygonal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Polygonal;\n\t}\n});\n","import Area from '../algorithm/Area';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport System from '../../../../java/lang/System';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport CoordinateArrays from './CoordinateArrays';\nimport Polygonal from './Polygonal';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport inherits from '../../../../inherits';\nexport default function Polygon() {\n\tthis._shell = null;\n\tthis._holes = null;\n\tlet shell = arguments[0], holes = arguments[1], factory = arguments[2];\n\tGeometry.call(this, factory);\n\tif (shell === null) {\n\t\tshell = this.getFactory().createLinearRing();\n\t}\n\tif (holes === null) {\n\t\tholes = [];\n\t}\n\tif (Geometry.hasNullElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\n\t}\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\n\t}\n\tthis._shell = shell;\n\tthis._holes = holes;\n}\ninherits(Polygon, Geometry);\nextend(Polygon.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\treturn this._shell.getEnvelopeInternal();\n\t},\n\tgetCoordinates: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn [];\n\t\t}\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tvar shellCoordinates = this._shell.getCoordinates();\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\n\t\t\tk++;\n\t\t\tcoordinates[k] = shellCoordinates[x];\n\t\t}\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tvar childCoordinates = this._holes[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tarea += Area.ofRing(this._shell.getCoordinateSequence());\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tarea -= Area.ofRing(this._holes[i].getCoordinateSequence());\n\t\t}\n\t\treturn area;\n\t},\n\tisRectangle: function () {\n\t\tif (this.getNumInteriorRing() !== 0) return false;\n\t\tif (this._shell === null) return false;\n\t\tif (this._shell.getNumPoints() !== 5) return false;\n\t\tvar seq = this._shell.getCoordinateSequence();\n\t\tvar env = this.getEnvelopeInternal();\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\n\t\t\tvar y = seq.getY(i);\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\n\t\t}\n\t\tvar prevX = seq.getX(0);\n\t\tvar prevY = seq.getY(0);\n\t\tfor (var i = 1; i <= 4; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tvar y = seq.getY(i);\n\t\t\tvar xChanged = x !== prevX;\n\t\t\tvar yChanged = y !== prevY;\n\t\t\tif (xChanged === yChanged) return false;\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherPolygon = other;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherPolygonShell = otherPolygon._shell;\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._holes.length !== otherPolygon._holes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tif (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.normalize(this._shell, true);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis.normalize(this._holes[i], false);\n\t\t\t}\n\t\t\tArrays.sort(this._holes);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ring = arguments[0], clockwise = arguments[1];\n\t\t\tif (ring.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\t\t\tif (Orientation.isCCW(ring.getCoordinates()) === clockwise) {\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._shell.getCoordinate();\n\t},\n\tgetNumInteriorRing: function () {\n\t\treturn this._holes.length;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_POLYGON;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\tgetLength: function () {\n\t\tvar len = 0.0;\n\t\tlen += this._shell.getLength();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tlen += this._holes[i].getLength();\n\t\t}\n\t\treturn len;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = this._shell.getNumPoints();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tnumPoints += this._holes[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\treverse: function () {\n\t\tvar poly = this.copy();\n\t\tpoly._shell = this._shell.copy().reverse();\n\t\tpoly._holes = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tpoly._holes[i] = this._holes[i].copy().reverse();\n\t\t}\n\t\treturn poly;\n\t},\n\tconvexHull: function () {\n\t\treturn this.getExteriorRing().convexHull();\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = o._shell;\n\t\t\treturn thisShell.compareToSameClass(otherShell);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar poly = o;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = poly._shell;\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\n\t\t\tif (shellComp !== 0) return shellComp;\n\t\t\tvar nHole1 = this.getNumInteriorRing();\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\n\t\t\tvar i = 0;\n\t\t\twhile (i < nHole1 && i < nHole2) {\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < nHole1) return 1;\n\t\t\tif (i < nHole2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tif (!filter.isDone()) {\n\t\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t\t\tif (filter.isDone()) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar rings = new Array(this._holes.length + 1).fill(null);\n\t\trings[0] = this._shell;\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\trings[i + 1] = this._holes[i];\n\t\t}\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n\t\treturn this.getFactory().createMultiLineString(rings);\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_POLYGON;\n\t},\n\tcopy: function () {\n\t\tvar shellCopy = this._shell.copy();\n\t\tvar holeCopies = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tholeCopies[i] = this._holes[i].copy();\n\t\t}\n\t\treturn new Polygon(shellCopy, holeCopies, this._factory);\n\t},\n\tgetExteriorRing: function () {\n\t\treturn this._shell;\n\t},\n\tisEmpty: function () {\n\t\treturn this._shell.isEmpty();\n\t},\n\tgetInteriorRingN: function (n) {\n\t\treturn this._holes[n];\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn Polygon;\n\t}\n});\nPolygon.serialVersionUID = -3494792200821764533;\n","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport Puntal from './Puntal';\nimport inherits from '../../../../inherits';\nexport default function MultiPoint() {\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, points, factory);\n}\ninherits(MultiPoint, GeometryCollection);\nextend(MultiPoint.prototype, {\n\tisValid: function () {\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1 && Number.isInteger(arguments[0])) {\n\t\t\tlet n = arguments[0];\n\t\t\treturn this._geometries[n].getCoordinate();\n\t\t} else return GeometryCollection.prototype.getCoordinate.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTIPOINT;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTIPOINT;\n\t},\n\tcopy: function () {\n\t\tvar points = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoints[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPoint(points, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPoint;\n\t}\n});\nMultiPoint.serialVersionUID = -8048474874175355449;\n","import LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from './GeometryFactory';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function LinearRing() {\n\tif (arguments[0] instanceof Array && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLinearRing.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLineString.call(this, points, factory);\n\t\tthis.validateConstruction();\n\t}\n}\ninherits(LinearRing, LineString);\nextend(LinearRing.prototype, {\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn LineString.prototype.isClosed.call(this);\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_LINEARRING;\n\t},\n\treverse: function () {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar rev = this.getFactory().createLinearRing(seq);\n\t\treturn rev;\n\t},\n\tvalidateConstruction: function () {\n\t\tif (!this.isEmpty() && !LineString.prototype.isClosed.call(this)) {\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n\t\t}\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n\t\t}\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_LINEARRING;\n\t},\n\tcopy: function () {\n\t\treturn new LinearRing(this._points.copy(), this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearRing;\n\t}\n});\nLinearRing.MINIMUM_VALID_SIZE = 4;\nLinearRing.serialVersionUID = -4261142084085851829;\n","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Polygonal from './Polygonal';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function MultiPolygon() {\n\tlet polygons = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, polygons, factory);\n}\ninherits(MultiPolygon, GeometryCollection);\nextend(MultiPolygon.prototype, {\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTIPOLYGON;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\treverse: function () {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar allRings = new ArrayList();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar polygon = this._geometries[i];\n\t\t\tvar rings = polygon.getBoundary();\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\n\t\t\t\tallRings.add(rings.getGeometryN(j));\n\t\t\t}\n\t\t}\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTIPOLYGON;\n\t},\n\tcopy: function () {\n\t\tvar polygons = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < polygons.length; i++) {\n\t\t\tpolygons[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPolygon(polygons, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPolygon;\n\t}\n});\nMultiPolygon.serialVersionUID = -551033529766975875;\n","import LineString from '../LineString';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport MultiLineString from '../MultiLineString';\nexport default function GeometryEditor() {\n\tthis._factory = null;\n\tthis._isUserDataCopied = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet factory = arguments[0];\n\t\tthis._factory = factory;\n\t}\n}\nextend(GeometryEditor.prototype, {\n\tsetCopyUserData: function (isUserDataCopied) {\n\t\tthis._isUserDataCopied = isUserDataCopied;\n\t},\n\tedit: function (geometry, operation) {\n\t\tif (geometry === null) return null;\n\t\tvar result = this.editInternal(geometry, operation);\n\t\tif (this._isUserDataCopied) {\n\t\t\tresult.setUserData(geometry.getUserData());\n\t\t}\n\t\treturn result;\n\t},\n\teditInternal: function (geometry, operation) {\n\t\tif (this._factory === null) this._factory = geometry.getFactory();\n\t\tif (geometry instanceof GeometryCollection) {\n\t\t\treturn this.editGeometryCollection(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Polygon) {\n\t\t\treturn this.editPolygon(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n\t\treturn null;\n\t},\n\teditGeometryCollection: function (collection, operation) {\n\t\tvar collectionForType = operation.edit(collection, this._factory);\n\t\tvar geometries = new ArrayList();\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\t\t\tif (geometry === null || geometry.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgeometries.add(geometry);\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPoint) {\n\t\t\treturn this._factory.createMultiPoint(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiLineString) {\n\t\t\treturn this._factory.createMultiLineString(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPolygon) {\n\t\t\treturn this._factory.createMultiPolygon(geometries.toArray([]));\n\t\t}\n\t\treturn this._factory.createGeometryCollection(geometries.toArray([]));\n\t},\n\teditPolygon: function (polygon, operation) {\n\t\tvar newPolygon = operation.edit(polygon, this._factory);\n\t\tif (newPolygon === null) newPolygon = this._factory.createPolygon();\n\t\tif (newPolygon.isEmpty()) {\n\t\t\treturn newPolygon;\n\t\t}\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\n\t\tif (shell === null || shell.isEmpty()) {\n\t\t\treturn this._factory.createPolygon();\n\t\t}\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tholes.add(hole);\n\t\t}\n\t\treturn this._factory.createPolygon(shell, holes.toArray([]));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryEditor;\n\t}\n});\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\nfunction NoOpGeometryOperation() {}\nextend(NoOpGeometryOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn NoOpGeometryOperation;\n\t}\n});\nfunction CoordinateOperation() {}\nextend(CoordinateOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tvar coordinates = this.edit(geometry.getCoordinates(), geometry);\n\t\tif (geometry instanceof LinearRing) {\n\t\t\tif (coordinates === null) return factory.createLinearRing(); else return factory.createLinearRing(coordinates);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\tif (coordinates === null) return factory.createLineString(); else return factory.createLineString(coordinates);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\tif (coordinates === null || coordinates.length === 0) return factory.createPoint(); else return factory.createPoint(coordinates[0]);\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateOperation;\n\t}\n});\nfunction CoordinateSequenceOperation() {}\nextend(CoordinateSequenceOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceOperation;\n\t}\n});\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\nGeometryEditor.CoordinateOperation = CoordinateOperation;\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\n","import hasInterface from '../../../../../hasInterface';\nimport Coordinate from '../Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nimport StringBuilder from '../../../../../java/lang/StringBuilder';\nexport default function CoordinateArraySequence() {\n\tthis._dimension = 3;\n\tthis._coordinates = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coordinates = arguments[0];\n\t\t\tCoordinateArraySequence.call(this, coordinates, 3);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet size = arguments[0];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet coordSeq = arguments[0];\n\t\t\tif (coordSeq === null) {\n\t\t\t\tthis._coordinates = new Array(0).fill(null);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._dimension = coordSeq.getDimension();\n\t\t\tthis._coordinates = new Array(coordSeq.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\t\tthis._coordinates[i] = coordSeq.getCoordinateCopy(i);\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n\t\t\tlet coordinates = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = coordinates;\n\t\t\tthis._dimension = dimension;\n\t\t\tif (coordinates === null) this._coordinates = new Array(0).fill(null);\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tthis._dimension = dimension;\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t}\n\t}\n}\nextend(CoordinateArraySequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\tthis._coordinates[index].x = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\tthis._coordinates[index].y = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\tthis._coordinates[index].z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\n\t\t}\n\t},\n\tsize: function () {\n\t\treturn this._coordinates.length;\n\t},\n\tgetOrdinate: function (index, ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\treturn this._coordinates[index].x;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\treturn this._coordinates[index].y;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\treturn this._coordinates[index].z;\n\t\t}\n\t\treturn Double.NaN;\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this._coordinates[i];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t\tcoord.x = this._coordinates[index].x;\n\t\t\tcoord.y = this._coordinates[index].y;\n\t\t\tcoord.z = this._coordinates[index].z;\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {\n\t\treturn new Coordinate(this._coordinates[i]);\n\t},\n\tgetDimension: function () {\n\t\treturn this._dimension;\n\t},\n\tgetX: function (index) {\n\t\treturn this._coordinates[index].x;\n\t},\n\texpandEnvelope: function (env) {\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tenv.expandToInclude(this._coordinates[i]);\n\t\t}\n\t\treturn env;\n\t},\n\tcopy: function () {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this._coordinates[i].copy();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this._dimension);\n\t},\n\ttoString: function () {\n\t\tif (this._coordinates.length > 0) {\n\t\t\tvar strBuilder = new StringBuilder(17 * this._coordinates.length);\n\t\t\tstrBuilder.append('(');\n\t\t\tstrBuilder.append(this._coordinates[0]);\n\t\t\tfor (var i = 1; i < this._coordinates.length; i++) {\n\t\t\t\tstrBuilder.append(\", \");\n\t\t\t\tstrBuilder.append(this._coordinates[i]);\n\t\t\t}\n\t\t\tstrBuilder.append(')');\n\t\t\treturn strBuilder.toString();\n\t\t} else {\n\t\t\treturn \"()\";\n\t\t}\n\t},\n\tgetY: function (index) {\n\t\treturn this._coordinates[index].y;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this._coordinates;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequence, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequence;\n\t}\n});\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory';\nimport hasInterface from '../../../../../hasInterface';\nimport CoordinateArraySequence from './CoordinateArraySequence';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function CoordinateArraySequenceFactory() {}\nextend(CoordinateArraySequenceFactory.prototype, {\n\treadResolve: function () {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t},\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tif (dimension > 3) dimension = 3;\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\n\t\t\treturn new CoordinateArraySequence(size, dimension);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFactory, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequenceFactory;\n\t}\n});\nCoordinateArraySequenceFactory.instance = function () {\n\treturn CoordinateArraySequenceFactory.instanceObject;\n};\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n","// shared pointer\nvar i\n// shortcuts\nvar defineProperty = Object.defineProperty\nfunction is (a, b) { return (a === b) || (a !== a && b !== b) } // eslint-disable-line\n\nexport default createCollection({\n  // WeakMap#delete(key:void*):boolean\n  'delete': sharedDelete,\n  // :was Map#get(key:void*[, d3fault:void*]):void*\n  // Map#has(key:void*):boolean\n  has: mapHas,\n  // Map#get(key:void*):boolean\n  get: sharedGet,\n  // Map#set(key:void*, value:void*):void\n  set: sharedSet,\n  // Map#keys(void):Iterator\n  keys: sharedKeys,\n  // Map#values(void):Iterator\n  values: sharedValues,\n  // Map#entries(void):Iterator\n  entries: mapEntries,\n  // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n  forEach: sharedForEach,\n  // Map#clear():\n  clear: sharedClear\n})\n\nfunction createCollection (proto, objectOnly) {\n  function Collection (a) {\n    if (!this || this.constructor !== Collection) return new Collection(a)\n    this._keys = []\n    this._values = []\n    this._itp = [] // iteration pointers\n    this.objectOnly = objectOnly\n\n    // parse initial iterable argument passed\n    if (a) init.call(this, a)\n  }\n\n  // define size for non object-only collections\n  if (!objectOnly) {\n    defineProperty(proto, 'size', {\n      get: sharedSize\n    })\n  }\n\n  // set prototype\n  proto.constructor = Collection\n  Collection.prototype = proto\n\n  return Collection\n}\n\nfunction init (a) {\n  // init Set argument, like `[1,2,3,{}]`\n  if (this.add) a.forEach(this.add, this)\n  // init Map argument like `[[1,2], [{}, 4]]`\n  else a.forEach(function (a) { this.set(a[0], a[1]) }, this)\n}\n\nfunction sharedDelete (key) {\n  if (this.has(key)) {\n    this._keys.splice(i, 1)\n    this._values.splice(i, 1)\n    // update iteration pointers\n    this._itp.forEach(function (p) { if (i < p[0]) p[0]-- })\n  }\n  // Aurora here does it while Canary doesn't\n  return i > -1\n}\n\nfunction sharedGet (key) {\n  return this.has(key) ? this._values[i] : undefined\n}\n\nfunction has (list, key) {\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key')\n  // NaN or 0 passed\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\n  else i = list.indexOf(key)\n  return i > -1\n}\n\nfunction mapHas (value) {\n  return has.call(this, this._keys, value)\n}\n\nfunction sharedSet (key, value) {\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value\n  return this\n}\n\nfunction sharedClear () {\n  (this._keys || 0).length =\n    this._values.length = 0\n}\n\nfunction sharedKeys () {\n  return sharedIterator(this._itp, this._keys)\n}\n\nfunction sharedValues () {\n  return sharedIterator(this._itp, this._values)\n}\n\nfunction mapEntries () {\n  return sharedIterator(this._itp, this._keys, this._values)\n}\n\nfunction sharedIterator (itp, array, array2) {\n  var p = [0]\n  var done = false\n  itp.push(p)\n  return {\n    next: function () {\n      var v\n      var k = p[0]\n      if (!done && k < array.length) {\n        v = array2 ? [array[k], array2[k]] : array[k]\n        p[0]++\n      } else {\n        done = true\n        itp.splice(itp.indexOf(p), 1)\n      }\n      return { done: done, value: v }\n    }\n  }\n}\n\nfunction sharedSize () {\n  return this._values.length\n}\n\nfunction sharedForEach (callback, context) {\n  var it = this.entries()\n  for (;;) {\n    var r = it.next()\n    if (r.done) break\n    callback.call(context, r.value[1], r.value[0], this)\n  }\n}\n","import ArrayList from './ArrayList'\nimport MapInterface from './Map'\nimport HashSet from './HashSet'\nimport MapPolyfill from '../../Map'\n\nlet MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nexport default function HashMap () {\n  /**\n   * @type {Object}\n   * @private\n  */\n  this.map_ = new MapImpl()\n}\nHashMap.prototype = new MapInterface()\n\n/**\n * @override\n */\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null\n}\n\n/**\n * @override\n */\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value)\n  return value\n}\n\n/**\n * @override\n */\nHashMap.prototype.values = function () {\n  const arrayList = new ArrayList()\n  const it = this.map_.values()\n  let o = it.next()\n  while (!o.done) {\n    arrayList.add(o.value)\n    o = it.next()\n  }\n  return arrayList\n}\n\n/**\n * @override\n */\nHashMap.prototype.entrySet = function () {\n  const hashSet = new HashSet()\n  this.map_.entries().forEach(entry => hashSet.add(entry))\n  return hashSet\n}\n\n/**\n * @override\n */\nHashMap.prototype.size = function () {\n  return this.map_.size()\n}\n","import HashMap from '../../../../java/util/HashMap';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function PrecisionModel() {\n\tthis._modelType = null;\n\tthis._scale = null;\n\tif (arguments.length === 0) {\n\t\tthis._modelType = PrecisionModel.FLOATING;\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Type) {\n\t\t\tlet modelType = arguments[0];\n\t\t\tthis._modelType = modelType;\n\t\t\tif (modelType === PrecisionModel.FIXED) {\n\t\t\t\tthis.setScale(1.0);\n\t\t\t}\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet scale = arguments[0];\n\t\t\tthis._modelType = PrecisionModel.FIXED;\n\t\t\tthis.setScale(scale);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet pm = arguments[0];\n\t\t\tthis._modelType = pm._modelType;\n\t\t\tthis._scale = pm._scale;\n\t\t}\n\t}\n}\nextend(PrecisionModel.prototype, {\n\tequals: function (other) {\n\t\tif (!(other instanceof PrecisionModel)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherPrecisionModel = other;\n\t\treturn this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale;\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n\t},\n\tgetScale: function () {\n\t\treturn this._scale;\n\t},\n\tisFloating: function () {\n\t\treturn this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE;\n\t},\n\tgetType: function () {\n\t\treturn this._modelType;\n\t},\n\ttoString: function () {\n\t\tvar description = \"UNKNOWN\";\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tdescription = \"Floating\";\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tdescription = \"Floating-Single\";\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\n\t\t}\n\t\treturn description;\n\t},\n\tmakePrecise: function () {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet val = arguments[0];\n\t\t\tif (Double.isNaN(val)) return val;\n\t\t\tif (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\t\tvar floatSingleVal = val;\n\t\t\t\treturn floatSingleVal;\n\t\t\t}\n\t\t\tif (this._modelType === PrecisionModel.FIXED) {\n\t\t\t\treturn Math.round(val * this._scale) / this._scale;\n\t\t\t}\n\t\t\treturn val;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tif (this._modelType === PrecisionModel.FLOATING) return null;\n\t\t\tcoord.x = this.makePrecise(coord.x);\n\t\t\tcoord.y = this.makePrecise(coord.y);\n\t\t}\n\t},\n\tgetMaximumSignificantDigits: function () {\n\t\tvar maxSigDigits = 16;\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tmaxSigDigits = 16;\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tmaxSigDigits = 6;\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n\t\t}\n\t\treturn maxSigDigits;\n\t},\n\tsetScale: function (scale) {\n\t\tthis._scale = Math.abs(scale);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn PrecisionModel;\n\t}\n});\nPrecisionModel.mostPrecise = function (pm1, pm2) {\n\tif (pm1.compareTo(pm2) >= 0) return pm1;\n\treturn pm2;\n};\nfunction Type() {\n\tthis._name = null;\n\tlet name = arguments[0];\n\tthis._name = name;\n\tType.nameToTypeMap.put(name, this);\n}\nextend(Type.prototype, {\n\treadResolve: function () {\n\t\treturn Type.nameToTypeMap.get(this._name);\n\t},\n\ttoString: function () {\n\t\treturn this._name;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Type;\n\t}\n});\nType.serialVersionUID = -5528602631731589822;\nType.nameToTypeMap = new HashMap();\nPrecisionModel.Type = Type;\nPrecisionModel.serialVersionUID = 7777263578777803835;\nPrecisionModel.FIXED = new Type(\"FIXED\");\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory';\nimport LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from './Coordinate';\nimport Point from './Point';\nimport Polygon from './Polygon';\nimport MultiPoint from './MultiPoint';\nimport GeometryEditor from './util/GeometryEditor';\nimport LinearRing from './LinearRing';\nimport extend from '../../../../extend';\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory';\nimport MultiPolygon from './MultiPolygon';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport GeometryCollection from './GeometryCollection';\nimport PrecisionModel from './PrecisionModel';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nimport MultiLineString from './MultiLineString';\nexport default function GeometryFactory() {\n\tthis._precisionModel = null;\n\tthis._coordinateSequenceFactory = null;\n\tthis._SRID = null;\n\tif (arguments.length === 0) {\n\t\tGeometryFactory.call(this, new PrecisionModel(), 0);\n\t} else if (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n\t\t\tlet coordinateSequenceFactory = arguments[0];\n\t\t\tGeometryFactory.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet precisionModel = arguments[0];\n\t\t\tGeometryFactory.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1];\n\t\tGeometryFactory.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t} else if (arguments.length === 3) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2];\n\t\tthis._precisionModel = precisionModel;\n\t\tthis._coordinateSequenceFactory = coordinateSequenceFactory;\n\t\tthis._SRID = SRID;\n\t}\n}\nextend(GeometryFactory.prototype, {\n\ttoGeometry: function (envelope) {\n\t\tif (envelope.isNull()) {\n\t\t\treturn this.createPoint();\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n\t\t}\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n\t},\n\tcreateLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LineString(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiLineString(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet lineStrings = arguments[0];\n\t\t\treturn new MultiLineString(lineStrings, this);\n\t\t}\n\t},\n\tbuildGeometry: function (geomList) {\n\t\tvar geomClass = null;\n\t\tvar isHeterogeneous = false;\n\t\tvar hasGeometryCollection = false;\n\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\tvar geom = i.next();\n\t\t\tvar partClass = geom.getClass();\n\t\t\tif (geomClass === null) {\n\t\t\t\tgeomClass = partClass;\n\t\t\t}\n\t\t\tif (partClass !== geomClass) {\n\t\t\t\tisHeterogeneous = true;\n\t\t\t}\n\t\t\tif (geom instanceof GeometryCollection) hasGeometryCollection = true;\n\t\t}\n\t\tif (geomClass === null) {\n\t\t\treturn this.createGeometryCollection();\n\t\t}\n\t\tif (isHeterogeneous || hasGeometryCollection) {\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n\t\t}\n\t\tvar geom0 = geomList.iterator().next();\n\t\tvar isCollection = geomList.size() > 1;\n\t\tif (isCollection) {\n\t\t\tif (geom0 instanceof Polygon) {\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n\t\t\t} else if (geom0 instanceof LineString) {\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n\t\t\t} else if (geom0 instanceof Point) {\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n\t\t\t}\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n\t\t}\n\t\treturn geom0;\n\t},\n\tcreateMultiPointFromCoords: function (coordinates) {\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t},\n\tcreatePoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet coordinate = arguments[0];\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new Point(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinateSequenceFactory: function () {\n\t\treturn this._coordinateSequenceFactory;\n\t},\n\tcreatePolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPolygon(null, null);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(shell, null);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet shell = arguments[0], holes = arguments[1];\n\t\t\treturn new Polygon(shell, holes, this);\n\t\t}\n\t},\n\tgetSRID: function () {\n\t\treturn this._SRID;\n\t},\n\tcreateGeometryCollection: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new GeometryCollection(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geometries = arguments[0];\n\t\t\treturn new GeometryCollection(geometries, this);\n\t\t}\n\t},\n\tcreateGeometry: function (g) {\n\t\tvar editor = new GeometryEditor(this);\n\t\treturn editor.edit(g, {\n\t\t\tedit: function () {\n\t\t\t\tif (arguments.length === 2 && (arguments[1] instanceof Geometry && hasInterface(arguments[0], CoordinateSequence))) {\n\t\t\t\t\tlet coordSeq = arguments[0], geometry = arguments[1];\n\t\t\t\t\treturn this._coordinateSequenceFactory.create(coordSeq);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this._precisionModel;\n\t},\n\tcreateLinearRing: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LinearRing(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiPolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPolygon(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet polygons = arguments[0];\n\t\t\treturn new MultiPolygon(polygons, this);\n\t\t}\n\t},\n\tcreateMultiPoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPoint(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet point = arguments[0];\n\t\t\t\treturn new MultiPoint(point, this);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\tif (coordinates === null) {\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\n\t\t\t\t}\n\t\t\t\tvar points = new Array(coordinates.size()).fill(null);\n\t\t\t\tfor (var i = 0; i < coordinates.size(); i++) {\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\n\t\t\t\t\tCoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\n\t\t\t\t}\n\t\t\t\treturn this.createMultiPoint(points);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFactory;\n\t}\n});\nGeometryFactory.toMultiPolygonArray = function (multiPolygons) {\n\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n\treturn multiPolygons.toArray(multiPolygonArray);\n};\nGeometryFactory.toGeometryArray = function (geometries) {\n\tif (geometries === null) return null;\n\tvar geometryArray = new Array(geometries.size()).fill(null);\n\treturn geometries.toArray(geometryArray);\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function () {\n\treturn CoordinateArraySequenceFactory.instance();\n};\nGeometryFactory.toMultiLineStringArray = function (multiLineStrings) {\n\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n\treturn multiLineStrings.toArray(multiLineStringArray);\n};\nGeometryFactory.toLineStringArray = function (lineStrings) {\n\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\n\treturn lineStrings.toArray(lineStringArray);\n};\nGeometryFactory.toMultiPointArray = function (multiPoints) {\n\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\n\treturn multiPoints.toArray(multiPointArray);\n};\nGeometryFactory.toLinearRingArray = function (linearRings) {\n\tvar linearRingArray = new Array(linearRings.size()).fill(null);\n\treturn linearRings.toArray(linearRingArray);\n};\nGeometryFactory.toPointArray = function (points) {\n\tvar pointArray = new Array(points.size()).fill(null);\n\treturn points.toArray(pointArray);\n};\nGeometryFactory.toPolygonArray = function (polygons) {\n\tvar polygonArray = new Array(polygons.size()).fill(null);\n\treturn polygons.toArray(polygonArray);\n};\nGeometryFactory.createPointFromInternalCoord = function (coord, exemplar) {\n\texemplar.getPrecisionModel().makePrecise(coord);\n\treturn exemplar.getFactory().createPoint(coord);\n};\nGeometryFactory.serialVersionUID = -6820524753094095635;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nexport default function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n}\n\nextend(WKTParser.prototype, {\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read (wkt) {\n    var geometry, type, str\n    wkt = wkt.replace(/[\\n\\r]/g, ' ')\n    var matches = regExes.typeStr.exec(wkt)\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt)\n      matches[2] = undefined\n    }\n    if (matches) {\n      type = matches[1].toLowerCase()\n      str = matches[2]\n      if (parse[type]) {\n        geometry = parse[type].apply(this, [str])\n      }\n    }\n\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt)\n\n    return geometry\n  },\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write (geometry) {\n    return this.extractGeometry(geometry)\n  },\n\n  /**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */\n  extractGeometry (geometry) {\n    var type = geometry.getGeometryType().toLowerCase()\n    if (!extract[type]) {\n      return null\n    }\n    var wktType = type.toUpperCase()\n    var data\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY'\n    } else {\n      data = wktType + '(' + extract[type].apply(this, [geometry]) + ')'\n    }\n    return data\n  }\n})\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nconst extract = {\n  coordinate (coordinate) {\n    return coordinate.x + ' ' + coordinate.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point (point) {\n    return extract.coordinate.call(this, point._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint (multipoint) {\n    var array = []\n    for (let i = 0, len = multipoint._geometries.length; i < len; ++i) {\n      array.push('(' + extract.point.apply(this, [multipoint._geometries[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring (linestring) {\n    var array = []\n    for (let i = 0, len = linestring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [linestring._points._coordinates[i]]))\n    }\n    return array.join(',')\n  },\n\n  linearring (linearring) {\n    var array = []\n    for (let i = 0, len = linearring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.apply(this, [linearring._points._coordinates[i]]))\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring (multilinestring) {\n    var array = []\n    for (let i = 0, len = multilinestring._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract.linestring.apply(this, [multilinestring._geometries[i]]) +\n        ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon (polygon) {\n    var array = []\n    array.push('(' + extract.linestring.apply(this, [polygon._shell]) + ')')\n    for (let i = 0, len = polygon._holes.length; i < len; ++i) {\n      array.push('(' + extract.linestring.apply(this, [polygon._holes[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon (multipolygon) {\n    var array = []\n    for (let i = 0, len = multipolygon._geometries.length; i < len; ++i) {\n      array.push('(' + extract.polygon.apply(this, [multipolygon._geometries[i]]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection (collection) {\n    var array = []\n    for (let i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection._geometries[i]))\n    }\n    return array.join(',')\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nconst parse = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces)\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point\n    var points = str.trim().split(',')\n    var components = []\n    for (let i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1')\n      components.push(parse.point.apply(this, [point]))\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces)\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces)\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])))\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line\n    var lines = str.trim().split(regExes.parenComma)\n    var components = []\n    for (let i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1')\n      components.push(parse.linestring.apply(this, [line]))\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring\n    var rings = str.trim().split(regExes.parenComma)\n    var shell\n    var holes = []\n    for (let i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1')\n      linestring = parse.linestring.apply(this, [ring])\n      linearring = this.geometryFactory.createLinearRing(linestring._points)\n      if (i === 0) {\n        shell = linearring\n      } else {\n        holes.push(linearring)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon\n    var polygons = str.trim().split(regExes.doubleParenComma)\n    var components = []\n    for (let i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1')\n      components.push(parse.polygon.apply(this, [polygon]))\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1')\n    var wktArray = str.trim().split('|')\n    var components = []\n    for (let i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]))\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory)\n}\n\nextend(WKTWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n\nextend(WKTWriter, {\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  toLineString (p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented')\n    }\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n})\n","import WKTWriter from '../io/WKTWriter';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Assert from '../util/Assert';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default function LineIntersector() {\n\tthis._result = null;\n\tthis._inputLines = Array(2).fill().map(() => Array(2));\n\tthis._intPt = new Array(2).fill(null);\n\tthis._intLineIndex = null;\n\tthis._isProper = null;\n\tthis._pa = null;\n\tthis._pb = null;\n\tthis._precisionModel = null;\n\tthis._intPt[0] = new Coordinate();\n\tthis._intPt[1] = new Coordinate();\n\tthis._pa = this._intPt[0];\n\tthis._pb = this._intPt[1];\n\tthis._result = 0;\n}\nextend(LineIntersector.prototype, {\n\tgetIndexAlongSegment: function (segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intLineIndex[segmentIndex][intIndex];\n\t},\n\tgetTopologySummary: function () {\n\t\tvar catBuilder = new StringBuilder();\n\t\tif (this.isEndPoint()) catBuilder.append(\" endpoint\");\n\t\tif (this._isProper) catBuilder.append(\" proper\");\n\t\tif (this.isCollinear()) catBuilder.append(\" collinear\");\n\t\treturn catBuilder.toString();\n\t},\n\tcomputeIntersection: function (p1, p2, p3, p4) {\n\t\tthis._inputLines[0][0] = p1;\n\t\tthis._inputLines[0][1] = p2;\n\t\tthis._inputLines[1][0] = p3;\n\t\tthis._inputLines[1][1] = p4;\n\t\tthis._result = this.computeIntersect(p1, p2, p3, p4);\n\t},\n\tgetIntersectionNum: function () {\n\t\treturn this._result;\n\t},\n\tcomputeIntLineIndex: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._intLineIndex === null) {\n\t\t\t\tthis._intLineIndex = Array(2).fill().map(() => Array(2));\n\t\t\t\tthis.computeIntLineIndex(0);\n\t\t\t\tthis.computeIntLineIndex(1);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet segmentIndex = arguments[0];\n\t\t\tvar dist0 = this.getEdgeDistance(segmentIndex, 0);\n\t\t\tvar dist1 = this.getEdgeDistance(segmentIndex, 1);\n\t\t\tif (dist0 > dist1) {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 0;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 1;\n\t\t\t} else {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 1;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 0;\n\t\t\t}\n\t\t}\n\t},\n\tisProper: function () {\n\t\treturn this.hasIntersection() && this._isProper;\n\t},\n\tsetPrecisionModel: function (precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t},\n\tisInteriorIntersection: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isInteriorIntersection(0)) return true;\n\t\t\tif (this.isInteriorIntersection(1)) return true;\n\t\t\treturn false;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet inputLineIndex = arguments[0];\n\t\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\t\tif (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\tgetIntersection: function (intIndex) {\n\t\treturn this._intPt[intIndex];\n\t},\n\tisEndPoint: function () {\n\t\treturn this.hasIntersection() && !this._isProper;\n\t},\n\thasIntersection: function () {\n\t\treturn this._result !== LineIntersector.NO_INTERSECTION;\n\t},\n\tgetEdgeDistance: function (segmentIndex, intIndex) {\n\t\tvar dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n\t\treturn dist;\n\t},\n\tisCollinear: function () {\n\t\treturn this._result === LineIntersector.COLLINEAR_INTERSECTION;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary();\n\t},\n\tgetEndpoint: function (segmentIndex, ptIndex) {\n\t\treturn this._inputLines[segmentIndex][ptIndex];\n\t},\n\tisIntersection: function (pt) {\n\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\tif (this._intPt[i].equals2D(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetIntersectionAlongSegment: function (segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intPt[this._intLineIndex[segmentIndex][intIndex]];\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineIntersector;\n\t}\n});\nLineIntersector.computeEdgeDistance = function (p, p0, p1) {\n\tvar dx = Math.abs(p1.x - p0.x);\n\tvar dy = Math.abs(p1.y - p0.y);\n\tvar dist = -1.0;\n\tif (p.equals(p0)) {\n\t\tdist = 0.0;\n\t} else if (p.equals(p1)) {\n\t\tif (dx > dy) dist = dx; else dist = dy;\n\t} else {\n\t\tvar pdx = Math.abs(p.x - p0.x);\n\t\tvar pdy = Math.abs(p.y - p0.y);\n\t\tif (dx > dy) dist = pdx; else dist = pdy;\n\t\tif (dist === 0.0 && !p.equals(p0)) {\n\t\t\tdist = Math.max(pdx, pdy);\n\t\t}\n\t}\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\n\treturn dist;\n};\nLineIntersector.nonRobustComputeEdgeDistance = function (p, p1, p2) {\n\tvar dx = p.x - p1.x;\n\tvar dy = p.y - p1.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\n\treturn dist;\n};\nLineIntersector.DONT_INTERSECT = 0;\nLineIntersector.DO_INTERSECT = 1;\nLineIntersector.COLLINEAR = 2;\nLineIntersector.NO_INTERSECTION = 0;\nLineIntersector.POINT_INTERSECTION = 1;\nLineIntersector.COLLINEAR_INTERSECTION = 2;\n","import NotRepresentableException from './NotRepresentableException';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nimport System from '../../../../java/lang/System';\nimport HCoordinate from './HCoordinate';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport Distance from './Distance';\nimport LineIntersector from './LineIntersector';\nexport default function RobustLineIntersector() {\n\tLineIntersector.apply(this);\n}\ninherits(RobustLineIntersector, LineIntersector);\nextend(RobustLineIntersector.prototype, {\n\tisInSegmentEnvelopes: function (intPt) {\n\t\tvar env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n\t\tvar env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n\t\treturn env0.contains(intPt) && env1.contains(intPt);\n\t},\n\tcomputeIntersection: function () {\n\t\tif (arguments.length === 3) {\n\t\t\tlet p = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\t\t\tthis._isProper = false;\n\t\t\tif (Envelope.intersects(p1, p2, p)) {\n\t\t\t\tif (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n\t\t\t\t\tthis._isProper = true;\n\t\t\t\t\tif (p.equals(p1) || p.equals(p2)) {\n\t\t\t\t\t\tthis._isProper = false;\n\t\t\t\t\t}\n\t\t\t\t\tthis._result = LineIntersector.POINT_INTERSECTION;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._result = LineIntersector.NO_INTERSECTION;\n\t\t} else return LineIntersector.prototype.computeIntersection.apply(this, arguments);\n\t},\n\tnormalizeToMinimum: function (n1, n2, n3, n4, normPt) {\n\t\tnormPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n\t\tnormPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n\t\tn1.x -= normPt.x;\n\t\tn1.y -= normPt.y;\n\t\tn2.x -= normPt.x;\n\t\tn2.y -= normPt.y;\n\t\tn3.x -= normPt.x;\n\t\tn3.y -= normPt.y;\n\t\tn4.x -= normPt.x;\n\t\tn4.y -= normPt.y;\n\t},\n\tsafeHCoordinateIntersection: function (p1, p2, q1, q2) {\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(p1, p2, q1, q2);\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotRepresentableException) {\n\t\t\t\tintPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n\t\t\t} else throw e;\n\t\t} finally {}\n\t\treturn intPt;\n\t},\n\tintersection: function (p1, p2, q1, q2) {\n\t\tvar intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n\t\tif (!this.isInSegmentEnvelopes(intPt)) {\n\t\t\tintPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n\t\t}\n\t\tif (this._precisionModel !== null) {\n\t\t\tthis._precisionModel.makePrecise(intPt);\n\t\t}\n\t\treturn intPt;\n\t},\n\tsmallestInAbsValue: function (x1, x2, x3, x4) {\n\t\tvar x = x1;\n\t\tvar xabs = Math.abs(x);\n\t\tif (Math.abs(x2) < xabs) {\n\t\t\tx = x2;\n\t\t\txabs = Math.abs(x2);\n\t\t}\n\t\tif (Math.abs(x3) < xabs) {\n\t\t\tx = x3;\n\t\t\txabs = Math.abs(x3);\n\t\t}\n\t\tif (Math.abs(x4) < xabs) {\n\t\t\tx = x4;\n\t\t}\n\t\treturn x;\n\t},\n\tcheckDD: function (p1, p2, q1, q2, intPt) {\n\t\tvar intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n\t\tvar isIn = this.isInSegmentEnvelopes(intPtDD);\n\t\tSystem.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\n\t\tif (intPt.distance(intPtDD) > 0.0001) {\n\t\t\tSystem.out.println(\"Distance = \" + intPt.distance(intPtDD));\n\t\t}\n\t},\n\tintersectionWithNormalization: function (p1, p2, q1, q2) {\n\t\tvar n1 = new Coordinate(p1);\n\t\tvar n2 = new Coordinate(p2);\n\t\tvar n3 = new Coordinate(q1);\n\t\tvar n4 = new Coordinate(q2);\n\t\tvar normPt = new Coordinate();\n\t\tthis.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n\t\tvar intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n\t\tintPt.x += normPt.x;\n\t\tintPt.y += normPt.y;\n\t\treturn intPt;\n\t},\n\tcomputeCollinearIntersection: function (p1, p2, q1, q2) {\n\t\tvar p1q1p2 = Envelope.intersects(p1, p2, q1);\n\t\tvar p1q2p2 = Envelope.intersects(p1, p2, q2);\n\t\tvar q1p1q2 = Envelope.intersects(q1, q2, p1);\n\t\tvar q1p2q2 = Envelope.intersects(q1, q2, p2);\n\t\tif (p1q1p2 && p1q2p2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = q2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (q1p1q2 && q1p2q2) {\n\t\t\tthis._intPt[0] = p1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\treturn LineIntersector.NO_INTERSECTION;\n\t},\n\tnormalizeToEnvCentre: function (n00, n01, n10, n11, normPt) {\n\t\tvar minX0 = n00.x < n01.x ? n00.x : n01.x;\n\t\tvar minY0 = n00.y < n01.y ? n00.y : n01.y;\n\t\tvar maxX0 = n00.x > n01.x ? n00.x : n01.x;\n\t\tvar maxY0 = n00.y > n01.y ? n00.y : n01.y;\n\t\tvar minX1 = n10.x < n11.x ? n10.x : n11.x;\n\t\tvar minY1 = n10.y < n11.y ? n10.y : n11.y;\n\t\tvar maxX1 = n10.x > n11.x ? n10.x : n11.x;\n\t\tvar maxY1 = n10.y > n11.y ? n10.y : n11.y;\n\t\tvar intMinX = minX0 > minX1 ? minX0 : minX1;\n\t\tvar intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n\t\tvar intMinY = minY0 > minY1 ? minY0 : minY1;\n\t\tvar intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n\t\tvar intMidX = (intMinX + intMaxX) / 2.0;\n\t\tvar intMidY = (intMinY + intMaxY) / 2.0;\n\t\tnormPt.x = intMidX;\n\t\tnormPt.y = intMidY;\n\t\tn00.x -= normPt.x;\n\t\tn00.y -= normPt.y;\n\t\tn01.x -= normPt.x;\n\t\tn01.y -= normPt.y;\n\t\tn10.x -= normPt.x;\n\t\tn10.y -= normPt.y;\n\t\tn11.x -= normPt.x;\n\t\tn11.y -= normPt.y;\n\t},\n\tcomputeIntersect: function (p1, p2, q1, q2) {\n\t\tthis._isProper = false;\n\t\tif (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\n\t\tvar Pq1 = Orientation.index(p1, p2, q1);\n\t\tvar Pq2 = Orientation.index(p1, p2, q2);\n\t\tif (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar Qp1 = Orientation.index(q1, q2, p1);\n\t\tvar Qp2 = Orientation.index(q1, q2, p2);\n\t\tif (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n\t\tif (collinear) {\n\t\t\treturn this.computeCollinearIntersection(p1, p2, q1, q2);\n\t\t}\n\t\tif (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n\t\t\tthis._isProper = false;\n\t\t\tif (p1.equals2D(q1) || p1.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p1;\n\t\t\t} else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p2;\n\t\t\t} else if (Pq1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q1);\n\t\t\t} else if (Pq2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q2);\n\t\t\t} else if (Qp1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p1);\n\t\t\t} else if (Qp2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p2);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._isProper = true;\n\t\t\tthis._intPt[0] = this.intersection(p1, p2, q1, q2);\n\t\t}\n\t\treturn LineIntersector.POINT_INTERSECTION;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RobustLineIntersector;\n\t}\n});\nRobustLineIntersector.nearestEndpoint = function (p1, p2, q1, q2) {\n\tvar nearestPt = p1;\n\tvar minDist = Distance.pointToSegment(p1, q1, q2);\n\tvar dist = Distance.pointToSegment(p2, q1, q2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = p2;\n\t}\n\tdist = Distance.pointToSegment(q1, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q1;\n\t}\n\tdist = Distance.pointToSegment(q2, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q2;\n\t}\n\treturn nearestPt;\n};\n","import NotRepresentableException from '../algorithm/NotRepresentableException';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport HCoordinate from '../algorithm/HCoordinate';\nimport Serializable from '../../../../java/io/Serializable';\nimport Distance from '../algorithm/Distance';\nexport default function LineSegment() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tif (arguments.length === 0) {\n\t\tLineSegment.call(this, new Coordinate(), new Coordinate());\n\t} else if (arguments.length === 1) {\n\t\tlet ls = arguments[0];\n\t\tLineSegment.call(this, ls.p0, ls.p1);\n\t} else if (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t} else if (arguments.length === 4) {\n\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\n\t\tLineSegment.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\n\t}\n}\nextend(LineSegment.prototype, {\n\tminX: function () {\n\t\treturn Math.min(this.p0.x, this.p1.x);\n\t},\n\torientationIndex: function () {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar orient0 = Orientation.index(this.p0, this.p1, seg.p0);\n\t\t\tvar orient1 = Orientation.index(this.p0, this.p1, seg.p1);\n\t\t\tif (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\n\t\t\tif (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\n\t\t\treturn 0;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn Orientation.index(this.p0, this.p1, p);\n\t\t}\n\t},\n\ttoGeometry: function (geomFactory) {\n\t\treturn geomFactory.createLineString([this.p0, this.p1]);\n\t},\n\tisVertical: function () {\n\t\treturn this.p0.x === this.p1.x;\n\t},\n\tequals: function (o) {\n\t\tif (!(o instanceof LineSegment)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar other = o;\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1);\n\t},\n\tintersection: function (line) {\n\t\tvar li = new RobustLineIntersector();\n\t\tli.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n\t\tif (li.hasIntersection()) return li.getIntersection(0);\n\t\treturn null;\n\t},\n\tproject: function () {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tif (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\n\t\t\tvar r = this.projectionFactor(p);\n\t\t\tvar coord = new Coordinate();\n\t\t\tcoord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n\t\t\tcoord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n\t\t\treturn coord;\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar pf0 = this.projectionFactor(seg.p0);\n\t\t\tvar pf1 = this.projectionFactor(seg.p1);\n\t\t\tif (pf0 >= 1.0 && pf1 >= 1.0) return null;\n\t\t\tif (pf0 <= 0.0 && pf1 <= 0.0) return null;\n\t\t\tvar newp0 = this.project(seg.p0);\n\t\t\tif (pf0 < 0.0) newp0 = this.p0;\n\t\t\tif (pf0 > 1.0) newp0 = this.p1;\n\t\t\tvar newp1 = this.project(seg.p1);\n\t\t\tif (pf1 < 0.0) newp1 = this.p0;\n\t\t\tif (pf1 > 1.0) newp1 = this.p1;\n\t\t\treturn new LineSegment(newp0, newp1);\n\t\t}\n\t},\n\tnormalize: function () {\n\t\tif (this.p1.compareTo(this.p0) < 0) this.reverse();\n\t},\n\tangle: function () {\n\t\treturn Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n\t},\n\tgetCoordinate: function (i) {\n\t\tif (i === 0) return this.p0;\n\t\treturn this.p1;\n\t},\n\tdistancePerpendicular: function (p) {\n\t\treturn Distance.pointToLinePerpendicular(p, this.p0, this.p1);\n\t},\n\tminY: function () {\n\t\treturn Math.min(this.p0.y, this.p1.y);\n\t},\n\tmidPoint: function () {\n\t\treturn LineSegment.midPoint(this.p0, this.p1);\n\t},\n\tprojectionFactor: function (p) {\n\t\tif (p.equals(this.p0)) return 0.0;\n\t\tif (p.equals(this.p1)) return 1.0;\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = dx * dx + dy * dy;\n\t\tif (len <= 0.0) return Double.NaN;\n\t\tvar r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n\t\treturn r;\n\t},\n\tclosestPoints: function (line) {\n\t\tvar intPt = this.intersection(line);\n\t\tif (intPt !== null) {\n\t\t\treturn [intPt, intPt];\n\t\t}\n\t\tvar closestPt = new Array(2).fill(null);\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar dist = null;\n\t\tvar close00 = this.closestPoint(line.p0);\n\t\tminDistance = close00.distance(line.p0);\n\t\tclosestPt[0] = close00;\n\t\tclosestPt[1] = line.p0;\n\t\tvar close01 = this.closestPoint(line.p1);\n\t\tdist = close01.distance(line.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = close01;\n\t\t\tclosestPt[1] = line.p1;\n\t\t}\n\t\tvar close10 = line.closestPoint(this.p0);\n\t\tdist = close10.distance(this.p0);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p0;\n\t\t\tclosestPt[1] = close10;\n\t\t}\n\t\tvar close11 = line.closestPoint(this.p1);\n\t\tdist = close11.distance(this.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p1;\n\t\t\tclosestPt[1] = close11;\n\t\t}\n\t\treturn closestPt;\n\t},\n\tclosestPoint: function (p) {\n\t\tvar factor = this.projectionFactor(p);\n\t\tif (factor > 0 && factor < 1) {\n\t\t\treturn this.project(p);\n\t\t}\n\t\tvar dist0 = this.p0.distance(p);\n\t\tvar dist1 = this.p1.distance(p);\n\t\tif (dist0 < dist1) return this.p0;\n\t\treturn this.p1;\n\t},\n\tmaxX: function () {\n\t\treturn Math.max(this.p0.x, this.p1.x);\n\t},\n\tgetLength: function () {\n\t\treturn this.p0.distance(this.p1);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tvar comp0 = this.p0.compareTo(other.p0);\n\t\tif (comp0 !== 0) return comp0;\n\t\treturn this.p1.compareTo(other.p1);\n\t},\n\treverse: function () {\n\t\tvar temp = this.p0;\n\t\tthis.p0 = this.p1;\n\t\tthis.p1 = temp;\n\t},\n\tequalsTopo: function (other) {\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\n\t},\n\tlineIntersection: function (line) {\n\t\ttry {\n\t\t\tvar intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n\t\t\treturn intPt;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {} else throw ex;\n\t\t} finally {}\n\t\treturn null;\n\t},\n\tmaxY: function () {\n\t\treturn Math.max(this.p0.y, this.p1.y);\n\t},\n\tpointAlongOffset: function (segmentLengthFraction, offsetDistance) {\n\t\tvar segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tvar segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = 0.0;\n\t\tvar uy = 0.0;\n\t\tif (offsetDistance !== 0.0) {\n\t\t\tif (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n\t\t\tux = offsetDistance * dx / len;\n\t\t\tuy = offsetDistance * dy / len;\n\t\t}\n\t\tvar offsetx = segx - uy;\n\t\tvar offsety = segy + ux;\n\t\tvar coord = new Coordinate(offsetx, offsety);\n\t\treturn coord;\n\t},\n\tsetCoordinates: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ls = arguments[0];\n\t\t\tthis.setCoordinates(ls.p0, ls.p1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tthis.p0.x = p0.x;\n\t\t\tthis.p0.y = p0.y;\n\t\t\tthis.p1.x = p1.x;\n\t\t\tthis.p1.y = p1.y;\n\t\t}\n\t},\n\tsegmentFraction: function (inputPt) {\n\t\tvar segFrac = this.projectionFactor(inputPt);\n\t\tif (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\n\t\treturn segFrac;\n\t},\n\ttoString: function () {\n\t\treturn \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n\t},\n\tisHorizontal: function () {\n\t\treturn this.p0.y === this.p1.y;\n\t},\n\tdistance: function () {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet ls = arguments[0];\n\t\t\treturn Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn Distance.pointToSegment(p, this.p0, this.p1);\n\t\t}\n\t},\n\tpointAlong: function (segmentLengthFraction) {\n\t\tvar coord = new Coordinate();\n\t\tcoord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tcoord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\treturn coord;\n\t},\n\thashCode: function () {\n\t\tvar bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\n\t\tbits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\n\t\tvar hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n\t\tvar bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\n\t\tbits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\n\t\tvar hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n\t\treturn hash0 ^ hash1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegment;\n\t}\n});\nLineSegment.midPoint = function (p0, p1) {\n\treturn new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n};\nLineSegment.serialVersionUID = 3252005833466256227;\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Location() {}\nextend(Location.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Location;\n\t}\n});\nLocation.toLocationSymbol = function (locationValue) {\n\tswitch (locationValue) {\n\t\tcase Location.EXTERIOR:\n\t\t\treturn 'e';\n\t\tcase Location.BOUNDARY:\n\t\t\treturn 'b';\n\t\tcase Location.INTERIOR:\n\t\t\treturn 'i';\n\t\tcase Location.NONE:\n\t\t\treturn '-';\n\t}\n\tthrow new IllegalArgumentException(\"Unknown location value: \" + locationValue);\n};\nLocation.INTERIOR = 0;\nLocation.BOUNDARY = 1;\nLocation.EXTERIOR = 2;\nLocation.NONE = -1;\n","import Location from './Location';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Dimension from './Dimension';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default function IntersectionMatrix() {\n\tthis._matrix = null;\n\tif (arguments.length === 0) {\n\t\tthis._matrix = Array(3).fill().map(() => Array(3));\n\t\tthis.setAll(Dimension.FALSE);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet elements = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis.set(elements);\n\t\t} else if (arguments[0] instanceof IntersectionMatrix) {\n\t\t\tlet other = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR];\n\t\t}\n\t}\n}\nextend(IntersectionMatrix.prototype, {\n\tisIntersects: function () {\n\t\treturn !this.isDisjoint();\n\t},\n\tisCovers: function () {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCoveredBy: function () {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tset: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet dimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < dimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], dimensionValue = arguments[2];\n\t\t\tthis._matrix[row][column] = dimensionValue;\n\t\t}\n\t},\n\tisContains: function () {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tsetAtLeast: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet minimumDimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < minimumDimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2];\n\t\t\tif (this._matrix[row][column] < minimumDimensionValue) {\n\t\t\t\tthis._matrix[row][column] = minimumDimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tsetAtLeastIfValid: function (row, column, minimumDimensionValue) {\n\t\tif (row >= 0 && column >= 0) {\n\t\t\tthis.setAtLeast(row, column, minimumDimensionValue);\n\t\t}\n\t},\n\tisWithin: function () {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tisTouches: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA > dimensionOfGeometryB) {\n\t\t\treturn this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]));\n\t\t}\n\t\treturn false;\n\t},\n\tisOverlaps: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\treturn false;\n\t},\n\tisEquals: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA !== dimensionOfGeometryB) {\n\t\t\treturn false;\n\t\t}\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\ttoString: function () {\n\t\tvar builder = new StringBuilder(\"123456789\");\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tbuilder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t},\n\tsetAll: function (dimensionValue) {\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tthis._matrix[ai][bi] = dimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tget: function (row, column) {\n\t\treturn this._matrix[row][column];\n\t},\n\ttranspose: function () {\n\t\tvar temp = this._matrix[1][0];\n\t\tthis._matrix[1][0] = this._matrix[0][1];\n\t\tthis._matrix[0][1] = temp;\n\t\ttemp = this._matrix[2][0];\n\t\tthis._matrix[2][0] = this._matrix[0][2];\n\t\tthis._matrix[0][2] = temp;\n\t\ttemp = this._matrix[2][1];\n\t\tthis._matrix[2][1] = this._matrix[1][2];\n\t\tthis._matrix[1][2] = temp;\n\t\treturn this;\n\t},\n\tmatches: function (requiredDimensionSymbols) {\n\t\tif (requiredDimensionSymbols.length !== 9) {\n\t\t\tthrow new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\n\t\t}\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tif (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function (im) {\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tthis.setAtLeast(i, j, im.get(i, j));\n\t\t\t}\n\t\t}\n\t},\n\tisDisjoint: function () {\n\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCrosses: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 0;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn IntersectionMatrix;\n\t}\n});\nIntersectionMatrix.matches = function () {\n\tif (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\n\t\tlet actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1];\n\t\tif (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n\t\tlet actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1];\n\t\tvar m = new IntersectionMatrix(actualDimensionSymbols);\n\t\treturn m.matches(requiredDimensionSymbols);\n\t}\n};\nIntersectionMatrix.isTrue = function (actualDimensionValue) {\n\tif (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","import LineString from '../geom/LineString';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function Centroid() {\n\tthis._areaBasePt = null;\n\tthis._triangleCent3 = new Coordinate();\n\tthis._areasum2 = 0;\n\tthis._cg3 = new Coordinate();\n\tthis._lineCentSum = new Coordinate();\n\tthis._totalLength = 0.0;\n\tthis._ptCount = 0;\n\tthis._ptCentSum = new Coordinate();\n\tlet geom = arguments[0];\n\tthis._areaBasePt = null;\n\tthis.add(geom);\n}\nextend(Centroid.prototype, {\n\tsetAreaBasePoint: function (basePt) {\n\t\tthis._areaBasePt = basePt;\n\t},\n\taddPoint: function (pt) {\n\t\tthis._ptCount += 1;\n\t\tthis._ptCentSum.x += pt.x;\n\t\tthis._ptCentSum.y += pt.y;\n\t},\n\taddLineSegments: function (pts) {\n\t\tvar lineLen = 0.0;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segmentLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segmentLen === 0.0) continue;\n\t\t\tlineLen += segmentLen;\n\t\t\tvar midx = (pts[i].x + pts[i + 1].x) / 2;\n\t\t\tthis._lineCentSum.x += segmentLen * midx;\n\t\t\tvar midy = (pts[i].y + pts[i + 1].y) / 2;\n\t\t\tthis._lineCentSum.y += segmentLen * midy;\n\t\t}\n\t\tthis._totalLength += lineLen;\n\t\tif (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\n\t},\n\taddHole: function (pts) {\n\t\tvar isPositiveArea = Orientation.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\tgetCentroid: function () {\n\t\tvar cent = new Coordinate();\n\t\tif (Math.abs(this._areasum2) > 0.0) {\n\t\t\tcent.x = this._cg3.x / 3 / this._areasum2;\n\t\t\tcent.y = this._cg3.y / 3 / this._areasum2;\n\t\t} else if (this._totalLength > 0.0) {\n\t\t\tcent.x = this._lineCentSum.x / this._totalLength;\n\t\t\tcent.y = this._lineCentSum.y / this._totalLength;\n\t\t} else if (this._ptCount > 0) {\n\t\t\tcent.x = this._ptCentSum.x / this._ptCount;\n\t\t\tcent.y = this._ptCentSum.y / this._ptCount;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\treturn cent;\n\t},\n\taddShell: function (pts) {\n\t\tif (pts.length > 0) this.setAreaBasePoint(pts[0]);\n\t\tvar isPositiveArea = !Orientation.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\taddTriangle: function (p0, p1, p2, isPositiveArea) {\n\t\tvar sign = isPositiveArea ? 1.0 : -1.0;\n\t\tCentroid.centroid3(p0, p1, p2, this._triangleCent3);\n\t\tvar area2 = Centroid.area2(p0, p1, p2);\n\t\tthis._cg3.x += sign * area2 * this._triangleCent3.x;\n\t\tthis._cg3.y += sign * area2 * this._triangleCent3.y;\n\t\tthis._areasum2 += sign * area2;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.addShell(poly.getExteriorRing().getCoordinates());\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.addHole(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom.isEmpty()) return null;\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.addPoint(geom.getCoordinate());\n\t\t\t} else if (geom instanceof LineString) {\n\t\t\t\tthis.addLineSegments(geom.getCoordinates());\n\t\t\t} else if (geom instanceof Polygon) {\n\t\t\t\tvar poly = geom;\n\t\t\t\tthis.add(poly);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Centroid;\n\t}\n});\nCentroid.area2 = function (p1, p2, p3) {\n\treturn (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\n};\nCentroid.centroid3 = function (p1, p2, p3, c) {\n\tc.x = p1.x + p2.x + p3.x;\n\tc.y = p1.y + p2.y + p3.y;\n\treturn null;\n};\nCentroid.getCentroid = function (geom) {\n\tvar cent = new Centroid(geom);\n\treturn cent.getCentroid();\n};\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nexport default function RayCrossingCounter() {\n\tthis._p = null;\n\tthis._crossingCount = 0;\n\tthis._isPointOnSegment = false;\n\tlet p = arguments[0];\n\tthis._p = p;\n}\nextend(RayCrossingCounter.prototype, {\n\tcountSegment: function (p1, p2) {\n\t\tif (p1.x < this._p.x && p2.x < this._p.x) return null;\n\t\tif (this._p.x === p2.x && this._p.y === p2.y) {\n\t\t\tthis._isPointOnSegment = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y === this._p.y && p2.y === this._p.y) {\n\t\t\tvar minx = p1.x;\n\t\t\tvar maxx = p2.x;\n\t\t\tif (minx > maxx) {\n\t\t\t\tminx = p2.x;\n\t\t\t\tmaxx = p1.x;\n\t\t\t}\n\t\t\tif (this._p.x >= minx && this._p.x <= maxx) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n\t\t\tvar orient = Orientation.index(p1, p2, this._p);\n\t\t\tif (orient === Orientation.COLLINEAR) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (p2.y < p1.y) {\n\t\t\t\torient = -orient;\n\t\t\t}\n\t\t\tif (orient === Orientation.LEFT) {\n\t\t\t\tthis._crossingCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisPointInPolygon: function () {\n\t\treturn this.getLocation() !== Location.EXTERIOR;\n\t},\n\tgetLocation: function () {\n\t\tif (this._isPointOnSegment) return Location.BOUNDARY;\n\t\tif (this._crossingCount % 2 === 1) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t},\n\tisOnSegment: function () {\n\t\treturn this._isPointOnSegment;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RayCrossingCounter;\n\t}\n});\nRayCrossingCounter.locatePointInRing = function () {\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\tlet p = arguments[0], ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tfor (var i = 1; i < ring.size(); i++) {\n\t\t\tring.getCoordinate(i, p1);\n\t\t\tring.getCoordinate(i - 1, p2);\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\tlet p = arguments[0], ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tfor (var i = 1; i < ring.length; i++) {\n\t\t\tvar p1 = ring[i];\n\t\t\tvar p2 = ring[i - 1];\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t}\n};\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport Envelope from '../geom/Envelope';\nimport RayCrossingCounter from './RayCrossingCounter';\nexport default function CGAlgorithms() {}\nextend(CGAlgorithms.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CGAlgorithms;\n\t}\n});\nCGAlgorithms.orientationIndex = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.signedArea = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\tvar n = ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tring.getCoordinate(0, p1);\n\t\tring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\nCGAlgorithms.distanceLineLine = function (A, B, C, D) {\n\tif (A.equals(B)) return CGAlgorithms.distancePointLine(A, C, D);\n\tif (C.equals(D)) return CGAlgorithms.distancePointLine(D, A, B);\n\tvar noIntersection = false;\n\tif (!Envelope.intersects(A, B, C, D)) {\n\t\tnoIntersection = true;\n\t} else {\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\tif (denom === 0) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\tvar s = s_num / denom;\n\t\t\tvar r = r_num / denom;\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\tnoIntersection = true;\n\t\t\t}\n\t\t}\n\t}\n\tif (noIntersection) {\n\t\treturn MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B));\n\t}\n\treturn 0.0;\n};\nCGAlgorithms.isPointInRing = function (p, ring) {\n\treturn CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR;\n};\nCGAlgorithms.computeLength = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\nCGAlgorithms.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n\tvar isCCW = false;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nCGAlgorithms.locatePointInRing = function (p, ring) {\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\n};\nCGAlgorithms.distancePointLinePerpendicular = function (p, A, B) {\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nCGAlgorithms.computeOrientation = function (p1, p2, q) {\n\treturn CGAlgorithms.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.distancePointLine = function () {\n\tif (arguments.length === 2) {\n\t\tlet p = arguments[0], line = arguments[1];\n\t\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\t\tvar minDistance = p.distance(line[0]);\n\t\tfor (var i = 0; i < line.length - 1; i++) {\n\t\t\tvar dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n\t\t\tif (dist < minDistance) {\n\t\t\t\tminDistance = dist;\n\t\t\t}\n\t\t}\n\t\treturn minDistance;\n\t} else if (arguments.length === 3) {\n\t\tlet p = arguments[0], A = arguments[1], B = arguments[2];\n\t\tif (A.x === B.x && A.y === B.y) return p.distance(A);\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\t\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n\t\tif (r <= 0.0) return p.distance(A);\n\t\tif (r >= 1.0) return p.distance(B);\n\t\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\t\treturn Math.abs(s) * Math.sqrt(len2);\n\t}\n};\nCGAlgorithms.isOnLine = function (p, pt) {\n\tvar lineIntersector = new RobustLineIntersector();\n\tfor (var i = 1; i < pt.length; i++) {\n\t\tvar p0 = pt[i - 1];\n\t\tvar p1 = pt[i];\n\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\tif (lineIntersector.hasIntersection()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCGAlgorithms.CLOCKWISE = -1;\nCGAlgorithms.RIGHT = CGAlgorithms.CLOCKWISE;\nCGAlgorithms.COUNTERCLOCKWISE = 1;\nCGAlgorithms.LEFT = CGAlgorithms.COUNTERCLOCKWISE;\nCGAlgorithms.COLLINEAR = 0;\nCGAlgorithms.STRAIGHT = CGAlgorithms.COLLINEAR;\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport RayCrossingCounter from './RayCrossingCounter';\nexport default function PointLocation() {}\nextend(PointLocation.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointLocation;\n\t}\n});\nPointLocation.isOnLine = function () {\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\tlet p = arguments[0], line = arguments[1];\n\t\tvar lineIntersector = new RobustLineIntersector();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar n = line.size();\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tline.getCoordinate(i - 1, p0);\n\t\t\tline.getCoordinate(i, p1);\n\t\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\t\tif (lineIntersector.hasIntersection()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\tlet p = arguments[0], line = arguments[1];\n\t\tvar lineIntersector = new RobustLineIntersector();\n\t\tfor (var i = 1; i < line.length; i++) {\n\t\t\tvar p0 = line[i - 1];\n\t\t\tvar p1 = line[i];\n\t\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\t\tif (lineIntersector.hasIntersection()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\nPointLocation.locateInRing = function (p, ring) {\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\n};\nPointLocation.isInRing = function (p, ring) {\n\treturn PointLocation.locateInRing(p, ring) !== Location.EXTERIOR;\n};\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function EmptyStackException(message) {\n  this.message = message || '';\n};\nEmptyStackException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n","import EmptyStackException from './EmptyStackException'\nimport List from './List'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nexport default function Stack() {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n};\nStack.prototype = new List();\n\n\n/**\n * @override\n */\nStack.prototype.add = function(e) {\n  this.array_.push(e);\n  return true;\n};\n\n\n/**\n * @override\n */\nStack.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function(e) {\n  this.array_.push(e);\n  return e;\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function(e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_.pop();\n};\n\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function() {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_[this.array_.length - 1];\n};\n\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function() {\n  if (this.array_.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function() {\n  return this.empty();\n};\n\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function(o) {\n  return this.array_.indexOf(o);\n};\n\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function UniqueCoordinateArrayFilter() {\n\tthis.treeSet = new TreeSet();\n\tthis.list = new ArrayList();\n}\nextend(UniqueCoordinateArrayFilter.prototype, {\n\tfilter: function (coord) {\n\t\tif (!this.treeSet.contains(coord)) {\n\t\t\tthis.list.add(coord);\n\t\t\tthis.treeSet.add(coord);\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar coordinates = new Array(this.list.size()).fill(null);\n\t\treturn this.list.toArray(coordinates);\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function () {\n\t\treturn UniqueCoordinateArrayFilter;\n\t}\n});\nUniqueCoordinateArrayFilter.filterCoordinates = function (coords) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tfor (var i = 0; i < coords.length; i++) {\n\t\tfilter.filter(coords[i]);\n\t}\n\treturn filter.getCoordinates();\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CoordinateList from '../geom/CoordinateList';\nimport Arrays from '../../../../java/util/Arrays';\nimport PointLocation from './PointLocation';\nimport Stack from '../../../../java/util/Stack';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Comparator from '../../../../java/util/Comparator';\nimport UniqueCoordinateArrayFilter from '../util/UniqueCoordinateArrayFilter';\nimport Assert from '../util/Assert';\nexport default function ConvexHull() {\n\tthis._geomFactory = null;\n\tthis._inputPts = null;\n\tif (arguments.length === 1) {\n\t\tlet geometry = arguments[0];\n\t\tConvexHull.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], geomFactory = arguments[1];\n\t\tthis._inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\n\t\tthis._geomFactory = geomFactory;\n\t}\n}\nextend(ConvexHull.prototype, {\n\tpreSort: function (pts) {\n\t\tvar t = null;\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tif (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n\t\t\t\tt = pts[0];\n\t\t\t\tpts[0] = pts[i];\n\t\t\t\tpts[i] = t;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\n\t\treturn pts;\n\t},\n\tcomputeOctRing: function (inputPts) {\n\t\tvar octPts = this.computeOctPts(inputPts);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.add(octPts, false);\n\t\tif (coordList.size() < 3) {\n\t\t\treturn null;\n\t\t}\n\t\tcoordList.closeRing();\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tlineOrPolygon: function (coordinates) {\n\t\tcoordinates = this.cleanRing(coordinates);\n\t\tif (coordinates.length === 3) {\n\t\t\treturn this._geomFactory.createLineString([coordinates[0], coordinates[1]]);\n\t\t}\n\t\tvar linearRing = this._geomFactory.createLinearRing(coordinates);\n\t\treturn this._geomFactory.createPolygon(linearRing);\n\t},\n\tcleanRing: function (original) {\n\t\tAssert.equals(original[0], original[original.length - 1]);\n\t\tvar cleanedRing = new ArrayList();\n\t\tvar previousDistinctCoordinate = null;\n\t\tfor (var i = 0; i <= original.length - 2; i++) {\n\t\t\tvar currentCoordinate = original[i];\n\t\t\tvar nextCoordinate = original[i + 1];\n\t\t\tif (currentCoordinate.equals(nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcleanedRing.add(currentCoordinate);\n\t\t\tpreviousDistinctCoordinate = currentCoordinate;\n\t\t}\n\t\tcleanedRing.add(original[original.length - 1]);\n\t\tvar cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\n\t\treturn cleanedRing.toArray(cleanedRingCoordinates);\n\t},\n\tisBetween: function (c1, c2, c3) {\n\t\tif (Orientation.index(c1, c2, c3) !== 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (c1.x !== c3.x) {\n\t\t\tif (c1.x <= c2.x && c2.x <= c3.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.x <= c2.x && c2.x <= c1.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (c1.y !== c3.y) {\n\t\t\tif (c1.y <= c2.y && c2.y <= c3.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.y <= c2.y && c2.y <= c1.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\treduce: function (inputPts) {\n\t\tvar polyPts = this.computeOctRing(inputPts);\n\t\tif (polyPts === null) return inputPts;\n\t\tvar reducedSet = new TreeSet();\n\t\tfor (var i = 0; i < polyPts.length; i++) {\n\t\t\treducedSet.add(polyPts[i]);\n\t\t}\n\t\tfor (var i = 0; i < inputPts.length; i++) {\n\t\t\tif (!PointLocation.isInRing(inputPts[i], polyPts)) {\n\t\t\t\treducedSet.add(inputPts[i]);\n\t\t\t}\n\t\t}\n\t\tvar reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\n\t\tif (reducedPts.length < 3) return this.padArray3(reducedPts);\n\t\treturn reducedPts;\n\t},\n\tgetConvexHull: function () {\n\t\tif (this._inputPts.length === 0) {\n\t\t\treturn this._geomFactory.createGeometryCollection();\n\t\t}\n\t\tif (this._inputPts.length === 1) {\n\t\t\treturn this._geomFactory.createPoint(this._inputPts[0]);\n\t\t}\n\t\tif (this._inputPts.length === 2) {\n\t\t\treturn this._geomFactory.createLineString(this._inputPts);\n\t\t}\n\t\tvar reducedPts = this._inputPts;\n\t\tif (this._inputPts.length > 50) {\n\t\t\treducedPts = this.reduce(this._inputPts);\n\t\t}\n\t\tvar sortedPts = this.preSort(reducedPts);\n\t\tvar cHS = this.grahamScan(sortedPts);\n\t\tvar cH = this.toCoordinateArray(cHS);\n\t\treturn this.lineOrPolygon(cH);\n\t},\n\tpadArray3: function (pts) {\n\t\tvar pad = new Array(3).fill(null);\n\t\tfor (var i = 0; i < pad.length; i++) {\n\t\t\tif (i < pts.length) {\n\t\t\t\tpad[i] = pts[i];\n\t\t\t} else pad[i] = pts[0];\n\t\t}\n\t\treturn pad;\n\t},\n\tcomputeOctPts: function (inputPts) {\n\t\tvar pts = new Array(8).fill(null);\n\t\tfor (var j = 0; j < pts.length; j++) {\n\t\t\tpts[j] = inputPts[0];\n\t\t}\n\t\tfor (var i = 1; i < inputPts.length; i++) {\n\t\t\tif (inputPts[i].x < pts[0].x) {\n\t\t\t\tpts[0] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n\t\t\t\tpts[1] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y > pts[2].y) {\n\t\t\t\tpts[2] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n\t\t\t\tpts[3] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x > pts[4].x) {\n\t\t\t\tpts[4] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n\t\t\t\tpts[5] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y < pts[6].y) {\n\t\t\t\tpts[6] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n\t\t\t\tpts[7] = inputPts[i];\n\t\t\t}\n\t\t}\n\t\treturn pts;\n\t},\n\ttoCoordinateArray: function (stack) {\n\t\tvar coordinates = new Array(stack.size()).fill(null);\n\t\tfor (var i = 0; i < stack.size(); i++) {\n\t\t\tvar coordinate = stack.get(i);\n\t\t\tcoordinates[i] = coordinate;\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgrahamScan: function (c) {\n\t\tvar p = null;\n\t\tvar ps = new Stack();\n\t\tps.push(c[0]);\n\t\tps.push(c[1]);\n\t\tps.push(c[2]);\n\t\tfor (var i = 3; i < c.length; i++) {\n\t\t\tp = ps.pop();\n\t\t\twhile (!ps.empty() && Orientation.index(ps.peek(), p, c[i]) > 0) {\n\t\t\t\tp = ps.pop();\n\t\t\t}\n\t\t\tps.push(p);\n\t\t\tps.push(c[i]);\n\t\t}\n\t\tps.push(c[0]);\n\t\treturn ps;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConvexHull;\n\t}\n});\nConvexHull.extractCoordinates = function (geom) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tgeom.apply(filter);\n\treturn filter.getCoordinates();\n};\nfunction RadialComparator() {\n\tthis._origin = null;\n\tlet origin = arguments[0];\n\tthis._origin = origin;\n}\nextend(RadialComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar p1 = o1;\n\t\tvar p2 = o2;\n\t\treturn RadialComparator.polarCompare(this._origin, p1, p2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn RadialComparator;\n\t}\n});\nRadialComparator.polarCompare = function (o, p, q) {\n\tvar dxp = p.x - o.x;\n\tvar dyp = p.y - o.y;\n\tvar dxq = q.x - o.x;\n\tvar dyq = q.y - o.y;\n\tvar orient = Orientation.index(o, p, q);\n\tif (orient === Orientation.COUNTERCLOCKWISE) return 1;\n\tif (orient === Orientation.CLOCKWISE) return -1;\n\tvar op = dxp * dxp + dyp * dyp;\n\tvar oq = dxq * dxq + dyq * dyq;\n\tif (op < oq) {\n\t\treturn -1;\n\t}\n\tif (op > oq) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\nConvexHull.RadialComparator = RadialComparator;\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointArea() {\n\tthis._factory = null;\n\tthis._interiorPoint = null;\n\tthis._maxWidth = 0.0;\n\tlet g = arguments[0];\n\tthis._factory = g.getFactory();\n\tthis.add(g);\n}\nextend(InteriorPointArea.prototype, {\n\taddPolygon: function (geometry) {\n\t\tif (geometry.isEmpty()) return null;\n\t\tvar intPt = null;\n\t\tvar width = null;\n\t\tvar bisector = this.horizontalBisector(geometry);\n\t\tif (bisector.getLength() === 0.0) {\n\t\t\twidth = 0;\n\t\t\tintPt = bisector.getCoordinate();\n\t\t} else {\n\t\t\tvar intersections = bisector.intersection(geometry);\n\t\t\tvar widestIntersection = this.widestGeometry(intersections);\n\t\t\twidth = widestIntersection.getEnvelopeInternal().getWidth();\n\t\t\tintPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\n\t\t}\n\t\tif (this._interiorPoint === null || width > this._maxWidth) {\n\t\t\tthis._interiorPoint = intPt;\n\t\t\tthis._maxWidth = width;\n\t\t}\n\t},\n\tgetInteriorPoint: function () {\n\t\treturn this._interiorPoint;\n\t},\n\twidestGeometry: function () {\n\t\tif (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tif (gc.isEmpty()) {\n\t\t\t\treturn gc;\n\t\t\t}\n\t\t\tvar widestGeometry = gc.getGeometryN(0);\n\t\t\tfor (var i = 1; i < gc.getNumGeometries(); i++) {\n\t\t\t\tif (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n\t\t\t\t\twidestGeometry = gc.getGeometryN(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn widestGeometry;\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tif (!(geometry instanceof GeometryCollection)) {\n\t\t\t\treturn geometry;\n\t\t\t}\n\t\t\treturn this.widestGeometry(geometry);\n\t\t}\n\t},\n\thorizontalBisector: function (geometry) {\n\t\tvar envelope = geometry.getEnvelopeInternal();\n\t\tvar bisectY = SafeBisectorFinder.getBisectorY(geometry);\n\t\treturn this._factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\n\t},\n\tadd: function (geom) {\n\t\tif (geom instanceof Polygon) {\n\t\t\tthis.addPolygon(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar gc = geom;\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointArea;\n\t}\n});\nInteriorPointArea.centre = function (envelope) {\n\treturn new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\n};\nInteriorPointArea.avg = function (a, b) {\n\treturn (a + b) / 2.0;\n};\nfunction SafeBisectorFinder() {\n\tthis._poly = null;\n\tthis._centreY = null;\n\tthis._hiY = Double.MAX_VALUE;\n\tthis._loY = -Double.MAX_VALUE;\n\tlet poly = arguments[0];\n\tthis._poly = poly;\n\tthis._hiY = poly.getEnvelopeInternal().getMaxY();\n\tthis._loY = poly.getEnvelopeInternal().getMinY();\n\tthis._centreY = InteriorPointArea.avg(this._loY, this._hiY);\n}\nextend(SafeBisectorFinder.prototype, {\n\tupdateInterval: function (y) {\n\t\tif (y <= this._centreY) {\n\t\t\tif (y > this._loY) this._loY = y;\n\t\t} else if (y > this._centreY) {\n\t\t\tif (y < this._hiY) {\n\t\t\t\tthis._hiY = y;\n\t\t\t}\n\t\t}\n\t},\n\tgetBisectorY: function () {\n\t\tthis.process(this._poly.getExteriorRing());\n\t\tfor (var i = 0; i < this._poly.getNumInteriorRing(); i++) {\n\t\t\tthis.process(this._poly.getInteriorRingN(i));\n\t\t}\n\t\tvar bisectY = InteriorPointArea.avg(this._hiY, this._loY);\n\t\treturn bisectY;\n\t},\n\tprocess: function (line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tfor (var i = 0; i < seq.size(); i++) {\n\t\t\tvar y = seq.getY(i);\n\t\t\tthis.updateInterval(y);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SafeBisectorFinder;\n\t}\n});\nSafeBisectorFinder.getBisectorY = function (poly) {\n\tvar finder = new SafeBisectorFinder(poly);\n\treturn finder.getBisectorY();\n};\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\n","import LineString from '../geom/LineString';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointLine() {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tlet g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.addInterior(g);\n\tif (this._interiorPoint === null) this.addEndpoints(g);\n}\nextend(InteriorPointLine.prototype, {\n\taddEndpoints: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addEndpoints(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addEndpoints(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tthis.add(pts[0]);\n\t\t\tthis.add(pts[pts.length - 1]);\n\t\t}\n\t},\n\tgetInteriorPoint: function () {\n\t\treturn this._interiorPoint;\n\t},\n\taddInterior: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addInterior(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addInterior(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tfor (var i = 1; i < pts.length - 1; i++) {\n\t\t\t\tthis.add(pts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function (point) {\n\t\tvar dist = point.distance(this._centroid);\n\t\tif (dist < this._minDistance) {\n\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\tthis._minDistance = dist;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointLine;\n\t}\n});\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointPoint() {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tlet g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.add(g);\n}\nextend(InteriorPointPoint.prototype, {\n\tgetInteriorPoint: function () {\n\t\treturn this._interiorPoint;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.add(geom.getCoordinate());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet point = arguments[0];\n\t\t\tvar dist = point.distance(this._centroid);\n\t\t\tif (dist < this._minDistance) {\n\t\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\t\tthis._minDistance = dist;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointPoint;\n\t}\n});\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nexport default function MonotoneChainSelectAction() {\n\tthis.selectedSegment = new LineSegment();\n}\nextend(MonotoneChainSelectAction.prototype, {\n\tselect: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet seg = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tmc.getLineSegment(startIndex, this.selectedSegment);\n\t\t\tthis.select(this.selectedSegment);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainSelectAction;\n\t}\n});\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function NodeBase() {\n\tthis._items = new ArrayList();\n\tthis._subnode = new Array(2).fill(null);\n}\nextend(NodeBase.prototype, {\n\thasChildren: function () {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function () {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function (items) {\n\t\titems.addAll(this._items);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItems(items);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\tsize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this._items.size();\n\t},\n\taddAllItemsFromOverlapping: function (interval, resultItems) {\n\t\tif (interval !== null && !this.isSearchMatch(interval)) return null;\n\t\tresultItems.addAll(this._items);\n\t\tif (this._subnode[0] !== null) this._subnode[0].addAllItemsFromOverlapping(interval, resultItems);\n\t\tif (this._subnode[1] !== null) this._subnode[1].addAllItemsFromOverlapping(interval, resultItems);\n\t},\n\thasItems: function () {\n\t\treturn !this._items.isEmpty();\n\t},\n\tremove: function (itemInterval, item) {\n\t\tif (!this.isSearchMatch(itemInterval)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tfound = this._subnode[i].remove(itemInterval, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this._subnode[i].isPrunable()) this._subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this._items.remove(item);\n\t\treturn found;\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tdepth: function () {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tvar sqd = this._subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tnodeSize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].nodeSize();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tadd: function (item) {\n\t\tthis._items.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (interval, centre) {\n\tvar subnodeIndex = -1;\n\tif (interval.min >= centre) subnodeIndex = 1;\n\tif (interval.max <= centre) subnodeIndex = 0;\n\treturn subnodeIndex;\n};\n","import extend from '../../../../../extend';\nexport default function Interval() {\n\tthis.min = null;\n\tthis.max = null;\n\tif (arguments.length === 0) {\n\t\tthis.min = 0.0;\n\t\tthis.max = 0.0;\n\t} else if (arguments.length === 1) {\n\t\tlet interval = arguments[0];\n\t\tthis.init(interval.min, interval.max);\n\t} else if (arguments.length === 2) {\n\t\tlet min = arguments[0], max = arguments[1];\n\t\tthis.init(min, max);\n\t}\n}\nextend(Interval.prototype, {\n\texpandToInclude: function (interval) {\n\t\tif (interval.max > this.max) this.max = interval.max;\n\t\tif (interval.min < this.min) this.min = interval.min;\n\t},\n\tgetWidth: function () {\n\t\treturn this.max - this.min;\n\t},\n\toverlaps: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet interval = arguments[0];\n\t\t\treturn this.overlaps(interval.min, interval.max);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\tif (this.min > max || this.max < min) return false;\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetMin: function () {\n\t\treturn this.min;\n\t},\n\ttoString: function () {\n\t\treturn \"[\" + this.min + \", \" + this.max + \"]\";\n\t},\n\tcontains: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Interval) {\n\t\t\t\tlet interval = arguments[0];\n\t\t\t\treturn this.contains(interval.min, interval.max);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn p >= this.min && p <= this.max;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\treturn min >= this.min && max <= this.max;\n\t\t}\n\t},\n\tinit: function (min, max) {\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t\tif (min > max) {\n\t\t\tthis.min = max;\n\t\t\tthis.max = min;\n\t\t}\n\t},\n\tgetMax: function () {\n\t\treturn this.max;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Interval;\n\t}\n});\n","export default function DoubleBits () { }\nDoubleBits.exponent = function (d) {\n  return CVTFWD(64, d) - 1023\n}\nDoubleBits.powerOf2 = function (exp) {\n  return Math.pow(2, exp)\n}\n\n/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n * @private\n */\nfunction CVTFWD (NumW, Qty) {\n  var Sign\n  var Expo\n  var Mant\n  var Bin\n  var Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  }\n  var ExW = {\n    32: 8,\n    64: 11\n  }[NumW]\n\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0 // OK for +-0\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW]\n      if (Sign) {\n        Bin.d += 1 << (NumW / 4 - 1)\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW]\n    Mant = Math.abs(Qty)\n    while (Mant >= 2) {\n      Expo++\n      Mant /= 2\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--\n      Mant *= 2\n    }\n    if (Expo <= 0) {\n      Mant /= 2\n    }\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  return Expo\n}\n","import Interval from './Interval';\nimport extend from '../../../../../extend';\nimport DoubleBits from '../quadtree/DoubleBits';\nexport default function Key() {\n\tthis._pt = 0.0;\n\tthis._level = 0;\n\tthis._interval = null;\n\tlet interval = arguments[0];\n\tthis.computeKey(interval);\n}\nextend(Key.prototype, {\n\tgetInterval: function () {\n\t\treturn this._interval;\n\t},\n\tgetLevel: function () {\n\t\treturn this._level;\n\t},\n\tcomputeKey: function (itemInterval) {\n\t\tthis._level = Key.computeLevel(itemInterval);\n\t\tthis._interval = new Interval();\n\t\tthis.computeInterval(this._level, itemInterval);\n\t\twhile (!this._interval.contains(itemInterval)) {\n\t\t\tthis._level += 1;\n\t\t\tthis.computeInterval(this._level, itemInterval);\n\t\t}\n\t},\n\tcomputeInterval: function (level, itemInterval) {\n\t\tvar size = DoubleBits.powerOf2(level);\n\t\tthis._pt = Math.floor(itemInterval.getMin() / size) * size;\n\t\tthis._interval.init(this._pt, this._pt + size);\n\t},\n\tgetPoint: function () {\n\t\treturn this._pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Key;\n\t}\n});\nKey.computeLevel = function (interval) {\n\tvar dx = interval.getWidth();\n\tvar level = DoubleBits.exponent(dx) + 1;\n\treturn level;\n};\n","import NodeBase from './NodeBase';\nimport Interval from './Interval';\nimport extend from '../../../../../extend';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport Key from './Key';\nexport default function Node() {\n\tNodeBase.apply(this);\n\tthis._interval = null;\n\tthis._centre = null;\n\tthis._level = null;\n\tlet interval = arguments[0], level = arguments[1];\n\tthis._interval = interval;\n\tthis._level = level;\n\tthis._centre = (interval.getMin() + interval.getMax()) / 2;\n}\ninherits(Node, NodeBase);\nextend(Node.prototype, {\n\tgetInterval: function () {\n\t\treturn this._interval;\n\t},\n\tfind: function (searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this._centre);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this._subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this._subnode[subnodeIndex];\n\t\t\treturn node.find(searchInterval);\n\t\t}\n\t\treturn this;\n\t},\n\tinsert: function (node) {\n\t\tAssert.isTrue(this._interval === null || this._interval.contains(node._interval));\n\t\tvar index = NodeBase.getSubnodeIndex(node._interval, this._centre);\n\t\tif (node._level === this._level - 1) {\n\t\t\tthis._subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insert(node);\n\t\t\tthis._subnode[index] = childNode;\n\t\t}\n\t},\n\tisSearchMatch: function (itemInterval) {\n\t\treturn itemInterval.overlaps(this._interval);\n\t},\n\tgetSubnode: function (index) {\n\t\tif (this._subnode[index] === null) {\n\t\t\tthis._subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this._subnode[index];\n\t},\n\tgetNode: function (searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this._centre);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchInterval);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function (index) {\n\t\tvar min = 0.0;\n\t\tvar max = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tmin = this._interval.getMin();\n\t\t\t\tmax = this._centre;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tmin = this._centre;\n\t\t\t\tmax = this._interval.getMax();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar subInt = new Interval(min, max);\n\t\tvar node = new Node(subInt, this._level - 1);\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.createNode = function (itemInterval) {\n\tvar key = new Key(itemInterval);\n\tvar node = new Node(key.getInterval(), key.getLevel());\n\treturn node;\n};\nNode.createExpanded = function (node, addInterval) {\n\tvar expandInt = new Interval(addInterval);\n\tif (node !== null) expandInt.expandToInclude(node._interval);\n\tvar largerNode = Node.createNode(expandInt);\n\tif (node !== null) largerNode.insert(node);\n\treturn largerNode;\n};\n","import extend from '../../../../../extend';\nimport DoubleBits from './DoubleBits';\nexport default function IntervalSize() {}\nextend(IntervalSize.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalSize;\n\t}\n});\nIntervalSize.isZeroWidth = function (min, max) {\n\tvar width = max - min;\n\tif (width === 0.0) return true;\n\tvar maxAbs = Math.max(Math.abs(min), Math.abs(max));\n\tvar scaledInterval = width / maxAbs;\n\tvar level = DoubleBits.exponent(scaledInterval);\n\treturn level <= IntervalSize.MIN_BINARY_EXPONENT;\n};\nIntervalSize.MIN_BINARY_EXPONENT = -50;\n","import NodeBase from './NodeBase';\nimport Node from './Node';\nimport extend from '../../../../../extend';\nimport IntervalSize from '../quadtree/IntervalSize';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function Root() {\n\tNodeBase.apply(this);\n}\ninherits(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function (itemInterval, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemInterval, Root.origin);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this._subnode[index];\n\t\tif (node === null || !node.getInterval().contains(itemInterval)) {\n\t\t\tvar largerNode = Node.createExpanded(node, itemInterval);\n\t\t\tthis._subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this._subnode[index], itemInterval, item);\n\t},\n\tisSearchMatch: function (interval) {\n\t\treturn true;\n\t},\n\tinsertContained: function (tree, itemInterval, item) {\n\t\tAssert.isTrue(tree.getInterval().contains(itemInterval));\n\t\tvar isZeroArea = IntervalSize.isZeroWidth(itemInterval.getMin(), itemInterval.getMax());\n\t\tvar node = null;\n\t\tif (isZeroArea) node = tree.find(itemInterval); else node = tree.getNode(itemInterval);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Root;\n\t}\n});\nRoot.origin = 0.0;\n","import Root from './Root';\nimport Interval from './Interval';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function Bintree() {\n\tthis._root = null;\n\tthis._minExtent = 1.0;\n\tthis._root = new Root();\n}\nextend(Bintree.prototype, {\n\tsize: function () {\n\t\tif (this._root !== null) return this._root.size();\n\t\treturn 0;\n\t},\n\tinsert: function (itemInterval, item) {\n\t\tthis.collectStats(itemInterval);\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this._minExtent);\n\t\tthis._root.insert(insertInterval, item);\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\treturn this.query(new Interval(x, x));\n\t\t\t} else if (arguments[0] instanceof Interval) {\n\t\t\t\tlet interval = arguments[0];\n\t\t\t\tvar foundItems = new ArrayList();\n\t\t\t\tthis.query(interval, foundItems);\n\t\t\t\treturn foundItems;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet interval = arguments[0], foundItems = arguments[1];\n\t\t\tthis._root.addAllItemsFromOverlapping(interval, foundItems);\n\t\t}\n\t},\n\titerator: function () {\n\t\tvar foundItems = new ArrayList();\n\t\tthis._root.addAllItems(foundItems);\n\t\treturn foundItems.iterator();\n\t},\n\tremove: function (itemInterval, item) {\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this._minExtent);\n\t\treturn this._root.remove(insertInterval, item);\n\t},\n\tcollectStats: function (interval) {\n\t\tvar del = interval.getWidth();\n\t\tif (del < this._minExtent && del > 0.0) this._minExtent = del;\n\t},\n\tdepth: function () {\n\t\tif (this._root !== null) return this._root.depth();\n\t\treturn 0;\n\t},\n\tnodeSize: function () {\n\t\tif (this._root !== null) return this._root.nodeSize();\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Bintree;\n\t}\n});\nBintree.ensureExtent = function (itemInterval, minExtent) {\n\tvar min = itemInterval.getMin();\n\tvar max = itemInterval.getMax();\n\tif (min !== max) return itemInterval;\n\tif (min === max) {\n\t\tmin = min - minExtent / 2.0;\n\t\tmax = min + minExtent / 2.0;\n\t}\n\treturn new Interval(min, max);\n};\n","import extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChain() {\n\tthis._pts = null;\n\tthis._start = null;\n\tthis._end = null;\n\tthis._env = null;\n\tthis._context = null;\n\tthis._id = null;\n\tlet pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3];\n\tthis._pts = pts;\n\tthis._start = start;\n\tthis._end = end;\n\tthis._context = context;\n}\nextend(MonotoneChain.prototype, {\n\tgetLineSegment: function (index, ls) {\n\t\tls.p0 = this._pts[index];\n\t\tls.p1 = this._pts[index + 1];\n\t},\n\tcomputeSelect: function (searchEnv, start0, end0, mcs) {\n\t\tvar p0 = this._pts[start0];\n\t\tvar p1 = this._pts[end0];\n\t\tif (end0 - start0 === 1) {\n\t\t\tmcs.select(this, start0);\n\t\t\treturn null;\n\t\t}\n\t\tif (!searchEnv.intersects(p0, p1)) return null;\n\t\tvar mid = Math.trunc((start0 + end0) / 2);\n\t\tif (start0 < mid) {\n\t\t\tthis.computeSelect(searchEnv, start0, mid, mcs);\n\t\t}\n\t\tif (mid < end0) {\n\t\t\tthis.computeSelect(searchEnv, mid, end0, mcs);\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar coord = new Array(this._end - this._start + 1).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._start; i <= this._end; i++) {\n\t\t\tcoord[index++] = this._pts[i];\n\t\t}\n\t\treturn coord;\n\t},\n\tcomputeOverlaps: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], mco = arguments[1];\n\t\t\tthis.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco);\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mc = arguments[2], start1 = arguments[3], end1 = arguments[4], mco = arguments[5];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tmco.overlap(this, start0, mc, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!this.overlaps(start0, end0, mc, start1, end1)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco);\n\t\t\t\tif (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco);\n\t\t\t\tif (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco);\n\t\t\t}\n\t\t}\n\t},\n\tsetId: function (id) {\n\t\tthis._id = id;\n\t},\n\tselect: function (searchEnv, mcs) {\n\t\tthis.computeSelect(searchEnv, this._start, this._end, mcs);\n\t},\n\tgetEnvelope: function () {\n\t\tif (this._env === null) {\n\t\t\tvar p0 = this._pts[this._start];\n\t\t\tvar p1 = this._pts[this._end];\n\t\t\tthis._env = new Envelope(p0, p1);\n\t\t}\n\t\treturn this._env;\n\t},\n\toverlaps: function (start0, end0, mc, start1, end1) {\n\t\treturn Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1]);\n\t},\n\tgetEndIndex: function () {\n\t\treturn this._end;\n\t},\n\tgetStartIndex: function () {\n\t\treturn this._start;\n\t},\n\tgetContext: function () {\n\t\treturn this._context;\n\t},\n\tgetId: function () {\n\t\treturn this._id;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChain;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Quadrant() {}\nextend(Quadrant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Quadrant;\n\t}\n});\nQuadrant.isNorthern = function (quad) {\n\treturn quad === Quadrant.NE || quad === Quadrant.NW;\n};\nQuadrant.isOpposite = function (quad1, quad2) {\n\tif (quad1 === quad2) return false;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return true;\n\treturn false;\n};\nQuadrant.commonHalfPlane = function (quad1, quad2) {\n\tif (quad1 === quad2) return quad1;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return -1;\n\tvar min = quad1 < quad2 ? quad1 : quad2;\n\tvar max = quad1 > quad2 ? quad1 : quad2;\n\tif (min === 0 && max === 3) return 3;\n\treturn min;\n};\nQuadrant.isInHalfPlane = function (quad, halfPlane) {\n\tif (halfPlane === Quadrant.SE) {\n\t\treturn quad === Quadrant.SE || quad === Quadrant.SW;\n\t}\n\treturn quad === halfPlane || quad === halfPlane + 1;\n};\nQuadrant.quadrant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tlet dx = arguments[0], dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tif (dx >= 0.0) {\n\t\t\tif (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW;\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tif (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\n\t\tif (p1.x >= p0.x) {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW;\n\t\t}\n\t}\n};\nQuadrant.NE = 0;\nQuadrant.NW = 1;\nQuadrant.SW = 2;\nQuadrant.SE = 3;\n","import MonotoneChain from './MonotoneChain';\nimport extend from '../../../../../extend';\nimport Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../../geomgraph/Quadrant';\nexport default function MonotoneChainBuilder() {}\nextend(MonotoneChainBuilder.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainBuilder;\n\t}\n});\nMonotoneChainBuilder.getChainStartIndices = function (pts) {\n\tvar start = 0;\n\tvar startIndexList = new ArrayList();\n\tstartIndexList.add(new Integer(start));\n\tdo {\n\t\tvar last = MonotoneChainBuilder.findChainEnd(pts, start);\n\t\tstartIndexList.add(new Integer(last));\n\t\tstart = last;\n\t} while (start < pts.length - 1);\n\tvar startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n\treturn startIndex;\n};\nMonotoneChainBuilder.findChainEnd = function (pts, start) {\n\tvar safeStart = start;\n\twhile (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n\t\tsafeStart++;\n\t}\n\tif (safeStart >= pts.length - 1) {\n\t\treturn pts.length - 1;\n\t}\n\tvar chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n\tvar last = start + 1;\n\twhile (last < pts.length) {\n\t\tif (!pts[last - 1].equals2D(pts[last])) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t}\n\t\tlast++;\n\t}\n\treturn last - 1;\n};\nMonotoneChainBuilder.getChains = function () {\n\tif (arguments.length === 1) {\n\t\tlet pts = arguments[0];\n\t\treturn MonotoneChainBuilder.getChains(pts, null);\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], context = arguments[1];\n\t\tvar mcList = new ArrayList();\n\t\tvar startIndex = MonotoneChainBuilder.getChainStartIndices(pts);\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(pts, startIndex[i], startIndex[i + 1], context);\n\t\t\tmcList.add(mc);\n\t\t}\n\t\treturn mcList;\n\t}\n};\nMonotoneChainBuilder.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n","import extend from '../../../../extend';\nexport default function RobustDeterminant() {}\nextend(RobustDeterminant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RobustDeterminant;\n\t}\n});\nRobustDeterminant.orientationIndex = function (p1, p2, q) {\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dx2 = q.x - p2.x;\n\tvar dy2 = q.y - p2.y;\n\treturn RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2);\n};\nRobustDeterminant.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar sign = null;\n\tvar swap = null;\n\tvar k = null;\n\tvar count = 0;\n\tsign = 1;\n\tif (x1 === 0.0 || y2 === 0.0) {\n\t\tif (y1 === 0.0 || x2 === 0.0) {\n\t\t\treturn 0;\n\t\t} else if (y1 > 0) {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (y1 === 0.0 || x2 === 0.0) {\n\t\tif (y2 > 0) {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < y1) {\n\t\tif (0.0 < y2) {\n\t\t\tif (y1 <= y2) {\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 <= -y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t} else {\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (0.0 < y2) {\n\t\t\tif (-y1 <= y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t} else {\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 >= y2) {\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < x1) {\n\t\tif (0.0 < x2) {\n\t\t\tif (x1 <= x2) {\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\treturn sign;\n\t\t}\n\t} else {\n\t\tif (0.0 < x2) {\n\t\t\treturn -sign;\n\t\t} else {\n\t\t\tif (x1 >= x2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\tx2 = -x2;\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\twhile (true) {\n\t\tcount = count + 1;\n\t\tk = Math.floor(x2 / x1);\n\t\tx2 = x2 - k * x1;\n\t\ty2 = y2 - k * y1;\n\t\tif (y2 < 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (y2 > y1) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (x1 > x2 + x2) {\n\t\t\tif (y1 < y2 + y2) {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 > y2 + y2) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\tx2 = x1 - x2;\n\t\t\t\ty2 = y1 - y2;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y2 === 0.0) {\n\t\t\tif (x2 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t\tif (x2 === 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tk = Math.floor(x1 / x2);\n\t\tx1 = x1 - k * x2;\n\t\ty1 = y1 - k * y2;\n\t\tif (y1 < 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (y1 > y2) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (x2 > x1 + x1) {\n\t\t\tif (y2 < y1 + y1) {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y2 > y1 + y1) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\tx1 = x2 - x1;\n\t\t\t\ty1 = y2 - y1;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y1 === 0.0) {\n\t\t\tif (x1 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t\tif (x1 === 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t}\n};\n","import extend from '../../../../extend';\nexport default function PointInRing() {}\nextend(PointInRing.prototype, {\n\tisInside: function (pt) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointInRing;\n\t}\n});\n","import MonotoneChainSelectAction from '../index/chain/MonotoneChainSelectAction';\nimport Bintree from '../index/bintree/Bintree';\nimport Interval from '../index/bintree/Interval';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport RobustDeterminant from './RobustDeterminant';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport PointInRing from './PointInRing';\nexport default function MCPointInRing() {\n\tthis._ring = null;\n\tthis._tree = null;\n\tthis._crossings = 0;\n\tthis._interval = new Interval();\n\tlet ring = arguments[0];\n\tthis._ring = ring;\n\tthis.buildIndex();\n}\nextend(MCPointInRing.prototype, {\n\ttestLineSegment: function (p, seg) {\n\t\tvar xInt = null;\n\t\tvar x1 = null;\n\t\tvar y1 = null;\n\t\tvar x2 = null;\n\t\tvar y2 = null;\n\t\tvar p1 = seg.p0;\n\t\tvar p2 = seg.p1;\n\t\tx1 = p1.x - p.x;\n\t\ty1 = p1.y - p.y;\n\t\tx2 = p2.x - p.x;\n\t\ty2 = p2.y - p.y;\n\t\tif (y1 > 0 && y2 <= 0 || y2 > 0 && y1 <= 0) {\n\t\t\txInt = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2) / (y2 - y1);\n\t\t\tif (0.0 < xInt) {\n\t\t\t\tthis._crossings++;\n\t\t\t}\n\t\t}\n\t},\n\tbuildIndex: function () {\n\t\tthis._tree = new Bintree();\n\t\tvar pts = CoordinateArrays.removeRepeatedPoints(this._ring.getCoordinates());\n\t\tvar mcList = MonotoneChainBuilder.getChains(pts);\n\t\tfor (var i = 0; i < mcList.size(); i++) {\n\t\t\tvar mc = mcList.get(i);\n\t\t\tvar mcEnv = mc.getEnvelope();\n\t\t\tthis._interval.min = mcEnv.getMinY();\n\t\t\tthis._interval.max = mcEnv.getMaxY();\n\t\t\tthis._tree.insert(this._interval, mc);\n\t\t}\n\t},\n\ttestMonotoneChain: function (rayEnv, mcSelecter, mc) {\n\t\tmc.select(rayEnv, mcSelecter);\n\t},\n\tisInside: function (pt) {\n\t\tthis._crossings = 0;\n\t\tvar rayEnv = new Envelope(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, pt.y, pt.y);\n\t\tthis._interval.min = pt.y;\n\t\tthis._interval.max = pt.y;\n\t\tvar segs = this._tree.query(this._interval);\n\t\tvar mcSelecter = new MCSelecter(this, pt);\n\t\tfor (var i = segs.iterator(); i.hasNext(); ) {\n\t\t\tvar mc = i.next();\n\t\t\tthis.testMonotoneChain(rayEnv, mcSelecter, mc);\n\t\t}\n\t\tif (this._crossings % 2 === 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointInRing];\n\t},\n\tgetClass: function () {\n\t\treturn MCPointInRing;\n\t}\n});\nfunction MCSelecter() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis.mcp = null;\n\tthis.p = null;\n\tlet mcp = arguments[0], p = arguments[1];\n\tthis.mcp = mcp;\n\tthis.p = p;\n}\ninherits(MCSelecter, MonotoneChainSelectAction);\nextend(MCSelecter.prototype, {\n\tselect: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ls = arguments[0];\n\t\t\tthis.mcp.testLineSegment(this.p, ls);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCSelecter;\n\t}\n});\nMCPointInRing.MCSelecter = MCSelecter;\n","import extend from '../../../../extend';\nimport Orientation from './Orientation';\nexport default function Angle() {}\nextend(Angle.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Angle;\n\t}\n});\nAngle.toDegrees = function (radians) {\n\treturn radians * 180 / Math.PI;\n};\nAngle.normalize = function (angle) {\n\twhile (angle > Math.PI) angle -= Angle.PI_TIMES_2;\n\twhile (angle <= -Math.PI) angle += Angle.PI_TIMES_2;\n\treturn angle;\n};\nAngle.angle = function () {\n\tif (arguments.length === 1) {\n\t\tlet p = arguments[0];\n\t\treturn Math.atan2(p.y, p.x);\n\t} else if (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\treturn Math.atan2(dy, dx);\n\t}\n};\nAngle.isAcute = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod > 0;\n};\nAngle.isObtuse = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod < 0;\n};\nAngle.interiorAngle = function (p0, p1, p2) {\n\tvar anglePrev = Angle.angle(p1, p0);\n\tvar angleNext = Angle.angle(p1, p2);\n\treturn Math.abs(angleNext - anglePrev);\n};\nAngle.normalizePositive = function (angle) {\n\tif (angle < 0.0) {\n\t\twhile (angle < 0.0) angle += Angle.PI_TIMES_2;\n\t\tif (angle >= Angle.PI_TIMES_2) angle = 0.0;\n\t} else {\n\t\twhile (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2;\n\t\tif (angle < 0.0) angle = 0.0;\n\t}\n\treturn angle;\n};\nAngle.angleBetween = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\treturn Angle.diff(a1, a2);\n};\nAngle.diff = function (ang1, ang2) {\n\tvar delAngle = null;\n\tif (ang1 < ang2) {\n\t\tdelAngle = ang2 - ang1;\n\t} else {\n\t\tdelAngle = ang1 - ang2;\n\t}\n\tif (delAngle > Math.PI) {\n\t\tdelAngle = 2 * Math.PI - delAngle;\n\t}\n\treturn delAngle;\n};\nAngle.toRadians = function (angleDegrees) {\n\treturn angleDegrees * Math.PI / 180.0;\n};\nAngle.getTurn = function (ang1, ang2) {\n\tvar crossproduct = Math.sin(ang2 - ang1);\n\tif (crossproduct > 0) {\n\t\treturn Angle.COUNTERCLOCKWISE;\n\t}\n\tif (crossproduct < 0) {\n\t\treturn Angle.CLOCKWISE;\n\t}\n\treturn Angle.NONE;\n};\nAngle.angleBetweenOriented = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\tvar angDel = a2 - a1;\n\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n\treturn angDel;\n};\nAngle.PI_TIMES_2 = 2.0 * Math.PI;\nAngle.PI_OVER_2 = Math.PI / 2.0;\nAngle.PI_OVER_4 = Math.PI / 4.0;\nAngle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE;\nAngle.CLOCKWISE = Orientation.CLOCKWISE;\nAngle.NONE = Orientation.COLLINEAR;\n","import Coordinate from './Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Angle from '../algorithm/Angle';\nimport HCoordinate from '../algorithm/HCoordinate';\nexport default function Triangle() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.p2 = null;\n\tlet p0 = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\tthis.p0 = p0;\n\tthis.p1 = p1;\n\tthis.p2 = p2;\n}\nextend(Triangle.prototype, {\n\tarea: function () {\n\t\treturn Triangle.area(this.p0, this.p1, this.p2);\n\t},\n\tsignedArea: function () {\n\t\treturn Triangle.signedArea(this.p0, this.p1, this.p2);\n\t},\n\tinterpolateZ: function (p) {\n\t\tif (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\n\t\treturn Triangle.interpolateZ(p, this.p0, this.p1, this.p2);\n\t},\n\tlongestSideLength: function () {\n\t\treturn Triangle.longestSideLength(this.p0, this.p1, this.p2);\n\t},\n\tisAcute: function () {\n\t\treturn Triangle.isAcute(this.p0, this.p1, this.p2);\n\t},\n\tcircumcentre: function () {\n\t\treturn Triangle.circumcentre(this.p0, this.p1, this.p2);\n\t},\n\tarea3D: function () {\n\t\treturn Triangle.area3D(this.p0, this.p1, this.p2);\n\t},\n\tcentroid: function () {\n\t\treturn Triangle.centroid(this.p0, this.p1, this.p2);\n\t},\n\tinCentre: function () {\n\t\treturn Triangle.inCentre(this.p0, this.p1, this.p2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Triangle;\n\t}\n});\nTriangle.area = function (a, b, c) {\n\treturn Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\n};\nTriangle.signedArea = function (a, b, c) {\n\treturn ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\n};\nTriangle.det = function (m00, m01, m10, m11) {\n\treturn m00 * m11 - m01 * m10;\n};\nTriangle.interpolateZ = function (p, v0, v1, v2) {\n\tvar x0 = v0.x;\n\tvar y0 = v0.y;\n\tvar a = v1.x - x0;\n\tvar b = v2.x - x0;\n\tvar c = v1.y - y0;\n\tvar d = v2.y - y0;\n\tvar det = a * d - b * c;\n\tvar dx = p.x - x0;\n\tvar dy = p.y - y0;\n\tvar t = (d * dx - b * dy) / det;\n\tvar u = (-c * dx + a * dy) / det;\n\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\treturn z;\n};\nTriangle.longestSideLength = function (a, b, c) {\n\tvar lenAB = a.distance(b);\n\tvar lenBC = b.distance(c);\n\tvar lenCA = c.distance(a);\n\tvar maxLen = lenAB;\n\tif (lenBC > maxLen) maxLen = lenBC;\n\tif (lenCA > maxLen) maxLen = lenCA;\n\treturn maxLen;\n};\nTriangle.isAcute = function (a, b, c) {\n\tif (!Angle.isAcute(a, b, c)) return false;\n\tif (!Angle.isAcute(b, c, a)) return false;\n\tif (!Angle.isAcute(c, a, b)) return false;\n\treturn true;\n};\nTriangle.circumcentre = function (a, b, c) {\n\tvar cx = c.x;\n\tvar cy = c.y;\n\tvar ax = a.x - cx;\n\tvar ay = a.y - cy;\n\tvar bx = b.x - cx;\n\tvar by = b.y - cy;\n\tvar denom = 2 * Triangle.det(ax, ay, bx, by);\n\tvar numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n\tvar numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n\tvar ccx = cx - numx / denom;\n\tvar ccy = cy + numy / denom;\n\treturn new Coordinate(ccx, ccy);\n};\nTriangle.perpendicularBisector = function (a, b) {\n\tvar dx = b.x - a.x;\n\tvar dy = b.y - a.y;\n\tvar l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n\tvar l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n\treturn new HCoordinate(l1, l2);\n};\nTriangle.angleBisector = function (a, b, c) {\n\tvar len0 = b.distance(a);\n\tvar len2 = b.distance(c);\n\tvar frac = len0 / (len0 + len2);\n\tvar dx = c.x - a.x;\n\tvar dy = c.y - a.y;\n\tvar splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n\treturn splitPt;\n};\nTriangle.area3D = function (a, b, c) {\n\tvar ux = b.x - a.x;\n\tvar uy = b.y - a.y;\n\tvar uz = b.z - a.z;\n\tvar vx = c.x - a.x;\n\tvar vy = c.y - a.y;\n\tvar vz = c.z - a.z;\n\tvar crossx = uy * vz - uz * vy;\n\tvar crossy = uz * vx - ux * vz;\n\tvar crossz = ux * vy - uy * vx;\n\tvar absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n\tvar area3D = Math.sqrt(absSq) / 2;\n\treturn area3D;\n};\nTriangle.centroid = function (a, b, c) {\n\tvar x = (a.x + b.x + c.x) / 3;\n\tvar y = (a.y + b.y + c.y) / 3;\n\treturn new Coordinate(x, y);\n};\nTriangle.inCentre = function (a, b, c) {\n\tvar len0 = b.distance(c);\n\tvar len1 = a.distance(c);\n\tvar len2 = a.distance(b);\n\tvar circum = len0 + len1 + len2;\n\tvar inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n\tvar inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n\treturn new Coordinate(inCentreX, inCentreY);\n};\n","import Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Angle from './Angle';\nimport Assert from '../util/Assert';\nimport Triangle from '../geom/Triangle';\nexport default function MinimumBoundingCircle() {\n\tthis._input = null;\n\tthis._extremalPts = null;\n\tthis._centre = null;\n\tthis._radius = 0.0;\n\tlet geom = arguments[0];\n\tthis._input = geom;\n}\nextend(MinimumBoundingCircle.prototype, {\n\tgetRadius: function () {\n\t\tthis.compute();\n\t\treturn this._radius;\n\t},\n\tgetDiameter: function () {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetExtremalPoints: function () {\n\t\tthis.compute();\n\t\treturn this._extremalPts;\n\t},\n\tcomputeCirclePoints: function () {\n\t\tif (this._input.isEmpty()) {\n\t\t\tthis._extremalPts = new Array(0).fill(null);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._input.getNumPoints() === 1) {\n\t\t\tvar pts = this._input.getCoordinates();\n\t\t\tthis._extremalPts = [new Coordinate(pts[0])];\n\t\t\treturn null;\n\t\t}\n\t\tvar convexHull = this._input.convexHull();\n\t\tvar hullPts = convexHull.getCoordinates();\n\t\tvar pts = hullPts;\n\t\tif (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n\t\t\tpts = new Array(hullPts.length - 1).fill(null);\n\t\t\tCoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\n\t\t}\n\t\tif (pts.length <= 2) {\n\t\t\tthis._extremalPts = CoordinateArrays.copyDeep(pts);\n\t\t\treturn null;\n\t\t}\n\t\tvar P = MinimumBoundingCircle.lowestPoint(pts);\n\t\tvar Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\n\t\t\tif (Angle.isObtuse(P, R, Q)) {\n\t\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q)];\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, P, Q)) {\n\t\t\t\tP = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, Q, P)) {\n\t\t\t\tQ = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\n\t},\n\tcompute: function () {\n\t\tif (this._extremalPts !== null) return null;\n\t\tthis.computeCirclePoints();\n\t\tthis.computeCentre();\n\t\tif (this._centre !== null) this._radius = this._centre.distance(this._extremalPts[0]);\n\t},\n\tgetFarthestPoints: function () {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[this._extremalPts.length - 1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetCircle: function () {\n\t\tthis.compute();\n\t\tif (this._centre === null) return this._input.getFactory().createPolygon();\n\t\tvar centrePoint = this._input.getFactory().createPoint(this._centre);\n\t\tif (this._radius === 0.0) return centrePoint;\n\t\treturn centrePoint.buffer(this._radius);\n\t},\n\tgetCentre: function () {\n\t\tthis.compute();\n\t\treturn this._centre;\n\t},\n\tcomputeCentre: function () {\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\tthis._centre = null;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis._centre = this._extremalPts[0];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis._centre = new Coordinate((this._extremalPts[0].x + this._extremalPts[1].x) / 2.0, (this._extremalPts[0].y + this._extremalPts[1].y) / 2.0);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis._centre = Triangle.circumcentre(this._extremalPts[0], this._extremalPts[1], this._extremalPts[2]);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimumBoundingCircle;\n\t}\n});\nMinimumBoundingCircle.pointWitMinAngleWithX = function (pts, P) {\n\tvar minSin = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tvar dx = p.x - P.x;\n\t\tvar dy = p.y - P.y;\n\t\tif (dy < 0) dy = -dy;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar sin = dy / len;\n\t\tif (sin < minSin) {\n\t\t\tminSin = sin;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\nMinimumBoundingCircle.lowestPoint = function (pts) {\n\tvar min = pts[0];\n\tfor (var i = 1; i < pts.length; i++) {\n\t\tif (pts[i].y < min.y) min = pts[i];\n\t}\n\treturn min;\n};\nMinimumBoundingCircle.pointWithMinAngleWithSegment = function (pts, P, Q) {\n\tvar minAng = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tif (p === Q) continue;\n\t\tvar ang = Angle.angleBetween(P, p, Q);\n\t\tif (ang < minAng) {\n\t\t\tminAng = ang;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\n","import Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport ConvexHull from './ConvexHull';\nexport default function MinimumDiameter() {\n\tthis._inputGeom = null;\n\tthis._isConvex = null;\n\tthis._convexHullPts = null;\n\tthis._minBaseSeg = new LineSegment();\n\tthis._minWidthPt = null;\n\tthis._minPtIndex = null;\n\tthis._minWidth = 0.0;\n\tif (arguments.length === 1) {\n\t\tlet inputGeom = arguments[0];\n\t\tMinimumDiameter.call(this, inputGeom, false);\n\t} else if (arguments.length === 2) {\n\t\tlet inputGeom = arguments[0], isConvex = arguments[1];\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._isConvex = isConvex;\n\t}\n}\nextend(MinimumDiameter.prototype, {\n\tgetWidthCoordinate: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidthPt;\n\t},\n\tgetSupportingSegment: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0, this._minBaseSeg.p1]);\n\t},\n\tgetDiameter: function () {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidthPt === null) return this._inputGeom.getFactory().createLineString();\n\t\tvar basePt = this._minBaseSeg.project(this._minWidthPt);\n\t\treturn this._inputGeom.getFactory().createLineString([basePt, this._minWidthPt]);\n\t},\n\tcomputeWidthConvex: function (convexGeom) {\n\t\tif (convexGeom instanceof Polygon) this._convexHullPts = convexGeom.getExteriorRing().getCoordinates(); else this._convexHullPts = convexGeom.getCoordinates();\n\t\tif (this._convexHullPts.length === 0) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = null;\n\t\t\tthis._minBaseSeg = null;\n\t\t} else if (this._convexHullPts.length === 1) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[0];\n\t\t} else if (this._convexHullPts.length === 2 || this._convexHullPts.length === 3) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[1];\n\t\t} else this.computeConvexRingMinDiameter(this._convexHullPts);\n\t},\n\tcomputeConvexRingMinDiameter: function (pts) {\n\t\tthis._minWidth = Double.MAX_VALUE;\n\t\tvar currMaxIndex = 1;\n\t\tvar seg = new LineSegment();\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tseg.p0 = pts[i];\n\t\t\tseg.p1 = pts[i + 1];\n\t\t\tcurrMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\n\t\t}\n\t},\n\tcomputeMinimumDiameter: function () {\n\t\tif (this._minWidthPt !== null) return null;\n\t\tif (this._isConvex) this.computeWidthConvex(this._inputGeom); else {\n\t\t\tvar convexGeom = new ConvexHull(this._inputGeom).getConvexHull();\n\t\t\tthis.computeWidthConvex(convexGeom);\n\t\t}\n\t},\n\tgetLength: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidth;\n\t},\n\tfindMaxPerpDistance: function (pts, seg, startIndex) {\n\t\tvar maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\n\t\tvar nextPerpDistance = maxPerpDistance;\n\t\tvar maxIndex = startIndex;\n\t\tvar nextIndex = maxIndex;\n\t\twhile (nextPerpDistance >= maxPerpDistance) {\n\t\t\tmaxPerpDistance = nextPerpDistance;\n\t\t\tmaxIndex = nextIndex;\n\t\t\tnextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\n\t\t\tnextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\n\t\t}\n\t\tif (maxPerpDistance < this._minWidth) {\n\t\t\tthis._minPtIndex = maxIndex;\n\t\t\tthis._minWidth = maxPerpDistance;\n\t\t\tthis._minWidthPt = pts[this._minPtIndex];\n\t\t\tthis._minBaseSeg = new LineSegment(seg);\n\t\t}\n\t\treturn maxIndex;\n\t},\n\tgetMinimumRectangle: function () {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidth === 0.0) {\n\t\t\tif (this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)) {\n\t\t\t\treturn this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0);\n\t\t\t}\n\t\t\treturn this._minBaseSeg.toGeometry(this._inputGeom.getFactory());\n\t\t}\n\t\tvar dx = this._minBaseSeg.p1.x - this._minBaseSeg.p0.x;\n\t\tvar dy = this._minBaseSeg.p1.y - this._minBaseSeg.p0.y;\n\t\tvar minPara = Double.MAX_VALUE;\n\t\tvar maxPara = -Double.MAX_VALUE;\n\t\tvar minPerp = Double.MAX_VALUE;\n\t\tvar maxPerp = -Double.MAX_VALUE;\n\t\tfor (var i = 0; i < this._convexHullPts.length; i++) {\n\t\t\tvar paraC = MinimumDiameter.computeC(dx, dy, this._convexHullPts[i]);\n\t\t\tif (paraC > maxPara) maxPara = paraC;\n\t\t\tif (paraC < minPara) minPara = paraC;\n\t\t\tvar perpC = MinimumDiameter.computeC(-dy, dx, this._convexHullPts[i]);\n\t\t\tif (perpC > maxPerp) maxPerp = perpC;\n\t\t\tif (perpC < minPerp) minPerp = perpC;\n\t\t}\n\t\tvar maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\n\t\tvar minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\n\t\tvar maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\n\t\tvar minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\n\t\tvar p0 = maxParaLine.lineIntersection(maxPerpLine);\n\t\tvar p1 = minParaLine.lineIntersection(maxPerpLine);\n\t\tvar p2 = minParaLine.lineIntersection(minPerpLine);\n\t\tvar p3 = maxParaLine.lineIntersection(minPerpLine);\n\t\tvar shell = this._inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\n\t\treturn this._inputGeom.getFactory().createPolygon(shell);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimumDiameter;\n\t}\n});\nMinimumDiameter.nextIndex = function (pts, index) {\n\tindex++;\n\tif (index >= pts.length) index = 0;\n\treturn index;\n};\nMinimumDiameter.computeC = function (a, b, p) {\n\treturn a * p.y - b * p.x;\n};\nMinimumDiameter.getMinimumDiameter = function (geom) {\n\treturn new MinimumDiameter(geom).getDiameter();\n};\nMinimumDiameter.getMinimumRectangle = function (geom) {\n\treturn new MinimumDiameter(geom).getMinimumRectangle();\n};\nMinimumDiameter.computeSegmentForLine = function (a, b, c) {\n\tvar p0 = null;\n\tvar p1 = null;\n\tif (Math.abs(b) > Math.abs(a)) {\n\t\tp0 = new Coordinate(0.0, c / b);\n\t\tp1 = new Coordinate(1.0, c / b - a / b);\n\t} else {\n\t\tp0 = new Coordinate(c / a, 0.0);\n\t\tp1 = new Coordinate(c / a - b / a, 1.0);\n\t}\n\treturn new LineSegment(p0, p1);\n};\n","import LineString from '../LineString';\nimport GeometryFactory from '../GeometryFactory';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport MultiLineString from '../MultiLineString';\nexport default function GeometryTransformer() {\n\tthis._inputGeom = null;\n\tthis._factory = null;\n\tthis._pruneEmptyGeometry = true;\n\tthis._preserveGeometryCollectionType = true;\n\tthis._preserveCollections = false;\n\tthis._preserveType = false;\n}\nextend(GeometryTransformer.prototype, {\n\ttransformPoint: function (geom, parent) {\n\t\treturn this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformPolygon: function (geom, parent) {\n\t\tvar isAllValidLinearRings = true;\n\t\tvar shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n\t\tif (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\n\t\t\tholes.add(hole);\n\t\t}\n\t\tif (isAllValidLinearRings) return this._factory.createPolygon(shell, holes.toArray([])); else {\n\t\t\tvar components = new ArrayList();\n\t\t\tif (shell !== null) components.add(shell);\n\t\t\tcomponents.addAll(holes);\n\t\t\treturn this._factory.buildGeometry(components);\n\t\t}\n\t},\n\tcreateCoordinateSequence: function (coords) {\n\t\treturn this._factory.getCoordinateSequenceFactory().create(coords);\n\t},\n\tgetInputGeometry: function () {\n\t\treturn this._inputGeom;\n\t},\n\ttransformMultiLineString: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\treturn this.copy(coords);\n\t},\n\ttransformLineString: function (geom, parent) {\n\t\treturn this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformMultiPoint: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\tcopy: function (seq) {\n\t\treturn seq.copy();\n\t},\n\ttransformGeometryCollection: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transform(geom.getGeometryN(i));\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\tif (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransform: function (inputGeom) {\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._factory = inputGeom.getFactory();\n\t\tif (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\n\t\tif (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\n\t\tif (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\n\t\tif (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\n\t\tif (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\n\t\tthrow new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\n\t},\n\ttransformLinearRing: function (geom, parent) {\n\t\tvar seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n\t\tif (seq === null) return this._factory.createLinearRing(null);\n\t\tvar seqSize = seq.size();\n\t\tif (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq);\n\t\treturn this._factory.createLinearRing(seq);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryTransformer;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport LineSegment from '../geom/LineSegment';\nimport inherits from '../../../../inherits';\nexport default function Densifier() {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(Densifier.prototype, {\n\tgetResultGeometry: function () {\n\t\treturn new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom);\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Densifier;\n\t}\n});\nDensifier.densifyPoints = function (pts, distanceTolerance, precModel) {\n\tvar seg = new LineSegment();\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[i + 1];\n\t\tcoordList.add(seg.p0, false);\n\t\tvar len = seg.getLength();\n\t\tvar densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\n\t\tif (densifiedSegCount > 1) {\n\t\t\tvar densifiedSegLen = len / densifiedSegCount;\n\t\t\tfor (var j = 1; j < densifiedSegCount; j++) {\n\t\t\t\tvar segFract = j * densifiedSegLen / len;\n\t\t\t\tvar p = seg.pointAlong(segFract);\n\t\t\t\tprecModel.makePrecise(p);\n\t\t\t\tcoordList.add(p, false);\n\t\t\t}\n\t\t}\n\t}\n\tcoordList.add(pts[pts.length - 1], false);\n\treturn coordList.toCoordinateArray();\n};\nDensifier.densify = function (geom, distanceTolerance) {\n\tvar densifier = new Densifier(geom);\n\tdensifier.setDistanceTolerance(distanceTolerance);\n\treturn densifier.getResultGeometry();\n};\nfunction DensifyTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.distanceTolerance = null;\n\tlet distanceTolerance = arguments[0];\n\tthis.distanceTolerance = distanceTolerance;\n}\ninherits(DensifyTransformer, GeometryTransformer);\nextend(DensifyTransformer.prototype, {\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformPolygon: function (geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn roughGeom;\n\t\t}\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\n\t\tif (parent instanceof LineString && newPts.length === 1) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tcreateValidArea: function (roughAreaGeom) {\n\t\treturn roughAreaGeom.buffer(0.0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DensifyTransformer;\n\t}\n});\nDensifier.DensifyTransformer = DensifyTransformer;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Quadrant from '../geomgraph/Quadrant';\nimport Assert from '../util/Assert';\nexport default function HalfEdge() {\n\tthis._orig = null;\n\tthis._sym = null;\n\tthis._next = null;\n\tlet orig = arguments[0];\n\tthis._orig = orig;\n}\nextend(HalfEdge.prototype, {\n\tfind: function (dest) {\n\t\tvar oNext = this;\n\t\tdo {\n\t\t\tif (oNext === null) return null;\n\t\t\tif (oNext.dest().equals2D(dest)) return oNext;\n\t\t\toNext = oNext.oNext();\n\t\t} while (oNext !== this);\n\t\treturn null;\n\t},\n\tdest: function () {\n\t\treturn this._sym._orig;\n\t},\n\toNext: function () {\n\t\treturn this._sym._next;\n\t},\n\tinsert: function (e) {\n\t\tif (this.oNext() === this) {\n\t\t\tthis.insertAfter(e);\n\t\t\treturn null;\n\t\t}\n\t\tvar ecmp = this.compareTo(e);\n\t\tvar ePrev = this;\n\t\tdo {\n\t\t\tvar oNext = ePrev.oNext();\n\t\t\tvar cmp = oNext.compareTo(e);\n\t\t\tif (cmp !== ecmp || oNext === this) {\n\t\t\t\tePrev.insertAfter(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tePrev = oNext;\n\t\t} while (ePrev !== this);\n\t\tAssert.shouldNeverReachHere();\n\t},\n\tinsertAfter: function (e) {\n\t\tAssert.equals(this._orig, e.orig());\n\t\tvar save = this.oNext();\n\t\tthis._sym.setNext(e);\n\t\te.sym().setNext(save);\n\t},\n\tdegree: function () {\n\t\tvar degree = 0;\n\t\tvar e = this;\n\t\tdo {\n\t\t\tdegree++;\n\t\t\te = e.oNext();\n\t\t} while (e !== this);\n\t\treturn degree;\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Coordinate && arguments[0] instanceof Coordinate)) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\treturn this._orig.equals2D(p0) && this._sym._orig.equals(p1);\n\t\t}\n\t},\n\tdeltaY: function () {\n\t\treturn this._sym._orig.y - this._orig.y;\n\t},\n\tsym: function () {\n\t\treturn this._sym;\n\t},\n\tprev: function () {\n\t\treturn this._sym.next()._sym;\n\t},\n\tcompareAngularDirection: function (e) {\n\t\tvar dx = this.deltaX();\n\t\tvar dy = this.deltaY();\n\t\tvar dx2 = e.deltaX();\n\t\tvar dy2 = e.deltaY();\n\t\tif (dx === dx2 && dy === dy2) return 0;\n\t\tvar quadrant = Quadrant.quadrant(dx, dy);\n\t\tvar quadrant2 = Quadrant.quadrant(dx2, dy2);\n\t\tif (quadrant > quadrant2) return 1;\n\t\tif (quadrant < quadrant2) return -1;\n\t\treturn Orientation.index(e._orig, e.dest(), this.dest());\n\t},\n\tprevNode: function () {\n\t\tvar e = this;\n\t\twhile (e.degree() === 2) {\n\t\t\te = e.prev();\n\t\t\tif (e === this) return null;\n\t\t}\n\t\treturn e;\n\t},\n\tcompareTo: function (obj) {\n\t\tvar e = obj;\n\t\tvar comp = this.compareAngularDirection(e);\n\t\treturn comp;\n\t},\n\tnext: function () {\n\t\treturn this._next;\n\t},\n\tsetSym: function (e) {\n\t\tthis._sym = e;\n\t},\n\torig: function () {\n\t\treturn this._orig;\n\t},\n\ttoString: function () {\n\t\treturn \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\n\t},\n\tsetNext: function (e) {\n\t\tthis._next = e;\n\t},\n\tinit: function (e) {\n\t\tthis.setSym(e);\n\t\te.setSym(this);\n\t\tthis.setNext(e);\n\t\te.setNext(this);\n\t},\n\tdeltaX: function () {\n\t\treturn this._sym._orig.x - this._orig.x;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HalfEdge;\n\t}\n});\nHalfEdge.init = function (e0, e1) {\n\tif (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\n\te0.init(e1);\n\treturn e0;\n};\nHalfEdge.create = function (p0, p1) {\n\tvar e0 = new HalfEdge(p0);\n\tvar e1 = new HalfEdge(p1);\n\te0.init(e1);\n\treturn e0;\n};\n","import extend from '../../../../extend';\nimport HalfEdge from './HalfEdge';\nimport inherits from '../../../../inherits';\nexport default function MarkHalfEdge() {\n\tthis._isMarked = false;\n\tlet orig = arguments[0];\n\tHalfEdge.call(this, orig);\n}\ninherits(MarkHalfEdge, HalfEdge);\nextend(MarkHalfEdge.prototype, {\n\tmark: function () {\n\t\tthis._isMarked = true;\n\t},\n\tsetMark: function (isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tisMarked: function () {\n\t\treturn this._isMarked;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MarkHalfEdge;\n\t}\n});\nMarkHalfEdge.setMarkBoth = function (e, isMarked) {\n\te.setMark(isMarked);\n\te.sym().setMark(isMarked);\n};\nMarkHalfEdge.isMarked = function (e) {\n\treturn e.isMarked();\n};\nMarkHalfEdge.setMark = function (e, isMarked) {\n\te.setMark(isMarked);\n};\nMarkHalfEdge.markBoth = function (e) {\n\te.mark();\n\te.sym().mark();\n};\nMarkHalfEdge.mark = function (e) {\n\te.mark();\n};\n","import HashMap from '../../../../java/util/HashMap';\nimport extend from '../../../../extend';\nimport HalfEdge from './HalfEdge';\nexport default function EdgeGraph() {\n\tthis._vertexMap = new HashMap();\n}\nextend(EdgeGraph.prototype, {\n\tinsert: function (orig, dest, eAdj) {\n\t\tvar e = this.create(orig, dest);\n\t\tif (eAdj !== null) {\n\t\t\teAdj.insert(e);\n\t\t} else {\n\t\t\tthis._vertexMap.put(orig, e);\n\t\t}\n\t\tvar eAdjDest = this._vertexMap.get(dest);\n\t\tif (eAdjDest !== null) {\n\t\t\teAdjDest.insert(e.sym());\n\t\t} else {\n\t\t\tthis._vertexMap.put(dest, e.sym());\n\t\t}\n\t\treturn e;\n\t},\n\tcreate: function (p0, p1) {\n\t\tvar e0 = this.createEdge(p0);\n\t\tvar e1 = this.createEdge(p1);\n\t\tHalfEdge.init(e0, e1);\n\t\treturn e0;\n\t},\n\tcreateEdge: function (orig) {\n\t\treturn new HalfEdge(orig);\n\t},\n\taddEdge: function (orig, dest) {\n\t\tif (!EdgeGraph.isValidEdge(orig, dest)) return null;\n\t\tvar eAdj = this._vertexMap.get(orig);\n\t\tvar eSame = null;\n\t\tif (eAdj !== null) {\n\t\t\teSame = eAdj.find(dest);\n\t\t}\n\t\tif (eSame !== null) {\n\t\t\treturn eSame;\n\t\t}\n\t\tvar e = this.insert(orig, dest, eAdj);\n\t\treturn e;\n\t},\n\tgetVertexEdges: function () {\n\t\treturn this._vertexMap.values();\n\t},\n\tfindEdge: function (orig, dest) {\n\t\tvar e = this._vertexMap.get(orig);\n\t\tif (e === null) return null;\n\t\treturn e.find(dest);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeGraph;\n\t}\n});\nEdgeGraph.isValidEdge = function (orig, dest) {\n\tvar cmp = dest.compareTo(orig);\n\treturn cmp !== 0;\n};\n","import extend from '../../../../extend';\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nimport inherits from '../../../../inherits';\nexport default function DissolveHalfEdge() {\n\tthis._isStart = false;\n\tlet orig = arguments[0];\n\tMarkHalfEdge.call(this, orig);\n}\ninherits(DissolveHalfEdge, MarkHalfEdge);\nextend(DissolveHalfEdge.prototype, {\n\tsetStart: function () {\n\t\tthis._isStart = true;\n\t},\n\tisStart: function () {\n\t\treturn this._isStart;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DissolveHalfEdge;\n\t}\n});\n","import EdgeGraph from '../edgegraph/EdgeGraph';\nimport extend from '../../../../extend';\nimport DissolveHalfEdge from './DissolveHalfEdge';\nimport inherits from '../../../../inherits';\nexport default function DissolveEdgeGraph() {\n\tEdgeGraph.apply(this);\n}\ninherits(DissolveEdgeGraph, EdgeGraph);\nextend(DissolveEdgeGraph.prototype, {\n\tcreateEdge: function (p0) {\n\t\treturn new DissolveHalfEdge(p0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DissolveEdgeGraph;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Stack from '../../../../java/util/Stack';\nimport extend from '../../../../extend';\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nimport DissolveEdgeGraph from './DissolveEdgeGraph';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function LineDissolver() {\n\tthis._result = null;\n\tthis._factory = null;\n\tthis._graph = null;\n\tthis._lines = new ArrayList();\n\tthis._nodeEdgeStack = new Stack();\n\tthis._ringStartEdge = null;\n\tthis._graph = new DissolveEdgeGraph();\n}\nextend(LineDissolver.prototype, {\n\taddLine: function (line) {\n\t\tthis._lines.add(this._factory.createLineString(line.toCoordinateArray()));\n\t},\n\tupdateRingStartEdge: function (e) {\n\t\tif (!e.isStart()) {\n\t\t\te = e.sym();\n\t\t\tif (!e.isStart()) return null;\n\t\t}\n\t\tif (this._ringStartEdge === null) {\n\t\t\tthis._ringStartEdge = e;\n\t\t\treturn null;\n\t\t}\n\t\tif (e.orig().compareTo(this._ringStartEdge.orig()) < 0) {\n\t\t\tthis._ringStartEdge = e;\n\t\t}\n\t},\n\tgetResult: function () {\n\t\tif (this._result === null) this.computeResult();\n\t\treturn this._result;\n\t},\n\tprocess: function (e) {\n\t\tvar eNode = e.prevNode();\n\t\tif (eNode === null) eNode = e;\n\t\tthis.stackEdges(eNode);\n\t\tthis.buildLines();\n\t},\n\tbuildRing: function (eStartRing) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStartRing;\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStartRing) break;\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.addLine(line);\n\t},\n\tbuildLine: function (eStart) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStart;\n\t\tthis._ringStartEdge = null;\n\t\tMarkHalfEdge.markBoth(e);\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tthis.updateRingStartEdge(e);\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStart) {\n\t\t\t\tthis.buildRing(this._ringStartEdge);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t\tMarkHalfEdge.markBoth(e);\n\t\t}\n\t\tline.add(e.dest().clone(), false);\n\t\tthis.stackEdges(e.sym());\n\t\tthis.addLine(line);\n\t},\n\tstackEdges: function (node) {\n\t\tvar e = node;\n\t\tdo {\n\t\t\tif (!MarkHalfEdge.isMarked(e)) this._nodeEdgeStack.add(e);\n\t\t\te = e.oNext();\n\t\t} while (e !== node);\n\t},\n\tcomputeResult: function () {\n\t\tvar edges = this._graph.getVertexEdges();\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.process(e);\n\t\t}\n\t\tthis._result = this._factory.buildGeometry(this._lines);\n\t},\n\tbuildLines: function () {\n\t\twhile (!this._nodeEdgeStack.empty()) {\n\t\t\tvar e = this._nodeEdgeStack.pop();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.buildLine(e);\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function (component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tvar seq = lineString.getCoordinateSequence();\n\t\t\tvar doneStart = false;\n\t\t\tfor (var i = 1; i < seq.size(); i++) {\n\t\t\t\tvar e = this._graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\n\t\t\t\tif (e === null) continue;\n\t\t\t\tif (!doneStart) {\n\t\t\t\t\te.setStart();\n\t\t\t\t\tdoneStart = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineDissolver;\n\t}\n});\nLineDissolver.dissolve = function (g) {\n\tvar d = new LineDissolver();\n\td.add(g);\n\treturn d.getResult();\n};\n","import Iterator from '../../../../java/util/Iterator';\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nexport default function GeometryCollectionIterator() {\n\tthis._parent = null;\n\tthis._atStart = null;\n\tthis._max = null;\n\tthis._index = null;\n\tthis._subcollectionIterator = null;\n\tlet parent = arguments[0];\n\tthis._parent = parent;\n\tthis._atStart = true;\n\tthis._index = 0;\n\tthis._max = parent.getNumGeometries();\n}\nextend(GeometryCollectionIterator.prototype, {\n\tnext: function () {\n\t\tif (this._atStart) {\n\t\t\tthis._atStart = false;\n\t\t\tif (GeometryCollectionIterator.isAtomic(this._parent)) this._index++;\n\t\t\treturn this._parent;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn this._subcollectionIterator.next();\n\t\t\t} else {\n\t\t\t\tthis._subcollectionIterator = null;\n\t\t\t}\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tvar obj = this._parent.getGeometryN(this._index++);\n\t\tif (obj instanceof GeometryCollection) {\n\t\t\tthis._subcollectionIterator = new GeometryCollectionIterator(obj);\n\t\t\treturn this._subcollectionIterator.next();\n\t\t}\n\t\treturn obj;\n\t},\n\tremove: function () {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function () {\n\t\tif (this._atStart) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._subcollectionIterator = null;\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollectionIterator;\n\t}\n});\nGeometryCollectionIterator.isAtomic = function (geom) {\n\treturn !(geom instanceof GeometryCollection);\n};\n","import Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport PointLocation from './PointLocation';\nimport BoundaryNodeRule from './BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function PointLocator() {\n\tthis._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n\tthis._isIn = null;\n\tthis._numBoundaries = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet boundaryRule = arguments[0];\n\t\tif (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\n\t\tthis._boundaryRule = boundaryRule;\n\t}\n}\nextend(PointLocator.prototype, {\n\tlocateInPolygonRing: function (p, ring) {\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\treturn PointLocation.locateInRing(p, ring.getCoordinates());\n\t},\n\tintersects: function (p, geom) {\n\t\treturn this.locate(p, geom) !== Location.EXTERIOR;\n\t},\n\tupdateLocationInfo: function (loc) {\n\t\tif (loc === Location.INTERIOR) this._isIn = true;\n\t\tif (loc === Location.BOUNDARY) this._numBoundaries++;\n\t},\n\tcomputeLocation: function (p, geom) {\n\t\tif (geom instanceof Point) {\n\t\t\tthis.updateLocationInfo(this.locateOnPoint(p, geom));\n\t\t}\n\t\tif (geom instanceof LineString) {\n\t\t\tthis.updateLocationInfo(this.locateOnLineString(p, geom));\n\t\t} else if (geom instanceof Polygon) {\n\t\t\tthis.updateLocationInfo(this.locateInPolygon(p, geom));\n\t\t} else if (geom instanceof MultiLineString) {\n\t\t\tvar ml = geom;\n\t\t\tfor (var i = 0; i < ml.getNumGeometries(); i++) {\n\t\t\t\tvar l = ml.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateOnLineString(p, l));\n\t\t\t}\n\t\t} else if (geom instanceof MultiPolygon) {\n\t\t\tvar mpoly = geom;\n\t\t\tfor (var i = 0; i < mpoly.getNumGeometries(); i++) {\n\t\t\t\tvar poly = mpoly.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInPolygon(p, poly));\n\t\t\t}\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\t\twhile (geomi.hasNext()) {\n\t\t\t\tvar g2 = geomi.next();\n\t\t\t\tif (g2 !== geom) this.computeLocation(p, g2);\n\t\t\t}\n\t\t}\n\t},\n\tlocateOnPoint: function (p, pt) {\n\t\tvar ptCoord = pt.getCoordinate();\n\t\tif (ptCoord.equals2D(p)) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t},\n\tlocateOnLineString: function (p, l) {\n\t\tif (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\tvar seq = l.getCoordinateSequence();\n\t\tif (!l.isClosed()) {\n\t\t\tif (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) {\n\t\t\t\treturn Location.BOUNDARY;\n\t\t\t}\n\t\t}\n\t\tif (PointLocation.isOnLine(p, seq)) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t},\n\tlocateInPolygon: function (p, poly) {\n\t\tif (poly.isEmpty()) return Location.EXTERIOR;\n\t\tvar shell = poly.getExteriorRing();\n\t\tvar shellLoc = this.locateInPolygonRing(p, shell);\n\t\tif (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\n\t\tif (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tvar hole = poly.getInteriorRingN(i);\n\t\t\tvar holeLoc = this.locateInPolygonRing(p, hole);\n\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t}\n\t\treturn Location.INTERIOR;\n\t},\n\tlocate: function (p, geom) {\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\n\t\tif (geom instanceof LineString) {\n\t\t\treturn this.locateOnLineString(p, geom);\n\t\t} else if (geom instanceof Polygon) {\n\t\t\treturn this.locateInPolygon(p, geom);\n\t\t}\n\t\tthis._isIn = false;\n\t\tthis._numBoundaries = 0;\n\t\tthis.computeLocation(p, geom);\n\t\tif (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY;\n\t\tif (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointLocator;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function Position() {}\nextend(Position.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Position;\n\t}\n});\nPosition.opposite = function (position) {\n\tif (position === Position.LEFT) return Position.RIGHT;\n\tif (position === Position.RIGHT) return Position.LEFT;\n\treturn position;\n};\nPosition.ON = 0;\nPosition.LEFT = 1;\nPosition.RIGHT = 2;\n","import extend from '../../../../../extend';\nexport default function MonotoneChain() {\n\tthis.mce = null;\n\tthis.chainIndex = null;\n\tlet mce = arguments[0], chainIndex = arguments[1];\n\tthis.mce = mce;\n\tthis.chainIndex = chainIndex;\n}\nextend(MonotoneChain.prototype, {\n\tcomputeIntersections: function (mc, si) {\n\t\tthis.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChain;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Comparable from '../../../../../java/lang/Comparable';\nexport default function SweepLineEvent() {\n\tthis._label = null;\n\tthis._xValue = null;\n\tthis._eventType = null;\n\tthis._insertEvent = null;\n\tthis._deleteEventIndex = null;\n\tthis._obj = null;\n\tif (arguments.length === 2) {\n\t\tlet x = arguments[0], insertEvent = arguments[1];\n\t\tthis._eventType = SweepLineEvent.DELETE;\n\t\tthis._xValue = x;\n\t\tthis._insertEvent = insertEvent;\n\t} else if (arguments.length === 3) {\n\t\tlet label = arguments[0], x = arguments[1], obj = arguments[2];\n\t\tthis._eventType = SweepLineEvent.INSERT;\n\t\tthis._label = label;\n\t\tthis._xValue = x;\n\t\tthis._obj = obj;\n\t}\n}\nextend(SweepLineEvent.prototype, {\n\tisDelete: function () {\n\t\treturn this._eventType === SweepLineEvent.DELETE;\n\t},\n\tsetDeleteEventIndex: function (deleteEventIndex) {\n\t\tthis._deleteEventIndex = deleteEventIndex;\n\t},\n\tgetObject: function () {\n\t\treturn this._obj;\n\t},\n\tcompareTo: function (o) {\n\t\tvar pe = o;\n\t\tif (this._xValue < pe._xValue) return -1;\n\t\tif (this._xValue > pe._xValue) return 1;\n\t\tif (this._eventType < pe._eventType) return -1;\n\t\tif (this._eventType > pe._eventType) return 1;\n\t\treturn 0;\n\t},\n\tgetInsertEvent: function () {\n\t\treturn this._insertEvent;\n\t},\n\tisInsert: function () {\n\t\treturn this._eventType === SweepLineEvent.INSERT;\n\t},\n\tisSameLabel: function (ev) {\n\t\tif (this._label === null) return false;\n\t\treturn this._label === ev._label;\n\t},\n\tgetDeleteEventIndex: function () {\n\t\treturn this._deleteEventIndex;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn SweepLineEvent;\n\t}\n});\nSweepLineEvent.INSERT = 1;\nSweepLineEvent.DELETE = 2;\n","import extend from '../../../../../extend';\nexport default function EdgeSetIntersector() {}\nextend(EdgeSetIntersector.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeSetIntersector;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function SegmentIntersector() {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._includeProper = null;\n\tthis._recordIsolated = null;\n\tthis._isSelfIntersection = null;\n\tthis._numIntersections = 0;\n\tthis.numTests = 0;\n\tthis._bdyNodes = null;\n\tthis._isDone = false;\n\tthis._isDoneWhenProperInt = false;\n\tlet li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2];\n\tthis._li = li;\n\tthis._includeProper = includeProper;\n\tthis._recordIsolated = recordIsolated;\n}\nextend(SegmentIntersector.prototype, {\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.getNumPoints() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function () {\n\t\treturn this._properIntersectionPoint;\n\t},\n\tsetIsDoneIfProperInt: function (isDoneWhenProperInt) {\n\t\tthis._isDoneWhenProperInt = isDoneWhenProperInt;\n\t},\n\thasProperInteriorIntersection: function () {\n\t\treturn this._hasProperInterior;\n\t},\n\tisBoundaryPointInternal: function (li, bdyNodes) {\n\t\tfor (var i = bdyNodes.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tvar pt = node.getCoordinate();\n\t\t\tif (li.isIntersection(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\thasProperIntersection: function () {\n\t\treturn this._hasProper;\n\t},\n\thasIntersection: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn this._isDone;\n\t},\n\tisBoundaryPoint: function (li, bdyNodes) {\n\t\tif (bdyNodes === null) return false;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\n\t\treturn false;\n\t},\n\tsetBoundaryNodes: function (bdyNodes0, bdyNodes1) {\n\t\tthis._bdyNodes = new Array(2).fill(null);\n\t\tthis._bdyNodes[0] = bdyNodes0;\n\t\tthis._bdyNodes[1] = bdyNodes1;\n\t},\n\taddIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._recordIsolated) {\n\t\t\t\te0.setIsolated(false);\n\t\t\t\te1.setIsolated(false);\n\t\t\t}\n\t\t\tthis._numIntersections++;\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\tif (this._includeProper || !this._li.isProper()) {\n\t\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\t}\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis._properIntersectionPoint = this._li.getIntersection(0).copy();\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tif (this._isDoneWhenProperInt) {\n\t\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentIntersector;\n\t}\n});\nSegmentIntersector.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport MonotoneChain from './MonotoneChain';\nimport SweepLineEvent from './SweepLineEvent';\nimport EdgeSetIntersector from './EdgeSetIntersector';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport inherits from '../../../../../inherits';\nimport List from '../../../../../java/util/List';\nexport default function SimpleMCSweepLineIntersector() {\n\tEdgeSetIntersector.apply(this);\n\tthis.events = new ArrayList();\n\tthis.nOverlaps = null;\n}\ninherits(SimpleMCSweepLineIntersector, EdgeSetIntersector);\nextend(SimpleMCSweepLineIntersector.prototype, {\n\tprepareEvents: function () {\n\t\tCollections.sort(this.events);\n\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\tvar ev = this.events.get(i);\n\t\t\tif (ev.isDelete()) {\n\t\t\t\tev.getInsertEvent().setDeleteEventIndex(i);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeIntersections: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet si = arguments[0];\n\t\t\tthis.nOverlaps = 0;\n\t\t\tthis.prepareEvents();\n\t\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\t\tvar ev = this.events.get(i);\n\t\t\t\tif (ev.isInsert()) {\n\t\t\t\t\tthis.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n\t\t\t\t}\n\t\t\t\tif (si.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet edges0 = arguments[0], edges1 = arguments[1], si = arguments[2];\n\t\t\t\tthis.addEdges(edges0, edges0);\n\t\t\t\tthis.addEdges(edges1, edges1);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n\t\t\t\tlet edges = arguments[0], si = arguments[1], testAllSegments = arguments[2];\n\t\t\t\tif (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t}\n\t\t}\n\t},\n\taddEdge: function (edge, edgeSet) {\n\t\tvar mce = edge.getMonotoneChainEdge();\n\t\tvar startIndex = mce.getStartIndexes();\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(mce, i);\n\t\t\tvar insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n\t\t\tthis.events.add(insertEvent);\n\t\t\tthis.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n\t\t}\n\t},\n\tprocessOverlaps: function (start, end, ev0, si) {\n\t\tvar mc0 = ev0.getObject();\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar ev1 = this.events.get(i);\n\t\t\tif (ev1.isInsert()) {\n\t\t\t\tvar mc1 = ev1.getObject();\n\t\t\t\tif (!ev0.isSameLabel(ev1)) {\n\t\t\t\t\tmc0.computeIntersections(mc1, si);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\taddEdges: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edge);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edges = arguments[0], edgeSet = arguments[1];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edgeSet);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SimpleMCSweepLineIntersector;\n\t}\n});\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nexport default function TopologyLocation() {\n\tthis.location = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.init(location.length);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet on = arguments[0];\n\t\t\tthis.init(1);\n\t\t\tthis.location[Position.ON] = on;\n\t\t} else if (arguments[0] instanceof TopologyLocation) {\n\t\t\tlet gl = arguments[0];\n\t\t\tthis.init(gl.location.length);\n\t\t\tif (gl !== null) {\n\t\t\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\t\t\tthis.location[i] = gl.location[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet on = arguments[0], left = arguments[1], right = arguments[2];\n\t\tthis.init(3);\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t}\n}\nextend(TopologyLocation.prototype, {\n\tsetAllLocations: function (locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tthis.location[i] = locValue;\n\t\t}\n\t},\n\tisNull: function () {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== Location.NONE) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tsetAllLocationsIfNull: function (locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) this.location[i] = locValue;\n\t\t}\n\t},\n\tisLine: function () {\n\t\treturn this.location.length === 1;\n\t},\n\tmerge: function (gl) {\n\t\tif (gl.location.length > this.location.length) {\n\t\t\tvar newLoc = new Array(3).fill(null);\n\t\t\tnewLoc[Position.ON] = this.location[Position.ON];\n\t\t\tnewLoc[Position.LEFT] = Location.NONE;\n\t\t\tnewLoc[Position.RIGHT] = Location.NONE;\n\t\t\tthis.location = newLoc;\n\t\t}\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\n\t\t}\n\t},\n\tgetLocations: function () {\n\t\treturn this.location;\n\t},\n\tflip: function () {\n\t\tif (this.location.length <= 1) return null;\n\t\tvar temp = this.location[Position.LEFT];\n\t\tthis.location[Position.LEFT] = this.location[Position.RIGHT];\n\t\tthis.location[Position.RIGHT] = temp;\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\n\t\tbuf.append(Location.toLocationSymbol(this.location[Position.ON]));\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\n\t\treturn buf.toString();\n\t},\n\tsetLocations: function (on, left, right) {\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t},\n\tget: function (posIndex) {\n\t\tif (posIndex < this.location.length) return this.location[posIndex];\n\t\treturn Location.NONE;\n\t},\n\tisArea: function () {\n\t\treturn this.location.length > 1;\n\t},\n\tisAnyNull: function () {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tsetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet locValue = arguments[0];\n\t\t\tthis.setLocation(Position.ON, locValue);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet locIndex = arguments[0], locValue = arguments[1];\n\t\t\tthis.location[locIndex] = locValue;\n\t\t}\n\t},\n\tinit: function (size) {\n\t\tthis.location = new Array(size).fill(null);\n\t\tthis.setAllLocations(Location.NONE);\n\t},\n\tisEqualOnSide: function (le, locIndex) {\n\t\treturn this.location[locIndex] === le.location[locIndex];\n\t},\n\tallPositionsEqual: function (loc) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== loc) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyLocation;\n\t}\n});\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nimport TopologyLocation from './TopologyLocation';\nexport default function Label() {\n\tthis.elt = new Array(2).fill(null);\n\tif (arguments.length === 1) {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet onLoc = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(onLoc);\n\t\t\tthis.elt[1] = new TopologyLocation(onLoc);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(lbl.elt[0]);\n\t\t\tthis.elt[1] = new TopologyLocation(lbl.elt[1]);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[geomIndex].setLocation(onLoc);\n\t} else if (arguments.length === 3) {\n\t\tlet onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2];\n\t\tthis.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t\tthis.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t} else if (arguments.length === 4) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc);\n\t}\n}\nextend(Label.prototype, {\n\tgetGeometryCount: function () {\n\t\tvar count = 0;\n\t\tif (!this.elt[0].isNull()) count++;\n\t\tif (!this.elt[1].isNull()) count++;\n\t\treturn count;\n\t},\n\tsetAllLocations: function (geomIndex, location) {\n\t\tthis.elt[geomIndex].setAllLocations(location);\n\t},\n\tisNull: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isNull();\n\t},\n\tsetAllLocationsIfNull: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.setAllLocationsIfNull(0, location);\n\t\t\tthis.setAllLocationsIfNull(1, location);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setAllLocationsIfNull(location);\n\t\t}\n\t},\n\tisLine: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isLine();\n\t},\n\tmerge: function (lbl) {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.elt[i] === null && lbl.elt[i] !== null) {\n\t\t\t\tthis.elt[i] = new TopologyLocation(lbl.elt[i]);\n\t\t\t} else {\n\t\t\t\tthis.elt[i].merge(lbl.elt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tflip: function () {\n\t\tthis.elt[0].flip();\n\t\tthis.elt[1].flip();\n\t},\n\tgetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].get(Position.ON);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this.elt[geomIndex].get(posIndex);\n\t\t}\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.elt[0] !== null) {\n\t\t\tbuf.append(\"A:\");\n\t\t\tbuf.append(this.elt[0].toString());\n\t\t}\n\t\tif (this.elt[1] !== null) {\n\t\t\tbuf.append(\" B:\");\n\t\t\tbuf.append(this.elt[1].toString());\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tisArea: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.elt[0].isArea() || this.elt[1].isArea();\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].isArea();\n\t\t}\n\t},\n\tisAnyNull: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isAnyNull();\n\t},\n\tsetLocation: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setLocation(Position.ON, location);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tthis.elt[geomIndex].setLocation(posIndex, location);\n\t\t}\n\t},\n\tisEqualOnSide: function (lbl, side) {\n\t\treturn this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\n\t},\n\tallPositionsEqual: function (geomIndex, loc) {\n\t\treturn this.elt[geomIndex].allPositionsEqual(loc);\n\t},\n\ttoLine: function (geomIndex) {\n\t\tif (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Label;\n\t}\n});\nLabel.toLineLabel = function (label) {\n\tvar lineLabel = new Label(Location.NONE);\n\tfor (var i = 0; i < 2; i++) {\n\t\tlineLabel.setLocation(i, label.getLocation(i));\n\t}\n\treturn lineLabel;\n};\n","import extend from '../../../../extend';\nexport default function ItemVisitor() {}\nextend(ItemVisitor.prototype, {\n\tvisitItem: function (item) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ItemVisitor;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function PointOnGeometryLocator() {}\nextend(PointOnGeometryLocator.prototype, {\n\tlocate: function (p) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointOnGeometryLocator;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport Comparator from '../../../../../java/util/Comparator';\nexport default function IntervalRTreeNode() {\n\tthis._min = Double.POSITIVE_INFINITY;\n\tthis._max = Double.NEGATIVE_INFINITY;\n}\nextend(IntervalRTreeNode.prototype, {\n\tgetMin: function () {\n\t\treturn this._min;\n\t},\n\tintersects: function (queryMin, queryMax) {\n\t\tif (this._min > queryMax || this._max < queryMin) return false;\n\t\treturn true;\n\t},\n\tgetMax: function () {\n\t\treturn this._max;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeNode;\n\t}\n});\nfunction NodeComparator() {}\nextend(NodeComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar n1 = o1;\n\t\tvar n2 = o2;\n\t\tvar mid1 = (n1._min + n1._max) / 2;\n\t\tvar mid2 = (n2._min + n2._max) / 2;\n\t\tif (mid1 < mid2) return -1;\n\t\tif (mid1 > mid2) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn NodeComparator;\n\t}\n});\nIntervalRTreeNode.NodeComparator = NodeComparator;\n","import IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function IntervalRTreeLeafNode() {\n\tIntervalRTreeNode.apply(this);\n\tthis._item = null;\n\tlet min = arguments[0], max = arguments[1], item = arguments[2];\n\tthis._min = min;\n\tthis._max = max;\n\tthis._item = item;\n}\ninherits(IntervalRTreeLeafNode, IntervalRTreeNode);\nextend(IntervalRTreeLeafNode.prototype, {\n\tquery: function (queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) return null;\n\t\tvisitor.visitItem(this._item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeLeafNode;\n\t}\n});\n","import IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function IntervalRTreeBranchNode() {\n\tIntervalRTreeNode.apply(this);\n\tthis._node1 = null;\n\tthis._node2 = null;\n\tlet n1 = arguments[0], n2 = arguments[1];\n\tthis._node1 = n1;\n\tthis._node2 = n2;\n\tthis.buildExtent(this._node1, this._node2);\n}\ninherits(IntervalRTreeBranchNode, IntervalRTreeNode);\nextend(IntervalRTreeBranchNode.prototype, {\n\tbuildExtent: function (n1, n2) {\n\t\tthis._min = Math.min(n1._min, n2._min);\n\t\tthis._max = Math.max(n1._max, n2._max);\n\t},\n\tquery: function (queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor);\n\t\tif (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeBranchNode;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode';\nimport IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport System from '../../../../../java/lang/System';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode';\nexport default function SortedPackedIntervalRTree() {\n\tthis._leaves = new ArrayList();\n\tthis._root = null;\n\tthis._level = 0;\n}\nextend(SortedPackedIntervalRTree.prototype, {\n\tbuildTree: function () {\n\t\tCollections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n\t\tvar src = this._leaves;\n\t\tvar temp = null;\n\t\tvar dest = new ArrayList();\n\t\twhile (true) {\n\t\t\tthis.buildLevel(src, dest);\n\t\t\tif (dest.size() === 1) return dest.get(0);\n\t\t\ttemp = src;\n\t\t\tsrc = dest;\n\t\t\tdest = temp;\n\t\t}\n\t},\n\tinsert: function (min, max, item) {\n\t\tif (this._root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\n\t\tthis._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n\t},\n\tquery: function (min, max, visitor) {\n\t\tthis.init();\n\t\tthis._root.query(min, max, visitor);\n\t},\n\tbuildRoot: function () {\n\t\tif (this._root !== null) return null;\n\t\tthis._root = this.buildTree();\n\t},\n\tprintNode: function (node) {\n\t\tSystem.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n\t},\n\tinit: function () {\n\t\tif (this._root !== null) return null;\n\t\tthis.buildRoot();\n\t},\n\tbuildLevel: function (src, dest) {\n\t\tthis._level++;\n\t\tdest.clear();\n\t\tfor (var i = 0; i < src.size(); i += 2) {\n\t\t\tvar n1 = src.get(i);\n\t\t\tvar n2 = i + 1 < src.size() ? src.get(i) : null;\n\t\t\tif (n2 === null) {\n\t\t\t\tdest.add(n1);\n\t\t\t} else {\n\t\t\t\tvar node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n\t\t\t\tdest.add(node);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SortedPackedIntervalRTree;\n\t}\n});\n","import LineString from '../LineString';\nimport Geometry from '../Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport GeometryComponentFilter from '../GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function LinearComponentExtracter() {\n\tthis._lines = null;\n\tthis._isForcedToLineString = false;\n\tif (arguments.length === 1) {\n\t\tlet lines = arguments[0];\n\t\tthis._lines = lines;\n\t} else if (arguments.length === 2) {\n\t\tlet lines = arguments[0], isForcedToLineString = arguments[1];\n\t\tthis._lines = lines;\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t}\n}\nextend(LinearComponentExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (this._isForcedToLineString && geom instanceof LinearRing) {\n\t\t\tvar line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n\t\t\tthis._lines.add(line);\n\t\t\treturn null;\n\t\t}\n\t\tif (geom instanceof LineString) this._lines.add(geom);\n\t},\n\tsetForceToLineString: function (isForcedToLineString) {\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LinearComponentExtracter;\n\t}\n});\nLinearComponentExtracter.getGeometry = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString));\n\t}\n};\nLinearComponentExtracter.getLines = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn LinearComponentExtracter.getLines(geom, false);\n\t} else if (arguments.length === 2) {\n\t\tif (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\tlet geoms = arguments[0], lines = arguments[1];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\n\t\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\t\tvar lines = new ArrayList();\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\tlet geom = arguments[0], lines = arguments[1];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tlines.add(geom);\n\t\t\t} else {\n\t\t\t\tgeom.apply(new LinearComponentExtracter(lines));\n\t\t\t}\n\t\t\treturn lines;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n\t\t\tlet geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines, forceToLineString);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n\t\t\tlet geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t}\n\t}\n};\n","import ItemVisitor from './ItemVisitor';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function ArrayListVisitor() {\n\tthis._items = new ArrayList();\n}\nextend(ArrayListVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tthis._items.add(item);\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn ArrayListVisitor;\n\t}\n});\n","import hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport ItemVisitor from '../../index/ItemVisitor';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree';\nimport LineSegment from '../../geom/LineSegment';\nimport Polygonal from '../../geom/Polygonal';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport ArrayListVisitor from '../../index/ArrayListVisitor';\nimport RayCrossingCounter from '../RayCrossingCounter';\nexport default function IndexedPointInAreaLocator() {\n\tthis._index = null;\n\tlet g = arguments[0];\n\tif (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException(\"Argument must be Polygonal or LinearRing\");\n\tthis._index = new IntervalIndexedGeometry(g);\n}\nextend(IndexedPointInAreaLocator.prototype, {\n\tlocate: function (p) {\n\t\tvar rcc = new RayCrossingCounter(p);\n\t\tvar visitor = new SegmentVisitor(rcc);\n\t\tthis._index.query(p.y, p.y, visitor);\n\t\treturn rcc.getLocation();\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function () {\n\t\treturn IndexedPointInAreaLocator;\n\t}\n});\nfunction SegmentVisitor() {\n\tthis._counter = null;\n\tlet counter = arguments[0];\n\tthis._counter = counter;\n}\nextend(SegmentVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tvar seg = item;\n\t\tthis._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentVisitor;\n\t}\n});\nfunction IntervalIndexedGeometry() {\n\tthis._index = new SortedPackedIntervalRTree();\n\tlet geom = arguments[0];\n\tthis.init(geom);\n}\nextend(IntervalIndexedGeometry.prototype, {\n\tinit: function (geom) {\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar line = i.next();\n\t\t\tvar pts = line.getCoordinates();\n\t\t\tthis.addLine(pts);\n\t\t}\n\t},\n\taddLine: function (pts) {\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tvar seg = new LineSegment(pts[i - 1], pts[i]);\n\t\t\tvar min = Math.min(seg.p0.y, seg.p1.y);\n\t\t\tvar max = Math.max(seg.p0.y, seg.p1.y);\n\t\t\tthis._index.insert(min, max, seg);\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis._index.query(min, max, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet min = arguments[0], max = arguments[1], visitor = arguments[2];\n\t\t\tthis._index.query(min, max, visitor);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalIndexedGeometry;\n\t}\n});\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function EdgeIntersection() {\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.dist = null;\n\tlet coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2];\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.dist = dist;\n}\nextend(EdgeIntersection.prototype, {\n\tgetSegmentIndex: function () {\n\t\treturn this.segmentIndex;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.coord;\n\t},\n\tprint: function (out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t\tout.println(\" dist = \" + this.dist);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\treturn this.compare(other.segmentIndex, other.dist);\n\t},\n\tisEndPoint: function (maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && this.dist === 0.0) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\ttoString: function () {\n\t\treturn this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n\t},\n\tgetDistance: function () {\n\t\treturn this.dist;\n\t},\n\tcompare: function (segmentIndex, dist) {\n\t\tif (this.segmentIndex < segmentIndex) return -1;\n\t\tif (this.segmentIndex > segmentIndex) return 1;\n\t\tif (this.dist < dist) return -1;\n\t\tif (this.dist > dist) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeIntersection;\n\t}\n});\n","import EdgeIntersection from './EdgeIntersection';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport Edge from './Edge';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeIntersectionList() {\n\tthis._nodeMap = new TreeMap();\n\tthis.edge = null;\n\tlet edge = arguments[0];\n\tthis.edge = edge;\n}\nextend(EdgeIntersectionList.prototype, {\n\tprint: function (out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function (edgeList) {\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\taddEndpoints: function () {\n\t\tvar maxSegIndex = this.edge.pts.length - 1;\n\t\tthis.add(this.edge.pts[0], 0, 0.0);\n\t\tthis.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n\t},\n\tcreateSplitEdge: function (ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n\t\tvar useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.pts[i];\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = ei1.coord;\n\t\treturn new Edge(pts, new Label(this.edge._label));\n\t},\n\tadd: function (intPt, segmentIndex, dist) {\n\t\tvar eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tisIntersection: function (pt) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tif (ei.coord.equals(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeIntersectionList;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../Quadrant';\nexport default function MonotoneChainIndexer() {}\nextend(MonotoneChainIndexer.prototype, {\n\tgetChainStartIndices: function (pts) {\n\t\tvar start = 0;\n\t\tvar startIndexList = new ArrayList();\n\t\tstartIndexList.add(new Integer(start));\n\t\tdo {\n\t\t\tvar last = this.findChainEnd(pts, start);\n\t\t\tstartIndexList.add(new Integer(last));\n\t\t\tstart = last;\n\t\t} while (start < pts.length - 1);\n\t\tvar startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n\t\treturn startIndex;\n\t},\n\tfindChainEnd: function (pts, start) {\n\t\tvar chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n\t\tvar last = start + 1;\n\t\twhile (last < pts.length) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t\tlast++;\n\t\t}\n\t\treturn last - 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainIndexer;\n\t}\n});\nMonotoneChainIndexer.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n","import extend from '../../../../../extend';\nimport MonotoneChainIndexer from './MonotoneChainIndexer';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChainEdge() {\n\tthis.e = null;\n\tthis.pts = null;\n\tthis.startIndex = null;\n\tlet e = arguments[0];\n\tthis.e = e;\n\tthis.pts = e.getCoordinates();\n\tvar mcb = new MonotoneChainIndexer();\n\tthis.startIndex = mcb.getChainStartIndices(this.pts);\n}\nextend(MonotoneChainEdge.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tgetMaxX: function (chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 > x2 ? x1 : x2;\n\t},\n\tgetMinX: function (chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 < x2 ? x1 : x2;\n\t},\n\tcomputeIntersectsForChain: function () {\n\t\tif (arguments.length === 4) {\n\t\t\tlet chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3];\n\t\t\tthis.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tei.addIntersections(this.e, start0, mce.e, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!this.overlaps(start0, end0, mce, start1, end1)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t}\n\t},\n\toverlaps: function (start0, end0, mce, start1, end1) {\n\t\treturn Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1]);\n\t},\n\tgetStartIndexes: function () {\n\t\treturn this.startIndex;\n\t},\n\tcomputeIntersects: function (mce, si) {\n\t\tfor (var i = 0; i < this.startIndex.length - 1; i++) {\n\t\t\tfor (var j = 0; j < mce.startIndex.length - 1; j++) {\n\t\t\t\tthis.computeIntersectsForChain(i, mce, j, si);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainEdge;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nexport default function Depth() {\n\tthis._depth = Array(2).fill().map(() => Array(3));\n\tfor (var i = 0; i < 2; i++) {\n\t\tfor (var j = 0; j < 3; j++) {\n\t\t\tthis._depth[i][j] = Depth.NULL_VALUE;\n\t\t}\n\t}\n}\nextend(Depth.prototype, {\n\tgetDepth: function (geomIndex, posIndex) {\n\t\treturn this._depth[geomIndex][posIndex];\n\t},\n\tsetDepth: function (geomIndex, posIndex, depthValue) {\n\t\tthis._depth[geomIndex][posIndex] = depthValue;\n\t},\n\tisNull: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\tif (this._depth[i][j] !== Depth.NULL_VALUE) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this._depth[geomIndex][1] === Depth.NULL_VALUE;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this._depth[geomIndex][posIndex] === Depth.NULL_VALUE;\n\t\t}\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!this.isNull(i)) {\n\t\t\t\tvar minDepth = this._depth[i][1];\n\t\t\t\tif (this._depth[i][2] < minDepth) minDepth = this._depth[i][2];\n\t\t\t\tif (minDepth < 0) minDepth = 0;\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar newValue = 0;\n\t\t\t\t\tif (this._depth[i][j] > minDepth) newValue = 1;\n\t\t\t\t\tthis._depth[i][j] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDelta: function (geomIndex) {\n\t\treturn this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT];\n\t},\n\tgetLocation: function (geomIndex, posIndex) {\n\t\tif (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\n\t\treturn Location.INTERIOR;\n\t},\n\ttoString: function () {\n\t\treturn \"A: \" + this._depth[0][1] + \",\" + this._depth[0][2] + \" B: \" + this._depth[1][1] + \",\" + this._depth[1][2];\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar loc = lbl.getLocation(i, j);\n\t\t\t\t\tif (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n\t\t\t\t\t\tif (this.isNull(i, j)) {\n\t\t\t\t\t\t\tthis._depth[i][j] = Depth.depthAtLocation(loc);\n\t\t\t\t\t\t} else this._depth[i][j] += Depth.depthAtLocation(loc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tif (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Depth;\n\t}\n});\nDepth.depthAtLocation = function (location) {\n\tif (location === Location.EXTERIOR) return 0;\n\tif (location === Location.INTERIOR) return 1;\n\treturn Depth.NULL_VALUE;\n};\nDepth.NULL_VALUE = -1;\n","import extend from '../../../../extend';\nimport Assert from '../util/Assert';\nexport default function GraphComponent() {\n\tthis._label = null;\n\tthis._isInResult = false;\n\tthis._isCovered = false;\n\tthis._isCoveredSet = false;\n\tthis._isVisited = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet label = arguments[0];\n\t\tthis._label = label;\n\t}\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tsetInResult: function (isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tisCovered: function () {\n\t\treturn this._isCovered;\n\t},\n\tisCoveredSet: function () {\n\t\treturn this._isCoveredSet;\n\t},\n\tsetLabel: function (label) {\n\t\tthis._label = label;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tsetCovered: function (isCovered) {\n\t\tthis._isCovered = isCovered;\n\t\tthis._isCoveredSet = true;\n\t},\n\tupdateIM: function (im) {\n\t\tAssert.isTrue(this._label.getGeometryCount() >= 2, \"found partial label\");\n\t\tthis.computeIM(im);\n\t},\n\tisInResult: function () {\n\t\treturn this._isInResult;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GraphComponent;\n\t}\n});\n","import EdgeIntersectionList from './EdgeIntersectionList';\nimport IntersectionMatrix from '../geom/IntersectionMatrix';\nimport MonotoneChainEdge from './index/MonotoneChainEdge';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nimport Depth from './Depth';\nimport GraphComponent from './GraphComponent';\nexport default function Edge() {\n\tGraphComponent.apply(this);\n\tthis.pts = null;\n\tthis._env = null;\n\tthis.eiList = new EdgeIntersectionList(this);\n\tthis._name = null;\n\tthis._mce = null;\n\tthis._isIsolated = true;\n\tthis._depth = new Depth();\n\tthis._depthDelta = 0;\n\tif (arguments.length === 1) {\n\t\tlet pts = arguments[0];\n\t\tEdge.call(this, pts, null);\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], label = arguments[1];\n\t\tthis.pts = pts;\n\t\tthis._label = label;\n\t}\n}\ninherits(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tgetDepth: function () {\n\t\treturn this._depth;\n\t},\n\tgetCollapsedEdge: function () {\n\t\tvar newPts = new Array(2).fill(null);\n\t\tnewPts[0] = this.pts[0];\n\t\tnewPts[1] = this.pts[1];\n\t\tvar newe = new Edge(newPts, Label.toLineLabel(this._label));\n\t\treturn newe;\n\t},\n\tisIsolated: function () {\n\t\treturn this._isIsolated;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tsetIsolated: function (isIsolated) {\n\t\tthis._isIsolated = isIsolated;\n\t},\n\tsetName: function (name) {\n\t\tthis._name = name;\n\t},\n\tequals: function (o) {\n\t\tif (!(o instanceof Edge)) return false;\n\t\tvar e = o;\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tvar isEqualForward = true;\n\t\tvar isEqualReverse = true;\n\t\tvar iRev = this.pts.length;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\tisEqualForward = false;\n\t\t\t}\n\t\t\tif (!this.pts[i].equals2D(e.pts[-- iRev])) {\n\t\t\t\tisEqualReverse = false;\n\t\t\t}\n\t\t\tif (!isEqualForward && !isEqualReverse) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.pts.length > 0) return this.pts[0];\n\t\t\treturn null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this.pts[i];\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tout.print(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) out.print(\",\");\n\t\t\tout.print(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tout.print(\")  \" + this._label + \" \" + this._depthDelta);\n\t},\n\tcomputeIM: function (im) {\n\t\tEdge.updateIM(this._label, im);\n\t},\n\tisCollapsed: function () {\n\t\tif (!this._label.isArea()) return false;\n\t\tif (this.pts.length !== 3) return false;\n\t\tif (this.pts[0].equals(this.pts[2])) return true;\n\t\treturn false;\n\t},\n\tisClosed: function () {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetMaximumSegmentIndex: function () {\n\t\treturn this.pts.length - 1;\n\t},\n\tgetDepthDelta: function () {\n\t\treturn this._depthDelta;\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.pts.length;\n\t},\n\tprintReverse: function (out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tfor (var i = this.pts.length - 1; i >= 0; i--) {\n\t\t\tout.print(this.pts[i] + \" \");\n\t\t}\n\t\tout.println(\"\");\n\t},\n\tgetMonotoneChainEdge: function () {\n\t\tif (this._mce === null) this._mce = new MonotoneChainEdge(this);\n\t\treturn this._mce;\n\t},\n\tgetEnvelope: function () {\n\t\tif (this._env === null) {\n\t\t\tthis._env = new Envelope();\n\t\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\t\tthis._env.expandToInclude(this.pts[i]);\n\t\t\t}\n\t\t}\n\t\treturn this._env;\n\t},\n\taddIntersection: function (li, segmentIndex, geomIndex, intIndex) {\n\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar dist = li.getEdgeDistance(geomIndex, intIndex);\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t\tdist = 0.0;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\n\t},\n\ttoString: function () {\n\t\tvar builder = new StringBuilder();\n\t\tbuilder.append(\"edge \" + this._name + \": \");\n\t\tbuilder.append(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) builder.append(\",\");\n\t\t\tbuilder.append(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tbuilder.append(\")  \" + this._label + \" \" + this._depthDelta);\n\t\treturn builder.toString();\n\t},\n\tisPointwiseEqual: function (e) {\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsetDepthDelta: function (depthDelta) {\n\t\tthis._depthDelta = depthDelta;\n\t},\n\tgetEdgeIntersectionList: function () {\n\t\treturn this.eiList;\n\t},\n\taddIntersections: function (li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Edge;\n\t}\n});\nEdge.updateIM = function () {\n\tif (arguments.length === 2 && (arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label)) {\n\t\tlet label = arguments[0], im = arguments[1];\n\t\tim.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n\t\tif (label.isArea()) {\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n\t\t}\n\t} else return GraphComponent.prototype.updateIM.apply(this, arguments);\n};\n","import Location from '../geom/Location';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Node() {\n\tGraphComponent.apply(this);\n\tthis._coord = null;\n\tthis._edges = null;\n\tlet coord = arguments[0], edges = arguments[1];\n\tthis._coord = coord;\n\tthis._edges = edges;\n\tthis._label = new Label(0, Location.NONE);\n}\ninherits(Node, GraphComponent);\nextend(Node.prototype, {\n\tisIncidentEdgeInResult: function () {\n\t\tfor (var it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getEdge().isInResult()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisIsolated: function () {\n\t\treturn this._label.getGeometryCount() === 1;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._coord;\n\t},\n\tprint: function (out) {\n\t\tout.println(\"node \" + this._coord + \" lbl: \" + this._label);\n\t},\n\tcomputeIM: function (im) {},\n\tcomputeMergedLocation: function (label2, eltIndex) {\n\t\tvar loc = Location.NONE;\n\t\tloc = this._label.getLocation(eltIndex);\n\t\tif (!label2.isNull(eltIndex)) {\n\t\t\tvar nLoc = label2.getLocation(eltIndex);\n\t\t\tif (loc !== Location.BOUNDARY) loc = nLoc;\n\t\t}\n\t\treturn loc;\n\t},\n\tsetLabel: function () {\n\t\tif (arguments.length === 2 && (Number.isInteger(arguments[1]) && Number.isInteger(arguments[0]))) {\n\t\t\tlet argIndex = arguments[0], onLocation = arguments[1];\n\t\t\tif (this._label === null) {\n\t\t\t\tthis._label = new Label(argIndex, onLocation);\n\t\t\t} else this._label.setLocation(argIndex, onLocation);\n\t\t} else return GraphComponent.prototype.setLabel.apply(this, arguments);\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tmergeLabel: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tthis.mergeLabel(n._label);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet label2 = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar loc = this.computeMergedLocation(label2, i);\n\t\t\t\tvar thisLoc = this._label.getLocation(i);\n\t\t\t\tif (thisLoc === Location.NONE) this._label.setLocation(i, loc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function (e) {\n\t\tthis._edges.insert(e);\n\t\te.setNode(this);\n\t},\n\tsetLabelBoundary: function (argIndex) {\n\t\tif (this._label === null) return null;\n\t\tvar loc = Location.NONE;\n\t\tif (this._label !== null) loc = this._label.getLocation(argIndex);\n\t\tvar newLoc = null;\n\t\tswitch (loc) {\n\t\t\tcase Location.BOUNDARY:\n\t\t\t\tnewLoc = Location.INTERIOR;\n\t\t\t\tbreak;\n\t\t\tcase Location.INTERIOR:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._label.setLocation(argIndex, newLoc);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\n","import Location from '../geom/Location';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function NodeMap() {\n\tthis.nodeMap = new TreeMap();\n\tthis.nodeFact = null;\n\tlet nodeFact = arguments[0];\n\tthis.nodeFact = nodeFact;\n}\nextend(NodeMap.prototype, {\n\tfind: function (coord) {\n\t\treturn this.nodeMap.get(coord);\n\t},\n\taddNode: function () {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tvar node = this.nodeMap.get(coord);\n\t\t\tif (node === null) {\n\t\t\t\tnode = this.nodeFact.createNode(coord);\n\t\t\t\tthis.nodeMap.put(coord, node);\n\t\t\t}\n\t\t\treturn node;\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tvar node = this.nodeMap.get(n.getCoordinate());\n\t\t\tif (node === null) {\n\t\t\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tnode.mergeLabel(n);\n\t\t\treturn node;\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar n = it.next();\n\t\t\tn.print(out);\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\tvalues: function () {\n\t\treturn this.nodeMap.values();\n\t},\n\tgetBoundaryNodes: function (geomIndex) {\n\t\tvar bdyNodes = new ArrayList();\n\t\tfor (var i = this.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\n\t\t}\n\t\treturn bdyNodes;\n\t},\n\tadd: function (e) {\n\t\tvar p = e.getCoordinate();\n\t\tvar n = this.addNode(p);\n\t\tn.add(e);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeMap;\n\t}\n});\n","import extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nexport default function EdgeEnd() {\n\tthis._edge = null;\n\tthis._label = null;\n\tthis._node = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._dx = null;\n\tthis._dy = null;\n\tthis._quadrant = null;\n\tif (arguments.length === 1) {\n\t\tlet edge = arguments[0];\n\t\tthis._edge = edge;\n\t} else if (arguments.length === 3) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\tEdgeEnd.call(this, edge, p0, p1, null);\n\t} else if (arguments.length === 4) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3];\n\t\tEdgeEnd.call(this, edge);\n\t\tthis.init(p0, p1);\n\t\tthis._label = label;\n\t}\n}\nextend(EdgeEnd.prototype, {\n\tcompareDirection: function (e) {\n\t\tif (this._dx === e._dx && this._dy === e._dy) return 0;\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn Orientation.index(e._p0, e._p1, this._p1);\n\t},\n\tgetDy: function () {\n\t\treturn this._dy;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._p0;\n\t},\n\tsetNode: function (node) {\n\t\tthis._node = node;\n\t},\n\tprint: function (out) {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar e = obj;\n\t\treturn this.compareDirection(e);\n\t},\n\tgetDirectedCoordinate: function () {\n\t\treturn this._p1;\n\t},\n\tgetDx: function () {\n\t\treturn this._dx;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tgetEdge: function () {\n\t\treturn this._edge;\n\t},\n\tgetQuadrant: function () {\n\t\treturn this._quadrant;\n\t},\n\tgetNode: function () {\n\t\treturn this._node;\n\t},\n\ttoString: function () {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\treturn \"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label;\n\t},\n\tcomputeLabel: function (boundaryNodeRule) {},\n\tinit: function (p0, p1) {\n\t\tthis._p0 = p0;\n\t\tthis._p1 = p1;\n\t\tthis._dx = p1.x - p0.x;\n\t\tthis._dy = p1.y - p0.y;\n\t\tthis._quadrant = Quadrant.quadrant(this._dx, this._dy);\n\t\tAssert.isTrue(!(this._dx === 0 && this._dy === 0), \"EdgeEnd with identical endpoints found\");\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEnd;\n\t}\n});\n","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport inherits from '../../../../inherits';\nexport default function TopologyException() {\n\tthis.pt = null;\n\tif (arguments.length === 1) {\n\t\tlet msg = arguments[0];\n\t\tRuntimeException.call(this, msg);\n\t} else if (arguments.length === 2) {\n\t\tlet msg = arguments[0], pt = arguments[1];\n\t\tRuntimeException.call(this, TopologyException.msgWithCoord(msg, pt));\n\t\tthis.name = 'TopologyException';\n\t\tthis.pt = new Coordinate(pt);\n\t}\n}\ninherits(TopologyException, RuntimeException);\nextend(TopologyException.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyException;\n\t}\n});\nTopologyException.msgWithCoord = function (msg, pt) {\n\tif (pt !== null) return msg + \" [ \" + pt + \" ]\";\n\treturn msg;\n};\n","import Location from '../geom/Location';\nimport EdgeEnd from './EdgeEnd';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport inherits from '../../../../inherits';\nexport default function DirectedEdge() {\n\tthis._isForward = null;\n\tthis._isInResult = false;\n\tthis._isVisited = false;\n\tthis._sym = null;\n\tthis._next = null;\n\tthis._nextMin = null;\n\tthis._edgeRing = null;\n\tthis._minEdgeRing = null;\n\tthis._depth = [0, -999, -999];\n\tlet edge = arguments[0], isForward = arguments[1];\n\tEdgeEnd.call(this, edge);\n\tthis._isForward = isForward;\n\tif (isForward) {\n\t\tthis.init(edge.getCoordinate(0), edge.getCoordinate(1));\n\t} else {\n\t\tvar n = edge.getNumPoints() - 1;\n\t\tthis.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n\t}\n\tthis.computeDirectedLabel();\n}\ninherits(DirectedEdge, EdgeEnd);\nextend(DirectedEdge.prototype, {\n\tgetNextMin: function () {\n\t\treturn this._nextMin;\n\t},\n\tgetDepth: function (position) {\n\t\treturn this._depth[position];\n\t},\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tcomputeDirectedLabel: function () {\n\t\tthis._label = new Label(this._edge.getLabel());\n\t\tif (!this._isForward) this._label.flip();\n\t},\n\tgetNext: function () {\n\t\treturn this._next;\n\t},\n\tsetDepth: function (position, depthVal) {\n\t\tif (this._depth[position] !== -999) {\n\t\t\tif (this._depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\n\t\t}\n\t\tthis._depth[position] = depthVal;\n\t},\n\tisInteriorAreaEdge: function () {\n\t\tvar isInteriorAreaEdge = true;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n\t\t\t\tisInteriorAreaEdge = false;\n\t\t\t}\n\t\t}\n\t\treturn isInteriorAreaEdge;\n\t},\n\tsetNextMin: function (nextMin) {\n\t\tthis._nextMin = nextMin;\n\t},\n\tprint: function (out) {\n\t\tEdgeEnd.prototype.print.call(this, out);\n\t\tout.print(\" \" + this._depth[Position.LEFT] + \"/\" + this._depth[Position.RIGHT]);\n\t\tout.print(\" (\" + this.getDepthDelta() + \")\");\n\t\tif (this._isInResult) out.print(\" inResult\");\n\t},\n\tsetMinEdgeRing: function (minEdgeRing) {\n\t\tthis._minEdgeRing = minEdgeRing;\n\t},\n\tisLineEdge: function () {\n\t\tvar isLine = this._label.isLine(0) || this._label.isLine(1);\n\t\tvar isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n\t\tvar isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n\t\treturn isLine && isExteriorIfArea0 && isExteriorIfArea1;\n\t},\n\tsetEdgeRing: function (edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t},\n\tgetMinEdgeRing: function () {\n\t\treturn this._minEdgeRing;\n\t},\n\tgetDepthDelta: function () {\n\t\tvar depthDelta = this._edge.getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\treturn depthDelta;\n\t},\n\tsetInResult: function (isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tgetSym: function () {\n\t\treturn this._sym;\n\t},\n\tisForward: function () {\n\t\treturn this._isForward;\n\t},\n\tgetEdge: function () {\n\t\treturn this._edge;\n\t},\n\tprintEdge: function (out) {\n\t\tthis.print(out);\n\t\tout.print(\" \");\n\t\tif (this._isForward) this._edge.print(out); else this._edge.printReverse(out);\n\t},\n\tsetSym: function (de) {\n\t\tthis._sym = de;\n\t},\n\tsetVisitedEdge: function (isVisited) {\n\t\tthis.setVisited(isVisited);\n\t\tthis._sym.setVisited(isVisited);\n\t},\n\tsetEdgeDepths: function (position, depth) {\n\t\tvar depthDelta = this.getEdge().getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\tvar directionFactor = 1;\n\t\tif (position === Position.LEFT) directionFactor = -1;\n\t\tvar oppositePos = Position.opposite(position);\n\t\tvar delta = depthDelta * directionFactor;\n\t\tvar oppositeDepth = depth + delta;\n\t\tthis.setDepth(position, depth);\n\t\tthis.setDepth(oppositePos, oppositeDepth);\n\t},\n\tgetEdgeRing: function () {\n\t\treturn this._edgeRing;\n\t},\n\tisInResult: function () {\n\t\treturn this._isInResult;\n\t},\n\tsetNext: function (next) {\n\t\tthis._next = next;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.depthFactor = function (currLocation, nextLocation) {\n\tif (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\n\treturn 0;\n};\n","import Node from './Node';\nimport extend from '../../../../extend';\nexport default function NodeFactory() {}\nextend(NodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new Node(coord, null);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeFactory;\n\t}\n});\n","import Location from '../geom/Location';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport NodeMap from './NodeMap';\nimport Orientation from '../algorithm/Orientation';\nimport DirectedEdge from './DirectedEdge';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport NodeFactory from './NodeFactory';\nexport default function PlanarGraph() {\n\tthis._edges = new ArrayList();\n\tthis._nodes = null;\n\tthis._edgeEndList = new ArrayList();\n\tif (arguments.length === 0) {\n\t\tthis._nodes = new NodeMap(new NodeFactory());\n\t} else if (arguments.length === 1) {\n\t\tlet nodeFact = arguments[0];\n\t\tthis._nodes = new NodeMap(nodeFact);\n\t}\n}\nextend(PlanarGraph.prototype, {\n\tprintEdges: function (out) {\n\t\tout.println(\"Edges:\");\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tout.println(\"edge \" + i + \":\");\n\t\t\tvar e = this._edges.get(i);\n\t\t\te.print(out);\n\t\t\te.eiList.print(out);\n\t\t}\n\t},\n\tfind: function (coord) {\n\t\treturn this._nodes.find(coord);\n\t},\n\taddNode: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\treturn this._nodes.addNode(node);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\treturn this._nodes.addNode(coord);\n\t\t}\n\t},\n\tgetNodeIterator: function () {\n\t\treturn this._nodes.iterator();\n\t},\n\tlinkResultDirectedEdges: function () {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkResultDirectedEdges();\n\t\t}\n\t},\n\tdebugPrintln: function (o) {\n\t\tSystem.out.println(o);\n\t},\n\tisBoundaryNode: function (geomIndex, coord) {\n\t\tvar node = this._nodes.find(coord);\n\t\tif (node === null) return false;\n\t\tvar label = node.getLabel();\n\t\tif (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\n\t\treturn false;\n\t},\n\tlinkAllDirectedEdges: function () {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkAllDirectedEdges();\n\t\t}\n\t},\n\tmatchInSameDirection: function (p0, p1, ep0, ep1) {\n\t\tif (!p0.equals(ep0)) return false;\n\t\tif (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\n\t\treturn false;\n\t},\n\tgetEdgeEnds: function () {\n\t\treturn this._edgeEndList;\n\t},\n\tdebugPrint: function (o) {\n\t\tSystem.out.print(o);\n\t},\n\tgetEdgeIterator: function () {\n\t\treturn this._edges.iterator();\n\t},\n\tfindEdgeInSameDirection: function (p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinsertEdge: function (e) {\n\t\tthis._edges.add(e);\n\t},\n\tfindEdgeEnd: function (e) {\n\t\tfor (var i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\n\t\t\tvar ee = i.next();\n\t\t\tif (ee.getEdge() === e) return ee;\n\t\t}\n\t\treturn null;\n\t},\n\taddEdges: function (edgesToAdd) {\n\t\tfor (var it = edgesToAdd.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tthis._edges.add(e);\n\t\t\tvar de1 = new DirectedEdge(e, true);\n\t\t\tvar de2 = new DirectedEdge(e, false);\n\t\t\tde1.setSym(de2);\n\t\t\tde2.setSym(de1);\n\t\t\tthis.add(de1);\n\t\t\tthis.add(de2);\n\t\t}\n\t},\n\tadd: function (e) {\n\t\tthis._nodes.add(e);\n\t\tthis._edgeEndList.add(e);\n\t},\n\tgetNodes: function () {\n\t\treturn this._nodes.values();\n\t},\n\tfindEdge: function (p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PlanarGraph;\n\t}\n});\nPlanarGraph.linkResultDirectedEdges = function (nodes) {\n\tfor (var nodeit = nodes.iterator(); nodeit.hasNext(); ) {\n\t\tvar node = nodeit.next();\n\t\tnode.getEdges().linkResultDirectedEdges();\n\t}\n};\n","import PointLocator from '../algorithm/PointLocator';\nimport Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport MultiPoint from '../geom/MultiPoint';\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector';\nimport LinearRing from '../geom/LinearRing';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport SegmentIntersector from './index/SegmentIntersector';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport Label from './Label';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Polygonal from '../geom/Polygonal';\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator';\nimport Assert from '../util/Assert';\nimport Edge from './Edge';\nimport inherits from '../../../../inherits';\nimport MultiLineString from '../geom/MultiLineString';\nimport PlanarGraph from './PlanarGraph';\nexport default function GeometryGraph() {\n\tPlanarGraph.apply(this);\n\tthis._parentGeom = null;\n\tthis._lineEdgeMap = new HashMap();\n\tthis._boundaryNodeRule = null;\n\tthis._useBoundaryDeterminationRule = true;\n\tthis._argIndex = null;\n\tthis._boundaryNodes = null;\n\tthis._hasTooFewPoints = false;\n\tthis._invalidPoint = null;\n\tthis._areaPtLocator = null;\n\tthis._ptLocator = new PointLocator();\n\tif (arguments.length === 2) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1];\n\t\tGeometryGraph.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2];\n\t\tthis._argIndex = argIndex;\n\t\tthis._parentGeom = parentGeom;\n\t\tthis._boundaryNodeRule = boundaryNodeRule;\n\t\tif (parentGeom !== null) {\n\t\t\tthis.add(parentGeom);\n\t\t}\n\t}\n}\ninherits(GeometryGraph, PlanarGraph);\nextend(GeometryGraph.prototype, {\n\tinsertBoundaryPoint: function (argIndex, coord) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tvar boundaryCount = 1;\n\t\tvar loc = Location.NONE;\n\t\tloc = lbl.getLocation(argIndex, Position.ON);\n\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\tvar newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n\t\tlbl.setLocation(argIndex, newLoc);\n\t},\n\tcomputeSelfNodes: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1];\n\t\t\treturn this.computeSelfNodes(li, computeRingSelfNodes, false);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2];\n\t\t\tvar si = new SegmentIntersector(li, true, false);\n\t\t\tsi.setIsDoneIfProperInt(isDoneIfProperInt);\n\t\t\tvar esi = this.createEdgeSetIntersector();\n\t\t\tvar isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n\t\t\tvar computeAllSegments = computeRingSelfNodes || !isRings;\n\t\t\tesi.computeIntersections(this._edges, si, computeAllSegments);\n\t\t\tthis.addSelfIntersectionNodes(this._argIndex);\n\t\t\treturn si;\n\t\t}\n\t},\n\tcomputeSplitEdges: function (edgelist) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\te.eiList.addSplitEdges(edgelist);\n\t\t}\n\t},\n\tcomputeEdgeIntersections: function (g, li, includeProper) {\n\t\tvar si = new SegmentIntersector(li, includeProper, true);\n\t\tsi.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n\t\tvar esi = this.createEdgeSetIntersector();\n\t\tesi.computeIntersections(this._edges, g._edges, si);\n\t\treturn si;\n\t},\n\tgetGeometry: function () {\n\t\treturn this._parentGeom;\n\t},\n\tgetBoundaryNodeRule: function () {\n\t\treturn this._boundaryNodeRule;\n\t},\n\thasTooFewPoints: function () {\n\t\treturn this._hasTooFewPoints;\n\t},\n\taddPoint: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar coord = p.getCoordinate();\n\t\t\tthis.insertPoint(this._argIndex, coord, Location.INTERIOR);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\tthis.insertPoint(this._argIndex, pt, Location.INTERIOR);\n\t\t}\n\t},\n\taddPolygon: function (p) {\n\t\tthis.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tthis.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\taddEdge: function (e) {\n\t\tthis.insertEdge(e);\n\t\tvar coord = e.getCoordinates();\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t\tthis.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n\t},\n\taddLineString: function (line) {\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (coord.length < 2) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n\t\tthis._lineEdgeMap.put(line, e);\n\t\tthis.insertEdge(e);\n\t\tAssert.isTrue(coord.length >= 2, \"found LineString with single point\");\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[0]);\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n\t},\n\tgetInvalidPoint: function () {\n\t\treturn this._invalidPoint;\n\t},\n\tgetBoundaryPoints: function () {\n\t\tvar coll = this.getBoundaryNodes();\n\t\tvar pts = new Array(coll.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = coll.iterator(); it.hasNext(); ) {\n\t\t\tvar node = it.next();\n\t\t\tpts[i++] = node.getCoordinate().copy();\n\t\t}\n\t\treturn pts;\n\t},\n\tgetBoundaryNodes: function () {\n\t\tif (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex);\n\t\treturn this._boundaryNodes;\n\t},\n\taddSelfIntersectionNode: function (argIndex, coord, loc) {\n\t\tif (this.isBoundaryNode(argIndex, coord)) return null;\n\t\tif (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc);\n\t},\n\taddPolygonRing: function (lr, cwLeft, cwRight) {\n\t\tif (lr.isEmpty()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n\t\tif (coord.length < 4) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar left = cwLeft;\n\t\tvar right = cwRight;\n\t\tif (Orientation.isCCW(coord)) {\n\t\t\tleft = cwRight;\n\t\t\tright = cwLeft;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n\t\tthis._lineEdgeMap.put(lr, e);\n\t\tthis.insertEdge(e);\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t},\n\tinsertPoint: function (argIndex, coord, onLocation) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tif (lbl === null) {\n\t\t\tn._label = new Label(argIndex, onLocation);\n\t\t} else lbl.setLocation(argIndex, onLocation);\n\t},\n\tcreateEdgeSetIntersector: function () {\n\t\treturn new SimpleMCSweepLineIntersector();\n\t},\n\taddSelfIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tthis.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false;\n\t\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t} else return PlanarGraph.prototype.add.apply(this, arguments);\n\t},\n\taddCollection: function (gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tlocate: function (pt) {\n\t\tif (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n\t\t\tif (this._areaPtLocator === null) {\n\t\t\t\tthis._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n\t\t\t}\n\t\t\treturn this._areaPtLocator.locate(pt);\n\t\t}\n\t\treturn this._ptLocator.locate(pt, this._parentGeom);\n\t},\n\tfindEdge: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof LineString) {\n\t\t\tlet line = arguments[0];\n\t\t\treturn this._lineEdgeMap.get(line);\n\t\t} else return PlanarGraph.prototype.findEdge.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryGraph;\n\t}\n});\nGeometryGraph.determineBoundary = function (boundaryNodeRule, boundaryCount) {\n\treturn boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\n};\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function NodeBase() {\n\tthis._items = new ArrayList();\n\tthis._subnode = new Array(4).fill(null);\n}\nextend(NodeBase.prototype, {\n\thasChildren: function () {\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function () {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function (resultItems) {\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItems(resultItems);\n\t\t\t}\n\t\t}\n\t\treturn resultItems;\n\t},\n\tgetNodeCount: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tsize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this._items.size();\n\t},\n\taddAllItemsFromOverlapping: function (searchEnv, resultItems) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\n\t\t\t}\n\t\t}\n\t},\n\tvisitItems: function (searchEnv, visitor) {\n\t\tfor (var i = this._items.iterator(); i.hasNext(); ) {\n\t\t\tvisitor.visitItem(i.next());\n\t\t}\n\t},\n\thasItems: function () {\n\t\treturn !this._items.isEmpty();\n\t},\n\tremove: function (itemEnv, item) {\n\t\tif (!this.isSearchMatch(itemEnv)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tfound = this._subnode[i].remove(itemEnv, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this._subnode[i].isPrunable()) this._subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this._items.remove(item);\n\t\treturn found;\n\t},\n\tvisit: function (searchEnv, visitor) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tthis.visitItems(searchEnv, visitor);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].visit(searchEnv, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tdepth: function () {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tvar sqd = this._subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tisEmpty: function () {\n\t\tvar isEmpty = true;\n\t\tif (!this._items.isEmpty()) isEmpty = false; else {\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\t\tif (!this._subnode[i].isEmpty()) {\n\t\t\t\t\t\tisEmpty = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isEmpty;\n\t},\n\tadd: function (item) {\n\t\tthis._items.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (env, centrex, centrey) {\n\tvar subnodeIndex = -1;\n\tif (env.getMinX() >= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 3;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 1;\n\t}\n\tif (env.getMaxX() <= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 2;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 0;\n\t}\n\treturn subnodeIndex;\n};\n","import Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport DoubleBits from './DoubleBits';\nimport Envelope from '../../geom/Envelope';\nexport default function Key() {\n\tthis._pt = new Coordinate();\n\tthis._level = 0;\n\tthis._env = null;\n\tlet itemEnv = arguments[0];\n\tthis.computeKey(itemEnv);\n}\nextend(Key.prototype, {\n\tgetLevel: function () {\n\t\treturn this._level;\n\t},\n\tcomputeKey: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet itemEnv = arguments[0];\n\t\t\tthis._level = Key.computeQuadLevel(itemEnv);\n\t\t\tthis._env = new Envelope();\n\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\twhile (!this._env.contains(itemEnv)) {\n\t\t\t\tthis._level += 1;\n\t\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet level = arguments[0], itemEnv = arguments[1];\n\t\t\tvar quadSize = DoubleBits.powerOf2(level);\n\t\t\tthis._pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize;\n\t\t\tthis._pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize;\n\t\t\tthis._env.init(this._pt.x, this._pt.x + quadSize, this._pt.y, this._pt.y + quadSize);\n\t\t}\n\t},\n\tgetEnvelope: function () {\n\t\treturn this._env;\n\t},\n\tgetCentre: function () {\n\t\treturn new Coordinate((this._env.getMinX() + this._env.getMaxX()) / 2, (this._env.getMinY() + this._env.getMaxY()) / 2);\n\t},\n\tgetPoint: function () {\n\t\treturn this._pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Key;\n\t}\n});\nKey.computeQuadLevel = function (env) {\n\tvar dx = env.getWidth();\n\tvar dy = env.getHeight();\n\tvar dMax = dx > dy ? dx : dy;\n\tvar level = DoubleBits.exponent(dMax) + 1;\n\treturn level;\n};\n","import NodeBase from './NodeBase';\nimport extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport Key from './Key';\nexport default function Node() {\n\tNodeBase.apply(this);\n\tthis._env = null;\n\tthis._centrex = null;\n\tthis._centrey = null;\n\tthis._level = null;\n\tlet env = arguments[0], level = arguments[1];\n\tthis._env = env;\n\tthis._level = level;\n\tthis._centrex = (env.getMinX() + env.getMaxX()) / 2;\n\tthis._centrey = (env.getMinY() + env.getMaxY()) / 2;\n}\ninherits(Node, NodeBase);\nextend(Node.prototype, {\n\tfind: function (searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this._subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this._subnode[subnodeIndex];\n\t\t\treturn node.find(searchEnv);\n\t\t}\n\t\treturn this;\n\t},\n\tisSearchMatch: function (searchEnv) {\n\t\tif (searchEnv === null) return false;\n\t\treturn this._env.intersects(searchEnv);\n\t},\n\tgetSubnode: function (index) {\n\t\tif (this._subnode[index] === null) {\n\t\t\tthis._subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this._subnode[index];\n\t},\n\tgetEnvelope: function () {\n\t\treturn this._env;\n\t},\n\tgetNode: function (searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchEnv);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function (index) {\n\t\tvar minx = 0.0;\n\t\tvar maxx = 0.0;\n\t\tvar miny = 0.0;\n\t\tvar maxy = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar sqEnv = new Envelope(minx, maxx, miny, maxy);\n\t\tvar node = new Node(sqEnv, this._level - 1);\n\t\treturn node;\n\t},\n\tinsertNode: function (node) {\n\t\tAssert.isTrue(this._env === null || this._env.contains(node._env));\n\t\tvar index = NodeBase.getSubnodeIndex(node._env, this._centrex, this._centrey);\n\t\tif (node._level === this._level - 1) {\n\t\t\tthis._subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insertNode(node);\n\t\t\tthis._subnode[index] = childNode;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.createNode = function (env) {\n\tvar key = new Key(env);\n\tvar node = new Node(key.getEnvelope(), key.getLevel());\n\treturn node;\n};\nNode.createExpanded = function (node, addEnv) {\n\tvar expandEnv = new Envelope(addEnv);\n\tif (node !== null) expandEnv.expandToInclude(node._env);\n\tvar largerNode = Node.createNode(expandEnv);\n\tif (node !== null) largerNode.insertNode(node);\n\treturn largerNode;\n};\n","import Coordinate from '../../geom/Coordinate';\nimport NodeBase from './NodeBase';\nimport Node from './Node';\nimport extend from '../../../../../extend';\nimport IntervalSize from './IntervalSize';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function Root() {\n\tNodeBase.apply(this);\n}\ninherits(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function (itemEnv, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this._subnode[index];\n\t\tif (node === null || !node.getEnvelope().contains(itemEnv)) {\n\t\t\tvar largerNode = Node.createExpanded(node, itemEnv);\n\t\t\tthis._subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this._subnode[index], itemEnv, item);\n\t},\n\tisSearchMatch: function (searchEnv) {\n\t\treturn true;\n\t},\n\tinsertContained: function (tree, itemEnv, item) {\n\t\tAssert.isTrue(tree.getEnvelope().contains(itemEnv));\n\t\tvar isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\n\t\tvar isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\n\t\tvar node = null;\n\t\tif (isZeroX || isZeroY) node = tree.find(itemEnv); else node = tree.getNode(itemEnv);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Root;\n\t}\n});\nRoot.origin = new Coordinate(0.0, 0.0);\n","import extend from '../../../../extend';\nexport default function SpatialIndex() {}\nextend(SpatialIndex.prototype, {\n\tinsert: function (itemEnv, item) {},\n\tremove: function (itemEnv, item) {},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SpatialIndex;\n\t}\n});\n","import Root from './Root';\nimport SpatialIndex from '../SpatialIndex';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport ArrayListVisitor from '../ArrayListVisitor';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nexport default function Quadtree() {\n\tthis._root = null;\n\tthis._minExtent = 1.0;\n\tthis._root = new Root();\n}\nextend(Quadtree.prototype, {\n\tsize: function () {\n\t\tif (this._root !== null) return this._root.size();\n\t\treturn 0;\n\t},\n\tinsert: function (itemEnv, item) {\n\t\tthis.collectStats(itemEnv);\n\t\tvar insertEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\tthis._root.insert(insertEnv, item);\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.query(searchEnv, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tthis._root.visit(searchEnv, visitor);\n\t\t}\n\t},\n\tqueryAll: function () {\n\t\tvar foundItems = new ArrayList();\n\t\tthis._root.addAllItems(foundItems);\n\t\treturn foundItems;\n\t},\n\tremove: function (itemEnv, item) {\n\t\tvar posEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\treturn this._root.remove(posEnv, item);\n\t},\n\tcollectStats: function (itemEnv) {\n\t\tvar delX = itemEnv.getWidth();\n\t\tif (delX < this._minExtent && delX > 0.0) this._minExtent = delX;\n\t\tvar delY = itemEnv.getHeight();\n\t\tif (delY < this._minExtent && delY > 0.0) this._minExtent = delY;\n\t},\n\tdepth: function () {\n\t\tif (this._root !== null) return this._root.depth();\n\t\treturn 0;\n\t},\n\tisEmpty: function () {\n\t\tif (this._root === null) return true;\n\t\treturn this._root.isEmpty();\n\t},\n\tinterfaces_: function () {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Quadtree;\n\t}\n});\nQuadtree.ensureExtent = function (itemEnv, minExtent) {\n\tvar minx = itemEnv.getMinX();\n\tvar maxx = itemEnv.getMaxX();\n\tvar miny = itemEnv.getMinY();\n\tvar maxy = itemEnv.getMaxY();\n\tif (minx !== maxx && miny !== maxy) return itemEnv;\n\tif (minx === maxx) {\n\t\tminx = minx - minExtent / 2.0;\n\t\tmaxx = minx + minExtent / 2.0;\n\t}\n\tif (miny === maxy) {\n\t\tminy = miny - minExtent / 2.0;\n\t\tmaxy = miny + minExtent / 2.0;\n\t}\n\treturn new Envelope(minx, maxx, miny, maxy);\n};\nQuadtree.serialVersionUID = -7461163625812743604;\n","import extend from '../../../../../extend';\nexport default function Boundable() {}\nextend(Boundable.prototype, {\n\tgetBounds: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Boundable;\n\t}\n});\n","import Boundable from './Boundable';\nimport extend from '../../../../../extend';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function ItemBoundable() {\n\tthis._bounds = null;\n\tthis._item = null;\n\tlet bounds = arguments[0], item = arguments[1];\n\tthis._bounds = bounds;\n\tthis._item = item;\n}\nextend(ItemBoundable.prototype, {\n\tgetItem: function () {\n\t\treturn this._item;\n\t},\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn ItemBoundable;\n\t}\n});\n","import extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function PriorityQueue() {\n\tthis._size = null;\n\tthis._items = null;\n\tthis._size = 0;\n\tthis._items = new ArrayList();\n\tthis._items.add(null);\n}\nextend(PriorityQueue.prototype, {\n\tpoll: function () {\n\t\tif (this.isEmpty()) return null;\n\t\tvar minItem = this._items.get(1);\n\t\tthis._items.set(1, this._items.get(this._size));\n\t\tthis._size -= 1;\n\t\tthis.reorder(1);\n\t\treturn minItem;\n\t},\n\tsize: function () {\n\t\treturn this._size;\n\t},\n\treorder: function (hole) {\n\t\tvar child = null;\n\t\tvar tmp = this._items.get(hole);\n\t\tfor (; hole * 2 <= this._size; hole = child) {\n\t\t\tchild = hole * 2;\n\t\t\tif (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++;\n\t\t\tif (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child)); else break;\n\t\t}\n\t\tthis._items.set(hole, tmp);\n\t},\n\tclear: function () {\n\t\tthis._size = 0;\n\t\tthis._items.clear();\n\t},\n\tisEmpty: function () {\n\t\treturn this._size === 0;\n\t},\n\tadd: function (x) {\n\t\tthis._items.add(null);\n\t\tthis._size += 1;\n\t\tvar hole = this._size;\n\t\tthis._items.set(0, x);\n\t\tfor (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n\t\t\tthis._items.set(hole, this._items.get(Math.trunc(hole / 2)));\n\t\t}\n\t\tthis._items.set(hole, x);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PriorityQueue;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function BoundablePairDistanceComparator() {\n\tthis.normalOrder = null;\n\tlet normalOrder = arguments[0];\n\tthis.normalOrder = normalOrder;\n}\nextend(BoundablePairDistanceComparator.prototype, {\n\tcompare: function (p1, p2) {\n\t\tvar distance1 = p1.getDistance();\n\t\tvar distance2 = p2.getDistance();\n\t\tif (this.normalOrder) {\n\t\t\tif (distance1 > distance2) {\n\t\t\t\treturn 1;\n\t\t\t} else if (distance1 === distance2) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (distance1 > distance2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (distance1 === distance2) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn BoundablePairDistanceComparator;\n\t}\n});\n","import Boundable from './Boundable';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nexport default function AbstractNode() {\n\tthis._childBoundables = new ArrayList();\n\tthis._bounds = null;\n\tthis._level = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet level = arguments[0];\n\t\tthis._level = level;\n\t}\n}\nextend(AbstractNode.prototype, {\n\tgetLevel: function () {\n\t\treturn this._level;\n\t},\n\tsize: function () {\n\t\treturn this._childBoundables.size();\n\t},\n\tgetChildBoundables: function () {\n\t\treturn this._childBoundables;\n\t},\n\taddChildBoundable: function (childBoundable) {\n\t\tAssert.isTrue(this._bounds === null);\n\t\tthis._childBoundables.add(childBoundable);\n\t},\n\tisEmpty: function () {\n\t\treturn this._childBoundables.isEmpty();\n\t},\n\tgetBounds: function () {\n\t\tif (this._bounds === null) {\n\t\t\tthis._bounds = this.computeBounds();\n\t\t}\n\t\treturn this._bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn AbstractNode;\n\t}\n});\nAbstractNode.serialVersionUID = 6493722185909573708;\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport AbstractNode from './AbstractNode';\nimport extend from '../../../../../extend';\nimport Comparable from '../../../../../java/lang/Comparable';\nexport default function BoundablePair() {\n\tthis._boundable1 = null;\n\tthis._boundable2 = null;\n\tthis._distance = null;\n\tthis._itemDistance = null;\n\tlet boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2];\n\tthis._boundable1 = boundable1;\n\tthis._boundable2 = boundable2;\n\tthis._itemDistance = itemDistance;\n\tthis._distance = this.distance();\n}\nextend(BoundablePair.prototype, {\n\texpandToQueue: function (priQ, minDistance) {\n\t\tvar isComp1 = BoundablePair.isComposite(this._boundable1);\n\t\tvar isComp2 = BoundablePair.isComposite(this._boundable2);\n\t\tif (isComp1 && isComp2) {\n\t\t\tif (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n\t\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isComp1) {\n\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\treturn null;\n\t\t} else if (isComp2) {\n\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\treturn null;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"neither boundable is composite\");\n\t},\n\tisLeaves: function () {\n\t\treturn !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2));\n\t},\n\tcompareTo: function (o) {\n\t\tvar nd = o;\n\t\tif (this._distance < nd._distance) return -1;\n\t\tif (this._distance > nd._distance) return 1;\n\t\treturn 0;\n\t},\n\texpand: function (bndComposite, bndOther, priQ, minDistance) {\n\t\tvar children = bndComposite.getChildBoundables();\n\t\tfor (var i = children.iterator(); i.hasNext(); ) {\n\t\t\tvar child = i.next();\n\t\t\tvar bp = new BoundablePair(child, bndOther, this._itemDistance);\n\t\t\tif (bp.getDistance() < minDistance) {\n\t\t\t\tpriQ.add(bp);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundable: function (i) {\n\t\tif (i === 0) return this._boundable1;\n\t\treturn this._boundable2;\n\t},\n\tgetDistance: function () {\n\t\treturn this._distance;\n\t},\n\tdistance: function () {\n\t\tif (this.isLeaves()) {\n\t\t\treturn this._itemDistance.distance(this._boundable1, this._boundable2);\n\t\t}\n\t\treturn this._boundable1.getBounds().distance(this._boundable2.getBounds());\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn BoundablePair;\n\t}\n});\nBoundablePair.area = function (b) {\n\treturn b.getBounds().getArea();\n};\nBoundablePair.isComposite = function (item) {\n\treturn item instanceof AbstractNode;\n};\n","import ItemBoundable from './ItemBoundable';\nimport hasInterface from '../../../../../hasInterface';\nimport ItemVisitor from '../ItemVisitor';\nimport AbstractNode from './AbstractNode';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nimport List from '../../../../../java/util/List';\nexport default function AbstractSTRtree() {\n\tthis._root = null;\n\tthis._built = false;\n\tthis._itemBoundables = new ArrayList();\n\tthis._nodeCapacity = null;\n\tif (arguments.length === 0) {\n\t\tAbstractSTRtree.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAssert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\n\t\tthis._nodeCapacity = nodeCapacity;\n\t}\n}\nextend(AbstractSTRtree.prototype, {\n\tqueryInternal: function () {\n\t\tif (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], visitor = arguments[2];\n\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tthis.queryInternal(searchBounds, childBoundable, visitor);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvisitor.visitItem(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], matches = arguments[2];\n\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tthis.queryInternal(searchBounds, childBoundable, matches);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tmatches.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetNodeCapacity: function () {\n\t\treturn this._nodeCapacity;\n\t},\n\tlastNode: function (nodes) {\n\t\treturn nodes.get(nodes.size() - 1);\n\t},\n\tsize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.size(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar size = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tsize += this.size(childBoundable);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tsize += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn size;\n\t\t}\n\t},\n\tremoveItem: function (node, item) {\n\t\tvar childToRemove = null;\n\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (childBoundable instanceof ItemBoundable) {\n\t\t\t\tif (childBoundable.getItem() === item) childToRemove = childBoundable;\n\t\t\t}\n\t\t}\n\t\tif (childToRemove !== null) {\n\t\t\tnode.getChildBoundables().remove(childToRemove);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\titemsTree: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.build();\n\t\t\tvar valuesTree = this.itemsTree(this._root);\n\t\t\tif (valuesTree === null) return new ArrayList();\n\t\t\treturn valuesTree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar valuesTreeForNode = new ArrayList();\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar valuesTreeForChild = this.itemsTree(childBoundable);\n\t\t\t\t\tif (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvaluesTreeForNode.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valuesTreeForNode.size() <= 0) return null;\n\t\t\treturn valuesTreeForNode;\n\t\t}\n\t},\n\tinsert: function (bounds, item) {\n\t\tAssert.isTrue(!this._built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\n\t\tthis._itemBoundables.add(new ItemBoundable(bounds, item));\n\t},\n\tboundablesAtLevel: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet level = arguments[0];\n\t\t\tvar boundables = new ArrayList();\n\t\t\tthis.boundablesAtLevel(level, this._root, boundables);\n\t\t\treturn boundables;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet level = arguments[0], top = arguments[1], boundables = arguments[2];\n\t\t\tAssert.isTrue(level > -2);\n\t\t\tif (top.getLevel() === level) {\n\t\t\t\tboundables.add(top);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (var i = top.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar boundable = i.next();\n\t\t\t\tif (boundable instanceof AbstractNode) {\n\t\t\t\t\tthis.boundablesAtLevel(level, boundable, boundables);\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(boundable instanceof ItemBoundable);\n\t\t\t\t\tif (level === -1) {\n\t\t\t\t\t\tboundables.add(boundable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchBounds = arguments[0];\n\t\t\tthis.build();\n\t\t\tvar matches = new ArrayList();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn matches;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.queryInternal(searchBounds, this._root, matches);\n\t\t\t}\n\t\t\treturn matches;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], visitor = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.queryInternal(searchBounds, this._root, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function () {\n\t\tif (this._built) return null;\n\t\tthis._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n\t\tthis._itemBoundables = null;\n\t\tthis._built = true;\n\t},\n\tgetRoot: function () {\n\t\tthis.build();\n\t\treturn this._root;\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], item = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\treturn this.remove(searchBounds, this._root, item);\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], item = arguments[2];\n\t\t\tvar found = this.removeItem(node, item);\n\t\t\tif (found) return true;\n\t\t\tvar childToPrune = null;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tfound = this.remove(searchBounds, childBoundable, item);\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tchildToPrune = childBoundable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (childToPrune !== null) {\n\t\t\t\tif (childToPrune.getChildBoundables().isEmpty()) {\n\t\t\t\t\tnode.getChildBoundables().remove(childToPrune);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn found;\n\t\t}\n\t},\n\tcreateHigherLevels: function (boundablesOfALevel, level) {\n\t\tAssert.isTrue(!boundablesOfALevel.isEmpty());\n\t\tvar parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n\t\tif (parentBoundables.size() === 1) {\n\t\t\treturn parentBoundables.get(0);\n\t\t}\n\t\treturn this.createHigherLevels(parentBoundables, level + 1);\n\t},\n\tdepth: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.depth(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar maxChildDepth = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar childDepth = this.depth(childBoundable);\n\t\t\t\t\tif (childDepth > maxChildDepth) maxChildDepth = childDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn maxChildDepth + 1;\n\t\t}\n\t},\n\tcreateParentBoundables: function (childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar parentBoundables = new ArrayList();\n\t\tparentBoundables.add(this.createNode(newLevel));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, this.getComparator());\n\t\tfor (var i = sortedChildBoundables.iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n\t\t\t\tparentBoundables.add(this.createNode(newLevel));\n\t\t\t}\n\t\t\tthis.lastNode(parentBoundables).addChildBoundable(childBoundable);\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tisEmpty: function () {\n\t\tif (!this._built) return this._itemBoundables.isEmpty();\n\t\treturn this._root.isEmpty();\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn AbstractSTRtree;\n\t}\n});\nAbstractSTRtree.compareDoubles = function (a, b) {\n\treturn a > b ? 1 : a < b ? -1 : 0;\n};\nfunction IntersectsOp() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp;\nAbstractSTRtree.serialVersionUID = -3886435814360241337;\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","import extend from '../../../../../extend';\nexport default function ItemDistance() {}\nextend(ItemDistance.prototype, {\n\tdistance: function (item1, item2) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ItemDistance;\n\t}\n});\n","import ItemBoundable from './ItemBoundable';\nimport PriorityQueue from '../../util/PriorityQueue';\nimport hasInterface from '../../../../../hasInterface';\nimport BoundablePairDistanceComparator from './BoundablePairDistanceComparator';\nimport SpatialIndex from '../SpatialIndex';\nimport AbstractNode from './AbstractNode';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport BoundablePair from './BoundablePair';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport AbstractSTRtree from './AbstractSTRtree';\nimport ItemDistance from './ItemDistance';\nexport default function STRtree() {\n\tif (arguments.length === 0) {\n\t\tSTRtree.call(this, STRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAbstractSTRtree.call(this, nodeCapacity);\n\t}\n}\ninherits(STRtree, AbstractSTRtree);\nextend(STRtree.prototype, {\n\tcreateParentBoundablesFromVerticalSlices: function (verticalSlices, newLevel) {\n\t\tAssert.isTrue(verticalSlices.length > 0);\n\t\tvar parentBoundables = new ArrayList();\n\t\tfor (var i = 0; i < verticalSlices.length; i++) {\n\t\t\tparentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tcreateNode: function (level) {\n\t\treturn new STRtreeNode(level);\n\t},\n\tsize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.size.call(this);\n\t\t} else return AbstractSTRtree.prototype.size.apply(this, arguments);\n\t},\n\tinsert: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\tif (itemEnv.isNull()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tAbstractSTRtree.prototype.insert.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.insert.apply(this, arguments);\n\t},\n\tgetIntersectsOp: function () {\n\t\treturn STRtree.intersectsOp;\n\t},\n\tverticalSlices: function (childBoundables, sliceCount) {\n\t\tvar sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n\t\tvar slices = new Array(sliceCount).fill(null);\n\t\tvar i = childBoundables.iterator();\n\t\tfor (var j = 0; j < sliceCount; j++) {\n\t\t\tslices[j] = new ArrayList();\n\t\t\tvar boundablesAddedToSlice = 0;\n\t\t\twhile (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tslices[j].add(childBoundable);\n\t\t\t\tboundablesAddedToSlice++;\n\t\t\t}\n\t\t}\n\t\treturn slices;\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\treturn AbstractSTRtree.prototype.query.call(this, searchEnv);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tAbstractSTRtree.prototype.query.call(this, searchEnv, visitor);\n\t\t}\n\t},\n\tgetComparator: function () {\n\t\treturn STRtree.yComparator;\n\t},\n\tcreateParentBoundablesFromVerticalSlice: function (childBoundables, newLevel) {\n\t\treturn AbstractSTRtree.prototype.createParentBoundables.call(this, childBoundables, newLevel);\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\treturn AbstractSTRtree.prototype.remove.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.remove.apply(this, arguments);\n\t},\n\tdepth: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.depth.call(this);\n\t\t} else return AbstractSTRtree.prototype.depth.apply(this, arguments);\n\t},\n\tcreateParentBoundables: function (childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, STRtree.xComparator);\n\t\tvar verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n\t\treturn this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\n\t},\n\tnearestNeighbour: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], ItemDistance)) {\n\t\t\t\tlet itemDist = arguments[0];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair) {\n\t\t\t\tlet initBndPair = arguments[0];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n\t\t\t\tlet tree = arguments[0], itemDist = arguments[1];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar minPair = null;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) break;\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tdistanceLowerBound = currentDistance;\n\t\t\t\t\t\tminPair = bndPair;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\n\t\t\t} else if (arguments[0] instanceof BoundablePair && Number.isInteger(arguments[1])) {\n\t\t\t\tlet initBndPair = arguments[0], k = arguments[1];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY, k);\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemDistance) && (arguments[0] instanceof Envelope && arguments[1] instanceof Object)) {\n\t\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2];\n\t\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp)[0];\n\t\t\t} else if (Number.isInteger(arguments[2]) && (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\")) {\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1], k = arguments[2];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\tvar kNearestNeighbors = new java.util.PriorityQueue<BoundablePair>(k, new BoundablePairDistanceComparator(false));\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tif (kNearestNeighbors.size() < k) {\n\t\t\t\t\t\t\tkNearestNeighbors.add(bndPair);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (kNearestNeighbors.peek().getDistance() > currentDistance) {\n\t\t\t\t\t\t\t\tkNearestNeighbors.poll();\n\t\t\t\t\t\t\t\tkNearestNeighbors.add(bndPair);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdistanceLowerBound = kNearestNeighbors.peek().getDistance();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn STRtree.getItems(kNearestNeighbors);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2], k = arguments[3];\n\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\treturn this.nearestNeighbour(bp, k);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn STRtree;\n\t}\n});\nSTRtree.centreX = function (e) {\n\treturn STRtree.avg(e.getMinX(), e.getMaxX());\n};\nSTRtree.avg = function (a, b) {\n\treturn (a + b) / 2;\n};\nSTRtree.getItems = function (kNearestNeighbors) {\n\tvar items = new Array(kNearestNeighbors.size()).fill(null);\n\tvar resultIterator = kNearestNeighbors.iterator();\n\tvar count = 0;\n\twhile (resultIterator.hasNext()) {\n\t\titems[count] = resultIterator.next().getBoundable(0).getItem();\n\t\tcount++;\n\t}\n\treturn items;\n};\nSTRtree.centreY = function (e) {\n\treturn STRtree.avg(e.getMinY(), e.getMaxY());\n};\nfunction STRtreeNode() {\n\tlet level = arguments[0];\n\tAbstractNode.call(this, level);\n}\ninherits(STRtreeNode, AbstractNode);\nextend(STRtreeNode.prototype, {\n\tcomputeBounds: function () {\n\t\tvar bounds = null;\n\t\tfor (var i = this.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (bounds === null) {\n\t\t\t\tbounds = new Envelope(childBoundable.getBounds());\n\t\t\t} else {\n\t\t\t\tbounds.expandToInclude(childBoundable.getBounds());\n\t\t\t}\n\t\t}\n\t\treturn bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn STRtreeNode;\n\t}\n});\nSTRtree.STRtreeNode = STRtreeNode;\nSTRtree.serialVersionUID = 259274702368956900;\nSTRtree.xComparator = {\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tcompare: function (o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\n\t}\n};\nSTRtree.yComparator = {\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tcompare: function (o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\n\t}\n};\nSTRtree.intersectsOp = {\n\tinterfaces_: function () {\n\t\treturn [IntersectsOp];\n\t},\n\tintersects: function (aBounds, bBounds) {\n\t\treturn aBounds.intersects(bBounds);\n\t}\n};\nSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nexport default function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n}\n\nextend(GeoJSONParser.prototype, {\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read (json) {\n    let obj\n    if (typeof json === 'string') {\n      obj = JSON.parse(json)\n    } else {\n      obj = json\n    }\n\n    const type = obj.type\n\n    if (!parse[type]) {\n      throw new Error('Unknown GeoJSON type: ' + obj.type)\n    }\n\n    if (geometryTypes.indexOf(type) !== -1) {\n      return parse[type].apply(this, [obj.coordinates])\n    } else if (type === 'GeometryCollection') {\n      return parse[type].apply(this, [obj.geometries])\n    }\n\n    // feature or feature collection\n    return parse[type].apply(this, [obj])\n  },\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write (geometry) {\n    const type = geometry.getGeometryType()\n\n    if (!extract[type]) {\n      throw new Error('Geometry is not supported')\n    }\n\n    return extract[type].apply(this, [geometry])\n  }\n})\n\nconst parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    const feature = {}\n\n    // copy features\n    for (let key in obj) {\n      feature[key] = obj[key]\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      const type = obj.geometry.type\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry)\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox])\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    const featureCollection = {}\n\n    if (obj.features) {\n      featureCollection.features = []\n\n      for (let i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this.read(obj.features[i]))\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox])\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    const coordinates = []\n    for (let i = 0; i < array.length; ++i) {\n      const sub = array[i]\n      coordinates.push(new Coordinate(sub[0], sub[1]))\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    const coordinate = new Coordinate(array[0], array[1])\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    const points = []\n    for (let i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this, [array[i]]))\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    const coordinates = parse.coordinates.apply(this, [array])\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    const lineStrings = []\n    for (let i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this, [array[i]]))\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    const shellCoordinates = parse.coordinates.apply(this, [array[0]])\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\n    const holes = []\n    for (let i = 1; i < array.length; ++i) {\n      var hole = array[i]\n      var coordinates = parse.coordinates.apply(this, [hole])\n      var linearRing = this.geometryFactory.createLinearRing(coordinates)\n      holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    const polygons = []\n    for (let i = 0; i < array.length; ++i) {\n      const polygon = array[i]\n      polygons.push(parse.Polygon.apply(this, [polygon]))\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    const geometries = []\n    for (let i = 0; i < array.length; ++i) {\n      const geometry = array[i]\n      geometries.push(this.read(geometry))\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n}\n\nconst extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    const array = extract.coordinate.apply(this, [point.getCoordinate()])\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    const array = []\n    for (let i = 0; i < multipoint._geometries.length; ++i) {\n      const point = multipoint._geometries[i]\n      const geoJson = extract.Point.apply(this, [point])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    const array = []\n    const coordinates = linestring.getCoordinates()\n    for (let i = 0; i < coordinates.length; ++i) {\n      const coordinate = coordinates[i]\n      array.push(extract.coordinate.apply(this, [coordinate]))\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    const array = []\n    for (let i = 0; i < multilinestring._geometries.length; ++i) {\n      const linestring = multilinestring._geometries[i]\n      const geoJson = extract.LineString.apply(this, [linestring])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    const array = []\n    const shellGeoJson = extract.LineString.apply(this, [polygon._shell])\n    array.push(shellGeoJson.coordinates)\n    for (let i = 0; i < polygon._holes.length; ++i) {\n      const hole = polygon._holes[i]\n      const holeGeoJson = extract.LineString.apply(this, [hole])\n      array.push(holeGeoJson.coordinates)\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    const array = []\n    for (let i = 0; i < multipolygon._geometries.length; ++i) {\n      const polygon = multipolygon._geometries[i]\n      const geoJson = extract.Polygon.apply(this, [polygon])\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    const array = []\n    for (let i = 0; i < collection._geometries.length; ++i) {\n      const geometry = collection._geometries[i]\n      const type = geometry.getGeometryType()\n      array.push(extract[type].apply(this, [geometry]))\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\n  this.parser = new GeoJSONParser(this.geometryFactory)\n}\n\nextend(GeoJSONReader.prototype, {\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof module:org/locationtech/jts/io/GeoJSONReader#\n   */\n  read (geoJson) {\n    var geometry = this.parser.read(geoJson)\n\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry)\n    }\n\n    return geometry\n  },\n\n  // NOTE: this is a hack\n  reducePrecision (geometry) {\n    var i, len\n\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate)\n    } else if (geometry.points) {\n      for (i = 0, len = geometry.points.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry.points[i])\n      }\n    } else if (geometry.geometries) {\n      for (i = 0, len = geometry.geometries.length; i < len; i++) {\n        this.reducePrecision(geometry.geometries[i])\n      }\n    }\n  }\n})\n","/**\n * @module org/locationtech/jts/io/GeoJSONWriter\n */\n\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory)\n}\n\nextend(GeoJSONWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof module:org/locationtech/jts/io/GeoJSONWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n","/**\n * @module org/locationtech/jts/io/WKTReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\n/**\n * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\n  this.parser = new WKTParser(this.geometryFactory)\n}\n\nextend(WKTReader.prototype, {\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof module:org/locationtech/jts/io/WKTReader#\n   */\n  read (wkt) {\n    var geometry = this.parser.read(wkt)\n\n    // TODO: port and use GeometryPrecisionReducer, this is a hack\n    if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n      this.reducePrecision(geometry)\n    }\n\n    return geometry\n  },\n\n  reducePrecision (geometry) {\n    if (geometry.coordinate) {\n      this.precisionModel.makePrecise(geometry.coordinate)\n    } else if (geometry._points) {\n      for (let i = 0, len = geometry._points._coordinates.length; i < len; i++) {\n        this.precisionModel.makePrecise(geometry._points._coordinates[i])\n      }\n    } else if (geometry._geometries) {\n      for (let i = 0, len = geometry._geometries.length; i < len; i++) {\n        this.reducePrecision(geometry._geometries[i])\n      }\n    }\n  }\n})\n","/*eslint-disable no-undef */\n\n/**\n * @module org/locationtech/jts/io/OL3Parser\n */\n\nimport Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nfunction p2c (p) { return [p.x, p.y] }\n\n/**\n * OpenLayers 3 Geometry parser and writer\n * @param {GeometryFactory} geometryFactory\n * @param {ol} olReference\n * @constructor\n */\nexport default function OL3Parser (geometryFactory, olReference) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.ol = olReference || (typeof ol !== 'undefined' && ol)\n}\n\nextend(OL3Parser.prototype, {\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  read (geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry)\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry)\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry)\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry)\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry)\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry)\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry)\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry)\n    }\n  },\n\n  convertFromPoint (point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  },\n\n  convertFromLineString (lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromLinearRing (linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromPolygon (polygon) {\n    const linearRings = polygon.getLinearRings()\n    var shell = null\n    var holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0) {\n        shell = linearRing\n      } else {\n        holes.push(linearRing)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  convertFromMultiPoint (multiPoint) {\n    const points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  convertFromMultiLineString (multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  convertFromMultiPolygon (multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  convertFromCollection (collection) {\n    const geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  },\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  write (geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate())\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry)\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry)\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry)\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry)\n    }\n  },\n\n  convertToPoint (coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  },\n\n  convertToLineString (lineString) {\n    var points = lineString._points._coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  },\n\n  convertToLinearRing (linearRing) {\n    var points = linearRing._points._coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  },\n\n  convertToPolygon (polygon) {\n    var rings = [polygon._shell._points._coordinates.map(p2c)]\n    for (let i = 0; i < polygon._holes.length; i++) {\n      rings.push(polygon._holes[i]._points._coordinates.map(p2c))\n    }\n    return new this.ol.geom.Polygon(rings)\n  },\n\n  convertToMultiPoint (multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  },\n\n  convertToMultiLineString (multiLineString) {\n    var lineStrings = []\n    for (let i = 0; i < multiLineString._geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiLineString(lineStrings)\n  },\n\n  convertToMultiPolygon (multiPolygon) {\n    var polygons = []\n    for (let i = 0; i < multiPolygon._geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiPolygon(polygons)\n  },\n\n  convertToCollection (geometryCollection) {\n    var geometries = []\n    for (let i = 0; i < geometryCollection._geometries.length; i++) {\n      var geometry = geometryCollection._geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n})\n","import extend from '../../../../extend';\nimport Assert from '../util/Assert';\nexport default function SegmentPointComparator() {}\nextend(SegmentPointComparator.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentPointComparator;\n\t}\n});\nSegmentPointComparator.relativeSign = function (x0, x1) {\n\tif (x0 < x1) return -1;\n\tif (x0 > x1) return 1;\n\treturn 0;\n};\nSegmentPointComparator.compare = function (octant, p0, p1) {\n\tif (p0.equals2D(p1)) return 0;\n\tvar xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n\tvar ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n\tswitch (octant) {\n\t\tcase 0:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, ySign);\n\t\tcase 1:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, xSign);\n\t\tcase 2:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, -xSign);\n\t\tcase 3:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, ySign);\n\t\tcase 4:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, -ySign);\n\t\tcase 5:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, -xSign);\n\t\tcase 6:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, xSign);\n\t\tcase 7:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, -ySign);\n\t}\n\tAssert.shouldNeverReachHere(\"invalid octant value\");\n\treturn 0;\n};\nSegmentPointComparator.compareValue = function (compareSign0, compareSign1) {\n\tif (compareSign0 < 0) return -1;\n\tif (compareSign0 > 0) return 1;\n\tif (compareSign1 < 0) return -1;\n\tif (compareSign1 > 0) return 1;\n\treturn 0;\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport SegmentPointComparator from './SegmentPointComparator';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function SegmentNode() {\n\tthis._segString = null;\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis._segmentOctant = null;\n\tthis._isInterior = null;\n\tlet segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3];\n\tthis._segString = segString;\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis._segmentOctant = segmentOctant;\n\tthis._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n}\nextend(SegmentNode.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this.coord;\n\t},\n\tprint: function (out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\n\t\tif (this.coord.equals2D(other.coord)) return 0;\n\t\treturn SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord);\n\t},\n\tisEndPoint: function (maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && !this._isInterior) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\tisInterior: function () {\n\t\treturn this._isInterior;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentNode;\n\t}\n});\n","import CoordinateList from '../geom/CoordinateList';\nimport SegmentNode from './SegmentNode';\nimport Iterator from '../../../../java/util/Iterator';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function SegmentNodeList() {\n\tthis._nodeMap = new TreeMap();\n\tthis._edge = null;\n\tlet edge = arguments[0];\n\tthis._edge = edge;\n}\nextend(SegmentNodeList.prototype, {\n\tgetSplitCoordinates: function () {\n\t\tvar coordList = new CoordinateList();\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tthis.addEdgeCoordinates(eiPrev, ei, coordList);\n\t\t\teiPrev = ei;\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\taddCollapsedNodes: function () {\n\t\tvar collapsedVertexIndexes = new ArrayList();\n\t\tthis.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n\t\tthis.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n\t\tfor (var it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\n\t\t\tvar vertexIndex = it.next().intValue();\n\t\t\tthis.add(this._edge.getCoordinate(vertexIndex), vertexIndex);\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\tfindCollapsesFromExistingVertices: function (collapsedVertexIndexes) {\n\t\tfor (var i = 0; i < this._edge.size() - 2; i++) {\n\t\t\tvar p0 = this._edge.getCoordinate(i);\n\t\t\tvar p1 = this._edge.getCoordinate(i + 1);\n\t\t\tvar p2 = this._edge.getCoordinate(i + 2);\n\t\t\tif (p0.equals2D(p2)) {\n\t\t\t\tcollapsedVertexIndexes.add(new Integer(i + 1));\n\t\t\t}\n\t\t}\n\t},\n\taddEdgeCoordinates: function (ei0, ei1, coordList) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar ipt = 0;\n\t\tcoordList.add(new Coordinate(ei0.coord), false);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tcoordList.add(this._edge.getCoordinate(i));\n\t\t}\n\t\tif (useIntPt1) {\n\t\t\tcoordList.add(new Coordinate(ei1.coord));\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function (edgeList) {\n\t\tthis.addEndpoints();\n\t\tthis.addCollapsedNodes();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tfindCollapseIndex: function (ei0, ei1, collapsedVertexIndex) {\n\t\tif (!ei0.coord.equals2D(ei1.coord)) return false;\n\t\tvar numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n\t\tif (!ei1.isInterior()) {\n\t\t\tnumVerticesBetween--;\n\t\t}\n\t\tif (numVerticesBetween === 1) {\n\t\t\tcollapsedVertexIndex[0] = ei0.segmentIndex + 1;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tfindCollapsesFromInsertedNodes: function (collapsedVertexIndexes) {\n\t\tvar collapsedVertexIndex = new Array(1).fill(null);\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n\t\t\tif (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tgetEdge: function () {\n\t\treturn this._edge;\n\t},\n\taddEndpoints: function () {\n\t\tvar maxSegIndex = this._edge.size() - 1;\n\t\tthis.add(this._edge.getCoordinate(0), 0);\n\t\tthis.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n\t},\n\tcreateSplitEdge: function (ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this._edge.getCoordinate(i);\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\n\t\treturn new NodedSegmentString(pts, this._edge.getData());\n\t},\n\tadd: function (intPt, segmentIndex) {\n\t\tvar eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\tAssert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tcheckSplitEdgesCorrectness: function (splitEdges) {\n\t\tvar edgePts = this._edge.getCoordinates();\n\t\tvar split0 = splitEdges.get(0);\n\t\tvar pt0 = split0.getCoordinate(0);\n\t\tif (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\n\t\tvar splitn = splitEdges.get(splitEdges.size() - 1);\n\t\tvar splitnPts = splitn.getCoordinates();\n\t\tvar ptn = splitnPts[splitnPts.length - 1];\n\t\tif (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentNodeList;\n\t}\n});\nfunction NodeVertexIterator() {\n\tthis._nodeList = null;\n\tthis._edge = null;\n\tthis._nodeIt = null;\n\tthis._currNode = null;\n\tthis._nextNode = null;\n\tthis._currSegIndex = 0;\n\tlet nodeList = arguments[0];\n\tthis._nodeList = nodeList;\n\tthis._edge = nodeList.getEdge();\n\tthis._nodeIt = nodeList.iterator();\n\tthis.readNextNode();\n}\nextend(NodeVertexIterator.prototype, {\n\tnext: function () {\n\t\tif (this._currNode === null) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode === null) return null;\n\t\tif (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n\t\treturn null;\n\t},\n\tremove: function () {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function () {\n\t\tif (this._nextNode === null) return false;\n\t\treturn true;\n\t},\n\treadNextNode: function () {\n\t\tif (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function () {\n\t\treturn NodeVertexIterator;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Octant() {}\nextend(Octant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Octant;\n\t}\n});\nOctant.octant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tlet dx = arguments[0], dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tvar adx = Math.abs(dx);\n\t\tvar ady = Math.abs(dy);\n\t\tif (dx >= 0) {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 0; else return 1;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 7; else return 6;\n\t\t\t}\n\t\t} else {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 3; else return 2;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 4; else return 5;\n\t\t\t}\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\n\t\treturn Octant.octant(dx, dy);\n\t}\n};\n","import extend from '../../../../extend';\nexport default function SegmentString() {}\nextend(SegmentString.prototype, {\n\tgetCoordinates: function () {},\n\tsize: function () {},\n\tgetCoordinate: function (i) {},\n\tisClosed: function () {},\n\tsetData: function (data) {},\n\tgetData: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentString;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentString from './SegmentString';\nexport default function NodableSegmentString() {}\nextend(NodableSegmentString.prototype, {\n\taddIntersection: function (intPt, segmentIndex) {},\n\tinterfaces_: function () {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn NodableSegmentString;\n\t}\n});\n","import SegmentNodeList from './SegmentNodeList';\nimport WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Coordinate from '../geom/Coordinate';\nimport Octant from './Octant';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport NodableSegmentString from './NodableSegmentString';\nexport default function NodedSegmentString() {\n\tthis._nodeList = new SegmentNodeList(this);\n\tthis._pts = null;\n\tthis._data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n}\nextend(NodedSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this._pts;\n\t},\n\tsize: function () {\n\t\treturn this._pts.length;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this._pts[i];\n\t},\n\tisClosed: function () {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t},\n\tgetSegmentOctant: function (index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tsafeOctant: function (p0, p1) {\n\t\tif (p0.equals2D(p1)) return 0;\n\t\treturn Octant.octant(p0, p1);\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\taddIntersection: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet intPt = arguments[0], segmentIndex = arguments[1];\n\t\t\tthis.addIntersectionNode(intPt, segmentIndex);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3];\n\t\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\t\tthis.addIntersection(intPt, segmentIndex);\n\t\t}\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t},\n\tgetNodeList: function () {\n\t\treturn this._nodeList;\n\t},\n\taddIntersectionNode: function (intPt, segmentIndex) {\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this._pts.length) {\n\t\t\tvar nextPt = this._pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t}\n\t\t}\n\t\tvar ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n\t\treturn ei;\n\t},\n\taddIntersections: function (li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [NodableSegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn NodedSegmentString;\n\t}\n});\nNodedSegmentString.getNodedSubstrings = function () {\n\tif (arguments.length === 1) {\n\t\tlet segStrings = arguments[0];\n\t\tvar resultEdgelist = new ArrayList();\n\t\tNodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n\t\treturn resultEdgelist;\n\t} else if (arguments.length === 2) {\n\t\tlet segStrings = arguments[0], resultEdgelist = arguments[1];\n\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar ss = i.next();\n\t\t\tss.getNodeList().addSplitEdges(resultEdgelist);\n\t\t}\n\t}\n};\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nexport default function MonotoneChainOverlapAction() {\n\tthis._overlapSeg1 = new LineSegment();\n\tthis._overlapSeg2 = new LineSegment();\n}\nextend(MonotoneChainOverlapAction.prototype, {\n\toverlap: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet seg1 = arguments[0], seg2 = arguments[1];\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tmc1.getLineSegment(start1, this._overlapSeg1);\n\t\t\tmc2.getLineSegment(start2, this._overlapSeg2);\n\t\t\tthis.overlap(this._overlapSeg1, this._overlapSeg2);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainOverlapAction;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function Noder() {}\nextend(Noder.prototype, {\n\tcomputeNodes: function (segStrings) {},\n\tgetNodedSubstrings: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Noder;\n\t}\n});\n","import Noder from './Noder';\nimport extend from '../../../../extend';\nexport default function SinglePassNoder() {\n\tthis._segInt = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet segInt = arguments[0];\n\t\tthis.setSegmentIntersector(segInt);\n\t}\n}\nextend(SinglePassNoder.prototype, {\n\tsetSegmentIntersector: function (segInt) {\n\t\tthis._segInt = segInt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn SinglePassNoder;\n\t}\n});\n","import STRtree from '../index/strtree/STRtree';\nimport NodedSegmentString from './NodedSegmentString';\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction';\nimport extend from '../../../../extend';\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nimport SinglePassNoder from './SinglePassNoder';\nexport default function MCIndexNoder() {\n\tthis._monoChains = new ArrayList();\n\tthis._index = new STRtree();\n\tthis._idCounter = 0;\n\tthis._nodedSegStrings = null;\n\tthis._nOverlaps = 0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet si = arguments[0];\n\t\tSinglePassNoder.call(this, si);\n\t}\n}\ninherits(MCIndexNoder, SinglePassNoder);\nextend(MCIndexNoder.prototype, {\n\tgetMonotoneChains: function () {\n\t\treturn this._monoChains;\n\t},\n\tgetNodedSubstrings: function () {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t},\n\tgetIndex: function () {\n\t\treturn this._index;\n\t},\n\tadd: function (segStr) {\n\t\tvar segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n\t\tfor (var i = segChains.iterator(); i.hasNext(); ) {\n\t\t\tvar mc = i.next();\n\t\t\tmc.setId(this._idCounter++);\n\t\t\tthis._index.insert(mc.getEnvelope(), mc);\n\t\t\tthis._monoChains.add(mc);\n\t\t}\n\t},\n\tcomputeNodes: function (inputSegStrings) {\n\t\tthis._nodedSegStrings = inputSegStrings;\n\t\tfor (var i = inputSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t\tthis.intersectChains();\n\t},\n\tintersectChains: function () {\n\t\tvar overlapAction = new SegmentOverlapAction(this._segInt);\n\t\tfor (var i = this._monoChains.iterator(); i.hasNext(); ) {\n\t\t\tvar queryChain = i.next();\n\t\t\tvar overlapChains = this._index.query(queryChain.getEnvelope());\n\t\t\tfor (var j = overlapChains.iterator(); j.hasNext(); ) {\n\t\t\t\tvar testChain = j.next();\n\t\t\t\tif (testChain.getId() > queryChain.getId()) {\n\t\t\t\t\tqueryChain.computeOverlaps(testChain, overlapAction);\n\t\t\t\t\tthis._nOverlaps++;\n\t\t\t\t}\n\t\t\t\tif (this._segInt.isDone()) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexNoder;\n\t}\n});\nfunction SegmentOverlapAction() {\n\tMonotoneChainOverlapAction.apply(this);\n\tthis._si = null;\n\tlet si = arguments[0];\n\tthis._si = si;\n}\ninherits(SegmentOverlapAction, MonotoneChainOverlapAction);\nextend(SegmentOverlapAction.prototype, {\n\toverlap: function () {\n\t\tif (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tvar ss1 = mc1.getContext();\n\t\t\tvar ss2 = mc2.getContext();\n\t\t\tthis._si.processIntersections(ss1, start1, ss2, start2);\n\t\t} else return MonotoneChainOverlapAction.prototype.overlap.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentOverlapAction;\n\t}\n});\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\n","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Noder from './Noder';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function ScaledNoder() {\n\tthis._noder = null;\n\tthis._scaleFactor = null;\n\tthis._offsetX = null;\n\tthis._offsetY = null;\n\tthis._isScaled = false;\n\tif (arguments.length === 2) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1];\n\t\tScaledNoder.call(this, noder, scaleFactor, 0, 0);\n\t} else if (arguments.length === 4) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3];\n\t\tthis._noder = noder;\n\t\tthis._scaleFactor = scaleFactor;\n\t\tthis._isScaled = !this.isIntegerPrecision();\n\t}\n}\nextend(ScaledNoder.prototype, {\n\trescale: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.rescale(ss.getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar p0 = null;\n\t\t\tvar p1 = null;\n\t\t\tif (pts.length === 2) {\n\t\t\t\tp0 = new Coordinate(pts[0]);\n\t\t\t\tp1 = new Coordinate(pts[1]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tpts[i].x = pts[i].x / this._scaleFactor + this._offsetX;\n\t\t\t\tpts[i].y = pts[i].y / this._scaleFactor + this._offsetY;\n\t\t\t}\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) {\n\t\t\t\tSystem.out.println(pts);\n\t\t\t}\n\t\t}\n\t},\n\tscale: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tvar nodedSegmentStrings = new ArrayList(segStrings.size());\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tnodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\n\t\t\t}\n\t\t\treturn nodedSegmentStrings;\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar roundPts = new Array(pts.length).fill(null);\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\troundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].z);\n\t\t\t}\n\t\t\tvar roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n\t\t\treturn roundPtsNoDup;\n\t\t}\n\t},\n\tisIntegerPrecision: function () {\n\t\treturn this._scaleFactor === 1.0;\n\t},\n\tgetNodedSubstrings: function () {\n\t\tvar splitSS = this._noder.getNodedSubstrings();\n\t\tif (this._isScaled) this.rescale(splitSS);\n\t\treturn splitSS;\n\t},\n\tcomputeNodes: function (inputSegStrings) {\n\t\tvar intSegStrings = inputSegStrings;\n\t\tif (this._isScaled) intSegStrings = this.scale(inputSegStrings);\n\t\tthis._noder.computeNodes(intSegStrings);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn ScaledNoder;\n\t}\n});\n","import TreeSet from '../../../../java/util/TreeSet';\nimport LineString from '../geom/LineString';\nimport hasInterface from '../../../../hasInterface';\nimport MultiPoint from '../geom/MultiPoint';\nimport extend from '../../../../extend';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport Polygonal from '../geom/Polygonal';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function IsSimpleOp() {\n\tthis._inputGeom = null;\n\tthis._isClosedEndpointsInInterior = true;\n\tthis._nonSimpleLocation = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tthis._inputGeom = geom;\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\n\t\tthis._inputGeom = geom;\n\t\tthis._isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\n\t}\n}\nextend(IsSimpleOp.prototype, {\n\tisSimpleMultiPoint: function (mp) {\n\t\tif (mp.isEmpty()) return true;\n\t\tvar points = new TreeSet();\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar pt = mp.getGeometryN(i);\n\t\t\tvar p = pt.getCoordinate();\n\t\t\tif (points.contains(p)) {\n\t\t\t\tthis._nonSimpleLocation = p;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tpoints.add(p);\n\t\t}\n\t\treturn true;\n\t},\n\tisSimplePolygonal: function (geom) {\n\t\tvar rings = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = rings.iterator(); i.hasNext(); ) {\n\t\t\tvar ring = i.next();\n\t\t\tif (!this.isSimpleLinearGeometry(ring)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasClosedEndpointIntersection: function (graph) {\n\t\tvar endPoints = new TreeMap();\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tvar isClosed = e.isClosed();\n\t\t\tvar p0 = e.getCoordinate(0);\n\t\t\tthis.addEndpoint(endPoints, p0, isClosed);\n\t\t\tvar p1 = e.getCoordinate(e.getNumPoints() - 1);\n\t\t\tthis.addEndpoint(endPoints, p1, isClosed);\n\t\t}\n\t\tfor (var i = endPoints.values().iterator(); i.hasNext(); ) {\n\t\t\tvar eiInfo = i.next();\n\t\t\tif (eiInfo.isClosed && eiInfo.degree !== 2) {\n\t\t\t\tthis._nonSimpleLocation = eiInfo.getCoordinate();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetNonSimpleLocation: function () {\n\t\treturn this._nonSimpleLocation;\n\t},\n\tisSimpleLinearGeometry: function (geom) {\n\t\tif (geom.isEmpty()) return true;\n\t\tvar graph = new GeometryGraph(0, geom);\n\t\tvar li = new RobustLineIntersector();\n\t\tvar si = graph.computeSelfNodes(li, true);\n\t\tif (!si.hasIntersection()) return true;\n\t\tif (si.hasProperIntersection()) {\n\t\t\tthis._nonSimpleLocation = si.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tif (this.hasNonEndpointIntersection(graph)) return false;\n\t\tif (this._isClosedEndpointsInInterior) {\n\t\t\tif (this.hasClosedEndpointIntersection(graph)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasNonEndpointIntersection: function (graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tif (!ei.isEndPoint(maxSegmentIndex)) {\n\t\t\t\t\tthis._nonSimpleLocation = ei.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\taddEndpoint: function (endPoints, p, isClosed) {\n\t\tvar eiInfo = endPoints.get(p);\n\t\tif (eiInfo === null) {\n\t\t\teiInfo = new EndpointInfo(p);\n\t\t\tendPoints.put(p, eiInfo);\n\t\t}\n\t\teiInfo.addEndpoint(isClosed);\n\t},\n\tcomputeSimple: function (geom) {\n\t\tthis._nonSimpleLocation = null;\n\t\tif (geom.isEmpty()) return true;\n\t\tif (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\n\t\tif (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\n\t\tif (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\n\t\treturn true;\n\t},\n\tisSimple: function () {\n\t\tthis._nonSimpleLocation = null;\n\t\treturn this.computeSimple(this._inputGeom);\n\t},\n\tisSimpleGeometryCollection: function (geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.computeSimple(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IsSimpleOp;\n\t}\n});\nIsSimpleOp.isSimple = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tvar op = new IsSimpleOp(geom);\n\t\treturn op.isSimple();\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\n\t\tvar op = new IsSimpleOp(geom, boundaryNodeRule);\n\t\treturn op.isSimple();\n\t}\n};\nfunction EndpointInfo() {\n\tthis.pt = null;\n\tthis.isClosed = null;\n\tthis.degree = null;\n\tlet pt = arguments[0];\n\tthis.pt = pt;\n\tthis.isClosed = false;\n\tthis.degree = 0;\n}\nextend(EndpointInfo.prototype, {\n\taddEndpoint: function (isClosed) {\n\t\tthis.degree++;\n\t\tthis.isClosed |= isClosed;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EndpointInfo;\n\t}\n});\nIsSimpleOp.EndpointInfo = EndpointInfo;\n","import extend from '../../../../../extend';\nexport default function BufferParameters() {\n\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\tthis._endCapStyle = BufferParameters.CAP_ROUND;\n\tthis._joinStyle = BufferParameters.JOIN_ROUND;\n\tthis._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n\tthis._isSingleSided = false;\n\tthis._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet quadrantSegments = arguments[0];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t} else if (arguments.length === 2) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t} else if (arguments.length === 4) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t\tthis.setJoinStyle(joinStyle);\n\t\tthis.setMitreLimit(mitreLimit);\n\t}\n}\nextend(BufferParameters.prototype, {\n\tgetEndCapStyle: function () {\n\t\treturn this._endCapStyle;\n\t},\n\tisSingleSided: function () {\n\t\treturn this._isSingleSided;\n\t},\n\tsetQuadrantSegments: function (quadSegs) {\n\t\tthis._quadrantSegments = quadSegs;\n\t\tif (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL;\n\t\tif (this._quadrantSegments < 0) {\n\t\t\tthis._joinStyle = BufferParameters.JOIN_MITRE;\n\t\t\tthis._mitreLimit = Math.abs(this._quadrantSegments);\n\t\t}\n\t\tif (quadSegs <= 0) {\n\t\t\tthis._quadrantSegments = 1;\n\t\t}\n\t\tif (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n\t\t\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\t\t}\n\t},\n\tgetJoinStyle: function () {\n\t\treturn this._joinStyle;\n\t},\n\tsetJoinStyle: function (joinStyle) {\n\t\tthis._joinStyle = joinStyle;\n\t},\n\tsetSimplifyFactor: function (simplifyFactor) {\n\t\tthis._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n\t},\n\tgetSimplifyFactor: function () {\n\t\treturn this._simplifyFactor;\n\t},\n\tgetQuadrantSegments: function () {\n\t\treturn this._quadrantSegments;\n\t},\n\tsetEndCapStyle: function (endCapStyle) {\n\t\tthis._endCapStyle = endCapStyle;\n\t},\n\tgetMitreLimit: function () {\n\t\treturn this._mitreLimit;\n\t},\n\tsetMitreLimit: function (mitreLimit) {\n\t\tthis._mitreLimit = mitreLimit;\n\t},\n\tsetSingleSided: function (isSingleSided) {\n\t\tthis._isSingleSided = isSingleSided;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferParameters;\n\t}\n});\nBufferParameters.bufferDistanceError = function (quadSegs) {\n\tvar alpha = Math.PI / 2.0 / quadSegs;\n\treturn 1 - Math.cos(alpha / 2.0);\n};\nBufferParameters.CAP_ROUND = 1;\nBufferParameters.CAP_FLAT = 2;\nBufferParameters.CAP_SQUARE = 3;\nBufferParameters.JOIN_ROUND = 1;\nBufferParameters.JOIN_MITRE = 2;\nBufferParameters.JOIN_BEVEL = 3;\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\n","import Position from '../../geomgraph/Position';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport Assert from '../../util/Assert';\nexport default function RightmostEdgeFinder() {\n\tthis._minIndex = -1;\n\tthis._minCoord = null;\n\tthis._minDe = null;\n\tthis._orientedDe = null;\n}\nextend(RightmostEdgeFinder.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this._minCoord;\n\t},\n\tgetRightmostSide: function (de, index) {\n\t\tvar side = this.getRightmostSideOfSegment(de, index);\n\t\tif (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\n\t\tif (side < 0) {\n\t\t\tthis._minCoord = null;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\treturn side;\n\t},\n\tfindRightmostEdgeAtVertex: function () {\n\t\tvar pts = this._minDe.getEdge().getCoordinates();\n\t\tAssert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\n\t\tvar pPrev = pts[this._minIndex - 1];\n\t\tvar pNext = pts[this._minIndex + 1];\n\t\tvar orientation = Orientation.index(this._minCoord, pNext, pPrev);\n\t\tvar usePrev = false;\n\t\tif (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t} else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t}\n\t\tif (usePrev) {\n\t\t\tthis._minIndex = this._minIndex - 1;\n\t\t}\n\t},\n\tgetRightmostSideOfSegment: function (de, i) {\n\t\tvar e = de.getEdge();\n\t\tvar coord = e.getCoordinates();\n\t\tif (i < 0 || i + 1 >= coord.length) return -1;\n\t\tif (coord[i].y === coord[i + 1].y) return -1;\n\t\tvar pos = Position.LEFT;\n\t\tif (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\n\t\treturn pos;\n\t},\n\tgetEdge: function () {\n\t\treturn this._orientedDe;\n\t},\n\tcheckForRightmostCoordinate: function (de) {\n\t\tvar coord = de.getEdge().getCoordinates();\n\t\tfor (var i = 0; i < coord.length - 1; i++) {\n\t\t\tif (this._minCoord === null || coord[i].x > this._minCoord.x) {\n\t\t\t\tthis._minDe = de;\n\t\t\t\tthis._minIndex = i;\n\t\t\t\tthis._minCoord = coord[i];\n\t\t\t}\n\t\t}\n\t},\n\tfindRightmostEdgeAtNode: function () {\n\t\tvar node = this._minDe.getNode();\n\t\tvar star = node.getEdges();\n\t\tthis._minDe = star.getRightmostEdge();\n\t\tif (!this._minDe.isForward()) {\n\t\t\tthis._minDe = this._minDe.getSym();\n\t\t\tthis._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n\t\t}\n\t},\n\tfindEdge: function (dirEdgeList) {\n\t\tfor (var i = dirEdgeList.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (!de.isForward()) continue;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\tAssert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), \"inconsistency in rightmost processing\");\n\t\tif (this._minIndex === 0) {\n\t\t\tthis.findRightmostEdgeAtNode();\n\t\t} else {\n\t\t\tthis.findRightmostEdgeAtVertex();\n\t\t}\n\t\tthis._orientedDe = this._minDe;\n\t\tvar rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n\t\tif (rightmostSide === Position.LEFT) {\n\t\t\tthis._orientedDe = this._minDe.getSym();\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RightmostEdgeFinder;\n\t}\n});\n","export default function LinkedList () {\n  this.array_ = []\n}\nLinkedList.prototype.addLast = function (e) {\n  this.array_.push(e)\n}\nLinkedList.prototype.removeFirst = function () {\n  return this.array_.shift()\n}\nLinkedList.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n","import HashSet from '../../../../../java/util/HashSet';\nimport Position from '../../geomgraph/Position';\nimport Stack from '../../../../../java/util/Stack';\nimport RightmostEdgeFinder from './RightmostEdgeFinder';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport LinkedList from '../../../../../java/util/LinkedList';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default function BufferSubgraph() {\n\tthis._finder = null;\n\tthis._dirEdgeList = new ArrayList();\n\tthis._nodes = new ArrayList();\n\tthis._rightMostCoord = null;\n\tthis._env = null;\n\tthis._finder = new RightmostEdgeFinder();\n}\nextend(BufferSubgraph.prototype, {\n\tclearVisitedEdges: function () {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tde.setVisited(false);\n\t\t}\n\t},\n\tgetRightmostCoordinate: function () {\n\t\treturn this._rightMostCoord;\n\t},\n\tcomputeNodeDepth: function (n) {\n\t\tvar startEdge = null;\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isVisited() || de.getSym().isVisited()) {\n\t\t\t\tstartEdge = de;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\n\t\tn.getEdges().computeDepths(startEdge);\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tde.setVisited(true);\n\t\t\tthis.copySymDepths(de);\n\t\t}\n\t},\n\tcomputeDepth: function (outsideDepth) {\n\t\tthis.clearVisitedEdges();\n\t\tvar de = this._finder.getEdge();\n\t\tvar n = de.getNode();\n\t\tvar label = de.getLabel();\n\t\tde.setEdgeDepths(Position.RIGHT, outsideDepth);\n\t\tthis.copySymDepths(de);\n\t\tthis.computeDepths(de);\n\t},\n\tcreate: function (node) {\n\t\tthis.addReachable(node);\n\t\tthis._finder.findEdge(this._dirEdgeList);\n\t\tthis._rightMostCoord = this._finder.getCoordinate();\n\t},\n\tfindResultEdges: function () {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeDepths: function (startEdge) {\n\t\tvar nodesVisited = new HashSet();\n\t\tvar nodeQueue = new LinkedList();\n\t\tvar startNode = startEdge.getNode();\n\t\tnodeQueue.addLast(startNode);\n\t\tnodesVisited.add(startNode);\n\t\tstartEdge.setVisited(true);\n\t\twhile (!nodeQueue.isEmpty()) {\n\t\t\tvar n = nodeQueue.removeFirst();\n\t\t\tnodesVisited.add(n);\n\t\t\tthis.computeNodeDepth(n);\n\t\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym.isVisited()) continue;\n\t\t\t\tvar adjNode = sym.getNode();\n\t\t\t\tif (!nodesVisited.contains(adjNode)) {\n\t\t\t\t\tnodeQueue.addLast(adjNode);\n\t\t\t\t\tnodesVisited.add(adjNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcompareTo: function (o) {\n\t\tvar graph = o;\n\t\tif (this._rightMostCoord.x < graph._rightMostCoord.x) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this._rightMostCoord.x > graph._rightMostCoord.x) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t},\n\tgetEnvelope: function () {\n\t\tif (this._env === null) {\n\t\t\tvar edgeEnv = new Envelope();\n\t\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\t\tvar dirEdge = it.next();\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tedgeEnv.expandToInclude(pts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._env = edgeEnv;\n\t\t}\n\t\treturn this._env;\n\t},\n\taddReachable: function (startNode) {\n\t\tvar nodeStack = new Stack();\n\t\tnodeStack.add(startNode);\n\t\twhile (!nodeStack.empty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tthis.add(node, nodeStack);\n\t\t}\n\t},\n\tcopySymDepths: function (de) {\n\t\tvar sym = de.getSym();\n\t\tsym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n\t\tsym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n\t},\n\tadd: function (node, nodeStack) {\n\t\tnode.setVisited(true);\n\t\tthis._nodes.add(node);\n\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tthis._dirEdgeList.add(de);\n\t\t\tvar sym = de.getSym();\n\t\t\tvar symNode = sym.getNode();\n\t\t\tif (!symNode.isVisited()) nodeStack.push(symNode);\n\t\t}\n\t},\n\tgetNodes: function () {\n\t\treturn this._nodes;\n\t},\n\tgetDirectedEdges: function () {\n\t\treturn this._dirEdgeList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn BufferSubgraph;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport PointLocation from '../algorithm/PointLocation';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nexport default function EdgeRing() {\n\tthis._startDe = null;\n\tthis._maxNodeDegree = -1;\n\tthis._edges = new ArrayList();\n\tthis._pts = new ArrayList();\n\tthis._label = new Label(Location.NONE);\n\tthis._ring = null;\n\tthis._isHole = null;\n\tthis._shell = null;\n\tthis._holes = new ArrayList();\n\tthis._geometryFactory = null;\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tthis._geometryFactory = geometryFactory;\n\tthis.computePoints(start);\n\tthis.computeRing();\n}\nextend(EdgeRing.prototype, {\n\tcomputeRing: function () {\n\t\tif (this._ring !== null) return null;\n\t\tvar coord = new Array(this._pts.size()).fill(null);\n\t\tfor (var i = 0; i < this._pts.size(); i++) {\n\t\t\tcoord[i] = this._pts.get(i);\n\t\t}\n\t\tthis._ring = this._geometryFactory.createLinearRing(coord);\n\t\tthis._isHole = Orientation.isCCW(this._ring.getCoordinates());\n\t},\n\tisIsolated: function () {\n\t\treturn this._label.getGeometryCount() === 1;\n\t},\n\tcomputePoints: function (start) {\n\t\tthis._startDe = start;\n\t\tvar de = start;\n\t\tvar isFirstEdge = true;\n\t\tdo {\n\t\t\tif (de === null) throw new TopologyException(\"Found null DirectedEdge\");\n\t\t\tif (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\n\t\t\tthis._edges.add(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tAssert.isTrue(label.isArea());\n\t\t\tthis.mergeLabel(label);\n\t\t\tthis.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n\t\t\tisFirstEdge = false;\n\t\t\tthis.setEdgeRing(de, this);\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t},\n\tgetLinearRing: function () {\n\t\treturn this._ring;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this._pts.get(i);\n\t},\n\tcomputeMaxNodeDegree: function () {\n\t\tthis._maxNodeDegree = 0;\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tvar degree = node.getEdges().getOutgoingDegree(this);\n\t\t\tif (degree > this._maxNodeDegree) this._maxNodeDegree = degree;\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t\tthis._maxNodeDegree *= 2;\n\t},\n\taddPoints: function (edge, isForward, isFirstEdge) {\n\t\tvar edgePts = edge.getCoordinates();\n\t\tif (isForward) {\n\t\t\tvar startIndex = 1;\n\t\t\tif (isFirstEdge) startIndex = 0;\n\t\t\tfor (var i = startIndex; i < edgePts.length; i++) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tvar startIndex = edgePts.length - 2;\n\t\t\tif (isFirstEdge) startIndex = edgePts.length - 1;\n\t\t\tfor (var i = startIndex; i >= 0; i--) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisHole: function () {\n\t\treturn this._isHole;\n\t},\n\tsetInResult: function () {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tde.getEdge().setInResult(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t},\n\tcontainsPoint: function (p) {\n\t\tvar shell = this.getLinearRing();\n\t\tvar env = shell.getEnvelopeInternal();\n\t\tif (!env.contains(p)) return false;\n\t\tif (!PointLocation.isInRing(p, shell.getCoordinates())) return false;\n\t\tfor (var i = this._holes.iterator(); i.hasNext(); ) {\n\t\t\tvar hole = i.next();\n\t\t\tif (hole.containsPoint(p)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\taddHole: function (ring) {\n\t\tthis._holes.add(ring);\n\t},\n\tisShell: function () {\n\t\treturn this._shell === null;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tgetMaxNodeDegree: function () {\n\t\tif (this._maxNodeDegree < 0) this.computeMaxNodeDegree();\n\t\treturn this._maxNodeDegree;\n\t},\n\tgetShell: function () {\n\t\treturn this._shell;\n\t},\n\tmergeLabel: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet deLabel = arguments[0];\n\t\t\tthis.mergeLabel(deLabel, 0);\n\t\t\tthis.mergeLabel(deLabel, 1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deLabel = arguments[0], geomIndex = arguments[1];\n\t\t\tvar loc = deLabel.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (loc === Location.NONE) return null;\n\t\t\tif (this._label.getLocation(geomIndex) === Location.NONE) {\n\t\t\t\tthis._label.setLocation(geomIndex, loc);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function (shell) {\n\t\tthis._shell = shell;\n\t\tif (shell !== null) shell.addHole(this);\n\t},\n\ttoPolygon: function (geometryFactory) {\n\t\tvar holeLR = new Array(this._holes.size()).fill(null);\n\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\tholeLR[i] = this._holes.get(i).getLinearRing();\n\t\t}\n\t\tvar poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n\t\treturn poly;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeRing;\n\t}\n});\n","import extend from '../../../../../extend';\nimport EdgeRing from '../../geomgraph/EdgeRing';\nimport inherits from '../../../../../inherits';\nexport default function MinimalEdgeRing() {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MinimalEdgeRing, EdgeRing);\nextend(MinimalEdgeRing.prototype, {\n\tsetEdgeRing: function (de, er) {\n\t\tde.setMinEdgeRing(er);\n\t},\n\tgetNext: function (de) {\n\t\treturn de.getNextMin();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimalEdgeRing;\n\t}\n});\n","import MinimalEdgeRing from './MinimalEdgeRing';\nimport extend from '../../../../../extend';\nimport EdgeRing from '../../geomgraph/EdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport inherits from '../../../../../inherits';\nexport default function MaximalEdgeRing() {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MaximalEdgeRing, EdgeRing);\nextend(MaximalEdgeRing.prototype, {\n\tbuildMinimalRings: function () {\n\t\tvar minEdgeRings = new ArrayList();\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tif (de.getMinEdgeRing() === null) {\n\t\t\t\tvar minEr = new MinimalEdgeRing(de, this._geometryFactory);\n\t\t\t\tminEdgeRings.add(minEr);\n\t\t\t}\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t\treturn minEdgeRings;\n\t},\n\tsetEdgeRing: function (de, er) {\n\t\tde.setEdgeRing(er);\n\t},\n\tlinkDirectedEdgesForMinimalEdgeRings: function () {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tnode.getEdges().linkMinimalDirectedEdges(this);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t},\n\tgetNext: function (de) {\n\t\treturn de.getNext();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MaximalEdgeRing;\n\t}\n});\n","import PointLocation from '../../algorithm/PointLocation';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport MaximalEdgeRing from './MaximalEdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function PolygonBuilder() {\n\tthis._geometryFactory = null;\n\tthis._shellList = new ArrayList();\n\tlet geometryFactory = arguments[0];\n\tthis._geometryFactory = geometryFactory;\n}\nextend(PolygonBuilder.prototype, {\n\tsortShellsAndHoles: function (edgeRings, shellList, freeHoleList) {\n\t\tfor (var it = edgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\tfreeHoleList.add(er);\n\t\t\t} else {\n\t\t\t\tshellList.add(er);\n\t\t\t}\n\t\t}\n\t},\n\tcomputePolygons: function (shellList) {\n\t\tvar resultPolyList = new ArrayList();\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tvar poly = er.toPolygon(this._geometryFactory);\n\t\t\tresultPolyList.add(poly);\n\t\t}\n\t\treturn resultPolyList;\n\t},\n\tplaceFreeHoles: function (shellList, freeHoleList) {\n\t\tfor (var it = freeHoleList.iterator(); it.hasNext(); ) {\n\t\t\tvar hole = it.next();\n\t\t\tif (hole.getShell() === null) {\n\t\t\t\tvar shell = this.findEdgeRingContaining(hole, shellList);\n\t\t\t\tif (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\n\t\t\t\thole.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tbuildMinimalEdgeRings: function (maxEdgeRings, shellList, freeHoleList) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = maxEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.getMaxNodeDegree() > 2) {\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tvar shell = this.findShell(minEdgeRings);\n\t\t\t\tif (shell !== null) {\n\t\t\t\t\tthis.placePolygonHoles(shell, minEdgeRings);\n\t\t\t\t\tshellList.add(shell);\n\t\t\t\t} else {\n\t\t\t\t\tfreeHoleList.addAll(minEdgeRings);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tedgeRings.add(er);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\tcontainsPoint: function (p) {\n\t\tfor (var it = this._shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.containsPoint(p)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tbuildMaximalEdgeRings: function (dirEdges) {\n\t\tvar maxEdgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getLabel().isArea()) {\n\t\t\t\tif (de.getEdgeRing() === null) {\n\t\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\t\tmaxEdgeRings.add(er);\n\t\t\t\t\ter.setInResult();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn maxEdgeRings;\n\t},\n\tplacePolygonHoles: function (shell, minEdgeRings) {\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\ter.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tgetPolygons: function () {\n\t\tvar resultPolyList = this.computePolygons(this._shellList);\n\t\treturn resultPolyList;\n\t},\n\tfindEdgeRingContaining: function (testEr, shellList) {\n\t\tvar testRing = testEr.getLinearRing();\n\t\tvar testEnv = testRing.getEnvelopeInternal();\n\t\tvar testPt = testRing.getCoordinateN(0);\n\t\tvar minShell = null;\n\t\tvar minEnv = null;\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar tryShell = it.next();\n\t\t\tvar tryRing = tryShell.getLinearRing();\n\t\t\tvar tryEnv = tryRing.getEnvelopeInternal();\n\t\t\tif (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\n\t\t\tvar isContained = false;\n\t\t\tif (tryEnv.contains(testEnv) && PointLocation.isInRing(testPt, tryRing.getCoordinates())) isContained = true;\n\t\t\tif (isContained) {\n\t\t\t\tif (minShell === null || minEnv.contains(tryEnv)) {\n\t\t\t\t\tminShell = tryShell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn minShell;\n\t},\n\tfindShell: function (minEdgeRings) {\n\t\tvar shellCount = 0;\n\t\tvar shell = null;\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (!er.isHole()) {\n\t\t\t\tshell = er;\n\t\t\t\tshellCount++;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\n\t\treturn shell;\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet graph = arguments[0];\n\t\t\tthis.add(graph.getEdgeEnds(), graph.getNodes());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet dirEdges = arguments[0], nodes = arguments[1];\n\t\t\tPlanarGraph.linkResultDirectedEdges(nodes);\n\t\t\tvar maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n\t\t\tvar freeHoleList = new ArrayList();\n\t\t\tvar edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n\t\t\tthis.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n\t\t\tthis.placeFreeHoles(this._shellList, freeHoleList);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonBuilder;\n\t}\n});\n","import CoordinateList from '../../geom/CoordinateList';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport Distance from '../../algorithm/Distance';\nexport default function BufferInputLineSimplifier() {\n\tthis._inputLine = null;\n\tthis._distanceTol = null;\n\tthis._isDeleted = null;\n\tthis._angleOrientation = Orientation.COUNTERCLOCKWISE;\n\tlet inputLine = arguments[0];\n\tthis._inputLine = inputLine;\n}\nextend(BufferInputLineSimplifier.prototype, {\n\tisDeletable: function (i0, i1, i2, distanceTol) {\n\t\tvar p0 = this._inputLine[i0];\n\t\tvar p1 = this._inputLine[i1];\n\t\tvar p2 = this._inputLine[i2];\n\t\tif (!this.isConcave(p0, p1, p2)) return false;\n\t\tif (!this.isShallow(p0, p1, p2, distanceTol)) return false;\n\t\treturn this.isShallowSampled(p0, p1, i0, i2, distanceTol);\n\t},\n\tdeleteShallowConcavities: function () {\n\t\tvar index = 1;\n\t\tvar maxIndex = this._inputLine.length - 1;\n\t\tvar midIndex = this.findNextNonDeletedIndex(index);\n\t\tvar lastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\tvar isChanged = false;\n\t\twhile (lastIndex < this._inputLine.length) {\n\t\t\tvar isMiddleVertexDeleted = false;\n\t\t\tif (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n\t\t\t\tthis._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n\t\t\t\tisMiddleVertexDeleted = true;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\tif (isMiddleVertexDeleted) index = lastIndex; else index = midIndex;\n\t\t\tmidIndex = this.findNextNonDeletedIndex(index);\n\t\t\tlastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\t}\n\t\treturn isChanged;\n\t},\n\tisShallowConcavity: function (p0, p1, p2, distanceTol) {\n\t\tvar orientation = Orientation.index(p0, p1, p2);\n\t\tvar isAngleToSimplify = orientation === this._angleOrientation;\n\t\tif (!isAngleToSimplify) return false;\n\t\tvar dist = Distance.pointToSegment(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tisShallowSampled: function (p0, p2, i0, i2, distanceTol) {\n\t\tvar inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n\t\tif (inc <= 0) inc = 1;\n\t\tfor (var i = i0; i < i2; i += inc) {\n\t\t\tif (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisConcave: function (p0, p1, p2) {\n\t\tvar orientation = Orientation.index(p0, p1, p2);\n\t\tvar isConcave = orientation === this._angleOrientation;\n\t\treturn isConcave;\n\t},\n\tsimplify: function (distanceTol) {\n\t\tthis._distanceTol = Math.abs(distanceTol);\n\t\tif (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE;\n\t\tthis._isDeleted = new Array(this._inputLine.length).fill(null);\n\t\tvar isChanged = false;\n\t\tdo {\n\t\t\tisChanged = this.deleteShallowConcavities();\n\t\t} while (isChanged);\n\t\treturn this.collapseLine();\n\t},\n\tfindNextNonDeletedIndex: function (index) {\n\t\tvar next = index + 1;\n\t\twhile (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++;\n\t\treturn next;\n\t},\n\tisShallow: function (p0, p1, p2, distanceTol) {\n\t\tvar dist = Distance.pointToSegment(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tcollapseLine: function () {\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._inputLine.length; i++) {\n\t\t\tif (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i]);\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferInputLineSimplifier;\n\t}\n});\nBufferInputLineSimplifier.simplify = function (inputLine, distanceTol) {\n\tvar simp = new BufferInputLineSimplifier(inputLine);\n\treturn simp.simplify(distanceTol);\n};\nBufferInputLineSimplifier.INIT = 0;\nBufferInputLineSimplifier.DELETE = 1;\nBufferInputLineSimplifier.KEEP = 1;\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\n","import GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function OffsetSegmentString() {\n\tthis._ptList = null;\n\tthis._precisionModel = null;\n\tthis._minimimVertexDistance = 0.0;\n\tthis._ptList = new ArrayList();\n}\nextend(OffsetSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\tvar coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n\t\treturn coord;\n\t},\n\tsetPrecisionModel: function (precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t},\n\taddPt: function (pt) {\n\t\tvar bufPt = new Coordinate(pt);\n\t\tthis._precisionModel.makePrecise(bufPt);\n\t\tif (this.isRedundant(bufPt)) return null;\n\t\tthis._ptList.add(bufPt);\n\t},\n\treverse: function () {},\n\taddPts: function (pt, isForward) {\n\t\tif (isForward) {\n\t\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = pt.length - 1; i >= 0; i--) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisRedundant: function (pt) {\n\t\tif (this._ptList.size() < 1) return false;\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar ptDist = pt.distance(lastPt);\n\t\tif (ptDist < this._minimimVertexDistance) return true;\n\t\treturn false;\n\t},\n\ttoString: function () {\n\t\tvar fact = new GeometryFactory();\n\t\tvar line = fact.createLineString(this.getCoordinates());\n\t\treturn line.toString();\n\t},\n\tcloseRing: function () {\n\t\tif (this._ptList.size() < 1) return null;\n\t\tvar startPt = new Coordinate(this._ptList.get(0));\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar last2Pt = null;\n\t\tif (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2);\n\t\tif (startPt.equals(lastPt)) return null;\n\t\tthis._ptList.add(startPt);\n\t},\n\tsetMinimumVertexDistance: function (minimimVertexDistance) {\n\t\tthis._minimimVertexDistance = minimimVertexDistance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetSegmentString;\n\t}\n});\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n","import BufferParameters from './BufferParameters';\nimport NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport OffsetSegmentString from './OffsetSegmentString';\nimport LineSegment from '../../geom/LineSegment';\nimport Angle from '../../algorithm/Angle';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default function OffsetSegmentGenerator() {\n\tthis._maxCurveSegmentError = 0.0;\n\tthis._filletAngleQuantum = null;\n\tthis._closingSegLengthFactor = 1;\n\tthis._segList = null;\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tthis._li = null;\n\tthis._s0 = null;\n\tthis._s1 = null;\n\tthis._s2 = null;\n\tthis._seg0 = new LineSegment();\n\tthis._seg1 = new LineSegment();\n\tthis._offset0 = new LineSegment();\n\tthis._offset1 = new LineSegment();\n\tthis._side = 0;\n\tthis._hasNarrowConcaveAngle = false;\n\tlet precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n\tthis._li = new RobustLineIntersector();\n\tthis._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n\tif (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\n\tthis.init(distance);\n}\nextend(OffsetSegmentGenerator.prototype, {\n\taddNextSegment: function (p, addStartPoint) {\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._s2 = p;\n\t\tthis._seg0.setCoordinates(this._s0, this._s1);\n\t\tthis.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n\t\tthis._seg1.setCoordinates(this._s1, this._s2);\n\t\tthis.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n\t\tif (this._s1.equals(this._s2)) return null;\n\t\tvar orientation = Orientation.index(this._s0, this._s1, this._s2);\n\t\tvar outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT;\n\t\tif (orientation === 0) {\n\t\t\tthis.addCollinear(addStartPoint);\n\t\t} else if (outsideTurn) {\n\t\t\tthis.addOutsideTurn(orientation, addStartPoint);\n\t\t} else {\n\t\t\tthis.addInsideTurn(orientation, addStartPoint);\n\t\t}\n\t},\n\taddLineEndCap: function (p0, p1) {\n\t\tvar seg = new LineSegment(p0, p1);\n\t\tvar offsetL = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n\t\tvar offsetR = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tvar angle = Math.atan2(dy, dx);\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_FLAT:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tvar squareCapSideOffset = new Coordinate();\n\t\t\t\tsquareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n\t\t\t\tsquareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n\t\t\t\tvar squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n\t\t\t\tvar squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n\t\t\t\tthis._segList.addPt(squareCapLOffset);\n\t\t\t\tthis._segList.addPt(squareCapROffset);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar pts = this._segList.getCoordinates();\n\t\treturn pts;\n\t},\n\taddMitreJoin: function (p, offset0, offset1, distance) {\n\t\tvar isMitreWithinLimit = true;\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n\t\t\tvar mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n\t\t\tif (mitreRatio > this._bufParams.getMitreLimit()) isMitreWithinLimit = false;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {\n\t\t\t\tintPt = new Coordinate(0, 0);\n\t\t\t\tisMitreWithinLimit = false;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (isMitreWithinLimit) {\n\t\t\tthis._segList.addPt(intPt);\n\t\t} else {\n\t\t\tthis.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n\t\t}\n\t},\n\taddOutsideTurn: function (orientation, addStartPoint) {\n\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\tthis.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n\t\t} else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n\t\t\tthis.addBevelJoin(this._offset0, this._offset1);\n\t\t} else {\n\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\tthis.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t}\n\t},\n\tcreateSquare: function (p) {\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n\t\tthis._segList.closeRing();\n\t},\n\taddSegments: function (pt, isForward) {\n\t\tthis._segList.addPts(pt, isForward);\n\t},\n\taddFirstSegment: function () {\n\t\tthis._segList.addPt(this._offset1.p0);\n\t},\n\taddCornerFillet: function (p, p0, p1, direction, radius) {\n\t\tvar dx0 = p0.x - p.x;\n\t\tvar dy0 = p0.y - p.y;\n\t\tvar startAngle = Math.atan2(dy0, dx0);\n\t\tvar dx1 = p1.x - p.x;\n\t\tvar dy1 = p1.y - p.y;\n\t\tvar endAngle = Math.atan2(dy1, dx1);\n\t\tif (direction === Orientation.CLOCKWISE) {\n\t\t\tif (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\n\t\t} else {\n\t\t\tif (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\n\t\t}\n\t\tthis._segList.addPt(p0);\n\t\tthis.addDirectedFillet(p, startAngle, endAngle, direction, radius);\n\t\tthis._segList.addPt(p1);\n\t},\n\taddLastSegment: function () {\n\t\tthis._segList.addPt(this._offset1.p1);\n\t},\n\tinitSideSegments: function (s1, s2, side) {\n\t\tthis._s1 = s1;\n\t\tthis._s2 = s2;\n\t\tthis._side = side;\n\t\tthis._seg1.setCoordinates(s1, s2);\n\t\tthis.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n\t},\n\taddLimitedMitreJoin: function (offset0, offset1, distance, mitreLimit) {\n\t\tvar basePt = this._seg0.p1;\n\t\tvar ang0 = Angle.angle(basePt, this._seg0.p0);\n\t\tvar ang1 = Angle.angle(basePt, this._seg1.p1);\n\t\tvar angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n\t\tvar angDiffHalf = angDiff / 2;\n\t\tvar midAng = Angle.normalize(ang0 + angDiffHalf);\n\t\tvar mitreMidAng = Angle.normalize(midAng + Math.PI);\n\t\tvar mitreDist = mitreLimit * distance;\n\t\tvar bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n\t\tvar bevelHalfLen = distance - bevelDelta;\n\t\tvar bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n\t\tvar bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n\t\tvar bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n\t\tvar mitreMidLine = new LineSegment(basePt, bevelMidPt);\n\t\tvar bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n\t\tvar bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n\t\tif (this._side === Position.LEFT) {\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t} else {\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t}\n\t},\n\taddDirectedFillet: function (p, startAngle, endAngle, direction, radius) {\n\t\tvar directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1;\n\t\tvar totalAngle = Math.abs(startAngle - endAngle);\n\t\tvar nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n\t\tif (nSegs < 1) return null;\n\t\tvar initAngle = null, currAngleInc = null;\n\t\tinitAngle = 0.0;\n\t\tcurrAngleInc = totalAngle / nSegs;\n\t\tvar currAngle = initAngle;\n\t\tvar pt = new Coordinate();\n\t\twhile (currAngle < totalAngle) {\n\t\t\tvar angle = startAngle + directionFactor * currAngle;\n\t\t\tpt.x = p.x + radius * Math.cos(angle);\n\t\t\tpt.y = p.y + radius * Math.sin(angle);\n\t\t\tthis._segList.addPt(pt);\n\t\t\tcurrAngle += currAngleInc;\n\t\t}\n\t},\n\tcomputeOffsetSegment: function (seg, side, distance, offset) {\n\t\tvar sideSign = side === Position.LEFT ? 1 : -1;\n\t\tvar dx = seg.p1.x - seg.p0.x;\n\t\tvar dy = seg.p1.y - seg.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = sideSign * distance * dx / len;\n\t\tvar uy = sideSign * distance * dy / len;\n\t\toffset.p0.x = seg.p0.x - uy;\n\t\toffset.p0.y = seg.p0.y + ux;\n\t\toffset.p1.x = seg.p1.x - uy;\n\t\toffset.p1.y = seg.p1.y + ux;\n\t},\n\taddInsideTurn: function (orientation, addStartPoint) {\n\t\tthis._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis._segList.addPt(this._li.getIntersection(0));\n\t\t} else {\n\t\t\tthis._hasNarrowConcaveAngle = true;\n\t\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t} else {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t\tif (this._closingSegLengthFactor > 0) {\n\t\t\t\t\tvar mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid0);\n\t\t\t\t\tvar mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._segList.addPt(this._s1);\n\t\t\t\t}\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t}\n\t\t}\n\t},\n\tcreateCircle: function (p) {\n\t\tvar pt = new Coordinate(p.x + this._distance, p.y);\n\t\tthis._segList.addPt(pt);\n\t\tthis.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n\t\tthis._segList.closeRing();\n\t},\n\taddBevelJoin: function (offset0, offset1) {\n\t\tthis._segList.addPt(offset0.p1);\n\t\tthis._segList.addPt(offset1.p0);\n\t},\n\tinit: function (distance) {\n\t\tthis._distance = distance;\n\t\tthis._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n\t\tthis._segList = new OffsetSegmentString();\n\t\tthis._segList.setPrecisionModel(this._precisionModel);\n\t\tthis._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n\t},\n\taddCollinear: function (addStartPoint) {\n\t\tthis._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n\t\tvar numInt = this._li.getIntersectionNum();\n\t\tif (numInt >= 2) {\n\t\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t} else {\n\t\t\t\tthis.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance);\n\t\t\t}\n\t\t}\n\t},\n\tcloseRing: function () {\n\t\tthis._segList.closeRing();\n\t},\n\thasNarrowConcaveAngle: function () {\n\t\treturn this._hasNarrowConcaveAngle;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetSegmentGenerator;\n\t}\n});\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n","import BufferParameters from './BufferParameters';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator';\nexport default function OffsetCurveBuilder() {\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tlet precisionModel = arguments[0], bufParams = arguments[1];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n}\nextend(OffsetCurveBuilder.prototype, {\n\tgetOffsetCurve: function (inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance === 0.0) return null;\n\t\tvar isRightSide = distance < 0.0;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tthis.computeOffsetCurve(inputPts, isRightSide, segGen);\n\t\t}\n\t\tvar curvePts = segGen.getCoordinates();\n\t\tif (isRightSide) CoordinateArrays.reverse(curvePts);\n\t\treturn curvePts;\n\t},\n\tcomputeSingleSidedBufferCurve: function (inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tsegGen.addSegments(inputPts, true);\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tsegGen.addSegments(inputPts, false);\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.closeRing();\n\t},\n\tcomputeRingBufferCurve: function (inputPts, side, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (side === Position.RIGHT) distTol = -distTol;\n\t\tvar simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n = simp.length - 1;\n\t\tsegGen.initSideSegments(simp[n - 1], simp[0], side);\n\t\tfor (var i = 1; i <= n; i++) {\n\t\t\tvar addStartPoint = i !== 1;\n\t\t\tsegGen.addNextSegment(simp[i], addStartPoint);\n\t\t}\n\t\tsegGen.closeRing();\n\t},\n\tcomputeLineBufferCurve: function (inputPts, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n1 = simp1.length - 1;\n\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\tvar n2 = simp2.length - 1;\n\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp2[1], simp2[0]);\n\t\tsegGen.closeRing();\n\t},\n\tcomputePointCurve: function (pt, segGen) {\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tsegGen.createCircle(pt);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tsegGen.createSquare(pt);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetLineCurve: function (inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance < 0.0 && !this._bufParams.isSingleSided()) return null;\n\t\tif (distance === 0.0) return null;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tif (this._bufParams.isSingleSided()) {\n\t\t\t\tvar isRightSide = distance < 0.0;\n\t\t\t\tthis.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n\t\t\t} else this.computeLineBufferCurve(inputPts, segGen);\n\t\t}\n\t\tvar lineCoord = segGen.getCoordinates();\n\t\treturn lineCoord;\n\t},\n\tgetBufferParameters: function () {\n\t\treturn this._bufParams;\n\t},\n\tsimplifyTolerance: function (bufDistance) {\n\t\treturn bufDistance * this._bufParams.getSimplifyFactor();\n\t},\n\tgetRingCurve: function (inputPts, side, distance) {\n\t\tthis._distance = distance;\n\t\tif (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\n\t\tif (distance === 0.0) {\n\t\t\treturn OffsetCurveBuilder.copyCoordinates(inputPts);\n\t\t}\n\t\tvar segGen = this.getSegGen(distance);\n\t\tthis.computeRingBufferCurve(inputPts, side, segGen);\n\t\treturn segGen.getCoordinates();\n\t},\n\tcomputeOffsetCurve: function (inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t},\n\tgetSegGen: function (distance) {\n\t\treturn new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetCurveBuilder;\n\t}\n});\nOffsetCurveBuilder.copyCoordinates = function (pts) {\n\tvar copy = new Array(pts.length).fill(null);\n\tfor (var i = 0; i < copy.length; i++) {\n\t\tcopy[i] = new Coordinate(pts[i]);\n\t}\n\treturn copy;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport Collections from '../../../../../java/util/Collections';\nimport DirectedEdge from '../../geomgraph/DirectedEdge';\nimport LineSegment from '../../geom/LineSegment';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default function SubgraphDepthLocater() {\n\tthis._subgraphs = null;\n\tthis._seg = new LineSegment();\n\tlet subgraphs = arguments[0];\n\tthis._subgraphs = subgraphs;\n}\nextend(SubgraphDepthLocater.prototype, {\n\tfindStabbedSegments: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet stabbingRayLeftPt = arguments[0];\n\t\t\tvar stabbedSegments = new ArrayList();\n\t\t\tfor (var i = this._subgraphs.iterator(); i.hasNext(); ) {\n\t\t\t\tvar bsg = i.next();\n\t\t\t\tvar env = bsg.getEnvelope();\n\t\t\t\tif (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\n\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n\t\t\t}\n\t\t\treturn stabbedSegments;\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tthis._seg.p0 = pts[i];\n\t\t\t\t\tthis._seg.p1 = pts[i + 1];\n\t\t\t\t\tif (this._seg.p0.y > this._seg.p1.y) this._seg.reverse();\n\t\t\t\t\tvar maxx = Math.max(this._seg.p0.x, this._seg.p1.x);\n\t\t\t\t\tif (maxx < stabbingRayLeftPt.x) continue;\n\t\t\t\t\tif (this._seg.isHorizontal()) continue;\n\t\t\t\t\tif (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue;\n\t\t\t\t\tif (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue;\n\t\t\t\t\tvar depth = dirEdge.getDepth(Position.LEFT);\n\t\t\t\t\tif (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\n\t\t\t\t\tvar ds = new DepthSegment(this._seg, depth);\n\t\t\t\t\tstabbedSegments.add(ds);\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\t\t\t\tvar de = i.next();\n\t\t\t\t\tif (!de.isForward()) continue;\n\t\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDepth: function (p) {\n\t\tvar stabbedSegments = this.findStabbedSegments(p);\n\t\tif (stabbedSegments.size() === 0) return 0;\n\t\tvar ds = Collections.min(stabbedSegments);\n\t\treturn ds._leftDepth;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SubgraphDepthLocater;\n\t}\n});\nfunction DepthSegment() {\n\tthis._upwardSeg = null;\n\tthis._leftDepth = null;\n\tlet seg = arguments[0], depth = arguments[1];\n\tthis._upwardSeg = new LineSegment(seg);\n\tthis._leftDepth = depth;\n}\nextend(DepthSegment.prototype, {\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\tif (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1;\n\t\tif (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1;\n\t\tvar orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\torientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\treturn this._upwardSeg.compareTo(other._upwardSeg);\n\t},\n\tcompareX: function (seg0, seg1) {\n\t\tvar compare0 = seg0.p0.compareTo(seg1.p0);\n\t\tif (compare0 !== 0) return compare0;\n\t\treturn seg0.p1.compareTo(seg1.p1);\n\t},\n\ttoString: function () {\n\t\treturn this._upwardSeg.toString();\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn DepthSegment;\n\t}\n});\nSubgraphDepthLocater.DepthSegment = DepthSegment;\n","import Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport Position from '../../geomgraph/Position';\nimport Point from '../../geom/Point';\nimport NodedSegmentString from '../../noding/NodedSegmentString';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport Label from '../../geomgraph/Label';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Distance from '../../algorithm/Distance';\nimport MultiLineString from '../../geom/MultiLineString';\nimport Triangle from '../../geom/Triangle';\nexport default function OffsetCurveSetBuilder() {\n\tthis._inputGeom = null;\n\tthis._distance = null;\n\tthis._curveBuilder = null;\n\tthis._curveList = new ArrayList();\n\tlet inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2];\n\tthis._inputGeom = inputGeom;\n\tthis._distance = distance;\n\tthis._curveBuilder = curveBuilder;\n}\nextend(OffsetCurveSetBuilder.prototype, {\n\taddPoint: function (p) {\n\t\tif (this._distance <= 0.0) return null;\n\t\tvar coord = p.getCoordinates();\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddPolygon: function (p) {\n\t\tvar offsetDistance = this._distance;\n\t\tvar offsetSide = Position.LEFT;\n\t\tif (this._distance < 0.0) {\n\t\t\toffsetDistance = -this._distance;\n\t\t\toffsetSide = Position.RIGHT;\n\t\t}\n\t\tvar shell = p.getExteriorRing();\n\t\tvar shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n\t\tif (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null;\n\t\tif (this._distance <= 0.0 && shellCoord.length < 3) return null;\n\t\tthis.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n\t\t\tif (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue;\n\t\t\tthis.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\tisTriangleErodedCompletely: function (triangleCoord, bufferDistance) {\n\t\tvar tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n\t\tvar inCentre = tri.inCentre();\n\t\tvar distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1);\n\t\treturn distToCentre < Math.abs(bufferDistance);\n\t},\n\taddLineString: function (line) {\n\t\tif (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddCurve: function (coord, leftLoc, rightLoc) {\n\t\tif (coord === null || coord.length < 2) return null;\n\t\tvar e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n\t\tthis._curveList.add(e);\n\t},\n\tgetCurves: function () {\n\t\tthis.add(this._inputGeom);\n\t\treturn this._curveList;\n\t},\n\taddPolygonRing: function (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n\t\tif (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\n\t\tvar leftLoc = cwLeftLoc;\n\t\tvar rightLoc = cwRightLoc;\n\t\tif (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n\t\t\tleftLoc = cwRightLoc;\n\t\t\trightLoc = cwLeftLoc;\n\t\t\tside = Position.opposite(side);\n\t\t}\n\t\tvar curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n\t\tthis.addCurve(curve, leftLoc, rightLoc);\n\t},\n\tadd: function (g) {\n\t\tif (g.isEmpty()) return null;\n\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t},\n\tisErodedCompletely: function (ring, bufferDistance) {\n\t\tvar ringCoord = ring.getCoordinates();\n\t\tvar minDiam = 0.0;\n\t\tif (ringCoord.length < 4) return bufferDistance < 0;\n\t\tif (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\n\t\tvar env = ring.getEnvelopeInternal();\n\t\tvar envMinDimension = Math.min(env.getHeight(), env.getWidth());\n\t\tif (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\n\t\treturn false;\n\t},\n\taddCollection: function (gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetCurveSetBuilder;\n\t}\n});\n","import Location from '../../geom/Location';\nimport Polygon from '../../geom/Polygon';\nimport PointLocation from '../PointLocation';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport extend from '../../../../../extend';\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../../geom/GeometryCollection';\nexport default function SimplePointInAreaLocator() {\n\tthis._geom = null;\n\tlet geom = arguments[0];\n\tthis._geom = geom;\n}\nextend(SimplePointInAreaLocator.prototype, {\n\tlocate: function (p) {\n\t\treturn SimplePointInAreaLocator.locate(p, this._geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function () {\n\t\treturn SimplePointInAreaLocator;\n\t}\n});\nSimplePointInAreaLocator.locatePointInPolygon = function (p, poly) {\n\tif (poly.isEmpty()) return Location.EXTERIOR;\n\tvar shell = poly.getExteriorRing();\n\tvar shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell);\n\tif (shellLoc !== Location.INTERIOR) return shellLoc;\n\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\tvar hole = poly.getInteriorRingN(i);\n\t\tvar holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole);\n\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t}\n\treturn Location.INTERIOR;\n};\nSimplePointInAreaLocator.locatePointInRing = function (p, ring) {\n\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\treturn PointLocation.locateInRing(p, ring.getCoordinates());\n};\nSimplePointInAreaLocator.containsPointInPolygon = function (p, poly) {\n\treturn Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly);\n};\nSimplePointInAreaLocator.locateInGeometry = function (p, geom) {\n\tif (geom instanceof Polygon) {\n\t\treturn SimplePointInAreaLocator.locatePointInPolygon(p, geom);\n\t} else if (geom instanceof GeometryCollection) {\n\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\twhile (geomi.hasNext()) {\n\t\t\tvar g2 = geomi.next();\n\t\t\tif (g2 !== geom) {\n\t\t\t\tvar loc = SimplePointInAreaLocator.locateInGeometry(p, g2);\n\t\t\t\tif (loc !== Location.EXTERIOR) return loc;\n\t\t\t}\n\t\t}\n\t}\n\treturn Location.EXTERIOR;\n};\nSimplePointInAreaLocator.locate = function (p, geom) {\n\tif (geom.isEmpty()) return Location.EXTERIOR;\n\treturn SimplePointInAreaLocator.locateInGeometry(p, geom);\n};\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeEndStar() {\n\tthis._edgeMap = new TreeMap();\n\tthis._edgeList = null;\n\tthis._ptInAreaLocation = [Location.NONE, Location.NONE];\n}\nextend(EdgeEndStar.prototype, {\n\tgetNextCW: function (ee) {\n\t\tthis.getEdges();\n\t\tvar i = this._edgeList.indexOf(ee);\n\t\tvar iNextCW = i - 1;\n\t\tif (i === 0) iNextCW = this._edgeList.size() - 1;\n\t\treturn this._edgeList.get(iNextCW);\n\t},\n\tpropagateSideLabels: function (geomIndex) {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\n\t\t\tif (label.isArea(geomIndex)) {\n\t\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\t\tif (rightLoc !== Location.NONE) {\n\t\t\t\t\tif (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\n\t\t\t\t\tif (leftLoc === Location.NONE) {\n\t\t\t\t\t\tAssert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\n\t\t\t\t\t}\n\t\t\t\t\tcurrLoc = leftLoc;\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.RIGHT, currLoc);\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.LEFT, currLoc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\tprint: function (out) {\n\t\tSystem.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\te.print(out);\n\t\t}\n\t},\n\tisAreaLabelsConsistent: function (geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n\t\treturn this.checkAreaLabelsConsistent(0);\n\t},\n\tcheckAreaLabelsConsistent: function (geomIndex) {\n\t\tvar edges = this.getEdges();\n\t\tif (edges.size() <= 0) return true;\n\t\tvar lastEdgeIndex = edges.size() - 1;\n\t\tvar startLabel = edges.get(lastEdgeIndex).getLabel();\n\t\tvar startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n\t\tAssert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tAssert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\n\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (leftLoc === rightLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rightLoc !== currLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcurrLoc = leftLoc;\n\t\t}\n\t\treturn true;\n\t},\n\tfindIndex: function (eSearch) {\n\t\tthis.iterator();\n\t\tfor (var i = 0; i < this._edgeList.size(); i++) {\n\t\t\tvar e = this._edgeList.get(i);\n\t\t\tif (e === eSearch) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function () {\n\t\treturn this.getEdges().iterator();\n\t},\n\tgetEdges: function () {\n\t\tif (this._edgeList === null) {\n\t\t\tthis._edgeList = new ArrayList(this._edgeMap.values());\n\t\t}\n\t\treturn this._edgeList;\n\t},\n\tgetLocation: function (geomIndex, p, geom) {\n\t\tif (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n\t\t\tthis._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n\t\t}\n\t\treturn this._ptInAreaLocation[geomIndex];\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tbuf.append(\"\\n\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tbuf.append(e);\n\t\t\tbuf.append(\"\\n\");\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tcomputeEdgeEndLabels: function (boundaryNodeRule) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.computeLabel(boundaryNodeRule);\n\t\t}\n\t},\n\tcomputeLabelling: function (geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n\t\tthis.propagateSideLabels(0);\n\t\tthis.propagateSideLabels(1);\n\t\tvar hasDimensionalCollapseEdge = [false, false];\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\n\t\t\t}\n\t\t}\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isAnyNull(geomi)) {\n\t\t\t\t\tvar loc = Location.NONE;\n\t\t\t\t\tif (hasDimensionalCollapseEdge[geomi]) {\n\t\t\t\t\t\tloc = Location.EXTERIOR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p = e.getCoordinate();\n\t\t\t\t\t\tloc = this.getLocation(geomi, p, geomGraph);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.setAllLocationsIfNull(geomi, loc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDegree: function () {\n\t\treturn this._edgeMap.size();\n\t},\n\tinsertEdgeEnd: function (e, obj) {\n\t\tthis._edgeMap.put(e, obj);\n\t\tthis._edgeList = null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndStar;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport EdgeEndStar from './EdgeEndStar';\nimport System from '../../../../java/lang/System';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function DirectedEdgeStar() {\n\tEdgeEndStar.apply(this);\n\tthis._resultAreaEdgeList = null;\n\tthis._label = null;\n\tthis._SCANNING_FOR_INCOMING = 1;\n\tthis._LINKING_TO_OUTGOING = 2;\n}\ninherits(DirectedEdgeStar, EdgeEndStar);\nextend(DirectedEdgeStar.prototype, {\n\tlinkResultDirectedEdges: function () {\n\t\tthis.getResultAreaEdges();\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.getLabel().isArea()) continue;\n\t\t\tif (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (!nextIn.isInResult()) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (!nextOut.isInResult()) continue;\n\t\t\t\t\tincoming.setNext(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tif (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\n\t\t\tAssert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNext(firstOut);\n\t\t}\n\t},\n\tinsert: function (ee) {\n\t\tvar de = ee;\n\t\tthis.insertEdgeEnd(de, de);\n\t},\n\tgetRightmostEdge: function () {\n\t\tvar edges = this.getEdges();\n\t\tvar size = edges.size();\n\t\tif (size < 1) return null;\n\t\tvar de0 = edges.get(0);\n\t\tif (size === 1) return de0;\n\t\tvar deLast = edges.get(size - 1);\n\t\tvar quad0 = de0.getQuadrant();\n\t\tvar quad1 = deLast.getQuadrant();\n\t\tif (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0; else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast; else {\n\t\t\tvar nonHorizontalEdge = null;\n\t\t\tif (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\n\t\treturn null;\n\t},\n\tprint: function (out) {\n\t\tSystem.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tout.print(\"out \");\n\t\t\tde.print(out);\n\t\t\tout.println();\n\t\t\tout.print(\"in \");\n\t\t\tde.getSym().print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\tgetResultAreaEdges: function () {\n\t\tif (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList;\n\t\tthis._resultAreaEdgeList = new ArrayList();\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de);\n\t\t}\n\t\treturn this._resultAreaEdgeList;\n\t},\n\tupdateLabelling: function (nodeLabel) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n\t\t\tlabel.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n\t\t}\n\t},\n\tlinkAllDirectedEdges: function () {\n\t\tthis.getEdges();\n\t\tvar prevOut = null;\n\t\tvar firstIn = null;\n\t\tfor (var i = this._edgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._edgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstIn === null) firstIn = nextIn;\n\t\t\tif (prevOut !== null) nextIn.setNext(prevOut);\n\t\t\tprevOut = nextOut;\n\t\t}\n\t\tfirstIn.setNext(prevOut);\n\t},\n\tcomputeDepths: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar edgeIndex = this.findIndex(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tvar startDepth = de.getDepth(Position.LEFT);\n\t\t\tvar targetLastDepth = de.getDepth(Position.RIGHT);\n\t\t\tvar nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n\t\t\tvar lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n\t\t\tif (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2];\n\t\t\tvar currDepth = startDepth;\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\t\tvar nextDe = this._edgeList.get(i);\n\t\t\t\tvar label = nextDe.getLabel();\n\t\t\t\tnextDe.setEdgeDepths(Position.RIGHT, currDepth);\n\t\t\t\tcurrDepth = nextDe.getDepth(Position.LEFT);\n\t\t\t}\n\t\t\treturn currDepth;\n\t\t}\n\t},\n\tmergeSymLabels: function () {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.merge(de.getSym().getLabel());\n\t\t}\n\t},\n\tlinkMinimalDirectedEdges: function (er) {\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (nextIn.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (nextOut.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming.setNextMin(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tAssert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\n\t\t\tAssert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNextMin(firstOut);\n\t\t}\n\t},\n\tgetOutgoingDegree: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.isInResult()) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet er = arguments[0];\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.getEdgeRing() === er) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t}\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tfindCoveredLineEdges: function () {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.isLineEdge()) {\n\t\t\t\tif (nextOut.isInResult()) {\n\t\t\t\t\tstartLoc = Location.INTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (nextIn.isInResult()) {\n\t\t\t\t\tstartLoc = Location.EXTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (nextOut.isLineEdge()) {\n\t\t\t\tnextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\n\t\t\t} else {\n\t\t\t\tif (nextOut.isInResult()) currLoc = Location.EXTERIOR;\n\t\t\t\tif (nextIn.isInResult()) currLoc = Location.INTERIOR;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function (geom) {\n\t\tEdgeEndStar.prototype.computeLabelling.call(this, geom);\n\t\tthis._label = new Label(Location.NONE);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tvar e = ee.getEdge();\n\t\t\tvar eLabel = e.getLabel();\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar eLoc = eLabel.getLocation(i);\n\t\t\t\tif (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar';\nimport Node from '../../geomgraph/Node';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default function OverlayNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(OverlayNodeFactory, NodeFactory);\nextend(OverlayNodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new Node(coord, new DirectedEdgeStar());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OverlayNodeFactory;\n\t}\n});\n","import extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nexport default function OrientedCoordinateArray() {\n\tthis._pts = null;\n\tthis._orientation = null;\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n\tthis._orientation = OrientedCoordinateArray.orientation(pts);\n}\nextend(OrientedCoordinateArray.prototype, {\n\tcompareTo: function (o1) {\n\t\tvar oca = o1;\n\t\tvar comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n\t\treturn comp;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn OrientedCoordinateArray;\n\t}\n});\nOrientedCoordinateArray.orientation = function (pts) {\n\treturn CoordinateArrays.increasingDirection(pts) === 1;\n};\nOrientedCoordinateArray.compareOriented = function (pts1, orientation1, pts2, orientation2) {\n\tvar dir1 = orientation1 ? 1 : -1;\n\tvar dir2 = orientation2 ? 1 : -1;\n\tvar limit1 = orientation1 ? pts1.length : -1;\n\tvar limit2 = orientation2 ? pts2.length : -1;\n\tvar i1 = orientation1 ? 0 : pts1.length - 1;\n\tvar i2 = orientation2 ? 0 : pts2.length - 1;\n\tvar comp = 0;\n\twhile (true) {\n\t\tvar compPt = pts1[i1].compareTo(pts2[i2]);\n\t\tif (compPt !== 0) return compPt;\n\t\ti1 += dir1;\n\t\ti2 += dir2;\n\t\tvar done1 = i1 === limit1;\n\t\tvar done2 = i2 === limit2;\n\t\tif (done1 && !done2) return -1;\n\t\tif (!done1 && done2) return 1;\n\t\tif (done1 && done2) return 0;\n\t}\n};\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeList() {\n\tthis._edges = new ArrayList();\n\tthis._ocaMap = new TreeMap();\n}\nextend(EdgeList.prototype, {\n\tprint: function (out) {\n\t\tout.print(\"MULTILINESTRING ( \");\n\t\tfor (var j = 0; j < this._edges.size(); j++) {\n\t\t\tvar e = this._edges.get(j);\n\t\t\tif (j > 0) out.print(\",\");\n\t\t\tout.print(\"(\");\n\t\t\tvar pts = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tif (i > 0) out.print(\",\");\n\t\t\t\tout.print(pts[i].x + \" \" + pts[i].y);\n\t\t\t}\n\t\t\tout.println(\")\");\n\t\t}\n\t\tout.print(\")  \");\n\t},\n\taddAll: function (edgeColl) {\n\t\tfor (var i = edgeColl.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t},\n\tfindEdgeIndex: function (e) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tif (this._edges.get(i).equals(e)) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function () {\n\t\treturn this._edges.iterator();\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tget: function (i) {\n\t\treturn this._edges.get(i);\n\t},\n\tfindEqualEdge: function (e) {\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tvar matchEdge = this._ocaMap.get(oca);\n\t\treturn matchEdge;\n\t},\n\tadd: function (e) {\n\t\tthis._edges.add(e);\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tthis._ocaMap.put(oca, e);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeList;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function SegmentIntersector() {}\nextend(SegmentIntersector.prototype, {\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {},\n\tisDone: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentIntersector;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nexport default function IntersectionAdder() {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._hasInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numInteriorIntersections = 0;\n\tthis.numProperIntersections = 0;\n\tthis.numTests = 0;\n\tlet li = arguments[0];\n\tthis._li = li;\n}\nextend(IntersectionAdder.prototype, {\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.size() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function () {\n\t\treturn this._properIntersectionPoint;\n\t},\n\thasProperInteriorIntersection: function () {\n\t\treturn this._hasProperInterior;\n\t},\n\tgetLineIntersector: function () {\n\t\treturn this._li;\n\t},\n\thasProperIntersection: function () {\n\t\treturn this._hasProper;\n\t},\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis.numIntersections++;\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis.numInteriorIntersections++;\n\t\t\t\tthis._hasInterior = true;\n\t\t\t}\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis.numProperIntersections++;\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tthis._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\thasIntersection: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\thasInteriorIntersection: function () {\n\t\treturn this._hasInterior;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn IntersectionAdder;\n\t}\n});\nIntersectionAdder.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n","import Location from '../../geom/Location';\nimport BufferSubgraph from './BufferSubgraph';\nimport PolygonBuilder from '../overlay/PolygonBuilder';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport MCIndexNoder from '../../noding/MCIndexNoder';\nimport OffsetCurveBuilder from './OffsetCurveBuilder';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport SubgraphDepthLocater from './SubgraphDepthLocater';\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport IntersectionAdder from '../../noding/IntersectionAdder';\nimport Edge from '../../geomgraph/Edge';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function BufferBuilder() {\n\tthis._bufParams = null;\n\tthis._workingPrecisionModel = null;\n\tthis._workingNoder = null;\n\tthis._geomFact = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tlet bufParams = arguments[0];\n\tthis._bufParams = bufParams;\n}\nextend(BufferBuilder.prototype, {\n\tsetWorkingPrecisionModel: function (pm) {\n\t\tthis._workingPrecisionModel = pm;\n\t},\n\tinsertUniqueEdge: function (e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t\tvar mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n\t\t\tvar existingDelta = existingEdge.getDepthDelta();\n\t\t\tvar newDelta = existingDelta + mergeDelta;\n\t\t\texistingEdge.setDepthDelta(newDelta);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t\te.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n\t\t}\n\t},\n\tbuildSubgraphs: function (subgraphList, polyBuilder) {\n\t\tvar processedGraphs = new ArrayList();\n\t\tfor (var i = subgraphList.iterator(); i.hasNext(); ) {\n\t\t\tvar subgraph = i.next();\n\t\t\tvar p = subgraph.getRightmostCoordinate();\n\t\t\tvar locater = new SubgraphDepthLocater(processedGraphs);\n\t\t\tvar outsideDepth = locater.getDepth(p);\n\t\t\tsubgraph.computeDepth(outsideDepth);\n\t\t\tsubgraph.findResultEdges();\n\t\t\tprocessedGraphs.add(subgraph);\n\t\t\tpolyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n\t\t}\n\t},\n\tcreateSubgraphs: function (graph) {\n\t\tvar subgraphList = new ArrayList();\n\t\tfor (var i = graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isVisited()) {\n\t\t\t\tvar subgraph = new BufferSubgraph();\n\t\t\t\tsubgraph.create(node);\n\t\t\t\tsubgraphList.add(subgraph);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(subgraphList, Collections.reverseOrder());\n\t\treturn subgraphList;\n\t},\n\tcreateEmptyResultGeometry: function () {\n\t\tvar emptyGeom = this._geomFact.createPolygon();\n\t\treturn emptyGeom;\n\t},\n\tgetNoder: function (precisionModel) {\n\t\tif (this._workingNoder !== null) return this._workingNoder;\n\t\tvar noder = new MCIndexNoder();\n\t\tvar li = new RobustLineIntersector();\n\t\tli.setPrecisionModel(precisionModel);\n\t\tnoder.setSegmentIntersector(new IntersectionAdder(li));\n\t\treturn noder;\n\t},\n\tbuffer: function (g, distance) {\n\t\tvar precisionModel = this._workingPrecisionModel;\n\t\tif (precisionModel === null) precisionModel = g.getPrecisionModel();\n\t\tthis._geomFact = g.getFactory();\n\t\tvar curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n\t\tvar curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n\t\tvar bufferSegStrList = curveSetBuilder.getCurves();\n\t\tif (bufferSegStrList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tthis.computeNodedEdges(bufferSegStrList, precisionModel);\n\t\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tvar subgraphList = this.createSubgraphs(this._graph);\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tthis.buildSubgraphs(subgraphList, polyBuilder);\n\t\tvar resultPolyList = polyBuilder.getPolygons();\n\t\tif (resultPolyList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tvar resultGeom = this._geomFact.buildGeometry(resultPolyList);\n\t\treturn resultGeom;\n\t},\n\tcomputeNodedEdges: function (bufferSegStrList, precisionModel) {\n\t\tvar noder = this.getNoder(precisionModel);\n\t\tnoder.computeNodes(bufferSegStrList);\n\t\tvar nodedSegStrings = noder.getNodedSubstrings();\n\t\tfor (var i = nodedSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar segStr = i.next();\n\t\t\tvar pts = segStr.getCoordinates();\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\n\t\t\tvar oldLabel = segStr.getData();\n\t\t\tvar edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n\t\t\tthis.insertUniqueEdge(edge);\n\t\t}\n\t},\n\tsetNoder: function (noder) {\n\t\tthis._workingNoder = noder;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferBuilder;\n\t}\n});\nBufferBuilder.depthDelta = function (label) {\n\tvar lLoc = label.getLocation(0, Position.LEFT);\n\tvar rLoc = label.getLocation(0, Position.RIGHT);\n\tif (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\n\treturn 0;\n};\nBufferBuilder.convertSegStrings = function (it) {\n\tvar fact = new GeometryFactory();\n\tvar lines = new ArrayList();\n\twhile (it.hasNext()) {\n\t\tvar ss = it.next();\n\t\tvar line = fact.createLineString(ss.getCoordinates());\n\t\tlines.add(line);\n\t}\n\treturn fact.buildGeometry(lines);\n};\n","import GeometryFactory from '../geom/GeometryFactory';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nexport default function NodingValidator() {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tlet segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n}\nextend(NodingValidator.prototype, {\n\tcheckEndPtVertexIntersections: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[0], this._segStrings);\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet testPt = arguments[0], segStrings = arguments[1];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tfor (var j = 1; j < pts.length - 1; j++) {\n\t\t\t\t\tif (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckInteriorIntersections: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss0 = i.next();\n\t\t\t\tfor (var j = this._segStrings.iterator(); j.hasNext(); ) {\n\t\t\t\t\tvar ss1 = j.next();\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, ss1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ss0 = arguments[0], ss1 = arguments[1];\n\t\t\tvar pts0 = ss0.getCoordinates();\n\t\t\tvar pts1 = ss1.getCoordinates();\n\t\t\tfor (var i0 = 0; i0 < pts0.length - 1; i0++) {\n\t\t\t\tfor (var i1 = 0; i1 < pts1.length - 1; i1++) {\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, i0, ss1, i1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3];\n\t\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\t\tif (this._li.hasIntersection()) {\n\t\t\t\tif (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n\t\t\t\t\tthrow new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckValid: function () {\n\t\tthis.checkEndPtVertexIntersections();\n\t\tthis.checkInteriorIntersections();\n\t\tthis.checkCollapses();\n\t},\n\tcheckCollapses: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.checkCollapses(ss);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet ss = arguments[0];\n\t\t\tvar pts = ss.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length - 2; i++) {\n\t\t\t\tthis.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\n\t\t\t}\n\t\t}\n\t},\n\thasInteriorIntersection: function (li, p0, p1) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tvar intPt = li.getIntersection(i);\n\t\t\tif (!(intPt.equals(p0) || intPt.equals(p1))) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tcheckCollapse: function (p0, p1, p2) {\n\t\tif (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodingValidator;\n\t}\n});\nNodingValidator.fact = new GeometryFactory();\n","import Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nexport default function HotPixel() {\n\tthis._li = null;\n\tthis._pt = null;\n\tthis._originalPt = null;\n\tthis._ptScaled = null;\n\tthis._p0Scaled = null;\n\tthis._p1Scaled = null;\n\tthis._scaleFactor = null;\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tthis._corner = new Array(4).fill(null);\n\tthis._safeEnv = null;\n\tlet pt = arguments[0], scaleFactor = arguments[1], li = arguments[2];\n\tthis._originalPt = pt;\n\tthis._pt = pt;\n\tthis._scaleFactor = scaleFactor;\n\tthis._li = li;\n\tif (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\n\tif (scaleFactor !== 1.0) {\n\t\tthis._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n\t\tthis._p0Scaled = new Coordinate();\n\t\tthis._p1Scaled = new Coordinate();\n\t}\n\tthis.initCorners(this._pt);\n}\nextend(HotPixel.prototype, {\n\tintersectsScaled: function (p0, p1) {\n\t\tvar segMinx = Math.min(p0.x, p1.x);\n\t\tvar segMaxx = Math.max(p0.x, p1.x);\n\t\tvar segMiny = Math.min(p0.y, p1.y);\n\t\tvar segMaxy = Math.max(p0.y, p1.y);\n\t\tvar isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n\t\tif (isOutsidePixelEnv) return false;\n\t\tvar intersects = this.intersectsToleranceSquare(p0, p1);\n\t\tAssert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\n\t\treturn intersects;\n\t},\n\tinitCorners: function (pt) {\n\t\tvar tolerance = 0.5;\n\t\tthis._minx = pt.x - tolerance;\n\t\tthis._maxx = pt.x + tolerance;\n\t\tthis._miny = pt.y - tolerance;\n\t\tthis._maxy = pt.y + tolerance;\n\t\tthis._corner[0] = new Coordinate(this._maxx, this._maxy);\n\t\tthis._corner[1] = new Coordinate(this._minx, this._maxy);\n\t\tthis._corner[2] = new Coordinate(this._minx, this._miny);\n\t\tthis._corner[3] = new Coordinate(this._maxx, this._miny);\n\t},\n\tintersects: function (p0, p1) {\n\t\tif (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\n\t\tthis.copyScaled(p0, this._p0Scaled);\n\t\tthis.copyScaled(p1, this._p1Scaled);\n\t\treturn this.intersectsScaled(this._p0Scaled, this._p1Scaled);\n\t},\n\tscale: function (val) {\n\t\treturn Math.round(val * this._scaleFactor);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._originalPt;\n\t},\n\tcopyScaled: function (p, pScaled) {\n\t\tpScaled.x = this.scale(p.x);\n\t\tpScaled.y = this.scale(p.y);\n\t},\n\tgetSafeEnvelope: function () {\n\t\tif (this._safeEnv === null) {\n\t\t\tvar safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n\t\t\tthis._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n\t\t}\n\t\treturn this._safeEnv;\n\t},\n\tintersectsPixelClosure: function (p0, p1) {\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tintersectsToleranceSquare: function (p0, p1) {\n\t\tvar intersectsLeft = false;\n\t\tvar intersectsBottom = false;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.isProper()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsLeft = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsBottom = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (intersectsLeft && intersectsBottom) return true;\n\t\tif (p0.equals(this._pt)) return true;\n\t\tif (p1.equals(this._pt)) return true;\n\t\treturn false;\n\t},\n\taddSnappedNode: function (segStr, segIndex) {\n\t\tvar p0 = segStr.getCoordinate(segIndex);\n\t\tvar p1 = segStr.getCoordinate(segIndex + 1);\n\t\tif (this.intersects(p0, p1)) {\n\t\t\tsegStr.addIntersection(this.getCoordinate(), segIndex);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HotPixel;\n\t}\n});\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction';\nimport MonotoneChain from '../../index/chain/MonotoneChain';\nimport ItemVisitor from '../../index/ItemVisitor';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function MCIndexPointSnapper() {\n\tthis._index = null;\n\tlet index = arguments[0];\n\tthis._index = index;\n}\nextend(MCIndexPointSnapper.prototype, {\n\tsnap: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet hotPixel = arguments[0];\n\t\t\treturn this.snap(hotPixel, null, -1);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\t\t\tvar pixelEnv = hotPixel.getSafeEnvelope();\n\t\t\tvar hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex);\n\t\t\tthis._index.query(pixelEnv, {\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [ItemVisitor];\n\t\t\t\t},\n\t\t\t\tvisitItem: function (item) {\n\t\t\t\t\tvar testChain = item;\n\t\t\t\t\ttestChain.select(pixelEnv, hotPixelSnapAction);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn hotPixelSnapAction.isNodeAdded();\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexPointSnapper;\n\t}\n});\nfunction HotPixelSnapAction() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis._hotPixel = null;\n\tthis._parentEdge = null;\n\tthis._hotPixelVertexIndex = null;\n\tthis._isNodeAdded = false;\n\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\tthis._hotPixel = hotPixel;\n\tthis._parentEdge = parentEdge;\n\tthis._hotPixelVertexIndex = hotPixelVertexIndex;\n}\ninherits(HotPixelSnapAction, MonotoneChainSelectAction);\nextend(HotPixelSnapAction.prototype, {\n\tisNodeAdded: function () {\n\t\treturn this._isNodeAdded;\n\t},\n\tselect: function () {\n\t\tif (arguments.length === 2 && (Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain)) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tvar ss = mc.getContext();\n\t\t\tif (this._parentEdge !== null) {\n\t\t\t\tif (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) return null;\n\t\t\t}\n\t\t\tthis._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HotPixelSnapAction;\n\t}\n});\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function InteriorIntersectionFinderAdder() {\n\tthis._li = null;\n\tthis._interiorIntersections = null;\n\tlet li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersections = new ArrayList();\n}\nextend(InteriorIntersectionFinderAdder.prototype, {\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tfor (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n\t\t\t\t\tthis._interiorIntersections.add(this._li.getIntersection(intIndex));\n\t\t\t\t}\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t}\n\t\t}\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\tgetInteriorIntersections: function () {\n\t\treturn this._interiorIntersections;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorIntersectionFinderAdder;\n\t}\n});\n","import NodingValidator from '../NodingValidator';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport Noder from '../Noder';\nimport MCIndexNoder from '../MCIndexNoder';\nimport NodedSegmentString from '../NodedSegmentString';\nimport HotPixel from './HotPixel';\nimport extend from '../../../../../extend';\nimport Exception from '../../../../../java/lang/Exception';\nimport MCIndexPointSnapper from './MCIndexPointSnapper';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder';\nexport default function MCIndexSnapRounder() {\n\tthis._pm = null;\n\tthis._li = null;\n\tthis._scaleFactor = null;\n\tthis._noder = null;\n\tthis._pointSnapper = null;\n\tthis._nodedSegStrings = null;\n\tlet pm = arguments[0];\n\tthis._pm = pm;\n\tthis._li = new RobustLineIntersector();\n\tthis._li.setPrecisionModel(pm);\n\tthis._scaleFactor = pm.getScale();\n}\nextend(MCIndexSnapRounder.prototype, {\n\tcheckCorrectness: function (inputSegmentStrings) {\n\t\tvar resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n\t\tvar nv = new NodingValidator(resultSegStrings);\n\t\ttry {\n\t\t\tnv.checkValid();\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tex.printStackTrace();\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetNodedSubstrings: function () {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t},\n\tsnapRound: function (segStrings, li) {\n\t\tvar intersections = this.findInteriorIntersections(segStrings, li);\n\t\tthis.computeIntersectionSnaps(intersections);\n\t\tthis.computeVertexSnaps(segStrings);\n\t},\n\tfindInteriorIntersections: function (segStrings, li) {\n\t\tvar intFinderAdder = new InteriorIntersectionFinderAdder(li);\n\t\tthis._noder.setSegmentIntersector(intFinderAdder);\n\t\tthis._noder.computeNodes(segStrings);\n\t\treturn intFinderAdder.getInteriorIntersections();\n\t},\n\tcomputeVertexSnaps: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i0 = edges.iterator(); i0.hasNext(); ) {\n\t\t\t\tvar edge0 = i0.next();\n\t\t\t\tthis.computeVertexSnaps(edge0);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof NodedSegmentString) {\n\t\t\tlet e = arguments[0];\n\t\t\tvar pts0 = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts0.length; i++) {\n\t\t\t\tvar hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li);\n\t\t\t\tvar isNodeAdded = this._pointSnapper.snap(hotPixel, e, i);\n\t\t\t\tif (isNodeAdded) {\n\t\t\t\t\te.addIntersection(pts0[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeNodes: function (inputSegmentStrings) {\n\t\tthis._nodedSegStrings = inputSegmentStrings;\n\t\tthis._noder = new MCIndexNoder();\n\t\tthis._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n\t\tthis.snapRound(inputSegmentStrings, this._li);\n\t},\n\tcomputeIntersectionSnaps: function (snapPts) {\n\t\tfor (var it = snapPts.iterator(); it.hasNext(); ) {\n\t\t\tvar snapPt = it.next();\n\t\t\tvar hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li);\n\t\t\tthis._pointSnapper.snap(hotPixel);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexSnapRounder;\n\t}\n});\n","import BufferParameters from './BufferParameters';\nimport Geometry from '../../geom/Geometry';\nimport BufferBuilder from './BufferBuilder';\nimport ScaledNoder from '../../noding/ScaledNoder';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport MathUtil from '../../math/MathUtil';\nimport PrecisionModel from '../../geom/PrecisionModel';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder';\nexport default function BufferOp() {\n\tthis._argGeom = null;\n\tthis._distance = null;\n\tthis._bufParams = new BufferParameters();\n\tthis._resultGeometry = null;\n\tthis._saveException = null;\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tthis._argGeom = g;\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bufParams = arguments[1];\n\t\tthis._argGeom = g;\n\t\tthis._bufParams = bufParams;\n\t}\n}\nextend(BufferOp.prototype, {\n\tbufferFixedPrecision: function (fixedPM) {\n\t\tvar noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\tbufBuilder.setWorkingPrecisionModel(fixedPM);\n\t\tbufBuilder.setNoder(noder);\n\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t},\n\tbufferReducedPrecision: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.bufferReducedPrecision(precDigits);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tif (ex instanceof TopologyException) {\n\t\t\t\t\t\tthis._saveException = ex;\n\t\t\t\t\t} else throw ex;\n\t\t\t\t} finally {}\n\t\t\t\tif (this._resultGeometry !== null) return null;\n\t\t\t}\n\t\t\tthrow this._saveException;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet precisionDigits = arguments[0];\n\t\t\tvar sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n\t\t\tvar fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n\t\t\tthis.bufferFixedPrecision(fixedPM);\n\t\t}\n\t},\n\tcomputeGeometry: function () {\n\t\tthis.bufferOriginalPrecision();\n\t\tif (this._resultGeometry !== null) return null;\n\t\tvar argPM = this._argGeom.getFactory().getPrecisionModel();\n\t\tif (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision();\n\t},\n\tsetQuadrantSegments: function (quadrantSegments) {\n\t\tthis._bufParams.setQuadrantSegments(quadrantSegments);\n\t},\n\tbufferOriginalPrecision: function () {\n\t\ttry {\n\t\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tthis._saveException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetResultGeometry: function (distance) {\n\t\tthis._distance = distance;\n\t\tthis.computeGeometry();\n\t\treturn this._resultGeometry;\n\t},\n\tsetEndCapStyle: function (endCapStyle) {\n\t\tthis._bufParams.setEndCapStyle(endCapStyle);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferOp;\n\t}\n});\nBufferOp.bufferOp = function () {\n\tif (arguments.length === 2) {\n\t\tlet g = arguments[0], distance = arguments[1];\n\t\tvar gBuf = new BufferOp(g);\n\t\tvar geomBuf = gBuf.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t} else if (arguments.length === 3) {\n\t\tif (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g);\n\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t} else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\tlet g = arguments[0], distance = arguments[1], params = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g, params);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t}\n\t} else if (arguments.length === 4) {\n\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3];\n\t\tvar bufOp = new BufferOp(g);\n\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\tbufOp.setEndCapStyle(endCapStyle);\n\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t}\n};\nBufferOp.precisionScaleFactor = function (g, distance, maxPrecisionDigits) {\n\tvar env = g.getEnvelopeInternal();\n\tvar envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n\tvar expandByDistance = distance > 0.0 ? distance : 0.0;\n\tvar bufEnvMax = envMax + 2 * expandByDistance;\n\tvar bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n\tvar minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n\tvar scaleFactor = Math.pow(10.0, minUnitLog10);\n\treturn scaleFactor;\n};\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\nBufferOp.MAX_PRECISION_DIGITS = 12;\n","import Polygon from '../Polygon';\nimport extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default function PolygonExtracter() {\n\tthis._comps = null;\n\tlet comps = arguments[0];\n\tthis._comps = comps;\n}\nextend(PolygonExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Polygon) this._comps.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonExtracter;\n\t}\n});\nPolygonExtracter.getPolygons = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn PolygonExtracter.getPolygons(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], list = arguments[1];\n\t\tif (geom instanceof Polygon) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PolygonExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n","import extend from '../../../../../extend';\nexport default function GeometryLocation() {\n\tthis._component = null;\n\tthis._segIndex = null;\n\tthis._pt = null;\n\tif (arguments.length === 2) {\n\t\tlet component = arguments[0], pt = arguments[1];\n\t\tGeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n\t} else if (arguments.length === 3) {\n\t\tlet component = arguments[0], segIndex = arguments[1], pt = arguments[2];\n\t\tthis._component = component;\n\t\tthis._segIndex = segIndex;\n\t\tthis._pt = pt;\n\t}\n}\nextend(GeometryLocation.prototype, {\n\tisInsideArea: function () {\n\t\treturn this._segIndex === GeometryLocation.INSIDE_AREA;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._pt;\n\t},\n\tgetGeometryComponent: function () {\n\t\treturn this._component;\n\t},\n\tgetSegmentIndex: function () {\n\t\treturn this._segIndex;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryLocation;\n\t}\n});\nGeometryLocation.INSIDE_AREA = -1;\n","import Point from '../Point';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default function PointExtracter() {\n\tthis._pts = null;\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n}\nextend(PointExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Point) this._pts.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn PointExtracter;\n\t}\n});\nPointExtracter.getPoints = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tif (geom instanceof Point) {\n\t\t\treturn Collections.singletonList(geom);\n\t\t}\n\t\treturn PointExtracter.getPoints(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], list = arguments[1];\n\t\tif (geom instanceof Point) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PointExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n","import LineString from '../../geom/LineString';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../../geom/GeometryFilter';\nexport default function ConnectedElementLocationFilter() {\n\tthis._locations = null;\n\tlet locations = arguments[0];\n\tthis._locations = locations;\n}\nextend(ConnectedElementLocationFilter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn ConnectedElementLocationFilter;\n\t}\n});\nConnectedElementLocationFilter.getLocations = function (geom) {\n\tvar locations = new ArrayList();\n\tgeom.apply(new ConnectedElementLocationFilter(locations));\n\treturn locations;\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport Double from '../../../../../java/lang/Double';\nimport PointExtracter from '../../geom/util/PointExtracter';\nimport extend from '../../../../../extend';\nimport ConnectedElementLocationFilter from './ConnectedElementLocationFilter';\nimport LineSegment from '../../geom/LineSegment';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport List from '../../../../../java/util/List';\nimport Distance from '../../algorithm/Distance';\nexport default function DistanceOp() {\n\tthis._geom = null;\n\tthis._terminateDistance = 0.0;\n\tthis._ptLocator = new PointLocator();\n\tthis._minDistanceLocation = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tDistanceOp.call(this, g0, g1, 0.0);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], terminateDistance = arguments[2];\n\t\tthis._geom = new Array(2).fill(null);\n\t\tthis._geom[0] = g0;\n\t\tthis._geom[1] = g1;\n\t\tthis._terminateDistance = terminateDistance;\n\t}\n}\nextend(DistanceOp.prototype, {\n\tcomputeContainmentDistance: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tvar locPtPoly = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance(0, locPtPoly);\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeContainmentDistance(1, locPtPoly);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet polyGeomIndex = arguments[0], locPtPoly = arguments[1];\n\t\t\tvar polyGeom = this._geom[polyGeomIndex];\n\t\t\tif (polyGeom.getDimension() < 2) return null;\n\t\t\tvar locationsIndex = 1 - polyGeomIndex;\n\t\t\tvar polys = PolygonExtracter.getPolygons(polyGeom);\n\t\t\tif (polys.size() > 0) {\n\t\t\t\tvar insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n\t\t\t\tthis.computeContainmentDistance(insideLocs, polys, locPtPoly);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) {\n\t\t\t\t\tthis._minDistanceLocation[locationsIndex] = locPtPoly[0];\n\t\t\t\t\tthis._minDistanceLocation[polyGeomIndex] = locPtPoly[1];\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet locs = arguments[0], polys = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tfor (var i = 0; i < locs.size(); i++) {\n\t\t\t\t\tvar loc = locs.get(i);\n\t\t\t\t\tfor (var j = 0; j < polys.size(); j++) {\n\t\t\t\t\t\tthis.computeContainmentDistance(loc, polys.get(j), locPtPoly);\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n\t\t\t\tlet ptLoc = arguments[0], poly = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tvar pt = ptLoc.getCoordinate();\n\t\t\t\tif (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n\t\t\t\t\tthis._minDistance = 0.0;\n\t\t\t\t\tlocPtPoly[0] = ptLoc;\n\t\t\t\t\tlocPtPoly[1] = new GeometryLocation(poly, pt);\n\t\t\t\t\t;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistanceLinesPoints: function (lines, points, locGeom) {\n\t\tfor (var i = 0; i < lines.size(); i++) {\n\t\t\tvar line = lines.get(i);\n\t\t\tfor (var j = 0; j < points.size(); j++) {\n\t\t\t\tvar pt = points.get(j);\n\t\t\t\tthis.computeMinDistance(line, pt, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeFacetDistance: function () {\n\t\tvar locGeom = new Array(2).fill(null);\n\t\tvar lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n\t\tvar lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n\t\tvar pts0 = PointExtracter.getPoints(this._geom[0]);\n\t\tvar pts1 = PointExtracter.getPoints(this._geom[1]);\n\t\tthis.computeMinDistanceLines(lines0, lines1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n\t\tthis.updateMinDistance(locGeom, true);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistancePoints(pts0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t},\n\tnearestLocations: function () {\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistanceLocation;\n\t},\n\tupdateMinDistance: function (locGeom, flip) {\n\t\tif (locGeom[0] === null) return null;\n\t\tif (flip) {\n\t\t\tthis._minDistanceLocation[0] = locGeom[1];\n\t\t\tthis._minDistanceLocation[1] = locGeom[0];\n\t\t} else {\n\t\t\tthis._minDistanceLocation[0] = locGeom[0];\n\t\t\tthis._minDistanceLocation[1] = locGeom[1];\n\t\t}\n\t},\n\tnearestPoints: function () {\n\t\tthis.computeMinDistance();\n\t\tvar nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n\t\treturn nearestPts;\n\t},\n\tcomputeMinDistance: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._minDistanceLocation !== null) return null;\n\t\t\tthis._minDistanceLocation = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance();\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeFacetDistance();\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n\t\t\t\tlet line = arguments[0], pt = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line.getCoordinates();\n\t\t\t\tvar coord = pt.getCoordinate();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tvar dist = Distance.pointToSegment(coord, coord0[i], coord0[i + 1]);\n\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\tvar seg = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\tvar segClosestPoint = seg.closestPoint(coord);\n\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt, 0, coord);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n\t\t\t\tlet line0 = arguments[0], line1 = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line0.getCoordinates();\n\t\t\t\tvar coord1 = line1.getCoordinates();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tfor (var j = 0; j < coord1.length - 1; j++) {\n\t\t\t\t\t\tvar dist = Distance.segmentToSegment(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\n\t\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\t\tvar seg0 = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\t\tvar seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n\t\t\t\t\t\t\tvar closestPt = seg0.closestPoints(seg1);\n\t\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\n\t\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistancePoints: function (points0, points1, locGeom) {\n\t\tfor (var i = 0; i < points0.size(); i++) {\n\t\t\tvar pt0 = points0.get(i);\n\t\t\tfor (var j = 0; j < points1.size(); j++) {\n\t\t\t\tvar pt1 = points1.get(j);\n\t\t\t\tvar dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\tlocGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n\t\t\t\t}\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tdistance: function () {\n\t\tif (this._geom[0] === null || this._geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\n\t\tif (this._geom[0].isEmpty() || this._geom[1].isEmpty()) return 0.0;\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistance;\n\t},\n\tcomputeMinDistanceLines: function (lines0, lines1, locGeom) {\n\t\tfor (var i = 0; i < lines0.size(); i++) {\n\t\t\tvar line0 = lines0.get(i);\n\t\t\tfor (var j = 0; j < lines1.size(); j++) {\n\t\t\t\tvar line1 = lines1.get(j);\n\t\t\t\tthis.computeMinDistance(line0, line1, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DistanceOp;\n\t}\n});\nDistanceOp.distance = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.distance();\n};\nDistanceOp.isWithinDistance = function (g0, g1, distance) {\n\tvar envDist = g0.getEnvelopeInternal().distance(g1.getEnvelopeInternal());\n\tif (envDist > distance) return false;\n\tvar distOp = new DistanceOp(g0, g1, distance);\n\treturn distOp.distance() <= distance;\n};\nDistanceOp.nearestPoints = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.nearestPoints();\n};\n","import CoordinateList from '../../geom/CoordinateList';\nimport extend from '../../../../../extend';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function EdgeString() {\n\tthis._factory = null;\n\tthis._directedEdges = new ArrayList();\n\tthis._coordinates = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n}\nextend(EdgeString.prototype, {\n\tgetCoordinates: function () {\n\t\tif (this._coordinates === null) {\n\t\t\tvar forwardDirectedEdges = 0;\n\t\t\tvar reverseDirectedEdges = 0;\n\t\t\tvar coordinateList = new CoordinateList();\n\t\t\tfor (var i = this._directedEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar directedEdge = i.next();\n\t\t\t\tif (directedEdge.getEdgeDirection()) {\n\t\t\t\t\tforwardDirectedEdges++;\n\t\t\t\t} else {\n\t\t\t\t\treverseDirectedEdges++;\n\t\t\t\t}\n\t\t\t\tcoordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\n\t\t\t}\n\t\t\tthis._coordinates = coordinateList.toCoordinateArray();\n\t\t\tif (reverseDirectedEdges > forwardDirectedEdges) {\n\t\t\t\tCoordinateArrays.reverse(this._coordinates);\n\t\t\t}\n\t\t}\n\t\treturn this._coordinates;\n\t},\n\ttoLineString: function () {\n\t\treturn this._factory.createLineString(this.getCoordinates());\n\t},\n\tadd: function (directedEdge) {\n\t\tthis._directedEdges.add(directedEdge);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeString;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function GraphComponent() {\n\tthis._isMarked = false;\n\tthis._isVisited = false;\n\tthis._data = null;\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tisMarked: function () {\n\t\treturn this._isMarked;\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tsetMarked: function (isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tgetContext: function () {\n\t\treturn this._data;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tsetContext: function (data) {\n\t\tthis._data = data;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GraphComponent;\n\t}\n});\nGraphComponent.getComponentWithVisitedState = function (i, visitedState) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tif (comp.isVisited() === visitedState) return comp;\n\t}\n\treturn null;\n};\nGraphComponent.setVisited = function (i, visited) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setVisited(visited);\n\t}\n};\nGraphComponent.setMarked = function (i, marked) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setMarked(marked);\n\t}\n};\n","import extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from '../geomgraph/Quadrant';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function DirectedEdge() {\n\tGraphComponent.apply(this);\n\tthis._parentEdge = null;\n\tthis._from = null;\n\tthis._to = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._sym = null;\n\tthis._edgeDirection = null;\n\tthis._quadrant = null;\n\tthis._angle = null;\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tthis._from = from;\n\tthis._to = to;\n\tthis._edgeDirection = edgeDirection;\n\tthis._p0 = from.getCoordinate();\n\tthis._p1 = directionPt;\n\tvar dx = this._p1.x - this._p0.x;\n\tvar dy = this._p1.y - this._p0.y;\n\tthis._quadrant = Quadrant.quadrant(dx, dy);\n\tthis._angle = Math.atan2(dy, dx);\n}\ninherits(DirectedEdge, GraphComponent);\nextend(DirectedEdge.prototype, {\n\tisRemoved: function () {\n\t\treturn this._parentEdge === null;\n\t},\n\tcompareDirection: function (e) {\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn Orientation.index(e._p0, e._p1, this._p1);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._from.getCoordinate();\n\t},\n\tprint: function (out) {\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + this._angle);\n\t},\n\tgetDirectionPt: function () {\n\t\treturn this._p1;\n\t},\n\tgetAngle: function () {\n\t\treturn this._angle;\n\t},\n\tcompareTo: function (obj) {\n\t\tvar de = obj;\n\t\treturn this.compareDirection(de);\n\t},\n\tgetFromNode: function () {\n\t\treturn this._from;\n\t},\n\tgetSym: function () {\n\t\treturn this._sym;\n\t},\n\tsetEdge: function (parentEdge) {\n\t\tthis._parentEdge = parentEdge;\n\t},\n\tremove: function () {\n\t\tthis._sym = null;\n\t\tthis._parentEdge = null;\n\t},\n\tgetEdge: function () {\n\t\treturn this._parentEdge;\n\t},\n\tgetQuadrant: function () {\n\t\treturn this._quadrant;\n\t},\n\tsetSym: function (sym) {\n\t\tthis._sym = sym;\n\t},\n\tgetToNode: function () {\n\t\treturn this._to;\n\t},\n\tgetEdgeDirection: function () {\n\t\treturn this._edgeDirection;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.toEdges = function (dirEdges) {\n\tvar edges = new ArrayList();\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tedges.add(i.next()._parentEdge);\n\t}\n\treturn edges;\n};\n","import extend from '../../../../../extend';\nimport DirectedEdge from '../../planargraph/DirectedEdge';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function LineMergeDirectedEdge() {\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(LineMergeDirectedEdge, DirectedEdge);\nextend(LineMergeDirectedEdge.prototype, {\n\tgetNext: function () {\n\t\tif (this.getToNode().getDegree() !== 2) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n\t\t\treturn this.getToNode().getOutEdges().getEdges().get(1);\n\t\t}\n\t\tAssert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\n\t\treturn this.getToNode().getOutEdges().getEdges().get(0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeDirectedEdge;\n\t}\n});\n","import Node from './Node';\nimport extend from '../../../../extend';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Edge() {\n\tGraphComponent.apply(this);\n\tthis._dirEdge = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tlet de0 = arguments[0], de1 = arguments[1];\n\t\tthis.setDirectedEdges(de0, de1);\n\t}\n}\ninherits(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tisRemoved: function () {\n\t\treturn this._dirEdge === null;\n\t},\n\tsetDirectedEdges: function (de0, de1) {\n\t\tthis._dirEdge = [de0, de1];\n\t\tde0.setEdge(this);\n\t\tde1.setEdge(this);\n\t\tde0.setSym(de1);\n\t\tde1.setSym(de0);\n\t\tde0.getFromNode().addOutEdge(de0);\n\t\tde1.getFromNode().addOutEdge(de1);\n\t},\n\tgetDirEdge: function () {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this._dirEdge[i];\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet fromNode = arguments[0];\n\t\t\tif (this._dirEdge[0].getFromNode() === fromNode) return this._dirEdge[0];\n\t\t\tif (this._dirEdge[1].getFromNode() === fromNode) return this._dirEdge[1];\n\t\t\treturn null;\n\t\t}\n\t},\n\tremove: function () {\n\t\tthis._dirEdge = null;\n\t},\n\tgetOppositeNode: function (node) {\n\t\tif (this._dirEdge[0].getFromNode() === node) return this._dirEdge[0].getToNode();\n\t\tif (this._dirEdge[1].getFromNode() === node) return this._dirEdge[1].getToNode();\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Edge;\n\t}\n});\n","import extend from '../../../../extend';\nimport Collections from '../../../../java/util/Collections';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default function DirectedEdgeStar() {\n\tthis._outEdges = new ArrayList();\n\tthis._sorted = false;\n}\nextend(DirectedEdgeStar.prototype, {\n\tgetNextEdge: function (dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i + 1));\n\t},\n\tgetCoordinate: function () {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\titerator: function () {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges.iterator();\n\t},\n\tsortEdges: function () {\n\t\tif (!this._sorted) {\n\t\t\tCollections.sort(this._outEdges);\n\t\t\tthis._sorted = true;\n\t\t}\n\t},\n\tremove: function (de) {\n\t\tthis._outEdges.remove(de);\n\t},\n\tgetEdges: function () {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges;\n\t},\n\tgetNextCWEdge: function (dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i - 1));\n\t},\n\tgetIndex: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de.getEdge() === edge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de === dirEdge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\tvar modi = i % this._outEdges.size();\n\t\t\tif (modi < 0) modi += this._outEdges.size();\n\t\t\treturn modi;\n\t\t}\n\t},\n\tadd: function (de) {\n\t\tthis._outEdges.add(de);\n\t\tthis._sorted = false;\n\t},\n\tgetDegree: function () {\n\t\treturn this._outEdges.size();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n","import DirectedEdgeStar from './DirectedEdgeStar';\nimport HashSet from '../../../../java/util/HashSet';\nimport extend from '../../../../extend';\nimport DirectedEdge from './DirectedEdge';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Node() {\n\tGraphComponent.apply(this);\n\tthis._pt = null;\n\tthis._deStar = null;\n\tif (arguments.length === 1) {\n\t\tlet pt = arguments[0];\n\t\tNode.call(this, pt, new DirectedEdgeStar());\n\t} else if (arguments.length === 2) {\n\t\tlet pt = arguments[0], deStar = arguments[1];\n\t\tthis._pt = pt;\n\t\tthis._deStar = deStar;\n\t}\n}\ninherits(Node, GraphComponent);\nextend(Node.prototype, {\n\tisRemoved: function () {\n\t\treturn this._pt === null;\n\t},\n\taddOutEdge: function (de) {\n\t\tthis._deStar.add(de);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._pt;\n\t},\n\tgetOutEdges: function () {\n\t\treturn this._deStar;\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis._pt = null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tthis._deStar.remove(de);\n\t\t}\n\t},\n\tgetIndex: function (edge) {\n\t\treturn this._deStar.getIndex(edge);\n\t},\n\tgetDegree: function () {\n\t\treturn this._deStar.getDegree();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.getEdgesBetween = function (node0, node1) {\n\tvar edges0 = DirectedEdge.toEdges(node0.getOutEdges().getEdges());\n\tvar commonEdges = new HashSet(edges0);\n\tvar edges1 = DirectedEdge.toEdges(node1.getOutEdges().getEdges());\n\tcommonEdges.retainAll(edges1);\n\treturn commonEdges;\n};\n","import extend from '../../../../../extend';\nimport Edge from '../../planargraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function LineMergeEdge() {\n\tEdge.apply(this);\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n}\ninherits(LineMergeEdge, Edge);\nextend(LineMergeEdge.prototype, {\n\tgetLine: function () {\n\t\treturn this._line;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeEdge;\n\t}\n});\n","import extend from '../../../../extend';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function NodeMap() {\n\tthis._nodeMap = new TreeMap();\n}\nextend(NodeMap.prototype, {\n\tfind: function (coord) {\n\t\treturn this._nodeMap.get(coord);\n\t},\n\titerator: function () {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\tremove: function (pt) {\n\t\treturn this._nodeMap.remove(pt);\n\t},\n\tvalues: function () {\n\t\treturn this._nodeMap.values();\n\t},\n\tadd: function (n) {\n\t\tthis._nodeMap.put(n.getCoordinate(), n);\n\t\treturn n;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeMap;\n\t}\n});\n","import HashSet from '../../../../java/util/HashSet';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport NodeMap from './NodeMap';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default function PlanarGraph() {\n\tthis._edges = new HashSet();\n\tthis._dirEdges = new HashSet();\n\tthis._nodeMap = new NodeMap();\n}\nextend(PlanarGraph.prototype, {\n\tfindNodesOfDegree: function (degree) {\n\t\tvar nodesFound = new ArrayList();\n\t\tfor (var i = this.nodeIterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() === degree) nodesFound.add(node);\n\t\t}\n\t\treturn nodesFound;\n\t},\n\tdirEdgeIterator: function () {\n\t\treturn this._dirEdges.iterator();\n\t},\n\tedgeIterator: function () {\n\t\treturn this._edges.iterator();\n\t},\n\tremove: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.remove(edge.getDirEdge(0));\n\t\t\tthis.remove(edge.getDirEdge(1));\n\t\t\tthis._edges.remove(edge);\n\t\t\tedge.remove();\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar sym = de.getSym();\n\t\t\tif (sym !== null) sym.setSym(null);\n\t\t\tde.getFromNode().remove(de);\n\t\t\tde.remove();\n\t\t\tthis._dirEdges.remove(de);\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar outEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = outEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) this.remove(sym);\n\t\t\t\tthis._dirEdges.remove(de);\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tif (edge !== null) {\n\t\t\t\t\tthis._edges.remove(edge);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._nodeMap.remove(node.getCoordinate());\n\t\t\tnode.remove();\n\t\t}\n\t},\n\tfindNode: function (pt) {\n\t\treturn this._nodeMap.find(pt);\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tnodeIterator: function () {\n\t\treturn this._nodeMap.iterator();\n\t},\n\tcontains: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet e = arguments[0];\n\t\t\treturn this._edges.contains(e);\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\treturn this._dirEdges.contains(de);\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tthis._nodeMap.add(node);\n\t\t} else if (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis._edges.add(edge);\n\t\t\tthis.add(edge.getDirEdge(0));\n\t\t\tthis.add(edge.getDirEdge(1));\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis._dirEdges.add(dirEdge);\n\t\t}\n\t},\n\tgetNodes: function () {\n\t\treturn this._nodeMap.values();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PlanarGraph;\n\t}\n});\n","import LineMergeDirectedEdge from './LineMergeDirectedEdge';\nimport Node from '../../planargraph/Node';\nimport extend from '../../../../../extend';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport LineMergeEdge from './LineMergeEdge';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default function LineMergeGraph() {\n\tPlanarGraph.apply(this);\n}\ninherits(LineMergeGraph, PlanarGraph);\nextend(LineMergeGraph.prototype, {\n\taddEdge: function (lineString) {\n\t\tif (lineString.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\n\t\tif (coordinates.length <= 1) return null;\n\t\tvar startCoordinate = coordinates[0];\n\t\tvar endCoordinate = coordinates[coordinates.length - 1];\n\t\tvar startNode = this.getNode(startCoordinate);\n\t\tvar endNode = this.getNode(endCoordinate);\n\t\tvar directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\n\t\tvar directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\n\t\tvar edge = new LineMergeEdge(lineString);\n\t\tedge.setDirectedEdges(directedEdge0, directedEdge1);\n\t\tthis.add(edge);\n\t},\n\tgetNode: function (coordinate) {\n\t\tvar node = this.findNode(coordinate);\n\t\tif (node === null) {\n\t\t\tnode = new Node(coordinate);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeGraph;\n\t}\n});\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport EdgeString from './EdgeString';\nimport extend from '../../../../../extend';\nimport LineMergeGraph from './LineMergeGraph';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport GraphComponent from '../../planargraph/GraphComponent';\nexport default function LineMerger() {\n\tthis._graph = new LineMergeGraph();\n\tthis._mergedLineStrings = null;\n\tthis._factory = null;\n\tthis._edgeStrings = null;\n}\nextend(LineMerger.prototype, {\n\tbuildEdgeStringsForUnprocessedNodes: function () {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isMarked()) {\n\t\t\t\tAssert.isTrue(node.getDegree() === 2);\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForNonDegree2Nodes: function () {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() !== 2) {\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForObviousStartNodes: function () {\n\t\tthis.buildEdgeStringsForNonDegree2Nodes();\n\t},\n\tgetMergedLineStrings: function () {\n\t\tthis.merge();\n\t\treturn this._mergedLineStrings;\n\t},\n\tbuildEdgeStringsStartingAt: function (node) {\n\t\tfor (var i = node.getOutEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar directedEdge = i.next();\n\t\t\tif (directedEdge.getEdge().isMarked()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\n\t\t}\n\t},\n\tmerge: function () {\n\t\tif (this._mergedLineStrings !== null) {\n\t\t\treturn null;\n\t\t}\n\t\tGraphComponent.setMarked(this._graph.nodeIterator(), false);\n\t\tGraphComponent.setMarked(this._graph.edgeIterator(), false);\n\t\tthis._edgeStrings = new ArrayList();\n\t\tthis.buildEdgeStringsForObviousStartNodes();\n\t\tthis.buildEdgeStringsForIsolatedLoops();\n\t\tthis._mergedLineStrings = new ArrayList();\n\t\tfor (var i = this._edgeStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar edgeString = i.next();\n\t\t\tthis._mergedLineStrings.add(edgeString.toLineString());\n\t\t}\n\t},\n\tbuildEdgeStringStartingWith: function (start) {\n\t\tvar edgeString = new EdgeString(this._factory);\n\t\tvar current = start;\n\t\tdo {\n\t\t\tedgeString.add(current);\n\t\t\tcurrent.getEdge().setMarked(true);\n\t\t\tcurrent = current.getNext();\n\t\t} while (current !== null && current !== start);\n\t\treturn edgeString;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function (component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tthis._mergedLineStrings = null;\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tthis._graph.addEdge(lineString);\n\t\t}\n\t},\n\tbuildEdgeStringsForIsolatedLoops: function () {\n\t\tthis.buildEdgeStringsForUnprocessedNodes();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMerger;\n\t}\n});\n","import WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Octant from './Octant';\nimport extend from '../../../../extend';\nimport SegmentString from './SegmentString';\nexport default function BasicSegmentString() {\n\tthis._pts = null;\n\tthis._data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n}\nextend(BasicSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this._pts;\n\t},\n\tsize: function () {\n\t\treturn this._pts.length;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this._pts[i];\n\t},\n\tisClosed: function () {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t},\n\tgetSegmentOctant: function (index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn BasicSegmentString;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function InteriorIntersectionFinder() {\n\tthis._findAllIntersections = false;\n\tthis._isCheckEndSegmentsOnly = false;\n\tthis._li = null;\n\tthis._interiorIntersection = null;\n\tthis._intSegments = null;\n\tthis._intersections = new ArrayList();\n\tthis._intersectionCount = 0;\n\tthis._keepIntersections = true;\n\tlet li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersection = null;\n}\nextend(InteriorIntersectionFinder.prototype, {\n\tgetInteriorIntersection: function () {\n\t\treturn this._interiorIntersection;\n\t},\n\tsetCheckEndSegmentsOnly: function (isCheckEndSegmentsOnly) {\n\t\tthis._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n\t},\n\tgetIntersectionSegments: function () {\n\t\treturn this._intSegments;\n\t},\n\tcount: function () {\n\t\treturn this._intersectionCount;\n\t},\n\tgetIntersections: function () {\n\t\treturn this._intersections;\n\t},\n\tsetFindAllIntersections: function (findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t},\n\tsetKeepIntersections: function (keepIntersections) {\n\t\tthis._keepIntersections = keepIntersections;\n\t},\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (!this._findAllIntersections && this.hasIntersection()) return null;\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tif (this._isCheckEndSegmentsOnly) {\n\t\t\tvar isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n\t\t\tif (!isEndSegPresent) return null;\n\t\t}\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis._intSegments = new Array(4).fill(null);\n\t\t\t\tthis._intSegments[0] = p00;\n\t\t\t\tthis._intSegments[1] = p01;\n\t\t\t\tthis._intSegments[2] = p10;\n\t\t\t\tthis._intSegments[3] = p11;\n\t\t\t\tthis._interiorIntersection = this._li.getIntersection(0);\n\t\t\t\tif (this._keepIntersections) this._intersections.add(this._interiorIntersection);\n\t\t\t\tthis._intersectionCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisEndSegment: function (segStr, index) {\n\t\tif (index === 0) return true;\n\t\tif (index >= segStr.size() - 2) return true;\n\t\treturn false;\n\t},\n\thasIntersection: function () {\n\t\treturn this._interiorIntersection !== null;\n\t},\n\tisDone: function () {\n\t\tif (this._findAllIntersections) return false;\n\t\treturn this._interiorIntersection !== null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorIntersectionFinder;\n\t}\n});\nInteriorIntersectionFinder.createAllIntersectionsFinder = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\treturn finder;\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function (li) {\n\treturn new InteriorIntersectionFinder(li);\n};\nInteriorIntersectionFinder.createIntersectionCounter = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\tfinder.setKeepIntersections(false);\n\treturn finder;\n};\n","import WKTWriter from '../io/WKTWriter';\nimport MCIndexNoder from './MCIndexNoder';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinder from './InteriorIntersectionFinder';\nexport default function FastNodingValidator() {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tthis._findAllIntersections = false;\n\tthis._segInt = null;\n\tthis._isValid = true;\n\tlet segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n}\nextend(FastNodingValidator.prototype, {\n\texecute: function () {\n\t\tif (this._segInt !== null) return null;\n\t\tthis.checkInteriorIntersections();\n\t},\n\tgetIntersections: function () {\n\t\treturn this._segInt.getIntersections();\n\t},\n\tisValid: function () {\n\t\tthis.execute();\n\t\treturn this._isValid;\n\t},\n\tsetFindAllIntersections: function (findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t},\n\tcheckInteriorIntersections: function () {\n\t\tthis._isValid = true;\n\t\tthis._segInt = new InteriorIntersectionFinder(this._li);\n\t\tthis._segInt.setFindAllIntersections(this._findAllIntersections);\n\t\tvar noder = new MCIndexNoder();\n\t\tnoder.setSegmentIntersector(this._segInt);\n\t\tnoder.computeNodes(this._segStrings);\n\t\tif (this._segInt.hasIntersection()) {\n\t\t\tthis._isValid = false;\n\t\t\treturn null;\n\t\t}\n\t},\n\tcheckValid: function () {\n\t\tthis.execute();\n\t\tif (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection());\n\t},\n\tgetErrorMessage: function () {\n\t\tif (this._isValid) return \"no intersections found\";\n\t\tvar intSegs = this._segInt.getIntersectionSegments();\n\t\treturn \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn FastNodingValidator;\n\t}\n});\nFastNodingValidator.computeIntersections = function (segStrings) {\n\tvar nv = new FastNodingValidator(segStrings);\n\tnv.setFindAllIntersections(true);\n\tnv.isValid();\n\treturn nv.getIntersections();\n};\n","import BasicSegmentString from '../noding/BasicSegmentString';\nimport extend from '../../../../extend';\nimport FastNodingValidator from '../noding/FastNodingValidator';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function EdgeNodingValidator() {\n\tthis._nv = null;\n\tlet edges = arguments[0];\n\tthis._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n}\nextend(EdgeNodingValidator.prototype, {\n\tcheckValid: function () {\n\t\tthis._nv.checkValid();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeNodingValidator;\n\t}\n});\nEdgeNodingValidator.toSegmentStrings = function (edges) {\n\tvar segStrings = new ArrayList();\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar e = i.next();\n\t\tsegStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n\t}\n\treturn segStrings;\n};\nEdgeNodingValidator.checkValid = function (edges) {\n\tvar validator = new EdgeNodingValidator(edges);\n\tvalidator.checkValid();\n};\n","import GeometryFactory from '../GeometryFactory';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function GeometryCollectionMapper() {\n\tthis._mapOp = null;\n\tlet mapOp = arguments[0];\n\tthis._mapOp = mapOp;\n}\nextend(GeometryCollectionMapper.prototype, {\n\tmap: function (gc) {\n\t\tvar mapped = new ArrayList();\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = this._mapOp.map(gc.getGeometryN(i));\n\t\t\tif (!g.isEmpty()) mapped.add(g);\n\t\t}\n\t\treturn gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollectionMapper;\n\t}\n});\nGeometryCollectionMapper.map = function (gc, op) {\n\tvar mapper = new GeometryCollectionMapper(op);\n\treturn mapper.map(gc);\n};\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport OverlayOp from './OverlayOp';\nexport default function LineBuilder() {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._ptLocator = null;\n\tthis._lineEdgesList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n\tthis._ptLocator = ptLocator;\n}\nextend(LineBuilder.prototype, {\n\tcollectLines: function (opCode) {\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tthis.collectLineEdge(de, opCode, this._lineEdgesList);\n\t\t\tthis.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList);\n\t\t}\n\t},\n\tlabelIsolatedLine: function (e, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n\t\te.getLabel().setLocation(targetIndex, loc);\n\t},\n\tbuild: function (opCode) {\n\t\tthis.findCoveredLineEdges();\n\t\tthis.collectLines(opCode);\n\t\tthis.buildLines(opCode);\n\t\treturn this._resultLineList;\n\t},\n\tcollectLineEdge: function (de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tvar e = de.getEdge();\n\t\tif (de.isLineEdge()) {\n\t\t\tif (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n\t\t\t\tedges.add(e);\n\t\t\t\tde.setVisitedEdge(true);\n\t\t\t}\n\t\t}\n\t},\n\tfindCoveredLineEdges: function () {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().findCoveredLineEdges();\n\t\t}\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar e = de.getEdge();\n\t\t\tif (de.isLineEdge() && !e.isCoveredSet()) {\n\t\t\t\tvar isCovered = this._op.isCoveredByA(de.getCoordinate());\n\t\t\t\te.setCovered(isCovered);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedLines: function (edgesList) {\n\t\tfor (var it = edgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1);\n\t\t\t}\n\t\t}\n\t},\n\tbuildLines: function (opCode) {\n\t\tfor (var it = this._lineEdgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tvar line = this._geometryFactory.createLineString(e.getCoordinates());\n\t\t\tthis._resultLineList.add(line);\n\t\t\te.setInResult(true);\n\t\t}\n\t},\n\tcollectBoundaryTouchEdge: function (de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tif (de.isLineEdge()) return null;\n\t\tif (de.isVisited()) return null;\n\t\tif (de.isInteriorAreaEdge()) return null;\n\t\tif (de.getEdge().isInResult()) return null;\n\t\tAssert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n\t\tif (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n\t\t\tedges.add(de.getEdge());\n\t\t\tde.setVisitedEdge(true);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineBuilder;\n\t}\n});\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport OverlayOp from './OverlayOp';\nexport default function PointBuilder() {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._resultPointList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n}\nextend(PointBuilder.prototype, {\n\tfilterCoveredNodeToPoint: function (n) {\n\t\tvar coord = n.getCoordinate();\n\t\tif (!this._op.isCoveredByLA(coord)) {\n\t\t\tvar pt = this._geometryFactory.createPoint(coord);\n\t\t\tthis._resultPointList.add(pt);\n\t\t}\n\t},\n\textractNonCoveredResultNodes: function (opCode) {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar n = nodeit.next();\n\t\t\tif (n.isInResult()) continue;\n\t\t\tif (n.isIncidentEdgeInResult()) continue;\n\t\t\tif (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n\t\t\t\tvar label = n.getLabel();\n\t\t\t\tif (OverlayOp.isResultOfOp(label, opCode)) {\n\t\t\t\t\tthis.filterCoveredNodeToPoint(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function (opCode) {\n\t\tthis.extractNonCoveredResultNodes(opCode);\n\t\treturn this._resultPointList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointBuilder;\n\t}\n});\n","import LineString from '../../../geom/LineString';\nimport CoordinateList from '../../../geom/CoordinateList';\nimport Coordinate from '../../../geom/Coordinate';\nimport Double from '../../../../../../java/lang/Double';\nimport extend from '../../../../../../extend';\nimport LineSegment from '../../../geom/LineSegment';\nexport default function LineStringSnapper() {\n\tthis._snapTolerance = 0.0;\n\tthis._srcPts = null;\n\tthis._seg = new LineSegment();\n\tthis._allowSnappingToSourceVertices = false;\n\tthis._isClosed = false;\n\tif (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\n\t\tlet srcLine = arguments[0], snapTolerance = arguments[1];\n\t\tLineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n\t} else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\n\t\tlet srcPts = arguments[0], snapTolerance = arguments[1];\n\t\tthis._srcPts = srcPts;\n\t\tthis._isClosed = LineStringSnapper.isClosed(srcPts);\n\t\tthis._snapTolerance = snapTolerance;\n\t}\n}\nextend(LineStringSnapper.prototype, {\n\tsnapVertices: function (srcCoords, snapPts) {\n\t\tvar end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar srcPt = srcCoords.get(i);\n\t\t\tvar snapVert = this.findSnapForVertex(srcPt, snapPts);\n\t\t\tif (snapVert !== null) {\n\t\t\t\tsrcCoords.set(i, new Coordinate(snapVert));\n\t\t\t\tif (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\n\t\t\t}\n\t\t}\n\t},\n\tfindSnapForVertex: function (pt, snapPts) {\n\t\tfor (var i = 0; i < snapPts.length; i++) {\n\t\t\tif (pt.equals2D(snapPts[i])) return null;\n\t\t\tif (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i];\n\t\t}\n\t\treturn null;\n\t},\n\tsnapTo: function (snapPts) {\n\t\tvar coordList = new CoordinateList(this._srcPts);\n\t\tthis.snapVertices(coordList, snapPts);\n\t\tthis.snapSegments(coordList, snapPts);\n\t\tvar newPts = coordList.toCoordinateArray();\n\t\treturn newPts;\n\t},\n\tsnapSegments: function (srcCoords, snapPts) {\n\t\tif (snapPts.length === 0) return null;\n\t\tvar distinctPtCount = snapPts.length;\n\t\tif (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\n\t\tfor (var i = 0; i < distinctPtCount; i++) {\n\t\t\tvar snapPt = snapPts[i];\n\t\t\tvar index = this.findSegmentIndexToSnap(snapPt, srcCoords);\n\t\t\tif (index >= 0) {\n\t\t\t\tsrcCoords.add(index + 1, new Coordinate(snapPt), false);\n\t\t\t}\n\t\t}\n\t},\n\tfindSegmentIndexToSnap: function (snapPt, srcCoords) {\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tvar snapIndex = -1;\n\t\tfor (var i = 0; i < srcCoords.size() - 1; i++) {\n\t\t\tthis._seg.p0 = srcCoords.get(i);\n\t\t\tthis._seg.p1 = srcCoords.get(i + 1);\n\t\t\tif (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) {\n\t\t\t\tif (this._allowSnappingToSourceVertices) continue; else return -1;\n\t\t\t}\n\t\t\tvar dist = this._seg.distance(snapPt);\n\t\t\tif (dist < this._snapTolerance && dist < minDist) {\n\t\t\t\tminDist = dist;\n\t\t\t\tsnapIndex = i;\n\t\t\t}\n\t\t}\n\t\treturn snapIndex;\n\t},\n\tsetAllowSnappingToSourceVertices: function (allowSnappingToSourceVertices) {\n\t\tthis._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringSnapper;\n\t}\n});\nLineStringSnapper.isClosed = function (pts) {\n\tif (pts.length <= 1) return false;\n\treturn pts[0].equals2D(pts[pts.length - 1]);\n};\n","import TreeSet from '../../../../../../java/util/TreeSet';\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer';\nimport hasInterface from '../../../../../../hasInterface';\nimport Double from '../../../../../../java/lang/Double';\nimport extend from '../../../../../../extend';\nimport LineStringSnapper from './LineStringSnapper';\nimport PrecisionModel from '../../../geom/PrecisionModel';\nimport Polygonal from '../../../geom/Polygonal';\nimport inherits from '../../../../../../inherits';\nexport default function GeometrySnapper() {\n\tthis._srcGeom = null;\n\tlet srcGeom = arguments[0];\n\tthis._srcGeom = srcGeom;\n}\nextend(GeometrySnapper.prototype, {\n\tsnapTo: function (snapGeom, snapTolerance) {\n\t\tvar snapPts = this.extractTargetCoordinates(snapGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts);\n\t\treturn snapTrans.transform(this._srcGeom);\n\t},\n\tsnapToSelf: function (snapTolerance, cleanResult) {\n\t\tvar snapPts = this.extractTargetCoordinates(this._srcGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n\t\tvar snappedGeom = snapTrans.transform(this._srcGeom);\n\t\tvar result = snappedGeom;\n\t\tif (cleanResult && hasInterface(result, Polygonal)) {\n\t\t\tresult = snappedGeom.buffer(0);\n\t\t}\n\t\treturn result;\n\t},\n\tcomputeSnapTolerance: function (ringPts) {\n\t\tvar minSegLen = this.computeMinimumSegmentLength(ringPts);\n\t\tvar snapTol = minSegLen / 10;\n\t\treturn snapTol;\n\t},\n\textractTargetCoordinates: function (g) {\n\t\tvar ptSet = new TreeSet();\n\t\tvar pts = g.getCoordinates();\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tptSet.add(pts[i]);\n\t\t}\n\t\treturn ptSet.toArray(new Array(0).fill(null));\n\t},\n\tcomputeMinimumSegmentLength: function (pts) {\n\t\tvar minSegLen = Double.MAX_VALUE;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segLen < minSegLen) minSegLen = segLen;\n\t\t}\n\t\treturn minSegLen;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometrySnapper;\n\t}\n});\nGeometrySnapper.snap = function (g0, g1, snapTolerance) {\n\tvar snapGeom = new Array(2).fill(null);\n\tvar snapper0 = new GeometrySnapper(g0);\n\tsnapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n\tvar snapper1 = new GeometrySnapper(g1);\n\tsnapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n\treturn snapGeom;\n};\nGeometrySnapper.computeOverlaySnapTolerance = function () {\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tvar snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n\t\tvar pm = g.getPrecisionModel();\n\t\tif (pm.getType() === PrecisionModel.FIXED) {\n\t\t\tvar fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n\t\t\tif (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\n\t\t}\n\t\treturn snapTolerance;\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\treturn Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\n\t}\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function (g) {\n\tvar env = g.getEnvelopeInternal();\n\tvar minDimension = Math.min(env.getHeight(), env.getWidth());\n\tvar snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n\treturn snapTol;\n};\nGeometrySnapper.snapToSelf = function (geom, snapTolerance, cleanResult) {\n\tvar snapper0 = new GeometrySnapper(geom);\n\treturn snapper0.snapToSelf(snapTolerance, cleanResult);\n};\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\nfunction SnapTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._snapTolerance = null;\n\tthis._snapPts = null;\n\tthis._isSelfSnap = false;\n\tif (arguments.length === 2) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t} else if (arguments.length === 3) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t\tthis._isSelfSnap = isSelfSnap;\n\t}\n}\ninherits(SnapTransformer, GeometryTransformer);\nextend(SnapTransformer.prototype, {\n\tsnapLine: function (srcPts, snapPts) {\n\t\tvar snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n\t\tsnapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n\t\treturn snapper.snapTo(snapPts);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar srcPts = coords.toCoordinateArray();\n\t\tvar newPts = this.snapLine(srcPts, this._snapPts);\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapTransformer;\n\t}\n});\n","import Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function CommonBits() {\n\tthis._isFirst = true;\n\tthis._commonMantissaBitsCount = 53;\n\tthis._commonBits = 0;\n\tthis._commonSignExp = null;\n}\nextend(CommonBits.prototype, {\n\tgetCommon: function () {\n\t\treturn Double.longBitsToDouble(this._commonBits);\n\t},\n\tadd: function (num) {\n\t\tvar numBits = Double.doubleToLongBits(num);\n\t\tif (this._isFirst) {\n\t\t\tthis._commonBits = numBits;\n\t\t\tthis._commonSignExp = CommonBits.signExpBits(this._commonBits);\n\t\t\tthis._isFirst = false;\n\t\t\treturn null;\n\t\t}\n\t\tvar numSignExp = CommonBits.signExpBits(numBits);\n\t\tif (numSignExp !== this._commonSignExp) {\n\t\t\tthis._commonBits = 0;\n\t\t\treturn null;\n\t\t}\n\t\tthis._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n\t\tthis._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n\t},\n\ttoString: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof long) {\n\t\t\tlet bits = arguments[0];\n\t\t\tvar x = Double.longBitsToDouble(bits);\n\t\t\tvar numStr = Long.toBinaryString(bits);\n\t\t\tvar padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\n\t\t\tvar bitStr = padStr.substring(padStr.length - 64);\n\t\t\tvar str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\n\t\t\treturn str;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CommonBits;\n\t}\n});\nCommonBits.getBit = function (bits, i) {\n\tvar mask = 1 << i;\n\treturn (bits & mask) !== 0 ? 1 : 0;\n};\nCommonBits.signExpBits = function (num) {\n\treturn num >> 52;\n};\nCommonBits.zeroLowerBits = function (bits, nBits) {\n\tvar invMask = (1 << nBits) - 1;\n\tvar mask = ~invMask;\n\tvar zeroed = bits & mask;\n\treturn zeroed;\n};\nCommonBits.numCommonMostSigMantissaBits = function (num1, num2) {\n\tvar count = 0;\n\tfor (var i = 52; i >= 0; i--) {\n\t\tif (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\n\t\tcount++;\n\t}\n\treturn 52;\n};\n","import CommonBits from './CommonBits';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter';\nexport default function CommonBitsRemover() {\n\tthis._commonCoord = null;\n\tthis._ccFilter = new CommonCoordinateFilter();\n}\nextend(CommonBitsRemover.prototype, {\n\taddCommonBits: function (geom) {\n\t\tvar trans = new Translater(this._commonCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t},\n\tremoveCommonBits: function (geom) {\n\t\tif (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom;\n\t\tvar invCoord = new Coordinate(this._commonCoord);\n\t\tinvCoord.x = -invCoord.x;\n\t\tinvCoord.y = -invCoord.y;\n\t\tvar trans = new Translater(invCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t\treturn geom;\n\t},\n\tgetCommonCoordinate: function () {\n\t\treturn this._commonCoord;\n\t},\n\tadd: function (geom) {\n\t\tgeom.apply(this._ccFilter);\n\t\tthis._commonCoord = this._ccFilter.getCommonCoordinate();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CommonBitsRemover;\n\t}\n});\nfunction CommonCoordinateFilter() {\n\tthis._commonBitsX = new CommonBits();\n\tthis._commonBitsY = new CommonBits();\n}\nextend(CommonCoordinateFilter.prototype, {\n\tfilter: function (coord) {\n\t\tthis._commonBitsX.add(coord.x);\n\t\tthis._commonBitsY.add(coord.y);\n\t},\n\tgetCommonCoordinate: function () {\n\t\treturn new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon());\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function () {\n\t\treturn CommonCoordinateFilter;\n\t}\n});\nfunction Translater() {\n\tthis.trans = null;\n\tlet trans = arguments[0];\n\tthis.trans = trans;\n}\nextend(Translater.prototype, {\n\tfilter: function (seq, i) {\n\t\tvar xp = seq.getOrdinate(i, 0) + this.trans.x;\n\t\tvar yp = seq.getOrdinate(i, 1) + this.trans.y;\n\t\tseq.setOrdinate(i, 0, xp);\n\t\tseq.setOrdinate(i, 1, yp);\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\tisGeometryChanged: function () {\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFilter];\n\t},\n\tgetClass: function () {\n\t\treturn Translater;\n\t}\n});\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\nCommonBitsRemover.Translater = Translater;\n","import GeometrySnapper from './GeometrySnapper';\nimport extend from '../../../../../../extend';\nimport System from '../../../../../../java/lang/System';\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover';\nimport OverlayOp from '../OverlayOp';\nexport default function SnapOverlayOp() {\n\tthis._geom = new Array(2).fill(null);\n\tthis._snapTolerance = null;\n\tthis._cbr = null;\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n\tthis.computeSnapTolerance();\n}\nextend(SnapOverlayOp.prototype, {\n\tselfSnap: function (geom) {\n\t\tvar snapper0 = new GeometrySnapper(geom);\n\t\tvar snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tremoveCommonBits: function (geom) {\n\t\tthis._cbr = new CommonBitsRemover();\n\t\tthis._cbr.add(geom[0]);\n\t\tthis._cbr.add(geom[1]);\n\t\tvar remGeom = new Array(2).fill(null);\n\t\tremGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n\t\tremGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n\t\treturn remGeom;\n\t},\n\tprepareResult: function (geom) {\n\t\tthis._cbr.addCommonBits(geom);\n\t\treturn geom;\n\t},\n\tgetResultGeometry: function (opCode) {\n\t\tvar prepGeom = this.snap(this._geom);\n\t\tvar result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n\t\treturn this.prepareResult(result);\n\t},\n\tcheckValid: function (g) {\n\t\tif (!g.isValid()) {\n\t\t\tSystem.out.println(\"Snapped geometry is invalid\");\n\t\t}\n\t},\n\tcomputeSnapTolerance: function () {\n\t\tthis._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n\t},\n\tsnap: function (geom) {\n\t\tvar remGeom = this.removeCommonBits(geom);\n\t\tvar snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapOverlayOp;\n\t}\n});\nSnapOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapOverlayOp.union = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapOverlayOp.intersection = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapOverlayOp.difference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n","import SnapOverlayOp from './SnapOverlayOp';\nimport extend from '../../../../../../extend';\nimport RuntimeException from '../../../../../../java/lang/RuntimeException';\nimport OverlayOp from '../OverlayOp';\nexport default function SnapIfNeededOverlayOp() {\n\tthis._geom = new Array(2).fill(null);\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n}\nextend(SnapIfNeededOverlayOp.prototype, {\n\tgetResultGeometry: function (opCode) {\n\t\tvar result = null;\n\t\tvar isSuccess = false;\n\t\tvar savedException = null;\n\t\ttry {\n\t\t\tresult = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\tvar isValid = true;\n\t\t\tif (isValid) isSuccess = true;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tsavedException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (!isSuccess) {\n\t\t\ttry {\n\t\t\t\tresult = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\t\tthrow savedException;\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t}\n\t\treturn result;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapIfNeededOverlayOp;\n\t}\n});\nSnapIfNeededOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapIfNeededOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapIfNeededOverlayOp.union = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapIfNeededOverlayOp.intersection = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapIfNeededOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapIfNeededOverlayOp.difference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default function GeometryGraphOperation() {\n\tthis._li = new RobustLineIntersector();\n\tthis._resultPrecisionModel = null;\n\tthis._arg = null;\n\tif (arguments.length === 1) {\n\t\tlet g0 = arguments[0];\n\t\tthis.setComputationPrecision(g0.getPrecisionModel());\n\t\tthis._arg = new Array(1).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0);\n\t\t;\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tif (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel());\n\t\tthis._arg = new Array(2).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule);\n\t\tthis._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n\t}\n}\nextend(GeometryGraphOperation.prototype, {\n\tgetArgGeometry: function (i) {\n\t\treturn this._arg[i].getGeometry();\n\t},\n\tsetComputationPrecision: function (pm) {\n\t\tthis._resultPrecisionModel = pm;\n\t\tthis._li.setPrecisionModel(this._resultPrecisionModel);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryGraphOperation;\n\t}\n});\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator';\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper';\nimport PolygonBuilder from './PolygonBuilder';\nimport Position from '../../geomgraph/Position';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport LineBuilder from './LineBuilder';\nimport PointBuilder from './PointBuilder';\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from './OverlayNodeFactory';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function OverlayOp() {\n\tthis._ptLocator = new PointLocator();\n\tthis._geomFact = null;\n\tthis._resultGeom = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tthis._resultPolyList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tthis._resultPointList = new ArrayList();\n\tlet g0 = arguments[0], g1 = arguments[1];\n\tGeometryGraphOperation.call(this, g0, g1);\n\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\tthis._geomFact = g0.getFactory();\n}\ninherits(OverlayOp, GeometryGraphOperation);\nextend(OverlayOp.prototype, {\n\tinsertUniqueEdge: function (e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\tvar depth = existingEdge.getDepth();\n\t\t\tif (depth.isNull()) {\n\t\t\t\tdepth.add(existingLabel);\n\t\t\t}\n\t\t\tdepth.add(labelToMerge);\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t}\n\t},\n\tgetGraph: function () {\n\t\treturn this._graph;\n\t},\n\tcancelDuplicateResultEdges: function () {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.isInResult() && sym.isInResult()) {\n\t\t\t\tde.setInResult(false);\n\t\t\t\tsym.setInResult(false);\n\t\t\t}\n\t\t}\n\t},\n\tisCoveredByLA: function (coord) {\n\t\tif (this.isCovered(coord, this._resultLineList)) return true;\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tcomputeGeometry: function (resultPointList, resultLineList, resultPolyList, opcode) {\n\t\tvar geomList = new ArrayList();\n\t\tgeomList.addAll(resultPointList);\n\t\tgeomList.addAll(resultLineList);\n\t\tgeomList.addAll(resultPolyList);\n\t\tif (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact);\n\t\treturn this._geomFact.buildGeometry(geomList);\n\t},\n\tmergeSymLabels: function () {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().mergeSymLabels();\n\t\t}\n\t},\n\tisCovered: function (coord, geomList) {\n\t\tfor (var it = geomList.iterator(); it.hasNext(); ) {\n\t\t\tvar geom = it.next();\n\t\t\tvar loc = this._ptLocator.locate(coord, geom);\n\t\t\tif (loc !== Location.EXTERIOR) return true;\n\t\t}\n\t\treturn false;\n\t},\n\treplaceCollapsedEdges: function () {\n\t\tvar newEdges = new ArrayList();\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.isCollapsed()) {\n\t\t\t\tit.remove();\n\t\t\t\tnewEdges.add(e.getCollapsedEdge());\n\t\t\t}\n\t\t}\n\t\tthis._edgeList.addAll(newEdges);\n\t},\n\tupdateNodeLabelling: function () {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tvar lbl = node.getEdges().getLabel();\n\t\t\tnode.getLabel().merge(lbl);\n\t\t}\n\t},\n\tgetResultGeometry: function (overlayOpCode) {\n\t\tthis.computeOverlay(overlayOpCode);\n\t\treturn this._resultGeom;\n\t},\n\tinsertUniqueEdges: function (edges) {\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.insertUniqueEdge(e);\n\t\t}\n\t},\n\tcomputeOverlay: function (opCode) {\n\t\tthis.copyPoints(0);\n\t\tthis.copyPoints(1);\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tthis._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n\t\tvar baseSplitEdges = new ArrayList();\n\t\tthis._arg[0].computeSplitEdges(baseSplitEdges);\n\t\tthis._arg[1].computeSplitEdges(baseSplitEdges);\n\t\tvar splitEdges = baseSplitEdges;\n\t\tthis.insertUniqueEdges(baseSplitEdges);\n\t\tthis.computeLabelsFromDepths();\n\t\tthis.replaceCollapsedEdges();\n\t\tEdgeNodingValidator.checkValid(this._edgeList.getEdges());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tthis.computeLabelling();\n\t\tthis.labelIncompleteNodes();\n\t\tthis.findResultAreaEdges(opCode);\n\t\tthis.cancelDuplicateResultEdges();\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tpolyBuilder.add(this._graph);\n\t\tthis._resultPolyList = polyBuilder.getPolygons();\n\t\tvar lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultLineList = lineBuilder.build(opCode);\n\t\tvar pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultPointList = pointBuilder.build(opCode);\n\t\tthis._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n\t},\n\tlabelIncompleteNode: function (n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setLocation(targetIndex, loc);\n\t},\n\tcopyPoints: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._graph.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tfindResultAreaEdges: function (opCode) {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tif (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelsFromDepths: function () {\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar lbl = e.getLabel();\n\t\t\tvar depth = e.getDepth();\n\t\t\tif (!depth.isNull()) {\n\t\t\t\tdepth.normalize();\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tif (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n\t\t\t\t\t\tif (depth.getDelta(i) === 0) {\n\t\t\t\t\t\t\tlbl.toLine(i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function () {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t\tthis.mergeSymLabels();\n\t\tthis.updateNodeLabelling();\n\t},\n\tlabelIncompleteNodes: function () {\n\t\tvar nodeCount = 0;\n\t\tfor (var ni = this._graph.getNodes().iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tnodeCount++;\n\t\t\t\tif (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1);\n\t\t\t}\n\t\t\tn.getEdges().updateLabelling(label);\n\t\t}\n\t},\n\tisCoveredByA: function (coord) {\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OverlayOp;\n\t}\n});\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n\tvar gov = new OverlayOp(geom0, geom1);\n\tvar geomOv = gov.getResultGeometry(opCode);\n\treturn geomOv;\n};\nOverlayOp.union = function (geom, other) {\n\tif (geom.isEmpty() || other.isEmpty()) {\n\t\tif (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory());\n\t\tif (geom.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return geom.copy();\n\t}\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION);\n};\nOverlayOp.intersection = function (geom, other) {\n\tif (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory());\n\tif (geom.isGeometryCollection()) {\n\t\tvar g2 = other;\n\t\treturn GeometryCollectionMapper.map(geom, {\n\t\t\tinterfaces_: function () {\n\t\t\t\treturn [MapOp];\n\t\t\t},\n\t\t\tmap: function (g) {\n\t\t\t\treturn g.intersection(g2);\n\t\t\t}\n\t\t});\n\t}\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION);\n};\nOverlayOp.symDifference = function (geom, other) {\n\tif (geom.isEmpty() || other.isEmpty()) {\n\t\tif (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory());\n\t\tif (geom.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return geom.copy();\n\t}\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE);\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n\tvar dim0 = g0.getDimension();\n\tvar dim1 = g1.getDimension();\n\tvar resultDimension = -1;\n\tswitch (opCode) {\n\t\tcase OverlayOp.INTERSECTION:\n\t\t\tresultDimension = Math.min(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.UNION:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.DIFFERENCE:\n\t\t\tresultDimension = dim0;\n\t\t\tbreak;\n\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t}\n\treturn resultDimension;\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n\tvar result = null;\n\tswitch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n\t\tcase -1:\n\t\t\tresult = geomFact.createGeometryCollection();\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tresult = geomFact.createPoint();\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tresult = geomFact.createLineString();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tresult = geomFact.createPolygon();\n\t\t\tbreak;\n\t}\n\treturn result;\n};\nOverlayOp.difference = function (geom, other) {\n\tif (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory());\n\tif (other.isEmpty()) return geom.copy();\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE);\n};\nOverlayOp.isResultOfOp = function () {\n\tif (arguments.length === 2) {\n\t\tlet label = arguments[0], opCode = arguments[1];\n\t\tvar loc0 = label.getLocation(0);\n\t\tvar loc1 = label.getLocation(1);\n\t\treturn OverlayOp.isResultOfOp(loc0, loc1, opCode);\n\t} else if (arguments.length === 3) {\n\t\tlet loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2];\n\t\tif (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR;\n\t\tif (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR;\n\t\tswitch (overlayOpCode) {\n\t\t\tcase OverlayOp.INTERSECTION:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.UNION:\n\t\t\t\treturn loc0 === Location.INTERIOR || loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.DIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR;\n\t\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t}\n\t\treturn false;\n\t}\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n","import extend from '../../../../../extend';\nimport DirectedEdge from '../../planargraph/DirectedEdge';\nimport inherits from '../../../../../inherits';\nexport default function PolygonizeDirectedEdge() {\n\tthis._edgeRing = null;\n\tthis._next = null;\n\tthis._label = -1;\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(PolygonizeDirectedEdge, DirectedEdge);\nextend(PolygonizeDirectedEdge.prototype, {\n\tgetNext: function () {\n\t\treturn this._next;\n\t},\n\tisInRing: function () {\n\t\treturn this._edgeRing !== null;\n\t},\n\tsetRing: function (edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t},\n\tsetLabel: function (label) {\n\t\tthis._label = label;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tsetNext: function (next) {\n\t\tthis._next = next;\n\t},\n\tgetRing: function () {\n\t\treturn this._edgeRing;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeDirectedEdge;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Edge from '../../planargraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function PolygonizeEdge() {\n\tEdge.apply(this);\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n}\ninherits(PolygonizeEdge, Edge);\nextend(PolygonizeEdge.prototype, {\n\tgetLine: function () {\n\t\treturn this._line;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeEdge;\n\t}\n});\n","import CoordinateList from '../../geom/CoordinateList';\nimport WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport PointLocation from '../../algorithm/PointLocation';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport Exception from '../../../../../java/lang/Exception';\nimport Orientation from '../../algorithm/Orientation';\nimport System from '../../../../../java/lang/System';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Assert from '../../util/Assert';\nexport default function EdgeRing() {\n\tthis._factory = null;\n\tthis._deList = new ArrayList();\n\tthis._lowestEdge = null;\n\tthis._ring = null;\n\tthis._ringPts = null;\n\tthis._holes = null;\n\tthis._shell = null;\n\tthis._isHole = null;\n\tthis._isProcessed = false;\n\tthis._isIncludedSet = false;\n\tthis._isIncluded = false;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n}\nextend(EdgeRing.prototype, {\n\tisIncluded: function () {\n\t\treturn this._isIncluded;\n\t},\n\tgetCoordinates: function () {\n\t\tif (this._ringPts === null) {\n\t\t\tvar coordList = new CoordinateList();\n\t\t\tfor (var i = this._deList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tEdgeRing.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\n\t\t\t}\n\t\t\tthis._ringPts = coordList.toCoordinateArray();\n\t\t}\n\t\treturn this._ringPts;\n\t},\n\tisIncludedSet: function () {\n\t\treturn this._isIncludedSet;\n\t},\n\tisValid: function () {\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length <= 3) return false;\n\t\tthis.getRing();\n\t\treturn this._ring.isValid();\n\t},\n\tbuild: function (startDE) {\n\t\tvar de = startDE;\n\t\tdo {\n\t\t\tthis.add(de);\n\t\t\tde.setRing(this);\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t},\n\tisOuterHole: function () {\n\t\tif (!this._isHole) return false;\n\t\treturn !this.hasShell();\n\t},\n\tgetPolygon: function () {\n\t\tvar holeLR = null;\n\t\tif (this._holes !== null) {\n\t\t\tholeLR = new Array(this._holes.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\t\tholeLR[i] = this._holes.get(i);\n\t\t\t}\n\t\t}\n\t\tvar poly = this._factory.createPolygon(this._ring, holeLR);\n\t\treturn poly;\n\t},\n\tisHole: function () {\n\t\treturn this._isHole;\n\t},\n\tisProcessed: function () {\n\t\treturn this._isProcessed;\n\t},\n\taddHole: function () {\n\t\tif (arguments[0] instanceof LinearRing) {\n\t\t\tlet hole = arguments[0];\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t} else if (arguments[0] instanceof EdgeRing) {\n\t\t\tlet holeER = arguments[0];\n\t\t\tholeER.setShell(this);\n\t\t\tvar hole = holeER.getRing();\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t}\n\t},\n\tsetIncluded: function (isIncluded) {\n\t\tthis._isIncluded = isIncluded;\n\t\tthis._isIncludedSet = true;\n\t},\n\tgetOuterHole: function () {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjRing = de.getSym().getRing();\n\t\t\tif (adjRing.isOuterHole()) return adjRing;\n\t\t}\n\t\treturn null;\n\t},\n\tcomputeHole: function () {\n\t\tvar ring = this.getRing();\n\t\tthis._isHole = Orientation.isCCW(ring.getCoordinates());\n\t},\n\thasShell: function () {\n\t\treturn this._shell !== null;\n\t},\n\tisOuterShell: function () {\n\t\treturn this.getOuterHole() !== null;\n\t},\n\tgetLineString: function () {\n\t\tthis.getCoordinates();\n\t\treturn this._factory.createLineString(this._ringPts);\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\n\t},\n\tgetShell: function () {\n\t\tif (this.isHole()) return this._shell;\n\t\treturn this;\n\t},\n\tadd: function (de) {\n\t\tthis._deList.add(de);\n\t},\n\tgetRing: function () {\n\t\tif (this._ring !== null) return this._ring;\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length < 3) System.out.println(this._ringPts);\n\t\ttry {\n\t\t\tthis._ring = this._factory.createLinearRing(this._ringPts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tSystem.out.println(this._ringPts);\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\treturn this._ring;\n\t},\n\tupdateIncluded: function () {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjShell = de.getSym().getRing().getShell();\n\t\t\tif (adjShell !== null && adjShell.isIncludedSet()) {\n\t\t\t\tthis.setIncluded(!adjShell.isIncluded());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function (shell) {\n\t\tthis._shell = shell;\n\t},\n\tsetProcessed: function (isProcessed) {\n\t\tthis._isProcessed = isProcessed;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeRing;\n\t}\n});\nEdgeRing.findDirEdgesInRing = function (startDE) {\n\tvar de = startDE;\n\tvar edges = new ArrayList();\n\tdo {\n\t\tedges.add(de);\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn edges;\n};\nEdgeRing.addEdge = function (coords, isForward, coordList) {\n\tif (isForward) {\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t} else {\n\t\tfor (var i = coords.length - 1; i >= 0; i--) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t}\n};\nEdgeRing.findEdgeRingContaining = function (testEr, shellList) {\n\tvar testRing = testEr.getRing();\n\tvar testEnv = testRing.getEnvelopeInternal();\n\tvar testPt = testRing.getCoordinateN(0);\n\tvar minShell = null;\n\tvar minShellEnv = null;\n\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\tvar tryShell = it.next();\n\t\tvar tryShellRing = tryShell.getRing();\n\t\tvar tryShellEnv = tryShellRing.getEnvelopeInternal();\n\t\tif (tryShellEnv.equals(testEnv)) continue;\n\t\tif (!tryShellEnv.contains(testEnv)) continue;\n\t\ttestPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\n\t\tvar isContained = false;\n\t\tif (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\n\t\tif (isContained) {\n\t\t\tif (minShell === null || minShellEnv.contains(tryShellEnv)) {\n\t\t\t\tminShell = tryShell;\n\t\t\t\tminShellEnv = minShell.getRing().getEnvelopeInternal();\n\t\t\t}\n\t\t}\n\t}\n\treturn minShell;\n};\nfunction EnvelopeComparator() {}\nextend(EnvelopeComparator.prototype, {\n\tcompare: function (obj0, obj1) {\n\t\tvar r0 = obj0;\n\t\tvar r1 = obj1;\n\t\treturn r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn EnvelopeComparator;\n\t}\n});\nEdgeRing.EnvelopeComparator = EnvelopeComparator;\n","import PolygonizeDirectedEdge from './PolygonizeDirectedEdge';\nimport HashSet from '../../../../../java/util/HashSet';\nimport Stack from '../../../../../java/util/Stack';\nimport Node from '../../planargraph/Node';\nimport PolygonizeEdge from './PolygonizeEdge';\nimport extend from '../../../../../extend';\nimport EdgeRing from './EdgeRing';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default function PolygonizeGraph() {\n\tPlanarGraph.apply(this);\n\tthis._factory = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n}\ninherits(PolygonizeGraph, PlanarGraph);\nextend(PolygonizeGraph.prototype, {\n\tfindEdgeRing: function (startDE) {\n\t\tvar er = new EdgeRing(this._factory);\n\t\ter.build(startDE);\n\t\treturn er;\n\t},\n\tcomputeDepthParity: function () {\n\t\tif (arguments.length === 0) {\n\t\t\twhile (true) {\n\t\t\t\tvar de = null;\n\t\t\t\tif (de === null) return null;\n\t\t\t\tthis.computeDepthParity(de);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t}\n\t},\n\tcomputeNextCWEdges: function () {\n\t\tfor (var iNode = this.nodeIterator(); iNode.hasNext(); ) {\n\t\t\tvar node = iNode.next();\n\t\t\tPolygonizeGraph.computeNextCWEdges(node);\n\t\t}\n\t},\n\taddEdge: function (line) {\n\t\tif (line.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (linePts.length < 2) {\n\t\t\treturn null;\n\t\t}\n\t\tvar startPt = linePts[0];\n\t\tvar endPt = linePts[linePts.length - 1];\n\t\tvar nStart = this.getNode(startPt);\n\t\tvar nEnd = this.getNode(endPt);\n\t\tvar de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\n\t\tvar de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\n\t\tvar edge = new PolygonizeEdge(line);\n\t\tedge.setDirectedEdges(de0, de1);\n\t\tthis.add(edge);\n\t},\n\tdeleteCutEdges: function () {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tvar cutLines = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.getLabel() === sym.getLabel()) {\n\t\t\t\tde.setMarked(true);\n\t\t\t\tsym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tcutLines.add(e.getLine());\n\t\t\t}\n\t\t}\n\t\treturn cutLines;\n\t},\n\tgetEdgeRings: function () {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.label(this._dirEdges, -1);\n\t\tvar maximalRings = PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tthis.convertMaximalToMinimalEdgeRings(maximalRings);\n\t\tvar edgeRingList = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tif (de.isInRing()) continue;\n\t\t\tvar er = this.findEdgeRing(de);\n\t\t\tedgeRingList.add(er);\n\t\t}\n\t\treturn edgeRingList;\n\t},\n\tgetNode: function (pt) {\n\t\tvar node = this.findNode(pt);\n\t\tif (node === null) {\n\t\t\tnode = new Node(pt);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tconvertMaximalToMinimalEdgeRings: function (ringEdges) {\n\t\tfor (var i = ringEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tvar intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\n\t\t\tif (intNodes === null) continue;\n\t\t\tfor (var iNode = intNodes.iterator(); iNode.hasNext(); ) {\n\t\t\t\tvar node = iNode.next();\n\t\t\t\tPolygonizeGraph.computeNextCCWEdges(node, label);\n\t\t\t}\n\t\t}\n\t},\n\tdeleteDangles: function () {\n\t\tvar nodesToRemove = this.findNodesOfDegree(1);\n\t\tvar dangleLines = new HashSet();\n\t\tvar nodeStack = new Stack();\n\t\tfor (var i = nodesToRemove.iterator(); i.hasNext(); ) {\n\t\t\tnodeStack.push(i.next());\n\t\t}\n\t\twhile (!nodeStack.isEmpty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tPolygonizeGraph.deleteAllEdges(node);\n\t\t\tvar nodeOutEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = nodeOutEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tde.setMarked(true);\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) sym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tdangleLines.add(e.getLine());\n\t\t\t\tvar toNode = de.getToNode();\n\t\t\t\tif (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\n\t\t\t}\n\t\t}\n\t\treturn dangleLines;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeGraph;\n\t}\n});\nPolygonizeGraph.findLabeledEdgeRings = function (dirEdges) {\n\tvar edgeRingStarts = new ArrayList();\n\tvar currLabel = 1;\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (de.isMarked()) continue;\n\t\tif (de.getLabel() >= 0) continue;\n\t\tedgeRingStarts.add(de);\n\t\tvar edges = EdgeRing.findDirEdgesInRing(de);\n\t\tPolygonizeGraph.label(edges, currLabel);\n\t\tcurrLabel++;\n\t}\n\treturn edgeRingStarts;\n};\nPolygonizeGraph.getDegreeNonDeleted = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (!de.isMarked()) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.deleteAllEdges = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tde.setMarked(true);\n\t\tvar sym = de.getSym();\n\t\tif (sym !== null) sym.setMarked(true);\n\t}\n};\nPolygonizeGraph.label = function (dirEdges, label) {\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tde.setLabel(label);\n\t}\n};\nPolygonizeGraph.computeNextCWEdges = function (node) {\n\tvar deStar = node.getOutEdges();\n\tvar startDE = null;\n\tvar prevDE = null;\n\tfor (var i = deStar.getEdges().iterator(); i.hasNext(); ) {\n\t\tvar outDE = i.next();\n\t\tif (outDE.isMarked()) continue;\n\t\tif (startDE === null) startDE = outDE;\n\t\tif (prevDE !== null) {\n\t\t\tvar sym = prevDE.getSym();\n\t\t\tsym.setNext(outDE);\n\t\t}\n\t\tprevDE = outDE;\n\t}\n\tif (prevDE !== null) {\n\t\tvar sym = prevDE.getSym();\n\t\tsym.setNext(startDE);\n\t}\n};\nPolygonizeGraph.computeNextCCWEdges = function (node, label) {\n\tvar deStar = node.getOutEdges();\n\tvar firstOutDE = null;\n\tvar prevInDE = null;\n\tvar edges = deStar.getEdges();\n\tfor (var i = edges.size() - 1; i >= 0; i--) {\n\t\tvar de = edges.get(i);\n\t\tvar sym = de.getSym();\n\t\tvar outDE = null;\n\t\tif (de.getLabel() === label) outDE = de;\n\t\tvar inDE = null;\n\t\tif (sym.getLabel() === label) inDE = sym;\n\t\tif (outDE === null && inDE === null) continue;\n\t\tif (inDE !== null) {\n\t\t\tprevInDE = inDE;\n\t\t}\n\t\tif (outDE !== null) {\n\t\t\tif (prevInDE !== null) {\n\t\t\t\tprevInDE.setNext(outDE);\n\t\t\t\tprevInDE = null;\n\t\t\t}\n\t\t\tif (firstOutDE === null) firstOutDE = outDE;\n\t\t}\n\t}\n\tif (prevInDE !== null) {\n\t\tAssert.isTrue(firstOutDE !== null);\n\t\tprevInDE.setNext(firstOutDE);\n\t}\n};\nPolygonizeGraph.getDegree = function (node, label) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (de.getLabel() === label) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.findIntersectionNodes = function (startDE, label) {\n\tvar de = startDE;\n\tvar intNodes = null;\n\tdo {\n\t\tvar node = de.getFromNode();\n\t\tif (PolygonizeGraph.getDegree(node, label) > 1) {\n\t\t\tif (intNodes === null) intNodes = new ArrayList();\n\t\t\tintNodes.add(node);\n\t\t}\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn intNodes;\n};\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport PolygonizeGraph from './PolygonizeGraph';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Collection from '../../../../../java/util/Collection';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport EdgeRing from './EdgeRing';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function Polygonizer() {\n\tthis._lineStringAdder = new LineStringAdder(this);\n\tthis._graph = null;\n\tthis._dangles = new ArrayList();\n\tthis._cutEdges = new ArrayList();\n\tthis._invalidRingLines = new ArrayList();\n\tthis._holeList = null;\n\tthis._shellList = null;\n\tthis._polyList = null;\n\tthis._isCheckingRingsValid = true;\n\tthis._extractOnlyPolygonal = null;\n\tthis._geomFactory = null;\n\tif (arguments.length === 0) {\n\t\tPolygonizer.call(this, false);\n\t} else if (arguments.length === 1) {\n\t\tlet extractOnlyPolygonal = arguments[0];\n\t\tthis._extractOnlyPolygonal = extractOnlyPolygonal;\n\t}\n}\nextend(Polygonizer.prototype, {\n\tgetGeometry: function () {\n\t\tif (this._geomFactory === null) this._geomFactory = new GeometryFactory();\n\t\tthis.polygonize();\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\treturn this._geomFactory.buildGeometry(this._polyList);\n\t\t}\n\t\treturn this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList));\n\t},\n\tgetInvalidRingLines: function () {\n\t\tthis.polygonize();\n\t\treturn this._invalidRingLines;\n\t},\n\tfindValidRings: function (edgeRingList, validEdgeRingList, invalidRingList) {\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isValid()) validEdgeRingList.add(er); else invalidRingList.add(er.getLineString());\n\t\t}\n\t},\n\tpolygonize: function () {\n\t\tif (this._polyList !== null) return null;\n\t\tthis._polyList = new ArrayList();\n\t\tif (this._graph === null) return null;\n\t\tthis._dangles = this._graph.deleteDangles();\n\t\tthis._cutEdges = this._graph.deleteCutEdges();\n\t\tvar edgeRingList = this._graph.getEdgeRings();\n\t\tvar validEdgeRingList = new ArrayList();\n\t\tthis._invalidRingLines = new ArrayList();\n\t\tif (this._isCheckingRingsValid) {\n\t\t\tthis.findValidRings(edgeRingList, validEdgeRingList, this._invalidRingLines);\n\t\t} else {\n\t\t\tvalidEdgeRingList = edgeRingList;\n\t\t}\n\t\tthis.findShellsAndHoles(validEdgeRingList);\n\t\tPolygonizer.assignHolesToShells(this._holeList, this._shellList);\n\t\tCollections.sort(this._shellList, new EdgeRing.EnvelopeComparator());\n\t\tvar includeAll = true;\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\tPolygonizer.findDisjointShells(this._shellList);\n\t\t\tincludeAll = false;\n\t\t}\n\t\tthis._polyList = Polygonizer.extractPolygons(this._shellList, includeAll);\n\t},\n\tgetDangles: function () {\n\t\tthis.polygonize();\n\t\treturn this._dangles;\n\t},\n\tgetCutEdges: function () {\n\t\tthis.polygonize();\n\t\treturn this._cutEdges;\n\t},\n\tgetPolygons: function () {\n\t\tthis.polygonize();\n\t\treturn this._polyList;\n\t},\n\tadd: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geomList = arguments[0];\n\t\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tthis._geomFactory = line.getFactory();\n\t\t\tif (this._graph === null) this._graph = new PolygonizeGraph(this._geomFactory);\n\t\t\tthis._graph.addEdge(line);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tg.apply(this._lineStringAdder);\n\t\t}\n\t},\n\tsetCheckRingsValid: function (isCheckingRingsValid) {\n\t\tthis._isCheckingRingsValid = isCheckingRingsValid;\n\t},\n\tfindShellsAndHoles: function (edgeRingList) {\n\t\tthis._holeList = new ArrayList();\n\t\tthis._shellList = new ArrayList();\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\ter.computeHole();\n\t\t\tif (er.isHole()) this._holeList.add(er); else this._shellList.add(er);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Polygonizer;\n\t}\n});\nPolygonizer.findOuterShells = function (shellList) {\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\tvar er = i.next();\n\t\tvar outerHoleER = er.getOuterHole();\n\t\tif (outerHoleER !== null && !outerHoleER.isProcessed()) {\n\t\t\ter.setIncluded(true);\n\t\t\touterHoleER.setProcessed(true);\n\t\t}\n\t}\n};\nPolygonizer.extractPolygons = function (shellList, includeAll) {\n\tvar polyList = new ArrayList();\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\tvar er = i.next();\n\t\tif (includeAll || er.isIncluded()) {\n\t\t\tpolyList.add(er.getPolygon());\n\t\t}\n\t}\n\treturn polyList;\n};\nPolygonizer.assignHolesToShells = function (holeList, shellList) {\n\tfor (var i = holeList.iterator(); i.hasNext(); ) {\n\t\tvar holeER = i.next();\n\t\tPolygonizer.assignHoleToShell(holeER, shellList);\n\t}\n};\nPolygonizer.assignHoleToShell = function (holeER, shellList) {\n\tvar shell = EdgeRing.findEdgeRingContaining(holeER, shellList);\n\tif (shell !== null) {\n\t\tshell.addHole(holeER);\n\t}\n};\nPolygonizer.findDisjointShells = function (shellList) {\n\tPolygonizer.findOuterShells(shellList);\n\tvar isMoreToScan = null;\n\tdo {\n\t\tisMoreToScan = false;\n\t\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isIncludedSet()) continue;\n\t\t\ter.updateIncluded();\n\t\t\tif (!er.isIncludedSet()) {\n\t\t\t\tisMoreToScan = true;\n\t\t\t}\n\t\t}\n\t} while (isMoreToScan);\n};\nfunction LineStringAdder() {\n\tthis.p = null;\n\tlet p = arguments[0];\n\tthis.p = p;\n}\nextend(LineStringAdder.prototype, {\n\tfilter: function (g) {\n\t\tif (g instanceof LineString) this.p.add(g);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringAdder;\n\t}\n});\nPolygonizer.LineStringAdder = LineStringAdder;\n","import EdgeEnd from '../../geomgraph/EdgeEnd';\nimport extend from '../../../../../extend';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function EdgeEndBuilder() {}\nextend(EdgeEndBuilder.prototype, {\n\tcreateEdgeEndForNext: function (edge, l, eiCurr, eiNext) {\n\t\tvar iNext = eiCurr.segmentIndex + 1;\n\t\tif (iNext >= edge.getNumPoints() && eiNext === null) return null;\n\t\tvar pNext = edge.getCoordinate(iNext);\n\t\tif (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\n\t\tl.add(e);\n\t},\n\tcreateEdgeEndForPrev: function (edge, l, eiCurr, eiPrev) {\n\t\tvar iPrev = eiCurr.segmentIndex;\n\t\tif (eiCurr.dist === 0.0) {\n\t\t\tif (iPrev === 0) return null;\n\t\t\tiPrev--;\n\t\t}\n\t\tvar pPrev = edge.getCoordinate(iPrev);\n\t\tif (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\n\t\tvar label = new Label(edge.getLabel());\n\t\tlabel.flip();\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\n\t\tl.add(e);\n\t},\n\tcomputeEdgeEnds: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tvar l = new ArrayList();\n\t\t\tfor (var i = edges; i.hasNext(); ) {\n\t\t\t\tvar e = i.next();\n\t\t\t\tthis.computeEdgeEnds(e, l);\n\t\t\t}\n\t\t\treturn l;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edge = arguments[0], l = arguments[1];\n\t\t\tvar eiList = edge.getEdgeIntersectionList();\n\t\t\teiList.addEndpoints();\n\t\t\tvar it = eiList.iterator();\n\t\t\tvar eiPrev = null;\n\t\t\tvar eiCurr = null;\n\t\t\tif (!it.hasNext()) return null;\n\t\t\tvar eiNext = it.next();\n\t\t\tdo {\n\t\t\t\teiPrev = eiCurr;\n\t\t\t\teiCurr = eiNext;\n\t\t\t\teiNext = null;\n\t\t\t\tif (it.hasNext()) eiNext = it.next();\n\t\t\t\tif (eiCurr !== null) {\n\t\t\t\t\tthis.createEdgeEndForPrev(edge, l, eiCurr, eiPrev);\n\t\t\t\t\tthis.createEdgeEndForNext(edge, l, eiCurr, eiNext);\n\t\t\t\t}\n\t\t\t} while (eiCurr !== null);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBuilder;\n\t}\n});\n","import Location from '../../geom/Location';\nimport EdgeEnd from '../../geomgraph/EdgeEnd';\nimport Position from '../../geomgraph/Position';\nimport extend from '../../../../../extend';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Edge from '../../geomgraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function EdgeEndBundle() {\n\tthis._edgeEnds = new ArrayList();\n\tif (arguments.length === 1) {\n\t\tlet e = arguments[0];\n\t\tEdgeEndBundle.call(this, null, e);\n\t} else if (arguments.length === 2) {\n\t\tlet boundaryNodeRule = arguments[0], e = arguments[1];\n\t\tEdgeEnd.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()));\n\t\tthis.insert(e);\n\t}\n}\ninherits(EdgeEndBundle, EdgeEnd);\nextend(EdgeEndBundle.prototype, {\n\tinsert: function (e) {\n\t\tthis._edgeEnds.add(e);\n\t},\n\tprint: function (out) {\n\t\tout.println(\"EdgeEndBundle--> Label: \" + this._label);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this._edgeEnds.iterator();\n\t},\n\tgetEdgeEnds: function () {\n\t\treturn this._edgeEnds;\n\t},\n\tcomputeLabelOn: function (geomIndex, boundaryNodeRule) {\n\t\tvar boundaryCount = 0;\n\t\tvar foundInterior = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar loc = e.getLabel().getLocation(geomIndex);\n\t\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\t\tif (loc === Location.INTERIOR) foundInterior = true;\n\t\t}\n\t\tvar loc = Location.NONE;\n\t\tif (foundInterior) loc = Location.INTERIOR;\n\t\tif (boundaryCount > 0) {\n\t\t\tloc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\n\t\t}\n\t\tthis._label.setLocation(geomIndex, loc);\n\t},\n\tcomputeLabelSide: function (geomIndex, side) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) {\n\t\t\t\tvar loc = e.getLabel().getLocation(geomIndex, side);\n\t\t\t\tif (loc === Location.INTERIOR) {\n\t\t\t\t\tthis._label.setLocation(geomIndex, side, Location.INTERIOR);\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (loc === Location.EXTERIOR) this._label.setLocation(geomIndex, side, Location.EXTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tcomputeLabelSides: function (geomIndex) {\n\t\tthis.computeLabelSide(geomIndex, Position.LEFT);\n\t\tthis.computeLabelSide(geomIndex, Position.RIGHT);\n\t},\n\tupdateIM: function (im) {\n\t\tEdge.updateIM(this._label, im);\n\t},\n\tcomputeLabel: function (boundaryNodeRule) {\n\t\tvar isArea = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) isArea = true;\n\t\t}\n\t\tif (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE); else this._label = new Label(Location.NONE);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tthis.computeLabelOn(i, boundaryNodeRule);\n\t\t\tif (isArea) this.computeLabelSides(i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBundle;\n\t}\n});\n","import extend from '../../../../../extend';\nimport EdgeEndStar from '../../geomgraph/EdgeEndStar';\nimport inherits from '../../../../../inherits';\nimport EdgeEndBundle from './EdgeEndBundle';\nexport default function EdgeEndBundleStar() {\n\tEdgeEndStar.apply(this);\n}\ninherits(EdgeEndBundleStar, EdgeEndStar);\nextend(EdgeEndBundleStar.prototype, {\n\tupdateIM: function (im) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar esb = it.next();\n\t\t\tesb.updateIM(im);\n\t\t}\n\t},\n\tinsert: function (e) {\n\t\tvar eb = this._edgeMap.get(e);\n\t\tif (eb === null) {\n\t\t\teb = new EdgeEndBundle(e);\n\t\t\tthis.insertEdgeEnd(e, eb);\n\t\t} else {\n\t\t\teb.insert(e);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBundleStar;\n\t}\n});\n","import Node from '../../geomgraph/Node';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function RelateNode() {\n\tlet coord = arguments[0], edges = arguments[1];\n\tNode.call(this, coord, edges);\n}\ninherits(RelateNode, Node);\nextend(RelateNode.prototype, {\n\tupdateIMFromEdges: function (im) {\n\t\tthis._edges.updateIM(im);\n\t},\n\tcomputeIM: function (im) {\n\t\tim.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNode;\n\t}\n});\n","import EdgeEndBundleStar from './EdgeEndBundleStar';\nimport extend from '../../../../../extend';\nimport RelateNode from './RelateNode';\nimport inherits from '../../../../../inherits';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default function RelateNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(RelateNodeFactory, NodeFactory);\nextend(RelateNodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new RelateNode(coord, new EdgeEndBundleStar());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNodeFactory;\n\t}\n});\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport IntersectionMatrix from '../../geom/IntersectionMatrix';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport extend from '../../../../../extend';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport Assert from '../../util/Assert';\nexport default function RelateComputer() {\n\tthis._li = new RobustLineIntersector();\n\tthis._ptLocator = new PointLocator();\n\tthis._arg = null;\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n\tthis._im = null;\n\tthis._isolatedEdges = new ArrayList();\n\tthis._invalidPoint = null;\n\tlet arg = arguments[0];\n\tthis._arg = arg;\n}\nextend(RelateComputer.prototype, {\n\tinsertEdgeEnds: function (ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t},\n\tcomputeProperIntersectionIM: function (intersector, im) {\n\t\tvar dimA = this._arg[0].getGeometry().getDimension();\n\t\tvar dimB = this._arg[1].getGeometry().getDimension();\n\t\tvar hasProper = intersector.hasProperIntersection();\n\t\tvar hasProperInterior = intersector.hasProperInteriorIntersection();\n\t\tif (dimA === 2 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"212101212\");\n\t\t} else if (dimA === 2 && dimB === 1) {\n\t\t\tif (hasProper) im.setAtLeast(\"FFF0FFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\n\t\t} else if (dimA === 1 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"F0FFFFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\n\t\t} else if (dimA === 1 && dimB === 1) {\n\t\t\tif (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\n\t\t}\n\t},\n\tlabelIsolatedEdges: function (thisIndex, targetIndex) {\n\t\tfor (var ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tthis.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry());\n\t\t\t\tthis._isolatedEdges.add(e);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedEdge: function (e, targetIndex, target) {\n\t\tif (target.getDimension() > 0) {\n\t\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), target);\n\t\t\te.getLabel().setAllLocations(targetIndex, loc);\n\t\t} else {\n\t\t\te.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\n\t\t}\n\t},\n\tcomputeIM: function () {\n\t\tvar im = new IntersectionMatrix();\n\t\tim.set(Location.EXTERIOR, Location.EXTERIOR, 2);\n\t\tif (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n\t\t\tthis.computeDisjointIM(im);\n\t\t\treturn im;\n\t\t}\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tvar intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false);\n\t\tthis.computeIntersectionNodes(0);\n\t\tthis.computeIntersectionNodes(1);\n\t\tthis.copyNodesAndLabels(0);\n\t\tthis.copyNodesAndLabels(1);\n\t\tthis.labelIsolatedNodes();\n\t\tthis.computeProperIntersectionIM(intersector, im);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee0);\n\t\tvar ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee1);\n\t\tthis.labelNodeEdges();\n\t\tthis.labelIsolatedEdges(0, 1);\n\t\tthis.labelIsolatedEdges(1, 0);\n\t\tthis.updateIM(im);\n\t\treturn im;\n\t},\n\tlabelNodeEdges: function () {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t},\n\tcopyNodesAndLabels: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tlabelIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.find(ei.coord);\n\t\t\t\tif (n.getLabel().isNull(argIndex)) {\n\t\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNode: function (n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setAllLocations(targetIndex, loc);\n\t},\n\tcomputeIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNodes: function () {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tAssert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1);\n\t\t\t}\n\t\t}\n\t},\n\tupdateIM: function (im) {\n\t\tfor (var ei = this._isolatedEdges.iterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\te.updateIM(im);\n\t\t}\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.updateIM(im);\n\t\t\tnode.updateIMFromEdges(im);\n\t\t}\n\t},\n\tcomputeDisjointIM: function (im) {\n\t\tvar ga = this._arg[0].getGeometry();\n\t\tif (!ga.isEmpty()) {\n\t\t\tim.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\n\t\t\tim.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\n\t\t}\n\t\tvar gb = this._arg[1].getGeometry();\n\t\tif (!gb.isEmpty()) {\n\t\t\tim.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\n\t\t\tim.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateComputer;\n\t}\n});\n","import LineString from '../../geom/LineString';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport extend from '../../../../../extend';\nexport default function RectangleContains() {\n\tthis._rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleContains.prototype, {\n\tisContainedInBoundary: function (geom) {\n\t\tif (geom instanceof Polygon) return false;\n\t\tif (geom instanceof Point) return this.isPointContainedInBoundary(geom);\n\t\tif (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.isContainedInBoundary(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisLineSegmentContainedInBoundary: function (p0, p1) {\n\t\tif (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\n\t\tif (p0.x === p1.x) {\n\t\t\tif (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true;\n\t\t} else if (p0.y === p1.y) {\n\t\t\tif (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisLineStringContainedInBoundary: function (line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tfor (var i = 0; i < seq.size() - 1; i++) {\n\t\t\tseq.getCoordinate(i, p0);\n\t\t\tseq.getCoordinate(i + 1, p1);\n\t\t\tif (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisPointContainedInBoundary: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet point = arguments[0];\n\t\t\treturn this.isPointContainedInBoundary(point.getCoordinate());\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\treturn pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY();\n\t\t}\n\t},\n\tcontains: function (geom) {\n\t\tif (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false;\n\t\tif (this.isContainedInBoundary(geom)) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleContains;\n\t}\n});\nRectangleContains.contains = function (rectangle, b) {\n\tvar rc = new RectangleContains(rectangle);\n\treturn rc.contains(b);\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport Envelope from '../geom/Envelope';\nexport default function RectangleLineIntersector() {\n\tthis._li = new RobustLineIntersector();\n\tthis._rectEnv = null;\n\tthis._diagUp0 = null;\n\tthis._diagUp1 = null;\n\tthis._diagDown0 = null;\n\tthis._diagDown1 = null;\n\tlet rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n\tthis._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\n\tthis._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\n\tthis._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\n\tthis._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\n}\nextend(RectangleLineIntersector.prototype, {\n\tintersects: function (p0, p1) {\n\t\tvar segEnv = new Envelope(p0, p1);\n\t\tif (!this._rectEnv.intersects(segEnv)) return false;\n\t\tif (this._rectEnv.intersects(p0)) return true;\n\t\tif (this._rectEnv.intersects(p1)) return true;\n\t\tif (p0.compareTo(p1) > 0) {\n\t\t\tvar tmp = p0;\n\t\t\tp0 = p1;\n\t\t\tp1 = tmp;\n\t\t}\n\t\tvar isSegUpwards = false;\n\t\tif (p1.y > p0.y) isSegUpwards = true;\n\t\tif (isSegUpwards) {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1);\n\t\t} else {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1);\n\t\t}\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleLineIntersector;\n\t}\n});\n","import extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nexport default function ShortCircuitedGeometryVisitor() {\n\tthis._isDone = false;\n}\nextend(ShortCircuitedGeometryVisitor.prototype, {\n\tapplyTo: function (geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n\t\t\tvar element = geom.getGeometryN(i);\n\t\t\tif (!(element instanceof GeometryCollection)) {\n\t\t\t\tthis.visit(element);\n\t\t\t\tif (this.isDone()) {\n\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else this.applyTo(element);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ShortCircuitedGeometryVisitor;\n\t}\n});\n","import Coordinate from '../../geom/Coordinate';\nimport Polygon from '../../geom/Polygon';\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector';\nimport extend from '../../../../../extend';\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor';\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport inherits from '../../../../../inherits';\nexport default function RectangleIntersects() {\n\tthis._rectangle = null;\n\tthis._rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis._rectangle = rectangle;\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleIntersects.prototype, {\n\tintersects: function (geom) {\n\t\tif (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false;\n\t\tvar visitor = new EnvelopeIntersectsVisitor(this._rectEnv);\n\t\tvisitor.applyTo(geom);\n\t\tif (visitor.intersects()) return true;\n\t\tvar ecpVisitor = new GeometryContainsPointVisitor(this._rectangle);\n\t\tecpVisitor.applyTo(geom);\n\t\tif (ecpVisitor.containsPoint()) return true;\n\t\tvar riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle);\n\t\triVisitor.applyTo(geom);\n\t\tif (riVisitor.intersects()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleIntersects;\n\t}\n});\nRectangleIntersects.intersects = function (rectangle, b) {\n\tvar rp = new RectangleIntersects(rectangle);\n\treturn rp.intersects(b);\n};\nfunction EnvelopeIntersectsVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectEnv = null;\n\tthis._intersects = false;\n\tlet rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n}\ninherits(EnvelopeIntersectsVisitor, ShortCircuitedGeometryVisitor);\nextend(EnvelopeIntersectsVisitor.prototype, {\n\tisDone: function () {\n\t\treturn this._intersects === true;\n\t},\n\tvisit: function (element) {\n\t\tvar elementEnv = element.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._rectEnv.contains(elementEnv)) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t},\n\tintersects: function () {\n\t\treturn this._intersects;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EnvelopeIntersectsVisitor;\n\t}\n});\nfunction GeometryContainsPointVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectSeq = null;\n\tthis._rectEnv = null;\n\tthis._containsPoint = false;\n\tlet rectangle = arguments[0];\n\tthis._rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\ninherits(GeometryContainsPointVisitor, ShortCircuitedGeometryVisitor);\nextend(GeometryContainsPointVisitor.prototype, {\n\tisDone: function () {\n\t\treturn this._containsPoint === true;\n\t},\n\tvisit: function (geom) {\n\t\tif (!(geom instanceof Polygon)) return null;\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar rectPt = new Coordinate();\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tthis._rectSeq.getCoordinate(i, rectPt);\n\t\t\tif (!elementEnv.contains(rectPt)) continue;\n\t\t\tif (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n\t\t\t\tthis._containsPoint = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcontainsPoint: function () {\n\t\treturn this._containsPoint;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryContainsPointVisitor;\n\t}\n});\nfunction RectangleIntersectsSegmentVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectEnv = null;\n\tthis._rectIntersector = null;\n\tthis._hasIntersection = false;\n\tthis._p0 = new Coordinate();\n\tthis._p1 = new Coordinate();\n\tlet rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n\tthis._rectIntersector = new RectangleLineIntersector(this._rectEnv);\n}\ninherits(RectangleIntersectsSegmentVisitor, ShortCircuitedGeometryVisitor);\nextend(RectangleIntersectsSegmentVisitor.prototype, {\n\tintersects: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn this._hasIntersection === true;\n\t},\n\tvisit: function (geom) {\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tthis.checkIntersectionWithLineStrings(lines);\n\t},\n\tcheckIntersectionWithLineStrings: function (lines) {\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar testLine = i.next();\n\t\t\tthis.checkIntersectionWithSegments(testLine);\n\t\t\tif (this._hasIntersection) return null;\n\t\t}\n\t},\n\tcheckIntersectionWithSegments: function (testLine) {\n\t\tvar seq1 = testLine.getCoordinateSequence();\n\t\tfor (var j = 1; j < seq1.size(); j++) {\n\t\t\tseq1.getCoordinate(j - 1, this._p0);\n\t\t\tseq1.getCoordinate(j, this._p1);\n\t\t\tif (this._rectIntersector.intersects(this._p0, this._p1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleIntersectsSegmentVisitor;\n\t}\n});\n","import RelateComputer from './RelateComputer';\nimport extend from '../../../../../extend';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport RectangleContains from '../predicate/RectangleContains';\nimport inherits from '../../../../../inherits';\nimport RectangleIntersects from '../predicate/RectangleIntersects';\nexport default function RelateOp() {\n\tthis._relate = null;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tGeometryGraphOperation.call(this, g0, g1, boundaryNodeRule);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t}\n}\ninherits(RelateOp, GeometryGraphOperation);\nextend(RelateOp.prototype, {\n\tgetIntersectionMatrix: function () {\n\t\treturn this._relate.computeIM();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateOp;\n\t}\n});\nRelateOp.covers = function (g1, g2) {\n\tif (g2.getDimension() === 2 && g1.getDimension() < 2) {\n\t\treturn false;\n\t}\n\tif (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n\t\treturn false;\n\t}\n\tif (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn true;\n\t}\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isCovers();\n};\nRelateOp.intersects = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g1, g2);\n\t}\n\tif (g2.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g2, g1);\n\t}\n\tif (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n\t\tvar r = false;\n\t\tfor (var i = 0; i < g1.getNumGeometries(); i++) {\n\t\t\tfor (var j = 0; j < g2.getNumGeometries(); j++) {\n\t\t\t\tif (g1.getGeometryN(i).intersects(g2.getGeometryN(j))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isIntersects();\n};\nRelateOp.touches = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension());\n};\nRelateOp.relate = function () {\n\tif (arguments.length === 2) {\n\t\tlet a = arguments[0], b = arguments[1];\n\t\tvar relOp = new RelateOp(a, b);\n\t\tvar im = relOp.getIntersectionMatrix();\n\t\treturn im;\n\t} else if (arguments.length === 3) {\n\t\tlet a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2];\n\t\tvar relOp = new RelateOp(a, b, boundaryNodeRule);\n\t\tvar im = relOp.getIntersectionMatrix();\n\t\treturn im;\n\t}\n};\nRelateOp.overlaps = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension());\n};\nRelateOp.crosses = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension());\n};\nRelateOp.contains = function (g1, g2) {\n\tif (g2.getDimension() === 2 && g1.getDimension() < 2) {\n\t\treturn false;\n\t}\n\tif (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n\t\treturn false;\n\t}\n\tif (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleContains.contains(g1, g2);\n\t}\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isContains();\n};\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function GeometryCombiner() {\n\tthis._geomFactory = null;\n\tthis._skipEmpty = false;\n\tthis._inputGeoms = null;\n\tlet geoms = arguments[0];\n\tthis._geomFactory = GeometryCombiner.extractFactory(geoms);\n\tthis._inputGeoms = geoms;\n}\nextend(GeometryCombiner.prototype, {\n\textractElements: function (geom, elems) {\n\t\tif (geom === null) return null;\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elemGeom = geom.getGeometryN(i);\n\t\t\tif (this._skipEmpty && elemGeom.isEmpty()) continue;\n\t\t\telems.add(elemGeom);\n\t\t}\n\t},\n\tcombine: function () {\n\t\tvar elems = new ArrayList();\n\t\tfor (var i = this._inputGeoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tthis.extractElements(g, elems);\n\t\t}\n\t\tif (elems.size() === 0) {\n\t\t\tif (this._geomFactory !== null) {\n\t\t\t\treturn this._geomFactory.createGeometryCollection();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(elems);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCombiner;\n\t}\n});\nGeometryCombiner.combine = function () {\n\tif (arguments.length === 1) {\n\t\tlet geoms = arguments[0];\n\t\tvar combiner = new GeometryCombiner(geoms);\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], g2 = arguments[2];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2));\n\t\treturn combiner.combine();\n\t}\n};\nGeometryCombiner.extractFactory = function (geoms) {\n\tif (geoms.isEmpty()) return null;\n\treturn geoms.iterator().next().getFactory();\n};\nGeometryCombiner.createList = function () {\n\tif (arguments.length === 2) {\n\t\tlet obj0 = arguments[0], obj1 = arguments[1];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\treturn list;\n\t} else if (arguments.length === 3) {\n\t\tlet obj0 = arguments[0], obj1 = arguments[1], obj2 = arguments[2];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\tlist.add(obj2);\n\t\treturn list;\n\t}\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport TreeSet from '../../../../../java/util/TreeSet';\nimport extend from '../../../../../extend';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nexport default function PointGeometryUnion() {\n\tthis._pointGeom = null;\n\tthis._otherGeom = null;\n\tthis._geomFact = null;\n\tlet pointGeom = arguments[0], otherGeom = arguments[1];\n\tthis._pointGeom = pointGeom;\n\tthis._otherGeom = otherGeom;\n\tthis._geomFact = otherGeom.getFactory();\n}\nextend(PointGeometryUnion.prototype, {\n\tunion: function () {\n\t\tvar locater = new PointLocator();\n\t\tvar exteriorCoords = new TreeSet();\n\t\tfor (var i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n\t\t\tvar point = this._pointGeom.getGeometryN(i);\n\t\t\tvar coord = point.getCoordinate();\n\t\t\tvar loc = locater.locate(coord, this._otherGeom);\n\t\t\tif (loc === Location.EXTERIOR) exteriorCoords.add(coord);\n\t\t}\n\t\tif (exteriorCoords.size() === 0) return this._otherGeom;\n\t\tvar ptComp = null;\n\t\tvar coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\n\t\tif (coords.length === 1) {\n\t\t\tptComp = this._geomFact.createPoint(coords[0]);\n\t\t} else {\n\t\t\tptComp = this._geomFact.createMultiPointFromCoords(coords);\n\t\t}\n\t\treturn GeometryCombiner.combine(ptComp, this._otherGeom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointGeometryUnion;\n\t}\n});\nPointGeometryUnion.union = function (pointGeom, otherGeom) {\n\tvar unioner = new PointGeometryUnion(pointGeom, otherGeom);\n\treturn unioner.union();\n};\n","import Geometry from '../Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nimport List from '../../../../../java/util/List';\nexport default function GeometryExtracter() {\n\tthis._geometryType = null;\n\tthis._comps = null;\n\tlet geometryType = arguments[0], comps = arguments[1];\n\tthis._geometryType = geometryType;\n\tthis._comps = comps;\n}\nextend(GeometryExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (this._geometryType === null || GeometryExtracter.isOfType(geom, this._geometryType)) this._comps.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryExtracter;\n\t}\n});\nGeometryExtracter.isOfType = function (geom, geometryType) {\n\tif (geom.getGeometryType() === geometryType) return true;\n\tif (geometryType === Geometry.TYPENAME_LINESTRING && geom.getGeometryType() === Geometry.TYPENAME_LINEARRING) return true;\n\treturn false;\n};\nGeometryExtracter.extract = function () {\n\tif (arguments.length === 2) {\n\t\tlet geom = arguments[0], geometryType = arguments[1];\n\t\treturn GeometryExtracter.extract(geom, geometryType, new ArrayList());\n\t} else if (arguments.length === 3) {\n\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"string\")) {\n\t\t\tlet geom = arguments[0], geometryType = arguments[1], list = arguments[2];\n\t\t\tif (geom.getGeometryType() === geometryType) {\n\t\t\t\tlist.add(geom);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tgeom.apply(new GeometryExtracter(geometryType, list));\n\t\t\t}\n\t\t\treturn list;\n\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && arguments[1] instanceof Class)) {\n\t\t\tlet geom = arguments[0], clz = arguments[1], list = arguments[2];\n\t\t\treturn GeometryExtracter.extract(geom, GeometryExtracter.toGeometryType(clz), list);\n\t\t}\n\t}\n};\n","import PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport STRtree from '../../index/strtree/STRtree';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport extend from '../../../../../extend';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport Polygonal from '../../geom/Polygonal';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default function CascadedPolygonUnion() {\n\tthis._inputPolys = null;\n\tthis._geomFactory = null;\n\tlet polys = arguments[0];\n\tthis._inputPolys = polys;\n\tif (this._inputPolys === null) this._inputPolys = new ArrayList();\n}\nextend(CascadedPolygonUnion.prototype, {\n\treduceToGeometries: function (geomTree) {\n\t\tvar geoms = new ArrayList();\n\t\tfor (var i = geomTree.iterator(); i.hasNext(); ) {\n\t\t\tvar o = i.next();\n\t\t\tvar geom = null;\n\t\t\tif (hasInterface(o, List)) {\n\t\t\t\tgeom = this.unionTree(o);\n\t\t\t} else if (o instanceof Geometry) {\n\t\t\t\tgeom = o;\n\t\t\t}\n\t\t\tgeoms.add(geom);\n\t\t}\n\t\treturn geoms;\n\t},\n\textractByEnvelope: function (env, geom, disjointGeoms) {\n\t\tvar intersectingGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem); else disjointGeoms.add(elem);\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(intersectingGeoms);\n\t},\n\tunionOptimized: function (g0, g1) {\n\t\tvar g0Env = g0.getEnvelopeInternal();\n\t\tvar g1Env = g1.getEnvelopeInternal();\n\t\tif (!g0Env.intersects(g1Env)) {\n\t\t\tvar combo = GeometryCombiner.combine(g0, g1);\n\t\t\treturn combo;\n\t\t}\n\t\tif (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\n\t\tvar commonEnv = g0Env.intersection(g1Env);\n\t\treturn this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\n\t},\n\tunion: function () {\n\t\tif (this._inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\n\t\tif (this._inputPolys.isEmpty()) return null;\n\t\tthis._geomFactory = this._inputPolys.iterator().next().getFactory();\n\t\tvar index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n\t\tfor (var i = this._inputPolys.iterator(); i.hasNext(); ) {\n\t\t\tvar item = i.next();\n\t\t\tindex.insert(item.getEnvelopeInternal(), item);\n\t\t}\n\t\tthis._inputPolys = null;\n\t\tvar itemTree = index.itemsTree();\n\t\tvar unionAll = this.unionTree(itemTree);\n\t\treturn unionAll;\n\t},\n\tbinaryUnion: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\treturn this.binaryUnion(geoms, 0, geoms.size());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geoms = arguments[0], start = arguments[1], end = arguments[2];\n\t\t\tif (end - start <= 1) {\n\t\t\t\tvar g0 = CascadedPolygonUnion.getGeometry(geoms, start);\n\t\t\t\treturn this.unionSafe(g0, null);\n\t\t\t} else if (end - start === 2) {\n\t\t\t\treturn this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1));\n\t\t\t} else {\n\t\t\t\tvar mid = Math.trunc((end + start) / 2);\n\t\t\t\tvar g0 = this.binaryUnion(geoms, start, mid);\n\t\t\t\tvar g1 = this.binaryUnion(geoms, mid, end);\n\t\t\t\treturn this.unionSafe(g0, g1);\n\t\t\t}\n\t\t}\n\t},\n\trepeatedUnion: function (geoms) {\n\t\tvar union = null;\n\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tif (union === null) union = g.copy(); else union = union.union(g);\n\t\t}\n\t\treturn union;\n\t},\n\tunionSafe: function (g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g0 === null) return g1.copy();\n\t\tif (g1 === null) return g0.copy();\n\t\treturn this.unionOptimized(g0, g1);\n\t},\n\tunionActual: function (g0, g1) {\n\t\treturn CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\n\t},\n\tunionTree: function (geomTree) {\n\t\tvar geoms = this.reduceToGeometries(geomTree);\n\t\tvar union = this.binaryUnion(geoms);\n\t\treturn union;\n\t},\n\tunionUsingEnvelopeIntersection: function (g0, g1, common) {\n\t\tvar disjointPolys = new ArrayList();\n\t\tvar g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n\t\tvar g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n\t\tvar union = this.unionActual(g0Int, g1Int);\n\t\tdisjointPolys.add(union);\n\t\tvar overallUnion = GeometryCombiner.combine(disjointPolys);\n\t\treturn overallUnion;\n\t},\n\tbufferUnion: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar factory = geoms.get(0).getFactory();\n\t\t\tvar gColl = factory.buildGeometry(geoms);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\t\tvar factory = g0.getFactory();\n\t\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CascadedPolygonUnion;\n\t}\n});\nCascadedPolygonUnion.restrictToPolygons = function (g) {\n\tif (hasInterface(g, Polygonal)) {\n\t\treturn g;\n\t}\n\tvar polygons = PolygonExtracter.getPolygons(g);\n\tif (polygons.size() === 1) return polygons.get(0);\n\treturn g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\n};\nCascadedPolygonUnion.getGeometry = function (list, index) {\n\tif (index >= list.size()) return null;\n\treturn list.get(index);\n};\nCascadedPolygonUnion.union = function (polys) {\n\tvar op = new CascadedPolygonUnion(polys);\n\treturn op.union();\n};\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\n","import Geometry from '../../geom/Geometry';\nimport PointGeometryUnion from './PointGeometryUnion';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryExtracter from '../../geom/util/GeometryExtracter';\nimport OverlayOp from '../overlay/OverlayOp';\nimport CascadedPolygonUnion from './CascadedPolygonUnion';\nexport default function UnaryUnionOp() {\n\tthis._polygons = new ArrayList();\n\tthis._lines = new ArrayList();\n\tthis._points = new ArrayList();\n\tthis._geomFact = null;\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tthis.extract(geoms);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis.extract(geom);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\tthis._geomFact = geomFact;\n\t\tthis.extract(geoms);\n\t}\n}\nextend(UnaryUnionOp.prototype, {\n\tunionNoOpt: function (g0) {\n\t\tvar empty = this._geomFact.createPoint();\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\n\t},\n\tunionWithNull: function (g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g1 === null) return g0;\n\t\tif (g0 === null) return g1;\n\t\treturn g0.union(g1);\n\t},\n\textract: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geom = i.next();\n\t\t\t\tthis.extract(geom);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (this._geomFact === null) this._geomFact = geom.getFactory();\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_POLYGON, this._polygons);\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_LINESTRING, this._lines);\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_POINT, this._points);\n\t\t}\n\t},\n\tunion: function () {\n\t\tif (this._geomFact === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar unionPoints = null;\n\t\tif (this._points.size() > 0) {\n\t\t\tvar ptGeom = this._geomFact.buildGeometry(this._points);\n\t\t\tunionPoints = this.unionNoOpt(ptGeom);\n\t\t}\n\t\tvar unionLines = null;\n\t\tif (this._lines.size() > 0) {\n\t\t\tvar lineGeom = this._geomFact.buildGeometry(this._lines);\n\t\t\tunionLines = this.unionNoOpt(lineGeom);\n\t\t}\n\t\tvar unionPolygons = null;\n\t\tif (this._polygons.size() > 0) {\n\t\t\tunionPolygons = CascadedPolygonUnion.union(this._polygons);\n\t\t}\n\t\tvar unionLA = this.unionWithNull(unionLines, unionPolygons);\n\t\tvar union = null;\n\t\tif (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA);\n\t\tif (union === null) return this._geomFact.createGeometryCollection();\n\t\treturn union;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn UnaryUnionOp;\n\t}\n});\nUnaryUnionOp.union = function () {\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geoms);\n\t\t\treturn op.union();\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geom);\n\t\t\treturn op.union();\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\tvar op = new UnaryUnionOp(geoms, geomFact);\n\t\treturn op.union();\n\t}\n};\n","import Location from '../../geom/Location';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport Polygon from '../../geom/Polygon';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport MaximalEdgeRing from '../overlay/MaximalEdgeRing';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function ConnectedInteriorTester() {\n\tthis._geometryFactory = new GeometryFactory();\n\tthis._geomGraph = null;\n\tthis._disconnectedRingcoord = null;\n\tlet geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n}\nextend(ConnectedInteriorTester.prototype, {\n\tvisitInteriorRing: function (ring, graph) {\n\t\tvar pts = ring.getCoordinates();\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\n\t\tvar e = graph.findEdgeInSameDirection(pt0, pt1);\n\t\tvar de = graph.findEdgeEnd(e);\n\t\tvar intDe = null;\n\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de;\n\t\t} else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de.getSym();\n\t\t}\n\t\tAssert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\n\t\tthis.visitLinkedDirectedEdges(intDe);\n\t},\n\tvisitShellInteriors: function (g, graph) {\n\t\tif (g instanceof Polygon) {\n\t\t\tvar p = g;\n\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t}\n\t\tif (g instanceof MultiPolygon) {\n\t\t\tvar mp = g;\n\t\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\t\tvar p = mp.getGeometryN(i);\n\t\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._disconnectedRingcoord;\n\t},\n\tsetInteriorEdgesInResult: function (graph) {\n\t\tfor (var it = graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tvisitLinkedDirectedEdges: function (start) {\n\t\tvar startDe = start;\n\t\tvar de = start;\n\t\tdo {\n\t\t\tAssert.isTrue(de !== null, \"found null Directed Edge\");\n\t\t\tde.setVisited(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== startDe);\n\t},\n\tbuildEdgeRings: function (dirEdges) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getEdgeRing() === null) {\n\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tedgeRings.addAll(minEdgeRings);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\thasUnvisitedShellEdge: function (edgeRings) {\n\t\tfor (var i = 0; i < edgeRings.size(); i++) {\n\t\t\tvar er = edgeRings.get(i);\n\t\t\tif (er.isHole()) continue;\n\t\t\tvar edges = er.getEdges();\n\t\t\tvar de = edges.get(0);\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\n\t\t\tfor (var j = 0; j < edges.size(); j++) {\n\t\t\t\tde = edges.get(j);\n\t\t\t\tif (!de.isVisited()) {\n\t\t\t\t\tthis._disconnectedRingcoord = de.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisInteriorsConnected: function () {\n\t\tvar splitEdges = new ArrayList();\n\t\tthis._geomGraph.computeSplitEdges(splitEdges);\n\t\tvar graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tgraph.addEdges(splitEdges);\n\t\tthis.setInteriorEdgesInResult(graph);\n\t\tgraph.linkResultDirectedEdges();\n\t\tvar edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\n\t\tthis.visitShellInteriors(this._geomGraph.getGeometry(), graph);\n\t\treturn !this.hasUnvisitedShellEdge(edgeRings);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConnectedInteriorTester;\n\t}\n});\nConnectedInteriorTester.findDifferentPoint = function (coord, pt) {\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (!coord[i].equals(pt)) return coord[i];\n\t}\n\treturn null;\n};\n","import Location from '../../geom/Location';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport extend from '../../../../../extend';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nexport default function RelateNodeGraph() {\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n}\nextend(RelateNodeGraph.prototype, {\n\tinsertEdgeEnds: function (ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t},\n\tgetNodeIterator: function () {\n\t\treturn this._nodes.iterator();\n\t},\n\tcopyNodesAndLabels: function (geomGraph, argIndex) {\n\t\tfor (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar graphNode = nodeIt.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tbuild: function (geomGraph) {\n\t\tthis.computeIntersectionNodes(geomGraph, 0);\n\t\tthis.copyNodesAndLabels(geomGraph, 0);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\n\t\tthis.insertEdgeEnds(eeList);\n\t},\n\tcomputeIntersectionNodes: function (geomGraph, argIndex) {\n\t\tfor (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext(); ) {\n\t\t\tvar e = edgeIt.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNodeGraph;\n\t}\n});\n","import RelateNodeGraph from '../relate/RelateNodeGraph';\nimport extend from '../../../../../extend';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nexport default function ConsistentAreaTester() {\n\tthis._li = new RobustLineIntersector();\n\tthis._geomGraph = null;\n\tthis._nodeGraph = new RelateNodeGraph();\n\tthis._invalidPoint = null;\n\tlet geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n}\nextend(ConsistentAreaTester.prototype, {\n\tisNodeEdgeAreaLabelsConsistent: function () {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tif (!node.getEdges().isAreaLabelsConsistent(this._geomGraph)) {\n\t\t\t\tthis._invalidPoint = node.getCoordinate().copy();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetInvalidPoint: function () {\n\t\treturn this._invalidPoint;\n\t},\n\thasDuplicateRings: function () {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar eeb = i.next();\n\t\t\t\tif (eeb.getEdgeEnds().size() > 1) {\n\t\t\t\t\tthis._invalidPoint = eeb.getEdge().getCoordinate(0);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisNodeConsistentArea: function () {\n\t\tvar intersector = this._geomGraph.computeSelfNodes(this._li, true, true);\n\t\tif (intersector.hasProperIntersection()) {\n\t\t\tthis._invalidPoint = intersector.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tthis._nodeGraph.build(this._geomGraph);\n\t\treturn this.isNodeEdgeAreaLabelsConsistent();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConsistentAreaTester;\n\t}\n});\n","import STRtree from '../../index/strtree/STRtree';\nimport IsValidOp from './IsValidOp';\nimport PointLocation from '../../algorithm/PointLocation';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default function IndexedNestedRingTester() {\n\tthis._graph = null;\n\tthis._rings = new ArrayList();\n\tthis._totalEnv = new Envelope();\n\tthis._index = null;\n\tthis._nestedPt = null;\n\tlet graph = arguments[0];\n\tthis._graph = graph;\n}\nextend(IndexedNestedRingTester.prototype, {\n\tbuildIndex: function () {\n\t\tthis._index = new STRtree();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar ring = this._rings.get(i);\n\t\t\tvar env = ring.getEnvelopeInternal();\n\t\t\tthis._index.insert(env, ring);\n\t\t}\n\t},\n\tgetNestedPoint: function () {\n\t\treturn this._nestedPt;\n\t},\n\tisNonNested: function () {\n\t\tthis.buildIndex();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar innerRing = this._rings.get(i);\n\t\t\tvar innerRingPts = innerRing.getCoordinates();\n\t\t\tvar results = this._index.query(innerRing.getEnvelopeInternal());\n\t\t\tfor (var j = 0; j < results.size(); j++) {\n\t\t\t\tvar searchRing = results.get(j);\n\t\t\t\tvar searchRingPts = searchRing.getCoordinates();\n\t\t\t\tif (innerRing === searchRing) continue;\n\t\t\t\tif (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\n\t\t\t\tvar innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this._graph);\n\t\t\t\tif (innerRingPt === null) continue;\n\t\t\t\tvar isInside = PointLocation.isInRing(innerRingPt, searchRingPts);\n\t\t\t\tif (isInside) {\n\t\t\t\t\tthis._nestedPt = innerRingPt;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function (ring) {\n\t\tthis._rings.add(ring);\n\t\tthis._totalEnv.expandToInclude(ring.getEnvelopeInternal());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IndexedNestedRingTester;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function TopologyValidationError() {\n\tthis._errorType = null;\n\tthis._pt = null;\n\tif (arguments.length === 1) {\n\t\tlet errorType = arguments[0];\n\t\tTopologyValidationError.call(this, errorType, null);\n\t} else if (arguments.length === 2) {\n\t\tlet errorType = arguments[0], pt = arguments[1];\n\t\tthis._errorType = errorType;\n\t\tif (pt !== null) this._pt = pt.copy();\n\t}\n}\nextend(TopologyValidationError.prototype, {\n\tgetErrorType: function () {\n\t\treturn this._errorType;\n\t},\n\tgetMessage: function () {\n\t\treturn TopologyValidationError.errMsg[this._errorType];\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._pt;\n\t},\n\ttoString: function () {\n\t\tvar locStr = \"\";\n\t\tif (this._pt !== null) locStr = \" at or near point \" + this._pt;\n\t\treturn this.getMessage() + locStr;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyValidationError;\n\t}\n});\nTopologyValidationError.ERROR = 0;\nTopologyValidationError.REPEATED_POINT = 1;\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\nTopologyValidationError.NESTED_HOLES = 3;\nTopologyValidationError.DISCONNECTED_INTERIOR = 4;\nTopologyValidationError.SELF_INTERSECTION = 5;\nTopologyValidationError.RING_SELF_INTERSECTION = 6;\nTopologyValidationError.NESTED_SHELLS = 7;\nTopologyValidationError.DUPLICATE_RINGS = 8;\nTopologyValidationError.TOO_FEW_POINTS = 9;\nTopologyValidationError.INVALID_COORDINATE = 10;\nTopologyValidationError.RING_NOT_CLOSED = 11;\nTopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\n","import Location from '../../geom/Location';\nimport TreeSet from '../../../../../java/util/TreeSet';\nimport LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport ConnectedInteriorTester from './ConnectedInteriorTester';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport PointLocation from '../../algorithm/PointLocation';\nimport LinearRing from '../../geom/LinearRing';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport ConsistentAreaTester from './ConsistentAreaTester';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport IndexedNestedRingTester from './IndexedNestedRingTester';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport TopologyValidationError from './TopologyValidationError';\nimport IndexedPointInAreaLocator from '../../algorithm/locate/IndexedPointInAreaLocator';\nimport Assert from '../../util/Assert';\nexport default function IsValidOp() {\n\tthis._parentGeometry = null;\n\tthis._isSelfTouchingRingFormingHoleValid = false;\n\tthis._validErr = null;\n\tlet parentGeometry = arguments[0];\n\tthis._parentGeometry = parentGeometry;\n}\nextend(IsValidOp.prototype, {\n\tcheckInvalidCoordinates: function () {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coords = arguments[0];\n\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\tif (!IsValidOp.isValid(coords[i])) {\n\t\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesNotNested: function (p, graph) {\n\t\tvar nestedTester = new IndexedNestedRingTester(graph);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar innerHole = p.getInteriorRingN(i);\n\t\t\tnestedTester.add(innerHole);\n\t\t}\n\t\tvar isNonNested = nestedTester.isNonNested();\n\t\tif (!isNonNested) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\n\t\t}\n\t},\n\tcheckConsistentArea: function (graph) {\n\t\tvar cat = new ConsistentAreaTester(graph);\n\t\tvar isValidArea = cat.isNodeConsistentArea();\n\t\tif (!isValidArea) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t\tif (cat.hasDuplicateRings()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\n\t\t}\n\t},\n\tisValid: function () {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr === null;\n\t},\n\tcheckShellInsideHole: function (shell, hole, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar holePts = hole.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\n\t\tif (shellPt !== null) {\n\t\t\tvar insideHole = PointLocation.isInRing(shellPt, holePts);\n\t\t\tif (!insideHole) {\n\t\t\t\treturn shellPt;\n\t\t\t}\n\t\t}\n\t\tvar holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\n\t\tif (holePt !== null) {\n\t\t\tvar insideShell = PointLocation.isInRing(holePt, shellPts);\n\t\t\tif (insideShell) {\n\t\t\t\treturn holePt;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\n\t\treturn null;\n\t},\n\tcheckNoSelfIntersectingRings: function (graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t},\n\tcheckConnectedInteriors: function (graph) {\n\t\tvar cit = new ConnectedInteriorTester(graph);\n\t\tif (!cit.isInteriorsConnected()) this._validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\n\t},\n\tcheckNoSelfIntersectingRing: function (eiList) {\n\t\tvar nodeSet = new TreeSet();\n\t\tvar isFirst = true;\n\t\tfor (var i = eiList.iterator(); i.hasNext(); ) {\n\t\t\tvar ei = i.next();\n\t\t\tif (isFirst) {\n\t\t\t\tisFirst = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (nodeSet.contains(ei.coord)) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tnodeSet.add(ei.coord);\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesInShell: function (p, graph) {\n\t\tvar shell = p.getExteriorRing();\n\t\tvar pir = new IndexedPointInAreaLocator(shell);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\n\t\t\tif (holePt === null) return null;\n\t\t\tvar outside = Location.EXTERIOR === pir.locate(holePt);\n\t\t\tif (outside) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckTooFewPoints: function (graph) {\n\t\tif (graph.hasTooFewPoints()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetValidationError: function () {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr;\n\t},\n\tcheckValid: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof MultiPoint) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRing(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar li = new RobustLineIntersector();\n\t\t\tgraph.computeSelfNodes(li, true, true);\n\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRings(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkHolesInShell(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkHolesNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof MultiPolygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkInvalidCoordinates(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t\tthis.checkClosedRings(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesInShell(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesNotNested(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkShellsNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\tthis.checkValid(g);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis._validErr = null;\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof Point) this.checkValid(g); else if (g instanceof MultiPoint) this.checkValid(g); else if (g instanceof LinearRing) this.checkValid(g); else if (g instanceof LineString) this.checkValid(g); else if (g instanceof Polygon) this.checkValid(g); else if (g instanceof MultiPolygon) this.checkValid(g); else if (g instanceof GeometryCollection) this.checkValid(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t}\n\t},\n\tsetSelfTouchingRingFormingHoleValid: function (isValid) {\n\t\tthis._isSelfTouchingRingFormingHoleValid = isValid;\n\t},\n\tcheckShellNotNested: function (shell, p, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar polyShell = p.getExteriorRing();\n\t\tvar polyPts = polyShell.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\n\t\tif (shellPt === null) return null;\n\t\tvar insidePolyShell = PointLocation.isInRing(shellPt, polyPts);\n\t\tif (!insidePolyShell) return null;\n\t\tif (p.getNumInteriorRing() <= 0) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\n\t\t\treturn null;\n\t\t}\n\t\tvar badNestedPt = null;\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tbadNestedPt = this.checkShellInsideHole(shell, hole, graph);\n\t\t\tif (badNestedPt === null) return null;\n\t\t}\n\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\n\t},\n\tcheckClosedRings: function (poly) {\n\t\tthis.checkClosedRing(poly.getExteriorRing());\n\t\tif (this._validErr !== null) return null;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tthis.checkClosedRing(poly.getInteriorRingN(i));\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t},\n\tcheckClosedRing: function (ring) {\n\t\tif (!ring.isClosed()) {\n\t\t\tvar pt = null;\n\t\t\tif (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\n\t\t}\n\t},\n\tcheckShellsNotNested: function (mp, graph) {\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar p = mp.getGeometryN(i);\n\t\t\tvar shell = p.getExteriorRing();\n\t\t\tfor (var j = 0; j < mp.getNumGeometries(); j++) {\n\t\t\t\tif (i === j) continue;\n\t\t\t\tvar p2 = mp.getGeometryN(j);\n\t\t\t\tthis.checkShellNotNested(shell, p2, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IsValidOp;\n\t}\n});\nIsValidOp.findPtNotNode = function (testCoords, searchRing, graph) {\n\tvar searchEdge = graph.findEdge(searchRing);\n\tvar eiList = searchEdge.getEdgeIntersectionList();\n\tfor (var i = 0; i < testCoords.length; i++) {\n\t\tvar pt = testCoords[i];\n\t\tif (!eiList.isIntersection(pt)) return pt;\n\t}\n\treturn null;\n};\nIsValidOp.isValid = function () {\n\tif (arguments[0] instanceof Geometry) {\n\t\tlet geom = arguments[0];\n\t\tvar isValidOp = new IsValidOp(geom);\n\t\treturn isValidOp.isValid();\n\t} else if (arguments[0] instanceof Coordinate) {\n\t\tlet coord = arguments[0];\n\t\tif (Double.isNaN(coord.x)) return false;\n\t\tif (Double.isInfinite(coord.x)) return false;\n\t\tif (Double.isNaN(coord.y)) return false;\n\t\tif (Double.isInfinite(coord.y)) return false;\n\t\treturn true;\n\t}\n};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport LinearRing from '../geom/LinearRing';\nimport extend from '../../../../extend';\nimport inherits from '../../../../inherits';\nexport default function PrecisionReducerCoordinateOperation() {\n\tGeometryEditor.CoordinateOperation.apply(this);\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tlet targetPM = arguments[0], removeCollapsed = arguments[1];\n\tthis._targetPM = targetPM;\n\tthis._removeCollapsed = removeCollapsed;\n}\ninherits(PrecisionReducerCoordinateOperation, GeometryEditor.CoordinateOperation);\nextend(PrecisionReducerCoordinateOperation.prototype, {\n\tedit: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Geometry && arguments[0] instanceof Array)) {\n\t\t\tlet coordinates = arguments[0], geom = arguments[1];\n\t\t\tif (coordinates.length === 0) return null;\n\t\t\tvar reducedCoords = new Array(coordinates.length).fill(null);\n\t\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\t\tvar coord = new Coordinate(coordinates[i]);\n\t\t\t\tthis._targetPM.makePrecise(coord);\n\t\t\t\treducedCoords[i] = coord;\n\t\t\t}\n\t\t\tvar noRepeatedCoordList = new CoordinateList(reducedCoords, false);\n\t\t\tvar noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\n\t\t\tvar minLength = 0;\n\t\t\tif (geom instanceof LineString) minLength = 2;\n\t\t\tif (geom instanceof LinearRing) minLength = 4;\n\t\t\tvar collapsedCoords = reducedCoords;\n\t\t\tif (this._removeCollapsed) collapsedCoords = null;\n\t\t\tif (noRepeatedCoords.length < minLength) {\n\t\t\t\treturn collapsedCoords;\n\t\t\t}\n\t\t\treturn noRepeatedCoords;\n\t\t} else return GeometryEditor.CoordinateOperation.prototype.edit.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PrecisionReducerCoordinateOperation;\n\t}\n});\n","import hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport IsValidOp from '../operation/valid/IsValidOp';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport extend from '../../../../extend';\nimport BufferOp from '../operation/buffer/BufferOp';\nimport Polygonal from '../geom/Polygonal';\nimport PrecisionReducerCoordinateOperation from './PrecisionReducerCoordinateOperation';\nexport default function GeometryPrecisionReducer() {\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tthis._changePrecisionModel = false;\n\tthis._isPointwise = false;\n\tlet pm = arguments[0];\n\tthis._targetPM = pm;\n}\nextend(GeometryPrecisionReducer.prototype, {\n\tfixPolygonalTopology: function (geom) {\n\t\tvar geomToBuffer = geom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tgeomToBuffer = this.changePM(geom, this._targetPM);\n\t\t}\n\t\tvar bufGeom = BufferOp.bufferOp(geomToBuffer, 0);\n\t\tvar finalGeom = bufGeom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tfinalGeom = bufGeom.copy();\n\t\t\tthis.changePM(finalGeom, geom.getPrecisionModel());\n\t\t}\n\t\treturn finalGeom;\n\t},\n\treducePointwise: function (geom) {\n\t\tvar geomEdit = null;\n\t\tif (this._changePrecisionModel) {\n\t\t\tvar newFactory = this.createFactory(geom.getFactory(), this._targetPM);\n\t\t\tgeomEdit = new GeometryEditor(newFactory);\n\t\t} else geomEdit = new GeometryEditor();\n\t\tvar finalRemoveCollapsed = this._removeCollapsed;\n\t\tif (geom.getDimension() >= 2) finalRemoveCollapsed = true;\n\t\tvar reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this._targetPM, finalRemoveCollapsed));\n\t\treturn reduceGeom;\n\t},\n\tchangePM: function (geom, newPM) {\n\t\tvar geomEditor = this.createEditor(geom.getFactory(), newPM);\n\t\treturn geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\n\t},\n\tsetRemoveCollapsedComponents: function (removeCollapsed) {\n\t\tthis._removeCollapsed = removeCollapsed;\n\t},\n\tcreateFactory: function (inputFactory, pm) {\n\t\tvar newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\n\t\treturn newFactory;\n\t},\n\tsetChangePrecisionModel: function (changePrecisionModel) {\n\t\tthis._changePrecisionModel = changePrecisionModel;\n\t},\n\treduce: function (geom) {\n\t\tvar reducePW = this.reducePointwise(geom);\n\t\tif (this._isPointwise) return reducePW;\n\t\tif (!hasInterface(reducePW, Polygonal)) return reducePW;\n\t\tif (IsValidOp.isValid(reducePW)) return reducePW;\n\t\treturn this.fixPolygonalTopology(reducePW);\n\t},\n\tsetPointwise: function (isPointwise) {\n\t\tthis._isPointwise = isPointwise;\n\t},\n\tcreateEditor: function (geomFactory, newPM) {\n\t\tif (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\n\t\tvar newFactory = this.createFactory(geomFactory, newPM);\n\t\tvar geomEdit = new GeometryEditor(newFactory);\n\t\treturn geomEdit;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryPrecisionReducer;\n\t}\n});\nGeometryPrecisionReducer.reduce = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treturn reducer.reduce(g);\n};\nGeometryPrecisionReducer.reducePointwise = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treducer.setPointwise(true);\n\treturn reducer.reduce(g);\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nexport default function DouglasPeuckerLineSimplifier() {\n\tthis._pts = null;\n\tthis._usePt = null;\n\tthis._distanceTolerance = null;\n\tthis._seg = new LineSegment();\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n}\nextend(DouglasPeuckerLineSimplifier.prototype, {\n\tsimplifySection: function (i, j) {\n\t\tif (i + 1 === j) {\n\t\t\treturn null;\n\t\t}\n\t\tthis._seg.p0 = this._pts[i];\n\t\tthis._seg.p1 = this._pts[j];\n\t\tvar maxDistance = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar distance = this._seg.distance(this._pts[k]);\n\t\t\tif (distance > maxDistance) {\n\t\t\t\tmaxDistance = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tif (maxDistance <= this._distanceTolerance) {\n\t\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\t\tthis._usePt[k] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simplifySection(i, maxIndex);\n\t\t\tthis.simplifySection(maxIndex, j);\n\t\t}\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function () {\n\t\tthis._usePt = new Array(this._pts.length).fill(null);\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tthis._usePt[i] = true;\n\t\t}\n\t\tthis.simplifySection(0, this._pts.length - 1);\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tif (this._usePt[i]) coordList.add(new Coordinate(this._pts[i]));\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DouglasPeuckerLineSimplifier;\n\t}\n});\nDouglasPeuckerLineSimplifier.simplify = function (pts, distanceTolerance) {\n\tvar simp = new DouglasPeuckerLineSimplifier(pts);\n\tsimp.setDistanceTolerance(distanceTolerance);\n\treturn simp.simplify();\n};\n","import DouglasPeuckerLineSimplifier from './DouglasPeuckerLineSimplifier';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Polygon from '../geom/Polygon';\nimport LinearRing from '../geom/LinearRing';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport inherits from '../../../../inherits';\nexport default function DouglasPeuckerSimplifier() {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tthis._isEnsureValidTopology = true;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(DouglasPeuckerSimplifier.prototype, {\n\tsetEnsureValid: function (isEnsureValidTopology) {\n\t\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\t},\n\tgetResultGeometry: function () {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\treturn new DPTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom);\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DouglasPeuckerSimplifier;\n\t}\n});\nDouglasPeuckerSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new DouglasPeuckerSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction DPTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._isEnsureValidTopology = true;\n\tthis._distanceTolerance = null;\n\tlet isEnsureValidTopology = arguments[0], distanceTolerance = arguments[1];\n\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\tthis._distanceTolerance = distanceTolerance;\n}\ninherits(DPTransformer, GeometryTransformer);\nextend(DPTransformer.prototype, {\n\ttransformPolygon: function (geom, parent) {\n\t\tif (geom.isEmpty()) return null;\n\t\tvar rawGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn rawGeom;\n\t\t}\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\tcreateValidArea: function (rawAreaGeom) {\n\t\tif (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n\t\treturn rawAreaGeom;\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = null;\n\t\tif (inputPts.length === 0) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t} else {\n\t\t\tnewPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this._distanceTolerance);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar rawGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\ttransformLinearRing: function (geom, parent) {\n\t\tvar removeDegenerateRings = parent instanceof Polygon;\n\t\tvar simpResult = GeometryTransformer.prototype.transformLinearRing.call(this, geom, parent);\n\t\tif (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n\t\t;\n\t\treturn simpResult;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DPTransformer;\n\t}\n});\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer;\n","import extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport inherits from '../../../../inherits';\nexport default function TaggedLineSegment() {\n\tthis._parent = null;\n\tthis._index = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tTaggedLineSegment.call(this, p0, p1, null, -1);\n\t} else if (arguments.length === 4) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], parent = arguments[2], index = arguments[3];\n\t\tLineSegment.call(this, p0, p1);\n\t\tthis._parent = parent;\n\t\tthis._index = index;\n\t}\n}\ninherits(TaggedLineSegment, LineSegment);\nextend(TaggedLineSegment.prototype, {\n\tgetIndex: function () {\n\t\treturn this._index;\n\t},\n\tgetParent: function () {\n\t\treturn this._parent;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineSegment;\n\t}\n});\n","import extend from '../../../../extend';\nimport TaggedLineSegment from './TaggedLineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function TaggedLineString() {\n\tthis._parentLine = null;\n\tthis._segs = null;\n\tthis._resultSegs = new ArrayList();\n\tthis._minimumSize = null;\n\tif (arguments.length === 1) {\n\t\tlet parentLine = arguments[0];\n\t\tTaggedLineString.call(this, parentLine, 2);\n\t} else if (arguments.length === 2) {\n\t\tlet parentLine = arguments[0], minimumSize = arguments[1];\n\t\tthis._parentLine = parentLine;\n\t\tthis._minimumSize = minimumSize;\n\t\tthis.init();\n\t}\n}\nextend(TaggedLineString.prototype, {\n\taddToResult: function (seg) {\n\t\tthis._resultSegs.add(seg);\n\t},\n\tasLineString: function () {\n\t\treturn this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs));\n\t},\n\tgetResultSize: function () {\n\t\tvar resultSegsSize = this._resultSegs.size();\n\t\treturn resultSegsSize === 0 ? 0 : resultSegsSize + 1;\n\t},\n\tgetParent: function () {\n\t\treturn this._parentLine;\n\t},\n\tgetSegment: function (i) {\n\t\treturn this._segs[i];\n\t},\n\tgetParentCoordinates: function () {\n\t\treturn this._parentLine.getCoordinates();\n\t},\n\tgetMinimumSize: function () {\n\t\treturn this._minimumSize;\n\t},\n\tasLinearRing: function () {\n\t\treturn this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs));\n\t},\n\tgetSegments: function () {\n\t\treturn this._segs;\n\t},\n\tinit: function () {\n\t\tvar pts = this._parentLine.getCoordinates();\n\t\tthis._segs = new Array(pts.length - 1).fill(null);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar seg = new TaggedLineSegment(pts[i], pts[i + 1], this._parentLine, i);\n\t\t\tthis._segs[i] = seg;\n\t\t}\n\t},\n\tgetResultCoordinates: function () {\n\t\treturn TaggedLineString.extractCoordinates(this._resultSegs);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineString;\n\t}\n});\nTaggedLineString.extractCoordinates = function (segs) {\n\tvar pts = new Array(segs.size() + 1).fill(null);\n\tvar seg = null;\n\tfor (var i = 0; i < segs.size(); i++) {\n\t\tseg = segs.get(i);\n\t\tpts[i] = seg.p0;\n\t}\n\tpts[pts.length - 1] = seg.p1;\n\treturn pts;\n};\n","import Quadtree from '../index/quadtree/Quadtree';\nimport ItemVisitor from '../index/ItemVisitor';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nimport TaggedLineString from './TaggedLineString';\nexport default function LineSegmentIndex() {\n\tthis._index = new Quadtree();\n}\nextend(LineSegmentIndex.prototype, {\n\tremove: function (seg) {\n\t\tthis._index.remove(new Envelope(seg.p0, seg.p1), seg);\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof TaggedLineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tvar segs = line.getSegments();\n\t\t\tfor (var i = 0; i < segs.length; i++) {\n\t\t\t\tvar seg = segs[i];\n\t\t\t\tthis.add(seg);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tthis._index.insert(new Envelope(seg.p0, seg.p1), seg);\n\t\t}\n\t},\n\tquery: function (querySeg) {\n\t\tvar env = new Envelope(querySeg.p0, querySeg.p1);\n\t\tvar visitor = new LineSegmentVisitor(querySeg);\n\t\tthis._index.query(env, visitor);\n\t\tvar itemsFound = visitor.getItems();\n\t\treturn itemsFound;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegmentIndex;\n\t}\n});\nfunction LineSegmentVisitor() {\n\tthis._querySeg = null;\n\tthis._items = new ArrayList();\n\tlet querySeg = arguments[0];\n\tthis._querySeg = querySeg;\n}\nextend(LineSegmentVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tvar seg = item;\n\t\tif (Envelope.intersects(seg.p0, seg.p1, this._querySeg.p0, this._querySeg.p1)) this._items.add(item);\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegmentVisitor;\n\t}\n});\n","import extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport LineSegmentIndex from './LineSegmentIndex';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default function TaggedLineStringSimplifier() {\n\tthis._li = new RobustLineIntersector();\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._line = null;\n\tthis._linePts = null;\n\tthis._distanceTolerance = 0.0;\n\tlet inputIndex = arguments[0], outputIndex = arguments[1];\n\tthis._inputIndex = inputIndex;\n\tthis._outputIndex = outputIndex;\n}\nextend(TaggedLineStringSimplifier.prototype, {\n\tflatten: function (start, end) {\n\t\tvar p0 = this._linePts[start];\n\t\tvar p1 = this._linePts[end];\n\t\tvar newSeg = new LineSegment(p0, p1);\n\t\tthis.remove(this._line, start, end);\n\t\tthis._outputIndex.add(newSeg);\n\t\treturn newSeg;\n\t},\n\thasBadIntersection: function (parentLine, sectionIndex, candidateSeg) {\n\t\tif (this.hasBadOutputIntersection(candidateSeg)) return true;\n\t\tif (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\n\t\treturn false;\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplifySection: function (i, j, depth) {\n\t\tdepth += 1;\n\t\tvar sectionIndex = new Array(2).fill(null);\n\t\tif (i + 1 === j) {\n\t\t\tvar newSeg = this._line.getSegment(i);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tvar isValidToSimplify = true;\n\t\tif (this._line.getResultSize() < this._line.getMinimumSize()) {\n\t\t\tvar worstCaseSize = depth + 1;\n\t\t\tif (worstCaseSize < this._line.getMinimumSize()) isValidToSimplify = false;\n\t\t}\n\t\tvar distance = new Array(1).fill(null);\n\t\tvar furthestPtIndex = this.findFurthestPoint(this._linePts, i, j, distance);\n\t\tif (distance[0] > this._distanceTolerance) isValidToSimplify = false;\n\t\tvar candidateSeg = new LineSegment();\n\t\tcandidateSeg.p0 = this._linePts[i];\n\t\tcandidateSeg.p1 = this._linePts[j];\n\t\tsectionIndex[0] = i;\n\t\tsectionIndex[1] = j;\n\t\tif (this.hasBadIntersection(this._line, sectionIndex, candidateSeg)) isValidToSimplify = false;\n\t\tif (isValidToSimplify) {\n\t\t\tvar newSeg = this.flatten(i, j);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tthis.simplifySection(i, furthestPtIndex, depth);\n\t\tthis.simplifySection(furthestPtIndex, j, depth);\n\t},\n\thasBadOutputIntersection: function (candidateSeg) {\n\t\tvar querySegs = this._outputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tfindFurthestPoint: function (pts, i, j, maxDistance) {\n\t\tvar seg = new LineSegment();\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[j];\n\t\tvar maxDist = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar midPt = pts[k];\n\t\t\tvar distance = seg.distance(midPt);\n\t\t\tif (distance > maxDist) {\n\t\t\t\tmaxDist = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tmaxDistance[0] = maxDist;\n\t\treturn maxIndex;\n\t},\n\tsimplify: function (line) {\n\t\tthis._line = line;\n\t\tthis._linePts = line.getParentCoordinates();\n\t\tthis.simplifySection(0, this._linePts.length - 1, 0);\n\t},\n\tremove: function (line, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar seg = line.getSegment(i);\n\t\t\tthis._inputIndex.remove(seg);\n\t\t}\n\t},\n\thasInteriorIntersection: function (seg0, seg1) {\n\t\tthis._li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\n\t\treturn this._li.isInteriorIntersection();\n\t},\n\thasBadInputIntersection: function (parentLine, sectionIndex, candidateSeg) {\n\t\tvar querySegs = this._inputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\tif (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineStringSimplifier;\n\t}\n});\nTaggedLineStringSimplifier.isInLineSection = function (line, sectionIndex, seg) {\n\tif (seg.getParent() !== line.getParent()) return false;\n\tvar segIndex = seg.getIndex();\n\tif (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\n\treturn false;\n};\n","import extend from '../../../../extend';\nimport TaggedLineStringSimplifier from './TaggedLineStringSimplifier';\nimport LineSegmentIndex from './LineSegmentIndex';\nexport default function TaggedLinesSimplifier() {\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._distanceTolerance = 0.0;\n}\nextend(TaggedLinesSimplifier.prototype, {\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function (taggedLines) {\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tthis._inputIndex.add(i.next());\n\t\t}\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tvar tlss = new TaggedLineStringSimplifier(this._inputIndex, this._outputIndex);\n\t\t\ttlss.setDistanceTolerance(this._distanceTolerance);\n\t\t\ttlss.simplify(i.next());\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLinesSimplifier;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport TaggedLinesSimplifier from './TaggedLinesSimplifier';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport inherits from '../../../../inherits';\nimport TaggedLineString from './TaggedLineString';\nexport default function TopologyPreservingSimplifier() {\n\tthis._inputGeom = null;\n\tthis._lineSimplifier = new TaggedLinesSimplifier();\n\tthis._linestringMap = null;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(TopologyPreservingSimplifier.prototype, {\n\tgetResultGeometry: function () {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\tthis._linestringMap = new HashMap();\n\t\tthis._inputGeom.apply(new LineStringMapBuilderFilter(this));\n\t\tthis._lineSimplifier.simplify(this._linestringMap.values());\n\t\tvar result = new LineStringTransformer(this._linestringMap).transform(this._inputGeom);\n\t\treturn result;\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._lineSimplifier.setDistanceTolerance(distanceTolerance);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyPreservingSimplifier;\n\t}\n});\nTopologyPreservingSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new TopologyPreservingSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction LineStringTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._linestringMap = null;\n\tlet linestringMap = arguments[0];\n\tthis._linestringMap = linestringMap;\n}\ninherits(LineStringTransformer, GeometryTransformer);\nextend(LineStringTransformer.prototype, {\n\ttransformCoordinates: function (coords, parent) {\n\t\tif (coords.size() === 0) return null;\n\t\tif (parent instanceof LineString) {\n\t\t\tvar taggedLine = this._linestringMap.get(parent);\n\t\t\treturn this.createCoordinateSequence(taggedLine.getResultCoordinates());\n\t\t}\n\t\treturn GeometryTransformer.prototype.transformCoordinates.call(this, coords, parent);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringTransformer;\n\t}\n});\nfunction LineStringMapBuilderFilter() {\n\tthis.tps = null;\n\tlet tps = arguments[0];\n\tthis.tps = tps;\n}\nextend(LineStringMapBuilderFilter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof LineString) {\n\t\t\tvar line = geom;\n\t\t\tif (line.isEmpty()) return null;\n\t\t\tvar minSize = line.isClosed() ? 4 : 2;\n\t\t\tvar taggedLine = new TaggedLineString(line, minSize);\n\t\t\tthis.tps._linestringMap.put(line, taggedLine);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringMapBuilderFilter;\n\t}\n});\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nexport default function SplitSegment() {\n\tthis._seg = null;\n\tthis._segLen = null;\n\tthis._splitPt = null;\n\tthis._minimumLen = 0.0;\n\tlet seg = arguments[0];\n\tthis._seg = seg;\n\tthis._segLen = seg.getLength();\n}\nextend(SplitSegment.prototype, {\n\tsplitAt: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pt = arguments[0];\n\t\t\tvar minFrac = this._minimumLen / this._segLen;\n\t\t\tif (pt.distance(this._seg.p0) < this._minimumLen) {\n\t\t\t\tthis._splitPt = this._seg.pointAlong(minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (pt.distance(this._seg.p1) < this._minimumLen) {\n\t\t\t\tthis._splitPt = SplitSegment.pointAlongReverse(this._seg, minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._splitPt = pt;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet length = arguments[0], endPt = arguments[1];\n\t\t\tvar actualLen = this.getConstrainedLength(length);\n\t\t\tvar frac = actualLen / this._segLen;\n\t\t\tif (endPt.equals2D(this._seg.p0)) this._splitPt = this._seg.pointAlong(frac); else this._splitPt = SplitSegment.pointAlongReverse(this._seg, frac);\n\t\t}\n\t},\n\tsetMinimumLength: function (minLen) {\n\t\tthis._minimumLen = minLen;\n\t},\n\tgetConstrainedLength: function (len) {\n\t\tif (len < this._minimumLen) return this._minimumLen;\n\t\treturn len;\n\t},\n\tgetSplitPoint: function () {\n\t\treturn this._splitPt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SplitSegment;\n\t}\n});\nSplitSegment.pointAlongReverse = function (seg, segmentLengthFraction) {\n\tvar coord = new Coordinate();\n\tcoord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\n\tcoord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\n\treturn coord;\n};\n","import extend from '../../../../extend';\nexport default function ConstraintSplitPointFinder() {}\nextend(ConstraintSplitPointFinder.prototype, {\n\tfindSplitPoint: function (seg, encroachPt) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConstraintSplitPointFinder;\n\t}\n});\n","import extend from '../../../../extend';\nimport SplitSegment from './SplitSegment';\nimport ConstraintSplitPointFinder from './ConstraintSplitPointFinder';\nexport default function NonEncroachingSplitPointFinder() {}\nextend(NonEncroachingSplitPointFinder.prototype, {\n\tfindSplitPoint: function (seg, encroachPt) {\n\t\tvar lineSeg = seg.getLineSegment();\n\t\tvar segLen = lineSeg.getLength();\n\t\tvar midPtLen = segLen / 2;\n\t\tvar splitSeg = new SplitSegment(lineSeg);\n\t\tvar projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\n\t\tvar nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\n\t\tvar maxSplitLen = nonEncroachDiam;\n\t\tif (maxSplitLen > midPtLen) {\n\t\t\tmaxSplitLen = midPtLen;\n\t\t}\n\t\tsplitSeg.setMinimumLength(maxSplitLen);\n\t\tsplitSeg.splitAt(projPt);\n\t\treturn splitSeg.getSplitPoint();\n\t},\n\tinterfaces_: function () {\n\t\treturn [ConstraintSplitPointFinder];\n\t},\n\tgetClass: function () {\n\t\treturn NonEncroachingSplitPointFinder;\n\t}\n});\nNonEncroachingSplitPointFinder.projectedSplitPoint = function (seg, encroachPt) {\n\tvar lineSeg = seg.getLineSegment();\n\tvar projPt = lineSeg.project(encroachPt);\n\treturn projPt;\n};\n","import WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport extend from '../../../../../extend';\nimport DD from '../../math/DD';\nimport System from '../../../../../java/lang/System';\nimport Triangle from '../../geom/Triangle';\nexport default function TrianglePredicate() {}\nextend(TrianglePredicate.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TrianglePredicate;\n\t}\n});\nTrianglePredicate.triArea = function (a, b, c) {\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n};\nTrianglePredicate.isInCircleDDNormalized = function (a, b, c, p) {\n\tvar adx = DD.valueOf(a.x).selfSubtract(p.x);\n\tvar ady = DD.valueOf(a.y).selfSubtract(p.y);\n\tvar bdx = DD.valueOf(b.x).selfSubtract(p.x);\n\tvar bdy = DD.valueOf(b.y).selfSubtract(p.y);\n\tvar cdx = DD.valueOf(c.x).selfSubtract(p.x);\n\tvar cdy = DD.valueOf(c.y).selfSubtract(p.y);\n\tvar abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\n\tvar bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\n\tvar cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\n\tvar alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\n\tvar blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\n\tvar clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\n\tvar sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.checkRobustInCircle = function (a, b, c, p) {\n\tvar nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\n\tvar isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\n\tvar isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\n\tvar circumCentre = Triangle.circumcentre(a, b, c);\n\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\n\tif (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n\t\tSystem.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\n\t\tSystem.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\n\t\tSystem.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\n\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\n\t\tSystem.out.println();\n\t}\n};\nTrianglePredicate.isInCircleDDFast = function (a, b, c, p) {\n\tvar aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\n\tvar bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\n\tvar cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\n\tvar pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\n\tvar sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleCC = function (a, b, c, p) {\n\tvar cc = Triangle.circumcentre(a, b, c);\n\tvar ccRadius = a.distance(cc);\n\tvar pRadiusDiff = p.distance(cc) - ccRadius;\n\treturn pRadiusDiff <= 0;\n};\nTrianglePredicate.isInCircleNormalized = function (a, b, c, p) {\n\tvar adx = a.x - p.x;\n\tvar ady = a.y - p.y;\n\tvar bdx = b.x - p.x;\n\tvar bdy = b.y - p.y;\n\tvar cdx = c.x - p.x;\n\tvar cdy = c.y - p.y;\n\tvar abdet = adx * bdy - bdx * ady;\n\tvar bcdet = bdx * cdy - cdx * bdy;\n\tvar cadet = cdx * ady - adx * cdy;\n\tvar alift = adx * adx + ady * ady;\n\tvar blift = bdx * bdx + bdy * bdy;\n\tvar clift = cdx * cdx + cdy * cdy;\n\tvar disc = alift * bcdet + blift * cadet + clift * abdet;\n\treturn disc > 0;\n};\nTrianglePredicate.isInCircleDDSlow = function (a, b, c, p) {\n\tvar px = DD.valueOf(p.x);\n\tvar py = DD.valueOf(p.y);\n\tvar ax = DD.valueOf(a.x);\n\tvar ay = DD.valueOf(a.y);\n\tvar bx = DD.valueOf(b.x);\n\tvar by = DD.valueOf(b.y);\n\tvar cx = DD.valueOf(c.x);\n\tvar cy = DD.valueOf(c.y);\n\tvar aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\n\tvar bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\n\tvar cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\n\tvar pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\n\tvar sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleNonRobust = function (a, b, c, p) {\n\tvar isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleRobust = function (a, b, c, p) {\n\treturn TrianglePredicate.isInCircleNormalized(a, b, c, p);\n};\nTrianglePredicate.triAreaDDSlow = function (ax, ay, bx, by, cx, cy) {\n\treturn bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\n};\nTrianglePredicate.triAreaDDFast = function (a, b, c) {\n\tvar t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\n\tvar t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\n\treturn t1.selfSubtract(t2);\n};\n","import NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport Coordinate from '../../geom/Coordinate';\nimport TrianglePredicate from './TrianglePredicate';\nimport extend from '../../../../../extend';\nimport System from '../../../../../java/lang/System';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default function Vertex() {\n\tthis._p = null;\n\tif (arguments.length === 1) {\n\t\tlet _p = arguments[0];\n\t\tthis._p = new Coordinate(_p);\n\t} else if (arguments.length === 2) {\n\t\tlet _x = arguments[0], _y = arguments[1];\n\t\tthis._p = new Coordinate(_x, _y);\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _z = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y, _z);\n\t}\n}\nextend(Vertex.prototype, {\n\tcircleCenter: function (b, c) {\n\t\tvar a = new Vertex(this.getX(), this.getY());\n\t\tvar cab = this.bisector(a, b);\n\t\tvar cbc = this.bisector(b, c);\n\t\tvar hcc = new HCoordinate(cab, cbc);\n\t\tvar cc = null;\n\t\ttry {\n\t\t\tcc = new Vertex(hcc.getX(), hcc.getY());\n\t\t} catch (nre) {\n\t\t\tif (nre instanceof NotRepresentableException) {\n\t\t\t\tSystem.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\n\t\t\t\tSystem.err.println(nre);\n\t\t\t} else throw nre;\n\t\t} finally {}\n\t\treturn cc;\n\t},\n\tdot: function (v) {\n\t\treturn this._p.x * v.getX() + this._p.y * v.getY();\n\t},\n\tmagn: function () {\n\t\treturn Math.sqrt(this._p.x * this._p.x + this._p.y * this._p.y);\n\t},\n\tgetZ: function () {\n\t\treturn this._p.z;\n\t},\n\tbisector: function (a, b) {\n\t\tvar dx = b.getX() - a.getX();\n\t\tvar dy = b.getY() - a.getY();\n\t\tvar l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\n\t\tvar l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\n\t\treturn new HCoordinate(l1, l2);\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet _x = arguments[0];\n\t\t\tif (this._p.x === _x.getX() && this._p.y === _x.getY()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet _x = arguments[0], tolerance = arguments[1];\n\t\t\tif (this._p.distance(_x.getCoordinate()) < tolerance) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._p;\n\t},\n\tisInCircle: function (a, b, c) {\n\t\treturn TrianglePredicate.isInCircleRobust(a._p, b._p, c._p, this._p);\n\t},\n\tinterpolateZValue: function (v0, v1, v2) {\n\t\tvar x0 = v0.getX();\n\t\tvar y0 = v0.getY();\n\t\tvar a = v1.getX() - x0;\n\t\tvar b = v2.getX() - x0;\n\t\tvar c = v1.getY() - y0;\n\t\tvar d = v2.getY() - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = this.getX() - x0;\n\t\tvar dy = this.getY() - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\n\t\treturn z;\n\t},\n\tmidPoint: function (a) {\n\t\tvar xm = (this._p.x + a.getX()) / 2.0;\n\t\tvar ym = (this._p.y + a.getY()) / 2.0;\n\t\tvar zm = (this._p.z + a.getZ()) / 2.0;\n\t\treturn new Vertex(xm, ym, zm);\n\t},\n\trightOf: function (e) {\n\t\treturn this.isCCW(e.dest(), e.orig());\n\t},\n\tisCCW: function (b, c) {\n\t\treturn (b._p.x - this._p.x) * (c._p.y - this._p.y) - (b._p.y - this._p.y) * (c._p.x - this._p.x) > 0;\n\t},\n\tgetX: function () {\n\t\treturn this._p.x;\n\t},\n\tcrossProduct: function (v) {\n\t\treturn this._p.x * v.getY() - this._p.y * v.getX();\n\t},\n\tsetZ: function (_z) {\n\t\tthis._p.z = _z;\n\t},\n\ttimes: function (c) {\n\t\treturn new Vertex(c * this._p.x, c * this._p.y);\n\t},\n\tcross: function () {\n\t\treturn new Vertex(this._p.y, -this._p.x);\n\t},\n\tleftOf: function (e) {\n\t\treturn this.isCCW(e.orig(), e.dest());\n\t},\n\ttoString: function () {\n\t\treturn \"POINT (\" + this._p.x + \" \" + this._p.y + \")\";\n\t},\n\tsub: function (v) {\n\t\treturn new Vertex(this._p.x - v.getX(), this._p.y - v.getY());\n\t},\n\tgetY: function () {\n\t\treturn this._p.y;\n\t},\n\tclassify: function (p0, p1) {\n\t\tvar p2 = this;\n\t\tvar a = p1.sub(p0);\n\t\tvar b = p2.sub(p0);\n\t\tvar sa = a.crossProduct(b);\n\t\tif (sa > 0.0) return Vertex.LEFT;\n\t\tif (sa < 0.0) return Vertex.RIGHT;\n\t\tif (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\n\t\tif (a.magn() < b.magn()) return Vertex.BEYOND;\n\t\tif (p0.equals(p2)) return Vertex.ORIGIN;\n\t\tif (p1.equals(p2)) return Vertex.DESTINATION;\n\t\treturn Vertex.BETWEEN;\n\t},\n\tsum: function (v) {\n\t\treturn new Vertex(this._p.x + v.getX(), this._p.y + v.getY());\n\t},\n\tdistance: function (v1, v2) {\n\t\treturn Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\n\t},\n\tcircumRadiusRatio: function (b, c) {\n\t\tvar x = this.circleCenter(b, c);\n\t\tvar radius = this.distance(x, b);\n\t\tvar edgeLength = this.distance(this, b);\n\t\tvar el = this.distance(b, c);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\tel = this.distance(c, this);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\treturn radius / edgeLength;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Vertex;\n\t}\n});\nVertex.interpolateZ = function () {\n\tif (arguments.length === 3) {\n\t\tlet p = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\tvar segLen = p0.distance(p1);\n\t\tvar ptLen = p.distance(p0);\n\t\tvar dz = p1.z - p0.z;\n\t\tvar pz = p0.z + dz * (ptLen / segLen);\n\t\treturn pz;\n\t} else if (arguments.length === 4) {\n\t\tlet p = arguments[0], v0 = arguments[1], v1 = arguments[2], v2 = arguments[3];\n\t\tvar x0 = v0.x;\n\t\tvar y0 = v0.y;\n\t\tvar a = v1.x - x0;\n\t\tvar b = v2.x - x0;\n\t\tvar c = v1.y - y0;\n\t\tvar d = v2.y - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = p.x - x0;\n\t\tvar dy = p.y - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\t\treturn z;\n\t}\n};\nVertex.LEFT = 0;\nVertex.RIGHT = 1;\nVertex.BEYOND = 2;\nVertex.BEHIND = 3;\nVertex.BETWEEN = 4;\nVertex.ORIGIN = 5;\nVertex.DESTINATION = 6;\n","import extend from '../../../../extend';\nimport Vertex from './quadedge/Vertex';\nimport inherits from '../../../../inherits';\nexport default function ConstraintVertex() {\n\tthis._isOnConstraint = null;\n\tthis._constraint = null;\n\tlet p = arguments[0];\n\tVertex.call(this, p);\n}\ninherits(ConstraintVertex, Vertex);\nextend(ConstraintVertex.prototype, {\n\tgetConstraint: function () {\n\t\treturn this._constraint;\n\t},\n\tsetOnConstraint: function (isOnConstraint) {\n\t\tthis._isOnConstraint = isOnConstraint;\n\t},\n\tmerge: function (other) {\n\t\tif (other._isOnConstraint) {\n\t\t\tthis._isOnConstraint = true;\n\t\t\tthis._constraint = other._constraint;\n\t\t}\n\t},\n\tisOnConstraint: function () {\n\t\treturn this._isOnConstraint;\n\t},\n\tsetConstraint: function (constraint) {\n\t\tthis._isOnConstraint = true;\n\t\tthis._constraint = constraint;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConstraintVertex;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nexport default function QuadEdge() {\n\tthis._rot = null;\n\tthis._vertex = null;\n\tthis._next = null;\n\tthis._data = null;\n}\nextend(QuadEdge.prototype, {\n\tequalsNonOriented: function (qe) {\n\t\tif (this.equalsOriented(qe)) return true;\n\t\tif (this.equalsOriented(qe.sym())) return true;\n\t\treturn false;\n\t},\n\ttoLineSegment: function () {\n\t\treturn new LineSegment(this._vertex.getCoordinate(), this.dest().getCoordinate());\n\t},\n\tdest: function () {\n\t\treturn this.sym().orig();\n\t},\n\toNext: function () {\n\t\treturn this._next;\n\t},\n\tequalsOriented: function (qe) {\n\t\tif (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\n\t\treturn false;\n\t},\n\tdNext: function () {\n\t\treturn this.sym().oNext().sym();\n\t},\n\tlPrev: function () {\n\t\treturn this._next.sym();\n\t},\n\trPrev: function () {\n\t\treturn this.sym().oNext();\n\t},\n\trot: function () {\n\t\treturn this._rot;\n\t},\n\toPrev: function () {\n\t\treturn this._rot._next._rot;\n\t},\n\tsym: function () {\n\t\treturn this._rot._rot;\n\t},\n\tsetOrig: function (o) {\n\t\tthis._vertex = o;\n\t},\n\tlNext: function () {\n\t\treturn this.invRot().oNext().rot();\n\t},\n\tgetLength: function () {\n\t\treturn this.orig().getCoordinate().distance(this.dest().getCoordinate());\n\t},\n\tinvRot: function () {\n\t\treturn this._rot.sym();\n\t},\n\tsetDest: function (d) {\n\t\tthis.sym().setOrig(d);\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tdelete: function () {\n\t\tthis._rot = null;\n\t},\n\torig: function () {\n\t\treturn this._vertex;\n\t},\n\trNext: function () {\n\t\treturn this._rot._next.invRot();\n\t},\n\ttoString: function () {\n\t\tvar p0 = this._vertex.getCoordinate();\n\t\tvar p1 = this.dest().getCoordinate();\n\t\treturn WKTWriter.toLineString(p0, p1);\n\t},\n\tisLive: function () {\n\t\treturn this._rot !== null;\n\t},\n\tgetPrimary: function () {\n\t\tif (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this; else return this.sym();\n\t},\n\tdPrev: function () {\n\t\treturn this.invRot().oNext().invRot();\n\t},\n\tsetNext: function (next) {\n\t\tthis._next = next;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdge;\n\t}\n});\nQuadEdge.makeEdge = function (o, d) {\n\tvar q0 = new QuadEdge();\n\tvar q1 = new QuadEdge();\n\tvar q2 = new QuadEdge();\n\tvar q3 = new QuadEdge();\n\tq0._rot = q1;\n\tq1._rot = q2;\n\tq2._rot = q3;\n\tq3._rot = q0;\n\tq0.setNext(q0);\n\tq1.setNext(q3);\n\tq2.setNext(q2);\n\tq3.setNext(q1);\n\tvar base = q0;\n\tbase.setOrig(o);\n\tbase.setDest(d);\n\treturn base;\n};\nQuadEdge.swap = function (e) {\n\tvar a = e.oPrev();\n\tvar b = e.sym().oPrev();\n\tQuadEdge.splice(e, a);\n\tQuadEdge.splice(e.sym(), b);\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b.lNext());\n\te.setOrig(a.dest());\n\te.setDest(b.dest());\n};\nQuadEdge.splice = function (a, b) {\n\tvar alpha = a.oNext().rot();\n\tvar beta = b.oNext().rot();\n\tvar t1 = b.oNext();\n\tvar t2 = a.oNext();\n\tvar t3 = beta.oNext();\n\tvar t4 = alpha.oNext();\n\ta.setNext(t1);\n\tb.setNext(t2);\n\talpha.setNext(t3);\n\tbeta.setNext(t4);\n};\nQuadEdge.connect = function (a, b) {\n\tvar e = QuadEdge.makeEdge(a.dest(), b.orig());\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b);\n\treturn e;\n};\n","import QuadEdge from './quadedge/QuadEdge';\nimport extend from '../../../../extend';\nexport default function IncrementalDelaunayTriangulator() {\n\tthis._subdiv = null;\n\tthis._isUsingTolerance = false;\n\tlet subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis._isUsingTolerance = subdiv.getTolerance() > 0.0;\n}\nextend(IncrementalDelaunayTriangulator.prototype, {\n\tinsertSite: function (v) {\n\t\tvar e = this._subdiv.locate(v);\n\t\tif (this._subdiv.isVertexOfEdge(e, v)) {\n\t\t\treturn e;\n\t\t} else if (this._subdiv.isOnEdge(e, v.getCoordinate())) {\n\t\t\te = e.oPrev();\n\t\t\tthis._subdiv.delete(e.oNext());\n\t\t}\n\t\tvar base = this._subdiv.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this._subdiv.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\tdo {\n\t\t\tvar t = e.oPrev();\n\t\t\tif (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n\t\t\t\tQuadEdge.swap(e);\n\t\t\t\te = e.oPrev();\n\t\t\t} else if (e.oNext() === startEdge) {\n\t\t\t\treturn base;\n\t\t\t} else {\n\t\t\t\te = e.oNext().lPrev();\n\t\t\t}\n\t\t} while (true);\n\t},\n\tinsertSites: function (vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IncrementalDelaunayTriangulator;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function QuadEdgeLocator() {}\nextend(QuadEdgeLocator.prototype, {\n\tlocate: function (v) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdgeLocator;\n\t}\n});\n","import extend from '../../../../../extend';\nimport QuadEdgeLocator from './QuadEdgeLocator';\nexport default function LastFoundQuadEdgeLocator() {\n\tthis._subdiv = null;\n\tthis._lastEdge = null;\n\tlet subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis.init();\n}\nextend(LastFoundQuadEdgeLocator.prototype, {\n\tinit: function () {\n\t\tthis._lastEdge = this.findEdge();\n\t},\n\tlocate: function (v) {\n\t\tif (!this._lastEdge.isLive()) {\n\t\t\tthis.init();\n\t\t}\n\t\tvar e = this._subdiv.locateFromEdge(v, this._lastEdge);\n\t\tthis._lastEdge = e;\n\t\treturn e;\n\t},\n\tfindEdge: function () {\n\t\tvar edges = this._subdiv.getEdges();\n\t\treturn edges.iterator().next();\n\t},\n\tinterfaces_: function () {\n\t\treturn [QuadEdgeLocator];\n\t},\n\tgetClass: function () {\n\t\treturn LastFoundQuadEdgeLocator;\n\t}\n});\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nimport inherits from '../../../../../inherits';\nexport default function LocateFailureException() {\n\tthis._seg = null;\n\tif (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet msg = arguments[0];\n\t\t\tRuntimeException.call(this, msg);\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tRuntimeException.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\n\t\t\tthis._seg = new LineSegment(seg);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet msg = arguments[0], seg = arguments[1];\n\t\tRuntimeException.call(this, LocateFailureException.msgWithSpatial(msg, seg));\n\t\tthis._seg = new LineSegment(seg);\n\t}\n}\ninherits(LocateFailureException, RuntimeException);\nextend(LocateFailureException.prototype, {\n\tgetSegment: function () {\n\t\treturn this._seg;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocateFailureException;\n\t}\n});\nLocateFailureException.msgWithSpatial = function (msg, seg) {\n\tif (seg !== null) return msg + \" [ \" + seg + \" ]\";\n\treturn msg;\n};\n","import extend from '../../../../../extend';\nexport default function TriangleVisitor() {}\nextend(TriangleVisitor.prototype, {\n\tvisit: function (triEdges) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleVisitor;\n\t}\n});\n","import QuadEdge from './QuadEdge';\nimport CoordinateList from '../../geom/CoordinateList';\nimport HashSet from '../../../../../java/util/HashSet';\nimport WKTWriter from '../../io/WKTWriter';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Stack from '../../../../../java/util/Stack';\nimport extend from '../../../../../extend';\nimport LastFoundQuadEdgeLocator from './LastFoundQuadEdgeLocator';\nimport LocateFailureException from './LocateFailureException';\nimport Vertex from './Vertex';\nimport System from '../../../../../java/lang/System';\nimport LineSegment from '../../geom/LineSegment';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nimport Triangle from '../../geom/Triangle';\nimport TriangleVisitor from './TriangleVisitor';\nexport default function QuadEdgeSubdivision() {\n\tthis._visitedKey = 0;\n\tthis._quadEdges = new ArrayList();\n\tthis._startingEdge = null;\n\tthis._tolerance = null;\n\tthis._edgeCoincidenceTolerance = null;\n\tthis._frameVertex = new Array(3).fill(null);\n\tthis._frameEnv = null;\n\tthis._locator = null;\n\tthis._seg = new LineSegment();\n\tthis._triEdges = new Array(3).fill(null);\n\tlet env = arguments[0], tolerance = arguments[1];\n\tthis._tolerance = tolerance;\n\tthis._edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\n\tthis.createFrame(env);\n\tthis._startingEdge = this.initSubdiv();\n\tthis._locator = new LastFoundQuadEdgeLocator(this);\n}\nextend(QuadEdgeSubdivision.prototype, {\n\tgetTriangleVertices: function (includeFrame) {\n\t\tvar visitor = new TriangleVertexListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleVertices();\n\t},\n\tisFrameVertex: function (v) {\n\t\tif (v.equals(this._frameVertex[0])) return true;\n\t\tif (v.equals(this._frameVertex[1])) return true;\n\t\tif (v.equals(this._frameVertex[2])) return true;\n\t\treturn false;\n\t},\n\tisVertexOfEdge: function (e, v) {\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tconnect: function (a, b) {\n\t\tvar q = QuadEdge.connect(a, b);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t},\n\tgetVoronoiCellPolygon: function (qe, geomFact) {\n\t\tvar cellPts = new ArrayList();\n\t\tvar startQE = qe;\n\t\tdo {\n\t\t\tvar cc = qe.rot().orig().getCoordinate();\n\t\t\tcellPts.add(cc);\n\t\t\tqe = qe.oPrev();\n\t\t} while (qe !== startQE);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.addAll(cellPts, false);\n\t\tcoordList.closeRing();\n\t\tif (coordList.size() < 4) {\n\t\t\tSystem.out.println(coordList);\n\t\t\tcoordList.add(coordList.get(coordList.size() - 1), true);\n\t\t}\n\t\tvar pts = coordList.toCoordinateArray();\n\t\tvar cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts));\n\t\tvar v = startQE.orig();\n\t\tcellPoly.setUserData(v.getCoordinate());\n\t\treturn cellPoly;\n\t},\n\tsetLocator: function (locator) {\n\t\tthis._locator = locator;\n\t},\n\tinitSubdiv: function () {\n\t\tvar ea = this.makeEdge(this._frameVertex[0], this._frameVertex[1]);\n\t\tvar eb = this.makeEdge(this._frameVertex[1], this._frameVertex[2]);\n\t\tQuadEdge.splice(ea.sym(), eb);\n\t\tvar ec = this.makeEdge(this._frameVertex[2], this._frameVertex[0]);\n\t\tQuadEdge.splice(eb.sym(), ec);\n\t\tQuadEdge.splice(ec.sym(), ea);\n\t\treturn ea;\n\t},\n\tisFrameBorderEdge: function (e) {\n\t\tvar leftTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e, leftTri);\n\t\tvar rightTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\n\t\tvar vLeftTriOther = e.lNext().dest();\n\t\tif (this.isFrameVertex(vLeftTriOther)) return true;\n\t\tvar vRightTriOther = e.sym().lNext().dest();\n\t\tif (this.isFrameVertex(vRightTriOther)) return true;\n\t\treturn false;\n\t},\n\tmakeEdge: function (o, d) {\n\t\tvar q = QuadEdge.makeEdge(o, d);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t},\n\tvisitTriangles: function (triVisitor, includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\n\t\t\t\tif (triEdges !== null) triVisitor.visit(triEdges);\n\t\t\t}\n\t\t}\n\t},\n\tisFrameEdge: function (e) {\n\t\tif (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\n\t\treturn false;\n\t},\n\tisOnEdge: function (e, p) {\n\t\tthis._seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\n\t\tvar dist = this._seg.distance(p);\n\t\treturn dist < this._edgeCoincidenceTolerance;\n\t},\n\tgetEnvelope: function () {\n\t\treturn new Envelope(this._frameEnv);\n\t},\n\tcreateFrame: function (env) {\n\t\tvar deltaX = env.getWidth();\n\t\tvar deltaY = env.getHeight();\n\t\tvar offset = 0.0;\n\t\tif (deltaX > deltaY) {\n\t\t\toffset = deltaX * 10.0;\n\t\t} else {\n\t\t\toffset = deltaY * 10.0;\n\t\t}\n\t\tthis._frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\n\t\tthis._frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\n\t\tthis._frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\n\t\tthis._frameEnv = new Envelope(this._frameVertex[0].getCoordinate(), this._frameVertex[1].getCoordinate());\n\t\tthis._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate());\n\t},\n\tgetTriangleCoordinates: function (includeFrame) {\n\t\tvar visitor = new TriangleCoordinatesVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangles();\n\t},\n\tgetVertices: function (includeFrame) {\n\t\tvar vertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\n\t\t\tvar vd = qe.dest();\n\t\t\tif (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\n\t\t}\n\t\treturn vertices;\n\t},\n\tfetchTriangleToVisit: function (edge, edgeStack, includeFrame, visitedEdges) {\n\t\tvar curr = edge;\n\t\tvar edgeCount = 0;\n\t\tvar isFrame = false;\n\t\tdo {\n\t\t\tthis._triEdges[edgeCount] = curr;\n\t\t\tif (this.isFrameEdge(curr)) isFrame = true;\n\t\t\tvar sym = curr.sym();\n\t\t\tif (!visitedEdges.contains(sym)) edgeStack.push(sym);\n\t\t\tvisitedEdges.add(curr);\n\t\t\tedgeCount++;\n\t\t\tcurr = curr.lNext();\n\t\t} while (curr !== edge);\n\t\tif (isFrame && !includeFrame) return null;\n\t\treturn this._triEdges;\n\t},\n\tgetEdges: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this._quadEdges;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomFact = arguments[0];\n\t\t\tvar quadEdges = this.getPrimaryEdges(false);\n\t\t\tvar edges = new Array(quadEdges.size()).fill(null);\n\t\t\tvar i = 0;\n\t\t\tfor (var it = quadEdges.iterator(); it.hasNext(); ) {\n\t\t\t\tvar qe = it.next();\n\t\t\t\tedges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\n\t\t\t}\n\t\t\treturn geomFact.createMultiLineString(edges);\n\t\t}\n\t},\n\tgetVertexUniqueEdges: function (includeFrame) {\n\t\tvar edges = new ArrayList();\n\t\tvar visitedVertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (!visitedVertices.contains(v)) {\n\t\t\t\tvisitedVertices.add(v);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(v)) {\n\t\t\t\t\tedges.add(qe);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar qd = qe.sym();\n\t\t\tvar vd = qd.orig();\n\t\t\tif (!visitedVertices.contains(vd)) {\n\t\t\t\tvisitedVertices.add(vd);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(vd)) {\n\t\t\t\t\tedges.add(qd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tgetTriangleEdges: function (includeFrame) {\n\t\tvar visitor = new TriangleEdgesListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleEdges();\n\t},\n\tgetPrimaryEdges: function (includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edges = new ArrayList();\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar priQE = edge.getPrimary();\n\t\t\t\tif (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\n\t\t\t\tedgeStack.push(edge.oNext());\n\t\t\t\tedgeStack.push(edge.sym().oNext());\n\t\t\t\tvisitedEdges.add(edge);\n\t\t\t\tvisitedEdges.add(edge.sym());\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tdelete: function (e) {\n\t\tQuadEdge.splice(e, e.oPrev());\n\t\tQuadEdge.splice(e.sym(), e.sym().oPrev());\n\t\tvar eSym = e.sym();\n\t\tvar eRot = e.rot();\n\t\tvar eRotSym = e.rot().sym();\n\t\tthis._quadEdges.remove(e);\n\t\tthis._quadEdges.remove(eSym);\n\t\tthis._quadEdges.remove(eRot);\n\t\tthis._quadEdges.remove(eRotSym);\n\t\te.delete();\n\t\teSym.delete();\n\t\teRot.delete();\n\t\teRotSym.delete();\n\t},\n\tlocateFromEdge: function (v, startEdge) {\n\t\tvar iter = 0;\n\t\tvar maxIter = this._quadEdges.size();\n\t\tvar e = startEdge;\n\t\twhile (true) {\n\t\t\titer++;\n\t\t\tif (iter > maxIter) {\n\t\t\t\tthrow new LocateFailureException(e.toLineSegment());\n\t\t\t}\n\t\t\tif (v.equals(e.orig()) || v.equals(e.dest())) {\n\t\t\t\tbreak;\n\t\t\t} else if (v.rightOf(e)) {\n\t\t\t\te = e.sym();\n\t\t\t} else if (!v.rightOf(e.oNext())) {\n\t\t\t\te = e.oNext();\n\t\t\t} else if (!v.rightOf(e.dPrev())) {\n\t\t\t\te = e.dPrev();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn e;\n\t},\n\tgetTolerance: function () {\n\t\treturn this._tolerance;\n\t},\n\tgetVoronoiCellPolygons: function (geomFact) {\n\t\tthis.visitTriangles(new TriangleCircumcentreVisitor(), true);\n\t\tvar cells = new ArrayList();\n\t\tvar edges = this.getVertexUniqueEdges(false);\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tcells.add(this.getVoronoiCellPolygon(qe, geomFact));\n\t\t}\n\t\treturn cells;\n\t},\n\tgetVoronoiDiagram: function (geomFact) {\n\t\tvar vorCells = this.getVoronoiCellPolygons(geomFact);\n\t\treturn geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tvar triPtsList = this.getTriangleCoordinates(false);\n\t\tvar tris = new Array(triPtsList.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = triPtsList.iterator(); it.hasNext(); ) {\n\t\t\tvar triPt = it.next();\n\t\t\ttris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt));\n\t\t}\n\t\treturn geomFact.createGeometryCollection(tris);\n\t},\n\tinsertSite: function (v) {\n\t\tvar e = this.locate(v);\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn e;\n\t\t}\n\t\tvar base = this.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\treturn startEdge;\n\t},\n\tlocate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Vertex) {\n\t\t\t\tlet v = arguments[0];\n\t\t\t\treturn this._locator.locate(v);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this._locator.locate(new Vertex(p));\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tvar e = this._locator.locate(new Vertex(p0));\n\t\t\tif (e === null) return null;\n\t\t\tvar base = e;\n\t\t\tif (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\n\t\t\tvar locEdge = base;\n\t\t\tdo {\n\t\t\t\tif (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\n\t\t\t\tlocEdge = locEdge.oNext();\n\t\t\t} while (locEdge !== base);\n\t\t\treturn null;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdgeSubdivision;\n\t}\n});\nQuadEdgeSubdivision.getTriangleEdges = function (startQE, triEdge) {\n\ttriEdge[0] = startQE;\n\ttriEdge[1] = triEdge[0].lNext();\n\ttriEdge[2] = triEdge[1].lNext();\n\tif (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\n};\nfunction TriangleCircumcentreVisitor() {}\nextend(TriangleCircumcentreVisitor.prototype, {\n\tvisit: function (triEdges) {\n\t\tvar a = triEdges[0].orig().getCoordinate();\n\t\tvar b = triEdges[1].orig().getCoordinate();\n\t\tvar c = triEdges[2].orig().getCoordinate();\n\t\tvar cc = Triangle.circumcentre(a, b, c);\n\t\tvar ccVertex = new Vertex(cc);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\ttriEdges[i].rot().setOrig(ccVertex);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleCircumcentreVisitor;\n\t}\n});\nfunction TriangleEdgesListVisitor() {\n\tthis._triList = new ArrayList();\n}\nextend(TriangleEdgesListVisitor.prototype, {\n\tgetTriangleEdges: function () {\n\t\treturn this._triList;\n\t},\n\tvisit: function (triEdges) {\n\t\tthis._triList.add(triEdges);\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleEdgesListVisitor;\n\t}\n});\nfunction TriangleVertexListVisitor() {\n\tthis._triList = new ArrayList();\n}\nextend(TriangleVertexListVisitor.prototype, {\n\tvisit: function (triEdges) {\n\t\tthis._triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\n\t},\n\tgetTriangleVertices: function () {\n\t\treturn this._triList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleVertexListVisitor;\n\t}\n});\nfunction TriangleCoordinatesVisitor() {\n\tthis._coordList = new CoordinateList();\n\tthis._triCoords = new ArrayList();\n}\nextend(TriangleCoordinatesVisitor.prototype, {\n\tcheckTriangleSize: function (pts) {\n\t\tvar loc = \"\";\n\t\tif (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]); else {\n\t\t\tif (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\n\t\t}\n\t},\n\tvisit: function (triEdges) {\n\t\tthis._coordList.clear();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar v = triEdges[i].orig();\n\t\t\tthis._coordList.add(v.getCoordinate());\n\t\t}\n\t\tif (this._coordList.size() > 0) {\n\t\t\tthis._coordList.closeRing();\n\t\t\tvar pts = this._coordList.toCoordinateArray();\n\t\t\tif (pts.length !== 4) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._triCoords.add(pts);\n\t\t}\n\t},\n\tgetTriangles: function () {\n\t\treturn this._triCoords;\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleCoordinatesVisitor;\n\t}\n});\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nexport default function Segment() {\n\tthis._ls = null;\n\tthis._data = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t} else if (arguments.length === 3) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], data = arguments[2];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t\tthis._data = data;\n\t} else if (arguments.length === 6) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\n\t} else if (arguments.length === 7) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5], data = arguments[6];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data);\n\t}\n}\nextend(Segment.prototype, {\n\tgetLineSegment: function () {\n\t\treturn this._ls;\n\t},\n\tgetEndZ: function () {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.z;\n\t},\n\tgetStartZ: function () {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.z;\n\t},\n\tintersection: function (s) {\n\t\treturn this._ls.intersection(s.getLineSegment());\n\t},\n\tgetStart: function () {\n\t\treturn this._ls.getCoordinate(0);\n\t},\n\tgetEnd: function () {\n\t\treturn this._ls.getCoordinate(1);\n\t},\n\tgetEndY: function () {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.y;\n\t},\n\tgetStartX: function () {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.x;\n\t},\n\tequalsTopo: function (s) {\n\t\treturn this._ls.equalsTopo(s.getLineSegment());\n\t},\n\tgetStartY: function () {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.y;\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tgetEndX: function () {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.x;\n\t},\n\ttoString: function () {\n\t\treturn this._ls.toString();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Segment;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function KdNodeVisitor() {}\nextend(KdNodeVisitor.prototype, {\n\tvisit: function (node) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdNodeVisitor;\n\t}\n});\n","import Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nexport default function KdNode() {\n\tthis._p = null;\n\tthis._data = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis._count = null;\n\tif (arguments.length === 2) {\n\t\tlet p = arguments[0], data = arguments[1];\n\t\tthis._p = new Coordinate(p);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], data = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t}\n}\nextend(KdNode.prototype, {\n\tisRepeated: function () {\n\t\treturn this._count > 1;\n\t},\n\tgetRight: function () {\n\t\treturn this._right;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._p;\n\t},\n\tsetLeft: function (_left) {\n\t\tthis._left = _left;\n\t},\n\tgetX: function () {\n\t\treturn this._p.x;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tgetCount: function () {\n\t\treturn this._count;\n\t},\n\tgetLeft: function () {\n\t\treturn this._left;\n\t},\n\tgetY: function () {\n\t\treturn this._p.y;\n\t},\n\tincrement: function () {\n\t\tthis._count = this._count + 1;\n\t},\n\tsetRight: function (_right) {\n\t\tthis._right = _right;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdNode;\n\t}\n});\n","import CoordinateList from '../../geom/CoordinateList';\nimport hasInterface from '../../../../../hasInterface';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport KdNodeVisitor from './KdNodeVisitor';\nimport Envelope from '../../geom/Envelope';\nimport List from '../../../../../java/util/List';\nimport KdNode from './KdNode';\nexport default function KdTree() {\n\tthis._root = null;\n\tthis._numberOfNodes = null;\n\tthis._tolerance = null;\n\tif (arguments.length === 0) {\n\t\tKdTree.call(this, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet tolerance = arguments[0];\n\t\tthis._tolerance = tolerance;\n\t}\n}\nextend(KdTree.prototype, {\n\tinsert: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn this.insert(p, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], data = arguments[1];\n\t\t\tif (this._root === null) {\n\t\t\t\tthis._root = new KdNode(p, data);\n\t\t\t\treturn this._root;\n\t\t\t}\n\t\t\tif (this._tolerance > 0) {\n\t\t\t\tvar matchNode = this.findBestMatchNode(p);\n\t\t\t\tif (matchNode !== null) {\n\t\t\t\t\tmatchNode.increment();\n\t\t\t\t\treturn matchNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.insertExact(p, data);\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet queryEnv = arguments[0];\n\t\t\tvar result = new ArrayList();\n\t\t\tthis.query(queryEnv, result);\n\t\t\treturn result;\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n\t\t\t\tlet queryEnv = arguments[0], result = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, {\n\t\t\t\t\tinterfaces_: function () {\n\t\t\t\t\t\treturn [KdNodeVisitor];\n\t\t\t\t\t},\n\t\t\t\t\tvisit: function (node) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n\t\t\t\tlet queryEnv = arguments[0], visitor = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tqueryNode: function (currentNode, queryEnv, odd, visitor) {\n\t\tif (currentNode === null) return null;\n\t\tvar min = null;\n\t\tvar max = null;\n\t\tvar discriminant = null;\n\t\tif (odd) {\n\t\t\tmin = queryEnv.getMinX();\n\t\t\tmax = queryEnv.getMaxX();\n\t\t\tdiscriminant = currentNode.getX();\n\t\t} else {\n\t\t\tmin = queryEnv.getMinY();\n\t\t\tmax = queryEnv.getMaxY();\n\t\t\tdiscriminant = currentNode.getY();\n\t\t}\n\t\tvar searchLeft = min < discriminant;\n\t\tvar searchRight = discriminant <= max;\n\t\tif (searchLeft) {\n\t\t\tthis.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\n\t\t}\n\t\tif (queryEnv.contains(currentNode.getCoordinate())) {\n\t\t\tvisitor.visit(currentNode);\n\t\t}\n\t\tif (searchRight) {\n\t\t\tthis.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\n\t\t}\n\t},\n\tfindBestMatchNode: function (p) {\n\t\tvar visitor = new BestMatchVisitor(p, this._tolerance);\n\t\tthis.query(visitor.queryEnvelope(), visitor);\n\t\treturn visitor.getNode();\n\t},\n\tisEmpty: function () {\n\t\tif (this._root === null) return true;\n\t\treturn false;\n\t},\n\tinsertExact: function (p, data) {\n\t\tvar currentNode = this._root;\n\t\tvar leafNode = this._root;\n\t\tvar isOddLevel = true;\n\t\tvar isLessThan = true;\n\t\twhile (currentNode !== null) {\n\t\t\tif (currentNode !== null) {\n\t\t\t\tvar isInTolerance = p.distance(currentNode.getCoordinate()) <= this._tolerance;\n\t\t\t\tif (isInTolerance) {\n\t\t\t\t\tcurrentNode.increment();\n\t\t\t\t\treturn currentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isOddLevel) {\n\t\t\t\tisLessThan = p.x < currentNode.getX();\n\t\t\t} else {\n\t\t\t\tisLessThan = p.y < currentNode.getY();\n\t\t\t}\n\t\t\tleafNode = currentNode;\n\t\t\tif (isLessThan) {\n\t\t\t\tcurrentNode = currentNode.getLeft();\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.getRight();\n\t\t\t}\n\t\t\tisOddLevel = !isOddLevel;\n\t\t}\n\t\tthis._numberOfNodes = this._numberOfNodes + 1;\n\t\tvar node = new KdNode(p, data);\n\t\tif (isLessThan) {\n\t\t\tleafNode.setLeft(node);\n\t\t} else {\n\t\t\tleafNode.setRight(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdTree;\n\t}\n});\nKdTree.toCoordinates = function () {\n\tif (arguments.length === 1) {\n\t\tlet kdnodes = arguments[0];\n\t\treturn KdTree.toCoordinates(kdnodes, false);\n\t} else if (arguments.length === 2) {\n\t\tlet kdnodes = arguments[0], includeRepeated = arguments[1];\n\t\tvar coord = new CoordinateList();\n\t\tfor (var it = kdnodes.iterator(); it.hasNext(); ) {\n\t\t\tvar node = it.next();\n\t\t\tvar count = includeRepeated ? node.getCount() : 1;\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tcoord.add(node.getCoordinate(), true);\n\t\t\t}\n\t\t}\n\t\treturn coord.toCoordinateArray();\n\t}\n};\nfunction BestMatchVisitor() {\n\tthis._tolerance = null;\n\tthis._matchNode = null;\n\tthis._matchDist = 0.0;\n\tthis._p = null;\n\tlet p = arguments[0], tolerance = arguments[1];\n\tthis._p = p;\n\tthis._tolerance = tolerance;\n}\nextend(BestMatchVisitor.prototype, {\n\tvisit: function (node) {\n\t\tvar dist = this._p.distance(node.getCoordinate());\n\t\tvar isInTolerance = dist <= this._tolerance;\n\t\tif (!isInTolerance) return null;\n\t\tvar update = false;\n\t\tif (this._matchNode === null || dist < this._matchDist || this._matchNode !== null && dist === this._matchDist && node.getCoordinate().compareTo(this._matchNode.getCoordinate()) < 1) update = true;\n\t\tif (update) {\n\t\t\tthis._matchNode = node;\n\t\t\tthis._matchDist = dist;\n\t\t}\n\t},\n\tqueryEnvelope: function () {\n\t\tvar queryEnv = new Envelope(this._p);\n\t\tqueryEnv.expandBy(this._tolerance);\n\t\treturn queryEnv;\n\t},\n\tgetNode: function () {\n\t\treturn this._matchNode;\n\t},\n\tinterfaces_: function () {\n\t\treturn [KdNodeVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn BestMatchVisitor;\n\t}\n});\nKdTree.BestMatchVisitor = BestMatchVisitor;\n","import GeometryFactory from '../geom/GeometryFactory';\nimport NonEncroachingSplitPointFinder from './NonEncroachingSplitPointFinder';\nimport ConstraintVertex from './ConstraintVertex';\nimport Coordinate from '../geom/Coordinate';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LastFoundQuadEdgeLocator from './quadedge/LastFoundQuadEdgeLocator';\nimport Segment from './Segment';\nimport ConvexHull from '../algorithm/ConvexHull';\nimport KdTree from '../index/kdtree/KdTree';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default function ConformingDelaunayTriangulator() {\n\tthis._initialVertices = null;\n\tthis._segVertices = null;\n\tthis._segments = new ArrayList();\n\tthis._subdiv = null;\n\tthis._incDel = null;\n\tthis._convexHull = null;\n\tthis._splitFinder = new NonEncroachingSplitPointFinder();\n\tthis._kdt = null;\n\tthis._vertexFactory = null;\n\tthis._computeAreaEnv = null;\n\tthis._splitPt = null;\n\tthis._tolerance = null;\n\tlet initialVertices = arguments[0], tolerance = arguments[1];\n\tthis._initialVertices = new ArrayList(initialVertices);\n\tthis._tolerance = tolerance;\n\tthis._kdt = new KdTree(tolerance);\n}\nextend(ConformingDelaunayTriangulator.prototype, {\n\tgetInitialVertices: function () {\n\t\treturn this._initialVertices;\n\t},\n\tgetKDT: function () {\n\t\treturn this._kdt;\n\t},\n\tenforceConstraints: function () {\n\t\tthis.addConstraintVertices();\n\t\tvar count = 0;\n\t\tvar splits = 0;\n\t\tdo {\n\t\t\tsplits = this.enforceGabriel(this._segments);\n\t\t\tcount++;\n\t\t} while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\n\t},\n\tinsertSites: function (vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tgetVertexFactory: function () {\n\t\treturn this._vertexFactory;\n\t},\n\tgetPointArray: function () {\n\t\tvar pts = new Array(this._initialVertices.size() + this._segVertices.size()).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._initialVertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\tfor (var i2 = this._segVertices.iterator(); i2.hasNext(); ) {\n\t\t\tvar v = i2.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\treturn pts;\n\t},\n\tsetConstraints: function (segments, segVertices) {\n\t\tthis._segments = segments;\n\t\tthis._segVertices = segVertices;\n\t},\n\tcomputeConvexHull: function () {\n\t\tvar fact = new GeometryFactory();\n\t\tvar coords = this.getPointArray();\n\t\tvar hull = new ConvexHull(coords, fact);\n\t\tthis._convexHull = hull.getConvexHull();\n\t},\n\taddConstraintVertices: function () {\n\t\tthis.computeConvexHull();\n\t\tthis.insertSites(this._segVertices);\n\t},\n\tfindNonGabrielPoint: function (seg) {\n\t\tvar p = seg.getStart();\n\t\tvar q = seg.getEnd();\n\t\tvar midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\n\t\tvar segRadius = p.distance(midPt);\n\t\tvar env = new Envelope(midPt);\n\t\tenv.expandBy(segRadius);\n\t\tvar result = this._kdt.query(env);\n\t\tvar closestNonGabriel = null;\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tfor (var i = result.iterator(); i.hasNext(); ) {\n\t\t\tvar nextNode = i.next();\n\t\t\tvar testPt = nextNode.getCoordinate();\n\t\t\tif (testPt.equals2D(p) || testPt.equals2D(q)) continue;\n\t\t\tvar testRadius = midPt.distance(testPt);\n\t\t\tif (testRadius < segRadius) {\n\t\t\t\tvar testDist = testRadius;\n\t\t\t\tif (closestNonGabriel === null || testDist < minDist) {\n\t\t\t\t\tclosestNonGabriel = testPt;\n\t\t\t\t\tminDist = testDist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn closestNonGabriel;\n\t},\n\tgetConstraintSegments: function () {\n\t\treturn this._segments;\n\t},\n\tsetSplitPointFinder: function (splitFinder) {\n\t\tthis._splitFinder = splitFinder;\n\t},\n\tgetConvexHull: function () {\n\t\treturn this._convexHull;\n\t},\n\tgetTolerance: function () {\n\t\treturn this._tolerance;\n\t},\n\tenforceGabriel: function (segsToInsert) {\n\t\tvar newSegments = new ArrayList();\n\t\tvar splits = 0;\n\t\tvar segsToRemove = new ArrayList();\n\t\tfor (var i = segsToInsert.iterator(); i.hasNext(); ) {\n\t\t\tvar seg = i.next();\n\t\t\tvar encroachPt = this.findNonGabrielPoint(seg);\n\t\t\tif (encroachPt === null) continue;\n\t\t\tthis._splitPt = this._splitFinder.findSplitPoint(seg, encroachPt);\n\t\t\tvar splitVertex = this.createVertex(this._splitPt, seg);\n\t\t\tvar insertedVertex = this.insertSite(splitVertex);\n\t\t\tif (!insertedVertex.getCoordinate().equals2D(this._splitPt)) {}\n\t\t\tvar s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\n\t\t\tvar s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\n\t\t\tnewSegments.add(s1);\n\t\t\tnewSegments.add(s2);\n\t\t\tsegsToRemove.add(seg);\n\t\t\tsplits = splits + 1;\n\t\t}\n\t\tsegsToInsert.removeAll(segsToRemove);\n\t\tsegsToInsert.addAll(newSegments);\n\t\treturn splits;\n\t},\n\tcreateVertex: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, null); else v = new ConstraintVertex(p);\n\t\t\treturn v;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], seg = arguments[1];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, seg); else v = new ConstraintVertex(p);\n\t\t\tv.setOnConstraint(true);\n\t\t\treturn v;\n\t\t}\n\t},\n\tgetSubdivision: function () {\n\t\treturn this._subdiv;\n\t},\n\tcomputeBoundingBox: function () {\n\t\tvar vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices);\n\t\tvar segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices);\n\t\tvar allPointsEnv = new Envelope(vertexEnv);\n\t\tallPointsEnv.expandToInclude(segEnv);\n\t\tvar deltaX = allPointsEnv.getWidth() * 0.2;\n\t\tvar deltaY = allPointsEnv.getHeight() * 0.2;\n\t\tvar delta = Math.max(deltaX, deltaY);\n\t\tthis._computeAreaEnv = new Envelope(allPointsEnv);\n\t\tthis._computeAreaEnv.expandBy(delta);\n\t},\n\tsetVertexFactory: function (vertexFactory) {\n\t\tthis._vertexFactory = vertexFactory;\n\t},\n\tformInitialDelaunay: function () {\n\t\tthis.computeBoundingBox();\n\t\tthis._subdiv = new QuadEdgeSubdivision(this._computeAreaEnv, this._tolerance);\n\t\tthis._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv));\n\t\tthis._incDel = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\tthis.insertSites(this._initialVertices);\n\t},\n\tinsertSite: function () {\n\t\tif (arguments[0] instanceof ConstraintVertex) {\n\t\t\tlet v = arguments[0];\n\t\t\tvar kdnode = this._kdt.insert(v.getCoordinate(), v);\n\t\t\tif (!kdnode.isRepeated()) {\n\t\t\t\tthis._incDel.insertSite(v);\n\t\t\t} else {\n\t\t\t\tvar snappedV = kdnode.getData();\n\t\t\t\tsnappedV.merge(v);\n\t\t\t\treturn snappedV;\n\t\t\t}\n\t\t\treturn v;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.insertSite(this.createVertex(p));\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConformingDelaunayTriangulator;\n\t}\n});\nConformingDelaunayTriangulator.computeVertexEnvelope = function (vertices) {\n\tvar env = new Envelope();\n\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\tvar v = i.next();\n\t\tenv.expandToInclude(v.getCoordinate());\n\t}\n\treturn env;\n};\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\n","import CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport extend from '../../../../extend';\nimport Vertex from './quadedge/Vertex';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default function DelaunayTriangulationBuilder() {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n}\nextend(DelaunayTriangulationBuilder.prototype, {\n\tcreate: function () {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetSites: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tgetEdges: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DelaunayTriangulationBuilder;\n\t}\n});\nDelaunayTriangulationBuilder.extractUniqueCoordinates = function (geom) {\n\tif (geom === null) return new CoordinateList();\n\tvar coords = geom.getCoordinates();\n\treturn DelaunayTriangulationBuilder.unique(coords);\n};\nDelaunayTriangulationBuilder.envelope = function (coords) {\n\tvar env = new Envelope();\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\tvar coord = i.next();\n\t\tenv.expandToInclude(coord);\n\t}\n\treturn env;\n};\nDelaunayTriangulationBuilder.unique = function (coords) {\n\tvar coordsCopy = CoordinateArrays.copyDeep(coords);\n\tArrays.sort(coordsCopy);\n\tvar coordList = new CoordinateList(coordsCopy, false);\n\treturn coordList;\n};\nDelaunayTriangulationBuilder.toVertices = function (coords) {\n\tvar verts = new ArrayList();\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\tvar coord = i.next();\n\t\tverts.add(new Vertex(coord));\n\t}\n\treturn verts;\n};\n","import ConformingDelaunayTriangulator from './ConformingDelaunayTriangulator';\nimport ConstraintVertex from './ConstraintVertex';\nimport extend from '../../../../extend';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport Segment from './Segment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function ConformingDelaunayTriangulationBuilder() {\n\tthis._siteCoords = null;\n\tthis._constraintLines = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._constraintVertexMap = new TreeMap();\n}\nextend(ConformingDelaunayTriangulationBuilder.prototype, {\n\tcreateSiteVertices: function (coords) {\n\t\tvar verts = new ArrayList();\n\t\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\t\tvar coord = i.next();\n\t\t\tif (this._constraintVertexMap.containsKey(coord)) continue;\n\t\t\tverts.add(new ConstraintVertex(coord));\n\t\t}\n\t\treturn verts;\n\t},\n\tcreate: function () {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar segments = new ArrayList();\n\t\tif (this._constraintLines !== null) {\n\t\t\tsiteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal());\n\t\t\tthis.createVertices(this._constraintLines);\n\t\t\tsegments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines);\n\t\t}\n\t\tvar sites = this.createSiteVertices(this._siteCoords);\n\t\tvar cdt = new ConformingDelaunayTriangulator(sites, this._tolerance);\n\t\tcdt.setConstraints(segments, new ArrayList(this._constraintVertexMap.values()));\n\t\tcdt.formInitialDelaunay();\n\t\tcdt.enforceConstraints();\n\t\tthis._subdiv = cdt.getSubdivision();\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetConstraints: function (constraintLines) {\n\t\tthis._constraintLines = constraintLines;\n\t},\n\tsetSites: function (geom) {\n\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t},\n\tgetEdges: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t},\n\tcreateVertices: function (geom) {\n\t\tvar coords = geom.getCoordinates();\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tvar v = new ConstraintVertex(coords[i]);\n\t\t\tthis._constraintVertexMap.put(coords[i], v);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConformingDelaunayTriangulationBuilder;\n\t}\n});\nConformingDelaunayTriangulationBuilder.createConstraintSegments = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tvar constraintSegs = new ArrayList();\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar line = i.next();\n\t\t\tConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\n\t\t}\n\t\treturn constraintSegs;\n\t} else if (arguments.length === 2) {\n\t\tlet line = arguments[0], constraintSegs = arguments[1];\n\t\tvar coords = line.getCoordinates();\n\t\tfor (var i = 1; i < coords.length; i++) {\n\t\t\tconstraintSegs.add(new Segment(coords[i - 1], coords[i]));\n\t\t}\n\t}\n};\n","import Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport extend from '../../../../extend';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function VoronoiDiagramBuilder() {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._clipEnv = null;\n\tthis._diagramEnv = null;\n}\nextend(VoronoiDiagramBuilder.prototype, {\n\tcreate: function () {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tthis._diagramEnv = siteEnv;\n\t\tvar expandBy = Math.max(this._diagramEnv.getWidth(), this._diagramEnv.getHeight());\n\t\tthis._diagramEnv.expandBy(expandBy);\n\t\tif (this._clipEnv !== null) this._diagramEnv.expandToInclude(this._clipEnv);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tgetDiagram: function (geomFact) {\n\t\tthis.create();\n\t\tvar polys = this._subdiv.getVoronoiDiagram(geomFact);\n\t\treturn VoronoiDiagramBuilder.clipGeometryCollection(polys, this._diagramEnv);\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetSites: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tsetClipEnvelope: function (clipEnv) {\n\t\tthis._clipEnv = clipEnv;\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn VoronoiDiagramBuilder;\n\t}\n});\nVoronoiDiagramBuilder.clipGeometryCollection = function (geom, clipEnv) {\n\tvar clipPoly = geom.getFactory().toGeometry(clipEnv);\n\tvar clipped = new ArrayList();\n\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\tvar g = geom.getGeometryN(i);\n\t\tvar result = null;\n\t\tif (clipEnv.contains(g.getEnvelopeInternal())) result = g; else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n\t\t\tresult = clipPoly.intersection(g);\n\t\t\tresult.setUserData(g.getUserData());\n\t\t}\n\t\tif (result !== null && !result.isEmpty()) {\n\t\t\tclipped.add(result);\n\t\t}\n\t}\n\treturn geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function LinearLocation() {\n\tthis._componentIndex = 0;\n\tthis._segmentIndex = 0;\n\tthis._segmentFraction = 0.0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet loc = arguments[0];\n\t\tthis._componentIndex = loc._componentIndex;\n\t\tthis._segmentIndex = loc._segmentIndex;\n\t\tthis._segmentFraction = loc._segmentFraction;\n\t} else if (arguments.length === 2) {\n\t\tlet segmentIndex = arguments[0], segmentFraction = arguments[1];\n\t\tLinearLocation.call(this, 0, segmentIndex, segmentFraction);\n\t} else if (arguments.length === 3) {\n\t\tlet componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tthis.normalize();\n\t} else if (arguments.length === 4) {\n\t\tlet componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2], doNormalize = arguments[3];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tif (doNormalize) this.normalize();\n\t}\n}\nextend(LinearLocation.prototype, {\n\tgetSegmentIndex: function () {\n\t\treturn this._segmentIndex;\n\t},\n\tgetComponentIndex: function () {\n\t\treturn this._componentIndex;\n\t},\n\tisEndpoint: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\treturn this._segmentIndex >= nseg || this._segmentIndex === nseg && this._segmentFraction >= 1.0;\n\t},\n\tisValid: function (linearGeom) {\n\t\tif (this._componentIndex < 0 || this._componentIndex >= linearGeom.getNumGeometries()) return false;\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tif (this._segmentIndex < 0 || this._segmentIndex > lineComp.getNumPoints()) return false;\n\t\tif (this._segmentIndex === lineComp.getNumPoints() && this._segmentFraction !== 0.0) return false;\n\t\tif (this._segmentFraction < 0.0 || this._segmentFraction > 1.0) return false;\n\t\treturn true;\n\t},\n\tnormalize: function () {\n\t\tif (this._segmentFraction < 0.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction > 1.0) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t\tif (this._componentIndex < 0) {\n\t\t\tthis._componentIndex = 0;\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentIndex < 0) {\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction === 1.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t\tthis._segmentIndex += 1;\n\t\t}\n\t},\n\ttoLowest: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\tif (this._segmentIndex < nseg) return this;\n\t\treturn new LinearLocation(this._componentIndex, nseg, 1.0, false);\n\t},\n\tgetCoordinate: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) return p0;\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn LinearLocation.pointAlongSegmentByFraction(p0, p1, this._segmentFraction);\n\t},\n\tgetSegmentFraction: function () {\n\t\treturn this._segmentFraction;\n\t},\n\tgetSegment: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) {\n\t\t\tvar prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2);\n\t\t\treturn new LineSegment(prev, p0);\n\t\t}\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn new LineSegment(p0, p1);\n\t},\n\tclamp: function (linear) {\n\t\tif (this._componentIndex >= linear.getNumGeometries()) {\n\t\t\tthis.setToEnd(linear);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._segmentIndex >= linear.getNumPoints()) {\n\t\t\tvar line = linear.getGeometryN(this._componentIndex);\n\t\t\tthis._segmentIndex = line.getNumPoints() - 1;\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t},\n\tsetToEnd: function (linear) {\n\t\tthis._componentIndex = linear.getNumGeometries() - 1;\n\t\tvar lastLine = linear.getGeometryN(this._componentIndex);\n\t\tthis._segmentIndex = lastLine.getNumPoints() - 1;\n\t\tthis._segmentFraction = 1.0;\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this._componentIndex < other._componentIndex) return -1;\n\t\tif (this._componentIndex > other._componentIndex) return 1;\n\t\tif (this._segmentIndex < other._segmentIndex) return -1;\n\t\tif (this._segmentIndex > other._segmentIndex) return 1;\n\t\tif (this._segmentFraction < other._segmentFraction) return -1;\n\t\tif (this._segmentFraction > other._segmentFraction) return 1;\n\t\treturn 0;\n\t},\n\tcopy: function () {\n\t\treturn new LinearLocation(this._componentIndex, this._segmentIndex, this._segmentFraction);\n\t},\n\ttoString: function () {\n\t\treturn \"LinearLoc[\" + this._componentIndex + \", \" + this._segmentIndex + \", \" + this._segmentFraction + \"]\";\n\t},\n\tisOnSameSegment: function (loc) {\n\t\tif (this._componentIndex !== loc._componentIndex) return false;\n\t\tif (this._segmentIndex === loc._segmentIndex) return true;\n\t\tif (loc._segmentIndex - this._segmentIndex === 1 && loc._segmentFraction === 0.0) return true;\n\t\tif (this._segmentIndex - loc._segmentIndex === 1 && this._segmentFraction === 0.0) return true;\n\t\treturn false;\n\t},\n\tsnapToVertex: function (linearGeom, minDistance) {\n\t\tif (this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0) return null;\n\t\tvar segLen = this.getSegmentLength(linearGeom);\n\t\tvar lenToStart = this._segmentFraction * segLen;\n\t\tvar lenToEnd = segLen - lenToStart;\n\t\tif (lenToStart <= lenToEnd && lenToStart < minDistance) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t} else if (lenToEnd <= lenToStart && lenToEnd < minDistance) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t},\n\tcompareLocationValues: function (componentIndex1, segmentIndex1, segmentFraction1) {\n\t\tif (this._componentIndex < componentIndex1) return -1;\n\t\tif (this._componentIndex > componentIndex1) return 1;\n\t\tif (this._segmentIndex < segmentIndex1) return -1;\n\t\tif (this._segmentIndex > segmentIndex1) return 1;\n\t\tif (this._segmentFraction < segmentFraction1) return -1;\n\t\tif (this._segmentFraction > segmentFraction1) return 1;\n\t\treturn 0;\n\t},\n\tgetSegmentLength: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar segIndex = this._segmentIndex;\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) segIndex = lineComp.getNumPoints() - 2;\n\t\tvar p0 = lineComp.getCoordinateN(segIndex);\n\t\tvar p1 = lineComp.getCoordinateN(segIndex + 1);\n\t\treturn p0.distance(p1);\n\t},\n\tisVertex: function () {\n\t\treturn this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn LinearLocation;\n\t}\n});\nLinearLocation.getEndLocation = function (linear) {\n\tvar loc = new LinearLocation();\n\tloc.setToEnd(linear);\n\treturn loc;\n};\nLinearLocation.pointAlongSegmentByFraction = function (p0, p1, frac) {\n\tif (frac <= 0.0) return p0;\n\tif (frac >= 1.0) return p1;\n\tvar x = (p1.x - p0.x) * frac + p0.x;\n\tvar y = (p1.y - p0.y) * frac + p0.y;\n\tvar z = (p1.z - p0.z) * frac + p0.z;\n\treturn new Coordinate(x, y, z);\n};\nLinearLocation.compareLocationValues = function (componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n\tif (componentIndex0 < componentIndex1) return -1;\n\tif (componentIndex0 > componentIndex1) return 1;\n\tif (segmentIndex0 < segmentIndex1) return -1;\n\tif (segmentIndex0 > segmentIndex1) return 1;\n\tif (segmentFraction0 < segmentFraction1) return -1;\n\tif (segmentFraction0 > segmentFraction1) return 1;\n\treturn 0;\n};\n","import hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Lineal from '../geom/Lineal';\nexport default function LinearIterator() {\n\tthis._linearGeom = null;\n\tthis._numLines = null;\n\tthis._currentLine = null;\n\tthis._componentIndex = 0;\n\tthis._vertexIndex = 0;\n\tif (arguments.length === 1) {\n\t\tlet linear = arguments[0];\n\t\tLinearIterator.call(this, linear, 0, 0);\n\t} else if (arguments.length === 2) {\n\t\tlet linear = arguments[0], start = arguments[1];\n\t\tLinearIterator.call(this, linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start));\n\t} else if (arguments.length === 3) {\n\t\tlet linearGeom = arguments[0], componentIndex = arguments[1], vertexIndex = arguments[2];\n\t\tif (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException(\"Lineal geometry is required\");\n\t\tthis._linearGeom = linearGeom;\n\t\tthis._numLines = linearGeom.getNumGeometries();\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._vertexIndex = vertexIndex;\n\t\tthis.loadCurrentLine();\n\t}\n}\nextend(LinearIterator.prototype, {\n\tgetComponentIndex: function () {\n\t\treturn this._componentIndex;\n\t},\n\tgetLine: function () {\n\t\treturn this._currentLine;\n\t},\n\tgetVertexIndex: function () {\n\t\treturn this._vertexIndex;\n\t},\n\tgetSegmentEnd: function () {\n\t\tif (this._vertexIndex < this.getLine().getNumPoints() - 1) return this._currentLine.getCoordinateN(this._vertexIndex + 1);\n\t\treturn null;\n\t},\n\tnext: function () {\n\t\tif (!this.hasNext()) return null;\n\t\tthis._vertexIndex++;\n\t\tif (this._vertexIndex >= this._currentLine.getNumPoints()) {\n\t\t\tthis._componentIndex++;\n\t\t\tthis.loadCurrentLine();\n\t\t\tthis._vertexIndex = 0;\n\t\t}\n\t},\n\tloadCurrentLine: function () {\n\t\tif (this._componentIndex >= this._numLines) {\n\t\t\tthis._currentLine = null;\n\t\t\treturn null;\n\t\t}\n\t\tthis._currentLine = this._linearGeom.getGeometryN(this._componentIndex);\n\t},\n\tgetSegmentStart: function () {\n\t\treturn this._currentLine.getCoordinateN(this._vertexIndex);\n\t},\n\tisEndOfLine: function () {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._vertexIndex < this._currentLine.getNumPoints() - 1) return false;\n\t\treturn true;\n\t},\n\thasNext: function () {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._componentIndex === this._numLines - 1 && this._vertexIndex >= this._currentLine.getNumPoints()) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearIterator;\n\t}\n});\nLinearIterator.segmentEndVertexIndex = function (loc) {\n\tif (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1;\n\treturn loc.getSegmentIndex();\n};\n","import LinearIterator from './LinearIterator';\nimport LinearLocation from './LinearLocation';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport Assert from '../util/Assert';\nexport default function LocationIndexOfPoint() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LocationIndexOfPoint.prototype, {\n\tindexOf: function (inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, null);\n\t},\n\tindexOfFromStart: function (inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar minComponentIndex = 0;\n\t\tvar minSegmentIndex = 0;\n\t\tvar minFrac = -1.0;\n\t\tvar seg = new LineSegment();\n\t\tfor (var it = new LinearIterator(this._linearGeom); it.hasNext(); it.next()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segFrac = seg.segmentFraction(inputPt);\n\t\t\t\tvar candidateComponentIndex = it.getComponentIndex();\n\t\t\t\tvar candidateSegmentIndex = it.getVertexIndex();\n\t\t\t\tif (segDistance < minDistance) {\n\t\t\t\t\tif (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n\t\t\t\t\t\tminComponentIndex = candidateComponentIndex;\n\t\t\t\t\t\tminSegmentIndex = candidateSegmentIndex;\n\t\t\t\t\t\tminFrac = segFrac;\n\t\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (minDistance === Double.MAX_VALUE) {\n\t\t\treturn new LinearLocation(minIndex);\n\t\t}\n\t\tvar loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac);\n\t\treturn loc;\n\t},\n\tindexOfAfter: function (inputPt, minIndex) {\n\t\tif (minIndex === null) return this.indexOf(inputPt);\n\t\tvar endLoc = LinearLocation.getEndLocation(this._linearGeom);\n\t\tif (endLoc.compareTo(minIndex) <= 0) return endLoc;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter.compareTo(minIndex) >= 0, \"computed location is before specified minimum location\");\n\t\treturn closestAfter;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocationIndexOfPoint;\n\t}\n});\nLocationIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLocationIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n","import extend from '../../../../extend';\nimport LocationIndexOfPoint from './LocationIndexOfPoint';\nexport default function LocationIndexOfLine() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LocationIndexOfLine.prototype, {\n\tindicesOf: function (subLine) {\n\t\tvar startPt = subLine.getGeometryN(0).getCoordinateN(0);\n\t\tvar lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1);\n\t\tvar endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1);\n\t\tvar locPt = new LocationIndexOfPoint(this._linearGeom);\n\t\tvar subLineLoc = new Array(2).fill(null);\n\t\tsubLineLoc[0] = locPt.indexOf(startPt);\n\t\tif (subLine.getLength() === 0.0) {\n\t\t\tsubLineLoc[1] = subLineLoc[0].copy();\n\t\t} else {\n\t\t\tsubLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0]);\n\t\t}\n\t\treturn subLineLoc;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocationIndexOfLine;\n\t}\n});\nLocationIndexOfLine.indicesOf = function (linearGeom, subLine) {\n\tvar locater = new LocationIndexOfLine(linearGeom);\n\treturn locater.indicesOf(subLine);\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function LinearGeometryBuilder() {\n\tthis._geomFact = null;\n\tthis._lines = new ArrayList();\n\tthis._coordList = null;\n\tthis._ignoreInvalidLines = false;\n\tthis._fixInvalidLines = false;\n\tthis._lastPt = null;\n\tlet geomFact = arguments[0];\n\tthis._geomFact = geomFact;\n}\nextend(LinearGeometryBuilder.prototype, {\n\tgetGeometry: function () {\n\t\tthis.endLine();\n\t\treturn this._geomFact.buildGeometry(this._lines);\n\t},\n\tgetLastCoordinate: function () {\n\t\treturn this._lastPt;\n\t},\n\tendLine: function () {\n\t\tif (this._coordList === null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._ignoreInvalidLines && this._coordList.size() < 2) {\n\t\t\tthis._coordList = null;\n\t\t\treturn null;\n\t\t}\n\t\tvar rawPts = this._coordList.toCoordinateArray();\n\t\tvar pts = rawPts;\n\t\tif (this._fixInvalidLines) pts = this.validCoordinateSequence(rawPts);\n\t\tthis._coordList = null;\n\t\tvar line = null;\n\t\ttry {\n\t\t\tline = this._geomFact.createLineString(pts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof IllegalArgumentException) {\n\t\t\t\tif (!this._ignoreInvalidLines) throw ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (line !== null) this._lines.add(line);\n\t},\n\tsetFixInvalidLines: function (fixInvalidLines) {\n\t\tthis._fixInvalidLines = fixInvalidLines;\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pt = arguments[0];\n\t\t\tthis.add(pt, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet pt = arguments[0], allowRepeatedPoints = arguments[1];\n\t\t\tif (this._coordList === null) this._coordList = new CoordinateList();\n\t\t\tthis._coordList.add(pt, allowRepeatedPoints);\n\t\t\tthis._lastPt = pt;\n\t\t}\n\t},\n\tsetIgnoreInvalidLines: function (ignoreInvalidLines) {\n\t\tthis._ignoreInvalidLines = ignoreInvalidLines;\n\t},\n\tvalidCoordinateSequence: function (pts) {\n\t\tif (pts.length >= 2) return pts;\n\t\tvar validPts = [pts[0], pts[0]];\n\t\treturn validPts;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearGeometryBuilder;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport LinearIterator from './LinearIterator';\nimport extend from '../../../../extend';\nimport Assert from '../util/Assert';\nimport LinearGeometryBuilder from './LinearGeometryBuilder';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function ExtractLineByLocation() {\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n}\nextend(ExtractLineByLocation.prototype, {\n\tcomputeLinear: function (start, end) {\n\t\tvar builder = new LinearGeometryBuilder(this._line.getFactory());\n\t\tbuilder.setFixInvalidLines(true);\n\t\tif (!start.isVertex()) builder.add(start.getCoordinate(this._line));\n\t\tfor (var it = new LinearIterator(this._line, start); it.hasNext(); it.next()) {\n\t\t\tif (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break;\n\t\t\tvar pt = it.getSegmentStart();\n\t\t\tbuilder.add(pt);\n\t\t\tif (it.isEndOfLine()) builder.endLine();\n\t\t}\n\t\tif (!end.isVertex()) builder.add(end.getCoordinate(this._line));\n\t\treturn builder.getGeometry();\n\t},\n\tcomputeLine: function (start, end) {\n\t\tvar coordinates = this._line.getCoordinates();\n\t\tvar newCoordinates = new CoordinateList();\n\t\tvar startSegmentIndex = start.getSegmentIndex();\n\t\tif (start.getSegmentFraction() > 0.0) startSegmentIndex += 1;\n\t\tvar lastSegmentIndex = end.getSegmentIndex();\n\t\tif (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1;\n\t\tif (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1;\n\t\tif (!start.isVertex()) newCoordinates.add(start.getCoordinate(this._line));\n\t\tfor (var i = startSegmentIndex; i <= lastSegmentIndex; i++) {\n\t\t\tnewCoordinates.add(coordinates[i]);\n\t\t}\n\t\tif (!end.isVertex()) newCoordinates.add(end.getCoordinate(this._line));\n\t\tif (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this._line));\n\t\tvar newCoordinateArray = newCoordinates.toCoordinateArray();\n\t\tif (newCoordinateArray.length <= 1) {\n\t\t\tnewCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]];\n\t\t}\n\t\treturn this._line.getFactory().createLineString(newCoordinateArray);\n\t},\n\textract: function (start, end) {\n\t\tif (end.compareTo(start) < 0) {\n\t\t\treturn this.reverse(this.computeLinear(end, start));\n\t\t}\n\t\treturn this.computeLinear(start, end);\n\t},\n\treverse: function (linear) {\n\t\tif (linear instanceof LineString) return linear.reverse();\n\t\tif (linear instanceof MultiLineString) return linear.reverse();\n\t\tAssert.shouldNeverReachHere(\"non-linear geometry encountered\");\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ExtractLineByLocation;\n\t}\n});\nExtractLineByLocation.extract = function (line, start, end) {\n\tvar ls = new ExtractLineByLocation(line);\n\treturn ls.extract(start, end);\n};\n","import LineString from '../geom/LineString';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport LinearLocation from './LinearLocation';\nimport extend from '../../../../extend';\nimport LocationIndexOfPoint from './LocationIndexOfPoint';\nimport LocationIndexOfLine from './LocationIndexOfLine';\nimport ExtractLineByLocation from './ExtractLineByLocation';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function LocationIndexedLine() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n\tthis.checkGeometryType();\n}\nextend(LocationIndexedLine.prototype, {\n\tclampIndex: function (index) {\n\t\tvar loc = index.copy();\n\t\tloc.clamp(this._linearGeom);\n\t\treturn loc;\n\t},\n\tproject: function (pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tcheckGeometryType: function () {\n\t\tif (!(this._linearGeom instanceof LineString || this._linearGeom instanceof MultiLineString)) throw new IllegalArgumentException(\"Input geometry must be linear\");\n\t},\n\textractPoint: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\treturn index.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], offsetDistance = arguments[1];\n\t\t\tvar indexLow = index.toLowest(this._linearGeom);\n\t\t\treturn indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function (index) {\n\t\treturn index.isValid(this._linearGeom);\n\t},\n\tgetEndIndex: function () {\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t},\n\tgetStartIndex: function () {\n\t\treturn new LinearLocation();\n\t},\n\tindexOfAfter: function (pt, minIndex) {\n\t\treturn LocationIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t},\n\textractLine: function (startIndex, endIndex) {\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startIndex, endIndex);\n\t},\n\tindexOf: function (pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tindicesOf: function (subLine) {\n\t\treturn LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocationIndexedLine;\n\t}\n});\n","import LinearIterator from './LinearIterator';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport Assert from '../util/Assert';\nexport default function LengthIndexOfPoint() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthIndexOfPoint.prototype, {\n\tindexOf: function (inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, -1.0);\n\t},\n\tindexOfFromStart: function (inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar ptMeasure = minIndex;\n\t\tvar segmentStartMeasure = 0.0;\n\t\tvar seg = new LineSegment();\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure);\n\t\t\t\tif (segDistance < minDistance && segMeasureToPt > minIndex) {\n\t\t\t\t\tptMeasure = segMeasureToPt;\n\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t}\n\t\t\t\tsegmentStartMeasure += seg.getLength();\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn ptMeasure;\n\t},\n\tindexOfAfter: function (inputPt, minIndex) {\n\t\tif (minIndex < 0.0) return this.indexOf(inputPt);\n\t\tvar endIndex = this._linearGeom.getLength();\n\t\tif (endIndex < minIndex) return endIndex;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter >= minIndex, \"computed index is before specified minimum index\");\n\t\treturn closestAfter;\n\t},\n\tsegmentNearestMeasure: function (seg, inputPt, segmentStartMeasure) {\n\t\tvar projFactor = seg.projectionFactor(inputPt);\n\t\tif (projFactor <= 0.0) return segmentStartMeasure;\n\t\tif (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength();\n\t\treturn segmentStartMeasure + seg.getLength();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LengthIndexOfPoint;\n\t}\n});\nLengthIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLengthIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n","import LinearIterator from './LinearIterator';\nimport LinearLocation from './LinearLocation';\nimport extend from '../../../../extend';\nexport default function LengthLocationMap() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthLocationMap.prototype, {\n\tgetLength: function (loc) {\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) {\n\t\t\t\t\treturn totalLength + segLen * loc.getSegmentFraction();\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn totalLength;\n\t},\n\tresolveHigher: function (loc) {\n\t\tif (!loc.isEndpoint(this._linearGeom)) return loc;\n\t\tvar compIndex = loc.getComponentIndex();\n\t\tif (compIndex >= this._linearGeom.getNumGeometries() - 1) return loc;\n\t\tdo {\n\t\t\tcompIndex++;\n\t\t} while (compIndex < this._linearGeom.getNumGeometries() - 1 && this._linearGeom.getGeometryN(compIndex).getLength() === 0);\n\t\treturn new LinearLocation(compIndex, 0, 0.0);\n\t},\n\tgetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet length = arguments[0];\n\t\t\treturn this.getLocation(length, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet length = arguments[0], resolveLower = arguments[1];\n\t\t\tvar forwardLength = length;\n\t\t\tif (length < 0.0) {\n\t\t\t\tvar lineLen = this._linearGeom.getLength();\n\t\t\t\tforwardLength = lineLen + length;\n\t\t\t}\n\t\t\tvar loc = this.getLocationForward(forwardLength);\n\t\t\tif (resolveLower) {\n\t\t\t\treturn loc;\n\t\t\t}\n\t\t\treturn this.resolveHigher(loc);\n\t\t}\n\t},\n\tgetLocationForward: function (length) {\n\t\tif (length <= 0.0) return new LinearLocation();\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (it.isEndOfLine()) {\n\t\t\t\tif (totalLength === length) {\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, 0.0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (totalLength + segLen > length) {\n\t\t\t\t\tvar frac = (length - totalLength) / segLen;\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, frac);\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LengthLocationMap;\n\t}\n});\nLengthLocationMap.getLength = function (linearGeom, loc) {\n\tvar locater = new LengthLocationMap(linearGeom);\n\treturn locater.getLength(loc);\n};\nLengthLocationMap.getLocation = function () {\n\tif (arguments.length === 2) {\n\t\tlet linearGeom = arguments[0], length = arguments[1];\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLocation(length);\n\t} else if (arguments.length === 3) {\n\t\tlet linearGeom = arguments[0], length = arguments[1], resolveLower = arguments[2];\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLocation(length, resolveLower);\n\t}\n};\n","import LocationIndexedLine from './LocationIndexedLine';\nimport extend from '../../../../extend';\nimport LengthIndexOfPoint from './LengthIndexOfPoint';\nimport LocationIndexOfLine from './LocationIndexOfLine';\nimport LengthLocationMap from './LengthLocationMap';\nimport ExtractLineByLocation from './ExtractLineByLocation';\nexport default function LengthIndexedLine() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthIndexedLine.prototype, {\n\tclampIndex: function (index) {\n\t\tvar posIndex = this.positiveIndex(index);\n\t\tvar startIndex = this.getStartIndex();\n\t\tif (posIndex < startIndex) return startIndex;\n\t\tvar endIndex = this.getEndIndex();\n\t\tif (posIndex > endIndex) return endIndex;\n\t\treturn posIndex;\n\t},\n\tlocationOf: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], resolveLower = arguments[1];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index, resolveLower);\n\t\t}\n\t},\n\tproject: function (pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tpositiveIndex: function (index) {\n\t\tif (index >= 0.0) return index;\n\t\treturn this._linearGeom.getLength() + index;\n\t},\n\textractPoint: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\treturn loc.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], offsetDistance = arguments[1];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\tvar locLow = loc.toLowest(this._linearGeom);\n\t\t\treturn locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function (index) {\n\t\treturn index >= this.getStartIndex() && index <= this.getEndIndex();\n\t},\n\tgetEndIndex: function () {\n\t\treturn this._linearGeom.getLength();\n\t},\n\tgetStartIndex: function () {\n\t\treturn 0.0;\n\t},\n\tindexOfAfter: function (pt, minIndex) {\n\t\treturn LengthIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t},\n\textractLine: function (startIndex, endIndex) {\n\t\tvar lil = new LocationIndexedLine(this._linearGeom);\n\t\tvar startIndex2 = this.clampIndex(startIndex);\n\t\tvar endIndex2 = this.clampIndex(endIndex);\n\t\tvar resolveStartLower = startIndex2 === endIndex2;\n\t\tvar startLoc = this.locationOf(startIndex2, resolveStartLower);\n\t\tvar endLoc = this.locationOf(endIndex2);\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startLoc, endLoc);\n\t},\n\tindexOf: function (pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tindicesOf: function (subLine) {\n\t\tvar locIndex = LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t\tvar index = [LengthLocationMap.getLength(this._linearGeom, locIndex[0]), LengthLocationMap.getLength(this._linearGeom, locIndex[1])];\n\t\treturn index;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LengthIndexedLine;\n\t}\n});\n","import SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport OverlayOp from '../overlay/OverlayOp';\nexport default function UnionOp() {}\nextend(UnionOp.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn UnionOp;\n\t}\n});\nUnionOp.union = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\n};\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill(value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object');\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike;\n    },\n    writable: true\n  });\n}\n","Number.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n}\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n}\n\nNumber.parseFloat = Number.parseFloat || parseFloat\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n}\n","Math.trunc = Math.trunc || function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\n","export default function (target, source) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) target[key] = source[key]\n  }\n}\n","export default function (c, p) {\n  c.prototype = Object.create(p.prototype)\n  c.prototype.constructor = c\n}\n","export default function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n}\n","export default function ByteArrayOutputStream () {}\n","export default function PrintStream () {}\n","export default function LineNumberReader () {}\n","export default function StringReader () {}\n","export default function DecimalFormat () {}\n","import Arrays from './Arrays'\nimport ArrayList from './ArrayList'\n\nconst Collections = {\n  reverseOrder: function () {\n    return {\n      compare (a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function (l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function (l, c) {\n    const a = l.toArray()\n    if (c) {\n      Arrays.sort(a, c)\n    } else {\n      Arrays.sort(a)\n    }\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function (o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","import WKTWriter from './io/WKTWriter';\nimport GeometryCollectionMapper from './geom/util/GeometryCollectionMapper';\nimport IsValidOp from './operation/valid/IsValidOp';\nimport InteriorPointArea from './algorithm/InteriorPointArea';\nimport UnaryUnionOp from './operation/union/UnaryUnionOp';\nimport UnionOp from './operation/union/UnionOp';\nimport SnapIfNeededOverlayOp from './operation/overlay/snap/SnapIfNeededOverlayOp';\nimport InteriorPointLine from './algorithm/InteriorPointLine';\nimport IsSimpleOp from './operation/IsSimpleOp';\nimport BufferOp from './operation/buffer/BufferOp';\nimport ConvexHull from './algorithm/ConvexHull';\nimport Centroid from './algorithm/Centroid';\nimport Comparable from '../../../java/lang/Comparable';\nimport RelateOp from './operation/relate/RelateOp';\nimport InteriorPointPoint from './algorithm/InteriorPointPoint';\nimport Cloneable from '../../../java/lang/Cloneable';\nimport Serializable from '../../../java/io/Serializable';\nimport DistanceOp from './operation/distance/DistanceOp';\nimport Envelope from './geom/Envelope';\nimport RectangleContains from './operation/predicate/RectangleContains';\nimport Assert from './util/Assert';\nimport RectangleIntersects from './operation/predicate/RectangleIntersects';\nimport OverlayOp from './operation/overlay/OverlayOp';\n\nimport Geometry from './geom/Geometry';\nimport GeometryCollection from './geom/GeometryCollection';\n\nimport extend from '../../../extend';\n\nextend(Geometry.prototype, {\n\tequalsTopo: function (g) {\n\t\tif (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false;\n\t\treturn RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension());\n\t},\n\tunion: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn UnaryUnionOp.union(this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\treturn UnionOp.union(this, other);\n\t\t}\n\t},\n\tisValid: function () {\n\t\treturn IsValidOp.isValid(this);\n\t},\n\tintersection: function (other) {\n\t\tif (this.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, this, other, this.factory);\n\t\tif (this.isGeometryCollection()) {\n\t\t\tvar g2 = other;\n\t\t\treturn GeometryCollectionMapper.map(this, {\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [MapOp];\n\t\t\t\t},\n\t\t\t\tmap: function (g) {\n\t\t\t\t\treturn g.intersection(g2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.INTERSECTION);\n\t},\n\tcovers: function (g) {\n\t\treturn RelateOp.covers(this, g);\n\t},\n\tcoveredBy: function (g) {\n\t\treturn RelateOp.coveredBy(this, g);\n\t},\n\ttouches: function (g) {\n\t\treturn RelateOp.touches(this, g);\n\t},\n\tintersects: function (g) {\n\t\treturn RelateOp.intersects(this, g);\n\t},\n\twithin: function (g) {\n\t\treturn RelateOp.within(this, g);\n\t},\n\toverlaps: function (g) {\n\t\treturn RelateOp.overlaps(this, g);\n\t},\n\tdisjoint: function (g) {\n\t\treturn RelateOp.disjoint(this, g);\n\t},\n\tcrosses: function (g) {\n\t\treturn RelateOp.crosses(this, g);\n\t},\n\tbuffer: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\treturn BufferOp.bufferOp(this, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1];\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1], endCapStyle = arguments[2];\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle);\n\t\t}\n\t},\n\tconvexHull: function () {\n\t\treturn new ConvexHull(this).getConvexHull();\n\t},\n\trelate: function (...args) {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geometry = arguments[0];\n\t\t\treturn RelateOp.relate(this, geometry);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geometry = arguments[0], intersectionPattern = arguments[1];\n\t\t\treturn RelateOp.relate(this, geometry).matches(intersectionPattern);\n\t\t}\n\t},\n\tgetCentroid: function () {\n\t\tif (this.isEmpty()) return this._factory.createPoint();\n\t\tvar centPt = Centroid.getCentroid(this);\n\t\treturn this.createPointFromInternalCoord(centPt, this);\n\t},\n\tgetInteriorPoint: function () {\n\t\tif (this.isEmpty()) return this._factory.createPoint();\n\t\tvar interiorPt = null;\n\t\tvar dim = this.getDimension();\n\t\tif (dim === 0) {\n\t\t\tvar intPt = new InteriorPointPoint(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else if (dim === 1) {\n\t\t\tvar intPt = new InteriorPointLine(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else {\n\t\t\tvar intPt = new InteriorPointArea(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t}\n\t\treturn this.createPointFromInternalCoord(interiorPt, this);\n\t},\n\tsymDifference: function (other) {\n\t\tif (this.isEmpty() || other.isEmpty()) {\n\t\t\tif (this.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, this, other, this.factory);\n\t\t\tif (this.isEmpty()) return other.copy();\n\t\t\tif (other.isEmpty()) return this.copy();\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.SYMDIFFERENCE);\n\t},\n\tcreatePointFromInternalCoord: function (coord, exemplar) {\n\t\texemplar.getPrecisionModel().makePrecise(coord);\n\t\treturn exemplar.getFactory().createPoint(coord);\n\t},\n\ttoText: function () {\n\t\tvar writer = new WKTWriter();\n\t\treturn writer.write(this);\n\t},\n\ttoString: function() {\n\t\tthis.toText();\n\t},\n\tcontains: function (g) {\n\t\treturn RelateOp.contains(this, g);\n\t},\n\tdifference: function (other) {\n\t\tif (this.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, this, other, this.factory);\n\t\tif (other.isEmpty()) return this.copy();\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.DIFFERENCE);\n\t},\n\tisSimple: function () {\n\t\tvar op = new IsSimpleOp(this);\n\t\treturn op.isSimple();\n\t},\n\tisWithinDistance: function (geom, distance) {\n\t\tvar envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());\n\t\tif (envDist > distance) return false;\n\t\treturn DistanceOp.isWithinDistance(this, geom, distance);\n\t},\n\tdistance: function (g) {\n\t\treturn DistanceOp.distance(this, g);\n\t},\n\tisEquivalentClass: function (other) {\n\t\treturn this.getClass() === other.getClass();\n\t}\n})\n","import './Array'\nimport './Number'\nimport './Math'\n\nimport * as geom from './org/locationtech/jts/geom'\nimport * as algorithm from './org/locationtech/jts/algorithm'\nimport * as densify from './org/locationtech/jts/densify'\nimport * as dissolve from './org/locationtech/jts/dissolve'\nimport * as geomgraph from './org/locationtech/jts/geomgraph'\nimport * as index from './org/locationtech/jts/index'\nimport * as io from './org/locationtech/jts/io'\nimport * as noding from './org/locationtech/jts/noding'\nimport * as operation from './org/locationtech/jts/operation'\nimport * as precision from './org/locationtech/jts/precision'\nimport * as simplify from './org/locationtech/jts/simplify'\nimport * as triangulate from './org/locationtech/jts/triangulate'\nimport * as linearref from './org/locationtech/jts/linearref'\n\nimport './org/locationtech/jts/monkey'\n\nconst version = 'npm_package_version (git_hash)'\nexport {\n  version,\n  algorithm,\n  densify,\n  dissolve,\n  geom,\n  geomgraph,\n  index,\n  io,\n  noding,\n  operation,\n  precision,\n  simplify,\n  triangulate,\n  linearref\n}\n"]}