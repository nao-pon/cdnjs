{"version":3,"sources":["../src/extend.js","../src/org/locationtech/jts/util/NumberUtil.js","../src/java/lang/IllegalArgumentException.js","../src/java/lang/Long.js","../src/java/lang/Double.js","../src/java/lang/Comparable.js","../src/java/lang/Cloneable.js","../src/java/util/Comparator.js","../src/java/io/Serializable.js","../src/java/lang/RuntimeException.js","../src/inherits.js","../src/org/locationtech/jts/util/AssertionFailedException.js","../src/org/locationtech/jts/util/Assert.js","../src/org/locationtech/jts/geom/Coordinate.js","../src/hasInterface.js","../src/java/util/Iterator.js","../src/java/util/Collection.js","../src/java/util/IndexOutOfBoundsException.js","../src/java/util/List.js","../src/java/util/NoSuchElementException.js","../src/java/util/OperationNotSupported.js","../src/java/util/ArrayList.js","../src/Array.js","../src/Number.js","../src/Math.js","../src/org/locationtech/jts/geom/CoordinateList.js","../src/org/locationtech/jts/geom/Envelope.js","../src/java/lang/Exception.js","../src/org/locationtech/jts/algorithm/NotRepresentableException.js","../src/java/lang/StringBuffer.js","../src/java/lang/Integer.js","../src/java/lang/Character.js","../src/org/locationtech/jts/math/DD.js","../src/org/locationtech/jts/algorithm/CGAlgorithmsDD.js","../src/org/locationtech/jts/algorithm/Orientation.js","../src/java/lang/System.js","../src/org/locationtech/jts/algorithm/HCoordinate.js","../src/org/locationtech/jts/math/MathUtil.js","../src/org/locationtech/jts/algorithm/Distance.js","../src/org/locationtech/jts/geom/CoordinateSequence.js","../src/org/locationtech/jts/geom/CoordinateSequenceFactory.js","../src/org/locationtech/jts/geom/GeometryComponentFilter.js","../src/org/locationtech/jts/geom/Geometry.js","../src/org/locationtech/jts/geom/CoordinateFilter.js","../src/org/locationtech/jts/algorithm/BoundaryNodeRule.js","../src/org/locationtech/jts/geom/CoordinateArrays.js","../src/java/util/Map.js","../src/java/util/SortedMap.js","../src/java/util/Set.js","../src/java/util/HashSet.js","../src/java/util/TreeMap.js","../src/org/locationtech/jts/geom/Lineal.js","../src/java/util/SortedSet.js","../src/java/util/TreeSet.js","../src/Map.js","../src/java/util/Arrays.js","../src/org/locationtech/jts/geom/Dimension.js","../src/org/locationtech/jts/geom/GeometryFilter.js","../src/org/locationtech/jts/geom/CoordinateSequenceFilter.js","../src/org/locationtech/jts/geom/GeometryCollection.js","../src/org/locationtech/jts/geom/MultiLineString.js","../src/org/locationtech/jts/operation/BoundaryOp.js","../src/org/locationtech/jts/algorithm/Length.js","../src/java/io/IOException.js","../src/org/locationtech/jts/util/StringUtil.js","../src/java/lang/StringBuilder.js","../src/org/locationtech/jts/geom/CoordinateSequences.js","../src/org/locationtech/jts/geom/LineString.js","../src/org/locationtech/jts/geom/Puntal.js","../src/org/locationtech/jts/geom/Point.js","../src/org/locationtech/jts/algorithm/Area.js","../src/org/locationtech/jts/geom/Polygonal.js","../src/org/locationtech/jts/geom/Polygon.js","../src/org/locationtech/jts/geom/MultiPoint.js","../src/org/locationtech/jts/geom/LinearRing.js","../src/org/locationtech/jts/geom/MultiPolygon.js","../src/org/locationtech/jts/geom/util/GeometryEditor.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequence.js","../src/org/locationtech/jts/geom/impl/CoordinateArraySequenceFactory.js","../src/java/io/ByteArrayOutputStream.js","../src/java/io/PrintStream.js","../src/java/io/LineNumberReader.js","../src/java/io/StringReader.js","../src/java/text/DecimalFormat.js","../src/java/util/HashMap.js","../src/org/locationtech/jts/geom/PrecisionModel.js","../src/org/locationtech/jts/geom/GeometryFactory.js","../src/org/locationtech/jts/io/WKTParser.js","../src/org/locationtech/jts/io/WKTWriter.js","../src/org/locationtech/jts/algorithm/LineIntersector.js","../src/org/locationtech/jts/algorithm/RobustLineIntersector.js","../src/org/locationtech/jts/geom/LineSegment.js","../src/org/locationtech/jts/geom/Location.js","../src/org/locationtech/jts/geom/IntersectionMatrix.js","../src/org/locationtech/jts/algorithm/Angle.js","../src/org/locationtech/jts/geom/Triangle.js","../src/org/locationtech/jts/algorithm/distance/PointPairDistance.js","../src/org/locationtech/jts/algorithm/distance/DistanceToPoint.js","../src/org/locationtech/jts/algorithm/distance/DiscreteHausdorffDistance.js","../src/org/locationtech/jts/index/ItemVisitor.js","../src/org/locationtech/jts/algorithm/locate/PointOnGeometryLocator.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeNode.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeLeafNode.js","../src/java/util/Collections.js","../src/org/locationtech/jts/index/intervalrtree/IntervalRTreeBranchNode.js","../src/org/locationtech/jts/index/intervalrtree/SortedPackedIntervalRTree.js","../src/org/locationtech/jts/geom/util/LinearComponentExtracter.js","../src/org/locationtech/jts/index/ArrayListVisitor.js","../src/org/locationtech/jts/algorithm/RayCrossingCounter.js","../src/org/locationtech/jts/algorithm/locate/IndexedPointInAreaLocator.js","../src/org/locationtech/jts/algorithm/PointLocation.js","../src/org/locationtech/jts/geom/GeometryCollectionIterator.js","../src/org/locationtech/jts/algorithm/locate/SimplePointInAreaLocator.js","../src/org/locationtech/jts/algorithm/match/SimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/AreaSimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/HausdorffSimilarityMeasure.js","../src/org/locationtech/jts/algorithm/match/SimilarityMeasureCombiner.js","../src/org/locationtech/jts/algorithm/Centroid.js","../src/org/locationtech/jts/algorithm/CGAlgorithms.js","../src/java/util/EmptyStackException.js","../src/java/util/Stack.js","../src/org/locationtech/jts/util/UniqueCoordinateArrayFilter.js","../src/org/locationtech/jts/algorithm/ConvexHull.js","../src/org/locationtech/jts/algorithm/InteriorPointArea.js","../src/org/locationtech/jts/algorithm/InteriorPointLine.js","../src/org/locationtech/jts/algorithm/InteriorPointPoint.js","../src/org/locationtech/jts/index/chain/MonotoneChainSelectAction.js","../src/org/locationtech/jts/index/bintree/NodeBase.js","../src/org/locationtech/jts/index/bintree/Interval.js","../src/org/locationtech/jts/index/quadtree/DoubleBits.js","../src/org/locationtech/jts/index/bintree/Key.js","../src/org/locationtech/jts/index/bintree/Node.js","../src/org/locationtech/jts/index/quadtree/IntervalSize.js","../src/org/locationtech/jts/index/bintree/Root.js","../src/org/locationtech/jts/index/bintree/Bintree.js","../src/org/locationtech/jts/index/chain/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/Quadrant.js","../src/org/locationtech/jts/index/chain/MonotoneChainBuilder.js","../src/org/locationtech/jts/algorithm/RobustDeterminant.js","../src/org/locationtech/jts/algorithm/PointInRing.js","../src/org/locationtech/jts/algorithm/MCPointInRing.js","../src/org/locationtech/jts/algorithm/MinimumBoundingCircle.js","../src/org/locationtech/jts/algorithm/MinimumDiameter.js","../src/org/locationtech/jts/geom/util/GeometryTransformer.js","../src/org/locationtech/jts/densify/Densifier.js","../src/org/locationtech/jts/edgegraph/HalfEdge.js","../src/org/locationtech/jts/edgegraph/MarkHalfEdge.js","../src/org/locationtech/jts/edgegraph/EdgeGraph.js","../src/org/locationtech/jts/dissolve/DissolveHalfEdge.js","../src/org/locationtech/jts/dissolve/DissolveEdgeGraph.js","../src/org/locationtech/jts/dissolve/LineDissolver.js","../src/org/locationtech/jts/algorithm/PointLocator.js","../src/org/locationtech/jts/geomgraph/Position.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChain.js","../src/org/locationtech/jts/geomgraph/index/SweepLineEvent.js","../src/org/locationtech/jts/geomgraph/index/EdgeSetIntersector.js","../src/org/locationtech/jts/geomgraph/index/SegmentIntersector.js","../src/org/locationtech/jts/geomgraph/index/SimpleMCSweepLineIntersector.js","../src/org/locationtech/jts/geomgraph/TopologyLocation.js","../src/org/locationtech/jts/geomgraph/Label.js","../src/org/locationtech/jts/geomgraph/EdgeIntersection.js","../src/org/locationtech/jts/geomgraph/EdgeIntersectionList.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainIndexer.js","../src/org/locationtech/jts/geomgraph/index/MonotoneChainEdge.js","../src/org/locationtech/jts/geomgraph/Depth.js","../src/org/locationtech/jts/geomgraph/GraphComponent.js","../src/org/locationtech/jts/geomgraph/Edge.js","../src/org/locationtech/jts/geomgraph/Node.js","../src/org/locationtech/jts/geomgraph/NodeMap.js","../src/org/locationtech/jts/geomgraph/EdgeEnd.js","../src/org/locationtech/jts/geom/TopologyException.js","../src/org/locationtech/jts/geomgraph/DirectedEdge.js","../src/org/locationtech/jts/geomgraph/NodeFactory.js","../src/org/locationtech/jts/geomgraph/PlanarGraph.js","../src/org/locationtech/jts/geomgraph/GeometryGraph.js","../src/org/locationtech/jts/index/kdtree/KdNodeVisitor.js","../src/org/locationtech/jts/index/kdtree/KdNode.js","../src/org/locationtech/jts/index/kdtree/KdTree.js","../src/org/locationtech/jts/index/quadtree/NodeBase.js","../src/org/locationtech/jts/index/quadtree/Key.js","../src/org/locationtech/jts/index/quadtree/Node.js","../src/org/locationtech/jts/index/quadtree/Root.js","../src/org/locationtech/jts/index/SpatialIndex.js","../src/org/locationtech/jts/index/quadtree/Quadtree.js","../src/org/locationtech/jts/index/strtree/Boundable.js","../src/org/locationtech/jts/index/strtree/ItemBoundable.js","../src/org/locationtech/jts/util/PriorityQueue.js","../src/org/locationtech/jts/index/strtree/BoundablePairDistanceComparator.js","../src/org/locationtech/jts/index/strtree/AbstractNode.js","../src/org/locationtech/jts/index/strtree/BoundablePair.js","../src/org/locationtech/jts/index/strtree/AbstractSTRtree.js","../src/org/locationtech/jts/index/strtree/ItemDistance.js","../src/org/locationtech/jts/index/strtree/STRtree.js","../src/org/locationtech/jts/io/GeoJSONParser.js","../src/org/locationtech/jts/io/GeoJSONReader.js","../src/org/locationtech/jts/io/GeoJSONWriter.js","../src/org/locationtech/jts/io/WKTReader.js","../src/org/locationtech/jts/io/OL3Parser.js","../src/org/locationtech/jts/noding/SegmentPointComparator.js","../src/org/locationtech/jts/noding/SegmentNode.js","../src/org/locationtech/jts/noding/SegmentNodeList.js","../src/org/locationtech/jts/noding/Octant.js","../src/org/locationtech/jts/noding/SegmentString.js","../src/org/locationtech/jts/noding/NodableSegmentString.js","../src/org/locationtech/jts/noding/NodedSegmentString.js","../src/org/locationtech/jts/index/chain/MonotoneChainOverlapAction.js","../src/org/locationtech/jts/noding/Noder.js","../src/org/locationtech/jts/noding/SinglePassNoder.js","../src/org/locationtech/jts/noding/MCIndexNoder.js","../src/org/locationtech/jts/noding/ScaledNoder.js","../src/org/locationtech/jts/operation/IsSimpleOp.js","../src/org/locationtech/jts/operation/buffer/BufferParameters.js","../src/org/locationtech/jts/operation/buffer/RightmostEdgeFinder.js","../src/java/util/LinkedList.js","../src/org/locationtech/jts/operation/buffer/BufferSubgraph.js","../src/org/locationtech/jts/geomgraph/EdgeRing.js","../src/org/locationtech/jts/operation/overlay/MinimalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/MaximalEdgeRing.js","../src/org/locationtech/jts/operation/overlay/PolygonBuilder.js","../src/org/locationtech/jts/operation/buffer/BufferInputLineSimplifier.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentString.js","../src/org/locationtech/jts/operation/buffer/OffsetSegmentGenerator.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveBuilder.js","../src/org/locationtech/jts/operation/buffer/SubgraphDepthLocater.js","../src/org/locationtech/jts/operation/buffer/OffsetCurveSetBuilder.js","../src/org/locationtech/jts/geomgraph/EdgeEndStar.js","../src/org/locationtech/jts/geomgraph/DirectedEdgeStar.js","../src/org/locationtech/jts/operation/overlay/OverlayNodeFactory.js","../src/org/locationtech/jts/noding/OrientedCoordinateArray.js","../src/org/locationtech/jts/geomgraph/EdgeList.js","../src/org/locationtech/jts/noding/SegmentIntersector.js","../src/org/locationtech/jts/noding/IntersectionAdder.js","../src/org/locationtech/jts/operation/buffer/BufferBuilder.js","../src/org/locationtech/jts/noding/NodingValidator.js","../src/org/locationtech/jts/noding/snapround/HotPixel.js","../src/org/locationtech/jts/noding/snapround/MCIndexPointSnapper.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinderAdder.js","../src/org/locationtech/jts/noding/snapround/MCIndexSnapRounder.js","../src/org/locationtech/jts/operation/buffer/BufferOp.js","../src/org/locationtech/jts/geom/util/PolygonExtracter.js","../src/org/locationtech/jts/operation/distance/GeometryLocation.js","../src/org/locationtech/jts/geom/util/PointExtracter.js","../src/org/locationtech/jts/operation/distance/ConnectedElementLocationFilter.js","../src/org/locationtech/jts/operation/distance/DistanceOp.js","../src/org/locationtech/jts/operation/linemerge/EdgeString.js","../src/org/locationtech/jts/planargraph/GraphComponent.js","../src/org/locationtech/jts/planargraph/DirectedEdge.js","../src/org/locationtech/jts/operation/linemerge/LineMergeDirectedEdge.js","../src/org/locationtech/jts/planargraph/Edge.js","../src/org/locationtech/jts/planargraph/DirectedEdgeStar.js","../src/org/locationtech/jts/planargraph/Node.js","../src/org/locationtech/jts/operation/linemerge/LineMergeEdge.js","../src/org/locationtech/jts/planargraph/NodeMap.js","../src/org/locationtech/jts/planargraph/PlanarGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMergeGraph.js","../src/org/locationtech/jts/operation/linemerge/LineMerger.js","../src/org/locationtech/jts/noding/BasicSegmentString.js","../src/org/locationtech/jts/noding/InteriorIntersectionFinder.js","../src/org/locationtech/jts/noding/FastNodingValidator.js","../src/org/locationtech/jts/geomgraph/EdgeNodingValidator.js","../src/org/locationtech/jts/geom/util/GeometryCollectionMapper.js","../src/org/locationtech/jts/operation/overlay/LineBuilder.js","../src/org/locationtech/jts/operation/overlay/PointBuilder.js","../src/org/locationtech/jts/operation/overlay/snap/LineStringSnapper.js","../src/org/locationtech/jts/operation/overlay/snap/GeometrySnapper.js","../src/org/locationtech/jts/precision/CommonBits.js","../src/org/locationtech/jts/precision/CommonBitsRemover.js","../src/org/locationtech/jts/operation/overlay/snap/SnapOverlayOp.js","../src/org/locationtech/jts/operation/overlay/snap/SnapIfNeededOverlayOp.js","../src/org/locationtech/jts/operation/GeometryGraphOperation.js","../src/org/locationtech/jts/operation/overlay/OverlayOp.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeDirectedEdge.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeEdge.js","../src/org/locationtech/jts/operation/polygonize/EdgeRing.js","../src/org/locationtech/jts/operation/polygonize/PolygonizeGraph.js","../src/org/locationtech/jts/operation/polygonize/Polygonizer.js","../src/org/locationtech/jts/operation/relate/EdgeEndBuilder.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundle.js","../src/org/locationtech/jts/operation/relate/EdgeEndBundleStar.js","../src/org/locationtech/jts/operation/relate/RelateNode.js","../src/org/locationtech/jts/operation/relate/RelateNodeFactory.js","../src/org/locationtech/jts/operation/relate/RelateComputer.js","../src/org/locationtech/jts/operation/predicate/RectangleContains.js","../src/org/locationtech/jts/algorithm/RectangleLineIntersector.js","../src/org/locationtech/jts/geom/util/ShortCircuitedGeometryVisitor.js","../src/org/locationtech/jts/operation/predicate/RectangleIntersects.js","../src/org/locationtech/jts/operation/relate/RelateOp.js","../src/org/locationtech/jts/geom/util/GeometryCombiner.js","../src/org/locationtech/jts/operation/union/PointGeometryUnion.js","../src/org/locationtech/jts/geom/util/GeometryExtracter.js","../src/org/locationtech/jts/operation/union/CascadedPolygonUnion.js","../src/org/locationtech/jts/operation/union/UnaryUnionOp.js","../src/org/locationtech/jts/operation/valid/ConnectedInteriorTester.js","../src/org/locationtech/jts/operation/relate/RelateNodeGraph.js","../src/org/locationtech/jts/operation/valid/ConsistentAreaTester.js","../src/org/locationtech/jts/operation/valid/IndexedNestedRingTester.js","../src/org/locationtech/jts/operation/valid/TopologyValidationError.js","../src/org/locationtech/jts/operation/valid/IsValidOp.js","../src/org/locationtech/jts/precision/PrecisionReducerCoordinateOperation.js","../src/org/locationtech/jts/precision/GeometryPrecisionReducer.js","../src/org/locationtech/jts/simplify/DouglasPeuckerLineSimplifier.js","../src/org/locationtech/jts/simplify/DouglasPeuckerSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLineSegment.js","../src/org/locationtech/jts/simplify/TaggedLineString.js","../src/org/locationtech/jts/simplify/LineSegmentIndex.js","../src/org/locationtech/jts/simplify/TaggedLineStringSimplifier.js","../src/org/locationtech/jts/simplify/TaggedLinesSimplifier.js","../src/org/locationtech/jts/simplify/TopologyPreservingSimplifier.js","../src/org/locationtech/jts/triangulate/SplitSegment.js","../src/org/locationtech/jts/triangulate/ConstraintSplitPointFinder.js","../src/org/locationtech/jts/triangulate/NonEncroachingSplitPointFinder.js","../src/org/locationtech/jts/triangulate/quadedge/TrianglePredicate.js","../src/org/locationtech/jts/triangulate/quadedge/Vertex.js","../src/org/locationtech/jts/triangulate/ConstraintVertex.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdge.js","../src/org/locationtech/jts/triangulate/IncrementalDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LastFoundQuadEdgeLocator.js","../src/org/locationtech/jts/triangulate/quadedge/LocateFailureException.js","../src/org/locationtech/jts/triangulate/quadedge/TriangleVisitor.js","../src/org/locationtech/jts/triangulate/quadedge/QuadEdgeSubdivision.js","../src/org/locationtech/jts/triangulate/Segment.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulator.js","../src/org/locationtech/jts/triangulate/DelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/ConformingDelaunayTriangulationBuilder.js","../src/org/locationtech/jts/triangulate/VoronoiDiagramBuilder.js","../src/org/locationtech/jts/linearref/LinearLocation.js","../src/org/locationtech/jts/linearref/LinearIterator.js","../src/org/locationtech/jts/linearref/LocationIndexOfPoint.js","../src/org/locationtech/jts/linearref/LocationIndexOfLine.js","../src/org/locationtech/jts/linearref/LinearGeometryBuilder.js","../src/org/locationtech/jts/linearref/ExtractLineByLocation.js","../src/org/locationtech/jts/linearref/LocationIndexedLine.js","../src/org/locationtech/jts/linearref/LengthIndexOfPoint.js","../src/org/locationtech/jts/linearref/LengthLocationMap.js","../src/org/locationtech/jts/linearref/LengthIndexedLine.js","../src/org/locationtech/jts/operation/union/UnionOp.js","../src/org/locationtech/jts/monkey.js","../src/jsts.js"],"names":["extend","target","source","key","hasOwnProperty","NumberUtil","IllegalArgumentException","Long","high","low","Double","log2","floor","pow","MAX_REL_BITS_INTEGER","EXP_BIT_MASK","f64buf","i32buf","Comparable","Clonable","Comparator","Serializable","RuntimeException","message","name","stack","Error","call","this","inherits","c","p","prototype","Object","create","constructor","AssertionFailedException","arguments","length","Assert","Coordinate","x","y","z","NULL_ORDINATE","DimensionalComparator","_dimensionsToTest","dimensionsToTest","hasInterface","o","i","interfaces_","indexOf","Iterator","Collection","IndexOutOfBoundsException","List","NoSuchElementException","OperationNotSupported","ArrayList","array_","addAll","Array","defineProperty","value","undefined","TypeError","arrayLike","Math","max","min","relativeStart","parseInt","Number","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","equalsWithTolerance","x1","x2","tolerance","abs","toBinaryString","result","mask","n","isInfinite","MAX_VALUE","Float64Array","Int32Array","buffer","doubleToLongBits","longBitsToDouble","bits","f","skip","sign","exp","NEGATIVE_INFINITY","Infinity","fract","BIAS","NaN","shouldNeverReachHere","isTrue","assertion","equals","expectedValue","actualValue","ordinateIndex","X","Y","Z","other","equals2D","e","CloneNotSupportedException","dx","dy","dz","sqrt","hashCode","Cloneable","o1","o2","c1","c2","compX","compare","compY","a","b","serialVersionUID","hasNext","next","remove","add","isEmpty","iterator","size","toArray","get","set","ensureCapacity","push","splice","clear","index","element","oldElement","Iterator_","array","len","found","arrayList","arrayList_","position_","CoordinateList","apply","coord","allowRepeated","Envelope","_minx","_maxx","_miny","_maxy","init","env","p1","p2","y1","y2","Exception","NotRepresentableException","StringBuffer","str","Integer","Character","DD","_hi","_lo","dd","parse","hi","lo","CGAlgorithmsDD","Orientation","System","HCoordinate","w","_x","_y","_w","q1","q2","px","py","pw","qx","qy","qw","MathUtil","Distance","CoordinateSequence","CoordinateSequenceFactory","GeometryComponentFilter","Geometry","_envelope","_factory","_SRID","_userData","factory","getSRID","CoordinateFilter","BoundaryNodeRule","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","CoordinateArrays","ForwardComparator","BidirectionalComparator","Map","SortedMap","Set","HashSet","coll","isChanged","clone","coordArrayType","obj","start","end","inc","fill","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","covers","expandToInclude","h","transX","transY","distance","expandBy","deltaX","deltaY","setToNull","q","minq","maxq","minp","maxp","append","setCharAt","substr","toString","intValue","compareTo","isWhitespace","toUpperCase","insertDecimalPoint","magnitude","mag","scale","TEN","divide","gt","lt","ONE","multiply","decimalPointPos","buf","numDigits","MAX_PRINT_DIGITS","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","negate","isZero","le","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","u","SPLIT","createNaN","copy","r","s","selfMultiply","sqr","reciprocal","fhi","flo","ge","isNegative","ax","axdd","d2","H","S","T","t","zhi","zlo","tx","hx","ex","toStandardNotation","toSciNotation","specialStr","getSpecialNumberString","sigDigits","extractSignificantDigits","num","charAt","stringOfChar","numZeroes","SCI_NOT_ZERO","digits","expStr","SCI_NOT_EXPONENT_CHAR","IllegalStateException","trailingDigits","substring","digitsWithDecimal","isPositive","strlen","signCh","numBeforeDec","ch","isDigit","d","NumberFormatException","val2","numDecPlaces","xAbs","xLog10","log","xMag","PI","TWO_PI","PI_2","E","EPS","orientationIndex","orientationIndexFilter","dx1","dy1","dx2","dy2","selfSubtract","signum","signOfDet2x2","intersection","denom1","denom2","denom","numx1","numx2","fracP","doubleValue","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","DP_SAFE_EPSILON","isCCW","ring","nPts","hiPt","hiIndex","iPrev","iNext","prev","disc","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","COLLINEAR","STRAIGHT","arraycopy","src","srcPos","dest","destPos","getProperty","getX","getY","xInt","yInt","log10","ln","LOG_10","v1","v2","v3","v4","clamp","wrap","average","segmentToSegment","A","B","D","pointToSegment","noIntersection","r_num","len2","pointToLinePerpendicular","pointToSegmentString","line","minDistance","dist","M","geom","getTypeCode","TYPECODE_GEOMETRYCOLLECTION","g","equalsTopo","equalsExact","geometryChangedFilter","norm","compareToSameClass","comp","getFactory","toGeometry","getEnvelopeInternal","normalize","getPrecisionModel","computeEnvelopeInternal","SRID","userData","j","aElement","bElement","comparison","TYPECODE_MULTIPOINT","TYPECODE_MULTILINESTRING","TYPECODE_MULTIPOLYGON","hasNonEmptyElements","geometries","hasNullElements","TYPECODE_POINT","TYPECODE_LINESTRING","TYPECODE_LINEARRING","TYPECODE_POLYGON","TYPENAME_POINT","TYPENAME_MULTIPOINT","TYPENAME_LINESTRING","TYPENAME_LINEARRING","TYPENAME_MULTILINESTRING","TYPENAME_POLYGON","TYPENAME_MULTIPOLYGON","TYPENAME_GEOMETRYCOLLECTION","geometryChangedAction","boundaryCount","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isRing","pts","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coordinateComparator","coordList","toCoordinateArray","hasRepeatedPoints","removeRepeatedPoints","reverse","last","mid","tmp","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","coordinate","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","dir1","dir2","i1","i2","comparePt","put","values","entrySet","contains","javascript","util","hashSet","hashSet_","BLACK","colorOf","color","parentOf","parent","setColor","leftOf","left","rightOf","right","TreeMap","root_","size_","Lineal","SortedSet","TreeSet","cmp","oldValue","fixAfterInsertion","rotateLeft","rotateRight","getFirstEntry","successor","l","treeSet","treeSet_","Arrays","Dimension","GeometryFilter","CoordinateSequenceFilter","GeometryCollection","_geometries","MultiLineString","lineStrings","BoundaryOp","_geom","_geomFact","_bnRule","_endpointMap","bnRule","Counter","count","Length","IOException","StringUtil","StringBuilder","CoordinateSequences","LineString","_points","points","Puntal","Point","_coordinates","Area","Polygonal","Polygon","_shell","_holes","shell","holes","createLinearRing","MultiPoint","LinearRing","GeometryFactory","getCoordinateSequenceFactory","validateConstruction","MultiPolygon","polygons","GeometryEditor","_isUserDataCopied","GeometryEditorOperation","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","CoordinateArraySequence","_dimension","coordSeq","getDimension","getCoordinateCopy","dimension","CoordinateArraySequenceFactory","sort","comparator","slice","concat","asList","toDimensionSymbol","dimensionValue","FALSE","SYM_FALSE","TRUE","SYM_TRUE","DONTCARE","SYM_DONTCARE","P","SYM_P","L","SYM_L","SYM_A","toDimensionValue","dimensionSymbol","seq","getNumPoints","k","childCoordinates","getCoordinates","area","getArea","isEquivalentClass","otherCollection","getCoordinate","getBoundaryDimension","sum","getLength","numPoints","revGeoms","createGeometryCollection","theseElements","otherElements","gc","n1","getNumGeometries","n2","thisGeom","getGeometryN","otherGeom","holeComp","filter","isDone","isGeometryChanged","geometryChanged","checkNotGeometryCollection","isClosed","nLines","revLines","createMultiLineString","getBoundary","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createPoint","createMultiPointFromCoords","boundaryLineString","boundaryMultiLineString","isInBoundary","getStartPoint","createMultiPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","getValue","getKey","pt","counter","ofLine","x0","y0","chars","String","getStackTrace","os","ps","printStackTrace","depth","stackTrace","lineNumberReader","readLine","NEWLINE","split","separator","separatorlen","tokenList","tmpString","pos","token","res","SIMPLE_ORDINATE_FORMAT","format","spaces","copyCoord","minDim","dim","setOrdinate","getOrdinate","isEqual","cs1","cs2","cs1Size","fact","newseq","swap","cs","builder","ensureValidRing","createClosedRing","expandEnvelope","isSimple","otherLineString","equal","getPointN","createLineString","point","ofRing","ofRingSigned","p0","shellCoordinates","getCoordinateSequence","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","poly","getExteriorRing","convexHull","otherShell","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","rings","shellCopy","holeCopies","MINIMUM_VALID_SIZE","createMultiPolygon","allRings","allRingsArray","isUserDataCopied","geometry","operation","editInternal","setUserData","getUserData","editGeometryCollection","editPolygon","edit","getClass","getName","collection","collectionForType","polygon","newPolygon","createPolygon","hole","cloneCoordinates","strBuilder","instance","instanceObject","MapPolyfill","proto","objectOnly","_keys","_values","_itp","forEach","sharedSize","createCollection","has","list","sharedIterator","callback","context","entries","done","itp","array2","v","MapImpl","HashMap","map_","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","_name","nameToTypeMap","_precisionModel","_coordinateSequenceFactory","coordinateSequenceFactory","precisionModel","getDefaultCoordinateSequenceFactory","MapInterface","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","FLOATING_SINGLE","description","getScale","round","makePrecise","maxSigDigits","mostPrecise","pm1","pm2","maximumPreciseValue","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","regExes","WKTParser","geometryFactory","wkt","type","replace","matches","typeStr","exec","search","emptyTypeStr","toLowerCase","extractGeometry","getGeometryType","wktType","multipoint","join","linestring","linearring","multilinestring","multipolygon","coords","trim","components","trimParens","lines","parenComma","doubleParenComma","wktArray","read","WKTWriter","parser","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","RobustLineIntersector","LineSegment","ls","Location","IntersectionMatrix","_matrix","setAll","elements","INTERIOR","BOUNDARY","EXTERIOR","Angle","Triangle","write","segmentIndex","intIndex","computeIntLineIndex","catBuilder","isEndPoint","isCollinear","p3","p4","computeIntersect","getEdgeDistance","hasIntersection","isInteriorIntersection","inputLineIndex","NO_INTERSECTION","computeEdgeDistance","COLLINEAR_INTERSECTION","toLineString","getTopologySummary","ptIndex","pdx","pdy","nonRobustComputeEdgeDistance","DONT_INTERSECT","DO_INTERSECT","POINT_INTERSECTION","intPt","env0","env1","computeIntersection","n3","n4","normPt","smallestInAbsValue","nearestEndpoint","intersectionWithNormalization","isInSegmentEnvelopes","x3","x4","xabs","intPtDD","isIn","out","println","normalizeToEnvCentre","safeHCoordinateIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","computeCollinearIntersection","nearestPt","minDist","seg","orient0","orient1","geomFactory","li","getIntersection","projectionFactor","pf0","pf1","newp0","project","newp1","atan2","midPoint","closestPt","close00","closestPoint","close01","close10","close11","factor","comp0","temp","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","inputPt","segFrac","bits0","java","lang","hash0","bits1","toLocationSymbol","locationValue","NONE","isDisjoint","dimensionSymbols","row","col","column","minimumDimensionSymbols","setAtLeast","minimumDimensionValue","dimensionOfGeometryA","dimensionOfGeometryB","isTouches","ai","bi","requiredDimensionSymbols","im","actualDimensionValue","requiredDimensionSymbol","actualDimensionSymbols","toDegrees","radians","angle","PI_TIMES_2","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","a1","a2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","PI_OVER_2","PI_OVER_4","signedArea","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","PointPairDistance","_pt","_distance","_isNull","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","g0","g1","MaxPointDistanceFilter","_maxPtDist","_minPtDist","_euclideanDist","MaxDensifiedByFractionDistanceFilter","_numSubSegs","fraction","ItemVisitor","PointOnGeometryLocator","IntervalRTreeNode","_min","POSITIVE_INFINITY","_max","NodeComparator","IntervalRTreeLeafNode","_item","item","ptDist","setMinimum","initialize","setCoordinate","setMaximum","computeDistance","tempSegment","segment","densifyFrac","computeOrientedDistance","compute","getDistance","discreteGeom","distFilter","getMaxPointDistance","fracFilter","setDensifyFraction","delx","dely","queryMin","queryMax","mid1","mid2","visitor","visitItem","Collections","alen","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","_root","_level","LinearComponentExtracter","_lines","_isForcedToLineString","isForcedToLineString","ArrayListVisitor","_items","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","IndexedPointInAreaLocator","_index","IntervalIndexedGeometry","SegmentVisitor","_counter","PointLocation","GeometryCollectionIterator","_parent","_atStart","_subcollectionIterator","SimplePointInAreaLocator","SimilarityMeasure","AreaSimilarityMeasure","HausdorffSimilarityMeasure","SimilarityMeasureCombiner","Centroid","_areaBasePt","_triangleCent3","_areasum2","_cg3","_lineCentSum","_totalLength","_ptCount","_ptCentSum","CGAlgorithms","EmptyStackException","Stack","UniqueCoordinateArrayFilter","ConvexHull","_geomFactory","_inputPts","extractCoordinates","filterCoordinates","RadialComparator","_origin","origin","InteriorPointArea","_interiorPoint","_maxWidth","SafeBisectorFinder","_poly","_centreY","_hiY","_loY","avg","InteriorPointLine","_centroid","_minDistance","getCentroid","addInterior","addEndpoints","InteriorPointPoint","MonotoneChainSelectAction","selectedSegment","NodeBase","_subnode","Interval","interval","DoubleBits","Key","_interval","computeKey","Node","_centre","level","getMin","getMax","IntervalSize","Root","Bintree","_minExtent","MonotoneChain","_pts","_start","_end","_env","_context","_id","Quadrant","MonotoneChainBuilder","RobustDeterminant","PointInRing","MCPointInRing","_ring","_tree","_crossings","buildIndex","MCSelecter","mcp","MinimumBoundingCircle","_input","_extremalPts","_radius","MinimumDiameter","_inputGeom","_isConvex","_convexHullPts","_minBaseSeg","_minWidthPt","_minPtIndex","_minWidth","inputGeom","isConvex","query","buildLevel","buildTree","node","buildRoot","getGeometry","buildGeometry","getLines","forceToLineString","geoms","minx","maxx","orient","getLocation","locatePointInRing","countSegment","isOnSegment","rcc","addLine","insert","getItems","isOnLine","lineIntersector","locateInRing","isInRing","isAtomic","UnsupportedOperationException","locate","locatePointInPolygon","shellLoc","holeLoc","containsPointInPolygon","locateInGeometry","geomi","g2","loc","union","DENSIFY_FRACTION","measure","diagonalSize","width","hgt","combine","measure1","measure2","basePt","lineLen","segmentLen","midx","midy","addPoint","isPositiveArea","addTriangle","addLineSegments","cent","setAreaBasePoint","centroid3","area2","addShell","addHole","distanceLineLine","distancePointLine","isPointInRing","computeLength","computeOrientation","distancePointLinePerpendicular","pop","peek","empty","inputPts","octPts","computeOctPts","closeRing","cleanRing","linearRing","original","cleanedRing","previousDistinctCoordinate","currentCoordinate","nextCoordinate","isBetween","cleanedRingCoordinates","c3","polyPts","computeOctRing","reducedSet","reducedPts","padArray3","reduce","sortedPts","preSort","cHS","grahamScan","cH","lineOrPolygon","pad","polarCompare","dxp","dyp","dxq","dyq","op","oq","bisector","horizontalBisector","intersections","widestIntersection","widestGeometry","centre","bisectY","getBisectorY","addPolygon","process","updateInterval","mc","startIndex","getLineSegment","select","hasChildren","hasItems","items","addAllItems","subSize","resultItems","isSearchMatch","addAllItemsFromOverlapping","itemInterval","isPrunable","maxSubDepth","sqd","nodeSize","getSubnodeIndex","subnodeIndex","overlaps","exponent","NumW","Qty","Sign","Expo","Mant","Bin","ExW","CVTFWD","powerOf2","computeLevel","computeInterval","searchInterval","find","childNode","createSubnode","getSubnode","getNode","createNode","getInterval","getLevel","createExpanded","addInterval","expandInt","largerNode","isZeroWidth","scaledInterval","MIN_BINARY_EXPONENT","insertContained","tree","collectStats","insertInterval","ensureExtent","foundItems","del","minExtent","searchEnv","start0","end0","mcs","computeSelect","mco","computeOverlaps","start1","end1","overlap","mid0","id","isNorthern","quad","NE","NW","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","SE","SW","quadrant","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","mcList","mcEnv","getEnvelope","rayEnv","mcSelecter","segs","testMonotoneChain","testLineSegment","hullPts","lowestPoint","Q","pointWitMinAngleWithX","R","pointWithMinAngleWithSegment","computeCirclePoints","computeCentre","centrePoint","minSin","minAngPt","minAng","ang","computeMinimumDiameter","convexGeom","computeConvexRingMinDiameter","currMaxIndex","findMaxPerpDistance","computeWidthConvex","getConvexHull","maxPerpDistance","distancePerpendicular","nextPerpDistance","maxIndex","nextIndex","minPara","maxPara","minPerp","maxPerp","paraC","computeC","perpC","maxPerpLine","computeSegmentForLine","minPerpLine","maxParaLine","minParaLine","lineIntersection","getMinimumDiameter","getDiameter","getMinimumRectangle","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","Densifier","_distanceTolerance","DensifyTransformer","distanceTolerance","transformCoordinates","isAllValidLinearRings","transformLinearRing","transGeomList","transformGeom","transformLineString","transformPoint","transformPolygon","transform","transformMultiPoint","transformMultiLineString","transformMultiPolygon","transformGeometryCollection","seqSize","densifyPoints","precModel","densifiedSegCount","densifiedSegLen","segFract","pointAlong","densify","densifier","setDistanceTolerance","getResultGeometry","roughGeom","createValidArea","newPts","roughAreaGeom","HalfEdge","_orig","_sym","_next","orig","MarkHalfEdge","_isMarked","EdgeGraph","_vertexMap","DissolveHalfEdge","_isStart","DissolveEdgeGraph","LineDissolver","_graph","_nodeEdgeStack","_ringStartEdge","oNext","insertAfter","ecmp","ePrev","save","setNext","sym","degree","quadrant2","compareAngularDirection","setSym","e0","e1","isMarked","setMarkBoth","setMark","markBoth","mark","eAdj","eAdjDest","createEdge","isValidEdge","eSame","isStart","computeResult","eNode","prevNode","stackEdges","buildLines","eStartRing","eNext","eStart","updateRingStartEdge","buildRing","getVertexEdges","buildLine","component","lineString","doneStart","addEdge","setStart","dissolve","getResult","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","Position","mce","chainIndex","SweepLineEvent","_label","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","DELETE","label","INSERT","EdgeSetIntersector","SegmentIntersector","_hasIntersection","_hasProper","_hasProperInterior","_properIntersectionPoint","_li","_includeProper","_recordIsolated","_isSelfIntersection","_numIntersections","numTests","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","SimpleMCSweepLineIntersector","events","nOverlaps","TopologyLocation","location","on","ON","gl","Label","elt","onLoc","lbl","geomIndex","setLocation","leftLoc","rightLoc","setLocations","EdgeIntersection","EdgeIntersectionList","_nodeMap","edge","MonotoneChainIndexer","MonotoneChainEdge","mcb","Depth","_depth","NULL_VALUE","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","Edge","eiList","_mce","_isIsolated","_depthDelta","_coord","_edges","edges","NodeMap","nodeMap","nodeFact","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","TopologyException","msg","msgWithCoord","DirectedEdge","_isForward","_nextMin","_edgeRing","_minEdgeRing","isForward","computeDirectedLabel","NodeFactory","PlanarGraph","_nodes","_edgeEndList","GeometryGraph","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","_ptLocator","argIndex","parentGeom","boundaryNodeRule","updateLocationInfo","locateOnPoint","locateOnLineString","locateInPolygon","ml","mpoly","computeLocation","locateInPolygonRing","opposite","position","si","computeIntersectsForChain","deleteEventIndex","pe","ev","segIndex0","segIndex1","getIntersectionNum","isAdjacentSegments","maxSegIndex","isDoneWhenProperInt","bdyNodes","isIntersection","isBoundaryPointInternal","bdyNodes0","bdyNodes1","p00","p01","p10","p11","setIsolated","isTrivialIntersection","isProper","addIntersections","isBoundaryPoint","isDelete","getInsertEvent","setDeleteEventIndex","prepareEvents","isInsert","processOverlaps","getDeleteEventIndex","edges0","edges1","addEdges","computeIntersections","edgeSet","getMonotoneChainEdge","getStartIndexes","ev0","mc0","getObject","ev1","mc1","isSameLabel","locValue","newLoc","posIndex","locIndex","setAllLocations","setAllLocationsIfNull","isLine","merge","flip","isArea","isAnyNull","side","isEqualOnSide","allPositionsEqual","toLineLabel","lineLabel","print","maxSegmentIndex","edgeList","eiPrev","ei","newEdge","createSplitEdge","ei0","ei1","lastSegStartPt","useIntPt1","ipt","eiNew","chainIndex0","chainIndex1","depthValue","minDepth","newValue","depthAtLocation","isVisited","isInResult","isCovered","getGeometryCount","computeIM","isIsolated","isEqualForward","isEqualReverse","iRev","updateIM","normalizedSegmentIndex","nextSegIndex","nextPt","depthDelta","addIntersection","setAtLeastIfValid","getEdges","getEdge","label2","eltIndex","nLoc","setLabel","onLocation","mergeLabel","computeMergedLocation","setNode","getLabel","addNode","className","lastDotPos","lastIndexOf","compareDirection","depthVal","isInteriorAreaEdge","nextMin","getDepthDelta","minEdgeRing","isExteriorIfArea0","isExteriorIfArea1","edgeRing","printReverse","de","setVisited","directionFactor","oppositePos","oppositeDepth","setDepth","depthFactor","currLocation","nextLocation","nodeit","linkResultDirectedEdges","linkAllDirectedEdges","ep0","ep1","eCoord","matchInSameDirection","getEdgeEnds","ee","edgesToAdd","de1","de2","nodes","determineBoundary","computeRingSelfNodes","computeSelfNodes","isDoneIfProperInt","setIsDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","edgelist","addSplitEdges","setBoundaryNodes","getBoundaryNodes","insertPoint","addPolygonRing","insertEdge","insertBoundaryPoint","isBoundaryNode","lr","cwLeft","cwRight","eLoc","eiIt","addSelfIntersectionNode","addLineString","addCollection","findEdge","KdNodeVisitor","KdNode","_data","_left","_right","_count","data","KdTree","_numberOfNodes","_tolerance","BestMatchVisitor","_matchNode","_matchDist","matchNode","findBestMatchNode","increment","insertExact","queryEnv","queryNode","currentNode","odd","discriminant","searchRight","getLeft","visit","getRight","queryEnvelope","leafNode","isOddLevel","isLessThan","setLeft","setRight","toCoordinates","kdnodes","includeRepeated","getCount","update","itemEnv","_centrex","_centrey","SpatialIndex","Quadtree","visitItems","centrex","centrey","computeQuadLevel","quadSize","dMax","miny","maxy","insertNode","addEnv","expandEnv","isZeroX","isZeroY","insertEnv","posEnv","delX","delY","Boundable","ItemBoundable","_bounds","bounds","PriorityQueue","_size","BoundablePairDistanceComparator","normalOrder","AbstractNode","_childBoundables","BoundablePair","_boundable1","_boundable2","_itemDistance","boundable1","boundable2","itemDistance","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity","ItemDistance","STRtree","STRtreeNode","minItem","reorder","child","distance1","distance2","childBoundable","computeBounds","priQ","isComp1","isComposite","isComp2","expand","nd","bndComposite","bndOther","getChildBoundables","bp","isLeaves","getBounds","searchBounds","childBoundables","getIntersectsOp","queryInternal","getItem","build","childToRemove","valuesTree","itemsTree","valuesTreeForNode","valuesTreeForChild","boundables","boundablesAtLevel","top","boundable","createHigherLevels","removeItem","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","lastNode","getNodeCapacity","addChildBoundable","compareDoubles","IntersectsOp","item1","item2","verticalSlices","createParentBoundablesFromVerticalSlice","intersectsOp","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","yComparator","minLeafCount","xComparator","createParentBoundablesFromVerticalSlices","itemDist","getRoot","nearestNeighbour","initBndPair","distanceLowerBound","minPair","currentDistance","bndPair","poll","expandToQueue","getBoundable","bnd","maxDistance","kNearestNeighbors","centreX","resultIterator","centreY","aBounds","bBounds","geometryTypes","GeoJSONParser","json","JSON","feature","bbox","featureCollection","features","sub","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","GeoJSONWriter","WKTReader","p2c","OL3Parser","olReference","ol","convertFromPoint","convertFromLineString","convertFromLinearRing","convertFromPolygon","convertFromMultiPoint","convertFromMultiLineString","convertFromMultiPolygon","convertFromCollection","getLinearRings","multiPoint","getPoints","multiLineString","getLineStrings","multiPolygon","getPolygons","getGeometries","convertToPoint","convertToLineString","convertToLinearRing","convertToPolygon","convertToMultiPoint","convertToMultiLineString","convertToMultiPolygon","convertToCollection","geometryCollection","SegmentPointComparator","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","SegmentNodeList","NodeVertexIterator","_nodeList","_nodeIt","_currNode","_nextNode","_currSegIndex","nodeList","readNextNode","Octant","SegmentString","NodableSegmentString","NodedSegmentString","MonotoneChainOverlapAction","_overlapSeg1","_overlapSeg2","Noder","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","_si","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","noder","scaleFactor","isIntegerPrecision","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","addEdgeCoordinates","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","isInterior","addCollapsedNodes","collapsedVertexIndex","numVerticesBetween","findCollapseIndex","getData","getSegmentOctant","splitEdges","edgePts","pt0","splitnPts","ptn","adx","ady","safeOctant","addIntersectionNode","getNodedSubstrings","segStrings","resultEdgelist","getNodeList","mc2","start2","segStr","setId","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","getId","ss1","getContext","ss2","processIntersections","ss","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","computeNodes","IsSimpleOp","_isClosedEndpointsInInterior","_nonSimpleLocation","EndpointInfo","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","endCapStyle","setEndCapStyle","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","LinkedList","BufferSubgraph","_finder","_dirEdgeList","_rightMostCoord","EdgeRing","_startDe","_maxNodeDegree","_isHole","_geometryFactory","computePoints","computeRing","MinimalEdgeRing","MaximalEdgeRing","PolygonBuilder","_shellList","BufferInputLineSimplifier","_inputLine","_distanceTol","_isDeleted","_angleOrientation","inputLine","OffsetSegmentString","_ptList","_minimimVertexDistance","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","getQuadrantSegments","getJoinStyle","MAX_CLOSING_SEG_LEN_FACTOR","OffsetCurveBuilder","SubgraphDepthLocater","_subgraphs","_seg","subgraphs","DepthSegment","_upwardSeg","_leftDepth","OffsetCurveSetBuilder","_curveBuilder","_curveList","curveBuilder","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","DirectedEdgeStar","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","OverlayNodeFactory","OrientedCoordinateArray","_orientation","orientation","EdgeList","_ocaMap","IntersectionAdder","_hasInterior","numIntersections","numInteriorIntersections","numProperIntersections","BufferBuilder","_workingPrecisionModel","_workingNoder","NodingValidator","_segStrings","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","MCIndexPointSnapper","HotPixelSnapAction","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","hotPixel","parentEdge","hotPixelVertexIndex","InteriorIntersectionFinderAdder","_interiorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","setPrecisionModel","BufferOp","_argGeom","_resultGeometry","_saveException","mp","isSimpleLinearGeometry","graph","endPoints","getEdgeIterator","getMaximumSegmentIndex","eiInfo","hasProperIntersection","getProperIntersectionPoint","hasNonEndpointIntersection","hasClosedEndpointIntersection","getEdgeIntersectionList","isSimpleMultiPoint","isSimplePolygonal","isSimpleGeometryCollection","computeSimple","quadSegs","JOIN_BEVEL","JOIN_MITRE","simplifyFactor","isSingleSided","bufferDistanceError","alpha","cos","CAP_FLAT","CAP_SQUARE","getRightmostSideOfSegment","checkForRightmostCoordinate","pPrev","pNext","usePrev","star","getRightmostEdge","getSym","dirEdgeList","findRightmostEdgeAtNode","findRightmostEdgeAtVertex","getRightmostSide","addLast","removeFirst","shift","startEdge","computeDepths","copySymDepths","outsideDepth","clearVisitedEdges","setEdgeDepths","addReachable","getDepth","setInResult","nodesVisited","nodeQueue","startNode","computeNodeDepth","adjNode","edgeEnv","nodeStack","symNode","isFirstEdge","getEdgeRing","addPoints","setEdgeRing","getNext","getOutgoingDegree","getLinearRing","containsPoint","computeMaxNodeDegree","deLabel","holeLR","er","setMinEdgeRing","getNextMin","minEdgeRings","getMinEdgeRing","minEr","linkMinimalDirectedEdges","edgeRings","shellList","freeHoleList","isHole","resultPolyList","toPolygon","getShell","findEdgeRingContaining","setShell","maxEdgeRings","getMaxNodeDegree","linkDirectedEdgesForMinimalEdgeRings","buildMinimalRings","findShell","placePolygonHoles","dirEdges","computePolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","getNodes","buildMaximalEdgeRings","buildMinimalEdgeRings","sortShellsAndHoles","placeFreeHoles","i0","distanceTol","isConcave","isShallow","isShallowSampled","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isDeletable","NUM_PTS_TO_CHECK","deleteShallowConcavities","collapseLine","simplify","INIT","KEEP","COORDINATE_ARRAY_TYPE","bufPt","isRedundant","addPt","lastPt","startPt","minimimVertexDistance","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","offsetL","offsetR","getEndCapStyle","addDirectedFillet","squareCapSideOffset","squareCapLOffset","squareCapROffset","offset0","offset1","isMitreWithinLimit","getMitreLimit","addLimitedMitreJoin","OFFSET_SEGMENT_SEPARATION_FACTOR","addMitreJoin","addBevelJoin","addCornerFillet","addPts","direction","radius","startAngle","endAngle","s1","s2","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","mitreMidLine","bevelEndLeft","pointAlongOffset","bevelEndRight","totalAngle","nSegs","currAngleInc","currAngle","offset","sideSign","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","setMinimumVertexDistance","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","distTol","simplifyTolerance","addSegments","simp2","initSideSegments","addFirstSegment","addNextSegment","simp1","addLastSegment","simp","addLineEndCap","createCircle","createSquare","computeSingleSidedBufferCurve","computeLineBufferCurve","bufDistance","getSimplifyFactor","getLineCurve","copyCoordinates","computeRingBufferCurve","stabbingRayLeftPt","stabbedSegments","bsg","findStabbedSegments","getDirectedEdges","dirEdge","isHorizontal","ds","minX","maxX","orientIndex","seg0","seg1","compare0","curve","addCurve","offsetSide","shellCoord","isErodedCompletely","holeCoord","triangleCoord","bufferDistance","tri","getBufferParameters","cwLeftLoc","cwRightLoc","getRingCurve","ringCoord","isTriangleErodedCompletely","envMinDimension","iNextCW","startLoc","currLoc","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","eSearch","computeLabel","propagateSideLabels","hasDimensionalCollapseEdge","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","insertEdgeEnd","de0","deLast","quad0","getQuadrant","getDy","nodeLabel","prevOut","firstIn","edgeIndex","findIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","setNextMin","isLineEdge","setCovered","computeLabelling","eLabel","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","edgeColl","existingEdge","findEqualEdge","existingLabel","labelToMerge","isPointwiseEqual","mergeDelta","newDelta","setDepthDelta","subgraphList","polyBuilder","processedGraphs","subgraph","getRightmostCoordinate","computeDepth","findResultEdges","reverseOrder","bufferSegStrList","getCurves","createEmptyResultGeometry","computeNodedEdges","createSubgraphs","buildSubgraphs","getNoder","oldLabel","insertUniqueEdge","lLoc","rLoc","convertSegStrings","checkEndPtVertexIntersections","ss0","checkInteriorIntersections","pts0","hasInteriorIntersection","checkCollapses","checkCollapse","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","intersectsScaled","copyScaled","pScaled","safeTolerance","SAFE_ENV_EXPANSION_FACTOR","intersectsLeft","intersectsBottom","segIndex","snap","pixelEnv","getSafeEnvelope","hotPixelSnapAction","isNodeAdded","addSnappedNode","inputSegmentStrings","nv","checkValid","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","getInteriorIntersections","edge0","getIndex","snapRound","snapPts","fixedPM","bufBuilder","setWorkingPrecisionModel","setNoder","precDigits","MAX_PRECISION_DIGITS","bufferReducedPrecision","precisionDigits","precisionScaleFactor","bufferFixedPrecision","bufferOriginalPrecision","argPM","getType","computeGeometry","bufferOp","bufOp","maxPrecisionDigits","bufEnvMax","minUnitLog10","CAP_BUTT","PolygonExtracter","_comps","comps","GeometryLocation","_component","_segIndex","INSIDE_AREA","PointExtracter","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_minDistanceLocation","terminateDistance","singletonList","getLocations","locPtPoly","computeContainmentDistance","polyGeomIndex","polyGeom","locationsIndex","polys","insideLocs","locs","ptLoc","locGeom","computeMinDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistanceLinesPoints","computeMinDistancePoints","computeFacetDistance","coord0","segClosestPoint","line0","line1","closestPoints","points0","points1","pt1","isWithinDistance","nearestPoints","EdgeString","_directedEdges","_from","_to","_edgeDirection","_angle","from","to","directionPt","edgeDirection","LineMergeDirectedEdge","_dirEdge","setDirectedEdges","_outEdges","_sorted","_deStar","deStar","LineMergeEdge","_line","_dirEdges","LineMergeGraph","LineMerger","_mergedLineStrings","_edgeStrings","forwardDirectedEdges","reverseDirectedEdges","coordinateList","directedEdge","getEdgeDirection","getLine","getComponentWithVisitedState","visitedState","visited","setMarked","marked","toEdges","getToNode","getDegree","getOutEdges","setEdge","getFromNode","addOutEdge","fromNode","sortEdges","modi","getEdgesBetween","node0","node1","commonEdges","retainAll","nodesFound","nodeIterator","getDirEdge","startCoordinate","endCoordinate","endNode","directedEdge0","directedEdge1","findNode","buildEdgeStringsStartingAt","buildEdgeStringsForNonDegree2Nodes","buildEdgeStringStartingWith","edgeIterator","buildEdgeStringsForObviousStartNodes","buildEdgeStringsForIsolatedLoops","edgeString","current","buildEdgeStringsForUnprocessedNodes","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","FastNodingValidator","_isValid","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","_mapOp","mapOp","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","PointBuilder","_resultPointList","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","GeometrySnapper","_srcGeom","srcGeom","SnapTransformer","_snapPts","_isSelfSnap","isSelfSnap","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","_commonBitsX","_commonBitsY","Translater","trans","SnapOverlayOp","_cbr","computeSnapTolerance","SnapIfNeededOverlayOp","GeometryGraphOperation","_resultPrecisionModel","_arg","setComputationPrecision","OverlayOp","_resultGeom","_resultPolyList","isCheckEndSegmentsOnly","findAllIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","setFindAllIntersections","createAnyIntersectionFinder","createIntersectionCounter","setKeepIntersections","getIntersections","execute","getErrorMessage","getInteriorIntersection","intSegs","getIntersectionSegments","isValid","mapped","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","targetIndex","getArgGeometry","findCoveredLineEdges","collectLines","isResultOfOp","setVisitedEdge","isCoveredSet","isCoveredByA","edgesList","labelIsolatedLine","INTERSECTION","isCoveredByLA","isIncidentEdgeInResult","filterCoveredNodeToPoint","extractNonCoveredResultNodes","srcCoords","srcPt","snapVert","findSnapForVertex","snapVertices","snapSegments","distinctPtCount","snapPt","findSegmentIndexToSnap","snapIndex","allowSnappingToSourceVertices","snapGeom","extractTargetCoordinates","cleanResult","snappedGeom","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapTo","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","SNAP_PRECISION_FACTOR","snapToSelf","snapper","setAllowSnappingToSourceVertices","snapLine","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","padStr","bitStr","getBit","nBits","prop","num1","num2","invCoord","getCommonCoordinate","getCommon","xp","yp","remGeom","removeCommonBits","addCommonBits","prepGeom","overlayOp","prepareResult","UNION","symDifference","SYMDIFFERENCE","difference","DIFFERENCE","isSuccess","savedException","resultPointList","resultLineList","opcode","createEmptyResult","mergeSymLabels","newEdges","isCollapsed","getCollapsedEdge","overlayOpCode","computeOverlay","copyPoints","computeEdgeIntersections","baseSplitEdges","computeSplitEdges","insertUniqueEdges","computeLabelsFromDepths","replaceCollapsedEdges","labelIncompleteNodes","findResultAreaEdges","cancelDuplicateResultEdges","lineBuilder","pointBuilder","getNodeIterator","graphNode","getDelta","toLine","updateNodeLabelling","ni","labelIncompleteNode","updateLabelling","geom1","isGeometryCollection","MapOp","resultDimension","dim0","dim1","geomFact","loc0","loc1","PolygonizeDirectedEdge","PolygonizeEdge","_deList","_lowestEdge","_ringPts","_isProcessed","_isIncludedSet","_isIncluded","EnvelopeComparator","PolygonizeGraph","Polygonizer","_lineStringAdder","LineStringAdder","_dangles","_cutEdges","_invalidRingLines","_holeList","_polyList","_isCheckingRingsValid","_extractOnlyPolygonal","extractOnlyPolygonal","getRing","startDE","setRing","hasShell","holeER","isIncluded","adjRing","isOuterHole","getOuterHole","adjShell","isIncludedSet","setIncluded","isProcessed","findDirEdgesInRing","minShellEnv","tryShellRing","tryShellEnv","obj0","obj1","r1","iNode","computeNextCWEdges","linePts","endPt","nStart","nEnd","findLabeledEdgeRings","cutLines","maximalRings","convertMaximalToMinimalEdgeRings","edgeRingList","findEdgeRing","ringEdges","intNodes","findIntersectionNodes","computeNextCCWEdges","nodesToRemove","findNodesOfDegree","dangleLines","deleteAllEdges","toNode","getDegreeNonDeleted","edgeRingStarts","currLabel","prevDE","outDE","firstOutDE","prevInDE","inDE","polygonize","validEdgeRingList","invalidRingList","getLineString","deleteDangles","deleteCutEdges","getEdgeRings","findValidRings","findShellsAndHoles","assignHolesToShells","includeAll","findDisjointShells","extractPolygons","isCheckingRingsValid","computeHole","findOuterShells","outerHoleER","setProcessed","polyList","getPolygon","holeList","assignHoleToShell","isMoreToScan","updateIncluded","EdgeEndBuilder","EdgeEndBundle","_edgeEnds","getDirectedCoordinate","EdgeEndBundleStar","RelateNode","RelateNodeFactory","RelateComputer","_im","_isolatedEdges","arg","RectangleContains","_rectEnv","rectangle","RectangleLineIntersector","_diagUp0","_diagUp1","_diagDown0","_diagDown1","rectEnv","ShortCircuitedGeometryVisitor","RectangleIntersects","_rectangle","EnvelopeIntersectsVisitor","_intersects","GeometryContainsPointVisitor","_rectSeq","_containsPoint","RectangleIntersectsSegmentVisitor","_rectIntersector","RelateOp","_relate","eiCurr","eiNext","computeEdgeEnds","createEdgeEndForPrev","createEdgeEndForNext","foundInterior","computeLabelSide","computeLabelOn","computeLabelSides","eb","intersector","dimA","dimB","hasProper","hasProperInterior","hasProperInteriorIntersection","thisIndex","labelIsolatedEdge","computeDisjointIM","computeIntersectionNodes","copyNodesAndLabels","labelIsolatedNodes","computeProperIntersectionIM","eeBuilder","ee0","insertEdgeEnds","ee1","labelNodeEdges","labelIsolatedEdges","setLabelBoundary","labelIsolatedNode","updateIMFromEdges","ga","gb","isPointContainedInBoundary","isLineStringContainedInBoundary","isContainedInBoundary","isLineSegmentContainedInBoundary","segEnv","isSegUpwards","applyTo","ecpVisitor","riVisitor","elementEnv","rectPt","checkIntersectionWithLineStrings","testLine","checkIntersectionWithSegments","seq1","isRectangle","getIntersectionMatrix","isCovers","isIntersects","touches","relate","isOverlaps","crosses","isCrosses","isContains","GeometryCombiner","_skipEmpty","_inputGeoms","extractFactory","PointGeometryUnion","_pointGeom","_otherGeom","pointGeom","GeometryExtracter","_geometryType","geometryType","CascadedPolygonUnion","_inputPolys","UnaryUnionOp","_polygons","elems","elemGeom","extractElements","createList","obj2","locater","exteriorCoords","ptComp","isOfType","Class","clz","toGeometryType","geomTree","unionTree","disjointGeoms","intersectingGeoms","elem","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","STRTREE_NODE_CAPACITY","itemTree","binaryUnion","unionSafe","unionOptimized","restrictToPolygons","reduceToGeometries","common","disjointPolys","g0Int","extractByEnvelope","g1Int","unionPoints","ptGeom","unionNoOpt","unionLines","lineGeom","unionPolygons","unionLA","unionWithNull","ConnectedInteriorTester","_geomGraph","_disconnectedRingcoord","RelateNodeGraph","ConsistentAreaTester","_nodeGraph","IndexedNestedRingTester","_rings","_totalEnv","_nestedPt","TopologyValidationError","_errorType","errorType","IsValidOp","_parentGeometry","_isSelfTouchingRingFormingHoleValid","_validErr","parentGeometry","findDifferentPoint","findEdgeInSameDirection","findEdgeEnd","intDe","visitLinkedDirectedEdges","visitInteriorRing","startDe","setInteriorEdgesInResult","buildEdgeRings","visitShellInteriors","hasUnvisitedShellEdge","nodeIt","eeList","edgeIt","isAreaLabelsConsistent","eeb","isNodeEdgeAreaLabelsConsistent","innerRing","innerRingPts","results","searchRing","searchRingPts","innerRingPt","findPtNotNode","errMsg","locStr","getMessage","ERROR","REPEATED_POINT","HOLE_OUTSIDE_SHELL","NESTED_HOLES","DISCONNECTED_INTERIOR","SELF_INTERSECTION","RING_SELF_INTERSECTION","NESTED_SHELLS","DUPLICATE_RINGS","TOO_FEW_POINTS","INVALID_COORDINATE","RING_NOT_CLOSED","checkInvalidCoordinates","nestedTester","innerHole","isNonNested","getNestedPoint","cat","isNodeConsistentArea","getInvalidPoint","hasDuplicateRings","shellPts","holePts","shellPt","holePt","checkNoSelfIntersectingRing","cit","isInteriorsConnected","nodeSet","isFirst","pir","hasTooFewPoints","checkClosedRing","checkTooFewPoints","checkNoSelfIntersectingRings","checkClosedRings","checkConsistentArea","checkHolesInShell","checkHolesNotNested","checkConnectedInteriors","checkShellsNotNested","polyShell","badNestedPt","checkShellInsideHole","checkShellNotNested","testCoords","PrecisionReducerCoordinateOperation","_targetPM","_removeCollapsed","targetPM","removeCollapsed","GeometryPrecisionReducer","_changePrecisionModel","_isPointwise","reducedCoords","noRepeatedCoords","minLength","collapsedCoords","geomToBuffer","changePM","bufGeom","finalGeom","geomEdit","createFactory","finalRemoveCollapsed","newPM","createEditor","inputFactory","changePrecisionModel","reducePW","reducePointwise","fixPolygonalTopology","isPointwise","reducer","setPointwise","DouglasPeuckerLineSimplifier","_usePt","DouglasPeuckerSimplifier","_isEnsureValidTopology","DPTransformer","isEnsureValidTopology","TaggedLineSegment","TaggedLineString","_parentLine","_segs","_resultSegs","_minimumSize","parentLine","minimumSize","LineSegmentIndex","LineSegmentVisitor","_querySeg","querySeg","TaggedLineStringSimplifier","_inputIndex","_outputIndex","_linePts","inputIndex","outputIndex","TaggedLinesSimplifier","TopologyPreservingSimplifier","_lineSimplifier","_linestringMap","LineStringTransformer","linestringMap","LineStringMapBuilderFilter","tps","simplifySection","tss","rawGeom","rawAreaGeom","removeDegenerateRings","simpResult","resultSegsSize","getSegments","newSeg","sectionIndex","candidateSeg","hasBadOutputIntersection","hasBadInputIntersection","getSegment","addToResult","isValidToSimplify","getResultSize","getMinimumSize","furthestPtIndex","findFurthestPoint","hasBadIntersection","flatten","maxDist","midPt","getParentCoordinates","isInLineSection","getParent","taggedLines","tlss","taggedLine","createCoordinateSequence","getResultCoordinates","SplitSegment","_segLen","_splitPt","_minimumLen","ConstraintSplitPointFinder","NonEncroachingSplitPointFinder","TrianglePredicate","Vertex","_z","ConstraintVertex","_isOnConstraint","_constraint","QuadEdge","_rot","_vertex","IncrementalDelaunayTriangulator","_subdiv","_isUsingTolerance","subdiv","getTolerance","QuadEdgeLocator","LastFoundQuadEdgeLocator","_lastEdge","LocateFailureException","msgWithSpatial","TriangleVisitor","QuadEdgeSubdivision","_visitedKey","_quadEdges","_startingEdge","_edgeCoincidenceTolerance","_frameVertex","_frameEnv","_locator","_triEdges","EDGE_COINCIDENCE_TOL_FACTOR","createFrame","initSubdiv","TriangleCircumcentreVisitor","TriangleEdgesListVisitor","_triList","TriangleVertexListVisitor","TriangleCoordinatesVisitor","_coordList","_triCoords","Segment","_ls","z1","z2","ConformingDelaunayTriangulator","_initialVertices","_segVertices","_segments","_incDel","_convexHull","_splitFinder","_kdt","_vertexFactory","_computeAreaEnv","initialVertices","DelaunayTriangulationBuilder","_siteCoords","ConformingDelaunayTriangulationBuilder","_constraintLines","_constraintVertexMap","VoronoiDiagramBuilder","_clipEnv","_diagramEnv","minFrac","pointAlongReverse","getConstrainedLength","minLen","encroachPt","lineSeg","midPtLen","splitSeg","projPt","projectedSplitPoint","maxSplitLen","setMinimumLength","splitAt","getSplitPoint","triArea","isInCircleDDNormalized","bdx","bdy","cdx","cdy","abdet","bcdet","cadet","alift","blift","clift","checkRobustInCircle","nonRobustInCircle","isInCircleNonRobust","isInCircleDD","isInCircleDDSlow","isInCircleCC","circumCentre","toPoint","isInCircleDDFast","aTerm","triAreaDDFast","bTerm","cTerm","pTerm","cc","ccRadius","isInCircleNormalized","triAreaDDSlow","isInCircleRobust","t1","t2","hcc","nre","err","getZ","sa","crossProduct","BEHIND","magn","BEYOND","ORIGIN","DESTINATION","BETWEEN","circleCenter","edgeLength","el","ptLen","isOnConstraint","constraint","qe","equalsOriented","invRot","rot","setOrig","makeEdge","q0","q3","base","setDest","oPrev","lNext","beta","t3","t4","connect","isVertexOfEdge","isOnEdge","delete","isInCircle","lPrev","vertices","insertSite","isLive","locateFromEdge","triEdges","includeFrame","visitTriangles","getTriangleVertices","cellPts","startQE","cellPoly","locator","ea","ec","leftTri","getTriangleEdges","rightTri","vLeftTriOther","isFrameVertex","vRightTriOther","triVisitor","edgeStack","visitedEdges","fetchTriangleToVisit","getTriangles","vd","curr","edgeCount","isFrame","isFrameEdge","quadEdges","getPrimaryEdges","visitedVertices","qd","priQE","getPrimary","eSym","eRot","eRotSym","iter","maxIter","toLineSegment","dPrev","cells","getVertexUniqueEdges","getVoronoiCellPolygon","vorCells","getVoronoiCellPolygons","triPtsList","getTriangleCoordinates","tris","triPt","locEdge","triEdge","ccVertex","addConstraintVertices","splits","enforceGabriel","MAX_SPLIT_ITER","segments","segVertices","hull","getPointArray","computeConvexHull","insertSites","getStart","getEnd","segRadius","closestNonGabriel","testRadius","splitFinder","segsToInsert","newSegments","segsToRemove","findNonGabrielPoint","findSplitPoint","splitVertex","createVertex","getStartX","getStartY","getStartZ","getEndX","getEndY","getEndZ","removeAll","setOnConstraint","vertexEnv","computeVertexEnvelope","allPointsEnv","delta","vertexFactory","computeBoundingBox","setLocator","kdnode","isRepeated","snappedV","siteEnv","toVertices","extractUniqueCoordinates","unique","coordsCopy","verts","containsKey","createVertices","createConstraintSegments","cdt","createSiteVertices","setConstraints","formInitialDelaunay","enforceConstraints","getSubdivision","constraintLines","constraintSegs","getVoronoiDiagram","clipGeometryCollection","clipEnv","clipPoly","clipped","LinearLocation","_componentIndex","_segmentIndex","_segmentFraction","segmentFraction","componentIndex","doNormalize","LinearIterator","_linearGeom","_numLines","_currentLine","_vertexIndex","linear","getComponentIndex","segmentEndVertexIndex","linearGeom","loadCurrentLine","LocationIndexOfPoint","LocationIndexOfLine","LinearGeometryBuilder","_ignoreInvalidLines","_fixInvalidLines","_lastPt","ExtractLineByLocation","LocationIndexedLine","checkGeometryType","LengthIndexOfPoint","LengthLocationMap","LengthIndexedLine","nseg","lineComp","pointAlongSegmentByFraction","setToEnd","lastLine","getSegmentLength","lenToStart","lenToEnd","componentIndex1","segmentIndex1","segmentFraction1","getEndLocation","compareLocationValues","componentIndex0","segmentIndex0","segmentFraction0","getSegmentFraction","getSegmentIndex","indexOfFromStart","minIndex","minComponentIndex","minSegmentIndex","isEndOfLine","getSegmentStart","getSegmentEnd","segDistance","candidateComponentIndex","candidateSegmentIndex","getVertexIndex","endLoc","closestAfter","indexOfAfter","subLine","locPt","subLineLoc","indicesOf","endLine","rawPts","validCoordinateSequence","fixInvalidLines","allowRepeatedPoints","ignoreInvalidLines","setFixInvalidLines","isVertex","startSegmentIndex","lastSegmentIndex","newCoordinateArray","computeLinear","indexLow","toLowest","ptMeasure","segmentStartMeasure","segMeasureToPt","segmentNearestMeasure","projFactor","totalLength","isEndpoint","compIndex","resolveLower","forwardLength","getLocationForward","resolveHigher","positiveIndex","getStartIndex","getEndIndex","locLow","startIndex2","clampIndex","endIndex2","resolveStartLower","locationOf","UnionOp","isEquals","within","disjoint","args","_len","_key","intersectionPattern","centPt","interiorPt","getInteriorPoint","toText"],"mappings":"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","file":"dist/jsts.min.js.map","sourcesContent":["export default function (target, source) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) target[key] = source[key]\n  }\n}\n","import extend from '../../../../extend';\nexport default function NumberUtil() {}\nextend(NumberUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NumberUtil;\n\t}\n});\nNumberUtil.equalsWithTolerance = function (x1, x2, tolerance) {\n\treturn Math.abs(x1 - x2) <= tolerance;\n};\n","export default function IllegalArgumentException () {}\n","export default function Long(high, low) {\n  this.low = low | 0\n  this.high = high | 0\n}\n\nLong.toBinaryString = function (i) {\n  var result = ''\n  for (var mask = 0x80000000; mask > 0; mask >>>= 1)\n    result += (i.high & mask) === mask ? '1' : '0'\n  for (var mask = 0x80000000; mask > 0; mask >>>= 1)\n    result += (i.low & mask) === mask ? '1' : '0'\n  return result\n}","import Long from './Long';\n\nexport default function Double () {}\n\nDouble.isNaN = n => Number.isNaN(n)\nDouble.isInfinite = n => !Number.isFinite(n)\nDouble.MAX_VALUE = Number.MAX_VALUE\n\nif (typeof Float64Array == 'function' &&\n\t  typeof Int32Array == 'function') {\n\t// Simple and fast conversion between double and long bits\n\t// using TypedArrays and ArrayViewBuffers.\n\t(function() {\n\t\tvar EXP_BIT_MASK = 0x7ff00000;\n\t\tvar SIGNIF_BIT_MASK = 0xFFFFF;\n\t\tvar f64buf = new Float64Array(1);\n\t\tvar i32buf = new Int32Array(f64buf.buffer);\n\t\tDouble.doubleToLongBits = function (value) {\n\t\t\tf64buf[0] = value;\n\t\t\tvar low = i32buf[0] | 0;\n\t\t\tvar high = i32buf[1] | 0;\n\t\t\t// Check for NaN based on values of bit fields, maximum\n\t\t\t// exponent and nonzero significand.\n\t\t\tif (((high & EXP_BIT_MASK) === EXP_BIT_MASK) &&\n\t\t\t\t((high & SIGNIF_BIT_MASK) !== 0) &&\n\t\t\t\t(low !== 0)) {\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = 0x7ff80000 | 0;\n\t\t\t}\n\t\t\treturn new Long(high, low);\n\t\t};\n\t\tDouble.longBitsToDouble = function (bits) {\n\t\t\ti32buf[0] = bits.low;\n\t\t\ti32buf[1] = bits.high;\n\t\t\treturn f64buf[0];\n\t\t};\n\t})();\n} else {\n\t// More complex and slower fallback implementation using \n\t// math and the divide-by-two and multiply-by-two algorithms.\n\t(function() {\n\t\tvar BIAS = 1023;\n\t\tvar log2 = Math.log2;\n\t\tvar floor = Math.floor;\n\t\tvar pow = Math.pow;\n\t\tvar MAX_REL_BITS_INTEGER = (function () {\n\t\t\tfor (var i = 53; i > 0; i--) {\n\t\t\t\tvar bits = pow(2, i) - 1;\n\t\t\t\tif (floor(log2(bits)) + 1 === i) {\n\t\t\t\t\treturn bits;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 0;\n\t\t})();\n\t\tDouble.doubleToLongBits = function (value) {\n\t\t\tvar x, y, f, bits, skip;\n\t\t\tvar sign, exp, high, low;\n\t\n\t\t\t// Get the sign bit and absolute value.\n\t\t\tif (value < 0 || 1 / value === Number.NEGATIVE_INFINITY) {\n\t\t\t\tsign = (1 << 31);\n\t\t\t\tvalue = (-value);\n\t\t\t} else {\n\t\t\t\tsign = 0;\n\t\t\t}\n\t\n\t\t\t// Handle some special values.\n\t\t\tif (value === 0) {\n\t\t\t\t// Handle zeros (+/-0).\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = sign; // exponent: 00..00, significand: 00..00\n\t\t\t\treturn new Long(high, low);\n\t\t\t}\n\t\n\t\t\tif (value === Infinity) {\n\t\t\t\t// Handle infinity (only positive values for value possible).\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = sign | 0x7ff00000; // exponent: 11..11, significand: 00..00\n\t\t\t\treturn new Long(high, low);\n\t\t\t}\n\t\n\t\t\tif (value !== value) {\n\t\t\t\t// Handle NaNs (boiled down to only one distinct NaN).\n\t\t\t\tlow = 0 | 0;\n\t\t\t\thigh = 0x7ff80000; // exponent: 11..11, significand: 10..00\n\t\t\t\treturn new Long(high, low);\n\t\t\t}\n\t\n\t\t\t// Preinitialize variables, that are not neccessarily set by\n\t\t\t// the algorithm.\n\t\t\tbits = 0;\n\t\t\tlow = 0 | 0;\n\t\n\t\t\t// Get the (always positive) integer part of value.\n\t\t\tx = floor(value);\n\t\n\t\t\t// Process the integer part if it's greater than 1. Zero requires\n\t\t\t// no bits at all, 1 represents the implicit (hidden) leading bit,\n\t\t\t// which must not be written as well.\n\t\t\tif (x > 1) {\n\t\t\t\t// If we can reliably determine the number of bits required for\n\t\t\t\t// the integer part,\n\t\t\t\tif (x <= MAX_REL_BITS_INTEGER) {\n\t\t\t\t\t// get the number of bits required to represent it minus 1\n\t\t\t\t\tbits = floor(log2(x)) /* + 1 - 1*/ ;\n\t\t\t\t\t// and simply copy/shift the integer bits into low and high.\n\t\t\t\t\t// That's much faster than the divide-by-two algorithm (saves\n\t\t\t\t\t// up to ~60%).\n\t\t\t\t\t// We always need to mask out the most significant bit, which\n\t\t\t\t\t// is the implicit (aka hidden) bit.\n\t\t\t\t\tif (bits <= 20) {\n\t\t\t\t\t\t// The simple case in which the integer fits into the\n\t\t\t\t\t\t// lower 20 bits of the high word is worth to be handled\n\t\t\t\t\t\t// separately (saves ~25%).\n\t\t\t\t\t\tlow = 0 | 0;\n\t\t\t\t\t\thigh = (x << (20 - bits)) & 0xfffff;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Here, the integer part is split into low and high.\n\t\t\t\t\t\t// Since its value may require more than 32 bits, we\n\t\t\t\t\t\t// cannot use bitwise operators (which implicitly cast\n\t\t\t\t\t\t// to Int32), but use arithmetic operators % and / to\n\t\t\t\t\t\t// get low and high parts. The uppper 20 bits go to high,\n\t\t\t\t\t\t// the remaining bits (in f) to low.\n\t\t\t\t\t\tf = bits - 20;\n\t\t\t\t\t\t// Like (1 << f) but safe with even more than 32 bits.\n\t\t\t\t\t\ty = pow(2, f);\n\t\t\t\t\t\tlow = (x % y) << (32 - f);\n\t\t\t\t\t\thigh = (x / y) & 0xfffff;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// For greater values, we must use the much slower divide-by-two\n\t\t\t\t\t// algorithm. Bits are generated from right to left, that is from\n\t\t\t\t\t// least to most significant bit. For each bit, we left-shift both\n\t\t\t\t\t// low and high by one and carry bit #0 from high to #31 in low.\n\t\t\t\t\t// The next bit is then copied into bit #19 in high, the leftmost\n\t\t\t\t\t// bit of the double's significand.\n\t\n\t\t\t\t\t// Preserve x for later user, so work with f.\n\t\t\t\t\tf = x;\n\t\t\t\t\tlow = 0 | 0;\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\ty = f / 2;\n\t\t\t\t\t\tf = floor(y);\n\t\t\t\t\t\tif (f === 0) {\n\t\t\t\t\t\t\t// We just found the most signigicant (1-)bit, which\n\t\t\t\t\t\t\t// is the implicit bit and so, not stored in the double\n\t\t\t\t\t\t\t// value. So, it's time to leave the loop.\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Count this bit, shift low and carry bit #0 from high.\n\t\t\t\t\t\tbits++;\n\t\t\t\t\t\tlow >>>= 1;\n\t\t\t\t\t\tlow |= (high & 0x1) << 31;\n\t\t\t\t\t\t// Shift high.\n\t\t\t\t\t\thigh >>>= 1;\n\t\t\t\t\t\tif (y !== f) {\n\t\t\t\t\t\t\t// Copy the new bit into bit #19 in high (only required if 1).\n\t\t\t\t\t\t\thigh |= 0x80000;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Bias the exponent.\n\t\t\texp = bits + BIAS;\n\t\n\t\t\t// If the integer part is zero, we've not yet seen the implicit\n\t\t\t// leading bit. Variable skip is later used while processing the \n\t\t\t// fractional part (if any).\n\t\t\tskip = (x === 0);\n\t\n\t\t\t// Get fraction only into x.\n\t\t\tx = value - x;\n\t\n\t\t\t// If some significand bits are still left to be filled and\n\t\t\t// the fractional part is not zero, convert the fraction using\n\t\t\t// the multiply-by-2 algorithm.\n\t\t\tif (bits < 52 && x !== 0) {\n\t\n\t\t\t\t// Initialize 'buffer' f, into which newly created bits get\n\t\t\t\t// shifted from right to left.\n\t\t\t\tf = 0;\n\t\n\t\t\t\twhile (true) {\n\t\t\t\t\ty = x * 2;\n\t\t\t\t\tif (y >= 1) {\n\t\t\t\t\t\t// This is a new 1-bit. Add and count this bit, if not\n\t\t\t\t\t\t// prohibited by skip.\n\t\t\t\t\t\tx = y - 1;\n\t\t\t\t\t\tif (!skip) {\n\t\t\t\t\t\t\tf <<= 1;\n\t\t\t\t\t\t\tf |= 1;\n\t\t\t\t\t\t\tbits++;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Otherwise, decrement the exponent and unset\n\t\t\t\t\t\t\t// skip, so that all following bits get written.\n\t\t\t\t\t\t\texp--;\n\t\t\t\t\t\t\tskip = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is a new 0-bit. Add and count this bit, if not\n\t\t\t\t\t\t// prohibited by skip.\n\t\t\t\t\t\tx = y;\n\t\t\t\t\t\tif (!skip) {\n\t\t\t\t\t\t\tf <<= 1;\n\t\t\t\t\t\t\tbits++;\n\t\t\t\t\t\t} else if (--exp === 0) {\n\t\t\t\t\t\t\t// Otherwise we've just decremented the exponent. If the\n\t\t\t\t\t\t\t// biased exponent is zero now (-1023), we process a\n\t\t\t\t\t\t\t// subnormal number, which has no impled leading 1-bit.\n\t\t\t\t\t\t\t// So, count this 0-bit and unset skip to write out\n\t\t\t\t\t\t\t// all the following bits.\n\t\t\t\t\t\t\tbits++;\n\t\t\t\t\t\t\tskip = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (bits === 20) {\n\t\t\t\t\t\t// When 20 bits have been created in total, we're done with\n\t\t\t\t\t\t// the high word. Copy the bits from 'buffer' f into high\n\t\t\t\t\t\t// and reset 'buffer' f. Following bits will end up in the\n\t\t\t\t\t\t// low word.\n\t\t\t\t\t\thigh |= f;\n\t\t\t\t\t\tf = 0;\n\t\t\t\t\t} else if (bits === 52) {\n\t\t\t\t\t\t// When 52 bits have been created in total, we're done with\n\t\t\t\t\t\t// low word as well. Copy the bits from 'buffer' f into low\n\t\t\t\t\t\t// and exit the loop.\n\t\t\t\t\t\tlow |= f;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (y === 1) {\n\t\t\t\t\t\t// When y is exactly 1, there is no remainder and the process\n\t\t\t\t\t\t// is complete (the number is finite). Copy the bits from\n\t\t\t\t\t\t// 'buffer' f into either low or high and exit the loop.\n\t\t\t\t\t\tif (bits < 20) {\n\t\t\t\t\t\t\thigh |= (f << (20 - bits));\n\t\t\t\t\t\t} else if (bits < 52) {\n\t\t\t\t\t\t\tlow |= (f << (52 - bits));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Copy/shift the exponent and sign bits into the high word.\n\t\t\thigh |= (exp << 20);\n\t\t\thigh |= sign;\n\t\n\t\t\treturn new Long(high, low);\n\t\t};\n\t\tDouble.longBitsToDouble = function (bits) {\n\t\t\tvar x, sign, exp, fract;\n\t\t\tvar high = bits.high;\n\t\t\tvar low = bits.low;\n\t\n\t\t\t// Extract the sign.\n\t\t\tsign = (high & (1 << 31)) ? -1 : 1;\n\t\n\t\t\t// Extract the unbiased exponent.\n\t\t\texp = ((high & 0x7ff00000) >> 20) - BIAS;\n\t\n\t\t\t// Calculate the fraction from left to right. Start\n\t\t\t// off with the 20 lower bits from the high word.\n\t\t\tfract = 0;\n\t\t\tx = (1 << 19);\n\t\t\tfor (var i = 1; i <= 20; i++) {\n\t\t\t\tif (high & x) {\n\t\t\t\t\tfract += pow(2, -i);\n\t\t\t\t}\n\t\t\t\tx >>>= 1;\n\t\t\t}\n\t\t\t// Continue with all 32 bits from the low word.\n\t\t\tx = (1 << 31);\n\t\t\tfor (var i = 21; i <= 52; i++) {\n\t\t\t\tif (low & x) {\n\t\t\t\t\tfract += pow(2, -i);\n\t\t\t\t}\n\t\t\t\tx >>>= 1;\n\t\t\t}\n\t\n\t\t\t// Handle special values.\n\t\t\t// Check for zero and subnormal values.\n\t\t\tif (exp === -BIAS) {\n\t\t\t\tif (fract === 0) {\n\t\t\t\t\t// +/-1.0 * 0.0 => +/-0.0\n\t\t\t\t\treturn sign * 0;\n\t\t\t\t}\n\t\t\t\texp = -1022;\n\t\t\t}\n\t\t\t// Check for +/-Infinity or NaN.\n\t\t\telse if (exp === BIAS + 1) {\n\t\t\t\tif (fract === 0) {\n\t\t\t\t\t// +/-1.0 / 0.0 => +/-Infinity\n\t\t\t\t\treturn sign / 0;\n\t\t\t\t}\n\t\t\t\treturn NaN;\n\t\t\t}\n\t\t\t// Nothing special? Seems to be a normal number.\n\t\t\telse {\n\t\t\t\t// Add the implicit leading bit (1*2^0).\n\t\t\t\tfract += 1;\n\t\t\t}\n\t\n\t\t\treturn sign * fract * pow(2, exp);\n\t\t};\n\t})();\n}","export default function Comparable () {}\n","export default function Clonable () {}\n","export default function Comparator () {}\n","export default function Serializable () {}\n","export default function RuntimeException (message) {\n  this.name = 'RuntimeException'\n  this.message = message\n  this.stack = (new Error()).stack\n  Error.call(this, message)\n}\n\nRuntimeException.prototype = Object.create(Error.prototype)\nRuntimeException.prototype.constructor = Error\n","export default function (c, p) {\n  c.prototype = Object.create(p.prototype)\n  c.prototype.constructor = c\n}\n","import extend from '../../../../extend';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport inherits from '../../../../inherits';\nexport default function AssertionFailedException() {\n\tif (arguments.length === 0) {\n\t\tRuntimeException.call(this);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tRuntimeException.call(this, message);\n\t}\n}\ninherits(AssertionFailedException, RuntimeException);\nextend(AssertionFailedException.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn AssertionFailedException;\n\t}\n});\n","import extend from '../../../../extend';\nimport AssertionFailedException from './AssertionFailedException';\nexport default function Assert() {}\nextend(Assert.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Assert;\n\t}\n});\nAssert.shouldNeverReachHere = function () {\n\tif (arguments.length === 0) {\n\t\tAssert.shouldNeverReachHere(null);\n\t} else if (arguments.length === 1) {\n\t\tlet message = arguments[0];\n\t\tthrow new AssertionFailedException(\"Should never reach here\" + (message !== null ? \": \" + message : \"\"));\n\t}\n};\nAssert.isTrue = function () {\n\tif (arguments.length === 1) {\n\t\tlet assertion = arguments[0];\n\t\tAssert.isTrue(assertion, null);\n\t} else if (arguments.length === 2) {\n\t\tlet assertion = arguments[0], message = arguments[1];\n\t\tif (!assertion) {\n\t\t\tif (message === null) {\n\t\t\t\tthrow new AssertionFailedException();\n\t\t\t} else {\n\t\t\t\tthrow new AssertionFailedException(message);\n\t\t\t}\n\t\t}\n\t}\n};\nAssert.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1];\n\t\tAssert.equals(expectedValue, actualValue, null);\n\t} else if (arguments.length === 3) {\n\t\tlet expectedValue = arguments[0], actualValue = arguments[1], message = arguments[2];\n\t\tif (!actualValue.equals(expectedValue)) {\n\t\t\tthrow new AssertionFailedException(\"Expected \" + expectedValue + \" but encountered \" + actualValue + (message !== null ? \": \" + message : \"\"));\n\t\t}\n\t}\n};\n","import NumberUtil from '../util/NumberUtil';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Comparator from '../../../../java/util/Comparator';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nexport default function Coordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.z = null;\n\tif (arguments.length === 0) {\n\t\tCoordinate.call(this, 0.0, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet c = arguments[0];\n\t\tCoordinate.call(this, c.x, c.y, c.z);\n\t} else if (arguments.length === 2) {\n\t\tlet x = arguments[0], y = arguments[1];\n\t\tCoordinate.call(this, x, y, Coordinate.NULL_ORDINATE);\n\t} else if (arguments.length === 3) {\n\t\tlet x = arguments[0], y = arguments[1], z = arguments[2];\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t}\n}\nextend(Coordinate.prototype, {\n\tsetOrdinate: function (ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\tthis.x = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Y:\n\t\t\t\tthis.y = value;\n\t\t\t\tbreak;\n\t\t\tcase Coordinate.Z:\n\t\t\t\tthis.z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t\t}\n\t},\n\tequals2D: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tif (this.x !== other.x) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.y !== other.y) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet c = arguments[0], tolerance = arguments[1];\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetOrdinate: function (ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase Coordinate.X:\n\t\t\t\treturn this.x;\n\t\t\tcase Coordinate.Y:\n\t\t\t\treturn this.y;\n\t\t\tcase Coordinate.Z:\n\t\t\t\treturn this.z;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"Invalid ordinate index: \" + ordinateIndex);\n\t},\n\tequals3D: function (other) {\n\t\treturn this.x === other.x && this.y === other.y && (this.z === other.z || Double.isNaN(this.z) && Double.isNaN(other.z));\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Coordinate)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.equals2D(other);\n\t},\n\tequalInZ: function (c, tolerance) {\n\t\treturn NumberUtil.equalsWithTolerance(this.z, c.z, tolerance);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this.x < other.x) return -1;\n\t\tif (this.x > other.x) return 1;\n\t\tif (this.y < other.y) return -1;\n\t\tif (this.y > other.y) return 1;\n\t\treturn 0;\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\tvar coord = null;\n\t\t\treturn coord;\n\t\t} catch (e) {\n\t\t\tif (e instanceof CloneNotSupportedException) {\n\t\t\t\tAssert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\");\n\t\t\t\treturn null;\n\t\t\t} else throw e;\n\t\t} finally {}\n\t},\n\tcopy: function () {\n\t\treturn new Coordinate(this);\n\t},\n\ttoString: function () {\n\t\treturn \"(\" + this.x + \", \" + this.y + \", \" + this.z + \")\";\n\t},\n\tdistance3D: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\tvar dz = this.z - c.z;\n\t\treturn Math.sqrt(dx * dx + dy * dy + dz * dz);\n\t},\n\tdistance: function (c) {\n\t\tvar dx = this.x - c.x;\n\t\tvar dy = this.y - c.y;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this.x);\n\t\tresult = 37 * result + Coordinate.hashCode(this.y);\n\t\treturn result;\n\t},\n\tsetCoordinate: function (other) {\n\t\tthis.x = other.x;\n\t\tthis.y = other.y;\n\t\tthis.z = other.z;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Cloneable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Coordinate;\n\t}\n});\nCoordinate.hashCode = function () {\n\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\tlet x = arguments[0];\n\t\tvar f = Double.doubleToLongBits(x);\n\t\treturn Math.trunc(f ^ f >>> 32);\n\t}\n};\nfunction DimensionalComparator() {\n\tthis._dimensionsToTest = 2;\n\tif (arguments.length === 0) {\n\t\tDimensionalComparator.call(this, 2);\n\t} else if (arguments.length === 1) {\n\t\tlet dimensionsToTest = arguments[0];\n\t\tif (dimensionsToTest !== 2 && dimensionsToTest !== 3) throw new IllegalArgumentException(\"only 2 or 3 dimensions may be specified\");\n\t\tthis._dimensionsToTest = dimensionsToTest;\n\t}\n}\nextend(DimensionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar c1 = o1;\n\t\tvar c2 = o2;\n\t\tvar compX = DimensionalComparator.compare(c1.x, c2.x);\n\t\tif (compX !== 0) return compX;\n\t\tvar compY = DimensionalComparator.compare(c1.y, c2.y);\n\t\tif (compY !== 0) return compY;\n\t\tif (this._dimensionsToTest <= 2) return 0;\n\t\tvar compZ = DimensionalComparator.compare(c1.z, c2.z);\n\t\treturn compZ;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn DimensionalComparator;\n\t}\n});\nDimensionalComparator.compare = function (a, b) {\n\tif (a < b) return -1;\n\tif (a > b) return 1;\n\tif (Double.isNaN(a)) {\n\t\tif (Double.isNaN(b)) return 0;\n\t\treturn -1;\n\t}\n\tif (Double.isNaN(b)) return 1;\n\treturn 0;\n};\nCoordinate.DimensionalComparator = DimensionalComparator;\nCoordinate.serialVersionUID = 6683108902428366910;\nCoordinate.NULL_ORDINATE = Double.NaN;\nCoordinate.X = 0;\nCoordinate.Y = 1;\nCoordinate.Z = 2;\n","export default function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n}\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nexport default function Iterator() {};\n\n/**\n * Returns true if the iteration has more elements.\n * @return {boolean}\n */\nIterator.prototype.hasNext = function() {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function() {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function() {};\n","import Iterator from './Iterator'\n\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nexport default function Collection() {};\n\n/**\n * Ensures that this collection contains the specified element (optional\n * operation).\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.add = function() {};\n\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function() {};\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function() {};\n\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function() {};\n\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function() {};\n\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function() {};\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function IndexOutOfBoundsException(message) {\n  this.message = message || '';\n};\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nexport default function List() { };\nList.prototype = Object.create(Collection.prototype);\nList.prototype.constructor = List\n\n/**\n * Returns the element at the specified position in this list.\n * @param {number} index\n * @return {Object}\n */\nList.prototype.get = function() { };\n\n\n/**\n * Replaces the element at the specified position in this list with the\n * specified element (optional operation).\n * @param {number} index\n * @param {Object} e\n * @return {Object}\n */\nList.prototype.set = function() { };\n\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nList.prototype.isEmpty = function() { };\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function NoSuchElementException(message) {\n  this.message = message || '';\n};\nNoSuchElementException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function OperationNotSupported(message) {\n  this.message = message || '';\n};\nOperationNotSupported.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n","import Collection from './Collection'\nimport IndexOutOfBoundsException from './IndexOutOfBoundsException'\nimport Iterator from './Iterator'\nimport List from './List'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nexport default function ArrayList () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nArrayList.prototype = Object.create(List.prototype)\nArrayList.prototype.constructor = ArrayList;\n\nArrayList.prototype.ensureCapacity = function () {}\nArrayList.prototype.interfaces_ = function () { return [List, Collection] }\n\n/**\n * @override\n */\nArrayList.prototype.add = function(e) {\n  if (arguments.length === 1) {\n    this.array_.push(e)\n  } else {\n    this.array_.splice(arguments[0], 0, arguments[1])\n  }\n  return true\n};\n\nArrayList.prototype.clear = function() {\n  this.array_ = []\n}\n\n/**\n * @override\n */\nArrayList.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.set = function(index, element) {\n  var oldElement = this.array_[index];\n  this.array_[index] = element;\n  return oldElement;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nArrayList.prototype.remove = function(o) {\n  var found = false;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    if (this.array_[i] === o) {\n      this.array_.splice(i, 1);\n      found = true;\n      break;\n    }\n  }\n\n  return found;\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = function(arrayList) {\n  /**\n   * @type {ArrayList}\n   * @private\n  */\n  this.arrayList_ = arrayList;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.arrayList_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.arrayList_.get(this.position_++);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.arrayList_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n/**\n * TODO: should be in ListIterator\n * @override\n */\nIterator_.prototype.set = function(element) {\n  return this.arrayList_.set(this.position_ - 1, element);\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  this.arrayList_.remove(this.arrayList_.get(this.position_));\n};\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill(value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object');\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike;\n    },\n    writable: true\n  });\n}\n","Number.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n}\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n}\n\nNumber.parseFloat = Number.parseFloat || parseFloat\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n}\n","Math.trunc = Math.trunc || function(x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x);\n}\n","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function CoordinateList() {\n\tArrayList.apply(this);\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet coord = arguments[0];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, true);\n\t} else if (arguments.length === 2) {\n\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\tthis.ensureCapacity(coord.length);\n\t\tthis.add(coord, allowRepeated);\n\t}\n}\ninherits(CoordinateList, ArrayList);\nextend(CoordinateList.prototype, {\n\tgetCoordinate: function (i) {\n\t\treturn this.get(i);\n\t},\n\taddAll: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"boolean\" && hasInterface(arguments[0], Collection))) {\n\t\t\tlet coll = arguments[0], allowRepeated = arguments[1];\n\t\t\tvar isChanged = false;\n\t\t\tfor (var i = coll.iterator(); i.hasNext(); ) {\n\t\t\t\tthis.add(i.next(), allowRepeated);\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\treturn isChanged;\n\t\t} else return ArrayList.prototype.addAll.apply(this, arguments);\n\t},\n\tclone: function () {\n\t\tvar clone = ArrayList.prototype.clone.call(this);\n\t\tfor (var i = 0; i < this.size(); i++) {\n\t\t\tclone.add(i, this.get(i).clone());\n\t\t}\n\t\treturn clone;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this.toArray(CoordinateList.coordArrayType);\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet coord = arguments[0];\n\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(coord, allowRepeated, true);\n\t\t\t\treturn true;\n\t\t\t} else if (arguments[0] instanceof Coordinate && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tif (this.size() >= 1) {\n\t\t\t\t\t\tvar last = this.get(this.size() - 1);\n\t\t\t\t\t\tif (last.equals2D(coord)) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, coord);\n\t\t\t} else if (arguments[0] instanceof Object && typeof arguments[1] === \"boolean\") {\n\t\t\t\tlet obj = arguments[0], allowRepeated = arguments[1];\n\t\t\t\tthis.add(obj, allowRepeated);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Array && typeof arguments[1] === \"boolean\")) {\n\t\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], direction = arguments[2];\n\t\t\t\tif (direction) {\n\t\t\t\t\tfor (var i = 0; i < coord.length; i++) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var i = coord.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n\t\t\t\tlet i = arguments[0], coord = arguments[1], allowRepeated = arguments[2];\n\t\t\t\tif (!allowRepeated) {\n\t\t\t\t\tvar size = this.size();\n\t\t\t\t\tif (size > 0) {\n\t\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\t\tvar prev = this.get(i - 1);\n\t\t\t\t\t\t\tif (prev.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (i < size) {\n\t\t\t\t\t\t\tvar next = this.get(i);\n\t\t\t\t\t\t\tif (next.equals2D(coord)) return null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tArrayList.prototype.add.call(this, i, coord);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet coord = arguments[0], allowRepeated = arguments[1], start = arguments[2], end = arguments[3];\n\t\t\tvar inc = 1;\n\t\t\tif (start > end) inc = -1;\n\t\t\tfor (var i = start; i !== end; i += inc) {\n\t\t\t\tthis.add(coord[i], allowRepeated);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t},\n\tcloseRing: function () {\n\t\tif (this.size() > 0) this.add(new Coordinate(this.get(0)), false);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateList;\n\t}\n});\nCoordinateList.coordArrayType = new Array(0).fill(null);\n","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function Envelope() {\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tif (arguments.length === 0) {\n\t\tthis.init();\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\tlet env = arguments[0];\n\t\t\tthis.init(env);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t} else if (arguments.length === 4) {\n\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\tthis.init(x1, x2, y1, y2);\n\t}\n}\nextend(Envelope.prototype, {\n\tgetArea: function () {\n\t\treturn this.getWidth() * this.getHeight();\n\t},\n\tequals: function (other) {\n\t\tif (!(other instanceof Envelope)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherEnvelope = other;\n\t\tif (this.isNull()) {\n\t\t\treturn otherEnvelope.isNull();\n\t\t}\n\t\treturn this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY();\n\t},\n\tintersection: function (env) {\n\t\tif (this.isNull() || env.isNull() || !this.intersects(env)) return new Envelope();\n\t\tvar intMinX = this._minx > env._minx ? this._minx : env._minx;\n\t\tvar intMinY = this._miny > env._miny ? this._miny : env._miny;\n\t\tvar intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n\t\tvar intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n\t\treturn new Envelope(intMinX, intMaxX, intMinY, intMaxY);\n\t},\n\tisNull: function () {\n\t\treturn this._maxx < this._minx;\n\t},\n\tgetMaxX: function () {\n\t\treturn this._maxx;\n\t},\n\tcovers: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) return false;\n\t\t\treturn x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy;\n\t\t}\n\t},\n\tintersects: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (this.isNull() || other.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.intersects(p.x, p.y);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\t\tlet a = arguments[0], b = arguments[1];\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvar envminx = a.x < b.x ? a.x : b.x;\n\t\t\t\tif (envminx > this._maxx) return false;\n\t\t\t\tvar envmaxx = a.x > b.x ? a.x : b.x;\n\t\t\t\tif (envmaxx < this._minx) return false;\n\t\t\t\tvar envminy = a.y < b.y ? a.y : b.y;\n\t\t\t\tif (envminy > this._maxy) return false;\n\t\t\t\tvar envmaxy = a.y > b.y ? a.y : b.y;\n\t\t\t\tif (envmaxy < this._miny) return false;\n\t\t\t\treturn true;\n\t\t\t} else if (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\t\tif (this.isNull()) return false;\n\t\t\t\treturn !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny);\n\t\t\t}\n\t\t}\n\t},\n\tgetMinY: function () {\n\t\treturn this._miny;\n\t},\n\tgetMinX: function () {\n\t\treturn this._minx;\n\t},\n\texpandToInclude: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.expandToInclude(p.x, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\tif (other.isNull()) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (this.isNull()) {\n\t\t\t\t\tthis._minx = other.getMinX();\n\t\t\t\t\tthis._maxx = other.getMaxX();\n\t\t\t\t\tthis._miny = other.getMinY();\n\t\t\t\t\tthis._maxy = other.getMaxY();\n\t\t\t\t} else {\n\t\t\t\t\tif (other._minx < this._minx) {\n\t\t\t\t\t\tthis._minx = other._minx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxx > this._maxx) {\n\t\t\t\t\t\tthis._maxx = other._maxx;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._miny < this._miny) {\n\t\t\t\t\t\tthis._miny = other._miny;\n\t\t\t\t\t}\n\t\t\t\t\tif (other._maxy > this._maxy) {\n\t\t\t\t\t\tthis._maxy = other._maxy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\tif (this.isNull()) {\n\t\t\t\tthis._minx = x;\n\t\t\t\tthis._maxx = x;\n\t\t\t\tthis._miny = y;\n\t\t\t\tthis._maxy = y;\n\t\t\t} else {\n\t\t\t\tif (x < this._minx) {\n\t\t\t\t\tthis._minx = x;\n\t\t\t\t}\n\t\t\t\tif (x > this._maxx) {\n\t\t\t\t\tthis._maxx = x;\n\t\t\t\t}\n\t\t\t\tif (y < this._miny) {\n\t\t\t\t\tthis._miny = y;\n\t\t\t\t}\n\t\t\t\tif (y > this._maxy) {\n\t\t\t\t\tthis._maxy = y;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tminExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w < h) return w;\n\t\treturn h;\n\t},\n\tgetWidth: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxx - this._minx;\n\t},\n\tcompareTo: function (o) {\n\t\tvar env = o;\n\t\tif (this.isNull()) {\n\t\t\tif (env.isNull()) return 0;\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (env.isNull()) return 1;\n\t\t}\n\t\tif (this._minx < env._minx) return -1;\n\t\tif (this._minx > env._minx) return 1;\n\t\tif (this._miny < env._miny) return -1;\n\t\tif (this._miny > env._miny) return 1;\n\t\tif (this._maxx < env._maxx) return -1;\n\t\tif (this._maxx > env._maxx) return 1;\n\t\tif (this._maxy < env._maxy) return -1;\n\t\tif (this._maxy > env._maxy) return 1;\n\t\treturn 0;\n\t},\n\ttranslate: function (transX, transY) {\n\t\tif (this.isNull()) {\n\t\t\treturn null;\n\t\t}\n\t\tthis.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n\t},\n\ttoString: function () {\n\t\treturn \"Env[\" + this._minx + \" : \" + this._maxx + \", \" + this._miny + \" : \" + this._maxy + \"]\";\n\t},\n\tsetToNull: function () {\n\t\tthis._minx = 0;\n\t\tthis._maxx = -1;\n\t\tthis._miny = 0;\n\t\tthis._maxy = -1;\n\t},\n\tgetHeight: function () {\n\t\tif (this.isNull()) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this._maxy - this._miny;\n\t},\n\tmaxExtent: function () {\n\t\tif (this.isNull()) return 0.0;\n\t\tvar w = this.getWidth();\n\t\tvar h = this.getHeight();\n\t\tif (w > h) return w;\n\t\treturn h;\n\t},\n\texpandBy: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\tthis.expandBy(distance, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deltaX = arguments[0], deltaY = arguments[1];\n\t\t\tif (this.isNull()) return null;\n\t\t\tthis._minx -= deltaX;\n\t\t\tthis._maxx += deltaX;\n\t\t\tthis._miny -= deltaY;\n\t\t\tthis._maxy += deltaY;\n\t\t\tif (this._minx > this._maxx || this._miny > this._maxy) this.setToNull();\n\t\t}\n\t},\n\tcontains: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Envelope) {\n\t\t\t\tlet other = arguments[0];\n\t\t\t\treturn this.covers(other);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this.covers(p);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet x = arguments[0], y = arguments[1];\n\t\t\treturn this.covers(x, y);\n\t\t}\n\t},\n\tcentre: function () {\n\t\tif (this.isNull()) return null;\n\t\treturn new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0);\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.setToNull();\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\tthis.init(p.x, p.x, p.y, p.y);\n\t\t\t} else if (arguments[0] instanceof Envelope) {\n\t\t\t\tlet env = arguments[0];\n\t\t\t\tthis._minx = env._minx;\n\t\t\t\tthis._maxx = env._maxx;\n\t\t\t\tthis._miny = env._miny;\n\t\t\t\tthis._maxy = env._maxy;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.init(p1.x, p2.x, p1.y, p2.y);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet x1 = arguments[0], x2 = arguments[1], y1 = arguments[2], y2 = arguments[3];\n\t\t\tif (x1 < x2) {\n\t\t\t\tthis._minx = x1;\n\t\t\t\tthis._maxx = x2;\n\t\t\t} else {\n\t\t\t\tthis._minx = x2;\n\t\t\t\tthis._maxx = x1;\n\t\t\t}\n\t\t\tif (y1 < y2) {\n\t\t\t\tthis._miny = y1;\n\t\t\t\tthis._maxy = y2;\n\t\t\t} else {\n\t\t\t\tthis._miny = y2;\n\t\t\t\tthis._maxy = y1;\n\t\t\t}\n\t\t}\n\t},\n\tgetMaxY: function () {\n\t\treturn this._maxy;\n\t},\n\tdistance: function (env) {\n\t\tif (this.intersects(env)) return 0;\n\t\tvar dx = 0.0;\n\t\tif (this._maxx < env._minx) dx = env._minx - this._maxx; else if (this._minx > env._maxx) dx = this._minx - env._maxx;\n\t\tvar dy = 0.0;\n\t\tif (this._maxy < env._miny) dy = env._miny - this._maxy; else if (this._miny > env._maxy) dy = this._miny - env._maxy;\n\t\tif (dx === 0.0) return dy;\n\t\tif (dy === 0.0) return dx;\n\t\treturn Math.sqrt(dx * dx + dy * dy);\n\t},\n\thashCode: function () {\n\t\tvar result = 17;\n\t\tresult = 37 * result + Coordinate.hashCode(this._minx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxx);\n\t\tresult = 37 * result + Coordinate.hashCode(this._miny);\n\t\tresult = 37 * result + Coordinate.hashCode(this._maxy);\n\t\treturn result;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Envelope;\n\t}\n});\nEnvelope.intersects = function () {\n\tif (arguments.length === 3) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q = arguments[2];\n\t\tif (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar minq = Math.min(q1.x, q2.x);\n\t\tvar maxq = Math.max(q1.x, q2.x);\n\t\tvar minp = Math.min(p1.x, p2.x);\n\t\tvar maxp = Math.max(p1.x, p2.x);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\tminq = Math.min(q1.y, q2.y);\n\t\tmaxq = Math.max(q1.y, q2.y);\n\t\tminp = Math.min(p1.y, p2.y);\n\t\tmaxp = Math.max(p1.y, p2.y);\n\t\tif (minp > maxq) return false;\n\t\tif (maxp < minq) return false;\n\t\treturn true;\n\t}\n};\nEnvelope.serialVersionUID = 5873921885273102420;\n","export default function Exception () {}\n","import extend from '../../../../extend';\nimport Exception from '../../../../java/lang/Exception';\nimport inherits from '../../../../inherits';\nexport default function NotRepresentableException() {\n\tException.call(this, \"Projective point not representable on the Cartesian plane.\");\n}\ninherits(NotRepresentableException, Exception);\nextend(NotRepresentableException.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NotRepresentableException;\n\t}\n});\n","export default function StringBuffer (str) {\n  this.str = str\n}\n\nStringBuffer.prototype.append = function (e) {\n  this.str += e\n}\n\nStringBuffer.prototype.setCharAt = function (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n}\n\nStringBuffer.prototype.toString = function (e) {\n  return this.str\n}\n","export default function Integer (value) {\n  this.value = value\n}\n\nInteger.prototype.intValue = function () {\n  return this.value\n}\nInteger.prototype.compareTo = function (o) {\n  if (this.value < o) return -1\n  if (this.value > o) return 1\n  return 0\n}\n\nInteger.isNaN = n => Number.isNaN(n)\n","export default function Character () {}\nCharacter.isWhitespace = c => ((c <= 32 && c >= 0) || c == 127)\nCharacter.toUpperCase = c => c.toUpperCase()\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Character from '../../../../java/lang/Character';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function DD() {\n\tthis._hi = 0.0;\n\tthis._lo = 0.0;\n\tif (arguments.length === 0) {\n\t\tthis.init(0.0);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet x = arguments[0];\n\t\t\tthis.init(x);\n\t\t} else if (arguments[0] instanceof DD) {\n\t\t\tlet dd = arguments[0];\n\t\t\tthis.init(dd);\n\t\t} else if (typeof arguments[0] === \"string\") {\n\t\t\tlet str = arguments[0];\n\t\t\tDD.call(this, DD.parse(str));\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet hi = arguments[0], lo = arguments[1];\n\t\tthis.init(hi, lo);\n\t}\n}\nextend(DD.prototype, {\n\tle: function (y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo <= y._lo;\n\t},\n\textractSignificantDigits: function (insertDecimalPoint, magnitude) {\n\t\tvar y = this.abs();\n\t\tvar mag = DD.magnitude(y._hi);\n\t\tvar scale = DD.TEN.pow(mag);\n\t\ty = y.divide(scale);\n\t\tif (y.gt(DD.TEN)) {\n\t\t\ty = y.divide(DD.TEN);\n\t\t\tmag += 1;\n\t\t} else if (y.lt(DD.ONE)) {\n\t\t\ty = y.multiply(DD.TEN);\n\t\t\tmag -= 1;\n\t\t}\n\t\tvar decimalPointPos = mag + 1;\n\t\tvar buf = new StringBuffer();\n\t\tvar numDigits = DD.MAX_PRINT_DIGITS - 1;\n\t\tfor (var i = 0; i <= numDigits; i++) {\n\t\t\tif (insertDecimalPoint && i === decimalPointPos) {\n\t\t\t\tbuf.append('.');\n\t\t\t}\n\t\t\tvar digit = Math.trunc(y._hi);\n\t\t\tif (digit < 0 || digit > 9) {}\n\t\t\tif (digit < 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tvar rebiasBy10 = false;\n\t\t\tvar digitChar = 0;\n\t\t\tif (digit > 9) {\n\t\t\t\trebiasBy10 = true;\n\t\t\t\tdigitChar = '9';\n\t\t\t} else {\n\t\t\t\tdigitChar = '0' + digit;\n\t\t\t}\n\t\t\tbuf.append(digitChar);\n\t\t\ty = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n\t\t\tif (rebiasBy10) y.selfAdd(DD.TEN);\n\t\t\tvar continueExtractingDigits = true;\n\t\t\tvar remMag = DD.magnitude(y._hi);\n\t\t\tif (remMag < 0 && Math.abs(remMag) >= numDigits - i) continueExtractingDigits = false;\n\t\t\tif (!continueExtractingDigits) break;\n\t\t}\n\t\tmagnitude[0] = mag;\n\t\treturn buf.toString();\n\t},\n\tsqr: function () {\n\t\treturn this.multiply(this);\n\t},\n\tdoubleValue: function () {\n\t\treturn this._hi + this._lo;\n\t},\n\tsubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(y.negate());\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this.add(-y);\n\t\t}\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn this._hi === y._hi && this._lo === y._lo;\n\t\t}\n\t},\n\tisZero: function () {\n\t\treturn this._hi === 0.0 && this._lo === 0.0;\n\t},\n\tselfSubtract: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y._hi, -y._lo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (this.isNaN()) return this;\n\t\t\treturn this.selfAdd(-y, 0.0);\n\t\t}\n\t},\n\tgetSpecialNumberString: function () {\n\t\tif (this.isZero()) return \"0.0\";\n\t\tif (this.isNaN()) return \"NaN \";\n\t\treturn null;\n\t},\n\tmin: function (x) {\n\t\tif (this.le(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tselfDivide: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfDivide(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / yhi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * yhi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - yhi;\n\t\t\tU = C * yhi;\n\t\t\thy = u - hy;\n\t\t\tty = yhi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * ylo) / yhi;\n\t\t\tu = C + c;\n\t\t\tthis._hi = u;\n\t\t\tthis._lo = C - u + c;\n\t\t\treturn this;\n\t\t}\n\t},\n\tdump: function () {\n\t\treturn \"DD<\" + this._hi + \", \" + this._lo + \">\";\n\t},\n\tdivide: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\t\tC = this._hi / y._hi;\n\t\t\tc = DD.SPLIT * C;\n\t\t\thc = c - C;\n\t\t\tu = DD.SPLIT * y._hi;\n\t\t\thc = c - hc;\n\t\t\ttc = C - hc;\n\t\t\thy = u - y._hi;\n\t\t\tU = C * y._hi;\n\t\t\thy = u - hy;\n\t\t\tty = y._hi - hy;\n\t\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\t\tc = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n\t\t\tu = C + c;\n\t\t\tvar zhi = u;\n\t\t\tvar zlo = C - u + c;\n\t\t\treturn new DD(zhi, zlo);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfDivide(y, 0.0);\n\t\t}\n\t},\n\tge: function (y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo >= y._lo;\n\t},\n\tpow: function (exp) {\n\t\tif (exp === 0.0) return DD.valueOf(1.0);\n\t\tvar r = new DD(this);\n\t\tvar s = DD.valueOf(1.0);\n\t\tvar n = Math.abs(exp);\n\t\tif (n > 1) {\n\t\t\twhile (n > 0) {\n\t\t\t\tif (n % 2 === 1) {\n\t\t\t\t\ts.selfMultiply(r);\n\t\t\t\t}\n\t\t\t\tn /= 2;\n\t\t\t\tif (n > 0) r = r.sqr();\n\t\t\t}\n\t\t} else {\n\t\t\ts = r;\n\t\t}\n\t\tif (exp < 0) return s.reciprocal();\n\t\treturn s;\n\t},\n\tceil: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.ceil(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.ceil(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this._hi < other._hi) return -1;\n\t\tif (this._hi > other._hi) return 1;\n\t\tif (this._lo < other._lo) return -1;\n\t\tif (this._lo > other._lo) return 1;\n\t\treturn 0;\n\t},\n\trint: function () {\n\t\tif (this.isNaN()) return this;\n\t\tvar plus5 = this.add(0.5);\n\t\treturn plus5.floor();\n\t},\n\tsetValue: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet value = arguments[0];\n\t\t\tthis.init(value);\n\t\t\treturn this;\n\t\t}\n\t},\n\tmax: function (x) {\n\t\tif (this.ge(x)) {\n\t\t\treturn this;\n\t\t} else {\n\t\t\treturn x;\n\t\t}\n\t},\n\tsqrt: function () {\n\t\tif (this.isZero()) return DD.valueOf(0.0);\n\t\tif (this.isNegative()) {\n\t\t\treturn DD.NaN;\n\t\t}\n\t\tvar x = 1.0 / Math.sqrt(this._hi);\n\t\tvar ax = this._hi * x;\n\t\tvar axdd = DD.valueOf(ax);\n\t\tvar diffSq = this.subtract(axdd.sqr());\n\t\tvar d2 = diffSq._hi * (x * 0.5);\n\t\treturn axdd.add(d2);\n\t},\n\tselfAdd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfAdd(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\tvar H = null, h = null, S = null, s = null, e = null, f = null;\n\t\t\t\tS = this._hi + y;\n\t\t\t\te = S - this._hi;\n\t\t\t\ts = S - e;\n\t\t\t\ts = y - e + (this._hi - s);\n\t\t\t\tf = s + this._lo;\n\t\t\t\tH = S + f;\n\t\t\t\th = f + (S - H);\n\t\t\t\tthis._hi = H + h;\n\t\t\t\tthis._lo = h + (H - this._hi);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar H = null, h = null, T = null, t = null, S = null, s = null, e = null, f = null;\n\t\t\tS = this._hi + yhi;\n\t\t\tT = this._lo + ylo;\n\t\t\te = S - this._hi;\n\t\t\tf = T - this._lo;\n\t\t\ts = S - e;\n\t\t\tt = T - f;\n\t\t\ts = yhi - e + (this._hi - s);\n\t\t\tt = ylo - f + (this._lo - t);\n\t\t\te = s + T;\n\t\t\tH = S + e;\n\t\t\th = e + (S - H);\n\t\t\te = t + h;\n\t\t\tvar zhi = H + e;\n\t\t\tvar zlo = e + (H - zhi);\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfMultiply: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof DD) {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y._hi, y._lo);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet y = arguments[0];\n\t\t\t\treturn this.selfMultiply(y, 0.0);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet yhi = arguments[0], ylo = arguments[1];\n\t\t\tvar hx = null, tx = null, hy = null, ty = null, C = null, c = null;\n\t\t\tC = DD.SPLIT * this._hi;\n\t\t\thx = C - this._hi;\n\t\t\tc = DD.SPLIT * yhi;\n\t\t\thx = C - hx;\n\t\t\ttx = this._hi - hx;\n\t\t\thy = c - yhi;\n\t\t\tC = this._hi * yhi;\n\t\t\thy = c - hy;\n\t\t\tty = yhi - hy;\n\t\t\tc = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n\t\t\tvar zhi = C + c;\n\t\t\thx = C - zhi;\n\t\t\tvar zlo = c + hx;\n\t\t\tthis._hi = zhi;\n\t\t\tthis._lo = zlo;\n\t\t\treturn this;\n\t\t}\n\t},\n\tselfSqr: function () {\n\t\treturn this.selfMultiply(this);\n\t},\n\tfloor: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tvar fhi = Math.floor(this._hi);\n\t\tvar flo = 0.0;\n\t\tif (fhi === this._hi) {\n\t\t\tflo = Math.floor(this._lo);\n\t\t}\n\t\treturn new DD(fhi, flo);\n\t},\n\tnegate: function () {\n\t\tif (this.isNaN()) return this;\n\t\treturn new DD(-this._hi, -this._lo);\n\t},\n\tclone: function () {\n\t\ttry {\n\t\t\treturn null;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof CloneNotSupportedException) {\n\t\t\t\treturn null;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tmultiply: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\tif (y.isNaN()) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\tif (Double.isNaN(y)) return DD.createNaN();\n\t\t\treturn DD.copy(this).selfMultiply(y, 0.0);\n\t\t}\n\t},\n\tisNaN: function () {\n\t\treturn Double.isNaN(this._hi);\n\t},\n\tintValue: function () {\n\t\treturn Math.trunc(this._hi);\n\t},\n\ttoString: function () {\n\t\tvar mag = DD.magnitude(this._hi);\n\t\tif (mag >= -3 && mag <= 20) return this.toStandardNotation();\n\t\treturn this.toSciNotation();\n\t},\n\ttoStandardNotation: function () {\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar sigDigits = this.extractSignificantDigits(true, magnitude);\n\t\tvar decimalPointPos = magnitude[0] + 1;\n\t\tvar num = sigDigits;\n\t\tif (sigDigits.charAt(0) === '.') {\n\t\t\tnum = \"0\" + sigDigits;\n\t\t} else if (decimalPointPos < 0) {\n\t\t\tnum = \"0.\" + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n\t\t} else if (sigDigits.indexOf('.') === -1) {\n\t\t\tvar numZeroes = decimalPointPos - sigDigits.length;\n\t\t\tvar zeroes = DD.stringOfChar('0', numZeroes);\n\t\t\tnum = sigDigits + zeroes + \".0\";\n\t\t}\n\t\tif (this.isNegative()) return \"-\" + num;\n\t\treturn num;\n\t},\n\treciprocal: function () {\n\t\tvar hc = null, tc = null, hy = null, ty = null, C = null, c = null, U = null, u = null;\n\t\tC = 1.0 / this._hi;\n\t\tc = DD.SPLIT * C;\n\t\thc = c - C;\n\t\tu = DD.SPLIT * this._hi;\n\t\thc = c - hc;\n\t\ttc = C - hc;\n\t\thy = u - this._hi;\n\t\tU = C * this._hi;\n\t\thy = u - hy;\n\t\tty = this._hi - hy;\n\t\tu = hc * hy - U + hc * ty + tc * hy + tc * ty;\n\t\tc = (1.0 - U - u - C * this._lo) / this._hi;\n\t\tvar zhi = C + c;\n\t\tvar zlo = C - zhi + c;\n\t\treturn new DD(zhi, zlo);\n\t},\n\ttoSciNotation: function () {\n\t\tif (this.isZero()) return DD.SCI_NOT_ZERO;\n\t\tvar specialStr = this.getSpecialNumberString();\n\t\tif (specialStr !== null) return specialStr;\n\t\tvar magnitude = new Array(1).fill(null);\n\t\tvar digits = this.extractSignificantDigits(false, magnitude);\n\t\tvar expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n\t\tif (digits.charAt(0) === '0') {\n\t\t\tthrow new IllegalStateException(\"Found leading zero: \" + digits);\n\t\t}\n\t\tvar trailingDigits = \"\";\n\t\tif (digits.length > 1) trailingDigits = digits.substring(1);\n\t\tvar digitsWithDecimal = digits.charAt(0) + \".\" + trailingDigits;\n\t\tif (this.isNegative()) return \"-\" + digitsWithDecimal + expStr;\n\t\treturn digitsWithDecimal + expStr;\n\t},\n\tabs: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isNegative()) return this.negate();\n\t\treturn new DD(this);\n\t},\n\tisPositive: function () {\n\t\treturn this._hi > 0.0 || this._hi === 0.0 && this._lo > 0.0;\n\t},\n\tlt: function (y) {\n\t\treturn this._hi < y._hi || this._hi === y._hi && this._lo < y._lo;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof DD) {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet y = arguments[0];\n\t\t\treturn DD.copy(this).selfAdd(y);\n\t\t}\n\t},\n\tinit: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\tthis._hi = x;\n\t\t\t\tthis._lo = 0.0;\n\t\t\t} else if (arguments[0] instanceof DD) {\n\t\t\t\tlet dd = arguments[0];\n\t\t\t\tthis._hi = dd._hi;\n\t\t\t\tthis._lo = dd._lo;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet hi = arguments[0], lo = arguments[1];\n\t\t\tthis._hi = hi;\n\t\t\tthis._lo = lo;\n\t\t}\n\t},\n\tgt: function (y) {\n\t\treturn this._hi > y._hi || this._hi === y._hi && this._lo > y._lo;\n\t},\n\tisNegative: function () {\n\t\treturn this._hi < 0.0 || this._hi === 0.0 && this._lo < 0.0;\n\t},\n\ttrunc: function () {\n\t\tif (this.isNaN()) return DD.NaN;\n\t\tif (this.isPositive()) return this.floor(); else return this.ceil();\n\t},\n\tsignum: function () {\n\t\tif (this._hi > 0) return 1;\n\t\tif (this._hi < 0) return -1;\n\t\tif (this._lo > 0) return 1;\n\t\tif (this._lo < 0) return -1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable, Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn DD;\n\t}\n});\nDD.sqr = function (x) {\n\treturn DD.valueOf(x).selfMultiply(x);\n};\nDD.valueOf = function () {\n\tif (typeof arguments[0] === \"string\") {\n\t\tlet str = arguments[0];\n\t\treturn DD.parse(str);\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tlet x = arguments[0];\n\t\treturn new DD(x);\n\t}\n};\nDD.sqrt = function (x) {\n\treturn DD.valueOf(x).sqrt();\n};\nDD.parse = function (str) {\n\tvar i = 0;\n\tvar strlen = str.length;\n\twhile (Character.isWhitespace(str.charAt(i))) i++;\n\tvar isNegative = false;\n\tif (i < strlen) {\n\t\tvar signCh = str.charAt(i);\n\t\tif (signCh === '-' || signCh === '+') {\n\t\t\ti++;\n\t\t\tif (signCh === '-') isNegative = true;\n\t\t}\n\t}\n\tvar val = new DD();\n\tvar numDigits = 0;\n\tvar numBeforeDec = 0;\n\tvar exp = 0;\n\twhile (true) {\n\t\tif (i >= strlen) break;\n\t\tvar ch = str.charAt(i);\n\t\ti++;\n\t\tif (Character.isDigit(ch)) {\n\t\t\tvar d = ch - '0';\n\t\t\tval.selfMultiply(DD.TEN);\n\t\t\tval.selfAdd(d);\n\t\t\tnumDigits++;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === '.') {\n\t\t\tnumBeforeDec = numDigits;\n\t\t\tcontinue;\n\t\t}\n\t\tif (ch === 'e' || ch === 'E') {\n\t\t\tvar expStr = str.substring(i);\n\t\t\ttry {\n\t\t\t\texp = Integer.parseInt(expStr);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof NumberFormatException) {\n\t\t\t\t\tthrow new NumberFormatException(\"Invalid exponent \" + expStr + \" in string \" + str);\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t\tbreak;\n\t\t}\n\t\tthrow new NumberFormatException(\"Unexpected character '\" + ch + \"' at position \" + i + \" in string \" + str);\n\t}\n\tvar val2 = val;\n\tvar numDecPlaces = numDigits - numBeforeDec - exp;\n\tif (numDecPlaces === 0) {\n\t\tval2 = val;\n\t} else if (numDecPlaces > 0) {\n\t\tvar scale = DD.TEN.pow(numDecPlaces);\n\t\tval2 = val.divide(scale);\n\t} else if (numDecPlaces < 0) {\n\t\tvar scale = DD.TEN.pow(-numDecPlaces);\n\t\tval2 = val.multiply(scale);\n\t}\n\tif (isNegative) {\n\t\treturn val2.negate();\n\t}\n\treturn val2;\n};\nDD.createNaN = function () {\n\treturn new DD(Double.NaN, Double.NaN);\n};\nDD.copy = function (dd) {\n\treturn new DD(dd);\n};\nDD.magnitude = function (x) {\n\tvar xAbs = Math.abs(x);\n\tvar xLog10 = Math.log(xAbs) / Math.log(10);\n\tvar xMag = Math.trunc(Math.floor(xLog10));\n\tvar xApprox = Math.pow(10, xMag);\n\tif (xApprox * 10 <= xAbs) xMag += 1;\n\treturn xMag;\n};\nDD.stringOfChar = function (ch, len) {\n\tvar buf = new StringBuffer();\n\tfor (var i = 0; i < len; i++) {\n\t\tbuf.append(ch);\n\t}\n\treturn buf.toString();\n};\nDD.PI = new DD(3.141592653589793116e+00, 1.224646799147353207e-16);\nDD.TWO_PI = new DD(6.283185307179586232e+00, 2.449293598294706414e-16);\nDD.PI_2 = new DD(1.570796326794896558e+00, 6.123233995736766036e-17);\nDD.E = new DD(2.718281828459045091e+00, 1.445646891729250158e-16);\nDD.NaN = new DD(Double.NaN, Double.NaN);\nDD.EPS = 1.23259516440783e-32;\nDD.SPLIT = 134217729.0;\nDD.MAX_PRINT_DIGITS = 32;\nDD.TEN = DD.valueOf(10.0);\nDD.ONE = DD.valueOf(1.0);\nDD.SCI_NOT_EXPONENT_CHAR = \"E\";\nDD.SCI_NOT_ZERO = \"0.0E0\";\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport DD from '../math/DD';\nexport default function CGAlgorithmsDD() {}\nextend(CGAlgorithmsDD.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CGAlgorithmsDD;\n\t}\n});\nCGAlgorithmsDD.orientationIndex = function (p1, p2, q) {\n\tvar index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n\tif (index <= 1) return index;\n\tvar dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n\tvar dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n\tvar dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n\tvar dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n\treturn dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum();\n};\nCGAlgorithmsDD.signOfDet2x2 = function () {\n\tif (arguments[0] instanceof DD) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], x2 = arguments[2], y2 = arguments[3];\n\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\treturn det.signum();\n\t} else if (typeof arguments[0] === \"number\") {\n\t\tlet dx1 = arguments[0], dy1 = arguments[1], dx2 = arguments[2], dy2 = arguments[3];\n\t\tvar x1 = DD.valueOf(dx1);\n\t\tvar y1 = DD.valueOf(dy1);\n\t\tvar x2 = DD.valueOf(dx2);\n\t\tvar y2 = DD.valueOf(dy2);\n\t\tvar det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n\t\treturn det.signum();\n\t}\n};\nCGAlgorithmsDD.intersection = function (p1, p2, q1, q2) {\n\tvar denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n\tvar denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n\tvar denom = denom1.subtract(denom2);\n\tvar numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numx = numx1.subtract(numx2);\n\tvar fracP = numx.selfDivide(denom).doubleValue();\n\tvar x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n\tvar numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n\tvar numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n\tvar numy = numy1.subtract(numy2);\n\tvar fracQ = numy.selfDivide(denom).doubleValue();\n\tvar y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n\treturn new Coordinate(x, y);\n};\nCGAlgorithmsDD.orientationIndexFilter = function (pa, pb, pc) {\n\tvar detsum = null;\n\tvar detleft = (pa.x - pc.x) * (pb.y - pc.y);\n\tvar detright = (pa.y - pc.y) * (pb.x - pc.x);\n\tvar det = detleft - detright;\n\tif (detleft > 0.0) {\n\t\tif (detright <= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = detleft + detright;\n\t\t}\n\t} else if (detleft < 0.0) {\n\t\tif (detright >= 0.0) {\n\t\t\treturn CGAlgorithmsDD.signum(det);\n\t\t} else {\n\t\t\tdetsum = -detleft - detright;\n\t\t}\n\t} else {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\tvar errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n\tif (det >= errbound || -det >= errbound) {\n\t\treturn CGAlgorithmsDD.signum(det);\n\t}\n\treturn 2;\n};\nCGAlgorithmsDD.signum = function (x) {\n\tif (x > 0) return 1;\n\tif (x < 0) return -1;\n\treturn 0;\n};\nCGAlgorithmsDD.DP_SAFE_EPSILON = 1e-15;\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nexport default function Orientation() {}\nextend(Orientation.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Orientation;\n\t}\n});\nOrientation.index = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nOrientation.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = Orientation.index(prev, hiPt, next);\n\tvar isCCW = null;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nOrientation.CLOCKWISE = -1;\nOrientation.RIGHT = Orientation.CLOCKWISE;\nOrientation.COUNTERCLOCKWISE = 1;\nOrientation.LEFT = Orientation.COUNTERCLOCKWISE;\nOrientation.COLLINEAR = 0;\nOrientation.STRAIGHT = Orientation.COLLINEAR;\n","export default function System () { }\n\nSystem.arraycopy = (src, srcPos, dest, destPos, len) => {\n  let c = 0\n  for (let i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i]\n    c++\n  }\n}\n\nSystem.getProperty = (name) => {\n  return {\n    'line.separator': '\\n'\n  }[name]\n}\n","import NotRepresentableException from './NotRepresentableException';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function HCoordinate() {\n\tthis.x = null;\n\tthis.y = null;\n\tthis.w = null;\n\tif (arguments.length === 0) {\n\t\tthis.x = 0.0;\n\t\tthis.y = 0.0;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 1) {\n\t\tlet p = arguments[0];\n\t\tthis.x = p.x;\n\t\tthis.y = p.y;\n\t\tthis.w = 1.0;\n\t} else if (arguments.length === 2) {\n\t\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\t\tlet _x = arguments[0], _y = arguments[1];\n\t\t\tthis.x = _x;\n\t\t\tthis.y = _y;\n\t\t\tthis.w = 1.0;\n\t\t} else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y * p2.w - p2.y * p1.w;\n\t\t\tthis.y = p2.x * p1.w - p1.x * p2.w;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\t\tlet p1 = arguments[0], p2 = arguments[1];\n\t\t\tthis.x = p1.y - p2.y;\n\t\t\tthis.y = p2.x - p1.x;\n\t\t\tthis.w = p1.x * p2.y - p2.x * p1.y;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _w = arguments[2];\n\t\tthis.x = _x;\n\t\tthis.y = _y;\n\t\tthis.w = _w;\n\t} else if (arguments.length === 4) {\n\t\tlet p1 = arguments[0], p2 = arguments[1], q1 = arguments[2], q2 = arguments[3];\n\t\tvar px = p1.y - p2.y;\n\t\tvar py = p2.x - p1.x;\n\t\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\t\tvar qx = q1.y - q2.y;\n\t\tvar qy = q2.x - q1.x;\n\t\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\t\tthis.x = py * qw - qy * pw;\n\t\tthis.y = qx * pw - px * qw;\n\t\tthis.w = px * qy - qx * py;\n\t}\n}\nextend(HCoordinate.prototype, {\n\tgetY: function () {\n\t\tvar a = this.y / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetX: function () {\n\t\tvar a = this.x / this.w;\n\t\tif (Double.isNaN(a) || Double.isInfinite(a)) {\n\t\t\tthrow new NotRepresentableException();\n\t\t}\n\t\treturn a;\n\t},\n\tgetCoordinate: function () {\n\t\tvar p = new Coordinate();\n\t\tp.x = this.getX();\n\t\tp.y = this.getY();\n\t\treturn p;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HCoordinate;\n\t}\n});\nHCoordinate.intersection = function (p1, p2, q1, q2) {\n\tvar px = p1.y - p2.y;\n\tvar py = p2.x - p1.x;\n\tvar pw = p1.x * p2.y - p2.x * p1.y;\n\tvar qx = q1.y - q2.y;\n\tvar qy = q2.x - q1.x;\n\tvar qw = q1.x * q2.y - q2.x * q1.y;\n\tvar x = py * qw - qy * pw;\n\tvar y = qx * pw - px * qw;\n\tvar w = px * qy - qx * py;\n\tvar xInt = x / w;\n\tvar yInt = y / w;\n\tif (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n\t\tthrow new NotRepresentableException();\n\t}\n\treturn new Coordinate(xInt, yInt);\n};\n","import Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nexport default function MathUtil() {}\nextend(MathUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MathUtil;\n\t}\n});\nMathUtil.log10 = function (x) {\n\tvar ln = Math.log(x);\n\tif (Double.isInfinite(ln)) return ln;\n\tif (Double.isNaN(ln)) return ln;\n\treturn ln / MathUtil.LOG_10;\n};\nMathUtil.min = function (v1, v2, v3, v4) {\n\tvar min = v1;\n\tif (v2 < min) min = v2;\n\tif (v3 < min) min = v3;\n\tif (v4 < min) min = v4;\n\treturn min;\n};\nMathUtil.clamp = function () {\n\tif (typeof arguments[2] === \"number\" && (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\")) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t} else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n\t\tlet x = arguments[0], min = arguments[1], max = arguments[2];\n\t\tif (x < min) return min;\n\t\tif (x > max) return max;\n\t\treturn x;\n\t}\n};\nMathUtil.wrap = function (index, max) {\n\tif (index < 0) {\n\t\treturn max - -index % max;\n\t}\n\treturn index % max;\n};\nMathUtil.max = function () {\n\tif (arguments.length === 3) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\treturn max;\n\t} else if (arguments.length === 4) {\n\t\tlet v1 = arguments[0], v2 = arguments[1], v3 = arguments[2], v4 = arguments[3];\n\t\tvar max = v1;\n\t\tif (v2 > max) max = v2;\n\t\tif (v3 > max) max = v3;\n\t\tif (v4 > max) max = v4;\n\t\treturn max;\n\t}\n};\nMathUtil.average = function (x1, x2) {\n\treturn (x1 + x2) / 2.0;\n};\nMathUtil.LOG_10 = Math.log(10);\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport Envelope from '../geom/Envelope';\nexport default function Distance() {}\nextend(Distance.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Distance;\n\t}\n});\nDistance.segmentToSegment = function (A, B, C, D) {\n\tif (A.equals(B)) return Distance.pointToSegment(A, C, D);\n\tif (C.equals(D)) return Distance.pointToSegment(D, A, B);\n\tvar noIntersection = false;\n\tif (!Envelope.intersects(A, B, C, D)) {\n\t\tnoIntersection = true;\n\t} else {\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\tif (denom === 0) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\tvar s = s_num / denom;\n\t\t\tvar r = r_num / denom;\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\tnoIntersection = true;\n\t\t\t}\n\t\t}\n\t}\n\tif (noIntersection) {\n\t\treturn MathUtil.min(Distance.pointToSegment(A, C, D), Distance.pointToSegment(B, C, D), Distance.pointToSegment(C, A, B), Distance.pointToSegment(D, A, B));\n\t}\n\treturn 0.0;\n};\nDistance.pointToSegment = function (p, A, B) {\n\tif (A.x === B.x && A.y === B.y) return p.distance(A);\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n\tif (r <= 0.0) return p.distance(A);\n\tif (r >= 1.0) return p.distance(B);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nDistance.pointToLinePerpendicular = function (p, A, B) {\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nDistance.pointToSegmentString = function (p, line) {\n\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\tvar minDistance = p.distance(line[0]);\n\tfor (var i = 0; i < line.length - 1; i++) {\n\t\tvar dist = Distance.pointToSegment(p, line[i], line[i + 1]);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t}\n\t}\n\treturn minDistance;\n};\n","import extend from '../../../../extend';\nimport Cloneable from '../../../../java/lang/Cloneable';\nexport default function CoordinateSequence() {}\nextend(CoordinateSequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {},\n\tsize: function () {},\n\tgetOrdinate: function (index, ordinateIndex) {},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {},\n\tgetDimension: function () {},\n\tgetX: function (index) {},\n\texpandEnvelope: function (env) {},\n\tcopy: function () {},\n\tgetY: function (index) {},\n\ttoCoordinateArray: function () {},\n\tinterfaces_: function () {\n\t\treturn [Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequence;\n\t}\n});\nCoordinateSequence.X = 0;\nCoordinateSequence.Y = 1;\nCoordinateSequence.Z = 2;\nCoordinateSequence.M = 3;\n","import hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nexport default function CoordinateSequenceFactory() {}\nextend(CoordinateSequenceFactory.prototype, {\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFactory;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function GeometryComponentFilter() {}\nextend(GeometryComponentFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryComponentFilter;\n\t}\n});\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport Serializable from '../../../../java/io/Serializable';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nexport default function Geometry() {\n\tthis._envelope = null;\n\tthis._factory = null;\n\tthis._SRID = null;\n\tthis._userData = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n\tthis._SRID = factory.getSRID();\n}\nextend(Geometry.prototype, {\n\tisGeometryCollection: function () {\n\t\treturn this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t},\n\tgetFactory: function () {\n\t\treturn this._factory;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this;\n\t},\n\tgetArea: function () {\n\t\treturn 0.0;\n\t},\n\tisRectangle: function () {\n\t\treturn false;\n\t},\n\tequals: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g === null) return false;\n\t\t\treturn this.equalsTopo(g);\n\t\t} else if (arguments[0] instanceof Object) {\n\t\t\tlet o = arguments[0];\n\t\t\tif (!(o instanceof Geometry)) return false;\n\t\t\tvar g = o;\n\t\t\treturn this.equalsExact(g);\n\t\t}\n\t},\n\tequalsExact: function (other) {\n\t\treturn this === other || this.equalsExact(other, 0);\n\t},\n\tgeometryChanged: function () {\n\t\tthis.apply(Geometry.geometryChangedFilter);\n\t},\n\tgeometryChangedAction: function () {\n\t\tthis._envelope = null;\n\t},\n\tequalsNorm: function (g) {\n\t\tif (g === null) return false;\n\t\treturn this.norm().equalsExact(g.norm());\n\t},\n\tgetLength: function () {\n\t\treturn 0.0;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn 1;\n\t},\n\tcompareTo: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar other = o;\n\t\t\tif (this.getTypeCode() !== other.getTypeCode()) {\n\t\t\t\treturn this.getTypeCode() - other.getTypeCode();\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (other.isEmpty()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn this.compareToSameClass(o, comp);\n\t\t}\n\t},\n\tgetUserData: function () {\n\t\treturn this._userData;\n\t},\n\tgetSRID: function () {\n\t\treturn this._SRID;\n\t},\n\tgetEnvelope: function () {\n\t\treturn this.getFactory().toGeometry(this.getEnvelopeInternal());\n\t},\n\tcheckNotGeometryCollection: function (g) {\n\t\tif (g.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION) {\n\t\t\tthrow new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\t\t}\n\t},\n\tequal: function (a, b, tolerance) {\n\t\tif (tolerance === 0) {\n\t\t\treturn a.equals(b);\n\t\t}\n\t\treturn a.distance(b) <= tolerance;\n\t},\n\tnorm: function () {\n\t\tvar copy = this.copy();\n\t\tcopy.normalize();\n\t\treturn copy;\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this._factory.getPrecisionModel();\n\t},\n\tgetEnvelopeInternal: function () {\n\t\tif (this._envelope === null) {\n\t\t\tthis._envelope = this.computeEnvelopeInternal();\n\t\t}\n\t\treturn new Envelope(this._envelope);\n\t},\n\tsetSRID: function (SRID) {\n\t\tthis._SRID = SRID;\n\t},\n\tsetUserData: function (userData) {\n\t\tthis._userData = userData;\n\t},\n\tcompare: function (a, b) {\n\t\tvar i = a.iterator();\n\t\tvar j = b.iterator();\n\t\twhile (i.hasNext() && j.hasNext()) {\n\t\t\tvar aElement = i.next();\n\t\t\tvar bElement = j.next();\n\t\t\tvar comparison = aElement.compareTo(bElement);\n\t\t\tif (comparison !== 0) {\n\t\t\t\treturn comparison;\n\t\t\t}\n\t\t}\n\t\tif (i.hasNext()) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (j.hasNext()) {\n\t\t\treturn -1;\n\t\t}\n\t\treturn 0;\n\t},\n\thashCode: function () {\n\t\treturn this.getEnvelopeInternal().hashCode();\n\t},\n\tisGeometryCollectionOrDerived: function () {\n\t\tif (this.getTypeCode() === Geometry.TYPECODE_GEOMETRYCOLLECTION || this.getTypeCode() === Geometry.TYPECODE_MULTIPOINT || this.getTypeCode() === Geometry.TYPECODE_MULTILINESTRING || this.getTypeCode() === Geometry.TYPECODE_MULTIPOLYGON) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Cloneable, Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Geometry;\n\t}\n});\nGeometry.hasNonEmptyElements = function (geometries) {\n\tfor (var i = 0; i < geometries.length; i++) {\n\t\tif (!geometries[i].isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.hasNullElements = function (array) {\n\tfor (var i = 0; i < array.length; i++) {\n\t\tif (array[i] === null) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nGeometry.serialVersionUID = 8763622679187376702;\nGeometry.TYPECODE_POINT = 0;\nGeometry.TYPECODE_MULTIPOINT = 1;\nGeometry.TYPECODE_LINESTRING = 2;\nGeometry.TYPECODE_LINEARRING = 3;\nGeometry.TYPECODE_MULTILINESTRING = 4;\nGeometry.TYPECODE_POLYGON = 5;\nGeometry.TYPECODE_MULTIPOLYGON = 6;\nGeometry.TYPECODE_GEOMETRYCOLLECTION = 7;\nGeometry.TYPENAME_POINT = \"Point\";\nGeometry.TYPENAME_MULTIPOINT = \"MultiPoint\";\nGeometry.TYPENAME_LINESTRING = \"LineString\";\nGeometry.TYPENAME_LINEARRING = \"LinearRing\";\nGeometry.TYPENAME_MULTILINESTRING = \"MultiLineString\";\nGeometry.TYPENAME_POLYGON = \"Polygon\";\nGeometry.TYPENAME_MULTIPOLYGON = \"MultiPolygon\";\nGeometry.TYPENAME_GEOMETRYCOLLECTION = \"GeometryCollection\";\nGeometry.geometryChangedFilter = {\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tfilter: function (geom) {\n\t\tgeom.geometryChangedAction();\n\t}\n};\n","import extend from '../../../../extend';\nexport default function CoordinateFilter() {}\nextend(CoordinateFilter.prototype, {\n\tfilter: function (coord) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateFilter;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function BoundaryNodeRule() {}\nextend(BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryNodeRule;\n\t}\n});\nfunction Mod2BoundaryNodeRule() {}\nextend(Mod2BoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount % 2 === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn Mod2BoundaryNodeRule;\n\t}\n});\nfunction EndPointBoundaryNodeRule() {}\nextend(EndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn EndPointBoundaryNodeRule;\n\t}\n});\nfunction MultiValentEndPointBoundaryNodeRule() {}\nextend(MultiValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount > 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MultiValentEndPointBoundaryNodeRule;\n\t}\n});\nfunction MonoValentEndPointBoundaryNodeRule() {}\nextend(MonoValentEndPointBoundaryNodeRule.prototype, {\n\tisInBoundary: function (boundaryCount) {\n\t\treturn boundaryCount === 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [BoundaryNodeRule];\n\t},\n\tgetClass: function () {\n\t\treturn MonoValentEndPointBoundaryNodeRule;\n\t}\n});\nBoundaryNodeRule.Mod2BoundaryNodeRule = Mod2BoundaryNodeRule;\nBoundaryNodeRule.EndPointBoundaryNodeRule = EndPointBoundaryNodeRule;\nBoundaryNodeRule.MultiValentEndPointBoundaryNodeRule = MultiValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MonoValentEndPointBoundaryNodeRule = MonoValentEndPointBoundaryNodeRule;\nBoundaryNodeRule.MOD2_BOUNDARY_RULE = new Mod2BoundaryNodeRule();\nBoundaryNodeRule.ENDPOINT_BOUNDARY_RULE = new EndPointBoundaryNodeRule();\nBoundaryNodeRule.MULTIVALENT_ENDPOINT_BOUNDARY_RULE = new MultiValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.MONOVALENT_ENDPOINT_BOUNDARY_RULE = new MonoValentEndPointBoundaryNodeRule();\nBoundaryNodeRule.OGC_SFS_BOUNDARY_RULE = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n","import CoordinateList from './CoordinateList';\nimport Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport System from '../../../../java/lang/System';\nimport Comparator from '../../../../java/util/Comparator';\nimport Envelope from './Envelope';\nexport default function CoordinateArrays() {}\nextend(CoordinateArrays.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArrays;\n\t}\n});\nCoordinateArrays.isRing = function (pts) {\n\tif (pts.length < 4) return false;\n\tif (!pts[0].equals2D(pts[pts.length - 1])) return false;\n\treturn true;\n};\nCoordinateArrays.ptNotInList = function (testPts, pts) {\n\tfor (var i = 0; i < testPts.length; i++) {\n\t\tvar testPt = testPts[i];\n\t\tif (CoordinateArrays.indexOf(testPt, pts) < 0) return testPt;\n\t}\n\treturn null;\n};\nCoordinateArrays.scroll = function (coordinates, firstCoordinate) {\n\tvar i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n\tif (i < 0) return null;\n\tvar newCoordinates = new Array(coordinates.length).fill(null);\n\tSystem.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n\tSystem.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n\tSystem.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function () {\n\tif (arguments.length === 2) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (!coord1[i].equals(coord2[i])) return false;\n\t\t}\n\t\treturn true;\n\t} else if (arguments.length === 3) {\n\t\tlet coord1 = arguments[0], coord2 = arguments[1], coordinateComparator = arguments[2];\n\t\tif (coord1 === coord2) return true;\n\t\tif (coord1 === null || coord2 === null) return false;\n\t\tif (coord1.length !== coord2.length) return false;\n\t\tfor (var i = 0; i < coord1.length; i++) {\n\t\t\tif (coordinateComparator.compare(coord1[i], coord2[i]) !== 0) return false;\n\t\t}\n\t\treturn true;\n\t}\n};\nCoordinateArrays.intersection = function (coordinates, env) {\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (env.intersects(coordinates[i])) coordList.add(coordinates[i], true);\n\t}\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.hasRepeatedPoints = function (coord) {\n\tfor (var i = 1; i < coord.length; i++) {\n\t\tif (coord[i - 1].equals(coord[i])) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCoordinateArrays.removeRepeatedPoints = function (coord) {\n\tif (!CoordinateArrays.hasRepeatedPoints(coord)) return coord;\n\tvar coordList = new CoordinateList(coord, false);\n\treturn coordList.toCoordinateArray();\n};\nCoordinateArrays.reverse = function (coord) {\n\tvar last = coord.length - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tvar tmp = coord[i];\n\t\tcoord[i] = coord[last - i];\n\t\tcoord[last - i] = tmp;\n\t}\n};\nCoordinateArrays.removeNull = function (coord) {\n\tvar nonNull = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) nonNull++;\n\t}\n\tvar newCoord = new Array(nonNull).fill(null);\n\tif (nonNull === 0) return newCoord;\n\tvar j = 0;\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (coord[i] !== null) newCoord[j++] = coord[i];\n\t}\n\treturn newCoord;\n};\nCoordinateArrays.copyDeep = function () {\n\tif (arguments.length === 1) {\n\t\tlet coordinates = arguments[0];\n\t\tvar copy = new Array(coordinates.length).fill(null);\n\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\tcopy[i] = new Coordinate(coordinates[i]);\n\t\t}\n\t\treturn copy;\n\t} else if (arguments.length === 5) {\n\t\tlet src = arguments[0], srcStart = arguments[1], dest = arguments[2], destStart = arguments[3], length = arguments[4];\n\t\tfor (var i = 0; i < length; i++) {\n\t\t\tdest[destStart + i] = new Coordinate(src[srcStart + i]);\n\t\t}\n\t}\n};\nCoordinateArrays.isEqualReversed = function (pts1, pts2) {\n\tfor (var i = 0; i < pts1.length; i++) {\n\t\tvar p1 = pts1[i];\n\t\tvar p2 = pts2[pts1.length - i - 1];\n\t\tif (p1.compareTo(p2) !== 0) return false;\n\t}\n\treturn true;\n};\nCoordinateArrays.envelope = function (coordinates) {\n\tvar env = new Envelope();\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tenv.expandToInclude(coordinates[i]);\n\t}\n\treturn env;\n};\nCoordinateArrays.toCoordinateArray = function (coordList) {\n\treturn coordList.toArray(CoordinateArrays.coordArrayType);\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function (n, c) {\n\treturn c.length >= n ? c : [];\n};\nCoordinateArrays.indexOf = function (coordinate, coordinates) {\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (coordinate.equals(coordinates[i])) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nCoordinateArrays.increasingDirection = function (pts) {\n\tfor (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n\t\tvar j = pts.length - 1 - i;\n\t\tvar comp = pts[i].compareTo(pts[j]);\n\t\tif (comp !== 0) return comp;\n\t}\n\treturn 1;\n};\nCoordinateArrays.compare = function (pts1, pts2) {\n\tvar i = 0;\n\twhile (i < pts1.length && i < pts2.length) {\n\t\tvar compare = pts1[i].compareTo(pts2[i]);\n\t\tif (compare !== 0) return compare;\n\t\ti++;\n\t}\n\tif (i < pts2.length) return -1;\n\tif (i < pts1.length) return 1;\n\treturn 0;\n};\nCoordinateArrays.minCoordinate = function (coordinates) {\n\tvar minCoord = null;\n\tfor (var i = 0; i < coordinates.length; i++) {\n\t\tif (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n\t\t\tminCoord = coordinates[i];\n\t\t}\n\t}\n\treturn minCoord;\n};\nCoordinateArrays.extract = function (pts, start, end) {\n\tstart = MathUtil.clamp(start, 0, pts.length);\n\tend = MathUtil.clamp(end, -1, pts.length);\n\tvar npts = end - start + 1;\n\tif (end < 0) npts = 0;\n\tif (start >= pts.length) npts = 0;\n\tif (end < start) npts = 0;\n\tvar extractPts = new Array(npts).fill(null);\n\tif (npts === 0) return extractPts;\n\tvar iPts = 0;\n\tfor (var i = start; i <= end; i++) {\n\t\textractPts[iPts++] = pts[i];\n\t}\n\treturn extractPts;\n};\nfunction ForwardComparator() {}\nextend(ForwardComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\treturn CoordinateArrays.compare(pts1, pts2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn ForwardComparator;\n\t}\n});\nfunction BidirectionalComparator() {}\nextend(BidirectionalComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar forwardComp = CoordinateArrays.compare(pts1, pts2);\n\t\tvar isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n\t\tif (isEqualRev) return 0;\n\t\treturn forwardComp;\n\t},\n\tOLDcompare: function (o1, o2) {\n\t\tvar pts1 = o1;\n\t\tvar pts2 = o2;\n\t\tif (pts1.length < pts2.length) return -1;\n\t\tif (pts1.length > pts2.length) return 1;\n\t\tif (pts1.length === 0) return 0;\n\t\tvar dir1 = CoordinateArrays.increasingDirection(pts1);\n\t\tvar dir2 = CoordinateArrays.increasingDirection(pts2);\n\t\tvar i1 = dir1 > 0 ? 0 : pts1.length - 1;\n\t\tvar i2 = dir2 > 0 ? 0 : pts1.length - 1;\n\t\tfor (var i = 0; i < pts1.length; i++) {\n\t\t\tvar comparePt = pts1[i1].compareTo(pts2[i2]);\n\t\t\tif (comparePt !== 0) return comparePt;\n\t\t\ti1 += dir1;\n\t\t\ti2 += dir2;\n\t\t}\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn BidirectionalComparator;\n\t}\n});\nCoordinateArrays.ForwardComparator = ForwardComparator;\nCoordinateArrays.BidirectionalComparator = BidirectionalComparator;\nCoordinateArrays.coordArrayType = new Array(0).fill(null);\n","/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nexport default function Map() {};\n\n\n/**\n * Returns the value to which the specified key is mapped, or null if this map\n * contains no mapping for the key.\n * @param {Object} key\n * @return {Object}\n */\nMap.prototype.get = function() {};\n\n\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap.prototype.put = function() {};\n\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap.prototype.size = function() {};\n\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap.prototype.values = function() {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.  If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.  The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.  It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap.prototype.entrySet = function() {};\n","import Map from './Map'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nexport default function SortedMap() {};\nSortedMap.prototype = new Map();\n","import Collection from './Collection'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nexport default function Set() {};\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport Set from './Set'\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nexport default function HashSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nHashSet.prototype = new Set();\n\n\n/**\n * @override\n */\nHashSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e === o) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.remove = function(o) {\n  throw new javascript.util.OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nHashSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {Iterator}\n * @param {HashSet} hashSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(hashSet) {\n  /**\n   * @type {HashSet}\n   * @private\n   */\n  this.hashSet_ = hashSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.hashSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.hashSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.hashSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","import ArrayList from './ArrayList'\nimport SortedMap from './SortedMap'\nimport HashSet from './HashSet'\n\nconst BLACK = 0\nconst RED = 1\nfunction colorOf (p) { return (p == null ? BLACK : p.color) }\nfunction parentOf (p) { return (p == null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) p.color = c }\nfunction leftOf (p) { return (p == null ? null : p.left) }\nfunction rightOf (p) { return (p == null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nexport default function TreeMap() {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n};\nTreeMap.prototype = new SortedMap();\n\n\n/**\n * @override\n */\nTreeMap.prototype.get = function(key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) {\n      p = p.left;\n    } else if (cmp > 0) {\n      p = p.right;\n    } else {\n      return p.value;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.put = function(key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue() { return this.value },\n      getKey() { return this.key }\n    };\n    this.size_ = 1;\n    return null;\n  }\n  var t = this.root_, parent, cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue;\n    }\n  } while (t !== null);\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue() { return this.value },\n    getKey() { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null;\n};\n\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function(x) {\n  x.color = RED;\n  while (x != null && x != this.root_ && x.parent.color == RED) {\n    if (parentOf(x) == leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y) == RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x == leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.values = function() {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList;\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function() {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet;\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function(p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null)\n      r.left.parent = p;\n    r.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = r;\n    else if (p.parent.left == p)\n      p.parent.left = r;\n    else\n      p.parent.right = r;\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function(p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) l.right.parent = p;\n    l.parent = p.parent;\n    if (p.parent == null)\n      this.root_ = l;\n    else if (p.parent.right == p)\n      p.parent.right = l;\n    else p.parent.left = l;\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function() {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p;\n};\n\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function(t) {\n  if (t === null)\n    return null;\n  else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p;\n  } else {\n    var p = t.parent;\n    var ch = t;\n    while (p !== null && ch === p.right) {\n      ch = p;\n      p = p.parent;\n    }\n    return p;\n  }\n};\n\n\n/**\n * @override\n */\nTreeMap.prototype.size = function() {\n  return this.size_;\n};\n","import extend from '../../../../extend';\nexport default function Lineal() {}\nextend(Lineal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Lineal;\n\t}\n});\n","import Set from './Set'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nexport default function SortedSet() {};\nSortedSet.prototype = new Set();\n","import Collection from './Collection'\nimport Iterator from './Iterator'\nimport NoSuchElementException from './NoSuchElementException'\nimport OperationNotSupported from './OperationNotSupported'\nimport SortedSet from './SortedSet'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nexport default function TreeSet() {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n};\nTreeSet.prototype = new SortedSet();\n\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function(o) {\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.add = function(o) {\n  if (this.contains(o)) {\n    return false;\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this.array_.splice(i, 0, o);\n      return true;\n    }\n  }\n\n  this.array_.push(o);\n\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function(c) {\n  for (var i = c.iterator(); i.hasNext();) {\n    this.add(i.next());\n  }\n  return true;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function(e) {\n  throw new OperationNotSupported();\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function() {\n  return this.array_.length === 0;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function() {\n  return new Iterator_(this);\n};\n\n\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_ = function(treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.next = function() {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException();\n  }\n  return this.treeSet_.array_[this.position_++];\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.hasNext = function() {\n  if (this.position_ < this.treeSet_.size()) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @override\n */\nIterator_.prototype.remove = function() {\n  throw new OperationNotSupported();\n};\n","// shared pointer\nvar i\n// shortcuts\nvar defineProperty = Object.defineProperty\nfunction is (a, b) { return (a === b) || (a !== a && b !== b) } // eslint-disable-line\n\nexport default createCollection({\n  // WeakMap#delete(key:void*):boolean\n  'delete': sharedDelete,\n  // :was Map#get(key:void*[, d3fault:void*]):void*\n  // Map#has(key:void*):boolean\n  has: mapHas,\n  // Map#get(key:void*):boolean\n  get: sharedGet,\n  // Map#set(key:void*, value:void*):void\n  set: sharedSet,\n  // Map#keys(void):Iterator\n  keys: sharedKeys,\n  // Map#values(void):Iterator\n  values: sharedValues,\n  // Map#entries(void):Iterator\n  entries: mapEntries,\n  // Map#forEach(callback:Function, context:void*):void ==> callback.call(context, key, value, mapObject) === not in specs`\n  forEach: sharedForEach,\n  // Map#clear():\n  clear: sharedClear\n})\n\nfunction createCollection (proto, objectOnly) {\n  function Collection (a) {\n    if (!this || this.constructor !== Collection) return new Collection(a)\n    this._keys = []\n    this._values = []\n    this._itp = [] // iteration pointers\n    this.objectOnly = objectOnly\n\n    // parse initial iterable argument passed\n    if (a) init.call(this, a)\n  }\n\n  // define size for non object-only collections\n  if (!objectOnly) {\n    defineProperty(proto, 'size', {\n      get: sharedSize\n    })\n  }\n\n  // set prototype\n  proto.constructor = Collection\n  Collection.prototype = proto\n\n  return Collection\n}\n\nfunction init (a) {\n  // init Set argument, like `[1,2,3,{}]`\n  if (this.add) a.forEach(this.add, this)\n  // init Map argument like `[[1,2], [{}, 4]]`\n  else a.forEach(function (a) { this.set(a[0], a[1]) }, this)\n}\n\nfunction sharedDelete (key) {\n  if (this.has(key)) {\n    this._keys.splice(i, 1)\n    this._values.splice(i, 1)\n    // update iteration pointers\n    this._itp.forEach(function (p) { if (i < p[0]) p[0]-- })\n  }\n  // Aurora here does it while Canary doesn't\n  return i > -1\n}\n\nfunction sharedGet (key) {\n  return this.has(key) ? this._values[i] : undefined\n}\n\nfunction has (list, key) {\n  if (this.objectOnly && key !== Object(key)) throw new TypeError('Invalid value used as weak collection key')\n  // NaN or 0 passed\n  if (key !== key || key === 0) for (i = list.length; i-- && !is(list[i], key);) {} // eslint-disable-line\n  else i = list.indexOf(key)\n  return i > -1\n}\n\nfunction mapHas (value) {\n  return has.call(this, this._keys, value)\n}\n\nfunction sharedSet (key, value) {\n  this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value\n  return this\n}\n\nfunction sharedClear () {\n  (this._keys || 0).length =\n    this._values.length = 0\n}\n\nfunction sharedKeys () {\n  return sharedIterator(this._itp, this._keys)\n}\n\nfunction sharedValues () {\n  return sharedIterator(this._itp, this._values)\n}\n\nfunction mapEntries () {\n  return sharedIterator(this._itp, this._keys, this._values)\n}\n\nfunction sharedIterator (itp, array, array2) {\n  var p = [0]\n  var done = false\n  itp.push(p)\n  return {\n    next: function () {\n      var v\n      var k = p[0]\n      if (!done && k < array.length) {\n        v = array2 ? [array[k], array2[k]] : array[k]\n        p[0]++\n      } else {\n        done = true\n        itp.splice(itp.indexOf(p), 1)\n      }\n      return { done: done, value: v }\n    }\n  }\n}\n\nfunction sharedSize () {\n  return this._values.length\n}\n\nfunction sharedForEach (callback, context) {\n  var it = this.entries()\n  for (;;) {\n    var r = it.next()\n    if (r.done) break\n    callback.call(context, r.value[1], r.value[0], this)\n  }\n}\n","import ArrayList from './ArrayList'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nexport default function Arrays() {};\n\n/**\n */\nArrays.sort = function() {\n  var a = arguments[0], i, t, comparator, compare;\n  if (arguments.length === 1) {\n    compare = function(a, b) {\n      return a.compareTo(b);\n    }\n    a.sort(compare);\n    return;\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function(a, b) {\n      return comparator['compare'](a, b);\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n    return;\n  }\n};\n\n\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function(array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList;\n};\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Character from '../../../../java/lang/Character';\nexport default function Dimension() {}\nextend(Dimension.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Dimension;\n\t}\n});\nDimension.toDimensionSymbol = function (dimensionValue) {\n\tswitch (dimensionValue) {\n\t\tcase Dimension.FALSE:\n\t\t\treturn Dimension.SYM_FALSE;\n\t\tcase Dimension.TRUE:\n\t\t\treturn Dimension.SYM_TRUE;\n\t\tcase Dimension.DONTCARE:\n\t\t\treturn Dimension.SYM_DONTCARE;\n\t\tcase Dimension.P:\n\t\t\treturn Dimension.SYM_P;\n\t\tcase Dimension.L:\n\t\t\treturn Dimension.SYM_L;\n\t\tcase Dimension.A:\n\t\t\treturn Dimension.SYM_A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension value: \" + dimensionValue);\n};\nDimension.toDimensionValue = function (dimensionSymbol) {\n\tswitch (Character.toUpperCase(dimensionSymbol)) {\n\t\tcase Dimension.SYM_FALSE:\n\t\t\treturn Dimension.FALSE;\n\t\tcase Dimension.SYM_TRUE:\n\t\t\treturn Dimension.TRUE;\n\t\tcase Dimension.SYM_DONTCARE:\n\t\t\treturn Dimension.DONTCARE;\n\t\tcase Dimension.SYM_P:\n\t\t\treturn Dimension.P;\n\t\tcase Dimension.SYM_L:\n\t\t\treturn Dimension.L;\n\t\tcase Dimension.SYM_A:\n\t\t\treturn Dimension.A;\n\t}\n\tthrow new IllegalArgumentException(\"Unknown dimension symbol: \" + dimensionSymbol);\n};\nDimension.P = 0;\nDimension.L = 1;\nDimension.A = 2;\nDimension.FALSE = -1;\nDimension.TRUE = -2;\nDimension.DONTCARE = -3;\nDimension.SYM_FALSE = 'F';\nDimension.SYM_TRUE = 'T';\nDimension.SYM_DONTCARE = '*';\nDimension.SYM_P = '0';\nDimension.SYM_L = '1';\nDimension.SYM_A = '2';\n","import extend from '../../../../extend';\nexport default function GeometryFilter() {}\nextend(GeometryFilter.prototype, {\n\tfilter: function (geom) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFilter;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function CoordinateSequenceFilter() {}\nextend(CoordinateSequenceFilter.prototype, {\n\tfilter: function (seq, i) {},\n\tisDone: function () {},\n\tisGeometryChanged: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceFilter;\n\t}\n});\n","import TreeSet from '../../../../java/util/TreeSet';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function GeometryCollection() {\n\tthis._geometries = null;\n\tlet geometries = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tif (geometries === null) {\n\t\tgeometries = [];\n\t}\n\tif (Geometry.hasNullElements(geometries)) {\n\t\tthrow new IllegalArgumentException(\"geometries must not contain null elements\");\n\t}\n\tthis._geometries = geometries;\n}\ninherits(GeometryCollection, Geometry);\nextend(GeometryCollection.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tvar envelope = new Envelope();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tenvelope.expandToInclude(this._geometries[i].getEnvelopeInternal());\n\t\t}\n\t\treturn envelope;\n\t},\n\tgetGeometryN: function (n) {\n\t\treturn this._geometries[n];\n\t},\n\tgetCoordinates: function () {\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar childCoordinates = this._geometries[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tarea += this._geometries[i].getArea();\n\t\t}\n\t\treturn area;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherCollection = other;\n\t\t\tif (this._geometries.length !== otherCollection._geometries.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tif (!this._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tthis._geometries[i].normalize();\n\t\t}\n\t\tArrays.sort(this._geometries);\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._geometries[0].getCoordinate();\n\t},\n\tgetBoundaryDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getBoundaryDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_GEOMETRYCOLLECTION;\n\t},\n\tgetDimension: function () {\n\t\tvar dimension = Dimension.FALSE;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tdimension = Math.max(dimension, this._geometries[i].getDimension());\n\t\t}\n\t\treturn dimension;\n\t},\n\tgetLength: function () {\n\t\tvar sum = 0.0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tsum += this._geometries[i].getLength();\n\t\t}\n\t\treturn sum;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = 0;\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tnumPoints += this._geometries[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\tgetNumGeometries: function () {\n\t\treturn this._geometries.length;\n\t},\n\treverse: function () {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createGeometryCollection(revGeoms);\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar theseElements = new TreeSet(Arrays.asList(this._geometries));\n\t\t\tvar otherElements = new TreeSet(Arrays.asList(o._geometries));\n\t\t\treturn this.compare(theseElements, otherElements);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar gc = o;\n\t\t\tvar n1 = this.getNumGeometries();\n\t\t\tvar n2 = gc.getNumGeometries();\n\t\t\tvar i = 0;\n\t\t\twhile (i < n1 && i < n2) {\n\t\t\t\tvar thisGeom = this.getGeometryN(i);\n\t\t\t\tvar otherGeom = gc.getGeometryN(i);\n\t\t\t\tvar holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < n1) return 1;\n\t\t\tif (i < n2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._geometries.length === 0) return null;\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t\tif (filter.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\t\tthis._geometries[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tthis.checkNotGeometryCollection(this);\n\t\tAssert.shouldNeverReachHere();\n\t\treturn null;\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_GEOMETRYCOLLECTION;\n\t},\n\tcopy: function () {\n\t\tvar geometries = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < geometries.length; i++) {\n\t\t\tgeometries[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new GeometryCollection(geometries, this._factory);\n\t},\n\tisEmpty: function () {\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollection;\n\t}\n});\nGeometryCollection.serialVersionUID = -5694727726395021467;\n","import Geometry from './Geometry';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function MultiLineString() {\n\tlet lineStrings = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, lineStrings, factory);\n}\ninherits(MultiLineString, GeometryCollection);\nextend(MultiLineString.prototype, {\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tif (!this._geometries[i].isClosed()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTILINESTRING;\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\treverse: function () {\n\t\tvar nLines = this._geometries.length;\n\t\tvar revLines = new Array(nLines).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevLines[nLines - 1 - i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiLineString(revLines);\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTILINESTRING;\n\t},\n\tcopy: function () {\n\t\tvar lineStrings = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < lineStrings.length; i++) {\n\t\t\tlineStrings[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiLineString(lineStrings, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiLineString;\n\t}\n});\nMultiLineString.serialVersionUID = 8166665132445433741;\n","import LineString from '../geom/LineString';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function BoundaryOp() {\n\tthis._geom = null;\n\tthis._geomFact = null;\n\tthis._bnRule = null;\n\tthis._endpointMap = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tBoundaryOp.call(this, geom, BoundaryNodeRule.MOD2_BOUNDARY_RULE);\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], bnRule = arguments[1];\n\t\tthis._geom = geom;\n\t\tthis._geomFact = geom.getFactory();\n\t\tthis._bnRule = bnRule;\n\t}\n}\nextend(BoundaryOp.prototype, {\n\tboundaryMultiLineString: function (mLine) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tvar bdyPts = this.computeBoundaryCoordinates(mLine);\n\t\tif (bdyPts.length === 1) {\n\t\t\treturn this._geomFact.createPoint(bdyPts[0]);\n\t\t}\n\t\treturn this._geomFact.createMultiPointFromCoords(bdyPts);\n\t},\n\tgetBoundary: function () {\n\t\tif (this._geom instanceof LineString) return this.boundaryLineString(this._geom);\n\t\tif (this._geom instanceof MultiLineString) return this.boundaryMultiLineString(this._geom);\n\t\treturn this._geom.getBoundary();\n\t},\n\tboundaryLineString: function (line) {\n\t\tif (this._geom.isEmpty()) {\n\t\t\treturn this.getEmptyMultiPoint();\n\t\t}\n\t\tif (line.isClosed()) {\n\t\t\tvar closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n\t\t\tif (closedEndpointOnBoundary) {\n\t\t\t\treturn line.getStartPoint();\n\t\t\t} else {\n\t\t\t\treturn this._geomFact.createMultiPoint();\n\t\t\t}\n\t\t}\n\t\treturn this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()]);\n\t},\n\tgetEmptyMultiPoint: function () {\n\t\treturn this._geomFact.createMultiPoint();\n\t},\n\tcomputeBoundaryCoordinates: function (mLine) {\n\t\tvar bdyPts = new ArrayList();\n\t\tthis._endpointMap = new TreeMap();\n\t\tfor (var i = 0; i < mLine.getNumGeometries(); i++) {\n\t\t\tvar line = mLine.getGeometryN(i);\n\t\t\tif (line.getNumPoints() === 0) continue;\n\t\t\tthis.addEndpoint(line.getCoordinateN(0));\n\t\t\tthis.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n\t\t}\n\t\tfor (var it = this._endpointMap.entrySet().iterator(); it.hasNext(); ) {\n\t\t\tvar entry = it.next();\n\t\t\tvar counter = entry.getValue();\n\t\t\tvar valence = counter.count;\n\t\t\tif (this._bnRule.isInBoundary(valence)) {\n\t\t\t\tbdyPts.add(entry.getKey());\n\t\t\t}\n\t\t}\n\t\treturn CoordinateArrays.toCoordinateArray(bdyPts);\n\t},\n\taddEndpoint: function (pt) {\n\t\tvar counter = this._endpointMap.get(pt);\n\t\tif (counter === null) {\n\t\t\tcounter = new Counter();\n\t\t\tthis._endpointMap.put(pt, counter);\n\t\t}\n\t\tcounter.count++;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BoundaryOp;\n\t}\n});\nBoundaryOp.getBoundary = function () {\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tvar bop = new BoundaryOp(g);\n\t\treturn bop.getBoundary();\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bnRule = arguments[1];\n\t\tvar bop = new BoundaryOp(g, bnRule);\n\t\treturn bop.getBoundary();\n\t}\n};\nfunction Counter() {\n\tthis.count = null;\n}\nextend(Counter.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Counter;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nexport default function Length() {}\nextend(Length.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Length;\n\t}\n});\nLength.ofLine = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\n","export default function IOException () {}\n","import PrintStream from '../../../../java/io/PrintStream';\nimport StringReader from '../../../../java/io/StringReader';\nimport DecimalFormat from '../../../../java/text/DecimalFormat';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport ByteArrayOutputStream from '../../../../java/io/ByteArrayOutputStream';\nimport Assert from './Assert';\nimport IOException from '../../../../java/io/IOException';\nimport LineNumberReader from '../../../../java/io/LineNumberReader';\nexport default function StringUtil() {}\nextend(StringUtil.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn StringUtil;\n\t}\n});\nStringUtil.chars = function (c, n) {\n\tvar ch = new Array(n).fill(null);\n\tfor (var i = 0; i < n; i++) {\n\t\tch[i] = c;\n\t}\n\treturn new String(ch);\n};\nStringUtil.getStackTrace = function () {\n\tif (arguments.length === 1) {\n\t\tlet t = arguments[0];\n\t\tvar os = new ByteArrayOutputStream();\n\t\tvar ps = new PrintStream(os);\n\t\tt.printStackTrace(ps);\n\t\treturn os.toString();\n\t} else if (arguments.length === 2) {\n\t\tlet t = arguments[0], depth = arguments[1];\n\t\tvar stackTrace = \"\";\n\t\tvar stringReader = new StringReader(StringUtil.getStackTrace(t));\n\t\tvar lineNumberReader = new LineNumberReader(stringReader);\n\t\tfor (var i = 0; i < depth; i++) {\n\t\t\ttry {\n\t\t\t\tstackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n\t\t\t} catch (e) {\n\t\t\t\tif (e instanceof IOException) {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t} else throw e;\n\t\t\t} finally {}\n\t\t}\n\t\treturn stackTrace;\n\t}\n};\nStringUtil.split = function (s, separator) {\n\tvar separatorlen = separator.length;\n\tvar tokenList = new ArrayList();\n\tvar tmpString = \"\" + s;\n\tvar pos = tmpString.indexOf(separator);\n\twhile (pos >= 0) {\n\t\tvar token = tmpString.substring(0, pos);\n\t\ttokenList.add(token);\n\t\ttmpString = tmpString.substring(pos + separatorlen);\n\t\tpos = tmpString.indexOf(separator);\n\t}\n\tif (tmpString.length > 0) tokenList.add(tmpString);\n\tvar res = new Array(tokenList.size()).fill(null);\n\tfor (var i = 0; i < res.length; i++) {\n\t\tres[i] = tokenList.get(i);\n\t}\n\treturn res;\n};\nStringUtil.toString = function () {\n\tif (arguments.length === 1 && typeof arguments[0] === \"number\") {\n\t\tlet d = arguments[0];\n\t\treturn StringUtil.SIMPLE_ORDINATE_FORMAT.format(d);\n\t}\n};\nStringUtil.spaces = function (n) {\n\treturn StringUtil.chars(' ', n);\n};\nStringUtil.NEWLINE = System.getProperty(\"line.separator\");\nStringUtil.SIMPLE_ORDINATE_FORMAT = new DecimalFormat(\"0.#\");\n","export default function StringBuilder (str) {\n    this.str = str\n  }\n  \n  StringBuilder.prototype.append = function (e) {\n    this.str += e\n  }\n  \n  StringBuilder.prototype.setCharAt = function (i, c) {\n    this.str = this.str.substr(0, i) + c + this.str.substr(i + 1)\n  }\n  \n  StringBuilder.prototype.toString = function (e) {\n    return this.str\n  }\n  ","import hasInterface from '../../../../hasInterface';\nimport StringUtil from '../util/StringUtil';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport CoordinateSequence from './CoordinateSequence';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default function CoordinateSequences() {}\nextend(CoordinateSequences.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequences;\n\t}\n});\nCoordinateSequences.copyCoord = function (src, srcPos, dest, destPos) {\n\tvar minDim = Math.min(src.getDimension(), dest.getDimension());\n\tfor (var dim = 0; dim < minDim; dim++) {\n\t\tdest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n\t}\n};\nCoordinateSequences.isRing = function (seq) {\n\tvar n = seq.size();\n\tif (n === 0) return true;\n\tif (n <= 3) return false;\n\treturn seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n};\nCoordinateSequences.isEqual = function (cs1, cs2) {\n\tvar cs1Size = cs1.size();\n\tvar cs2Size = cs2.size();\n\tif (cs1Size !== cs2Size) return false;\n\tvar dim = Math.min(cs1.getDimension(), cs2.getDimension());\n\tfor (var i = 0; i < cs1Size; i++) {\n\t\tfor (var d = 0; d < dim; d++) {\n\t\t\tvar v1 = cs1.getOrdinate(i, d);\n\t\t\tvar v2 = cs2.getOrdinate(i, d);\n\t\t\tif (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) continue;\n\t\t\tif (Double.isNaN(v1) && Double.isNaN(v2)) continue;\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n};\nCoordinateSequences.extend = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tif (n > 0) {\n\t\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, n - 1, newseq, i, 1);\n\t}\n\treturn newseq;\n};\nCoordinateSequences.reverse = function (seq) {\n\tvar last = seq.size() - 1;\n\tvar mid = Math.trunc(last / 2);\n\tfor (var i = 0; i <= mid; i++) {\n\t\tCoordinateSequences.swap(seq, i, last - i);\n\t}\n};\nCoordinateSequences.swap = function (seq, i, j) {\n\tif (i === j) return null;\n\tfor (var dim = 0; dim < seq.getDimension(); dim++) {\n\t\tvar tmp = seq.getOrdinate(i, dim);\n\t\tseq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n\t\tseq.setOrdinate(j, dim, tmp);\n\t}\n};\nCoordinateSequences.copy = function (src, srcPos, dest, destPos, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tCoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n\t}\n};\nCoordinateSequences.toString = function () {\n\tif (arguments.length === 1 && hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet cs = arguments[0];\n\t\tvar size = cs.size();\n\t\tif (size === 0) return \"()\";\n\t\tvar dim = cs.getDimension();\n\t\tvar builder = new StringBuilder();\n\t\tbuilder.append('(');\n\t\tfor (var i = 0; i < size; i++) {\n\t\t\tif (i > 0) builder.append(\" \");\n\t\t\tfor (var d = 0; d < dim; d++) {\n\t\t\t\tif (d > 0) builder.append(\",\");\n\t\t\t\tbuilder.append(StringUtil.toString(cs.getOrdinate(i, d)));\n\t\t\t}\n\t\t}\n\t\tbuilder.append(')');\n\t\treturn builder.toString();\n\t}\n};\nCoordinateSequences.ensureValidRing = function (fact, seq) {\n\tvar n = seq.size();\n\tif (n === 0) return seq;\n\tif (n <= 3) return CoordinateSequences.createClosedRing(fact, seq, 4);\n\tvar isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n\tif (isClosed) return seq;\n\treturn CoordinateSequences.createClosedRing(fact, seq, n + 1);\n};\nCoordinateSequences.createClosedRing = function (fact, seq, size) {\n\tvar newseq = fact.create(size, seq.getDimension());\n\tvar n = seq.size();\n\tCoordinateSequences.copy(seq, 0, newseq, 0, n);\n\tfor (var i = n; i < size; i++) CoordinateSequences.copy(seq, 0, newseq, i, 1);\n\treturn newseq;\n};\n","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport BoundaryOp from '../operation/BoundaryOp';\nimport Length from '../algorithm/Length';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Lineal from './Lineal';\nimport CoordinateSequences from './CoordinateSequences';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Envelope from './Envelope';\nimport inherits from '../../../../inherits';\nexport default function LineString() {\n\tthis._points = null;\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(points);\n}\ninherits(LineString, Geometry);\nextend(LineString.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\treturn this._points.expandEnvelope(new Envelope());\n\t},\n\tisRing: function () {\n\t\treturn this.isClosed() && this.isSimple();\n\t},\n\tgetCoordinates: function () {\n\t\treturn this._points.toCoordinateArray();\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherLineString = other;\n\t\t\tif (this._points.size() !== otherLineString._points.size()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tif (!this.equal(this._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n\t\t\tvar j = this._points.size() - 1 - i;\n\t\t\tif (!this._points.getCoordinate(i).equals(this._points.getCoordinate(j))) {\n\t\t\t\tif (this._points.getCoordinate(i).compareTo(this._points.getCoordinate(j)) > 0) {\n\t\t\t\t\tvar copy = this._points.copy();\n\t\t\t\t\tCoordinateSequences.reverse(copy);\n\t\t\t\t\tthis._points = copy;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\tif (this.isEmpty()) return null;\n\t\treturn this._points.getCoordinate(0);\n\t},\n\tgetBoundaryDimension: function () {\n\t\tif (this.isClosed()) {\n\t\t\treturn Dimension.FALSE;\n\t\t}\n\t\treturn 0;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1));\n\t},\n\tgetEndPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(this.getNumPoints() - 1);\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_LINESTRING;\n\t},\n\tgetDimension: function () {\n\t\treturn 1;\n\t},\n\tgetLength: function () {\n\t\treturn Length.ofLine(this._points);\n\t},\n\tgetNumPoints: function () {\n\t\treturn this._points.size();\n\t},\n\treverse: function () {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar revLine = this.getFactory().createLineString(seq);\n\t\treturn revLine;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar line = o;\n\t\t\tvar i = 0;\n\t\t\tvar j = 0;\n\t\t\twhile (i < this._points.size() && j < line._points.size()) {\n\t\t\t\tvar comparison = this._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n\t\t\t\tif (comparison !== 0) {\n\t\t\t\t\treturn comparison;\n\t\t\t\t}\n\t\t\t\ti++;\n\t\t\t\tj++;\n\t\t\t}\n\t\t\tif (i < this._points.size()) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\tif (j < line._points.size()) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\treturn 0;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar line = o;\n\t\t\treturn comp.compare(this._points, line._points);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points.getCoordinate(i));\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this._points.size() === 0) return null;\n\t\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\t\tfilter.filter(this._points, i);\n\t\t\t\tif (filter.isDone()) break;\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn new BoundaryOp(this).getBoundary();\n\t},\n\tisEquivalentClass: function (other) {\n\t\treturn other instanceof LineString;\n\t},\n\tgetCoordinateN: function (n) {\n\t\treturn this._points.getCoordinate(n);\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_LINESTRING;\n\t},\n\tcopy: function () {\n\t\treturn new LineString(this._points.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this._points;\n\t},\n\tisEmpty: function () {\n\t\treturn this._points.size() === 0;\n\t},\n\tinit: function (points) {\n\t\tif (points === null) {\n\t\t\tpoints = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tif (points.size() === 1) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LineString (found \" + points.size() + \" - must be 0 or >= 2)\");\n\t\t}\n\t\tthis._points = points;\n\t},\n\tisCoordinate: function (pt) {\n\t\tfor (var i = 0; i < this._points.size(); i++) {\n\t\t\tif (this._points.getCoordinate(i).equals(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetStartPoint: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.getPointN(0);\n\t},\n\tgetPointN: function (n) {\n\t\treturn this.getFactory().createPoint(this._points.getCoordinate(n));\n\t},\n\tinterfaces_: function () {\n\t\treturn [Lineal];\n\t},\n\tgetClass: function () {\n\t\treturn LineString;\n\t}\n});\nLineString.serialVersionUID = 3110669828065365560;\n","import extend from '../../../../extend';\nexport default function Puntal() {}\nextend(Puntal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Puntal;\n\t}\n});\n","import Geometry from './Geometry';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport Dimension from './Dimension';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport Puntal from './Puntal';\nimport Envelope from './Envelope';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function Point() {\n\tthis._coordinates = null;\n\tlet coordinates = arguments[0], factory = arguments[1];\n\tGeometry.call(this, factory);\n\tthis.init(coordinates);\n}\ninherits(Point, Geometry);\nextend(Point.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn new Envelope();\n\t\t}\n\t\tvar env = new Envelope();\n\t\tenv.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n\t\treturn env;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.isEmpty() ? [] : [this.getCoordinate()];\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this.isEmpty() && other.isEmpty()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (this.isEmpty() !== other.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn this.equal(other.getCoordinate(), this.getCoordinate(), tolerance);\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {},\n\tgetCoordinate: function () {\n\t\treturn this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_POINT;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.isEmpty() ? 0 : 1;\n\t},\n\treverse: function () {\n\t\treturn this.copy();\n\t},\n\tgetX: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getX called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().x;\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\tvar point = other;\n\t\t\treturn this.getCoordinate().compareTo(point.getCoordinate());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet other = arguments[0], comp = arguments[1];\n\t\t\tvar point = other;\n\t\t\treturn comp.compare(this._coordinates, point._coordinates);\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfilter.filter(this.getCoordinate());\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tif (this.isEmpty()) return null;\n\t\t\tfilter.filter(this._coordinates, 0);\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_POINT;\n\t},\n\tcopy: function () {\n\t\treturn new Point(this._coordinates.copy(), this._factory);\n\t},\n\tgetCoordinateSequence: function () {\n\t\treturn this._coordinates;\n\t},\n\tgetY: function () {\n\t\tif (this.getCoordinate() === null) {\n\t\t\tthrow new IllegalStateException(\"getY called on empty Point\");\n\t\t}\n\t\treturn this.getCoordinate().y;\n\t},\n\tisEmpty: function () {\n\t\treturn this._coordinates.size() === 0;\n\t},\n\tinit: function (coordinates) {\n\t\tif (coordinates === null) {\n\t\t\tcoordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n\t\t}\n\t\tAssert.isTrue(coordinates.size() <= 1);\n\t\tthis._coordinates = coordinates;\n\t},\n\tisSimple: function () {\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn Point;\n\t}\n});\nPoint.serialVersionUID = 4902022702746614570;\n","import hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nexport default function Area() {}\nextend(Area.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Area;\n\t}\n});\nArea.ofRing = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\treturn Math.abs(Area.ofRingSigned(ring));\n\t}\n};\nArea.ofRingSigned = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\tvar n = ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tring.getCoordinate(0, p1);\n\t\tring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\n","import extend from '../../../../extend';\nexport default function Polygonal() {}\nextend(Polygonal.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Polygonal;\n\t}\n});\n","import Area from '../algorithm/Area';\nimport Geometry from './Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport CoordinateFilter from './CoordinateFilter';\nimport hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport System from '../../../../java/lang/System';\nimport GeometryComponentFilter from './GeometryComponentFilter';\nimport CoordinateArrays from './CoordinateArrays';\nimport Polygonal from './Polygonal';\nimport GeometryFilter from './GeometryFilter';\nimport CoordinateSequenceFilter from './CoordinateSequenceFilter';\nimport inherits from '../../../../inherits';\nexport default function Polygon() {\n\tthis._shell = null;\n\tthis._holes = null;\n\tlet shell = arguments[0], holes = arguments[1], factory = arguments[2];\n\tGeometry.call(this, factory);\n\tif (shell === null) {\n\t\tshell = this.getFactory().createLinearRing();\n\t}\n\tif (holes === null) {\n\t\tholes = [];\n\t}\n\tif (Geometry.hasNullElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"holes must not contain null elements\");\n\t}\n\tif (shell.isEmpty() && Geometry.hasNonEmptyElements(holes)) {\n\t\tthrow new IllegalArgumentException(\"shell is empty but holes are not\");\n\t}\n\tthis._shell = shell;\n\tthis._holes = holes;\n}\ninherits(Polygon, Geometry);\nextend(Polygon.prototype, {\n\tcomputeEnvelopeInternal: function () {\n\t\treturn this._shell.getEnvelopeInternal();\n\t},\n\tgetCoordinates: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn [];\n\t\t}\n\t\tvar coordinates = new Array(this.getNumPoints()).fill(null);\n\t\tvar k = -1;\n\t\tvar shellCoordinates = this._shell.getCoordinates();\n\t\tfor (var x = 0; x < shellCoordinates.length; x++) {\n\t\t\tk++;\n\t\t\tcoordinates[k] = shellCoordinates[x];\n\t\t}\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tvar childCoordinates = this._holes[i].getCoordinates();\n\t\t\tfor (var j = 0; j < childCoordinates.length; j++) {\n\t\t\t\tk++;\n\t\t\t\tcoordinates[k] = childCoordinates[j];\n\t\t\t}\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgetArea: function () {\n\t\tvar area = 0.0;\n\t\tarea += Area.ofRing(this._shell.getCoordinateSequence());\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tarea -= Area.ofRing(this._holes[i].getCoordinateSequence());\n\t\t}\n\t\treturn area;\n\t},\n\tisRectangle: function () {\n\t\tif (this.getNumInteriorRing() !== 0) return false;\n\t\tif (this._shell === null) return false;\n\t\tif (this._shell.getNumPoints() !== 5) return false;\n\t\tvar seq = this._shell.getCoordinateSequence();\n\t\tvar env = this.getEnvelopeInternal();\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tif (!(x === env.getMinX() || x === env.getMaxX())) return false;\n\t\t\tvar y = seq.getY(i);\n\t\t\tif (!(y === env.getMinY() || y === env.getMaxY())) return false;\n\t\t}\n\t\tvar prevX = seq.getX(0);\n\t\tvar prevY = seq.getY(0);\n\t\tfor (var i = 1; i <= 4; i++) {\n\t\t\tvar x = seq.getX(i);\n\t\t\tvar y = seq.getY(i);\n\t\t\tvar xChanged = x !== prevX;\n\t\t\tvar yChanged = y !== prevY;\n\t\t\tif (xChanged === yChanged) return false;\n\t\t\tprevX = x;\n\t\t\tprevY = y;\n\t\t}\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar otherPolygon = other;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherPolygonShell = otherPolygon._shell;\n\t\t\tif (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (this._holes.length !== otherPolygon._holes.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tif (!this._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else return Geometry.prototype.equalsExact.apply(this, arguments);\n\t},\n\tnormalize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.normalize(this._shell, true);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis.normalize(this._holes[i], false);\n\t\t\t}\n\t\t\tArrays.sort(this._holes);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ring = arguments[0], clockwise = arguments[1];\n\t\t\tif (ring.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n\t\t\tSystem.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n\t\t\tvar minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n\t\t\tCoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n\t\t\tSystem.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n\t\t\tring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n\t\t\tif (Orientation.isCCW(ring.getCoordinates()) === clockwise) {\n\t\t\t\tCoordinateArrays.reverse(ring.getCoordinates());\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._shell.getCoordinate();\n\t},\n\tgetNumInteriorRing: function () {\n\t\treturn this._holes.length;\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_POLYGON;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\tgetLength: function () {\n\t\tvar len = 0.0;\n\t\tlen += this._shell.getLength();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tlen += this._holes[i].getLength();\n\t\t}\n\t\treturn len;\n\t},\n\tgetNumPoints: function () {\n\t\tvar numPoints = this._shell.getNumPoints();\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tnumPoints += this._holes[i].getNumPoints();\n\t\t}\n\t\treturn numPoints;\n\t},\n\treverse: function () {\n\t\tvar poly = this.copy();\n\t\tpoly._shell = this._shell.copy().reverse();\n\t\tpoly._holes = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tpoly._holes[i] = this._holes[i].copy().reverse();\n\t\t}\n\t\treturn poly;\n\t},\n\tconvexHull: function () {\n\t\treturn this.getExteriorRing().convexHull();\n\t},\n\tcompareToSameClass: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet o = arguments[0];\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = o._shell;\n\t\t\treturn thisShell.compareToSameClass(otherShell);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet o = arguments[0], comp = arguments[1];\n\t\t\tvar poly = o;\n\t\t\tvar thisShell = this._shell;\n\t\t\tvar otherShell = poly._shell;\n\t\t\tvar shellComp = thisShell.compareToSameClass(otherShell, comp);\n\t\t\tif (shellComp !== 0) return shellComp;\n\t\t\tvar nHole1 = this.getNumInteriorRing();\n\t\t\tvar nHole2 = poly.getNumInteriorRing();\n\t\t\tvar i = 0;\n\t\t\twhile (i < nHole1 && i < nHole2) {\n\t\t\t\tvar thisHole = this.getInteriorRingN(i);\n\t\t\t\tvar otherHole = poly.getInteriorRingN(i);\n\t\t\t\tvar holeComp = thisHole.compareToSameClass(otherHole, comp);\n\t\t\t\tif (holeComp !== 0) return holeComp;\n\t\t\t\ti++;\n\t\t\t}\n\t\t\tif (i < nHole1) return 1;\n\t\t\tif (i < nHole2) return -1;\n\t\t\treturn 0;\n\t\t}\n\t},\n\tapply: function () {\n\t\tif (hasInterface(arguments[0], CoordinateFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tthis._shell.apply(filter);\n\t\t\tif (!filter.isDone()) {\n\t\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t\t\tif (filter.isDone()) break;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (filter.isGeometryChanged()) this.geometryChanged();\n\t\t} else if (hasInterface(arguments[0], GeometryFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t} else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n\t\t\tlet filter = arguments[0];\n\t\t\tfilter.filter(this);\n\t\t\tthis._shell.apply(filter);\n\t\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\t\tthis._holes[i].apply(filter);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar rings = new Array(this._holes.length + 1).fill(null);\n\t\trings[0] = this._shell;\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\trings[i + 1] = this._holes[i];\n\t\t}\n\t\tif (rings.length <= 1) return this.getFactory().createLinearRing(rings[0].getCoordinateSequence());\n\t\treturn this.getFactory().createMultiLineString(rings);\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_POLYGON;\n\t},\n\tcopy: function () {\n\t\tvar shellCopy = this._shell.copy();\n\t\tvar holeCopies = new Array(this._holes.length).fill(null);\n\t\tfor (var i = 0; i < this._holes.length; i++) {\n\t\t\tholeCopies[i] = this._holes[i].copy();\n\t\t}\n\t\treturn new Polygon(shellCopy, holeCopies, this._factory);\n\t},\n\tgetExteriorRing: function () {\n\t\treturn this._shell;\n\t},\n\tisEmpty: function () {\n\t\treturn this._shell.isEmpty();\n\t},\n\tgetInteriorRingN: function (n) {\n\t\treturn this._holes[n];\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn Polygon;\n\t}\n});\nPolygon.serialVersionUID = -3494792200821764533;\n","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Dimension from './Dimension';\nimport Puntal from './Puntal';\nimport inherits from '../../../../inherits';\nexport default function MultiPoint() {\n\tlet points = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, points, factory);\n}\ninherits(MultiPoint, GeometryCollection);\nextend(MultiPoint.prototype, {\n\tisValid: function () {\n\t\treturn true;\n\t},\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1 && Number.isInteger(arguments[0])) {\n\t\t\tlet n = arguments[0];\n\t\t\treturn this._geometries[n].getCoordinate();\n\t\t} else return GeometryCollection.prototype.getCoordinate.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTIPOINT;\n\t},\n\tgetDimension: function () {\n\t\treturn 0;\n\t},\n\tgetBoundary: function () {\n\t\treturn this.getFactory().createGeometryCollection();\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTIPOINT;\n\t},\n\tcopy: function () {\n\t\tvar points = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < points.length; i++) {\n\t\t\tpoints[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPoint(points, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Puntal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPoint;\n\t}\n});\nMultiPoint.serialVersionUID = -8048474874175355449;\n","import LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from './GeometryFactory';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport Dimension from './Dimension';\nimport inherits from '../../../../inherits';\nexport default function LinearRing() {\n\tif (arguments[0] instanceof Array && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLinearRing.call(this, factory.getCoordinateSequenceFactory().create(points), factory);\n\t} else if (hasInterface(arguments[0], CoordinateSequence) && arguments[1] instanceof GeometryFactory) {\n\t\tlet points = arguments[0], factory = arguments[1];\n\t\tLineString.call(this, points, factory);\n\t\tthis.validateConstruction();\n\t}\n}\ninherits(LinearRing, LineString);\nextend(LinearRing.prototype, {\n\tgetBoundaryDimension: function () {\n\t\treturn Dimension.FALSE;\n\t},\n\tisClosed: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn true;\n\t\t}\n\t\treturn LineString.prototype.isClosed.call(this);\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_LINEARRING;\n\t},\n\treverse: function () {\n\t\tvar seq = this._points.copy();\n\t\tCoordinateSequences.reverse(seq);\n\t\tvar rev = this.getFactory().createLinearRing(seq);\n\t\treturn rev;\n\t},\n\tvalidateConstruction: function () {\n\t\tif (!this.isEmpty() && !LineString.prototype.isClosed.call(this)) {\n\t\t\tthrow new IllegalArgumentException(\"Points of LinearRing do not form a closed linestring\");\n\t\t}\n\t\tif (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n\t\t\tthrow new IllegalArgumentException(\"Invalid number of points in LinearRing (found \" + this.getCoordinateSequence().size() + \" - must be 0 or >= 4)\");\n\t\t}\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_LINEARRING;\n\t},\n\tcopy: function () {\n\t\treturn new LinearRing(this._points.copy(), this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearRing;\n\t}\n});\nLinearRing.MINIMUM_VALID_SIZE = 4;\nLinearRing.serialVersionUID = -4261142084085851829;\n","import Geometry from './Geometry';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nimport Polygonal from './Polygonal';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nexport default function MultiPolygon() {\n\tlet polygons = arguments[0], factory = arguments[1];\n\tGeometryCollection.call(this, polygons, factory);\n}\ninherits(MultiPolygon, GeometryCollection);\nextend(MultiPolygon.prototype, {\n\tequalsExact: function () {\n\t\tif (arguments.length === 2 && (typeof arguments[1] === \"number\" && arguments[0] instanceof Geometry)) {\n\t\t\tlet other = arguments[0], tolerance = arguments[1];\n\t\t\tif (!this.isEquivalentClass(other)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn GeometryCollection.prototype.equalsExact.call(this, other, tolerance);\n\t\t} else return GeometryCollection.prototype.equalsExact.apply(this, arguments);\n\t},\n\tgetBoundaryDimension: function () {\n\t\treturn 1;\n\t},\n\tgetTypeCode: function () {\n\t\treturn Geometry.TYPECODE_MULTIPOLYGON;\n\t},\n\tgetDimension: function () {\n\t\treturn 2;\n\t},\n\treverse: function () {\n\t\tvar n = this._geometries.length;\n\t\tvar revGeoms = new Array(n).fill(null);\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\trevGeoms[i] = this._geometries[i].reverse();\n\t\t}\n\t\treturn this.getFactory().createMultiPolygon(revGeoms);\n\t},\n\tgetBoundary: function () {\n\t\tif (this.isEmpty()) {\n\t\t\treturn this.getFactory().createMultiLineString();\n\t\t}\n\t\tvar allRings = new ArrayList();\n\t\tfor (var i = 0; i < this._geometries.length; i++) {\n\t\t\tvar polygon = this._geometries[i];\n\t\t\tvar rings = polygon.getBoundary();\n\t\t\tfor (var j = 0; j < rings.getNumGeometries(); j++) {\n\t\t\t\tallRings.add(rings.getGeometryN(j));\n\t\t\t}\n\t\t}\n\t\tvar allRingsArray = new Array(allRings.size()).fill(null);\n\t\treturn this.getFactory().createMultiLineString(allRings.toArray(allRingsArray));\n\t},\n\tgetGeometryType: function () {\n\t\treturn Geometry.TYPENAME_MULTIPOLYGON;\n\t},\n\tcopy: function () {\n\t\tvar polygons = new Array(this._geometries.length).fill(null);\n\t\tfor (var i = 0; i < polygons.length; i++) {\n\t\t\tpolygons[i] = this._geometries[i].copy();\n\t\t}\n\t\treturn new MultiPolygon(polygons, this._factory);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Polygonal];\n\t},\n\tgetClass: function () {\n\t\treturn MultiPolygon;\n\t}\n});\nMultiPolygon.serialVersionUID = -551033529766975875;\n","import LineString from '../LineString';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport MultiLineString from '../MultiLineString';\nexport default function GeometryEditor() {\n\tthis._factory = null;\n\tthis._isUserDataCopied = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet factory = arguments[0];\n\t\tthis._factory = factory;\n\t}\n}\nextend(GeometryEditor.prototype, {\n\tsetCopyUserData: function (isUserDataCopied) {\n\t\tthis._isUserDataCopied = isUserDataCopied;\n\t},\n\tedit: function (geometry, operation) {\n\t\tif (geometry === null) return null;\n\t\tvar result = this.editInternal(geometry, operation);\n\t\tif (this._isUserDataCopied) {\n\t\t\tresult.setUserData(geometry.getUserData());\n\t\t}\n\t\treturn result;\n\t},\n\teditInternal: function (geometry, operation) {\n\t\tif (this._factory === null) this._factory = geometry.getFactory();\n\t\tif (geometry instanceof GeometryCollection) {\n\t\t\treturn this.editGeometryCollection(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Polygon) {\n\t\t\treturn this.editPolygon(geometry, operation);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn operation.edit(geometry, this._factory);\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Unsupported Geometry class: \" + geometry.getClass().getName());\n\t\treturn null;\n\t},\n\teditGeometryCollection: function (collection, operation) {\n\t\tvar collectionForType = operation.edit(collection, this._factory);\n\t\tvar geometries = new ArrayList();\n\t\tfor (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n\t\t\tvar geometry = this.edit(collectionForType.getGeometryN(i), operation);\n\t\t\tif (geometry === null || geometry.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgeometries.add(geometry);\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPoint) {\n\t\t\treturn this._factory.createMultiPoint(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiLineString) {\n\t\t\treturn this._factory.createMultiLineString(geometries.toArray([]));\n\t\t}\n\t\tif (collectionForType.getClass() === MultiPolygon) {\n\t\t\treturn this._factory.createMultiPolygon(geometries.toArray([]));\n\t\t}\n\t\treturn this._factory.createGeometryCollection(geometries.toArray([]));\n\t},\n\teditPolygon: function (polygon, operation) {\n\t\tvar newPolygon = operation.edit(polygon, this._factory);\n\t\tif (newPolygon === null) newPolygon = this._factory.createPolygon();\n\t\tif (newPolygon.isEmpty()) {\n\t\t\treturn newPolygon;\n\t\t}\n\t\tvar shell = this.edit(newPolygon.getExteriorRing(), operation);\n\t\tif (shell === null || shell.isEmpty()) {\n\t\t\treturn this._factory.createPolygon();\n\t\t}\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.edit(newPolygon.getInteriorRingN(i), operation);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tholes.add(hole);\n\t\t}\n\t\treturn this._factory.createPolygon(shell, holes.toArray([]));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryEditor;\n\t}\n});\nfunction GeometryEditorOperation() {}\nGeometryEditor.GeometryEditorOperation = GeometryEditorOperation;\nfunction NoOpGeometryOperation() {}\nextend(NoOpGeometryOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn NoOpGeometryOperation;\n\t}\n});\nfunction CoordinateOperation() {}\nextend(CoordinateOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tvar coordinates = this.edit(geometry.getCoordinates(), geometry);\n\t\tif (geometry instanceof LinearRing) {\n\t\t\tif (coordinates === null) return factory.createLinearRing(); else return factory.createLinearRing(coordinates);\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\tif (coordinates === null) return factory.createLineString(); else return factory.createLineString(coordinates);\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\tif (coordinates === null || coordinates.length === 0) return factory.createPoint(); else return factory.createPoint(coordinates[0]);\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateOperation;\n\t}\n});\nfunction CoordinateSequenceOperation() {}\nextend(CoordinateSequenceOperation.prototype, {\n\tedit: function (geometry, factory) {\n\t\tif (geometry instanceof LinearRing) {\n\t\t\treturn factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof LineString) {\n\t\t\treturn factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\tif (geometry instanceof Point) {\n\t\t\treturn factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry));\n\t\t}\n\t\treturn geometry;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryEditorOperation];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateSequenceOperation;\n\t}\n});\nGeometryEditor.NoOpGeometryOperation = NoOpGeometryOperation;\nGeometryEditor.CoordinateOperation = CoordinateOperation;\nGeometryEditor.CoordinateSequenceOperation = CoordinateSequenceOperation;\n","import hasInterface from '../../../../../hasInterface';\nimport Coordinate from '../Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nimport StringBuilder from '../../../../../java/lang/StringBuilder';\nexport default function CoordinateArraySequence() {\n\tthis._dimension = 3;\n\tthis._coordinates = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coordinates = arguments[0];\n\t\t\tCoordinateArraySequence.call(this, coordinates, 3);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet size = arguments[0];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\tlet coordSeq = arguments[0];\n\t\t\tif (coordSeq === null) {\n\t\t\t\tthis._coordinates = new Array(0).fill(null);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._dimension = coordSeq.getDimension();\n\t\t\tthis._coordinates = new Array(coordSeq.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\t\tthis._coordinates[i] = coordSeq.getCoordinateCopy(i);\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tif (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n\t\t\tlet coordinates = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = coordinates;\n\t\t\tthis._dimension = dimension;\n\t\t\tif (coordinates === null) this._coordinates = new Array(0).fill(null);\n\t\t} else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tthis._coordinates = new Array(size).fill(null);\n\t\t\tthis._dimension = dimension;\n\t\t\tfor (var i = 0; i < size; i++) {\n\t\t\t\tthis._coordinates[i] = new Coordinate();\n\t\t\t}\n\t\t}\n\t}\n}\nextend(CoordinateArraySequence.prototype, {\n\tsetOrdinate: function (index, ordinateIndex, value) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\tthis._coordinates[index].x = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\tthis._coordinates[index].y = value;\n\t\t\t\tbreak;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\tthis._coordinates[index].z = value;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new IllegalArgumentException(\"invalid ordinateIndex\");\n\t\t}\n\t},\n\tsize: function () {\n\t\treturn this._coordinates.length;\n\t},\n\tgetOrdinate: function (index, ordinateIndex) {\n\t\tswitch (ordinateIndex) {\n\t\t\tcase CoordinateSequence.X:\n\t\t\t\treturn this._coordinates[index].x;\n\t\t\tcase CoordinateSequence.Y:\n\t\t\t\treturn this._coordinates[index].y;\n\t\t\tcase CoordinateSequence.Z:\n\t\t\t\treturn this._coordinates[index].z;\n\t\t}\n\t\treturn Double.NaN;\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this._coordinates[i];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], coord = arguments[1];\n\t\t\tcoord.x = this._coordinates[index].x;\n\t\t\tcoord.y = this._coordinates[index].y;\n\t\t\tcoord.z = this._coordinates[index].z;\n\t\t}\n\t},\n\tgetCoordinateCopy: function (i) {\n\t\treturn new Coordinate(this._coordinates[i]);\n\t},\n\tgetDimension: function () {\n\t\treturn this._dimension;\n\t},\n\tgetX: function (index) {\n\t\treturn this._coordinates[index].x;\n\t},\n\texpandEnvelope: function (env) {\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tenv.expandToInclude(this._coordinates[i]);\n\t\t}\n\t\treturn env;\n\t},\n\tcopy: function () {\n\t\tvar cloneCoordinates = new Array(this.size()).fill(null);\n\t\tfor (var i = 0; i < this._coordinates.length; i++) {\n\t\t\tcloneCoordinates[i] = this._coordinates[i].copy();\n\t\t}\n\t\treturn new CoordinateArraySequence(cloneCoordinates, this._dimension);\n\t},\n\ttoString: function () {\n\t\tif (this._coordinates.length > 0) {\n\t\t\tvar strBuilder = new StringBuilder(17 * this._coordinates.length);\n\t\t\tstrBuilder.append('(');\n\t\t\tstrBuilder.append(this._coordinates[0]);\n\t\t\tfor (var i = 1; i < this._coordinates.length; i++) {\n\t\t\t\tstrBuilder.append(\", \");\n\t\t\t\tstrBuilder.append(this._coordinates[i]);\n\t\t\t}\n\t\t\tstrBuilder.append(')');\n\t\t\treturn strBuilder.toString();\n\t\t} else {\n\t\t\treturn \"()\";\n\t\t}\n\t},\n\tgetY: function (index) {\n\t\treturn this._coordinates[index].y;\n\t},\n\ttoCoordinateArray: function () {\n\t\treturn this._coordinates;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequence, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequence;\n\t}\n});\nCoordinateArraySequence.serialVersionUID = -915438501601840650;\n","import CoordinateSequenceFactory from '../CoordinateSequenceFactory';\nimport hasInterface from '../../../../../hasInterface';\nimport CoordinateArraySequence from './CoordinateArraySequence';\nimport extend from '../../../../../extend';\nimport CoordinateSequence from '../CoordinateSequence';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function CoordinateArraySequenceFactory() {}\nextend(CoordinateArraySequenceFactory.prototype, {\n\treadResolve: function () {\n\t\treturn CoordinateArraySequenceFactory.instance();\n\t},\n\tcreate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordinates);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordSeq = arguments[0];\n\t\t\t\treturn new CoordinateArraySequence(coordSeq);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet size = arguments[0], dimension = arguments[1];\n\t\t\tif (dimension > 3) dimension = 3;\n\t\t\tif (dimension < 2) return new CoordinateArraySequence(size);\n\t\t\treturn new CoordinateArraySequence(size, dimension);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFactory, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn CoordinateArraySequenceFactory;\n\t}\n});\nCoordinateArraySequenceFactory.instance = function () {\n\treturn CoordinateArraySequenceFactory.instanceObject;\n};\nCoordinateArraySequenceFactory.serialVersionUID = -4099577099607551657;\nCoordinateArraySequenceFactory.instanceObject = new CoordinateArraySequenceFactory();\n","export default function ByteArrayOutputStream () {}\n","export default function PrintStream () {}\n","export default function LineNumberReader () {}\n","export default function StringReader () {}\n","export default function DecimalFormat () {}\n","import ArrayList from './ArrayList'\nimport MapInterface from './Map'\nimport HashSet from './HashSet'\nimport MapPolyfill from '../../Map'\n\nlet MapImpl = typeof Map === 'undefined' || !Map.prototype.values ? MapPolyfill : Map\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nexport default function HashMap () {\n  /**\n   * @type {Object}\n   * @private\n  */\n  this.map_ = new MapImpl()\n}\nHashMap.prototype = new MapInterface()\n\n/**\n * @override\n */\nHashMap.prototype.get = function (key) {\n  return this.map_.get(key) || null\n}\n\n/**\n * @override\n */\nHashMap.prototype.put = function (key, value) {\n  this.map_.set(key, value)\n  return value\n}\n\n/**\n * @override\n */\nHashMap.prototype.values = function () {\n  const arrayList = new ArrayList()\n  const it = this.map_.values()\n  let o = it.next()\n  while (!o.done) {\n    arrayList.add(o.value)\n    o = it.next()\n  }\n  return arrayList\n}\n\n/**\n * @override\n */\nHashMap.prototype.entrySet = function () {\n  const hashSet = new HashSet()\n  this.map_.entries().forEach(entry => hashSet.add(entry))\n  return hashSet\n}\n\n/**\n * @override\n */\nHashMap.prototype.size = function () {\n  return this.map_.size()\n}\n","import HashMap from '../../../../java/util/HashMap';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Serializable from '../../../../java/io/Serializable';\nexport default function PrecisionModel() {\n\tthis._modelType = null;\n\tthis._scale = null;\n\tif (arguments.length === 0) {\n\t\tthis._modelType = PrecisionModel.FLOATING;\n\t} else if (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Type) {\n\t\t\tlet modelType = arguments[0];\n\t\t\tthis._modelType = modelType;\n\t\t\tif (modelType === PrecisionModel.FIXED) {\n\t\t\t\tthis.setScale(1.0);\n\t\t\t}\n\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\tlet scale = arguments[0];\n\t\t\tthis._modelType = PrecisionModel.FIXED;\n\t\t\tthis.setScale(scale);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet pm = arguments[0];\n\t\t\tthis._modelType = pm._modelType;\n\t\t\tthis._scale = pm._scale;\n\t\t}\n\t}\n}\nextend(PrecisionModel.prototype, {\n\tequals: function (other) {\n\t\tif (!(other instanceof PrecisionModel)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar otherPrecisionModel = other;\n\t\treturn this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale;\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tvar sigDigits = this.getMaximumSignificantDigits();\n\t\tvar otherSigDigits = other.getMaximumSignificantDigits();\n\t\treturn new Integer(sigDigits).compareTo(new Integer(otherSigDigits));\n\t},\n\tgetScale: function () {\n\t\treturn this._scale;\n\t},\n\tisFloating: function () {\n\t\treturn this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE;\n\t},\n\tgetType: function () {\n\t\treturn this._modelType;\n\t},\n\ttoString: function () {\n\t\tvar description = \"UNKNOWN\";\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tdescription = \"Floating\";\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tdescription = \"Floating-Single\";\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tdescription = \"Fixed (Scale=\" + this.getScale() + \")\";\n\t\t}\n\t\treturn description;\n\t},\n\tmakePrecise: function () {\n\t\tif (typeof arguments[0] === \"number\") {\n\t\t\tlet val = arguments[0];\n\t\t\tif (Double.isNaN(val)) return val;\n\t\t\tif (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\t\tvar floatSingleVal = val;\n\t\t\t\treturn floatSingleVal;\n\t\t\t}\n\t\t\tif (this._modelType === PrecisionModel.FIXED) {\n\t\t\t\treturn Math.round(val * this._scale) / this._scale;\n\t\t\t}\n\t\t\treturn val;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tif (this._modelType === PrecisionModel.FLOATING) return null;\n\t\t\tcoord.x = this.makePrecise(coord.x);\n\t\t\tcoord.y = this.makePrecise(coord.y);\n\t\t}\n\t},\n\tgetMaximumSignificantDigits: function () {\n\t\tvar maxSigDigits = 16;\n\t\tif (this._modelType === PrecisionModel.FLOATING) {\n\t\t\tmaxSigDigits = 16;\n\t\t} else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n\t\t\tmaxSigDigits = 6;\n\t\t} else if (this._modelType === PrecisionModel.FIXED) {\n\t\t\tmaxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n\t\t}\n\t\treturn maxSigDigits;\n\t},\n\tsetScale: function (scale) {\n\t\tthis._scale = Math.abs(scale);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable, Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn PrecisionModel;\n\t}\n});\nPrecisionModel.mostPrecise = function (pm1, pm2) {\n\tif (pm1.compareTo(pm2) >= 0) return pm1;\n\treturn pm2;\n};\nfunction Type() {\n\tthis._name = null;\n\tlet name = arguments[0];\n\tthis._name = name;\n\tType.nameToTypeMap.put(name, this);\n}\nextend(Type.prototype, {\n\treadResolve: function () {\n\t\treturn Type.nameToTypeMap.get(this._name);\n\t},\n\ttoString: function () {\n\t\treturn this._name;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Type;\n\t}\n});\nType.serialVersionUID = -5528602631731589822;\nType.nameToTypeMap = new HashMap();\nPrecisionModel.Type = Type;\nPrecisionModel.serialVersionUID = 7777263578777803835;\nPrecisionModel.FIXED = new Type(\"FIXED\");\nPrecisionModel.FLOATING = new Type(\"FLOATING\");\nPrecisionModel.FLOATING_SINGLE = new Type(\"FLOATING SINGLE\");\nPrecisionModel.maximumPreciseValue = 9007199254740992.0;\n","import CoordinateSequenceFactory from './CoordinateSequenceFactory';\nimport LineString from './LineString';\nimport Geometry from './Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from './Coordinate';\nimport Point from './Point';\nimport Polygon from './Polygon';\nimport MultiPoint from './MultiPoint';\nimport GeometryEditor from './util/GeometryEditor';\nimport LinearRing from './LinearRing';\nimport extend from '../../../../extend';\nimport CoordinateArraySequenceFactory from './impl/CoordinateArraySequenceFactory';\nimport MultiPolygon from './MultiPolygon';\nimport CoordinateSequences from './CoordinateSequences';\nimport CoordinateSequence from './CoordinateSequence';\nimport GeometryCollection from './GeometryCollection';\nimport PrecisionModel from './PrecisionModel';\nimport Serializable from '../../../../java/io/Serializable';\nimport Assert from '../util/Assert';\nimport MultiLineString from './MultiLineString';\nexport default function GeometryFactory() {\n\tthis._precisionModel = null;\n\tthis._coordinateSequenceFactory = null;\n\tthis._SRID = null;\n\tif (arguments.length === 0) {\n\t\tGeometryFactory.call(this, new PrecisionModel(), 0);\n\t} else if (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n\t\t\tlet coordinateSequenceFactory = arguments[0];\n\t\t\tGeometryFactory.call(this, new PrecisionModel(), 0, coordinateSequenceFactory);\n\t\t} else if (arguments[0] instanceof PrecisionModel) {\n\t\t\tlet precisionModel = arguments[0];\n\t\t\tGeometryFactory.call(this, precisionModel, 0, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1];\n\t\tGeometryFactory.call(this, precisionModel, SRID, GeometryFactory.getDefaultCoordinateSequenceFactory());\n\t} else if (arguments.length === 3) {\n\t\tlet precisionModel = arguments[0], SRID = arguments[1], coordinateSequenceFactory = arguments[2];\n\t\tthis._precisionModel = precisionModel;\n\t\tthis._coordinateSequenceFactory = coordinateSequenceFactory;\n\t\tthis._SRID = SRID;\n\t}\n}\nextend(GeometryFactory.prototype, {\n\ttoGeometry: function (envelope) {\n\t\tif (envelope.isNull()) {\n\t\t\treturn this.createPoint();\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()));\n\t\t}\n\t\tif (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n\t\t\treturn this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())]);\n\t\t}\n\t\treturn this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null);\n\t},\n\tcreateLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLineString(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLineString(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LineString(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiLineString: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiLineString(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet lineStrings = arguments[0];\n\t\t\treturn new MultiLineString(lineStrings, this);\n\t\t}\n\t},\n\tbuildGeometry: function (geomList) {\n\t\tvar geomClass = null;\n\t\tvar isHeterogeneous = false;\n\t\tvar hasGeometryCollection = false;\n\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\tvar geom = i.next();\n\t\t\tvar partClass = geom.getClass();\n\t\t\tif (geomClass === null) {\n\t\t\t\tgeomClass = partClass;\n\t\t\t}\n\t\t\tif (partClass !== geomClass) {\n\t\t\t\tisHeterogeneous = true;\n\t\t\t}\n\t\t\tif (geom instanceof GeometryCollection) hasGeometryCollection = true;\n\t\t}\n\t\tif (geomClass === null) {\n\t\t\treturn this.createGeometryCollection();\n\t\t}\n\t\tif (isHeterogeneous || hasGeometryCollection) {\n\t\t\treturn this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList));\n\t\t}\n\t\tvar geom0 = geomList.iterator().next();\n\t\tvar isCollection = geomList.size() > 1;\n\t\tif (isCollection) {\n\t\t\tif (geom0 instanceof Polygon) {\n\t\t\t\treturn this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList));\n\t\t\t} else if (geom0 instanceof LineString) {\n\t\t\t\treturn this.createMultiLineString(GeometryFactory.toLineStringArray(geomList));\n\t\t\t} else if (geom0 instanceof Point) {\n\t\t\t\treturn this.createMultiPoint(GeometryFactory.toPointArray(geomList));\n\t\t\t}\n\t\t\tAssert.shouldNeverReachHere(\"Unhandled class: \" + geom0.getClass().getName());\n\t\t}\n\t\treturn geom0;\n\t},\n\tcreateMultiPointFromCoords: function (coordinates) {\n\t\treturn this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t},\n\tcreatePoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPoint(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet coordinate = arguments[0];\n\t\t\t\treturn this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new Point(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinateSequenceFactory: function () {\n\t\treturn this._coordinateSequenceFactory;\n\t},\n\tcreatePolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createPolygon(null, null);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof Array) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(this.createLinearRing(shell));\n\t\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\t\tlet shell = arguments[0];\n\t\t\t\treturn this.createPolygon(shell, null);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet shell = arguments[0], holes = arguments[1];\n\t\t\treturn new Polygon(shell, holes, this);\n\t\t}\n\t},\n\tgetSRID: function () {\n\t\treturn this._SRID;\n\t},\n\tcreateGeometryCollection: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new GeometryCollection(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geometries = arguments[0];\n\t\t\treturn new GeometryCollection(geometries, this);\n\t\t}\n\t},\n\tcreateGeometry: function (g) {\n\t\tvar editor = new GeometryEditor(this);\n\t\treturn editor.edit(g, {\n\t\t\tedit: function () {\n\t\t\t\tif (arguments.length === 2 && (arguments[1] instanceof Geometry && hasInterface(arguments[0], CoordinateSequence))) {\n\t\t\t\t\tlet coordSeq = arguments[0], geometry = arguments[1];\n\t\t\t\t\treturn this._coordinateSequenceFactory.create(coordSeq);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tgetPrecisionModel: function () {\n\t\treturn this._precisionModel;\n\t},\n\tcreateLinearRing: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.createLinearRing(this.getCoordinateSequenceFactory().create([]));\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\treturn new LinearRing(coordinates, this);\n\t\t\t}\n\t\t}\n\t},\n\tcreateMultiPolygon: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPolygon(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet polygons = arguments[0];\n\t\t\treturn new MultiPolygon(polygons, this);\n\t\t}\n\t},\n\tcreateMultiPoint: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn new MultiPoint(null, this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Array) {\n\t\t\t\tlet point = arguments[0];\n\t\t\t\treturn new MultiPoint(point, this);\n\t\t\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\t\t\tlet coordinates = arguments[0];\n\t\t\t\tif (coordinates === null) {\n\t\t\t\t\treturn this.createMultiPoint(new Array(0).fill(null));\n\t\t\t\t}\n\t\t\t\tvar points = new Array(coordinates.size()).fill(null);\n\t\t\t\tfor (var i = 0; i < coordinates.size(); i++) {\n\t\t\t\t\tvar ptSeq = this.getCoordinateSequenceFactory().create(1, coordinates.getDimension());\n\t\t\t\t\tCoordinateSequences.copy(coordinates, i, ptSeq, 0, 1);\n\t\t\t\t\tpoints[i] = this.createPoint(ptSeq);\n\t\t\t\t}\n\t\t\t\treturn this.createMultiPoint(points);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryFactory;\n\t}\n});\nGeometryFactory.toMultiPolygonArray = function (multiPolygons) {\n\tvar multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n\treturn multiPolygons.toArray(multiPolygonArray);\n};\nGeometryFactory.toGeometryArray = function (geometries) {\n\tif (geometries === null) return null;\n\tvar geometryArray = new Array(geometries.size()).fill(null);\n\treturn geometries.toArray(geometryArray);\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function () {\n\treturn CoordinateArraySequenceFactory.instance();\n};\nGeometryFactory.toMultiLineStringArray = function (multiLineStrings) {\n\tvar multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n\treturn multiLineStrings.toArray(multiLineStringArray);\n};\nGeometryFactory.toLineStringArray = function (lineStrings) {\n\tvar lineStringArray = new Array(lineStrings.size()).fill(null);\n\treturn lineStrings.toArray(lineStringArray);\n};\nGeometryFactory.toMultiPointArray = function (multiPoints) {\n\tvar multiPointArray = new Array(multiPoints.size()).fill(null);\n\treturn multiPoints.toArray(multiPointArray);\n};\nGeometryFactory.toLinearRingArray = function (linearRings) {\n\tvar linearRingArray = new Array(linearRings.size()).fill(null);\n\treturn linearRings.toArray(linearRingArray);\n};\nGeometryFactory.toPointArray = function (points) {\n\tvar pointArray = new Array(points.size()).fill(null);\n\treturn points.toArray(pointArray);\n};\nGeometryFactory.toPolygonArray = function (polygons) {\n\tvar polygonArray = new Array(polygons.size()).fill(null);\n\treturn polygons.toArray(polygonArray);\n};\nGeometryFactory.createPointFromInternalCoord = function (coord, exemplar) {\n\texemplar.getPrecisionModel().makePrecise(coord);\n\treturn exemplar.getFactory().createPoint(coord);\n};\nGeometryFactory.serialVersionUID = -6820524753094095635;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n}\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nexport default function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.precisionModel = this.geometryFactory.getPrecisionModel()\n}\n\nextend(WKTParser.prototype, {\n  /**\n   * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n   * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n   * and GEOMETRYCOLLECTION.\n   *\n   * @param {String} wkt A WKT string.\n   * @return {Geometry} A geometry instance.\n   * @private\n   */\n  read (wkt) {\n    var geometry, type, str\n    wkt = wkt.replace(/[\\n\\r]/g, ' ')\n    var matches = regExes.typeStr.exec(wkt)\n    if (wkt.search('EMPTY') !== -1) {\n      matches = regExes.emptyTypeStr.exec(wkt)\n      matches[2] = undefined\n    }\n    if (matches) {\n      type = matches[1].toLowerCase()\n      str = matches[2]\n      if (parse[type]) {\n        geometry = parse[type].call(this, str)\n      }\n    }\n\n    if (geometry === undefined) throw new Error('Could not parse WKT ' + wkt)\n\n    return geometry\n  },\n\n  /**\n   * Serialize a geometry into a WKT string.\n   *\n   * @param {Geometry} geometry A feature or array of features.\n   * @return {String} The WKT string representation of the input geometries.\n   * @private\n   */\n  write (geometry) {\n    return this.extractGeometry(geometry)\n  },\n\n  /**\n   * Entry point to construct the WKT for a single Geometry object.\n   *\n   * @param {Geometry} geometry\n   * @return {String} A WKT string of representing the geometry.\n   * @private\n   */\n  extractGeometry (geometry) {\n    var type = geometry.getGeometryType().toLowerCase()\n    if (!extract[type]) {\n      return null\n    }\n    var wktType = type.toUpperCase()\n    var data\n    if (geometry.isEmpty()) {\n      data = wktType + ' EMPTY'\n    } else {\n      data = wktType + '(' + extract[type].call(this, geometry) + ')'\n    }\n    return data\n  }\n})\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nconst extract = {\n  coordinate (coordinate) {\n    return coordinate.x + ' ' + coordinate.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point (point) {\n    return extract.coordinate.call(this, point._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint (multipoint) {\n    var array = []\n    for (let i = 0, len = multipoint._geometries.length; i < len; ++i) {\n      array.push('(' + extract.point.call(this, multipoint._geometries[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring (linestring) {\n    var array = []\n    for (let i = 0, len = linestring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.call(this, linestring._points._coordinates[i]))\n    }\n    return array.join(',')\n  },\n\n  linearring (linearring) {\n    var array = []\n    for (let i = 0, len = linearring._points._coordinates.length; i < len; ++i) {\n      array.push(extract.coordinate.call(this, linearring._points._coordinates[i]))\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring (multilinestring) {\n    var array = []\n    for (let i = 0, len = multilinestring._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract.linestring.call(this, multilinestring._geometries[i]) +\n        ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon (polygon) {\n    var array = []\n    array.push('(' + extract.linestring.call(this, polygon._shell) + ')')\n    for (let i = 0, len = polygon._holes.length; i < len; ++i) {\n      array.push('(' + extract.linestring.call(this, polygon._holes[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon (multipolygon) {\n    var array = []\n    for (let i = 0, len = multipolygon._geometries.length; i < len; ++i) {\n      array.push('(' + extract.polygon.call(this, multipolygon._geometries[i]) + ')')\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection (collection) {\n    var array = []\n    for (let i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this.extractGeometry(collection._geometries[i]))\n    }\n    return array.join(',')\n  }\n}\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nconst parse = {\n  \n  coord (str) {\n    var coords = str.trim().split(regExes.spaces)\n    var coord = new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1]))\n    this.precisionModel.makePrecise(coord)\n    return coord\n  },\n\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point (str) {\n    if (str === undefined)\n      return this.geometryFactory.createPoint()\n    return this.geometryFactory.createPoint(parse.coord.call(this, str))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint (str) {\n    if (str === undefined)\n      return this.geometryFactory.createMultiPoint()\n    var point\n    var points = str.trim().split(',')\n    var components = []\n    for (let i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1')\n      components.push(parse.point.call(this, point))\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      components.push(parse.coord.call(this, points[i]))\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',')\n    var components = []\n    var coords\n    for (let i = 0, len = points.length; i < len; ++i) {\n      components.push(parse.coord.call(this, points[i]))\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line\n    var lines = str.trim().split(regExes.parenComma)\n    var components = []\n    for (let i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1')\n      components.push(parse.linestring.call(this, line))\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring\n    var rings = str.trim().split(regExes.parenComma)\n    var shell\n    var holes = []\n    for (let i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1')\n      linestring = parse.linestring.call(this, ring)\n      linearring = this.geometryFactory.createLinearRing(linestring._points)\n      if (i === 0) {\n        shell = linearring\n      } else {\n        holes.push(linearring)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon\n    var polygons = str.trim().split(regExes.doubleParenComma)\n    var components = []\n    for (let i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1')\n      components.push(parse.polygon.call(this, polygon))\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1')\n    var wktArray = str.trim().split('|')\n    var components = []\n    for (let i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this.read(wktArray[i]))\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n}\n","/**\n * @module org/locationtech/jts/io/WKTWriter\n */\n\nimport WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory)\n}\n\nextend(WKTWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its Well-known Text representation.\n   *\n   * @param {Geometry} geometry a <code>Geometry</code> to process.\n   * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n   *         Features Specification).\n   * @memberof module:org/locationtech/jts/io/WKTWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n\nextend(WKTWriter, {\n  /**\n   * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n   * {@link Coordinate}s.\n   *\n   * @param p0 the first coordinate.\n   * @param p1 the second coordinate.\n   *\n   * @return the WKT.\n   * @private\n   */\n  toLineString (p0, p1) {\n    if (arguments.length !== 2) {\n      throw new Error('Not implemented')\n    }\n\n    return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n  }\n})\n","import WKTWriter from '../io/WKTWriter';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Assert from '../util/Assert';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default function LineIntersector() {\n\tthis._result = null;\n\tthis._inputLines = Array(2).fill().map(() => Array(2));\n\tthis._intPt = new Array(2).fill(null);\n\tthis._intLineIndex = null;\n\tthis._isProper = null;\n\tthis._pa = null;\n\tthis._pb = null;\n\tthis._precisionModel = null;\n\tthis._intPt[0] = new Coordinate();\n\tthis._intPt[1] = new Coordinate();\n\tthis._pa = this._intPt[0];\n\tthis._pb = this._intPt[1];\n\tthis._result = 0;\n}\nextend(LineIntersector.prototype, {\n\tgetIndexAlongSegment: function (segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intLineIndex[segmentIndex][intIndex];\n\t},\n\tgetTopologySummary: function () {\n\t\tvar catBuilder = new StringBuilder();\n\t\tif (this.isEndPoint()) catBuilder.append(\" endpoint\");\n\t\tif (this._isProper) catBuilder.append(\" proper\");\n\t\tif (this.isCollinear()) catBuilder.append(\" collinear\");\n\t\treturn catBuilder.toString();\n\t},\n\tcomputeIntersection: function (p1, p2, p3, p4) {\n\t\tthis._inputLines[0][0] = p1;\n\t\tthis._inputLines[0][1] = p2;\n\t\tthis._inputLines[1][0] = p3;\n\t\tthis._inputLines[1][1] = p4;\n\t\tthis._result = this.computeIntersect(p1, p2, p3, p4);\n\t},\n\tgetIntersectionNum: function () {\n\t\treturn this._result;\n\t},\n\tcomputeIntLineIndex: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._intLineIndex === null) {\n\t\t\t\tthis._intLineIndex = Array(2).fill().map(() => Array(2));\n\t\t\t\tthis.computeIntLineIndex(0);\n\t\t\t\tthis.computeIntLineIndex(1);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet segmentIndex = arguments[0];\n\t\t\tvar dist0 = this.getEdgeDistance(segmentIndex, 0);\n\t\t\tvar dist1 = this.getEdgeDistance(segmentIndex, 1);\n\t\t\tif (dist0 > dist1) {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 0;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 1;\n\t\t\t} else {\n\t\t\t\tthis._intLineIndex[segmentIndex][0] = 1;\n\t\t\t\tthis._intLineIndex[segmentIndex][1] = 0;\n\t\t\t}\n\t\t}\n\t},\n\tisProper: function () {\n\t\treturn this.hasIntersection() && this._isProper;\n\t},\n\tsetPrecisionModel: function (precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t},\n\tisInteriorIntersection: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isInteriorIntersection(0)) return true;\n\t\t\tif (this.isInteriorIntersection(1)) return true;\n\t\t\treturn false;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet inputLineIndex = arguments[0];\n\t\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\t\tif (!(this._intPt[i].equals2D(this._inputLines[inputLineIndex][0]) || this._intPt[i].equals2D(this._inputLines[inputLineIndex][1]))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t},\n\tgetIntersection: function (intIndex) {\n\t\treturn this._intPt[intIndex];\n\t},\n\tisEndPoint: function () {\n\t\treturn this.hasIntersection() && !this._isProper;\n\t},\n\thasIntersection: function () {\n\t\treturn this._result !== LineIntersector.NO_INTERSECTION;\n\t},\n\tgetEdgeDistance: function (segmentIndex, intIndex) {\n\t\tvar dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n\t\treturn dist;\n\t},\n\tisCollinear: function () {\n\t\treturn this._result === LineIntersector.COLLINEAR_INTERSECTION;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + \" - \" + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary();\n\t},\n\tgetEndpoint: function (segmentIndex, ptIndex) {\n\t\treturn this._inputLines[segmentIndex][ptIndex];\n\t},\n\tisIntersection: function (pt) {\n\t\tfor (var i = 0; i < this._result; i++) {\n\t\t\tif (this._intPt[i].equals2D(pt)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetIntersectionAlongSegment: function (segmentIndex, intIndex) {\n\t\tthis.computeIntLineIndex();\n\t\treturn this._intPt[this._intLineIndex[segmentIndex][intIndex]];\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineIntersector;\n\t}\n});\nLineIntersector.computeEdgeDistance = function (p, p0, p1) {\n\tvar dx = Math.abs(p1.x - p0.x);\n\tvar dy = Math.abs(p1.y - p0.y);\n\tvar dist = -1.0;\n\tif (p.equals(p0)) {\n\t\tdist = 0.0;\n\t} else if (p.equals(p1)) {\n\t\tif (dx > dy) dist = dx; else dist = dy;\n\t} else {\n\t\tvar pdx = Math.abs(p.x - p0.x);\n\t\tvar pdy = Math.abs(p.y - p0.y);\n\t\tif (dx > dy) dist = pdx; else dist = pdy;\n\t\tif (dist === 0.0 && !p.equals(p0)) {\n\t\t\tdist = Math.max(pdx, pdy);\n\t\t}\n\t}\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p0)), \"Bad distance calculation\");\n\treturn dist;\n};\nLineIntersector.nonRobustComputeEdgeDistance = function (p, p1, p2) {\n\tvar dx = p.x - p1.x;\n\tvar dy = p.y - p1.y;\n\tvar dist = Math.sqrt(dx * dx + dy * dy);\n\tAssert.isTrue(!(dist === 0.0 && !p.equals(p1)), \"Invalid distance calculation\");\n\treturn dist;\n};\nLineIntersector.DONT_INTERSECT = 0;\nLineIntersector.DO_INTERSECT = 1;\nLineIntersector.COLLINEAR = 2;\nLineIntersector.NO_INTERSECTION = 0;\nLineIntersector.POINT_INTERSECTION = 1;\nLineIntersector.COLLINEAR_INTERSECTION = 2;\n","import NotRepresentableException from './NotRepresentableException';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nimport System from '../../../../java/lang/System';\nimport HCoordinate from './HCoordinate';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport Distance from './Distance';\nimport LineIntersector from './LineIntersector';\nexport default function RobustLineIntersector() {\n\tLineIntersector.apply(this);\n}\ninherits(RobustLineIntersector, LineIntersector);\nextend(RobustLineIntersector.prototype, {\n\tisInSegmentEnvelopes: function (intPt) {\n\t\tvar env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n\t\tvar env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n\t\treturn env0.contains(intPt) && env1.contains(intPt);\n\t},\n\tcomputeIntersection: function () {\n\t\tif (arguments.length === 3) {\n\t\t\tlet p = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\t\t\tthis._isProper = false;\n\t\t\tif (Envelope.intersects(p1, p2, p)) {\n\t\t\t\tif (Orientation.index(p1, p2, p) === 0 && Orientation.index(p2, p1, p) === 0) {\n\t\t\t\t\tthis._isProper = true;\n\t\t\t\t\tif (p.equals(p1) || p.equals(p2)) {\n\t\t\t\t\t\tthis._isProper = false;\n\t\t\t\t\t}\n\t\t\t\t\tthis._result = LineIntersector.POINT_INTERSECTION;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._result = LineIntersector.NO_INTERSECTION;\n\t\t} else return LineIntersector.prototype.computeIntersection.apply(this, arguments);\n\t},\n\tnormalizeToMinimum: function (n1, n2, n3, n4, normPt) {\n\t\tnormPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n\t\tnormPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n\t\tn1.x -= normPt.x;\n\t\tn1.y -= normPt.y;\n\t\tn2.x -= normPt.x;\n\t\tn2.y -= normPt.y;\n\t\tn3.x -= normPt.x;\n\t\tn3.y -= normPt.y;\n\t\tn4.x -= normPt.x;\n\t\tn4.y -= normPt.y;\n\t},\n\tsafeHCoordinateIntersection: function (p1, p2, q1, q2) {\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(p1, p2, q1, q2);\n\t\t} catch (e) {\n\t\t\tif (e instanceof NotRepresentableException) {\n\t\t\t\tintPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n\t\t\t} else throw e;\n\t\t} finally {}\n\t\treturn intPt;\n\t},\n\tintersection: function (p1, p2, q1, q2) {\n\t\tvar intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n\t\tif (!this.isInSegmentEnvelopes(intPt)) {\n\t\t\tintPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n\t\t}\n\t\tif (this._precisionModel !== null) {\n\t\t\tthis._precisionModel.makePrecise(intPt);\n\t\t}\n\t\treturn intPt;\n\t},\n\tsmallestInAbsValue: function (x1, x2, x3, x4) {\n\t\tvar x = x1;\n\t\tvar xabs = Math.abs(x);\n\t\tif (Math.abs(x2) < xabs) {\n\t\t\tx = x2;\n\t\t\txabs = Math.abs(x2);\n\t\t}\n\t\tif (Math.abs(x3) < xabs) {\n\t\t\tx = x3;\n\t\t\txabs = Math.abs(x3);\n\t\t}\n\t\tif (Math.abs(x4) < xabs) {\n\t\t\tx = x4;\n\t\t}\n\t\treturn x;\n\t},\n\tcheckDD: function (p1, p2, q1, q2, intPt) {\n\t\tvar intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n\t\tvar isIn = this.isInSegmentEnvelopes(intPtDD);\n\t\tSystem.out.println(\"DD in env = \" + isIn + \"  --------------------- \" + intPtDD);\n\t\tif (intPt.distance(intPtDD) > 0.0001) {\n\t\t\tSystem.out.println(\"Distance = \" + intPt.distance(intPtDD));\n\t\t}\n\t},\n\tintersectionWithNormalization: function (p1, p2, q1, q2) {\n\t\tvar n1 = new Coordinate(p1);\n\t\tvar n2 = new Coordinate(p2);\n\t\tvar n3 = new Coordinate(q1);\n\t\tvar n4 = new Coordinate(q2);\n\t\tvar normPt = new Coordinate();\n\t\tthis.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n\t\tvar intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n\t\tintPt.x += normPt.x;\n\t\tintPt.y += normPt.y;\n\t\treturn intPt;\n\t},\n\tcomputeCollinearIntersection: function (p1, p2, q1, q2) {\n\t\tvar p1q1p2 = Envelope.intersects(p1, p2, q1);\n\t\tvar p1q2p2 = Envelope.intersects(p1, p2, q2);\n\t\tvar q1p1q2 = Envelope.intersects(q1, q2, p1);\n\t\tvar q1p2q2 = Envelope.intersects(q1, q2, p2);\n\t\tif (p1q1p2 && p1q2p2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = q2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (q1p1q2 && q1p2q2) {\n\t\t\tthis._intPt[0] = p1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q1p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q1;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p1q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p1;\n\t\t\treturn q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\tif (p1q2p2 && q1p2q2) {\n\t\t\tthis._intPt[0] = q2;\n\t\t\tthis._intPt[1] = p2;\n\t\t\treturn q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector.POINT_INTERSECTION : LineIntersector.COLLINEAR_INTERSECTION;\n\t\t}\n\t\treturn LineIntersector.NO_INTERSECTION;\n\t},\n\tnormalizeToEnvCentre: function (n00, n01, n10, n11, normPt) {\n\t\tvar minX0 = n00.x < n01.x ? n00.x : n01.x;\n\t\tvar minY0 = n00.y < n01.y ? n00.y : n01.y;\n\t\tvar maxX0 = n00.x > n01.x ? n00.x : n01.x;\n\t\tvar maxY0 = n00.y > n01.y ? n00.y : n01.y;\n\t\tvar minX1 = n10.x < n11.x ? n10.x : n11.x;\n\t\tvar minY1 = n10.y < n11.y ? n10.y : n11.y;\n\t\tvar maxX1 = n10.x > n11.x ? n10.x : n11.x;\n\t\tvar maxY1 = n10.y > n11.y ? n10.y : n11.y;\n\t\tvar intMinX = minX0 > minX1 ? minX0 : minX1;\n\t\tvar intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n\t\tvar intMinY = minY0 > minY1 ? minY0 : minY1;\n\t\tvar intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n\t\tvar intMidX = (intMinX + intMaxX) / 2.0;\n\t\tvar intMidY = (intMinY + intMaxY) / 2.0;\n\t\tnormPt.x = intMidX;\n\t\tnormPt.y = intMidY;\n\t\tn00.x -= normPt.x;\n\t\tn00.y -= normPt.y;\n\t\tn01.x -= normPt.x;\n\t\tn01.y -= normPt.y;\n\t\tn10.x -= normPt.x;\n\t\tn10.y -= normPt.y;\n\t\tn11.x -= normPt.x;\n\t\tn11.y -= normPt.y;\n\t},\n\tcomputeIntersect: function (p1, p2, q1, q2) {\n\t\tthis._isProper = false;\n\t\tif (!Envelope.intersects(p1, p2, q1, q2)) return LineIntersector.NO_INTERSECTION;\n\t\tvar Pq1 = Orientation.index(p1, p2, q1);\n\t\tvar Pq2 = Orientation.index(p1, p2, q2);\n\t\tif (Pq1 > 0 && Pq2 > 0 || Pq1 < 0 && Pq2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar Qp1 = Orientation.index(q1, q2, p1);\n\t\tvar Qp2 = Orientation.index(q1, q2, p2);\n\t\tif (Qp1 > 0 && Qp2 > 0 || Qp1 < 0 && Qp2 < 0) {\n\t\t\treturn LineIntersector.NO_INTERSECTION;\n\t\t}\n\t\tvar collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n\t\tif (collinear) {\n\t\t\treturn this.computeCollinearIntersection(p1, p2, q1, q2);\n\t\t}\n\t\tif (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n\t\t\tthis._isProper = false;\n\t\t\tif (p1.equals2D(q1) || p1.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p1;\n\t\t\t} else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n\t\t\t\tthis._intPt[0] = p2;\n\t\t\t} else if (Pq1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q1);\n\t\t\t} else if (Pq2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(q2);\n\t\t\t} else if (Qp1 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p1);\n\t\t\t} else if (Qp2 === 0) {\n\t\t\t\tthis._intPt[0] = new Coordinate(p2);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._isProper = true;\n\t\t\tthis._intPt[0] = this.intersection(p1, p2, q1, q2);\n\t\t}\n\t\treturn LineIntersector.POINT_INTERSECTION;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RobustLineIntersector;\n\t}\n});\nRobustLineIntersector.nearestEndpoint = function (p1, p2, q1, q2) {\n\tvar nearestPt = p1;\n\tvar minDist = Distance.pointToSegment(p1, q1, q2);\n\tvar dist = Distance.pointToSegment(p2, q1, q2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = p2;\n\t}\n\tdist = Distance.pointToSegment(q1, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q1;\n\t}\n\tdist = Distance.pointToSegment(q2, p1, p2);\n\tif (dist < minDist) {\n\t\tminDist = dist;\n\t\tnearestPt = q2;\n\t}\n\treturn nearestPt;\n};\n","import NotRepresentableException from '../algorithm/NotRepresentableException';\nimport Coordinate from './Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport HCoordinate from '../algorithm/HCoordinate';\nimport Serializable from '../../../../java/io/Serializable';\nimport Distance from '../algorithm/Distance';\nexport default function LineSegment() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tif (arguments.length === 0) {\n\t\tLineSegment.call(this, new Coordinate(), new Coordinate());\n\t} else if (arguments.length === 1) {\n\t\tlet ls = arguments[0];\n\t\tLineSegment.call(this, ls.p0, ls.p1);\n\t} else if (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis.p0 = p0;\n\t\tthis.p1 = p1;\n\t} else if (arguments.length === 4) {\n\t\tlet x0 = arguments[0], y0 = arguments[1], x1 = arguments[2], y1 = arguments[3];\n\t\tLineSegment.call(this, new Coordinate(x0, y0), new Coordinate(x1, y1));\n\t}\n}\nextend(LineSegment.prototype, {\n\tminX: function () {\n\t\treturn Math.min(this.p0.x, this.p1.x);\n\t},\n\torientationIndex: function () {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar orient0 = Orientation.index(this.p0, this.p1, seg.p0);\n\t\t\tvar orient1 = Orientation.index(this.p0, this.p1, seg.p1);\n\t\t\tif (orient0 >= 0 && orient1 >= 0) return Math.max(orient0, orient1);\n\t\t\tif (orient0 <= 0 && orient1 <= 0) return Math.max(orient0, orient1);\n\t\t\treturn 0;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn Orientation.index(this.p0, this.p1, p);\n\t\t}\n\t},\n\ttoGeometry: function (geomFactory) {\n\t\treturn geomFactory.createLineString([this.p0, this.p1]);\n\t},\n\tisVertical: function () {\n\t\treturn this.p0.x === this.p1.x;\n\t},\n\tequals: function (o) {\n\t\tif (!(o instanceof LineSegment)) {\n\t\t\treturn false;\n\t\t}\n\t\tvar other = o;\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1);\n\t},\n\tintersection: function (line) {\n\t\tvar li = new RobustLineIntersector();\n\t\tli.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n\t\tif (li.hasIntersection()) return li.getIntersection(0);\n\t\treturn null;\n\t},\n\tproject: function () {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tif (p.equals(this.p0) || p.equals(this.p1)) return new Coordinate(p);\n\t\t\tvar r = this.projectionFactor(p);\n\t\t\tvar coord = new Coordinate();\n\t\t\tcoord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n\t\t\tcoord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n\t\t\treturn coord;\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tvar pf0 = this.projectionFactor(seg.p0);\n\t\t\tvar pf1 = this.projectionFactor(seg.p1);\n\t\t\tif (pf0 >= 1.0 && pf1 >= 1.0) return null;\n\t\t\tif (pf0 <= 0.0 && pf1 <= 0.0) return null;\n\t\t\tvar newp0 = this.project(seg.p0);\n\t\t\tif (pf0 < 0.0) newp0 = this.p0;\n\t\t\tif (pf0 > 1.0) newp0 = this.p1;\n\t\t\tvar newp1 = this.project(seg.p1);\n\t\t\tif (pf1 < 0.0) newp1 = this.p0;\n\t\t\tif (pf1 > 1.0) newp1 = this.p1;\n\t\t\treturn new LineSegment(newp0, newp1);\n\t\t}\n\t},\n\tnormalize: function () {\n\t\tif (this.p1.compareTo(this.p0) < 0) this.reverse();\n\t},\n\tangle: function () {\n\t\treturn Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x);\n\t},\n\tgetCoordinate: function (i) {\n\t\tif (i === 0) return this.p0;\n\t\treturn this.p1;\n\t},\n\tdistancePerpendicular: function (p) {\n\t\treturn Distance.pointToLinePerpendicular(p, this.p0, this.p1);\n\t},\n\tminY: function () {\n\t\treturn Math.min(this.p0.y, this.p1.y);\n\t},\n\tmidPoint: function () {\n\t\treturn LineSegment.midPoint(this.p0, this.p1);\n\t},\n\tprojectionFactor: function (p) {\n\t\tif (p.equals(this.p0)) return 0.0;\n\t\tif (p.equals(this.p1)) return 1.0;\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = dx * dx + dy * dy;\n\t\tif (len <= 0.0) return Double.NaN;\n\t\tvar r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n\t\treturn r;\n\t},\n\tclosestPoints: function (line) {\n\t\tvar intPt = this.intersection(line);\n\t\tif (intPt !== null) {\n\t\t\treturn [intPt, intPt];\n\t\t}\n\t\tvar closestPt = new Array(2).fill(null);\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar dist = null;\n\t\tvar close00 = this.closestPoint(line.p0);\n\t\tminDistance = close00.distance(line.p0);\n\t\tclosestPt[0] = close00;\n\t\tclosestPt[1] = line.p0;\n\t\tvar close01 = this.closestPoint(line.p1);\n\t\tdist = close01.distance(line.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = close01;\n\t\t\tclosestPt[1] = line.p1;\n\t\t}\n\t\tvar close10 = line.closestPoint(this.p0);\n\t\tdist = close10.distance(this.p0);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p0;\n\t\t\tclosestPt[1] = close10;\n\t\t}\n\t\tvar close11 = line.closestPoint(this.p1);\n\t\tdist = close11.distance(this.p1);\n\t\tif (dist < minDistance) {\n\t\t\tminDistance = dist;\n\t\t\tclosestPt[0] = this.p1;\n\t\t\tclosestPt[1] = close11;\n\t\t}\n\t\treturn closestPt;\n\t},\n\tclosestPoint: function (p) {\n\t\tvar factor = this.projectionFactor(p);\n\t\tif (factor > 0 && factor < 1) {\n\t\t\treturn this.project(p);\n\t\t}\n\t\tvar dist0 = this.p0.distance(p);\n\t\tvar dist1 = this.p1.distance(p);\n\t\tif (dist0 < dist1) return this.p0;\n\t\treturn this.p1;\n\t},\n\tmaxX: function () {\n\t\treturn Math.max(this.p0.x, this.p1.x);\n\t},\n\tgetLength: function () {\n\t\treturn this.p0.distance(this.p1);\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tvar comp0 = this.p0.compareTo(other.p0);\n\t\tif (comp0 !== 0) return comp0;\n\t\treturn this.p1.compareTo(other.p1);\n\t},\n\treverse: function () {\n\t\tvar temp = this.p0;\n\t\tthis.p0 = this.p1;\n\t\tthis.p1 = temp;\n\t},\n\tequalsTopo: function (other) {\n\t\treturn this.p0.equals(other.p0) && this.p1.equals(other.p1) || this.p0.equals(other.p1) && this.p1.equals(other.p0);\n\t},\n\tlineIntersection: function (line) {\n\t\ttry {\n\t\t\tvar intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n\t\t\treturn intPt;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {} else throw ex;\n\t\t} finally {}\n\t\treturn null;\n\t},\n\tmaxY: function () {\n\t\treturn Math.max(this.p0.y, this.p1.y);\n\t},\n\tpointAlongOffset: function (segmentLengthFraction, offsetDistance) {\n\t\tvar segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tvar segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\tvar dx = this.p1.x - this.p0.x;\n\t\tvar dy = this.p1.y - this.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = 0.0;\n\t\tvar uy = 0.0;\n\t\tif (offsetDistance !== 0.0) {\n\t\t\tif (len <= 0.0) throw new IllegalStateException(\"Cannot compute offset from zero-length line segment\");\n\t\t\tux = offsetDistance * dx / len;\n\t\t\tuy = offsetDistance * dy / len;\n\t\t}\n\t\tvar offsetx = segx - uy;\n\t\tvar offsety = segy + ux;\n\t\tvar coord = new Coordinate(offsetx, offsety);\n\t\treturn coord;\n\t},\n\tsetCoordinates: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ls = arguments[0];\n\t\t\tthis.setCoordinates(ls.p0, ls.p1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tthis.p0.x = p0.x;\n\t\t\tthis.p0.y = p0.y;\n\t\t\tthis.p1.x = p1.x;\n\t\t\tthis.p1.y = p1.y;\n\t\t}\n\t},\n\tsegmentFraction: function (inputPt) {\n\t\tvar segFrac = this.projectionFactor(inputPt);\n\t\tif (segFrac < 0.0) segFrac = 0.0; else if (segFrac > 1.0 || Double.isNaN(segFrac)) segFrac = 1.0;\n\t\treturn segFrac;\n\t},\n\ttoString: function () {\n\t\treturn \"LINESTRING( \" + this.p0.x + \" \" + this.p0.y + \", \" + this.p1.x + \" \" + this.p1.y + \")\";\n\t},\n\tisHorizontal: function () {\n\t\treturn this.p0.y === this.p1.y;\n\t},\n\tdistance: function () {\n\t\tif (arguments[0] instanceof LineSegment) {\n\t\t\tlet ls = arguments[0];\n\t\t\treturn Distance.segmentToSegment(this.p0, this.p1, ls.p0, ls.p1);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn Distance.pointToSegment(p, this.p0, this.p1);\n\t\t}\n\t},\n\tpointAlong: function (segmentLengthFraction) {\n\t\tvar coord = new Coordinate();\n\t\tcoord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n\t\tcoord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n\t\treturn coord;\n\t},\n\thashCode: function () {\n\t\tvar bits0 = java.lang.Double.doubleToLongBits(this.p0.x);\n\t\tbits0 ^= java.lang.Double.doubleToLongBits(this.p0.y) * 31;\n\t\tvar hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n\t\tvar bits1 = java.lang.Double.doubleToLongBits(this.p1.x);\n\t\tbits1 ^= java.lang.Double.doubleToLongBits(this.p1.y) * 31;\n\t\tvar hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n\t\treturn hash0 ^ hash1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegment;\n\t}\n});\nLineSegment.midPoint = function (p0, p1) {\n\treturn new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n};\nLineSegment.serialVersionUID = 3252005833466256227;\n","import IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Location() {}\nextend(Location.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Location;\n\t}\n});\nLocation.toLocationSymbol = function (locationValue) {\n\tswitch (locationValue) {\n\t\tcase Location.EXTERIOR:\n\t\t\treturn 'e';\n\t\tcase Location.BOUNDARY:\n\t\t\treturn 'b';\n\t\tcase Location.INTERIOR:\n\t\t\treturn 'i';\n\t\tcase Location.NONE:\n\t\t\treturn '-';\n\t}\n\tthrow new IllegalArgumentException(\"Unknown location value: \" + locationValue);\n};\nLocation.INTERIOR = 0;\nLocation.BOUNDARY = 1;\nLocation.EXTERIOR = 2;\nLocation.NONE = -1;\n","import Location from './Location';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Dimension from './Dimension';\nimport Cloneable from '../../../../java/lang/Cloneable';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nexport default function IntersectionMatrix() {\n\tthis._matrix = null;\n\tif (arguments.length === 0) {\n\t\tthis._matrix = Array(3).fill().map(() => Array(3));\n\t\tthis.setAll(Dimension.FALSE);\n\t} else if (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet elements = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis.set(elements);\n\t\t} else if (arguments[0] instanceof IntersectionMatrix) {\n\t\t\tlet other = arguments[0];\n\t\t\tIntersectionMatrix.call(this);\n\t\t\tthis._matrix[Location.INTERIOR][Location.INTERIOR] = other._matrix[Location.INTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.INTERIOR][Location.BOUNDARY] = other._matrix[Location.INTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.INTERIOR][Location.EXTERIOR] = other._matrix[Location.INTERIOR][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.INTERIOR] = other._matrix[Location.BOUNDARY][Location.INTERIOR];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.BOUNDARY] = other._matrix[Location.BOUNDARY][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.BOUNDARY][Location.EXTERIOR] = other._matrix[Location.BOUNDARY][Location.EXTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.INTERIOR] = other._matrix[Location.EXTERIOR][Location.INTERIOR];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.BOUNDARY] = other._matrix[Location.EXTERIOR][Location.BOUNDARY];\n\t\t\tthis._matrix[Location.EXTERIOR][Location.EXTERIOR] = other._matrix[Location.EXTERIOR][Location.EXTERIOR];\n\t\t}\n\t}\n}\nextend(IntersectionMatrix.prototype, {\n\tisIntersects: function () {\n\t\treturn !this.isDisjoint();\n\t},\n\tisCovers: function () {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCoveredBy: function () {\n\t\tvar hasPointInCommon = IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]);\n\t\treturn hasPointInCommon && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tset: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet dimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < dimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis._matrix[row][col] = Dimension.toDimensionValue(dimensionSymbols.charAt(i));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], dimensionValue = arguments[2];\n\t\t\tthis._matrix[row][column] = dimensionValue;\n\t\t}\n\t},\n\tisContains: function () {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tsetAtLeast: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet minimumDimensionSymbols = arguments[0];\n\t\t\tfor (var i = 0; i < minimumDimensionSymbols.length; i++) {\n\t\t\t\tvar row = Math.trunc(i / 3);\n\t\t\t\tvar col = i % 3;\n\t\t\t\tthis.setAtLeast(row, col, Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet row = arguments[0], column = arguments[1], minimumDimensionValue = arguments[2];\n\t\t\tif (this._matrix[row][column] < minimumDimensionValue) {\n\t\t\t\tthis._matrix[row][column] = minimumDimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tsetAtLeastIfValid: function (row, column, minimumDimensionValue) {\n\t\tif (row >= 0 && column >= 0) {\n\t\t\tthis.setAtLeast(row, column, minimumDimensionValue);\n\t\t}\n\t},\n\tisWithin: function () {\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE;\n\t},\n\tisTouches: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA > dimensionOfGeometryB) {\n\t\t\treturn this.isTouches(dimensionOfGeometryB, dimensionOfGeometryA);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && (IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.BOUNDARY]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.INTERIOR]) || IntersectionMatrix.isTrue(this._matrix[Location.BOUNDARY][Location.BOUNDARY]));\n\t\t}\n\t\treturn false;\n\t},\n\tisOverlaps: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 1 && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\treturn false;\n\t},\n\tisEquals: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA !== dimensionOfGeometryB) {\n\t\t\treturn false;\n\t\t}\n\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && this._matrix[Location.INTERIOR][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.EXTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.EXTERIOR][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\ttoString: function () {\n\t\tvar builder = new StringBuilder(\"123456789\");\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tbuilder.setCharAt(3 * ai + bi, Dimension.toDimensionSymbol(this._matrix[ai][bi]));\n\t\t\t}\n\t\t}\n\t\treturn builder.toString();\n\t},\n\tsetAll: function (dimensionValue) {\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tthis._matrix[ai][bi] = dimensionValue;\n\t\t\t}\n\t\t}\n\t},\n\tget: function (row, column) {\n\t\treturn this._matrix[row][column];\n\t},\n\ttranspose: function () {\n\t\tvar temp = this._matrix[1][0];\n\t\tthis._matrix[1][0] = this._matrix[0][1];\n\t\tthis._matrix[0][1] = temp;\n\t\ttemp = this._matrix[2][0];\n\t\tthis._matrix[2][0] = this._matrix[0][2];\n\t\tthis._matrix[0][2] = temp;\n\t\ttemp = this._matrix[2][1];\n\t\tthis._matrix[2][1] = this._matrix[1][2];\n\t\tthis._matrix[1][2] = temp;\n\t\treturn this;\n\t},\n\tmatches: function (requiredDimensionSymbols) {\n\t\tif (requiredDimensionSymbols.length !== 9) {\n\t\t\tthrow new IllegalArgumentException(\"Should be length 9: \" + requiredDimensionSymbols);\n\t\t}\n\t\tfor (var ai = 0; ai < 3; ai++) {\n\t\t\tfor (var bi = 0; bi < 3; bi++) {\n\t\t\t\tif (!IntersectionMatrix.matches(this._matrix[ai][bi], requiredDimensionSymbols.charAt(3 * ai + bi))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function (im) {\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\tthis.setAtLeast(i, j, im.get(i, j));\n\t\t\t}\n\t\t}\n\t},\n\tisDisjoint: function () {\n\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.INTERIOR][Location.BOUNDARY] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.INTERIOR] === Dimension.FALSE && this._matrix[Location.BOUNDARY][Location.BOUNDARY] === Dimension.FALSE;\n\t},\n\tisCrosses: function (dimensionOfGeometryA, dimensionOfGeometryB) {\n\t\tif (dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.L || dimensionOfGeometryA === Dimension.P && dimensionOfGeometryB === Dimension.A || dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.A) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.EXTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.P || dimensionOfGeometryA === Dimension.A && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn IntersectionMatrix.isTrue(this._matrix[Location.INTERIOR][Location.INTERIOR]) && IntersectionMatrix.isTrue(this._matrix[Location.EXTERIOR][Location.INTERIOR]);\n\t\t}\n\t\tif (dimensionOfGeometryA === Dimension.L && dimensionOfGeometryB === Dimension.L) {\n\t\t\treturn this._matrix[Location.INTERIOR][Location.INTERIOR] === 0;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Cloneable];\n\t},\n\tgetClass: function () {\n\t\treturn IntersectionMatrix;\n\t}\n});\nIntersectionMatrix.matches = function () {\n\tif (Number.isInteger(arguments[0]) && typeof arguments[1] === \"string\") {\n\t\tlet actualDimensionValue = arguments[0], requiredDimensionSymbol = arguments[1];\n\t\tif (requiredDimensionSymbol === Dimension.SYM_DONTCARE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_TRUE && (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_FALSE && actualDimensionValue === Dimension.FALSE) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_P && actualDimensionValue === Dimension.P) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_L && actualDimensionValue === Dimension.L) {\n\t\t\treturn true;\n\t\t}\n\t\tif (requiredDimensionSymbol === Dimension.SYM_A && actualDimensionValue === Dimension.A) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t} else if (typeof arguments[0] === \"string\" && typeof arguments[1] === \"string\") {\n\t\tlet actualDimensionSymbols = arguments[0], requiredDimensionSymbols = arguments[1];\n\t\tvar m = new IntersectionMatrix(actualDimensionSymbols);\n\t\treturn m.matches(requiredDimensionSymbols);\n\t}\n};\nIntersectionMatrix.isTrue = function (actualDimensionValue) {\n\tif (actualDimensionValue >= 0 || actualDimensionValue === Dimension.TRUE) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","import extend from '../../../../extend';\nimport Orientation from './Orientation';\nexport default function Angle() {}\nextend(Angle.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Angle;\n\t}\n});\nAngle.toDegrees = function (radians) {\n\treturn radians * 180 / Math.PI;\n};\nAngle.normalize = function (angle) {\n\twhile (angle > Math.PI) angle -= Angle.PI_TIMES_2;\n\twhile (angle <= -Math.PI) angle += Angle.PI_TIMES_2;\n\treturn angle;\n};\nAngle.angle = function () {\n\tif (arguments.length === 1) {\n\t\tlet p = arguments[0];\n\t\treturn Math.atan2(p.y, p.x);\n\t} else if (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\treturn Math.atan2(dy, dx);\n\t}\n};\nAngle.isAcute = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod > 0;\n};\nAngle.isObtuse = function (p0, p1, p2) {\n\tvar dx0 = p0.x - p1.x;\n\tvar dy0 = p0.y - p1.y;\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dotprod = dx0 * dx1 + dy0 * dy1;\n\treturn dotprod < 0;\n};\nAngle.interiorAngle = function (p0, p1, p2) {\n\tvar anglePrev = Angle.angle(p1, p0);\n\tvar angleNext = Angle.angle(p1, p2);\n\treturn Math.abs(angleNext - anglePrev);\n};\nAngle.normalizePositive = function (angle) {\n\tif (angle < 0.0) {\n\t\twhile (angle < 0.0) angle += Angle.PI_TIMES_2;\n\t\tif (angle >= Angle.PI_TIMES_2) angle = 0.0;\n\t} else {\n\t\twhile (angle >= Angle.PI_TIMES_2) angle -= Angle.PI_TIMES_2;\n\t\tif (angle < 0.0) angle = 0.0;\n\t}\n\treturn angle;\n};\nAngle.angleBetween = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\treturn Angle.diff(a1, a2);\n};\nAngle.diff = function (ang1, ang2) {\n\tvar delAngle = null;\n\tif (ang1 < ang2) {\n\t\tdelAngle = ang2 - ang1;\n\t} else {\n\t\tdelAngle = ang1 - ang2;\n\t}\n\tif (delAngle > Math.PI) {\n\t\tdelAngle = 2 * Math.PI - delAngle;\n\t}\n\treturn delAngle;\n};\nAngle.toRadians = function (angleDegrees) {\n\treturn angleDegrees * Math.PI / 180.0;\n};\nAngle.getTurn = function (ang1, ang2) {\n\tvar crossproduct = Math.sin(ang2 - ang1);\n\tif (crossproduct > 0) {\n\t\treturn Angle.COUNTERCLOCKWISE;\n\t}\n\tif (crossproduct < 0) {\n\t\treturn Angle.CLOCKWISE;\n\t}\n\treturn Angle.NONE;\n};\nAngle.angleBetweenOriented = function (tip1, tail, tip2) {\n\tvar a1 = Angle.angle(tail, tip1);\n\tvar a2 = Angle.angle(tail, tip2);\n\tvar angDel = a2 - a1;\n\tif (angDel <= -Math.PI) return angDel + Angle.PI_TIMES_2;\n\tif (angDel > Math.PI) return angDel - Angle.PI_TIMES_2;\n\treturn angDel;\n};\nAngle.PI_TIMES_2 = 2.0 * Math.PI;\nAngle.PI_OVER_2 = Math.PI / 2.0;\nAngle.PI_OVER_4 = Math.PI / 4.0;\nAngle.COUNTERCLOCKWISE = Orientation.COUNTERCLOCKWISE;\nAngle.CLOCKWISE = Orientation.CLOCKWISE;\nAngle.NONE = Orientation.COLLINEAR;\n","import Coordinate from './Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Angle from '../algorithm/Angle';\nimport HCoordinate from '../algorithm/HCoordinate';\nexport default function Triangle() {\n\tthis.p0 = null;\n\tthis.p1 = null;\n\tthis.p2 = null;\n\tlet p0 = arguments[0], p1 = arguments[1], p2 = arguments[2];\n\tthis.p0 = p0;\n\tthis.p1 = p1;\n\tthis.p2 = p2;\n}\nextend(Triangle.prototype, {\n\tarea: function () {\n\t\treturn Triangle.area(this.p0, this.p1, this.p2);\n\t},\n\tsignedArea: function () {\n\t\treturn Triangle.signedArea(this.p0, this.p1, this.p2);\n\t},\n\tinterpolateZ: function (p) {\n\t\tif (p === null) throw new IllegalArgumentException(\"Supplied point is null.\");\n\t\treturn Triangle.interpolateZ(p, this.p0, this.p1, this.p2);\n\t},\n\tlongestSideLength: function () {\n\t\treturn Triangle.longestSideLength(this.p0, this.p1, this.p2);\n\t},\n\tisAcute: function () {\n\t\treturn Triangle.isAcute(this.p0, this.p1, this.p2);\n\t},\n\tcircumcentre: function () {\n\t\treturn Triangle.circumcentre(this.p0, this.p1, this.p2);\n\t},\n\tarea3D: function () {\n\t\treturn Triangle.area3D(this.p0, this.p1, this.p2);\n\t},\n\tcentroid: function () {\n\t\treturn Triangle.centroid(this.p0, this.p1, this.p2);\n\t},\n\tinCentre: function () {\n\t\treturn Triangle.inCentre(this.p0, this.p1, this.p2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Triangle;\n\t}\n});\nTriangle.area = function (a, b, c) {\n\treturn Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2);\n};\nTriangle.signedArea = function (a, b, c) {\n\treturn ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2;\n};\nTriangle.det = function (m00, m01, m10, m11) {\n\treturn m00 * m11 - m01 * m10;\n};\nTriangle.interpolateZ = function (p, v0, v1, v2) {\n\tvar x0 = v0.x;\n\tvar y0 = v0.y;\n\tvar a = v1.x - x0;\n\tvar b = v2.x - x0;\n\tvar c = v1.y - y0;\n\tvar d = v2.y - y0;\n\tvar det = a * d - b * c;\n\tvar dx = p.x - x0;\n\tvar dy = p.y - y0;\n\tvar t = (d * dx - b * dy) / det;\n\tvar u = (-c * dx + a * dy) / det;\n\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\treturn z;\n};\nTriangle.longestSideLength = function (a, b, c) {\n\tvar lenAB = a.distance(b);\n\tvar lenBC = b.distance(c);\n\tvar lenCA = c.distance(a);\n\tvar maxLen = lenAB;\n\tif (lenBC > maxLen) maxLen = lenBC;\n\tif (lenCA > maxLen) maxLen = lenCA;\n\treturn maxLen;\n};\nTriangle.isAcute = function (a, b, c) {\n\tif (!Angle.isAcute(a, b, c)) return false;\n\tif (!Angle.isAcute(b, c, a)) return false;\n\tif (!Angle.isAcute(c, a, b)) return false;\n\treturn true;\n};\nTriangle.circumcentre = function (a, b, c) {\n\tvar cx = c.x;\n\tvar cy = c.y;\n\tvar ax = a.x - cx;\n\tvar ay = a.y - cy;\n\tvar bx = b.x - cx;\n\tvar by = b.y - cy;\n\tvar denom = 2 * Triangle.det(ax, ay, bx, by);\n\tvar numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n\tvar numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n\tvar ccx = cx - numx / denom;\n\tvar ccy = cy + numy / denom;\n\treturn new Coordinate(ccx, ccy);\n};\nTriangle.perpendicularBisector = function (a, b) {\n\tvar dx = b.x - a.x;\n\tvar dy = b.y - a.y;\n\tvar l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n\tvar l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n\treturn new HCoordinate(l1, l2);\n};\nTriangle.angleBisector = function (a, b, c) {\n\tvar len0 = b.distance(a);\n\tvar len2 = b.distance(c);\n\tvar frac = len0 / (len0 + len2);\n\tvar dx = c.x - a.x;\n\tvar dy = c.y - a.y;\n\tvar splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n\treturn splitPt;\n};\nTriangle.area3D = function (a, b, c) {\n\tvar ux = b.x - a.x;\n\tvar uy = b.y - a.y;\n\tvar uz = b.z - a.z;\n\tvar vx = c.x - a.x;\n\tvar vy = c.y - a.y;\n\tvar vz = c.z - a.z;\n\tvar crossx = uy * vz - uz * vy;\n\tvar crossy = uz * vx - ux * vz;\n\tvar crossz = ux * vy - uy * vx;\n\tvar absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n\tvar area3D = Math.sqrt(absSq) / 2;\n\treturn area3D;\n};\nTriangle.centroid = function (a, b, c) {\n\tvar x = (a.x + b.x + c.x) / 3;\n\tvar y = (a.y + b.y + c.y) / 3;\n\treturn new Coordinate(x, y);\n};\nTriangle.inCentre = function (a, b, c) {\n\tvar len0 = b.distance(c);\n\tvar len1 = a.distance(c);\n\tvar len2 = a.distance(b);\n\tvar circum = len0 + len1 + len2;\n\tvar inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n\tvar inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n\treturn new Coordinate(inCentreX, inCentreY);\n};\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nexport default function PointPairDistance() {\n\tthis._pt = [new Coordinate(), new Coordinate()];\n\tthis._distance = Double.NaN;\n\tthis._isNull = true;\n}\nextend(PointPairDistance.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this._pt;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this._pt[i];\n\t},\n\tsetMinimum: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ptDist = arguments[0];\n\t\t\tthis.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tif (this._isNull) {\n\t\t\t\tthis.initialize(p0, p1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar dist = p0.distance(p1);\n\t\t\tif (dist < this._distance) this.initialize(p0, p1, dist);\n\t\t}\n\t},\n\tinitialize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis._isNull = true;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tthis._pt[0].setCoordinate(p0);\n\t\t\tthis._pt[1].setCoordinate(p1);\n\t\t\tthis._distance = p0.distance(p1);\n\t\t\tthis._isNull = false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1], distance = arguments[2];\n\t\t\tthis._pt[0].setCoordinate(p0);\n\t\t\tthis._pt[1].setCoordinate(p1);\n\t\t\tthis._distance = distance;\n\t\t\tthis._isNull = false;\n\t\t}\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(this._pt[0], this._pt[1]);\n\t},\n\tgetDistance: function () {\n\t\treturn this._distance;\n\t},\n\tsetMaximum: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ptDist = arguments[0];\n\t\t\tthis.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tif (this._isNull) {\n\t\t\t\tthis.initialize(p0, p1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar dist = p0.distance(p1);\n\t\t\tif (dist > this._distance) this.initialize(p0, p1, dist);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointPairDistance;\n\t}\n});\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport Coordinate from '../../geom/Coordinate';\nimport Polygon from '../../geom/Polygon';\nimport extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nimport PointPairDistance from './PointPairDistance';\nimport GeometryCollection from '../../geom/GeometryCollection';\nexport default function DistanceToPoint() {}\nextend(DistanceToPoint.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DistanceToPoint;\n\t}\n});\nDistanceToPoint.computeDistance = function () {\n\tif (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n\t\tlet line = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\tvar tempSegment = new LineSegment();\n\t\tvar coords = line.getCoordinates();\n\t\tfor (var i = 0; i < coords.length - 1; i++) {\n\t\t\ttempSegment.setCoordinates(coords[i], coords[i + 1]);\n\t\t\tvar closestPt = tempSegment.closestPoint(pt);\n\t\t\tptDist.setMinimum(closestPt, pt);\n\t\t}\n\t} else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n\t\tlet poly = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\tDistanceToPoint.computeDistance(poly.getExteriorRing(), pt, ptDist);\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tDistanceToPoint.computeDistance(poly.getInteriorRingN(i), pt, ptDist);\n\t\t}\n\t} else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n\t\tlet geom = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\tif (geom instanceof LineString) {\n\t\t\tDistanceToPoint.computeDistance(geom, pt, ptDist);\n\t\t} else if (geom instanceof Polygon) {\n\t\t\tDistanceToPoint.computeDistance(geom, pt, ptDist);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar gc = geom;\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\tDistanceToPoint.computeDistance(g, pt, ptDist);\n\t\t\t}\n\t\t} else {\n\t\t\tptDist.setMinimum(geom.getCoordinate(), pt);\n\t\t}\n\t} else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n\t\tlet segment = arguments[0], pt = arguments[1], ptDist = arguments[2];\n\t\tvar closestPt = segment.closestPoint(pt);\n\t\tptDist.setMinimum(closestPt, pt);\n\t}\n};\n","import DistanceToPoint from './DistanceToPoint';\nimport CoordinateFilter from '../../geom/CoordinateFilter';\nimport Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../../extend';\nimport PointPairDistance from './PointPairDistance';\nimport CoordinateSequenceFilter from '../../geom/CoordinateSequenceFilter';\nexport default function DiscreteHausdorffDistance() {\n\tthis._g0 = null;\n\tthis._g1 = null;\n\tthis._ptDist = new PointPairDistance();\n\tthis._densifyFrac = 0.0;\n\tlet g0 = arguments[0], g1 = arguments[1];\n\tthis._g0 = g0;\n\tthis._g1 = g1;\n}\nextend(DiscreteHausdorffDistance.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this._ptDist.getCoordinates();\n\t},\n\tsetDensifyFraction: function (densifyFrac) {\n\t\tif (densifyFrac > 1.0 || densifyFrac <= 0.0) throw new IllegalArgumentException(\"Fraction is not in range (0.0 - 1.0]\");\n\t\tthis._densifyFrac = densifyFrac;\n\t},\n\tcompute: function (g0, g1) {\n\t\tthis.computeOrientedDistance(g0, g1, this._ptDist);\n\t\tthis.computeOrientedDistance(g1, g0, this._ptDist);\n\t},\n\tdistance: function () {\n\t\tthis.compute(this._g0, this._g1);\n\t\treturn this._ptDist.getDistance();\n\t},\n\tcomputeOrientedDistance: function (discreteGeom, geom, ptDist) {\n\t\tvar distFilter = new MaxPointDistanceFilter(geom);\n\t\tdiscreteGeom.apply(distFilter);\n\t\tptDist.setMaximum(distFilter.getMaxPointDistance());\n\t\tif (this._densifyFrac > 0) {\n\t\t\tvar fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n\t\t\tdiscreteGeom.apply(fracFilter);\n\t\t\tptDist.setMaximum(fracFilter.getMaxPointDistance());\n\t\t}\n\t},\n\torientedDistance: function () {\n\t\tthis.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n\t\treturn this._ptDist.getDistance();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DiscreteHausdorffDistance;\n\t}\n});\nDiscreteHausdorffDistance.distance = function () {\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tvar dist = new DiscreteHausdorffDistance(g0, g1);\n\t\treturn dist.distance();\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], densifyFrac = arguments[2];\n\t\tvar dist = new DiscreteHausdorffDistance(g0, g1);\n\t\tdist.setDensifyFraction(densifyFrac);\n\t\treturn dist.distance();\n\t}\n};\nfunction MaxPointDistanceFilter() {\n\tthis._maxPtDist = new PointPairDistance();\n\tthis._minPtDist = new PointPairDistance();\n\tthis._euclideanDist = new DistanceToPoint();\n\tthis._geom = null;\n\tlet geom = arguments[0];\n\tthis._geom = geom;\n}\nextend(MaxPointDistanceFilter.prototype, {\n\tfilter: function (pt) {\n\t\tthis._minPtDist.initialize();\n\t\tDistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n\t\tthis._maxPtDist.setMaximum(this._minPtDist);\n\t},\n\tgetMaxPointDistance: function () {\n\t\treturn this._maxPtDist;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function () {\n\t\treturn MaxPointDistanceFilter;\n\t}\n});\nfunction MaxDensifiedByFractionDistanceFilter() {\n\tthis._maxPtDist = new PointPairDistance();\n\tthis._minPtDist = new PointPairDistance();\n\tthis._geom = null;\n\tthis._numSubSegs = 0;\n\tlet geom = arguments[0], fraction = arguments[1];\n\tthis._geom = geom;\n\tthis._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n}\nextend(MaxDensifiedByFractionDistanceFilter.prototype, {\n\tfilter: function (seq, index) {\n\t\tif (index === 0) return null;\n\t\tvar p0 = seq.getCoordinate(index - 1);\n\t\tvar p1 = seq.getCoordinate(index);\n\t\tvar delx = (p1.x - p0.x) / this._numSubSegs;\n\t\tvar dely = (p1.y - p0.y) / this._numSubSegs;\n\t\tfor (var i = 0; i < this._numSubSegs; i++) {\n\t\t\tvar x = p0.x + i * delx;\n\t\t\tvar y = p0.y + i * dely;\n\t\t\tvar pt = new Coordinate(x, y);\n\t\t\tthis._minPtDist.initialize();\n\t\t\tDistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n\t\t\tthis._maxPtDist.setMaximum(this._minPtDist);\n\t\t}\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\tisGeometryChanged: function () {\n\t\treturn false;\n\t},\n\tgetMaxPointDistance: function () {\n\t\treturn this._maxPtDist;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFilter];\n\t},\n\tgetClass: function () {\n\t\treturn MaxDensifiedByFractionDistanceFilter;\n\t}\n});\nDiscreteHausdorffDistance.MaxPointDistanceFilter = MaxPointDistanceFilter;\nDiscreteHausdorffDistance.MaxDensifiedByFractionDistanceFilter = MaxDensifiedByFractionDistanceFilter;\n","import extend from '../../../../extend';\nexport default function ItemVisitor() {}\nextend(ItemVisitor.prototype, {\n\tvisitItem: function (item) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ItemVisitor;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function PointOnGeometryLocator() {}\nextend(PointOnGeometryLocator.prototype, {\n\tlocate: function (p) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointOnGeometryLocator;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport Comparator from '../../../../../java/util/Comparator';\nexport default function IntervalRTreeNode() {\n\tthis._min = Double.POSITIVE_INFINITY;\n\tthis._max = Double.NEGATIVE_INFINITY;\n}\nextend(IntervalRTreeNode.prototype, {\n\tgetMin: function () {\n\t\treturn this._min;\n\t},\n\tintersects: function (queryMin, queryMax) {\n\t\tif (this._min > queryMax || this._max < queryMin) return false;\n\t\treturn true;\n\t},\n\tgetMax: function () {\n\t\treturn this._max;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeNode;\n\t}\n});\nfunction NodeComparator() {}\nextend(NodeComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar n1 = o1;\n\t\tvar n2 = o2;\n\t\tvar mid1 = (n1._min + n1._max) / 2;\n\t\tvar mid2 = (n2._min + n2._max) / 2;\n\t\tif (mid1 < mid2) return -1;\n\t\tif (mid1 > mid2) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn NodeComparator;\n\t}\n});\nIntervalRTreeNode.NodeComparator = NodeComparator;\n","import IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function IntervalRTreeLeafNode() {\n\tIntervalRTreeNode.apply(this);\n\tthis._item = null;\n\tlet min = arguments[0], max = arguments[1], item = arguments[2];\n\tthis._min = min;\n\tthis._max = max;\n\tthis._item = item;\n}\ninherits(IntervalRTreeLeafNode, IntervalRTreeNode);\nextend(IntervalRTreeLeafNode.prototype, {\n\tquery: function (queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) return null;\n\t\tvisitor.visitItem(this._item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeLeafNode;\n\t}\n});\n","import Arrays from './Arrays'\nimport ArrayList from './ArrayList'\n\nconst Collections = {\n  reverseOrder: function () {\n    return {\n      compare (a, b) {\n        return b.compareTo(a)\n      }\n    }\n  },\n  min: function (l) {\n    Collections.sort(l)\n    return l.get(0)\n  },\n  sort: function (l, c) {\n    const a = l.toArray()\n    if (c) {\n      Arrays.sort(a, c)\n    } else {\n      Arrays.sort(a)\n    }\n    const i = l.iterator()\n    for (let pos = 0, alen = a.length; pos < alen; pos++) {\n      i.next()\n      i.set(a[pos])\n    }\n  },\n  singletonList: function (o) {\n    const arrayList = new ArrayList()\n    arrayList.add(o)\n    return arrayList\n  }\n}\n\nexport default Collections\n","import IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function IntervalRTreeBranchNode() {\n\tIntervalRTreeNode.apply(this);\n\tthis._node1 = null;\n\tthis._node2 = null;\n\tlet n1 = arguments[0], n2 = arguments[1];\n\tthis._node1 = n1;\n\tthis._node2 = n2;\n\tthis.buildExtent(this._node1, this._node2);\n}\ninherits(IntervalRTreeBranchNode, IntervalRTreeNode);\nextend(IntervalRTreeBranchNode.prototype, {\n\tbuildExtent: function (n1, n2) {\n\t\tthis._min = Math.min(n1._min, n2._min);\n\t\tthis._max = Math.max(n1._max, n2._max);\n\t},\n\tquery: function (queryMin, queryMax, visitor) {\n\t\tif (!this.intersects(queryMin, queryMax)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._node1 !== null) this._node1.query(queryMin, queryMax, visitor);\n\t\tif (this._node2 !== null) this._node2.query(queryMin, queryMax, visitor);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalRTreeBranchNode;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport Coordinate from '../../geom/Coordinate';\nimport IntervalRTreeLeafNode from './IntervalRTreeLeafNode';\nimport IntervalRTreeNode from './IntervalRTreeNode';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport System from '../../../../../java/lang/System';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport IntervalRTreeBranchNode from './IntervalRTreeBranchNode';\nexport default function SortedPackedIntervalRTree() {\n\tthis._leaves = new ArrayList();\n\tthis._root = null;\n\tthis._level = 0;\n}\nextend(SortedPackedIntervalRTree.prototype, {\n\tbuildTree: function () {\n\t\tCollections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n\t\tvar src = this._leaves;\n\t\tvar temp = null;\n\t\tvar dest = new ArrayList();\n\t\twhile (true) {\n\t\t\tthis.buildLevel(src, dest);\n\t\t\tif (dest.size() === 1) return dest.get(0);\n\t\t\ttemp = src;\n\t\t\tsrc = dest;\n\t\t\tdest = temp;\n\t\t}\n\t},\n\tinsert: function (min, max, item) {\n\t\tif (this._root !== null) throw new IllegalStateException(\"Index cannot be added to once it has been queried\");\n\t\tthis._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n\t},\n\tquery: function (min, max, visitor) {\n\t\tthis.init();\n\t\tthis._root.query(min, max, visitor);\n\t},\n\tbuildRoot: function () {\n\t\tif (this._root !== null) return null;\n\t\tthis._root = this.buildTree();\n\t},\n\tprintNode: function (node) {\n\t\tSystem.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n\t},\n\tinit: function () {\n\t\tif (this._root !== null) return null;\n\t\tthis.buildRoot();\n\t},\n\tbuildLevel: function (src, dest) {\n\t\tthis._level++;\n\t\tdest.clear();\n\t\tfor (var i = 0; i < src.size(); i += 2) {\n\t\t\tvar n1 = src.get(i);\n\t\t\tvar n2 = i + 1 < src.size() ? src.get(i) : null;\n\t\t\tif (n2 === null) {\n\t\t\t\tdest.add(n1);\n\t\t\t} else {\n\t\t\t\tvar node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n\t\t\t\tdest.add(node);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SortedPackedIntervalRTree;\n\t}\n});\n","import LineString from '../LineString';\nimport Geometry from '../Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport GeometryComponentFilter from '../GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function LinearComponentExtracter() {\n\tthis._lines = null;\n\tthis._isForcedToLineString = false;\n\tif (arguments.length === 1) {\n\t\tlet lines = arguments[0];\n\t\tthis._lines = lines;\n\t} else if (arguments.length === 2) {\n\t\tlet lines = arguments[0], isForcedToLineString = arguments[1];\n\t\tthis._lines = lines;\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t}\n}\nextend(LinearComponentExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (this._isForcedToLineString && geom instanceof LinearRing) {\n\t\t\tvar line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n\t\t\tthis._lines.add(line);\n\t\t\treturn null;\n\t\t}\n\t\tif (geom instanceof LineString) this._lines.add(geom);\n\t},\n\tsetForceToLineString: function (isForcedToLineString) {\n\t\tthis._isForcedToLineString = isForcedToLineString;\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LinearComponentExtracter;\n\t}\n});\nLinearComponentExtracter.getGeometry = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom));\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\treturn geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom, forceToLineString));\n\t}\n};\nLinearComponentExtracter.getLines = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn LinearComponentExtracter.getLines(geom, false);\n\t} else if (arguments.length === 2) {\n\t\tif (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n\t\t\tlet geoms = arguments[0], lines = arguments[1];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && typeof arguments[1] === \"boolean\") {\n\t\t\tlet geom = arguments[0], forceToLineString = arguments[1];\n\t\t\tvar lines = new ArrayList();\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t} else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n\t\t\tlet geom = arguments[0], lines = arguments[1];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tlines.add(geom);\n\t\t\t} else {\n\t\t\t\tgeom.apply(new LinearComponentExtracter(lines));\n\t\t\t}\n\t\t\treturn lines;\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tif (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n\t\t\tlet geoms = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar g = i.next();\n\t\t\t\tLinearComponentExtracter.getLines(g, lines, forceToLineString);\n\t\t\t}\n\t\t\treturn lines;\n\t\t} else if (typeof arguments[2] === \"boolean\" && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n\t\t\tlet geom = arguments[0], lines = arguments[1], forceToLineString = arguments[2];\n\t\t\tgeom.apply(new LinearComponentExtracter(lines, forceToLineString));\n\t\t\treturn lines;\n\t\t}\n\t}\n};\n","import ItemVisitor from './ItemVisitor';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function ArrayListVisitor() {\n\tthis._items = new ArrayList();\n}\nextend(ArrayListVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tthis._items.add(item);\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn ArrayListVisitor;\n\t}\n});\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nexport default function RayCrossingCounter() {\n\tthis._p = null;\n\tthis._crossingCount = 0;\n\tthis._isPointOnSegment = false;\n\tlet p = arguments[0];\n\tthis._p = p;\n}\nextend(RayCrossingCounter.prototype, {\n\tcountSegment: function (p1, p2) {\n\t\tif (p1.x < this._p.x && p2.x < this._p.x) return null;\n\t\tif (this._p.x === p2.x && this._p.y === p2.y) {\n\t\t\tthis._isPointOnSegment = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y === this._p.y && p2.y === this._p.y) {\n\t\t\tvar minx = p1.x;\n\t\t\tvar maxx = p2.x;\n\t\t\tif (minx > maxx) {\n\t\t\t\tminx = p2.x;\n\t\t\t\tmaxx = p1.x;\n\t\t\t}\n\t\t\tif (this._p.x >= minx && this._p.x <= maxx) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tif (p1.y > this._p.y && p2.y <= this._p.y || p2.y > this._p.y && p1.y <= this._p.y) {\n\t\t\tvar orient = Orientation.index(p1, p2, this._p);\n\t\t\tif (orient === Orientation.COLLINEAR) {\n\t\t\t\tthis._isPointOnSegment = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (p2.y < p1.y) {\n\t\t\t\torient = -orient;\n\t\t\t}\n\t\t\tif (orient === Orientation.LEFT) {\n\t\t\t\tthis._crossingCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisPointInPolygon: function () {\n\t\treturn this.getLocation() !== Location.EXTERIOR;\n\t},\n\tgetLocation: function () {\n\t\tif (this._isPointOnSegment) return Location.BOUNDARY;\n\t\tif (this._crossingCount % 2 === 1) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t},\n\tisOnSegment: function () {\n\t\treturn this._isPointOnSegment;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RayCrossingCounter;\n\t}\n});\nRayCrossingCounter.locatePointInRing = function () {\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\tlet p = arguments[0], ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tfor (var i = 1; i < ring.size(); i++) {\n\t\t\tring.getCoordinate(i, p1);\n\t\t\tring.getCoordinate(i - 1, p2);\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\tlet p = arguments[0], ring = arguments[1];\n\t\tvar counter = new RayCrossingCounter(p);\n\t\tfor (var i = 1; i < ring.length; i++) {\n\t\t\tvar p1 = ring[i];\n\t\t\tvar p2 = ring[i - 1];\n\t\t\tcounter.countSegment(p1, p2);\n\t\t\tif (counter.isOnSegment()) return counter.getLocation();\n\t\t}\n\t\treturn counter.getLocation();\n\t}\n};\n","import hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport ItemVisitor from '../../index/ItemVisitor';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport SortedPackedIntervalRTree from '../../index/intervalrtree/SortedPackedIntervalRTree';\nimport LineSegment from '../../geom/LineSegment';\nimport Polygonal from '../../geom/Polygonal';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport ArrayListVisitor from '../../index/ArrayListVisitor';\nimport RayCrossingCounter from '../RayCrossingCounter';\nexport default function IndexedPointInAreaLocator() {\n\tthis._index = null;\n\tlet g = arguments[0];\n\tif (!(hasInterface(g, Polygonal) || g instanceof LinearRing)) throw new IllegalArgumentException(\"Argument must be Polygonal or LinearRing\");\n\tthis._index = new IntervalIndexedGeometry(g);\n}\nextend(IndexedPointInAreaLocator.prototype, {\n\tlocate: function (p) {\n\t\tvar rcc = new RayCrossingCounter(p);\n\t\tvar visitor = new SegmentVisitor(rcc);\n\t\tthis._index.query(p.y, p.y, visitor);\n\t\treturn rcc.getLocation();\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function () {\n\t\treturn IndexedPointInAreaLocator;\n\t}\n});\nfunction SegmentVisitor() {\n\tthis._counter = null;\n\tlet counter = arguments[0];\n\tthis._counter = counter;\n}\nextend(SegmentVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tvar seg = item;\n\t\tthis._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentVisitor;\n\t}\n});\nfunction IntervalIndexedGeometry() {\n\tthis._index = new SortedPackedIntervalRTree();\n\tlet geom = arguments[0];\n\tthis.init(geom);\n}\nextend(IntervalIndexedGeometry.prototype, {\n\tinit: function (geom) {\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar line = i.next();\n\t\t\tvar pts = line.getCoordinates();\n\t\t\tthis.addLine(pts);\n\t\t}\n\t},\n\taddLine: function (pts) {\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tvar seg = new LineSegment(pts[i - 1], pts[i]);\n\t\t\tvar min = Math.min(seg.p0.y, seg.p1.y);\n\t\t\tvar max = Math.max(seg.p0.y, seg.p1.y);\n\t\t\tthis._index.insert(min, max, seg);\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis._index.query(min, max, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet min = arguments[0], max = arguments[1], visitor = arguments[2];\n\t\t\tthis._index.query(min, max, visitor);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalIndexedGeometry;\n\t}\n});\nIndexedPointInAreaLocator.SegmentVisitor = SegmentVisitor;\nIndexedPointInAreaLocator.IntervalIndexedGeometry = IntervalIndexedGeometry;\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport RayCrossingCounter from './RayCrossingCounter';\nexport default function PointLocation() {}\nextend(PointLocation.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointLocation;\n\t}\n});\nPointLocation.isOnLine = function () {\n\tif (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n\t\tlet p = arguments[0], line = arguments[1];\n\t\tvar lineIntersector = new RobustLineIntersector();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar n = line.size();\n\t\tfor (var i = 1; i < n; i++) {\n\t\t\tline.getCoordinate(i - 1, p0);\n\t\t\tline.getCoordinate(i, p1);\n\t\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\t\tif (lineIntersector.hasIntersection()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n\t\tlet p = arguments[0], line = arguments[1];\n\t\tvar lineIntersector = new RobustLineIntersector();\n\t\tfor (var i = 1; i < line.length; i++) {\n\t\t\tvar p0 = line[i - 1];\n\t\t\tvar p1 = line[i];\n\t\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\t\tif (lineIntersector.hasIntersection()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n};\nPointLocation.locateInRing = function (p, ring) {\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\n};\nPointLocation.isInRing = function (p, ring) {\n\treturn PointLocation.locateInRing(p, ring) !== Location.EXTERIOR;\n};\n","import Iterator from '../../../../java/util/Iterator';\nimport NoSuchElementException from '../../../../java/util/NoSuchElementException';\nimport extend from '../../../../extend';\nimport GeometryCollection from './GeometryCollection';\nexport default function GeometryCollectionIterator() {\n\tthis._parent = null;\n\tthis._atStart = null;\n\tthis._max = null;\n\tthis._index = null;\n\tthis._subcollectionIterator = null;\n\tlet parent = arguments[0];\n\tthis._parent = parent;\n\tthis._atStart = true;\n\tthis._index = 0;\n\tthis._max = parent.getNumGeometries();\n}\nextend(GeometryCollectionIterator.prototype, {\n\tnext: function () {\n\t\tif (this._atStart) {\n\t\t\tthis._atStart = false;\n\t\t\tif (GeometryCollectionIterator.isAtomic(this._parent)) this._index++;\n\t\t\treturn this._parent;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn this._subcollectionIterator.next();\n\t\t\t} else {\n\t\t\t\tthis._subcollectionIterator = null;\n\t\t\t}\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\tthrow new NoSuchElementException();\n\t\t}\n\t\tvar obj = this._parent.getGeometryN(this._index++);\n\t\tif (obj instanceof GeometryCollection) {\n\t\t\tthis._subcollectionIterator = new GeometryCollectionIterator(obj);\n\t\t\treturn this._subcollectionIterator.next();\n\t\t}\n\t\treturn obj;\n\t},\n\tremove: function () {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function () {\n\t\tif (this._atStart) {\n\t\t\treturn true;\n\t\t}\n\t\tif (this._subcollectionIterator !== null) {\n\t\t\tif (this._subcollectionIterator.hasNext()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tthis._subcollectionIterator = null;\n\t\t}\n\t\tif (this._index >= this._max) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollectionIterator;\n\t}\n});\nGeometryCollectionIterator.isAtomic = function (geom) {\n\treturn !(geom instanceof GeometryCollection);\n};\n","import Location from '../../geom/Location';\nimport Polygon from '../../geom/Polygon';\nimport PointLocation from '../PointLocation';\nimport PointOnGeometryLocator from './PointOnGeometryLocator';\nimport extend from '../../../../../extend';\nimport GeometryCollectionIterator from '../../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../../geom/GeometryCollection';\nexport default function SimplePointInAreaLocator() {\n\tthis._geom = null;\n\tlet geom = arguments[0];\n\tthis._geom = geom;\n}\nextend(SimplePointInAreaLocator.prototype, {\n\tlocate: function (p) {\n\t\treturn SimplePointInAreaLocator.locate(p, this._geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointOnGeometryLocator];\n\t},\n\tgetClass: function () {\n\t\treturn SimplePointInAreaLocator;\n\t}\n});\nSimplePointInAreaLocator.locatePointInPolygon = function (p, poly) {\n\tif (poly.isEmpty()) return Location.EXTERIOR;\n\tvar shell = poly.getExteriorRing();\n\tvar shellLoc = SimplePointInAreaLocator.locatePointInRing(p, shell);\n\tif (shellLoc !== Location.INTERIOR) return shellLoc;\n\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\tvar hole = poly.getInteriorRingN(i);\n\t\tvar holeLoc = SimplePointInAreaLocator.locatePointInRing(p, hole);\n\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t}\n\treturn Location.INTERIOR;\n};\nSimplePointInAreaLocator.locatePointInRing = function (p, ring) {\n\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\treturn PointLocation.locateInRing(p, ring.getCoordinates());\n};\nSimplePointInAreaLocator.containsPointInPolygon = function (p, poly) {\n\treturn Location.EXTERIOR !== SimplePointInAreaLocator.locatePointInPolygon(p, poly);\n};\nSimplePointInAreaLocator.locateInGeometry = function (p, geom) {\n\tif (geom instanceof Polygon) {\n\t\treturn SimplePointInAreaLocator.locatePointInPolygon(p, geom);\n\t} else if (geom instanceof GeometryCollection) {\n\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\twhile (geomi.hasNext()) {\n\t\t\tvar g2 = geomi.next();\n\t\t\tif (g2 !== geom) {\n\t\t\t\tvar loc = SimplePointInAreaLocator.locateInGeometry(p, g2);\n\t\t\t\tif (loc !== Location.EXTERIOR) return loc;\n\t\t\t}\n\t\t}\n\t}\n\treturn Location.EXTERIOR;\n};\nSimplePointInAreaLocator.locate = function (p, geom) {\n\tif (geom.isEmpty()) return Location.EXTERIOR;\n\treturn SimplePointInAreaLocator.locateInGeometry(p, geom);\n};\n","import extend from '../../../../../extend';\nexport default function SimilarityMeasure() {}\nextend(SimilarityMeasure.prototype, {\n\tmeasure: function (g1, g2) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SimilarityMeasure;\n\t}\n});\n","import SimilarityMeasure from './SimilarityMeasure';\nimport extend from '../../../../../extend';\nexport default function AreaSimilarityMeasure() {}\nextend(AreaSimilarityMeasure.prototype, {\n\tmeasure: function (g1, g2) {\n\t\tvar areaInt = g1.intersection(g2).getArea();\n\t\tvar areaUnion = g1.union(g2).getArea();\n\t\treturn areaInt / areaUnion;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SimilarityMeasure];\n\t},\n\tgetClass: function () {\n\t\treturn AreaSimilarityMeasure;\n\t}\n});\n","import SimilarityMeasure from './SimilarityMeasure';\nimport extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nimport DiscreteHausdorffDistance from '../distance/DiscreteHausdorffDistance';\nexport default function HausdorffSimilarityMeasure() {}\nextend(HausdorffSimilarityMeasure.prototype, {\n\tmeasure: function (g1, g2) {\n\t\tvar distance = DiscreteHausdorffDistance.distance(g1, g2, HausdorffSimilarityMeasure.DENSIFY_FRACTION);\n\t\tvar env = new Envelope(g1.getEnvelopeInternal());\n\t\tenv.expandToInclude(g2.getEnvelopeInternal());\n\t\tvar envSize = HausdorffSimilarityMeasure.diagonalSize(env);\n\t\tvar measure = 1 - distance / envSize;\n\t\treturn measure;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SimilarityMeasure];\n\t},\n\tgetClass: function () {\n\t\treturn HausdorffSimilarityMeasure;\n\t}\n});\nHausdorffSimilarityMeasure.diagonalSize = function (env) {\n\tif (env.isNull()) return 0.0;\n\tvar width = env.getWidth();\n\tvar hgt = env.getHeight();\n\treturn Math.sqrt(width * width + hgt * hgt);\n};\nHausdorffSimilarityMeasure.DENSIFY_FRACTION = 0.25;\n","import extend from '../../../../../extend';\nexport default function SimilarityMeasureCombiner() {}\nextend(SimilarityMeasureCombiner.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SimilarityMeasureCombiner;\n\t}\n});\nSimilarityMeasureCombiner.combine = function (measure1, measure2) {\n\treturn Math.min(measure1, measure2);\n};\n","import LineString from '../geom/LineString';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function Centroid() {\n\tthis._areaBasePt = null;\n\tthis._triangleCent3 = new Coordinate();\n\tthis._areasum2 = 0;\n\tthis._cg3 = new Coordinate();\n\tthis._lineCentSum = new Coordinate();\n\tthis._totalLength = 0.0;\n\tthis._ptCount = 0;\n\tthis._ptCentSum = new Coordinate();\n\tlet geom = arguments[0];\n\tthis._areaBasePt = null;\n\tthis.add(geom);\n}\nextend(Centroid.prototype, {\n\tsetAreaBasePoint: function (basePt) {\n\t\tthis._areaBasePt = basePt;\n\t},\n\taddPoint: function (pt) {\n\t\tthis._ptCount += 1;\n\t\tthis._ptCentSum.x += pt.x;\n\t\tthis._ptCentSum.y += pt.y;\n\t},\n\taddLineSegments: function (pts) {\n\t\tvar lineLen = 0.0;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segmentLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segmentLen === 0.0) continue;\n\t\t\tlineLen += segmentLen;\n\t\t\tvar midx = (pts[i].x + pts[i + 1].x) / 2;\n\t\t\tthis._lineCentSum.x += segmentLen * midx;\n\t\t\tvar midy = (pts[i].y + pts[i + 1].y) / 2;\n\t\t\tthis._lineCentSum.y += segmentLen * midy;\n\t\t}\n\t\tthis._totalLength += lineLen;\n\t\tif (lineLen === 0.0 && pts.length > 0) this.addPoint(pts[0]);\n\t},\n\taddHole: function (pts) {\n\t\tvar isPositiveArea = Orientation.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\tgetCentroid: function () {\n\t\tvar cent = new Coordinate();\n\t\tif (Math.abs(this._areasum2) > 0.0) {\n\t\t\tcent.x = this._cg3.x / 3 / this._areasum2;\n\t\t\tcent.y = this._cg3.y / 3 / this._areasum2;\n\t\t} else if (this._totalLength > 0.0) {\n\t\t\tcent.x = this._lineCentSum.x / this._totalLength;\n\t\t\tcent.y = this._lineCentSum.y / this._totalLength;\n\t\t} else if (this._ptCount > 0) {\n\t\t\tcent.x = this._ptCentSum.x / this._ptCount;\n\t\t\tcent.y = this._ptCentSum.y / this._ptCount;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t\treturn cent;\n\t},\n\taddShell: function (pts) {\n\t\tif (pts.length > 0) this.setAreaBasePoint(pts[0]);\n\t\tvar isPositiveArea = !Orientation.isCCW(pts);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tthis.addTriangle(this._areaBasePt, pts[i], pts[i + 1], isPositiveArea);\n\t\t}\n\t\tthis.addLineSegments(pts);\n\t},\n\taddTriangle: function (p0, p1, p2, isPositiveArea) {\n\t\tvar sign = isPositiveArea ? 1.0 : -1.0;\n\t\tCentroid.centroid3(p0, p1, p2, this._triangleCent3);\n\t\tvar area2 = Centroid.area2(p0, p1, p2);\n\t\tthis._cg3.x += sign * area2 * this._triangleCent3.x;\n\t\tthis._cg3.y += sign * area2 * this._triangleCent3.y;\n\t\tthis._areasum2 += sign * area2;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.addShell(poly.getExteriorRing().getCoordinates());\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.addHole(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom.isEmpty()) return null;\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.addPoint(geom.getCoordinate());\n\t\t\t} else if (geom instanceof LineString) {\n\t\t\t\tthis.addLineSegments(geom.getCoordinates());\n\t\t\t} else if (geom instanceof Polygon) {\n\t\t\t\tvar poly = geom;\n\t\t\t\tthis.add(poly);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Centroid;\n\t}\n});\nCentroid.area2 = function (p1, p2, p3) {\n\treturn (p2.x - p1.x) * (p3.y - p1.y) - (p3.x - p1.x) * (p2.y - p1.y);\n};\nCentroid.centroid3 = function (p1, p2, p3, c) {\n\tc.x = p1.x + p2.x + p3.x;\n\tc.y = p1.y + p2.y + p3.y;\n\treturn null;\n};\nCentroid.getCentroid = function (geom) {\n\tvar cent = new Centroid(geom);\n\treturn cent.getCentroid();\n};\n","import Location from '../geom/Location';\nimport hasInterface from '../../../../hasInterface';\nimport Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MathUtil from '../math/MathUtil';\nimport CGAlgorithmsDD from './CGAlgorithmsDD';\nimport CoordinateSequence from '../geom/CoordinateSequence';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport Envelope from '../geom/Envelope';\nimport RayCrossingCounter from './RayCrossingCounter';\nexport default function CGAlgorithms() {}\nextend(CGAlgorithms.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CGAlgorithms;\n\t}\n});\nCGAlgorithms.orientationIndex = function (p1, p2, q) {\n\treturn CGAlgorithmsDD.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.signedArea = function () {\n\tif (arguments[0] instanceof Array) {\n\t\tlet ring = arguments[0];\n\t\tif (ring.length < 3) return 0.0;\n\t\tvar sum = 0.0;\n\t\tvar x0 = ring[0].x;\n\t\tfor (var i = 1; i < ring.length - 1; i++) {\n\t\t\tvar x = ring[i].x - x0;\n\t\t\tvar y1 = ring[i + 1].y;\n\t\t\tvar y2 = ring[i - 1].y;\n\t\t\tsum += x * (y2 - y1);\n\t\t}\n\t\treturn sum / 2.0;\n\t} else if (hasInterface(arguments[0], CoordinateSequence)) {\n\t\tlet ring = arguments[0];\n\t\tvar n = ring.size();\n\t\tif (n < 3) return 0.0;\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tvar p2 = new Coordinate();\n\t\tring.getCoordinate(0, p1);\n\t\tring.getCoordinate(1, p2);\n\t\tvar x0 = p1.x;\n\t\tp2.x -= x0;\n\t\tvar sum = 0.0;\n\t\tfor (var i = 1; i < n - 1; i++) {\n\t\t\tp0.y = p1.y;\n\t\t\tp1.x = p2.x;\n\t\t\tp1.y = p2.y;\n\t\t\tring.getCoordinate(i + 1, p2);\n\t\t\tp2.x -= x0;\n\t\t\tsum += p1.x * (p0.y - p2.y);\n\t\t}\n\t\treturn sum / 2.0;\n\t}\n};\nCGAlgorithms.distanceLineLine = function (A, B, C, D) {\n\tif (A.equals(B)) return CGAlgorithms.distancePointLine(A, C, D);\n\tif (C.equals(D)) return CGAlgorithms.distancePointLine(D, A, B);\n\tvar noIntersection = false;\n\tif (!Envelope.intersects(A, B, C, D)) {\n\t\tnoIntersection = true;\n\t} else {\n\t\tvar denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n\t\tif (denom === 0) {\n\t\t\tnoIntersection = true;\n\t\t} else {\n\t\t\tvar r_num = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n\t\t\tvar s_num = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n\t\t\tvar s = s_num / denom;\n\t\t\tvar r = r_num / denom;\n\t\t\tif (r < 0 || r > 1 || s < 0 || s > 1) {\n\t\t\t\tnoIntersection = true;\n\t\t\t}\n\t\t}\n\t}\n\tif (noIntersection) {\n\t\treturn MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B));\n\t}\n\treturn 0.0;\n};\nCGAlgorithms.isPointInRing = function (p, ring) {\n\treturn CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR;\n};\nCGAlgorithms.computeLength = function (pts) {\n\tvar n = pts.size();\n\tif (n <= 1) return 0.0;\n\tvar len = 0.0;\n\tvar p = new Coordinate();\n\tpts.getCoordinate(0, p);\n\tvar x0 = p.x;\n\tvar y0 = p.y;\n\tfor (var i = 1; i < n; i++) {\n\t\tpts.getCoordinate(i, p);\n\t\tvar x1 = p.x;\n\t\tvar y1 = p.y;\n\t\tvar dx = x1 - x0;\n\t\tvar dy = y1 - y0;\n\t\tlen += Math.sqrt(dx * dx + dy * dy);\n\t\tx0 = x1;\n\t\ty0 = y1;\n\t}\n\treturn len;\n};\nCGAlgorithms.isCCW = function (ring) {\n\tvar nPts = ring.length - 1;\n\tif (nPts < 3) throw new IllegalArgumentException(\"Ring has fewer than 4 points, so orientation cannot be determined\");\n\tvar hiPt = ring[0];\n\tvar hiIndex = 0;\n\tfor (var i = 1; i <= nPts; i++) {\n\t\tvar p = ring[i];\n\t\tif (p.y > hiPt.y) {\n\t\t\thiPt = p;\n\t\t\thiIndex = i;\n\t\t}\n\t}\n\tvar iPrev = hiIndex;\n\tdo {\n\t\tiPrev = iPrev - 1;\n\t\tif (iPrev < 0) iPrev = nPts;\n\t} while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex);\n\tvar iNext = hiIndex;\n\tdo {\n\t\tiNext = (iNext + 1) % nPts;\n\t} while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex);\n\tvar prev = ring[iPrev];\n\tvar next = ring[iNext];\n\tif (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) return false;\n\tvar disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n\tvar isCCW = false;\n\tif (disc === 0) {\n\t\tisCCW = prev.x > next.x;\n\t} else {\n\t\tisCCW = disc > 0;\n\t}\n\treturn isCCW;\n};\nCGAlgorithms.locatePointInRing = function (p, ring) {\n\treturn RayCrossingCounter.locatePointInRing(p, ring);\n};\nCGAlgorithms.distancePointLinePerpendicular = function (p, A, B) {\n\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\treturn Math.abs(s) * Math.sqrt(len2);\n};\nCGAlgorithms.computeOrientation = function (p1, p2, q) {\n\treturn CGAlgorithms.orientationIndex(p1, p2, q);\n};\nCGAlgorithms.distancePointLine = function () {\n\tif (arguments.length === 2) {\n\t\tlet p = arguments[0], line = arguments[1];\n\t\tif (line.length === 0) throw new IllegalArgumentException(\"Line array must contain at least one vertex\");\n\t\tvar minDistance = p.distance(line[0]);\n\t\tfor (var i = 0; i < line.length - 1; i++) {\n\t\t\tvar dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n\t\t\tif (dist < minDistance) {\n\t\t\t\tminDistance = dist;\n\t\t\t}\n\t\t}\n\t\treturn minDistance;\n\t} else if (arguments.length === 3) {\n\t\tlet p = arguments[0], A = arguments[1], B = arguments[2];\n\t\tif (A.x === B.x && A.y === B.y) return p.distance(A);\n\t\tvar len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n\t\tvar r = ((p.x - A.x) * (B.x - A.x) + (p.y - A.y) * (B.y - A.y)) / len2;\n\t\tif (r <= 0.0) return p.distance(A);\n\t\tif (r >= 1.0) return p.distance(B);\n\t\tvar s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n\t\treturn Math.abs(s) * Math.sqrt(len2);\n\t}\n};\nCGAlgorithms.isOnLine = function (p, pt) {\n\tvar lineIntersector = new RobustLineIntersector();\n\tfor (var i = 1; i < pt.length; i++) {\n\t\tvar p0 = pt[i - 1];\n\t\tvar p1 = pt[i];\n\t\tlineIntersector.computeIntersection(p, p0, p1);\n\t\tif (lineIntersector.hasIntersection()) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n};\nCGAlgorithms.CLOCKWISE = -1;\nCGAlgorithms.RIGHT = CGAlgorithms.CLOCKWISE;\nCGAlgorithms.COUNTERCLOCKWISE = 1;\nCGAlgorithms.LEFT = CGAlgorithms.COUNTERCLOCKWISE;\nCGAlgorithms.COLLINEAR = 0;\nCGAlgorithms.STRAIGHT = CGAlgorithms.COLLINEAR;\n","/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nexport default function EmptyStackException(message) {\n  this.message = message || '';\n};\nEmptyStackException.prototype = new Error();\n\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n","import EmptyStackException from './EmptyStackException'\nimport List from './List'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nexport default function Stack() {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n};\nStack.prototype = new List();\n\n\n/**\n * @override\n */\nStack.prototype.add = function(e) {\n  this.array_.push(e);\n  return true;\n};\n\n\n/**\n * @override\n */\nStack.prototype.get = function(index) {\n  if (index < 0 || index >= this.size()) {\n    throw new IndexOutOfBoundsException();\n  }\n\n  return this.array_[index];\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function(e) {\n  this.array_.push(e);\n  return e;\n};\n\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function(e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_.pop();\n};\n\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function() {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException();\n  }\n\n  return this.array_[this.array_.length - 1];\n};\n\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function() {\n  if (this.array_.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function() {\n  return this.empty();\n};\n\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function(o) {\n  return this.array_.indexOf(o);\n};\n\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function() {\n  return this.array_.length;\n};\n\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function() {\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this.array_[i]);\n  }\n\n  return array;\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function UniqueCoordinateArrayFilter() {\n\tthis.treeSet = new TreeSet();\n\tthis.list = new ArrayList();\n}\nextend(UniqueCoordinateArrayFilter.prototype, {\n\tfilter: function (coord) {\n\t\tif (!this.treeSet.contains(coord)) {\n\t\t\tthis.list.add(coord);\n\t\t\tthis.treeSet.add(coord);\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar coordinates = new Array(this.list.size()).fill(null);\n\t\treturn this.list.toArray(coordinates);\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function () {\n\t\treturn UniqueCoordinateArrayFilter;\n\t}\n});\nUniqueCoordinateArrayFilter.filterCoordinates = function (coords) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tfor (var i = 0; i < coords.length; i++) {\n\t\tfilter.filter(coords[i]);\n\t}\n\treturn filter.getCoordinates();\n};\n","import TreeSet from '../../../../java/util/TreeSet';\nimport CoordinateList from '../geom/CoordinateList';\nimport Arrays from '../../../../java/util/Arrays';\nimport PointLocation from './PointLocation';\nimport Stack from '../../../../java/util/Stack';\nimport extend from '../../../../extend';\nimport Orientation from './Orientation';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Comparator from '../../../../java/util/Comparator';\nimport UniqueCoordinateArrayFilter from '../util/UniqueCoordinateArrayFilter';\nimport Assert from '../util/Assert';\nexport default function ConvexHull() {\n\tthis._geomFactory = null;\n\tthis._inputPts = null;\n\tif (arguments.length === 1) {\n\t\tlet geometry = arguments[0];\n\t\tConvexHull.call(this, ConvexHull.extractCoordinates(geometry), geometry.getFactory());\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], geomFactory = arguments[1];\n\t\tthis._inputPts = UniqueCoordinateArrayFilter.filterCoordinates(pts);\n\t\tthis._geomFactory = geomFactory;\n\t}\n}\nextend(ConvexHull.prototype, {\n\tpreSort: function (pts) {\n\t\tvar t = null;\n\t\tfor (var i = 1; i < pts.length; i++) {\n\t\t\tif (pts[i].y < pts[0].y || pts[i].y === pts[0].y && pts[i].x < pts[0].x) {\n\t\t\t\tt = pts[0];\n\t\t\t\tpts[0] = pts[i];\n\t\t\t\tpts[i] = t;\n\t\t\t}\n\t\t}\n\t\tArrays.sort(pts, 1, pts.length, new RadialComparator(pts[0]));\n\t\treturn pts;\n\t},\n\tcomputeOctRing: function (inputPts) {\n\t\tvar octPts = this.computeOctPts(inputPts);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.add(octPts, false);\n\t\tif (coordList.size() < 3) {\n\t\t\treturn null;\n\t\t}\n\t\tcoordList.closeRing();\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tlineOrPolygon: function (coordinates) {\n\t\tcoordinates = this.cleanRing(coordinates);\n\t\tif (coordinates.length === 3) {\n\t\t\treturn this._geomFactory.createLineString([coordinates[0], coordinates[1]]);\n\t\t}\n\t\tvar linearRing = this._geomFactory.createLinearRing(coordinates);\n\t\treturn this._geomFactory.createPolygon(linearRing);\n\t},\n\tcleanRing: function (original) {\n\t\tAssert.equals(original[0], original[original.length - 1]);\n\t\tvar cleanedRing = new ArrayList();\n\t\tvar previousDistinctCoordinate = null;\n\t\tfor (var i = 0; i <= original.length - 2; i++) {\n\t\t\tvar currentCoordinate = original[i];\n\t\t\tvar nextCoordinate = original[i + 1];\n\t\t\tif (currentCoordinate.equals(nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (previousDistinctCoordinate !== null && this.isBetween(previousDistinctCoordinate, currentCoordinate, nextCoordinate)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tcleanedRing.add(currentCoordinate);\n\t\t\tpreviousDistinctCoordinate = currentCoordinate;\n\t\t}\n\t\tcleanedRing.add(original[original.length - 1]);\n\t\tvar cleanedRingCoordinates = new Array(cleanedRing.size()).fill(null);\n\t\treturn cleanedRing.toArray(cleanedRingCoordinates);\n\t},\n\tisBetween: function (c1, c2, c3) {\n\t\tif (Orientation.index(c1, c2, c3) !== 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (c1.x !== c3.x) {\n\t\t\tif (c1.x <= c2.x && c2.x <= c3.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.x <= c2.x && c2.x <= c1.x) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (c1.y !== c3.y) {\n\t\t\tif (c1.y <= c2.y && c2.y <= c3.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (c3.y <= c2.y && c2.y <= c1.y) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\treduce: function (inputPts) {\n\t\tvar polyPts = this.computeOctRing(inputPts);\n\t\tif (polyPts === null) return inputPts;\n\t\tvar reducedSet = new TreeSet();\n\t\tfor (var i = 0; i < polyPts.length; i++) {\n\t\t\treducedSet.add(polyPts[i]);\n\t\t}\n\t\tfor (var i = 0; i < inputPts.length; i++) {\n\t\t\tif (!PointLocation.isInRing(inputPts[i], polyPts)) {\n\t\t\t\treducedSet.add(inputPts[i]);\n\t\t\t}\n\t\t}\n\t\tvar reducedPts = CoordinateArrays.toCoordinateArray(reducedSet);\n\t\tif (reducedPts.length < 3) return this.padArray3(reducedPts);\n\t\treturn reducedPts;\n\t},\n\tgetConvexHull: function () {\n\t\tif (this._inputPts.length === 0) {\n\t\t\treturn this._geomFactory.createGeometryCollection();\n\t\t}\n\t\tif (this._inputPts.length === 1) {\n\t\t\treturn this._geomFactory.createPoint(this._inputPts[0]);\n\t\t}\n\t\tif (this._inputPts.length === 2) {\n\t\t\treturn this._geomFactory.createLineString(this._inputPts);\n\t\t}\n\t\tvar reducedPts = this._inputPts;\n\t\tif (this._inputPts.length > 50) {\n\t\t\treducedPts = this.reduce(this._inputPts);\n\t\t}\n\t\tvar sortedPts = this.preSort(reducedPts);\n\t\tvar cHS = this.grahamScan(sortedPts);\n\t\tvar cH = this.toCoordinateArray(cHS);\n\t\treturn this.lineOrPolygon(cH);\n\t},\n\tpadArray3: function (pts) {\n\t\tvar pad = new Array(3).fill(null);\n\t\tfor (var i = 0; i < pad.length; i++) {\n\t\t\tif (i < pts.length) {\n\t\t\t\tpad[i] = pts[i];\n\t\t\t} else pad[i] = pts[0];\n\t\t}\n\t\treturn pad;\n\t},\n\tcomputeOctPts: function (inputPts) {\n\t\tvar pts = new Array(8).fill(null);\n\t\tfor (var j = 0; j < pts.length; j++) {\n\t\t\tpts[j] = inputPts[0];\n\t\t}\n\t\tfor (var i = 1; i < inputPts.length; i++) {\n\t\t\tif (inputPts[i].x < pts[0].x) {\n\t\t\t\tpts[0] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y < pts[1].x - pts[1].y) {\n\t\t\t\tpts[1] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y > pts[2].y) {\n\t\t\t\tpts[2] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y > pts[3].x + pts[3].y) {\n\t\t\t\tpts[3] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x > pts[4].x) {\n\t\t\t\tpts[4] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x - inputPts[i].y > pts[5].x - pts[5].y) {\n\t\t\t\tpts[5] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].y < pts[6].y) {\n\t\t\t\tpts[6] = inputPts[i];\n\t\t\t}\n\t\t\tif (inputPts[i].x + inputPts[i].y < pts[7].x + pts[7].y) {\n\t\t\t\tpts[7] = inputPts[i];\n\t\t\t}\n\t\t}\n\t\treturn pts;\n\t},\n\ttoCoordinateArray: function (stack) {\n\t\tvar coordinates = new Array(stack.size()).fill(null);\n\t\tfor (var i = 0; i < stack.size(); i++) {\n\t\t\tvar coordinate = stack.get(i);\n\t\t\tcoordinates[i] = coordinate;\n\t\t}\n\t\treturn coordinates;\n\t},\n\tgrahamScan: function (c) {\n\t\tvar p = null;\n\t\tvar ps = new Stack();\n\t\tps.push(c[0]);\n\t\tps.push(c[1]);\n\t\tps.push(c[2]);\n\t\tfor (var i = 3; i < c.length; i++) {\n\t\t\tp = ps.pop();\n\t\t\twhile (!ps.empty() && Orientation.index(ps.peek(), p, c[i]) > 0) {\n\t\t\t\tp = ps.pop();\n\t\t\t}\n\t\t\tps.push(p);\n\t\t\tps.push(c[i]);\n\t\t}\n\t\tps.push(c[0]);\n\t\treturn ps;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConvexHull;\n\t}\n});\nConvexHull.extractCoordinates = function (geom) {\n\tvar filter = new UniqueCoordinateArrayFilter();\n\tgeom.apply(filter);\n\treturn filter.getCoordinates();\n};\nfunction RadialComparator() {\n\tthis._origin = null;\n\tlet origin = arguments[0];\n\tthis._origin = origin;\n}\nextend(RadialComparator.prototype, {\n\tcompare: function (o1, o2) {\n\t\tvar p1 = o1;\n\t\tvar p2 = o2;\n\t\treturn RadialComparator.polarCompare(this._origin, p1, p2);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn RadialComparator;\n\t}\n});\nRadialComparator.polarCompare = function (o, p, q) {\n\tvar dxp = p.x - o.x;\n\tvar dyp = p.y - o.y;\n\tvar dxq = q.x - o.x;\n\tvar dyq = q.y - o.y;\n\tvar orient = Orientation.index(o, p, q);\n\tif (orient === Orientation.COUNTERCLOCKWISE) return 1;\n\tif (orient === Orientation.CLOCKWISE) return -1;\n\tvar op = dxp * dxp + dyp * dyp;\n\tvar oq = dxq * dxq + dyq * dyq;\n\tif (op < oq) {\n\t\treturn -1;\n\t}\n\tif (op > oq) {\n\t\treturn 1;\n\t}\n\treturn 0;\n};\nConvexHull.RadialComparator = RadialComparator;\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointArea() {\n\tthis._factory = null;\n\tthis._interiorPoint = null;\n\tthis._maxWidth = 0.0;\n\tlet g = arguments[0];\n\tthis._factory = g.getFactory();\n\tthis.add(g);\n}\nextend(InteriorPointArea.prototype, {\n\taddPolygon: function (geometry) {\n\t\tif (geometry.isEmpty()) return null;\n\t\tvar intPt = null;\n\t\tvar width = null;\n\t\tvar bisector = this.horizontalBisector(geometry);\n\t\tif (bisector.getLength() === 0.0) {\n\t\t\twidth = 0;\n\t\t\tintPt = bisector.getCoordinate();\n\t\t} else {\n\t\t\tvar intersections = bisector.intersection(geometry);\n\t\t\tvar widestIntersection = this.widestGeometry(intersections);\n\t\t\twidth = widestIntersection.getEnvelopeInternal().getWidth();\n\t\t\tintPt = InteriorPointArea.centre(widestIntersection.getEnvelopeInternal());\n\t\t}\n\t\tif (this._interiorPoint === null || width > this._maxWidth) {\n\t\t\tthis._interiorPoint = intPt;\n\t\t\tthis._maxWidth = width;\n\t\t}\n\t},\n\tgetInteriorPoint: function () {\n\t\treturn this._interiorPoint;\n\t},\n\twidestGeometry: function () {\n\t\tif (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tif (gc.isEmpty()) {\n\t\t\t\treturn gc;\n\t\t\t}\n\t\t\tvar widestGeometry = gc.getGeometryN(0);\n\t\t\tfor (var i = 1; i < gc.getNumGeometries(); i++) {\n\t\t\t\tif (gc.getGeometryN(i).getEnvelopeInternal().getWidth() > widestGeometry.getEnvelopeInternal().getWidth()) {\n\t\t\t\t\twidestGeometry = gc.getGeometryN(i);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn widestGeometry;\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tif (!(geometry instanceof GeometryCollection)) {\n\t\t\t\treturn geometry;\n\t\t\t}\n\t\t\treturn this.widestGeometry(geometry);\n\t\t}\n\t},\n\thorizontalBisector: function (geometry) {\n\t\tvar envelope = geometry.getEnvelopeInternal();\n\t\tvar bisectY = SafeBisectorFinder.getBisectorY(geometry);\n\t\treturn this._factory.createLineString([new Coordinate(envelope.getMinX(), bisectY), new Coordinate(envelope.getMaxX(), bisectY)]);\n\t},\n\tadd: function (geom) {\n\t\tif (geom instanceof Polygon) {\n\t\t\tthis.addPolygon(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar gc = geom;\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointArea;\n\t}\n});\nInteriorPointArea.centre = function (envelope) {\n\treturn new Coordinate(InteriorPointArea.avg(envelope.getMinX(), envelope.getMaxX()), InteriorPointArea.avg(envelope.getMinY(), envelope.getMaxY()));\n};\nInteriorPointArea.avg = function (a, b) {\n\treturn (a + b) / 2.0;\n};\nfunction SafeBisectorFinder() {\n\tthis._poly = null;\n\tthis._centreY = null;\n\tthis._hiY = Double.MAX_VALUE;\n\tthis._loY = -Double.MAX_VALUE;\n\tlet poly = arguments[0];\n\tthis._poly = poly;\n\tthis._hiY = poly.getEnvelopeInternal().getMaxY();\n\tthis._loY = poly.getEnvelopeInternal().getMinY();\n\tthis._centreY = InteriorPointArea.avg(this._loY, this._hiY);\n}\nextend(SafeBisectorFinder.prototype, {\n\tupdateInterval: function (y) {\n\t\tif (y <= this._centreY) {\n\t\t\tif (y > this._loY) this._loY = y;\n\t\t} else if (y > this._centreY) {\n\t\t\tif (y < this._hiY) {\n\t\t\t\tthis._hiY = y;\n\t\t\t}\n\t\t}\n\t},\n\tgetBisectorY: function () {\n\t\tthis.process(this._poly.getExteriorRing());\n\t\tfor (var i = 0; i < this._poly.getNumInteriorRing(); i++) {\n\t\t\tthis.process(this._poly.getInteriorRingN(i));\n\t\t}\n\t\tvar bisectY = InteriorPointArea.avg(this._hiY, this._loY);\n\t\treturn bisectY;\n\t},\n\tprocess: function (line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tfor (var i = 0; i < seq.size(); i++) {\n\t\t\tvar y = seq.getY(i);\n\t\t\tthis.updateInterval(y);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SafeBisectorFinder;\n\t}\n});\nSafeBisectorFinder.getBisectorY = function (poly) {\n\tvar finder = new SafeBisectorFinder(poly);\n\treturn finder.getBisectorY();\n};\nInteriorPointArea.SafeBisectorFinder = SafeBisectorFinder;\n","import LineString from '../geom/LineString';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointLine() {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tlet g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.addInterior(g);\n\tif (this._interiorPoint === null) this.addEndpoints(g);\n}\nextend(InteriorPointLine.prototype, {\n\taddEndpoints: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addEndpoints(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addEndpoints(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tthis.add(pts[0]);\n\t\t\tthis.add(pts[pts.length - 1]);\n\t\t}\n\t},\n\tgetInteriorPoint: function () {\n\t\treturn this._interiorPoint;\n\t},\n\taddInterior: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof LineString) {\n\t\t\t\tthis.addInterior(geom.getCoordinates());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.addInterior(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tfor (var i = 1; i < pts.length - 1; i++) {\n\t\t\t\tthis.add(pts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function (point) {\n\t\tvar dist = point.distance(this._centroid);\n\t\tif (dist < this._minDistance) {\n\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\tthis._minDistance = dist;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointLine;\n\t}\n});\n","import Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport GeometryCollection from '../geom/GeometryCollection';\nexport default function InteriorPointPoint() {\n\tthis._centroid = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tthis._interiorPoint = null;\n\tlet g = arguments[0];\n\tthis._centroid = g.getCentroid().getCoordinate();\n\tthis.add(g);\n}\nextend(InteriorPointPoint.prototype, {\n\tgetInteriorPoint: function () {\n\t\treturn this._interiorPoint;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (geom instanceof Point) {\n\t\t\t\tthis.add(geom.getCoordinate());\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tvar gc = geom;\n\t\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\t\tthis.add(gc.getGeometryN(i));\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet point = arguments[0];\n\t\t\tvar dist = point.distance(this._centroid);\n\t\t\tif (dist < this._minDistance) {\n\t\t\t\tthis._interiorPoint = new Coordinate(point);\n\t\t\t\tthis._minDistance = dist;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorPointPoint;\n\t}\n});\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nexport default function MonotoneChainSelectAction() {\n\tthis.selectedSegment = new LineSegment();\n}\nextend(MonotoneChainSelectAction.prototype, {\n\tselect: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet seg = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tmc.getLineSegment(startIndex, this.selectedSegment);\n\t\t\tthis.select(this.selectedSegment);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainSelectAction;\n\t}\n});\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function NodeBase() {\n\tthis._items = new ArrayList();\n\tthis._subnode = new Array(2).fill(null);\n}\nextend(NodeBase.prototype, {\n\thasChildren: function () {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function () {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function (items) {\n\t\titems.addAll(this._items);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItems(items);\n\t\t\t}\n\t\t}\n\t\treturn items;\n\t},\n\tsize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this._items.size();\n\t},\n\taddAllItemsFromOverlapping: function (interval, resultItems) {\n\t\tif (interval !== null && !this.isSearchMatch(interval)) return null;\n\t\tresultItems.addAll(this._items);\n\t\tif (this._subnode[0] !== null) this._subnode[0].addAllItemsFromOverlapping(interval, resultItems);\n\t\tif (this._subnode[1] !== null) this._subnode[1].addAllItemsFromOverlapping(interval, resultItems);\n\t},\n\thasItems: function () {\n\t\treturn !this._items.isEmpty();\n\t},\n\tremove: function (itemInterval, item) {\n\t\tif (!this.isSearchMatch(itemInterval)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tfound = this._subnode[i].remove(itemInterval, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this._subnode[i].isPrunable()) this._subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this._items.remove(item);\n\t\treturn found;\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tdepth: function () {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tvar sqd = this._subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tnodeSize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].nodeSize();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tadd: function (item) {\n\t\tthis._items.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (interval, centre) {\n\tvar subnodeIndex = -1;\n\tif (interval.min >= centre) subnodeIndex = 1;\n\tif (interval.max <= centre) subnodeIndex = 0;\n\treturn subnodeIndex;\n};\n","import extend from '../../../../../extend';\nexport default function Interval() {\n\tthis.min = null;\n\tthis.max = null;\n\tif (arguments.length === 0) {\n\t\tthis.min = 0.0;\n\t\tthis.max = 0.0;\n\t} else if (arguments.length === 1) {\n\t\tlet interval = arguments[0];\n\t\tthis.init(interval.min, interval.max);\n\t} else if (arguments.length === 2) {\n\t\tlet min = arguments[0], max = arguments[1];\n\t\tthis.init(min, max);\n\t}\n}\nextend(Interval.prototype, {\n\texpandToInclude: function (interval) {\n\t\tif (interval.max > this.max) this.max = interval.max;\n\t\tif (interval.min < this.min) this.min = interval.min;\n\t},\n\tgetWidth: function () {\n\t\treturn this.max - this.min;\n\t},\n\toverlaps: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet interval = arguments[0];\n\t\t\treturn this.overlaps(interval.min, interval.max);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\tif (this.min > max || this.max < min) return false;\n\t\t\treturn true;\n\t\t}\n\t},\n\tgetMin: function () {\n\t\treturn this.min;\n\t},\n\ttoString: function () {\n\t\treturn \"[\" + this.min + \", \" + this.max + \"]\";\n\t},\n\tcontains: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Interval) {\n\t\t\t\tlet interval = arguments[0];\n\t\t\t\treturn this.contains(interval.min, interval.max);\n\t\t\t} else if (typeof arguments[0] === \"number\") {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn p >= this.min && p <= this.max;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet min = arguments[0], max = arguments[1];\n\t\t\treturn min >= this.min && max <= this.max;\n\t\t}\n\t},\n\tinit: function (min, max) {\n\t\tthis.min = min;\n\t\tthis.max = max;\n\t\tif (min > max) {\n\t\t\tthis.min = max;\n\t\t\tthis.max = min;\n\t\t}\n\t},\n\tgetMax: function () {\n\t\treturn this.max;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Interval;\n\t}\n});\n","export default function DoubleBits () { }\nDoubleBits.exponent = function (d) {\n  return CVTFWD(64, d) - 1023\n}\nDoubleBits.powerOf2 = function (exp) {\n  return Math.pow(2, exp)\n}\n\n/**\n * Calculates the exponent of the bit-pattern for a number. Uses code from:\n * http://www.merlyn.demon.co.uk/js-exact.htm\n *\n * @param {Number}\n *          NumW 32 or 64 to denote the number of bits.\n * @param {Number}\n *          Qty the number to calculate the bit pattern for.\n * @return {Number} The integer value of the exponent.\n * @private\n */\nfunction CVTFWD (NumW, Qty) {\n  var Sign\n  var Expo\n  var Mant\n  var Bin\n  var Inf = {\n    32: {\n      d: 0x7F,\n      c: 0x80,\n      b: 0,\n      a: 0\n    },\n    64: {\n      d: 0x7FF0,\n      c: 0,\n      b: 0,\n      a: 0\n    }\n  }\n  var ExW = {\n    32: 8,\n    64: 11\n  }[NumW]\n\n  if (!Bin) {\n    Sign = Qty < 0 || 1 / Qty < 0 // OK for +-0\n    if (!isFinite(Qty)) {\n      Bin = Inf[NumW]\n      if (Sign) {\n        Bin.d += 1 << (NumW / 4 - 1)\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  if (!Bin) {\n    Expo = {\n      32: 127,\n      64: 1023\n    }[NumW]\n    Mant = Math.abs(Qty)\n    while (Mant >= 2) {\n      Expo++\n      Mant /= 2\n    }\n    while (Mant < 1 && Expo > 0) {\n      Expo--\n      Mant *= 2\n    }\n    if (Expo <= 0) {\n      Mant /= 2\n    }\n    if (NumW === 32 && Expo > 254) {\n      Bin = {\n        d: Sign ? 0xFF : 0x7F,\n        c: 0x80,\n        b: 0,\n        a: 0\n      }\n      Expo = Math.pow(2, ExW) - 1\n      Mant = 0\n    }\n  }\n\n  return Expo\n}\n","import Interval from './Interval';\nimport extend from '../../../../../extend';\nimport DoubleBits from '../quadtree/DoubleBits';\nexport default function Key() {\n\tthis._pt = 0.0;\n\tthis._level = 0;\n\tthis._interval = null;\n\tlet interval = arguments[0];\n\tthis.computeKey(interval);\n}\nextend(Key.prototype, {\n\tgetInterval: function () {\n\t\treturn this._interval;\n\t},\n\tgetLevel: function () {\n\t\treturn this._level;\n\t},\n\tcomputeKey: function (itemInterval) {\n\t\tthis._level = Key.computeLevel(itemInterval);\n\t\tthis._interval = new Interval();\n\t\tthis.computeInterval(this._level, itemInterval);\n\t\twhile (!this._interval.contains(itemInterval)) {\n\t\t\tthis._level += 1;\n\t\t\tthis.computeInterval(this._level, itemInterval);\n\t\t}\n\t},\n\tcomputeInterval: function (level, itemInterval) {\n\t\tvar size = DoubleBits.powerOf2(level);\n\t\tthis._pt = Math.floor(itemInterval.getMin() / size) * size;\n\t\tthis._interval.init(this._pt, this._pt + size);\n\t},\n\tgetPoint: function () {\n\t\treturn this._pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Key;\n\t}\n});\nKey.computeLevel = function (interval) {\n\tvar dx = interval.getWidth();\n\tvar level = DoubleBits.exponent(dx) + 1;\n\treturn level;\n};\n","import NodeBase from './NodeBase';\nimport Interval from './Interval';\nimport extend from '../../../../../extend';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport Key from './Key';\nexport default function Node() {\n\tNodeBase.apply(this);\n\tthis._interval = null;\n\tthis._centre = null;\n\tthis._level = null;\n\tlet interval = arguments[0], level = arguments[1];\n\tthis._interval = interval;\n\tthis._level = level;\n\tthis._centre = (interval.getMin() + interval.getMax()) / 2;\n}\ninherits(Node, NodeBase);\nextend(Node.prototype, {\n\tgetInterval: function () {\n\t\treturn this._interval;\n\t},\n\tfind: function (searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this._centre);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this._subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this._subnode[subnodeIndex];\n\t\t\treturn node.find(searchInterval);\n\t\t}\n\t\treturn this;\n\t},\n\tinsert: function (node) {\n\t\tAssert.isTrue(this._interval === null || this._interval.contains(node._interval));\n\t\tvar index = NodeBase.getSubnodeIndex(node._interval, this._centre);\n\t\tif (node._level === this._level - 1) {\n\t\t\tthis._subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insert(node);\n\t\t\tthis._subnode[index] = childNode;\n\t\t}\n\t},\n\tisSearchMatch: function (itemInterval) {\n\t\treturn itemInterval.overlaps(this._interval);\n\t},\n\tgetSubnode: function (index) {\n\t\tif (this._subnode[index] === null) {\n\t\t\tthis._subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this._subnode[index];\n\t},\n\tgetNode: function (searchInterval) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchInterval, this._centre);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchInterval);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function (index) {\n\t\tvar min = 0.0;\n\t\tvar max = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tmin = this._interval.getMin();\n\t\t\t\tmax = this._centre;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tmin = this._centre;\n\t\t\t\tmax = this._interval.getMax();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar subInt = new Interval(min, max);\n\t\tvar node = new Node(subInt, this._level - 1);\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.createNode = function (itemInterval) {\n\tvar key = new Key(itemInterval);\n\tvar node = new Node(key.getInterval(), key.getLevel());\n\treturn node;\n};\nNode.createExpanded = function (node, addInterval) {\n\tvar expandInt = new Interval(addInterval);\n\tif (node !== null) expandInt.expandToInclude(node._interval);\n\tvar largerNode = Node.createNode(expandInt);\n\tif (node !== null) largerNode.insert(node);\n\treturn largerNode;\n};\n","import extend from '../../../../../extend';\nimport DoubleBits from './DoubleBits';\nexport default function IntervalSize() {}\nextend(IntervalSize.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IntervalSize;\n\t}\n});\nIntervalSize.isZeroWidth = function (min, max) {\n\tvar width = max - min;\n\tif (width === 0.0) return true;\n\tvar maxAbs = Math.max(Math.abs(min), Math.abs(max));\n\tvar scaledInterval = width / maxAbs;\n\tvar level = DoubleBits.exponent(scaledInterval);\n\treturn level <= IntervalSize.MIN_BINARY_EXPONENT;\n};\nIntervalSize.MIN_BINARY_EXPONENT = -50;\n","import NodeBase from './NodeBase';\nimport Node from './Node';\nimport extend from '../../../../../extend';\nimport IntervalSize from '../quadtree/IntervalSize';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function Root() {\n\tNodeBase.apply(this);\n}\ninherits(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function (itemInterval, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemInterval, Root.origin);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this._subnode[index];\n\t\tif (node === null || !node.getInterval().contains(itemInterval)) {\n\t\t\tvar largerNode = Node.createExpanded(node, itemInterval);\n\t\t\tthis._subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this._subnode[index], itemInterval, item);\n\t},\n\tisSearchMatch: function (interval) {\n\t\treturn true;\n\t},\n\tinsertContained: function (tree, itemInterval, item) {\n\t\tAssert.isTrue(tree.getInterval().contains(itemInterval));\n\t\tvar isZeroArea = IntervalSize.isZeroWidth(itemInterval.getMin(), itemInterval.getMax());\n\t\tvar node = null;\n\t\tif (isZeroArea) node = tree.find(itemInterval); else node = tree.getNode(itemInterval);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Root;\n\t}\n});\nRoot.origin = 0.0;\n","import Root from './Root';\nimport Interval from './Interval';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function Bintree() {\n\tthis._root = null;\n\tthis._minExtent = 1.0;\n\tthis._root = new Root();\n}\nextend(Bintree.prototype, {\n\tsize: function () {\n\t\tif (this._root !== null) return this._root.size();\n\t\treturn 0;\n\t},\n\tinsert: function (itemInterval, item) {\n\t\tthis.collectStats(itemInterval);\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this._minExtent);\n\t\tthis._root.insert(insertInterval, item);\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (typeof arguments[0] === \"number\") {\n\t\t\t\tlet x = arguments[0];\n\t\t\t\treturn this.query(new Interval(x, x));\n\t\t\t} else if (arguments[0] instanceof Interval) {\n\t\t\t\tlet interval = arguments[0];\n\t\t\t\tvar foundItems = new ArrayList();\n\t\t\t\tthis.query(interval, foundItems);\n\t\t\t\treturn foundItems;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet interval = arguments[0], foundItems = arguments[1];\n\t\t\tthis._root.addAllItemsFromOverlapping(interval, foundItems);\n\t\t}\n\t},\n\titerator: function () {\n\t\tvar foundItems = new ArrayList();\n\t\tthis._root.addAllItems(foundItems);\n\t\treturn foundItems.iterator();\n\t},\n\tremove: function (itemInterval, item) {\n\t\tvar insertInterval = Bintree.ensureExtent(itemInterval, this._minExtent);\n\t\treturn this._root.remove(insertInterval, item);\n\t},\n\tcollectStats: function (interval) {\n\t\tvar del = interval.getWidth();\n\t\tif (del < this._minExtent && del > 0.0) this._minExtent = del;\n\t},\n\tdepth: function () {\n\t\tif (this._root !== null) return this._root.depth();\n\t\treturn 0;\n\t},\n\tnodeSize: function () {\n\t\tif (this._root !== null) return this._root.nodeSize();\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Bintree;\n\t}\n});\nBintree.ensureExtent = function (itemInterval, minExtent) {\n\tvar min = itemInterval.getMin();\n\tvar max = itemInterval.getMax();\n\tif (min !== max) return itemInterval;\n\tif (min === max) {\n\t\tmin = min - minExtent / 2.0;\n\t\tmax = min + minExtent / 2.0;\n\t}\n\treturn new Interval(min, max);\n};\n","import extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChain() {\n\tthis._pts = null;\n\tthis._start = null;\n\tthis._end = null;\n\tthis._env = null;\n\tthis._context = null;\n\tthis._id = null;\n\tlet pts = arguments[0], start = arguments[1], end = arguments[2], context = arguments[3];\n\tthis._pts = pts;\n\tthis._start = start;\n\tthis._end = end;\n\tthis._context = context;\n}\nextend(MonotoneChain.prototype, {\n\tgetLineSegment: function (index, ls) {\n\t\tls.p0 = this._pts[index];\n\t\tls.p1 = this._pts[index + 1];\n\t},\n\tcomputeSelect: function (searchEnv, start0, end0, mcs) {\n\t\tvar p0 = this._pts[start0];\n\t\tvar p1 = this._pts[end0];\n\t\tif (end0 - start0 === 1) {\n\t\t\tmcs.select(this, start0);\n\t\t\treturn null;\n\t\t}\n\t\tif (!searchEnv.intersects(p0, p1)) return null;\n\t\tvar mid = Math.trunc((start0 + end0) / 2);\n\t\tif (start0 < mid) {\n\t\t\tthis.computeSelect(searchEnv, start0, mid, mcs);\n\t\t}\n\t\tif (mid < end0) {\n\t\t\tthis.computeSelect(searchEnv, mid, end0, mcs);\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar coord = new Array(this._end - this._start + 1).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._start; i <= this._end; i++) {\n\t\t\tcoord[index++] = this._pts[i];\n\t\t}\n\t\treturn coord;\n\t},\n\tcomputeOverlaps: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet mc = arguments[0], mco = arguments[1];\n\t\t\tthis.computeOverlaps(this._start, this._end, mc, mc._start, mc._end, mco);\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mc = arguments[2], start1 = arguments[3], end1 = arguments[4], mco = arguments[5];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tmco.overlap(this, start0, mc, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!this.overlaps(start0, end0, mc, start1, end1)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeOverlaps(start0, mid0, mc, start1, mid1, mco);\n\t\t\t\tif (mid1 < end1) this.computeOverlaps(start0, mid0, mc, mid1, end1, mco);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeOverlaps(mid0, end0, mc, start1, mid1, mco);\n\t\t\t\tif (mid1 < end1) this.computeOverlaps(mid0, end0, mc, mid1, end1, mco);\n\t\t\t}\n\t\t}\n\t},\n\tsetId: function (id) {\n\t\tthis._id = id;\n\t},\n\tselect: function (searchEnv, mcs) {\n\t\tthis.computeSelect(searchEnv, this._start, this._end, mcs);\n\t},\n\tgetEnvelope: function () {\n\t\tif (this._env === null) {\n\t\t\tvar p0 = this._pts[this._start];\n\t\t\tvar p1 = this._pts[this._end];\n\t\t\tthis._env = new Envelope(p0, p1);\n\t\t}\n\t\treturn this._env;\n\t},\n\toverlaps: function (start0, end0, mc, start1, end1) {\n\t\treturn Envelope.intersects(this._pts[start0], this._pts[end0], mc._pts[start1], mc._pts[end1]);\n\t},\n\tgetEndIndex: function () {\n\t\treturn this._end;\n\t},\n\tgetStartIndex: function () {\n\t\treturn this._start;\n\t},\n\tgetContext: function () {\n\t\treturn this._context;\n\t},\n\tgetId: function () {\n\t\treturn this._id;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChain;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Quadrant() {}\nextend(Quadrant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Quadrant;\n\t}\n});\nQuadrant.isNorthern = function (quad) {\n\treturn quad === Quadrant.NE || quad === Quadrant.NW;\n};\nQuadrant.isOpposite = function (quad1, quad2) {\n\tif (quad1 === quad2) return false;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return true;\n\treturn false;\n};\nQuadrant.commonHalfPlane = function (quad1, quad2) {\n\tif (quad1 === quad2) return quad1;\n\tvar diff = (quad1 - quad2 + 4) % 4;\n\tif (diff === 2) return -1;\n\tvar min = quad1 < quad2 ? quad1 : quad2;\n\tvar max = quad1 > quad2 ? quad1 : quad2;\n\tif (min === 0 && max === 3) return 3;\n\treturn min;\n};\nQuadrant.isInHalfPlane = function (quad, halfPlane) {\n\tif (halfPlane === Quadrant.SE) {\n\t\treturn quad === Quadrant.SE || quad === Quadrant.SW;\n\t}\n\treturn quad === halfPlane || quad === halfPlane + 1;\n};\nQuadrant.quadrant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tlet dx = arguments[0], dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the quadrant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tif (dx >= 0.0) {\n\t\t\tif (dy >= 0.0) return Quadrant.NE; else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (dy >= 0.0) return Quadrant.NW; else return Quadrant.SW;\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tif (p1.x === p0.x && p1.y === p0.y) throw new IllegalArgumentException(\"Cannot compute the quadrant for two identical points \" + p0);\n\t\tif (p1.x >= p0.x) {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NE; else return Quadrant.SE;\n\t\t} else {\n\t\t\tif (p1.y >= p0.y) return Quadrant.NW; else return Quadrant.SW;\n\t\t}\n\t}\n};\nQuadrant.NE = 0;\nQuadrant.NW = 1;\nQuadrant.SW = 2;\nQuadrant.SE = 3;\n","import MonotoneChain from './MonotoneChain';\nimport extend from '../../../../../extend';\nimport Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../../geomgraph/Quadrant';\nexport default function MonotoneChainBuilder() {}\nextend(MonotoneChainBuilder.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainBuilder;\n\t}\n});\nMonotoneChainBuilder.getChainStartIndices = function (pts) {\n\tvar start = 0;\n\tvar startIndexList = new ArrayList();\n\tstartIndexList.add(new Integer(start));\n\tdo {\n\t\tvar last = MonotoneChainBuilder.findChainEnd(pts, start);\n\t\tstartIndexList.add(new Integer(last));\n\t\tstart = last;\n\t} while (start < pts.length - 1);\n\tvar startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n\treturn startIndex;\n};\nMonotoneChainBuilder.findChainEnd = function (pts, start) {\n\tvar safeStart = start;\n\twhile (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n\t\tsafeStart++;\n\t}\n\tif (safeStart >= pts.length - 1) {\n\t\treturn pts.length - 1;\n\t}\n\tvar chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n\tvar last = start + 1;\n\twhile (last < pts.length) {\n\t\tif (!pts[last - 1].equals2D(pts[last])) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t}\n\t\tlast++;\n\t}\n\treturn last - 1;\n};\nMonotoneChainBuilder.getChains = function () {\n\tif (arguments.length === 1) {\n\t\tlet pts = arguments[0];\n\t\treturn MonotoneChainBuilder.getChains(pts, null);\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], context = arguments[1];\n\t\tvar mcList = new ArrayList();\n\t\tvar startIndex = MonotoneChainBuilder.getChainStartIndices(pts);\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(pts, startIndex[i], startIndex[i + 1], context);\n\t\t\tmcList.add(mc);\n\t\t}\n\t\treturn mcList;\n\t}\n};\nMonotoneChainBuilder.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n","import extend from '../../../../extend';\nexport default function RobustDeterminant() {}\nextend(RobustDeterminant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RobustDeterminant;\n\t}\n});\nRobustDeterminant.orientationIndex = function (p1, p2, q) {\n\tvar dx1 = p2.x - p1.x;\n\tvar dy1 = p2.y - p1.y;\n\tvar dx2 = q.x - p2.x;\n\tvar dy2 = q.y - p2.y;\n\treturn RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2);\n};\nRobustDeterminant.signOfDet2x2 = function (x1, y1, x2, y2) {\n\tvar sign = null;\n\tvar swap = null;\n\tvar k = null;\n\tvar count = 0;\n\tsign = 1;\n\tif (x1 === 0.0 || y2 === 0.0) {\n\t\tif (y1 === 0.0 || x2 === 0.0) {\n\t\t\treturn 0;\n\t\t} else if (y1 > 0) {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x2 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (y1 === 0.0 || x2 === 0.0) {\n\t\tif (y2 > 0) {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (x1 > 0) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < y1) {\n\t\tif (0.0 < y2) {\n\t\t\tif (y1 <= y2) {\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 <= -y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t} else {\n\t\t\t\tswap = x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif (0.0 < y2) {\n\t\t\tif (-y1 <= y2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t} else {\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 >= y2) {\n\t\t\t\tx1 = -x1;\n\t\t\t\ty1 = -y1;\n\t\t\t\tx2 = -x2;\n\t\t\t\ty2 = -y2;\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\tsign = -sign;\n\t\t\t\tswap = -x1;\n\t\t\t\tx1 = -x2;\n\t\t\t\tx2 = swap;\n\t\t\t\tswap = -y1;\n\t\t\t\ty1 = -y2;\n\t\t\t\ty2 = swap;\n\t\t\t}\n\t\t}\n\t}\n\tif (0.0 < x1) {\n\t\tif (0.0 < x2) {\n\t\t\tif (x1 <= x2) {\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\treturn sign;\n\t\t}\n\t} else {\n\t\tif (0.0 < x2) {\n\t\t\treturn -sign;\n\t\t} else {\n\t\t\tif (x1 >= x2) {\n\t\t\t\tsign = -sign;\n\t\t\t\tx1 = -x1;\n\t\t\t\tx2 = -x2;\n\t\t\t\t;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t}\n\twhile (true) {\n\t\tcount = count + 1;\n\t\tk = Math.floor(x2 / x1);\n\t\tx2 = x2 - k * x1;\n\t\ty2 = y2 - k * y1;\n\t\tif (y2 < 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (y2 > y1) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (x1 > x2 + x2) {\n\t\t\tif (y1 < y2 + y2) {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y1 > y2 + y2) {\n\t\t\t\treturn -sign;\n\t\t\t} else {\n\t\t\t\tx2 = x1 - x2;\n\t\t\t\ty2 = y1 - y2;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y2 === 0.0) {\n\t\t\tif (x2 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t}\n\t\tif (x2 === 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tk = Math.floor(x1 / x2);\n\t\tx1 = x1 - k * x2;\n\t\ty1 = y1 - k * y2;\n\t\tif (y1 < 0.0) {\n\t\t\treturn sign;\n\t\t}\n\t\tif (y1 > y2) {\n\t\t\treturn -sign;\n\t\t}\n\t\tif (x2 > x1 + x1) {\n\t\t\tif (y2 < y1 + y1) {\n\t\t\t\treturn -sign;\n\t\t\t}\n\t\t} else {\n\t\t\tif (y2 > y1 + y1) {\n\t\t\t\treturn sign;\n\t\t\t} else {\n\t\t\t\tx1 = x2 - x1;\n\t\t\t\ty1 = y2 - y1;\n\t\t\t\tsign = -sign;\n\t\t\t}\n\t\t}\n\t\tif (y1 === 0.0) {\n\t\t\tif (x1 === 0.0) {\n\t\t\t\treturn 0;\n\t\t\t} else {\n\t\t\t\treturn sign;\n\t\t\t}\n\t\t}\n\t\tif (x1 === 0.0) {\n\t\t\treturn -sign;\n\t\t}\n\t}\n};\n","import extend from '../../../../extend';\nexport default function PointInRing() {}\nextend(PointInRing.prototype, {\n\tisInside: function (pt) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointInRing;\n\t}\n});\n","import MonotoneChainSelectAction from '../index/chain/MonotoneChainSelectAction';\nimport Bintree from '../index/bintree/Bintree';\nimport Interval from '../index/bintree/Interval';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport RobustDeterminant from './RobustDeterminant';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport PointInRing from './PointInRing';\nexport default function MCPointInRing() {\n\tthis._ring = null;\n\tthis._tree = null;\n\tthis._crossings = 0;\n\tthis._interval = new Interval();\n\tlet ring = arguments[0];\n\tthis._ring = ring;\n\tthis.buildIndex();\n}\nextend(MCPointInRing.prototype, {\n\ttestLineSegment: function (p, seg) {\n\t\tvar xInt = null;\n\t\tvar x1 = null;\n\t\tvar y1 = null;\n\t\tvar x2 = null;\n\t\tvar y2 = null;\n\t\tvar p1 = seg.p0;\n\t\tvar p2 = seg.p1;\n\t\tx1 = p1.x - p.x;\n\t\ty1 = p1.y - p.y;\n\t\tx2 = p2.x - p.x;\n\t\ty2 = p2.y - p.y;\n\t\tif (y1 > 0 && y2 <= 0 || y2 > 0 && y1 <= 0) {\n\t\t\txInt = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2) / (y2 - y1);\n\t\t\tif (0.0 < xInt) {\n\t\t\t\tthis._crossings++;\n\t\t\t}\n\t\t}\n\t},\n\tbuildIndex: function () {\n\t\tthis._tree = new Bintree();\n\t\tvar pts = CoordinateArrays.removeRepeatedPoints(this._ring.getCoordinates());\n\t\tvar mcList = MonotoneChainBuilder.getChains(pts);\n\t\tfor (var i = 0; i < mcList.size(); i++) {\n\t\t\tvar mc = mcList.get(i);\n\t\t\tvar mcEnv = mc.getEnvelope();\n\t\t\tthis._interval.min = mcEnv.getMinY();\n\t\t\tthis._interval.max = mcEnv.getMaxY();\n\t\t\tthis._tree.insert(this._interval, mc);\n\t\t}\n\t},\n\ttestMonotoneChain: function (rayEnv, mcSelecter, mc) {\n\t\tmc.select(rayEnv, mcSelecter);\n\t},\n\tisInside: function (pt) {\n\t\tthis._crossings = 0;\n\t\tvar rayEnv = new Envelope(Double.NEGATIVE_INFINITY, Double.POSITIVE_INFINITY, pt.y, pt.y);\n\t\tthis._interval.min = pt.y;\n\t\tthis._interval.max = pt.y;\n\t\tvar segs = this._tree.query(this._interval);\n\t\tvar mcSelecter = new MCSelecter(this, pt);\n\t\tfor (var i = segs.iterator(); i.hasNext(); ) {\n\t\t\tvar mc = i.next();\n\t\t\tthis.testMonotoneChain(rayEnv, mcSelecter, mc);\n\t\t}\n\t\tif (this._crossings % 2 === 1) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [PointInRing];\n\t},\n\tgetClass: function () {\n\t\treturn MCPointInRing;\n\t}\n});\nfunction MCSelecter() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis.mcp = null;\n\tthis.p = null;\n\tlet mcp = arguments[0], p = arguments[1];\n\tthis.mcp = mcp;\n\tthis.p = p;\n}\ninherits(MCSelecter, MonotoneChainSelectAction);\nextend(MCSelecter.prototype, {\n\tselect: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet ls = arguments[0];\n\t\t\tthis.mcp.testLineSegment(this.p, ls);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCSelecter;\n\t}\n});\nMCPointInRing.MCSelecter = MCSelecter;\n","import Coordinate from '../geom/Coordinate';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Angle from './Angle';\nimport Assert from '../util/Assert';\nimport Triangle from '../geom/Triangle';\nexport default function MinimumBoundingCircle() {\n\tthis._input = null;\n\tthis._extremalPts = null;\n\tthis._centre = null;\n\tthis._radius = 0.0;\n\tlet geom = arguments[0];\n\tthis._input = geom;\n}\nextend(MinimumBoundingCircle.prototype, {\n\tgetRadius: function () {\n\t\tthis.compute();\n\t\treturn this._radius;\n\t},\n\tgetDiameter: function () {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetExtremalPoints: function () {\n\t\tthis.compute();\n\t\treturn this._extremalPts;\n\t},\n\tcomputeCirclePoints: function () {\n\t\tif (this._input.isEmpty()) {\n\t\t\tthis._extremalPts = new Array(0).fill(null);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._input.getNumPoints() === 1) {\n\t\t\tvar pts = this._input.getCoordinates();\n\t\t\tthis._extremalPts = [new Coordinate(pts[0])];\n\t\t\treturn null;\n\t\t}\n\t\tvar convexHull = this._input.convexHull();\n\t\tvar hullPts = convexHull.getCoordinates();\n\t\tvar pts = hullPts;\n\t\tif (hullPts[0].equals2D(hullPts[hullPts.length - 1])) {\n\t\t\tpts = new Array(hullPts.length - 1).fill(null);\n\t\t\tCoordinateArrays.copyDeep(hullPts, 0, pts, 0, hullPts.length - 1);\n\t\t}\n\t\tif (pts.length <= 2) {\n\t\t\tthis._extremalPts = CoordinateArrays.copyDeep(pts);\n\t\t\treturn null;\n\t\t}\n\t\tvar P = MinimumBoundingCircle.lowestPoint(pts);\n\t\tvar Q = MinimumBoundingCircle.pointWitMinAngleWithX(pts, P);\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tvar R = MinimumBoundingCircle.pointWithMinAngleWithSegment(pts, P, Q);\n\t\t\tif (Angle.isObtuse(P, R, Q)) {\n\t\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q)];\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, P, Q)) {\n\t\t\t\tP = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (Angle.isObtuse(R, Q, P)) {\n\t\t\t\tQ = R;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._extremalPts = [new Coordinate(P), new Coordinate(Q), new Coordinate(R)];\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"Logic failure in Minimum Bounding Circle algorithm!\");\n\t},\n\tcompute: function () {\n\t\tif (this._extremalPts !== null) return null;\n\t\tthis.computeCirclePoints();\n\t\tthis.computeCentre();\n\t\tif (this._centre !== null) this._radius = this._centre.distance(this._extremalPts[0]);\n\t},\n\tgetFarthestPoints: function () {\n\t\tthis.compute();\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\treturn this._input.getFactory().createLineString();\n\t\t\tcase 1:\n\t\t\t\treturn this._input.getFactory().createPoint(this._centre);\n\t\t}\n\t\tvar p0 = this._extremalPts[0];\n\t\tvar p1 = this._extremalPts[this._extremalPts.length - 1];\n\t\treturn this._input.getFactory().createLineString([p0, p1]);\n\t},\n\tgetCircle: function () {\n\t\tthis.compute();\n\t\tif (this._centre === null) return this._input.getFactory().createPolygon();\n\t\tvar centrePoint = this._input.getFactory().createPoint(this._centre);\n\t\tif (this._radius === 0.0) return centrePoint;\n\t\treturn centrePoint.buffer(this._radius);\n\t},\n\tgetCentre: function () {\n\t\tthis.compute();\n\t\treturn this._centre;\n\t},\n\tcomputeCentre: function () {\n\t\tswitch (this._extremalPts.length) {\n\t\t\tcase 0:\n\t\t\t\tthis._centre = null;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tthis._centre = this._extremalPts[0];\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tthis._centre = new Coordinate((this._extremalPts[0].x + this._extremalPts[1].x) / 2.0, (this._extremalPts[0].y + this._extremalPts[1].y) / 2.0);\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tthis._centre = Triangle.circumcentre(this._extremalPts[0], this._extremalPts[1], this._extremalPts[2]);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimumBoundingCircle;\n\t}\n});\nMinimumBoundingCircle.pointWitMinAngleWithX = function (pts, P) {\n\tvar minSin = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tvar dx = p.x - P.x;\n\t\tvar dy = p.y - P.y;\n\t\tif (dy < 0) dy = -dy;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar sin = dy / len;\n\t\tif (sin < minSin) {\n\t\t\tminSin = sin;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\nMinimumBoundingCircle.lowestPoint = function (pts) {\n\tvar min = pts[0];\n\tfor (var i = 1; i < pts.length; i++) {\n\t\tif (pts[i].y < min.y) min = pts[i];\n\t}\n\treturn min;\n};\nMinimumBoundingCircle.pointWithMinAngleWithSegment = function (pts, P, Q) {\n\tvar minAng = Double.MAX_VALUE;\n\tvar minAngPt = null;\n\tfor (var i = 0; i < pts.length; i++) {\n\t\tvar p = pts[i];\n\t\tif (p === P) continue;\n\t\tif (p === Q) continue;\n\t\tvar ang = Angle.angleBetween(P, p, Q);\n\t\tif (ang < minAng) {\n\t\t\tminAng = ang;\n\t\t\tminAngPt = p;\n\t\t}\n\t}\n\treturn minAngPt;\n};\n","import Coordinate from '../geom/Coordinate';\nimport Polygon from '../geom/Polygon';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport ConvexHull from './ConvexHull';\nexport default function MinimumDiameter() {\n\tthis._inputGeom = null;\n\tthis._isConvex = null;\n\tthis._convexHullPts = null;\n\tthis._minBaseSeg = new LineSegment();\n\tthis._minWidthPt = null;\n\tthis._minPtIndex = null;\n\tthis._minWidth = 0.0;\n\tif (arguments.length === 1) {\n\t\tlet inputGeom = arguments[0];\n\t\tMinimumDiameter.call(this, inputGeom, false);\n\t} else if (arguments.length === 2) {\n\t\tlet inputGeom = arguments[0], isConvex = arguments[1];\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._isConvex = isConvex;\n\t}\n}\nextend(MinimumDiameter.prototype, {\n\tgetWidthCoordinate: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidthPt;\n\t},\n\tgetSupportingSegment: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._inputGeom.getFactory().createLineString([this._minBaseSeg.p0, this._minBaseSeg.p1]);\n\t},\n\tgetDiameter: function () {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidthPt === null) return this._inputGeom.getFactory().createLineString();\n\t\tvar basePt = this._minBaseSeg.project(this._minWidthPt);\n\t\treturn this._inputGeom.getFactory().createLineString([basePt, this._minWidthPt]);\n\t},\n\tcomputeWidthConvex: function (convexGeom) {\n\t\tif (convexGeom instanceof Polygon) this._convexHullPts = convexGeom.getExteriorRing().getCoordinates(); else this._convexHullPts = convexGeom.getCoordinates();\n\t\tif (this._convexHullPts.length === 0) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = null;\n\t\t\tthis._minBaseSeg = null;\n\t\t} else if (this._convexHullPts.length === 1) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[0];\n\t\t} else if (this._convexHullPts.length === 2 || this._convexHullPts.length === 3) {\n\t\t\tthis._minWidth = 0.0;\n\t\t\tthis._minWidthPt = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p0 = this._convexHullPts[0];\n\t\t\tthis._minBaseSeg.p1 = this._convexHullPts[1];\n\t\t} else this.computeConvexRingMinDiameter(this._convexHullPts);\n\t},\n\tcomputeConvexRingMinDiameter: function (pts) {\n\t\tthis._minWidth = Double.MAX_VALUE;\n\t\tvar currMaxIndex = 1;\n\t\tvar seg = new LineSegment();\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tseg.p0 = pts[i];\n\t\t\tseg.p1 = pts[i + 1];\n\t\t\tcurrMaxIndex = this.findMaxPerpDistance(pts, seg, currMaxIndex);\n\t\t}\n\t},\n\tcomputeMinimumDiameter: function () {\n\t\tif (this._minWidthPt !== null) return null;\n\t\tif (this._isConvex) this.computeWidthConvex(this._inputGeom); else {\n\t\t\tvar convexGeom = new ConvexHull(this._inputGeom).getConvexHull();\n\t\t\tthis.computeWidthConvex(convexGeom);\n\t\t}\n\t},\n\tgetLength: function () {\n\t\tthis.computeMinimumDiameter();\n\t\treturn this._minWidth;\n\t},\n\tfindMaxPerpDistance: function (pts, seg, startIndex) {\n\t\tvar maxPerpDistance = seg.distancePerpendicular(pts[startIndex]);\n\t\tvar nextPerpDistance = maxPerpDistance;\n\t\tvar maxIndex = startIndex;\n\t\tvar nextIndex = maxIndex;\n\t\twhile (nextPerpDistance >= maxPerpDistance) {\n\t\t\tmaxPerpDistance = nextPerpDistance;\n\t\t\tmaxIndex = nextIndex;\n\t\t\tnextIndex = MinimumDiameter.nextIndex(pts, maxIndex);\n\t\t\tnextPerpDistance = seg.distancePerpendicular(pts[nextIndex]);\n\t\t}\n\t\tif (maxPerpDistance < this._minWidth) {\n\t\t\tthis._minPtIndex = maxIndex;\n\t\t\tthis._minWidth = maxPerpDistance;\n\t\t\tthis._minWidthPt = pts[this._minPtIndex];\n\t\t\tthis._minBaseSeg = new LineSegment(seg);\n\t\t}\n\t\treturn maxIndex;\n\t},\n\tgetMinimumRectangle: function () {\n\t\tthis.computeMinimumDiameter();\n\t\tif (this._minWidth === 0.0) {\n\t\t\tif (this._minBaseSeg.p0.equals2D(this._minBaseSeg.p1)) {\n\t\t\t\treturn this._inputGeom.getFactory().createPoint(this._minBaseSeg.p0);\n\t\t\t}\n\t\t\treturn this._minBaseSeg.toGeometry(this._inputGeom.getFactory());\n\t\t}\n\t\tvar dx = this._minBaseSeg.p1.x - this._minBaseSeg.p0.x;\n\t\tvar dy = this._minBaseSeg.p1.y - this._minBaseSeg.p0.y;\n\t\tvar minPara = Double.MAX_VALUE;\n\t\tvar maxPara = -Double.MAX_VALUE;\n\t\tvar minPerp = Double.MAX_VALUE;\n\t\tvar maxPerp = -Double.MAX_VALUE;\n\t\tfor (var i = 0; i < this._convexHullPts.length; i++) {\n\t\t\tvar paraC = MinimumDiameter.computeC(dx, dy, this._convexHullPts[i]);\n\t\t\tif (paraC > maxPara) maxPara = paraC;\n\t\t\tif (paraC < minPara) minPara = paraC;\n\t\t\tvar perpC = MinimumDiameter.computeC(-dy, dx, this._convexHullPts[i]);\n\t\t\tif (perpC > maxPerp) maxPerp = perpC;\n\t\t\tif (perpC < minPerp) minPerp = perpC;\n\t\t}\n\t\tvar maxPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, maxPerp);\n\t\tvar minPerpLine = MinimumDiameter.computeSegmentForLine(-dx, -dy, minPerp);\n\t\tvar maxParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, maxPara);\n\t\tvar minParaLine = MinimumDiameter.computeSegmentForLine(-dy, dx, minPara);\n\t\tvar p0 = maxParaLine.lineIntersection(maxPerpLine);\n\t\tvar p1 = minParaLine.lineIntersection(maxPerpLine);\n\t\tvar p2 = minParaLine.lineIntersection(minPerpLine);\n\t\tvar p3 = maxParaLine.lineIntersection(minPerpLine);\n\t\tvar shell = this._inputGeom.getFactory().createLinearRing([p0, p1, p2, p3, p0]);\n\t\treturn this._inputGeom.getFactory().createPolygon(shell);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimumDiameter;\n\t}\n});\nMinimumDiameter.nextIndex = function (pts, index) {\n\tindex++;\n\tif (index >= pts.length) index = 0;\n\treturn index;\n};\nMinimumDiameter.computeC = function (a, b, p) {\n\treturn a * p.y - b * p.x;\n};\nMinimumDiameter.getMinimumDiameter = function (geom) {\n\treturn new MinimumDiameter(geom).getDiameter();\n};\nMinimumDiameter.getMinimumRectangle = function (geom) {\n\treturn new MinimumDiameter(geom).getMinimumRectangle();\n};\nMinimumDiameter.computeSegmentForLine = function (a, b, c) {\n\tvar p0 = null;\n\tvar p1 = null;\n\tif (Math.abs(b) > Math.abs(a)) {\n\t\tp0 = new Coordinate(0.0, c / b);\n\t\tp1 = new Coordinate(1.0, c / b - a / b);\n\t} else {\n\t\tp0 = new Coordinate(c / a, 0.0);\n\t\tp1 = new Coordinate(c / a - b / a, 1.0);\n\t}\n\treturn new LineSegment(p0, p1);\n};\n","import LineString from '../LineString';\nimport GeometryFactory from '../GeometryFactory';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../Point';\nimport Polygon from '../Polygon';\nimport MultiPoint from '../MultiPoint';\nimport LinearRing from '../LinearRing';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../MultiPolygon';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport MultiLineString from '../MultiLineString';\nexport default function GeometryTransformer() {\n\tthis._inputGeom = null;\n\tthis._factory = null;\n\tthis._pruneEmptyGeometry = true;\n\tthis._preserveGeometryCollectionType = true;\n\tthis._preserveCollections = false;\n\tthis._preserveType = false;\n}\nextend(GeometryTransformer.prototype, {\n\ttransformPoint: function (geom, parent) {\n\t\treturn this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformPolygon: function (geom, parent) {\n\t\tvar isAllValidLinearRings = true;\n\t\tvar shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n\t\tif (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) isAllValidLinearRings = false;\n\t\tvar holes = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumInteriorRing(); i++) {\n\t\t\tvar hole = this.transformLinearRing(geom.getInteriorRingN(i), geom);\n\t\t\tif (hole === null || hole.isEmpty()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!(hole instanceof LinearRing)) isAllValidLinearRings = false;\n\t\t\tholes.add(hole);\n\t\t}\n\t\tif (isAllValidLinearRings) return this._factory.createPolygon(shell, holes.toArray([])); else {\n\t\t\tvar components = new ArrayList();\n\t\t\tif (shell !== null) components.add(shell);\n\t\t\tcomponents.addAll(holes);\n\t\t\treturn this._factory.buildGeometry(components);\n\t\t}\n\t},\n\tcreateCoordinateSequence: function (coords) {\n\t\treturn this._factory.getCoordinateSequenceFactory().create(coords);\n\t},\n\tgetInputGeometry: function () {\n\t\treturn this._inputGeom;\n\t},\n\ttransformMultiLineString: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformLineString(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\treturn this.copy(coords);\n\t},\n\ttransformLineString: function (geom, parent) {\n\t\treturn this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom));\n\t},\n\ttransformMultiPoint: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPoint(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transformPolygon(geom.getGeometryN(i), geom);\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\tcopy: function (seq) {\n\t\treturn seq.copy();\n\t},\n\ttransformGeometryCollection: function (geom, parent) {\n\t\tvar transGeomList = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar transformGeom = this.transform(geom.getGeometryN(i));\n\t\t\tif (transformGeom === null) continue;\n\t\t\tif (this._pruneEmptyGeometry && transformGeom.isEmpty()) continue;\n\t\t\ttransGeomList.add(transformGeom);\n\t\t}\n\t\tif (this._preserveGeometryCollectionType) return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList));\n\t\treturn this._factory.buildGeometry(transGeomList);\n\t},\n\ttransform: function (inputGeom) {\n\t\tthis._inputGeom = inputGeom;\n\t\tthis._factory = inputGeom.getFactory();\n\t\tif (inputGeom instanceof Point) return this.transformPoint(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPoint) return this.transformMultiPoint(inputGeom, null);\n\t\tif (inputGeom instanceof LinearRing) return this.transformLinearRing(inputGeom, null);\n\t\tif (inputGeom instanceof LineString) return this.transformLineString(inputGeom, null);\n\t\tif (inputGeom instanceof MultiLineString) return this.transformMultiLineString(inputGeom, null);\n\t\tif (inputGeom instanceof Polygon) return this.transformPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof MultiPolygon) return this.transformMultiPolygon(inputGeom, null);\n\t\tif (inputGeom instanceof GeometryCollection) return this.transformGeometryCollection(inputGeom, null);\n\t\tthrow new IllegalArgumentException(\"Unknown Geometry subtype: \" + inputGeom.getClass().getName());\n\t},\n\ttransformLinearRing: function (geom, parent) {\n\t\tvar seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n\t\tif (seq === null) return this._factory.createLinearRing(null);\n\t\tvar seqSize = seq.size();\n\t\tif (seqSize > 0 && seqSize < 4 && !this._preserveType) return this._factory.createLineString(seq);\n\t\treturn this._factory.createLinearRing(seq);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryTransformer;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport LineSegment from '../geom/LineSegment';\nimport inherits from '../../../../inherits';\nexport default function Densifier() {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(Densifier.prototype, {\n\tgetResultGeometry: function () {\n\t\treturn new DensifyTransformer(this._distanceTolerance).transform(this._inputGeom);\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance <= 0.0) throw new IllegalArgumentException(\"Tolerance must be positive\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Densifier;\n\t}\n});\nDensifier.densifyPoints = function (pts, distanceTolerance, precModel) {\n\tvar seg = new LineSegment();\n\tvar coordList = new CoordinateList();\n\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[i + 1];\n\t\tcoordList.add(seg.p0, false);\n\t\tvar len = seg.getLength();\n\t\tvar densifiedSegCount = Math.trunc(len / distanceTolerance) + 1;\n\t\tif (densifiedSegCount > 1) {\n\t\t\tvar densifiedSegLen = len / densifiedSegCount;\n\t\t\tfor (var j = 1; j < densifiedSegCount; j++) {\n\t\t\t\tvar segFract = j * densifiedSegLen / len;\n\t\t\t\tvar p = seg.pointAlong(segFract);\n\t\t\t\tprecModel.makePrecise(p);\n\t\t\t\tcoordList.add(p, false);\n\t\t\t}\n\t\t}\n\t}\n\tcoordList.add(pts[pts.length - 1], false);\n\treturn coordList.toCoordinateArray();\n};\nDensifier.densify = function (geom, distanceTolerance) {\n\tvar densifier = new Densifier(geom);\n\tdensifier.setDistanceTolerance(distanceTolerance);\n\treturn densifier.getResultGeometry();\n};\nfunction DensifyTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis.distanceTolerance = null;\n\tlet distanceTolerance = arguments[0];\n\tthis.distanceTolerance = distanceTolerance;\n}\ninherits(DensifyTransformer, GeometryTransformer);\nextend(DensifyTransformer.prototype, {\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformPolygon: function (geom, parent) {\n\t\tvar roughGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn roughGeom;\n\t\t}\n\t\treturn this.createValidArea(roughGeom);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = Densifier.densifyPoints(inputPts, this.distanceTolerance, parent.getPrecisionModel());\n\t\tif (parent instanceof LineString && newPts.length === 1) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tcreateValidArea: function (roughAreaGeom) {\n\t\treturn roughAreaGeom.buffer(0.0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DensifyTransformer;\n\t}\n});\nDensifier.DensifyTransformer = DensifyTransformer;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Quadrant from '../geomgraph/Quadrant';\nimport Assert from '../util/Assert';\nexport default function HalfEdge() {\n\tthis._orig = null;\n\tthis._sym = null;\n\tthis._next = null;\n\tlet orig = arguments[0];\n\tthis._orig = orig;\n}\nextend(HalfEdge.prototype, {\n\tfind: function (dest) {\n\t\tvar oNext = this;\n\t\tdo {\n\t\t\tif (oNext === null) return null;\n\t\t\tif (oNext.dest().equals2D(dest)) return oNext;\n\t\t\toNext = oNext.oNext();\n\t\t} while (oNext !== this);\n\t\treturn null;\n\t},\n\tdest: function () {\n\t\treturn this._sym._orig;\n\t},\n\toNext: function () {\n\t\treturn this._sym._next;\n\t},\n\tinsert: function (e) {\n\t\tif (this.oNext() === this) {\n\t\t\tthis.insertAfter(e);\n\t\t\treturn null;\n\t\t}\n\t\tvar ecmp = this.compareTo(e);\n\t\tvar ePrev = this;\n\t\tdo {\n\t\t\tvar oNext = ePrev.oNext();\n\t\t\tvar cmp = oNext.compareTo(e);\n\t\t\tif (cmp !== ecmp || oNext === this) {\n\t\t\t\tePrev.insertAfter(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tePrev = oNext;\n\t\t} while (ePrev !== this);\n\t\tAssert.shouldNeverReachHere();\n\t},\n\tinsertAfter: function (e) {\n\t\tAssert.equals(this._orig, e.orig());\n\t\tvar save = this.oNext();\n\t\tthis._sym.setNext(e);\n\t\te.sym().setNext(save);\n\t},\n\tdegree: function () {\n\t\tvar degree = 0;\n\t\tvar e = this;\n\t\tdo {\n\t\t\tdegree++;\n\t\t\te = e.oNext();\n\t\t} while (e !== this);\n\t\treturn degree;\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Coordinate && arguments[0] instanceof Coordinate)) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\treturn this._orig.equals2D(p0) && this._sym._orig.equals(p1);\n\t\t}\n\t},\n\tdeltaY: function () {\n\t\treturn this._sym._orig.y - this._orig.y;\n\t},\n\tsym: function () {\n\t\treturn this._sym;\n\t},\n\tprev: function () {\n\t\treturn this._sym.next()._sym;\n\t},\n\tcompareAngularDirection: function (e) {\n\t\tvar dx = this.deltaX();\n\t\tvar dy = this.deltaY();\n\t\tvar dx2 = e.deltaX();\n\t\tvar dy2 = e.deltaY();\n\t\tif (dx === dx2 && dy === dy2) return 0;\n\t\tvar quadrant = Quadrant.quadrant(dx, dy);\n\t\tvar quadrant2 = Quadrant.quadrant(dx2, dy2);\n\t\tif (quadrant > quadrant2) return 1;\n\t\tif (quadrant < quadrant2) return -1;\n\t\treturn Orientation.index(e._orig, e.dest(), this.dest());\n\t},\n\tprevNode: function () {\n\t\tvar e = this;\n\t\twhile (e.degree() === 2) {\n\t\t\te = e.prev();\n\t\t\tif (e === this) return null;\n\t\t}\n\t\treturn e;\n\t},\n\tcompareTo: function (obj) {\n\t\tvar e = obj;\n\t\tvar comp = this.compareAngularDirection(e);\n\t\treturn comp;\n\t},\n\tnext: function () {\n\t\treturn this._next;\n\t},\n\tsetSym: function (e) {\n\t\tthis._sym = e;\n\t},\n\torig: function () {\n\t\treturn this._orig;\n\t},\n\ttoString: function () {\n\t\treturn \"HE(\" + this._orig.x + \" \" + this._orig.y + \", \" + this._sym._orig.x + \" \" + this._sym._orig.y + \")\";\n\t},\n\tsetNext: function (e) {\n\t\tthis._next = e;\n\t},\n\tinit: function (e) {\n\t\tthis.setSym(e);\n\t\te.setSym(this);\n\t\tthis.setNext(e);\n\t\te.setNext(this);\n\t},\n\tdeltaX: function () {\n\t\treturn this._sym._orig.x - this._orig.x;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HalfEdge;\n\t}\n});\nHalfEdge.init = function (e0, e1) {\n\tif (e0._sym !== null || e1._sym !== null || e0._next !== null || e1._next !== null) throw new IllegalStateException(\"Edges are already initialized\");\n\te0.init(e1);\n\treturn e0;\n};\nHalfEdge.create = function (p0, p1) {\n\tvar e0 = new HalfEdge(p0);\n\tvar e1 = new HalfEdge(p1);\n\te0.init(e1);\n\treturn e0;\n};\n","import extend from '../../../../extend';\nimport HalfEdge from './HalfEdge';\nimport inherits from '../../../../inherits';\nexport default function MarkHalfEdge() {\n\tthis._isMarked = false;\n\tlet orig = arguments[0];\n\tHalfEdge.call(this, orig);\n}\ninherits(MarkHalfEdge, HalfEdge);\nextend(MarkHalfEdge.prototype, {\n\tmark: function () {\n\t\tthis._isMarked = true;\n\t},\n\tsetMark: function (isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tisMarked: function () {\n\t\treturn this._isMarked;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MarkHalfEdge;\n\t}\n});\nMarkHalfEdge.setMarkBoth = function (e, isMarked) {\n\te.setMark(isMarked);\n\te.sym().setMark(isMarked);\n};\nMarkHalfEdge.isMarked = function (e) {\n\treturn e.isMarked();\n};\nMarkHalfEdge.setMark = function (e, isMarked) {\n\te.setMark(isMarked);\n};\nMarkHalfEdge.markBoth = function (e) {\n\te.mark();\n\te.sym().mark();\n};\nMarkHalfEdge.mark = function (e) {\n\te.mark();\n};\n","import HashMap from '../../../../java/util/HashMap';\nimport extend from '../../../../extend';\nimport HalfEdge from './HalfEdge';\nexport default function EdgeGraph() {\n\tthis._vertexMap = new HashMap();\n}\nextend(EdgeGraph.prototype, {\n\tinsert: function (orig, dest, eAdj) {\n\t\tvar e = this.create(orig, dest);\n\t\tif (eAdj !== null) {\n\t\t\teAdj.insert(e);\n\t\t} else {\n\t\t\tthis._vertexMap.put(orig, e);\n\t\t}\n\t\tvar eAdjDest = this._vertexMap.get(dest);\n\t\tif (eAdjDest !== null) {\n\t\t\teAdjDest.insert(e.sym());\n\t\t} else {\n\t\t\tthis._vertexMap.put(dest, e.sym());\n\t\t}\n\t\treturn e;\n\t},\n\tcreate: function (p0, p1) {\n\t\tvar e0 = this.createEdge(p0);\n\t\tvar e1 = this.createEdge(p1);\n\t\tHalfEdge.init(e0, e1);\n\t\treturn e0;\n\t},\n\tcreateEdge: function (orig) {\n\t\treturn new HalfEdge(orig);\n\t},\n\taddEdge: function (orig, dest) {\n\t\tif (!EdgeGraph.isValidEdge(orig, dest)) return null;\n\t\tvar eAdj = this._vertexMap.get(orig);\n\t\tvar eSame = null;\n\t\tif (eAdj !== null) {\n\t\t\teSame = eAdj.find(dest);\n\t\t}\n\t\tif (eSame !== null) {\n\t\t\treturn eSame;\n\t\t}\n\t\tvar e = this.insert(orig, dest, eAdj);\n\t\treturn e;\n\t},\n\tgetVertexEdges: function () {\n\t\treturn this._vertexMap.values();\n\t},\n\tfindEdge: function (orig, dest) {\n\t\tvar e = this._vertexMap.get(orig);\n\t\tif (e === null) return null;\n\t\treturn e.find(dest);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeGraph;\n\t}\n});\nEdgeGraph.isValidEdge = function (orig, dest) {\n\tvar cmp = dest.compareTo(orig);\n\treturn cmp !== 0;\n};\n","import extend from '../../../../extend';\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nimport inherits from '../../../../inherits';\nexport default function DissolveHalfEdge() {\n\tthis._isStart = false;\n\tlet orig = arguments[0];\n\tMarkHalfEdge.call(this, orig);\n}\ninherits(DissolveHalfEdge, MarkHalfEdge);\nextend(DissolveHalfEdge.prototype, {\n\tsetStart: function () {\n\t\tthis._isStart = true;\n\t},\n\tisStart: function () {\n\t\treturn this._isStart;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DissolveHalfEdge;\n\t}\n});\n","import EdgeGraph from '../edgegraph/EdgeGraph';\nimport extend from '../../../../extend';\nimport DissolveHalfEdge from './DissolveHalfEdge';\nimport inherits from '../../../../inherits';\nexport default function DissolveEdgeGraph() {\n\tEdgeGraph.apply(this);\n}\ninherits(DissolveEdgeGraph, EdgeGraph);\nextend(DissolveEdgeGraph.prototype, {\n\tcreateEdge: function (p0) {\n\t\treturn new DissolveHalfEdge(p0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DissolveEdgeGraph;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Stack from '../../../../java/util/Stack';\nimport extend from '../../../../extend';\nimport MarkHalfEdge from '../edgegraph/MarkHalfEdge';\nimport DissolveEdgeGraph from './DissolveEdgeGraph';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function LineDissolver() {\n\tthis._result = null;\n\tthis._factory = null;\n\tthis._graph = null;\n\tthis._lines = new ArrayList();\n\tthis._nodeEdgeStack = new Stack();\n\tthis._ringStartEdge = null;\n\tthis._graph = new DissolveEdgeGraph();\n}\nextend(LineDissolver.prototype, {\n\taddLine: function (line) {\n\t\tthis._lines.add(this._factory.createLineString(line.toCoordinateArray()));\n\t},\n\tupdateRingStartEdge: function (e) {\n\t\tif (!e.isStart()) {\n\t\t\te = e.sym();\n\t\t\tif (!e.isStart()) return null;\n\t\t}\n\t\tif (this._ringStartEdge === null) {\n\t\t\tthis._ringStartEdge = e;\n\t\t\treturn null;\n\t\t}\n\t\tif (e.orig().compareTo(this._ringStartEdge.orig()) < 0) {\n\t\t\tthis._ringStartEdge = e;\n\t\t}\n\t},\n\tgetResult: function () {\n\t\tif (this._result === null) this.computeResult();\n\t\treturn this._result;\n\t},\n\tprocess: function (e) {\n\t\tvar eNode = e.prevNode();\n\t\tif (eNode === null) eNode = e;\n\t\tthis.stackEdges(eNode);\n\t\tthis.buildLines();\n\t},\n\tbuildRing: function (eStartRing) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStartRing;\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStartRing) break;\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t}\n\t\tline.add(e.dest().copy(), false);\n\t\tthis.addLine(line);\n\t},\n\tbuildLine: function (eStart) {\n\t\tvar line = new CoordinateList();\n\t\tvar e = eStart;\n\t\tthis._ringStartEdge = null;\n\t\tMarkHalfEdge.markBoth(e);\n\t\tline.add(e.orig().copy(), false);\n\t\twhile (e.sym().degree() === 2) {\n\t\t\tthis.updateRingStartEdge(e);\n\t\t\tvar eNext = e.next();\n\t\t\tif (eNext === eStart) {\n\t\t\t\tthis.buildRing(this._ringStartEdge);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tline.add(eNext.orig().copy(), false);\n\t\t\te = eNext;\n\t\t\tMarkHalfEdge.markBoth(e);\n\t\t}\n\t\tline.add(e.dest().clone(), false);\n\t\tthis.stackEdges(e.sym());\n\t\tthis.addLine(line);\n\t},\n\tstackEdges: function (node) {\n\t\tvar e = node;\n\t\tdo {\n\t\t\tif (!MarkHalfEdge.isMarked(e)) this._nodeEdgeStack.add(e);\n\t\t\te = e.oNext();\n\t\t} while (e !== node);\n\t},\n\tcomputeResult: function () {\n\t\tvar edges = this._graph.getVertexEdges();\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.process(e);\n\t\t}\n\t\tthis._result = this._factory.buildGeometry(this._lines);\n\t},\n\tbuildLines: function () {\n\t\twhile (!this._nodeEdgeStack.empty()) {\n\t\t\tvar e = this._nodeEdgeStack.pop();\n\t\t\tif (MarkHalfEdge.isMarked(e)) continue;\n\t\t\tthis.buildLine(e);\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function (component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tvar seq = lineString.getCoordinateSequence();\n\t\t\tvar doneStart = false;\n\t\t\tfor (var i = 1; i < seq.size(); i++) {\n\t\t\t\tvar e = this._graph.addEdge(seq.getCoordinate(i - 1), seq.getCoordinate(i));\n\t\t\t\tif (e === null) continue;\n\t\t\t\tif (!doneStart) {\n\t\t\t\t\te.setStart();\n\t\t\t\t\tdoneStart = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineDissolver;\n\t}\n});\nLineDissolver.dissolve = function (g) {\n\tvar d = new LineDissolver();\n\td.add(g);\n\treturn d.getResult();\n};\n","import Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport PointLocation from './PointLocation';\nimport BoundaryNodeRule from './BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport GeometryCollectionIterator from '../geom/GeometryCollectionIterator';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function PointLocator() {\n\tthis._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n\tthis._isIn = null;\n\tthis._numBoundaries = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet boundaryRule = arguments[0];\n\t\tif (boundaryRule === null) throw new IllegalArgumentException(\"Rule must be non-null\");\n\t\tthis._boundaryRule = boundaryRule;\n\t}\n}\nextend(PointLocator.prototype, {\n\tlocateInPolygonRing: function (p, ring) {\n\t\tif (!ring.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\treturn PointLocation.locateInRing(p, ring.getCoordinates());\n\t},\n\tintersects: function (p, geom) {\n\t\treturn this.locate(p, geom) !== Location.EXTERIOR;\n\t},\n\tupdateLocationInfo: function (loc) {\n\t\tif (loc === Location.INTERIOR) this._isIn = true;\n\t\tif (loc === Location.BOUNDARY) this._numBoundaries++;\n\t},\n\tcomputeLocation: function (p, geom) {\n\t\tif (geom instanceof Point) {\n\t\t\tthis.updateLocationInfo(this.locateOnPoint(p, geom));\n\t\t}\n\t\tif (geom instanceof LineString) {\n\t\t\tthis.updateLocationInfo(this.locateOnLineString(p, geom));\n\t\t} else if (geom instanceof Polygon) {\n\t\t\tthis.updateLocationInfo(this.locateInPolygon(p, geom));\n\t\t} else if (geom instanceof MultiLineString) {\n\t\t\tvar ml = geom;\n\t\t\tfor (var i = 0; i < ml.getNumGeometries(); i++) {\n\t\t\t\tvar l = ml.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateOnLineString(p, l));\n\t\t\t}\n\t\t} else if (geom instanceof MultiPolygon) {\n\t\t\tvar mpoly = geom;\n\t\t\tfor (var i = 0; i < mpoly.getNumGeometries(); i++) {\n\t\t\t\tvar poly = mpoly.getGeometryN(i);\n\t\t\t\tthis.updateLocationInfo(this.locateInPolygon(p, poly));\n\t\t\t}\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tvar geomi = new GeometryCollectionIterator(geom);\n\t\t\twhile (geomi.hasNext()) {\n\t\t\t\tvar g2 = geomi.next();\n\t\t\t\tif (g2 !== geom) this.computeLocation(p, g2);\n\t\t\t}\n\t\t}\n\t},\n\tlocateOnPoint: function (p, pt) {\n\t\tvar ptCoord = pt.getCoordinate();\n\t\tif (ptCoord.equals2D(p)) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t},\n\tlocateOnLineString: function (p, l) {\n\t\tif (!l.getEnvelopeInternal().intersects(p)) return Location.EXTERIOR;\n\t\tvar seq = l.getCoordinateSequence();\n\t\tif (!l.isClosed()) {\n\t\t\tif (p.equals(seq.getCoordinate(0)) || p.equals(seq.getCoordinate(seq.size() - 1))) {\n\t\t\t\treturn Location.BOUNDARY;\n\t\t\t}\n\t\t}\n\t\tif (PointLocation.isOnLine(p, seq)) {\n\t\t\treturn Location.INTERIOR;\n\t\t}\n\t\treturn Location.EXTERIOR;\n\t},\n\tlocateInPolygon: function (p, poly) {\n\t\tif (poly.isEmpty()) return Location.EXTERIOR;\n\t\tvar shell = poly.getExteriorRing();\n\t\tvar shellLoc = this.locateInPolygonRing(p, shell);\n\t\tif (shellLoc === Location.EXTERIOR) return Location.EXTERIOR;\n\t\tif (shellLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tvar hole = poly.getInteriorRingN(i);\n\t\t\tvar holeLoc = this.locateInPolygonRing(p, hole);\n\t\t\tif (holeLoc === Location.INTERIOR) return Location.EXTERIOR;\n\t\t\tif (holeLoc === Location.BOUNDARY) return Location.BOUNDARY;\n\t\t}\n\t\treturn Location.INTERIOR;\n\t},\n\tlocate: function (p, geom) {\n\t\tif (geom.isEmpty()) return Location.EXTERIOR;\n\t\tif (geom instanceof LineString) {\n\t\t\treturn this.locateOnLineString(p, geom);\n\t\t} else if (geom instanceof Polygon) {\n\t\t\treturn this.locateInPolygon(p, geom);\n\t\t}\n\t\tthis._isIn = false;\n\t\tthis._numBoundaries = 0;\n\t\tthis.computeLocation(p, geom);\n\t\tif (this._boundaryRule.isInBoundary(this._numBoundaries)) return Location.BOUNDARY;\n\t\tif (this._numBoundaries > 0 || this._isIn) return Location.INTERIOR;\n\t\treturn Location.EXTERIOR;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointLocator;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function Position() {}\nextend(Position.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Position;\n\t}\n});\nPosition.opposite = function (position) {\n\tif (position === Position.LEFT) return Position.RIGHT;\n\tif (position === Position.RIGHT) return Position.LEFT;\n\treturn position;\n};\nPosition.ON = 0;\nPosition.LEFT = 1;\nPosition.RIGHT = 2;\n","import extend from '../../../../../extend';\nexport default function MonotoneChain() {\n\tthis.mce = null;\n\tthis.chainIndex = null;\n\tlet mce = arguments[0], chainIndex = arguments[1];\n\tthis.mce = mce;\n\tthis.chainIndex = chainIndex;\n}\nextend(MonotoneChain.prototype, {\n\tcomputeIntersections: function (mc, si) {\n\t\tthis.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChain;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Comparable from '../../../../../java/lang/Comparable';\nexport default function SweepLineEvent() {\n\tthis._label = null;\n\tthis._xValue = null;\n\tthis._eventType = null;\n\tthis._insertEvent = null;\n\tthis._deleteEventIndex = null;\n\tthis._obj = null;\n\tif (arguments.length === 2) {\n\t\tlet x = arguments[0], insertEvent = arguments[1];\n\t\tthis._eventType = SweepLineEvent.DELETE;\n\t\tthis._xValue = x;\n\t\tthis._insertEvent = insertEvent;\n\t} else if (arguments.length === 3) {\n\t\tlet label = arguments[0], x = arguments[1], obj = arguments[2];\n\t\tthis._eventType = SweepLineEvent.INSERT;\n\t\tthis._label = label;\n\t\tthis._xValue = x;\n\t\tthis._obj = obj;\n\t}\n}\nextend(SweepLineEvent.prototype, {\n\tisDelete: function () {\n\t\treturn this._eventType === SweepLineEvent.DELETE;\n\t},\n\tsetDeleteEventIndex: function (deleteEventIndex) {\n\t\tthis._deleteEventIndex = deleteEventIndex;\n\t},\n\tgetObject: function () {\n\t\treturn this._obj;\n\t},\n\tcompareTo: function (o) {\n\t\tvar pe = o;\n\t\tif (this._xValue < pe._xValue) return -1;\n\t\tif (this._xValue > pe._xValue) return 1;\n\t\tif (this._eventType < pe._eventType) return -1;\n\t\tif (this._eventType > pe._eventType) return 1;\n\t\treturn 0;\n\t},\n\tgetInsertEvent: function () {\n\t\treturn this._insertEvent;\n\t},\n\tisInsert: function () {\n\t\treturn this._eventType === SweepLineEvent.INSERT;\n\t},\n\tisSameLabel: function (ev) {\n\t\tif (this._label === null) return false;\n\t\treturn this._label === ev._label;\n\t},\n\tgetDeleteEventIndex: function () {\n\t\treturn this._deleteEventIndex;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn SweepLineEvent;\n\t}\n});\nSweepLineEvent.INSERT = 1;\nSweepLineEvent.DELETE = 2;\n","import extend from '../../../../../extend';\nexport default function EdgeSetIntersector() {}\nextend(EdgeSetIntersector.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeSetIntersector;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function SegmentIntersector() {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._includeProper = null;\n\tthis._recordIsolated = null;\n\tthis._isSelfIntersection = null;\n\tthis._numIntersections = 0;\n\tthis.numTests = 0;\n\tthis._bdyNodes = null;\n\tthis._isDone = false;\n\tthis._isDoneWhenProperInt = false;\n\tlet li = arguments[0], includeProper = arguments[1], recordIsolated = arguments[2];\n\tthis._li = li;\n\tthis._includeProper = includeProper;\n\tthis._recordIsolated = recordIsolated;\n}\nextend(SegmentIntersector.prototype, {\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (SegmentIntersector.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.getNumPoints() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function () {\n\t\treturn this._properIntersectionPoint;\n\t},\n\tsetIsDoneIfProperInt: function (isDoneWhenProperInt) {\n\t\tthis._isDoneWhenProperInt = isDoneWhenProperInt;\n\t},\n\thasProperInteriorIntersection: function () {\n\t\treturn this._hasProperInterior;\n\t},\n\tisBoundaryPointInternal: function (li, bdyNodes) {\n\t\tfor (var i = bdyNodes.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tvar pt = node.getCoordinate();\n\t\t\tif (li.isIntersection(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\thasProperIntersection: function () {\n\t\treturn this._hasProper;\n\t},\n\thasIntersection: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn this._isDone;\n\t},\n\tisBoundaryPoint: function (li, bdyNodes) {\n\t\tif (bdyNodes === null) return false;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[0])) return true;\n\t\tif (this.isBoundaryPointInternal(li, bdyNodes[1])) return true;\n\t\treturn false;\n\t},\n\tsetBoundaryNodes: function (bdyNodes0, bdyNodes1) {\n\t\tthis._bdyNodes = new Array(2).fill(null);\n\t\tthis._bdyNodes[0] = bdyNodes0;\n\t\tthis._bdyNodes[1] = bdyNodes1;\n\t},\n\taddIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._recordIsolated) {\n\t\t\t\te0.setIsolated(false);\n\t\t\t\te1.setIsolated(false);\n\t\t\t}\n\t\t\tthis._numIntersections++;\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\tif (this._includeProper || !this._li.isProper()) {\n\t\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\t}\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis._properIntersectionPoint = this._li.getIntersection(0).copy();\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tif (this._isDoneWhenProperInt) {\n\t\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (!this.isBoundaryPoint(this._li, this._bdyNodes)) this._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentIntersector;\n\t}\n});\nSegmentIntersector.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport MonotoneChain from './MonotoneChain';\nimport SweepLineEvent from './SweepLineEvent';\nimport EdgeSetIntersector from './EdgeSetIntersector';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport inherits from '../../../../../inherits';\nimport List from '../../../../../java/util/List';\nexport default function SimpleMCSweepLineIntersector() {\n\tEdgeSetIntersector.apply(this);\n\tthis.events = new ArrayList();\n\tthis.nOverlaps = null;\n}\ninherits(SimpleMCSweepLineIntersector, EdgeSetIntersector);\nextend(SimpleMCSweepLineIntersector.prototype, {\n\tprepareEvents: function () {\n\t\tCollections.sort(this.events);\n\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\tvar ev = this.events.get(i);\n\t\t\tif (ev.isDelete()) {\n\t\t\t\tev.getInsertEvent().setDeleteEventIndex(i);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeIntersections: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet si = arguments[0];\n\t\t\tthis.nOverlaps = 0;\n\t\t\tthis.prepareEvents();\n\t\t\tfor (var i = 0; i < this.events.size(); i++) {\n\t\t\t\tvar ev = this.events.get(i);\n\t\t\t\tif (ev.isInsert()) {\n\t\t\t\t\tthis.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n\t\t\t\t}\n\t\t\t\tif (si.isDone()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof SegmentIntersector && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet edges0 = arguments[0], edges1 = arguments[1], si = arguments[2];\n\t\t\t\tthis.addEdges(edges0, edges0);\n\t\t\t\tthis.addEdges(edges1, edges1);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t} else if (typeof arguments[2] === \"boolean\" && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector)) {\n\t\t\t\tlet edges = arguments[0], si = arguments[1], testAllSegments = arguments[2];\n\t\t\t\tif (testAllSegments) this.addEdges(edges, null); else this.addEdges(edges);\n\t\t\t\tthis.computeIntersections(si);\n\t\t\t}\n\t\t}\n\t},\n\taddEdge: function (edge, edgeSet) {\n\t\tvar mce = edge.getMonotoneChainEdge();\n\t\tvar startIndex = mce.getStartIndexes();\n\t\tfor (var i = 0; i < startIndex.length - 1; i++) {\n\t\t\tvar mc = new MonotoneChain(mce, i);\n\t\t\tvar insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n\t\t\tthis.events.add(insertEvent);\n\t\t\tthis.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n\t\t}\n\t},\n\tprocessOverlaps: function (start, end, ev0, si) {\n\t\tvar mc0 = ev0.getObject();\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar ev1 = this.events.get(i);\n\t\t\tif (ev1.isInsert()) {\n\t\t\t\tvar mc1 = ev1.getObject();\n\t\t\t\tif (!ev0.isSameLabel(ev1)) {\n\t\t\t\t\tmc0.computeIntersections(mc1, si);\n\t\t\t\t\tthis.nOverlaps++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\taddEdges: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edge);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edges = arguments[0], edgeSet = arguments[1];\n\t\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar edge = i.next();\n\t\t\t\tthis.addEdge(edge, edgeSet);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SimpleMCSweepLineIntersector;\n\t}\n});\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nexport default function TopologyLocation() {\n\tthis.location = null;\n\tif (arguments.length === 1) {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.init(location.length);\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet on = arguments[0];\n\t\t\tthis.init(1);\n\t\t\tthis.location[Position.ON] = on;\n\t\t} else if (arguments[0] instanceof TopologyLocation) {\n\t\t\tlet gl = arguments[0];\n\t\t\tthis.init(gl.location.length);\n\t\t\tif (gl !== null) {\n\t\t\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\t\t\tthis.location[i] = gl.location[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if (arguments.length === 3) {\n\t\tlet on = arguments[0], left = arguments[1], right = arguments[2];\n\t\tthis.init(3);\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t}\n}\nextend(TopologyLocation.prototype, {\n\tsetAllLocations: function (locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tthis.location[i] = locValue;\n\t\t}\n\t},\n\tisNull: function () {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== Location.NONE) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tsetAllLocationsIfNull: function (locValue) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) this.location[i] = locValue;\n\t\t}\n\t},\n\tisLine: function () {\n\t\treturn this.location.length === 1;\n\t},\n\tmerge: function (gl) {\n\t\tif (gl.location.length > this.location.length) {\n\t\t\tvar newLoc = new Array(3).fill(null);\n\t\t\tnewLoc[Position.ON] = this.location[Position.ON];\n\t\t\tnewLoc[Position.LEFT] = Location.NONE;\n\t\t\tnewLoc[Position.RIGHT] = Location.NONE;\n\t\t\tthis.location = newLoc;\n\t\t}\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE && i < gl.location.length) this.location[i] = gl.location[i];\n\t\t}\n\t},\n\tgetLocations: function () {\n\t\treturn this.location;\n\t},\n\tflip: function () {\n\t\tif (this.location.length <= 1) return null;\n\t\tvar temp = this.location[Position.LEFT];\n\t\tthis.location[Position.LEFT] = this.location[Position.RIGHT];\n\t\tthis.location[Position.RIGHT] = temp;\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.LEFT]));\n\t\tbuf.append(Location.toLocationSymbol(this.location[Position.ON]));\n\t\tif (this.location.length > 1) buf.append(Location.toLocationSymbol(this.location[Position.RIGHT]));\n\t\treturn buf.toString();\n\t},\n\tsetLocations: function (on, left, right) {\n\t\tthis.location[Position.ON] = on;\n\t\tthis.location[Position.LEFT] = left;\n\t\tthis.location[Position.RIGHT] = right;\n\t},\n\tget: function (posIndex) {\n\t\tif (posIndex < this.location.length) return this.location[posIndex];\n\t\treturn Location.NONE;\n\t},\n\tisArea: function () {\n\t\treturn this.location.length > 1;\n\t},\n\tisAnyNull: function () {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] === Location.NONE) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tsetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet locValue = arguments[0];\n\t\t\tthis.setLocation(Position.ON, locValue);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet locIndex = arguments[0], locValue = arguments[1];\n\t\t\tthis.location[locIndex] = locValue;\n\t\t}\n\t},\n\tinit: function (size) {\n\t\tthis.location = new Array(size).fill(null);\n\t\tthis.setAllLocations(Location.NONE);\n\t},\n\tisEqualOnSide: function (le, locIndex) {\n\t\treturn this.location[locIndex] === le.location[locIndex];\n\t},\n\tallPositionsEqual: function (loc) {\n\t\tfor (var i = 0; i < this.location.length; i++) {\n\t\t\tif (this.location[i] !== loc) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyLocation;\n\t}\n});\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nimport TopologyLocation from './TopologyLocation';\nexport default function Label() {\n\tthis.elt = new Array(2).fill(null);\n\tif (arguments.length === 1) {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet onLoc = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(onLoc);\n\t\t\tthis.elt[1] = new TopologyLocation(onLoc);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tthis.elt[0] = new TopologyLocation(lbl.elt[0]);\n\t\t\tthis.elt[1] = new TopologyLocation(lbl.elt[1]);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE);\n\t\tthis.elt[geomIndex].setLocation(onLoc);\n\t} else if (arguments.length === 3) {\n\t\tlet onLoc = arguments[0], leftLoc = arguments[1], rightLoc = arguments[2];\n\t\tthis.elt[0] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t\tthis.elt[1] = new TopologyLocation(onLoc, leftLoc, rightLoc);\n\t} else if (arguments.length === 4) {\n\t\tlet geomIndex = arguments[0], onLoc = arguments[1], leftLoc = arguments[2], rightLoc = arguments[3];\n\t\tthis.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n\t\tthis.elt[geomIndex].setLocations(onLoc, leftLoc, rightLoc);\n\t}\n}\nextend(Label.prototype, {\n\tgetGeometryCount: function () {\n\t\tvar count = 0;\n\t\tif (!this.elt[0].isNull()) count++;\n\t\tif (!this.elt[1].isNull()) count++;\n\t\treturn count;\n\t},\n\tsetAllLocations: function (geomIndex, location) {\n\t\tthis.elt[geomIndex].setAllLocations(location);\n\t},\n\tisNull: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isNull();\n\t},\n\tsetAllLocationsIfNull: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet location = arguments[0];\n\t\t\tthis.setAllLocationsIfNull(0, location);\n\t\t\tthis.setAllLocationsIfNull(1, location);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setAllLocationsIfNull(location);\n\t\t}\n\t},\n\tisLine: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isLine();\n\t},\n\tmerge: function (lbl) {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (this.elt[i] === null && lbl.elt[i] !== null) {\n\t\t\t\tthis.elt[i] = new TopologyLocation(lbl.elt[i]);\n\t\t\t} else {\n\t\t\t\tthis.elt[i].merge(lbl.elt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tflip: function () {\n\t\tthis.elt[0].flip();\n\t\tthis.elt[1].flip();\n\t},\n\tgetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].get(Position.ON);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this.elt[geomIndex].get(posIndex);\n\t\t}\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tif (this.elt[0] !== null) {\n\t\t\tbuf.append(\"A:\");\n\t\t\tbuf.append(this.elt[0].toString());\n\t\t}\n\t\tif (this.elt[1] !== null) {\n\t\t\tbuf.append(\" B:\");\n\t\t\tbuf.append(this.elt[1].toString());\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tisArea: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this.elt[0].isArea() || this.elt[1].isArea();\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this.elt[geomIndex].isArea();\n\t\t}\n\t},\n\tisAnyNull: function (geomIndex) {\n\t\treturn this.elt[geomIndex].isAnyNull();\n\t},\n\tsetLocation: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], location = arguments[1];\n\t\t\tthis.elt[geomIndex].setLocation(Position.ON, location);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tthis.elt[geomIndex].setLocation(posIndex, location);\n\t\t}\n\t},\n\tisEqualOnSide: function (lbl, side) {\n\t\treturn this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side);\n\t},\n\tallPositionsEqual: function (geomIndex, loc) {\n\t\treturn this.elt[geomIndex].allPositionsEqual(loc);\n\t},\n\ttoLine: function (geomIndex) {\n\t\tif (this.elt[geomIndex].isArea()) this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Label;\n\t}\n});\nLabel.toLineLabel = function (label) {\n\tvar lineLabel = new Label(Location.NONE);\n\tfor (var i = 0; i < 2; i++) {\n\t\tlineLabel.setLocation(i, label.getLocation(i));\n\t}\n\treturn lineLabel;\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function EdgeIntersection() {\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis.dist = null;\n\tlet coord = arguments[0], segmentIndex = arguments[1], dist = arguments[2];\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis.dist = dist;\n}\nextend(EdgeIntersection.prototype, {\n\tgetSegmentIndex: function () {\n\t\treturn this.segmentIndex;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.coord;\n\t},\n\tprint: function (out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t\tout.println(\" dist = \" + this.dist);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\treturn this.compare(other.segmentIndex, other.dist);\n\t},\n\tisEndPoint: function (maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && this.dist === 0.0) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\ttoString: function () {\n\t\treturn this.coord + \" seg # = \" + this.segmentIndex + \" dist = \" + this.dist;\n\t},\n\tgetDistance: function () {\n\t\treturn this.dist;\n\t},\n\tcompare: function (segmentIndex, dist) {\n\t\tif (this.segmentIndex < segmentIndex) return -1;\n\t\tif (this.segmentIndex > segmentIndex) return 1;\n\t\tif (this.dist < dist) return -1;\n\t\tif (this.dist > dist) return 1;\n\t\treturn 0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeIntersection;\n\t}\n});\n","import EdgeIntersection from './EdgeIntersection';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport Edge from './Edge';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeIntersectionList() {\n\tthis._nodeMap = new TreeMap();\n\tthis.edge = null;\n\tlet edge = arguments[0];\n\tthis.edge = edge;\n}\nextend(EdgeIntersectionList.prototype, {\n\tprint: function (out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function (edgeList) {\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\taddEndpoints: function () {\n\t\tvar maxSegIndex = this.edge.pts.length - 1;\n\t\tthis.add(this.edge.pts[0], 0, 0.0);\n\t\tthis.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n\t},\n\tcreateSplitEdge: function (ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n\t\tvar useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this.edge.pts[i];\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = ei1.coord;\n\t\treturn new Edge(pts, new Label(this.edge._label));\n\t},\n\tadd: function (intPt, segmentIndex, dist) {\n\t\tvar eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tisIntersection: function (pt) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tif (ei.coord.equals(pt)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeIntersectionList;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Integer from '../../../../../java/lang/Integer';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Quadrant from '../Quadrant';\nexport default function MonotoneChainIndexer() {}\nextend(MonotoneChainIndexer.prototype, {\n\tgetChainStartIndices: function (pts) {\n\t\tvar start = 0;\n\t\tvar startIndexList = new ArrayList();\n\t\tstartIndexList.add(new Integer(start));\n\t\tdo {\n\t\t\tvar last = this.findChainEnd(pts, start);\n\t\t\tstartIndexList.add(new Integer(last));\n\t\t\tstart = last;\n\t\t} while (start < pts.length - 1);\n\t\tvar startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n\t\treturn startIndex;\n\t},\n\tfindChainEnd: function (pts, start) {\n\t\tvar chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n\t\tvar last = start + 1;\n\t\twhile (last < pts.length) {\n\t\t\tvar quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n\t\t\tif (quad !== chainQuad) break;\n\t\t\tlast++;\n\t\t}\n\t\treturn last - 1;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainIndexer;\n\t}\n});\nMonotoneChainIndexer.toIntArray = function (list) {\n\tvar array = new Array(list.size()).fill(null);\n\tfor (var i = 0; i < array.length; i++) {\n\t\tarray[i] = list.get(i).intValue();\n\t}\n\treturn array;\n};\n","import extend from '../../../../../extend';\nimport MonotoneChainIndexer from './MonotoneChainIndexer';\nimport Envelope from '../../geom/Envelope';\nexport default function MonotoneChainEdge() {\n\tthis.e = null;\n\tthis.pts = null;\n\tthis.startIndex = null;\n\tlet e = arguments[0];\n\tthis.e = e;\n\tthis.pts = e.getCoordinates();\n\tvar mcb = new MonotoneChainIndexer();\n\tthis.startIndex = mcb.getChainStartIndices(this.pts);\n}\nextend(MonotoneChainEdge.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tgetMaxX: function (chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 > x2 ? x1 : x2;\n\t},\n\tgetMinX: function (chainIndex) {\n\t\tvar x1 = this.pts[this.startIndex[chainIndex]].x;\n\t\tvar x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n\t\treturn x1 < x2 ? x1 : x2;\n\t},\n\tcomputeIntersectsForChain: function () {\n\t\tif (arguments.length === 4) {\n\t\t\tlet chainIndex0 = arguments[0], mce = arguments[1], chainIndex1 = arguments[2], si = arguments[3];\n\t\t\tthis.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n\t\t} else if (arguments.length === 6) {\n\t\t\tlet start0 = arguments[0], end0 = arguments[1], mce = arguments[2], start1 = arguments[3], end1 = arguments[4], ei = arguments[5];\n\t\t\tif (end0 - start0 === 1 && end1 - start1 === 1) {\n\t\t\t\tei.addIntersections(this.e, start0, mce.e, start1);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (!this.overlaps(start0, end0, mce, start1, end1)) return null;\n\t\t\tvar mid0 = Math.trunc((start0 + end0) / 2);\n\t\t\tvar mid1 = Math.trunc((start1 + end1) / 2);\n\t\t\tif (start0 < mid0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(start0, mid0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(start0, mid0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t\tif (mid0 < end0) {\n\t\t\t\tif (start1 < mid1) this.computeIntersectsForChain(mid0, end0, mce, start1, mid1, ei);\n\t\t\t\tif (mid1 < end1) this.computeIntersectsForChain(mid0, end0, mce, mid1, end1, ei);\n\t\t\t}\n\t\t}\n\t},\n\toverlaps: function (start0, end0, mce, start1, end1) {\n\t\treturn Envelope.intersects(this.pts[start0], this.pts[end0], mce.pts[start1], mce.pts[end1]);\n\t},\n\tgetStartIndexes: function () {\n\t\treturn this.startIndex;\n\t},\n\tcomputeIntersects: function (mce, si) {\n\t\tfor (var i = 0; i < this.startIndex.length - 1; i++) {\n\t\t\tfor (var j = 0; j < mce.startIndex.length - 1; j++) {\n\t\t\t\tthis.computeIntersectsForChain(i, mce, j, si);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainEdge;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport extend from '../../../../extend';\nexport default function Depth() {\n\tthis._depth = Array(2).fill().map(() => Array(3));\n\tfor (var i = 0; i < 2; i++) {\n\t\tfor (var j = 0; j < 3; j++) {\n\t\t\tthis._depth[i][j] = Depth.NULL_VALUE;\n\t\t}\n\t}\n}\nextend(Depth.prototype, {\n\tgetDepth: function (geomIndex, posIndex) {\n\t\treturn this._depth[geomIndex][posIndex];\n\t},\n\tsetDepth: function (geomIndex, posIndex, depthValue) {\n\t\tthis._depth[geomIndex][posIndex] = depthValue;\n\t},\n\tisNull: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 0; j < 3; j++) {\n\t\t\t\t\tif (this._depth[i][j] !== Depth.NULL_VALUE) return false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomIndex = arguments[0];\n\t\t\treturn this._depth[geomIndex][1] === Depth.NULL_VALUE;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1];\n\t\t\treturn this._depth[geomIndex][posIndex] === Depth.NULL_VALUE;\n\t\t}\n\t},\n\tnormalize: function () {\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!this.isNull(i)) {\n\t\t\t\tvar minDepth = this._depth[i][1];\n\t\t\t\tif (this._depth[i][2] < minDepth) minDepth = this._depth[i][2];\n\t\t\t\tif (minDepth < 0) minDepth = 0;\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar newValue = 0;\n\t\t\t\t\tif (this._depth[i][j] > minDepth) newValue = 1;\n\t\t\t\t\tthis._depth[i][j] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDelta: function (geomIndex) {\n\t\treturn this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT];\n\t},\n\tgetLocation: function (geomIndex, posIndex) {\n\t\tif (this._depth[geomIndex][posIndex] <= 0) return Location.EXTERIOR;\n\t\treturn Location.INTERIOR;\n\t},\n\ttoString: function () {\n\t\treturn \"A: \" + this._depth[0][1] + \",\" + this._depth[0][2] + \" B: \" + this._depth[1][1] + \",\" + this._depth[1][2];\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet lbl = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tfor (var j = 1; j < 3; j++) {\n\t\t\t\t\tvar loc = lbl.getLocation(i, j);\n\t\t\t\t\tif (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n\t\t\t\t\t\tif (this.isNull(i, j)) {\n\t\t\t\t\t\t\tthis._depth[i][j] = Depth.depthAtLocation(loc);\n\t\t\t\t\t\t} else this._depth[i][j] += Depth.depthAtLocation(loc);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geomIndex = arguments[0], posIndex = arguments[1], location = arguments[2];\n\t\t\tif (location === Location.INTERIOR) this._depth[geomIndex][posIndex]++;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Depth;\n\t}\n});\nDepth.depthAtLocation = function (location) {\n\tif (location === Location.EXTERIOR) return 0;\n\tif (location === Location.INTERIOR) return 1;\n\treturn Depth.NULL_VALUE;\n};\nDepth.NULL_VALUE = -1;\n","import extend from '../../../../extend';\nimport Assert from '../util/Assert';\nexport default function GraphComponent() {\n\tthis._label = null;\n\tthis._isInResult = false;\n\tthis._isCovered = false;\n\tthis._isCoveredSet = false;\n\tthis._isVisited = false;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet label = arguments[0];\n\t\tthis._label = label;\n\t}\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tsetInResult: function (isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tisCovered: function () {\n\t\treturn this._isCovered;\n\t},\n\tisCoveredSet: function () {\n\t\treturn this._isCoveredSet;\n\t},\n\tsetLabel: function (label) {\n\t\tthis._label = label;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tsetCovered: function (isCovered) {\n\t\tthis._isCovered = isCovered;\n\t\tthis._isCoveredSet = true;\n\t},\n\tupdateIM: function (im) {\n\t\tAssert.isTrue(this._label.getGeometryCount() >= 2, \"found partial label\");\n\t\tthis.computeIM(im);\n\t},\n\tisInResult: function () {\n\t\treturn this._isInResult;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GraphComponent;\n\t}\n});\n","import EdgeIntersectionList from './EdgeIntersectionList';\nimport IntersectionMatrix from '../geom/IntersectionMatrix';\nimport MonotoneChainEdge from './index/MonotoneChainEdge';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport Envelope from '../geom/Envelope';\nimport inherits from '../../../../inherits';\nimport StringBuilder from '../../../../java/lang/StringBuilder';\nimport Depth from './Depth';\nimport GraphComponent from './GraphComponent';\nexport default function Edge() {\n\tGraphComponent.apply(this);\n\tthis.pts = null;\n\tthis._env = null;\n\tthis.eiList = new EdgeIntersectionList(this);\n\tthis._name = null;\n\tthis._mce = null;\n\tthis._isIsolated = true;\n\tthis._depth = new Depth();\n\tthis._depthDelta = 0;\n\tif (arguments.length === 1) {\n\t\tlet pts = arguments[0];\n\t\tEdge.call(this, pts, null);\n\t} else if (arguments.length === 2) {\n\t\tlet pts = arguments[0], label = arguments[1];\n\t\tthis.pts = pts;\n\t\tthis._label = label;\n\t}\n}\ninherits(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tgetDepth: function () {\n\t\treturn this._depth;\n\t},\n\tgetCollapsedEdge: function () {\n\t\tvar newPts = new Array(2).fill(null);\n\t\tnewPts[0] = this.pts[0];\n\t\tnewPts[1] = this.pts[1];\n\t\tvar newe = new Edge(newPts, Label.toLineLabel(this._label));\n\t\treturn newe;\n\t},\n\tisIsolated: function () {\n\t\treturn this._isIsolated;\n\t},\n\tgetCoordinates: function () {\n\t\treturn this.pts;\n\t},\n\tsetIsolated: function (isIsolated) {\n\t\tthis._isIsolated = isIsolated;\n\t},\n\tsetName: function (name) {\n\t\tthis._name = name;\n\t},\n\tequals: function (o) {\n\t\tif (!(o instanceof Edge)) return false;\n\t\tvar e = o;\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tvar isEqualForward = true;\n\t\tvar isEqualReverse = true;\n\t\tvar iRev = this.pts.length;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\tisEqualForward = false;\n\t\t\t}\n\t\t\tif (!this.pts[i].equals2D(e.pts[-- iRev])) {\n\t\t\t\tisEqualReverse = false;\n\t\t\t}\n\t\t\tif (!isEqualForward && !isEqualReverse) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tgetCoordinate: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.pts.length > 0) return this.pts[0];\n\t\t\treturn null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this.pts[i];\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tout.print(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) out.print(\",\");\n\t\t\tout.print(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tout.print(\")  \" + this._label + \" \" + this._depthDelta);\n\t},\n\tcomputeIM: function (im) {\n\t\tEdge.updateIM(this._label, im);\n\t},\n\tisCollapsed: function () {\n\t\tif (!this._label.isArea()) return false;\n\t\tif (this.pts.length !== 3) return false;\n\t\tif (this.pts[0].equals(this.pts[2])) return true;\n\t\treturn false;\n\t},\n\tisClosed: function () {\n\t\treturn this.pts[0].equals(this.pts[this.pts.length - 1]);\n\t},\n\tgetMaximumSegmentIndex: function () {\n\t\treturn this.pts.length - 1;\n\t},\n\tgetDepthDelta: function () {\n\t\treturn this._depthDelta;\n\t},\n\tgetNumPoints: function () {\n\t\treturn this.pts.length;\n\t},\n\tprintReverse: function (out) {\n\t\tout.print(\"edge \" + this._name + \": \");\n\t\tfor (var i = this.pts.length - 1; i >= 0; i--) {\n\t\t\tout.print(this.pts[i] + \" \");\n\t\t}\n\t\tout.println(\"\");\n\t},\n\tgetMonotoneChainEdge: function () {\n\t\tif (this._mce === null) this._mce = new MonotoneChainEdge(this);\n\t\treturn this._mce;\n\t},\n\tgetEnvelope: function () {\n\t\tif (this._env === null) {\n\t\t\tthis._env = new Envelope();\n\t\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\t\tthis._env.expandToInclude(this.pts[i]);\n\t\t\t}\n\t\t}\n\t\treturn this._env;\n\t},\n\taddIntersection: function (li, segmentIndex, geomIndex, intIndex) {\n\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar dist = li.getEdgeDistance(geomIndex, intIndex);\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this.pts.length) {\n\t\t\tvar nextPt = this.pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t\tdist = 0.0;\n\t\t\t}\n\t\t}\n\t\tvar ei = this.eiList.add(intPt, normalizedSegmentIndex, dist);\n\t},\n\ttoString: function () {\n\t\tvar builder = new StringBuilder();\n\t\tbuilder.append(\"edge \" + this._name + \": \");\n\t\tbuilder.append(\"LINESTRING (\");\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (i > 0) builder.append(\",\");\n\t\t\tbuilder.append(this.pts[i].x + \" \" + this.pts[i].y);\n\t\t}\n\t\tbuilder.append(\")  \" + this._label + \" \" + this._depthDelta);\n\t\treturn builder.toString();\n\t},\n\tisPointwiseEqual: function (e) {\n\t\tif (this.pts.length !== e.pts.length) return false;\n\t\tfor (var i = 0; i < this.pts.length; i++) {\n\t\t\tif (!this.pts[i].equals2D(e.pts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tsetDepthDelta: function (depthDelta) {\n\t\tthis._depthDelta = depthDelta;\n\t},\n\tgetEdgeIntersectionList: function () {\n\t\treturn this.eiList;\n\t},\n\taddIntersections: function (li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Edge;\n\t}\n});\nEdge.updateIM = function () {\n\tif (arguments.length === 2 && (arguments[1] instanceof IntersectionMatrix && arguments[0] instanceof Label)) {\n\t\tlet label = arguments[0], im = arguments[1];\n\t\tim.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n\t\tif (label.isArea()) {\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n\t\t\tim.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n\t\t}\n\t} else return GraphComponent.prototype.updateIM.apply(this, arguments);\n};\n","import Location from '../geom/Location';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Node() {\n\tGraphComponent.apply(this);\n\tthis._coord = null;\n\tthis._edges = null;\n\tlet coord = arguments[0], edges = arguments[1];\n\tthis._coord = coord;\n\tthis._edges = edges;\n\tthis._label = new Label(0, Location.NONE);\n}\ninherits(Node, GraphComponent);\nextend(Node.prototype, {\n\tisIncidentEdgeInResult: function () {\n\t\tfor (var it = this.getEdges().getEdges().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getEdge().isInResult()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisIsolated: function () {\n\t\treturn this._label.getGeometryCount() === 1;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._coord;\n\t},\n\tprint: function (out) {\n\t\tout.println(\"node \" + this._coord + \" lbl: \" + this._label);\n\t},\n\tcomputeIM: function (im) {},\n\tcomputeMergedLocation: function (label2, eltIndex) {\n\t\tvar loc = Location.NONE;\n\t\tloc = this._label.getLocation(eltIndex);\n\t\tif (!label2.isNull(eltIndex)) {\n\t\t\tvar nLoc = label2.getLocation(eltIndex);\n\t\t\tif (loc !== Location.BOUNDARY) loc = nLoc;\n\t\t}\n\t\treturn loc;\n\t},\n\tsetLabel: function () {\n\t\tif (arguments.length === 2 && (Number.isInteger(arguments[1]) && Number.isInteger(arguments[0]))) {\n\t\t\tlet argIndex = arguments[0], onLocation = arguments[1];\n\t\t\tif (this._label === null) {\n\t\t\t\tthis._label = new Label(argIndex, onLocation);\n\t\t\t} else this._label.setLocation(argIndex, onLocation);\n\t\t} else return GraphComponent.prototype.setLabel.apply(this, arguments);\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tmergeLabel: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tthis.mergeLabel(n._label);\n\t\t} else if (arguments[0] instanceof Label) {\n\t\t\tlet label2 = arguments[0];\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar loc = this.computeMergedLocation(label2, i);\n\t\t\t\tvar thisLoc = this._label.getLocation(i);\n\t\t\t\tif (thisLoc === Location.NONE) this._label.setLocation(i, loc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function (e) {\n\t\tthis._edges.insert(e);\n\t\te.setNode(this);\n\t},\n\tsetLabelBoundary: function (argIndex) {\n\t\tif (this._label === null) return null;\n\t\tvar loc = Location.NONE;\n\t\tif (this._label !== null) loc = this._label.getLocation(argIndex);\n\t\tvar newLoc = null;\n\t\tswitch (loc) {\n\t\t\tcase Location.BOUNDARY:\n\t\t\t\tnewLoc = Location.INTERIOR;\n\t\t\t\tbreak;\n\t\t\tcase Location.INTERIOR:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tnewLoc = Location.BOUNDARY;\n\t\t\t\tbreak;\n\t\t}\n\t\tthis._label.setLocation(argIndex, newLoc);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\n","import Location from '../geom/Location';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function NodeMap() {\n\tthis.nodeMap = new TreeMap();\n\tthis.nodeFact = null;\n\tlet nodeFact = arguments[0];\n\tthis.nodeFact = nodeFact;\n}\nextend(NodeMap.prototype, {\n\tfind: function (coord) {\n\t\treturn this.nodeMap.get(coord);\n\t},\n\taddNode: function () {\n\t\tif (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\tvar node = this.nodeMap.get(coord);\n\t\t\tif (node === null) {\n\t\t\t\tnode = this.nodeFact.createNode(coord);\n\t\t\t\tthis.nodeMap.put(coord, node);\n\t\t\t}\n\t\t\treturn node;\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet n = arguments[0];\n\t\t\tvar node = this.nodeMap.get(n.getCoordinate());\n\t\t\tif (node === null) {\n\t\t\t\tthis.nodeMap.put(n.getCoordinate(), n);\n\t\t\t\treturn n;\n\t\t\t}\n\t\t\tnode.mergeLabel(n);\n\t\t\treturn node;\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar n = it.next();\n\t\t\tn.print(out);\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this.nodeMap.values().iterator();\n\t},\n\tvalues: function () {\n\t\treturn this.nodeMap.values();\n\t},\n\tgetBoundaryNodes: function (geomIndex) {\n\t\tvar bdyNodes = new ArrayList();\n\t\tfor (var i = this.iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) bdyNodes.add(node);\n\t\t}\n\t\treturn bdyNodes;\n\t},\n\tadd: function (e) {\n\t\tvar p = e.getCoordinate();\n\t\tvar n = this.addNode(p);\n\t\tn.add(e);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeMap;\n\t}\n});\n","import extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nexport default function EdgeEnd() {\n\tthis._edge = null;\n\tthis._label = null;\n\tthis._node = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._dx = null;\n\tthis._dy = null;\n\tthis._quadrant = null;\n\tif (arguments.length === 1) {\n\t\tlet edge = arguments[0];\n\t\tthis._edge = edge;\n\t} else if (arguments.length === 3) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\tEdgeEnd.call(this, edge, p0, p1, null);\n\t} else if (arguments.length === 4) {\n\t\tlet edge = arguments[0], p0 = arguments[1], p1 = arguments[2], label = arguments[3];\n\t\tEdgeEnd.call(this, edge);\n\t\tthis.init(p0, p1);\n\t\tthis._label = label;\n\t}\n}\nextend(EdgeEnd.prototype, {\n\tcompareDirection: function (e) {\n\t\tif (this._dx === e._dx && this._dy === e._dy) return 0;\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn Orientation.index(e._p0, e._p1, this._p1);\n\t},\n\tgetDy: function () {\n\t\treturn this._dy;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._p0;\n\t},\n\tsetNode: function (node) {\n\t\tthis._node = node;\n\t},\n\tprint: function (out) {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar e = obj;\n\t\treturn this.compareDirection(e);\n\t},\n\tgetDirectedCoordinate: function () {\n\t\treturn this._p1;\n\t},\n\tgetDx: function () {\n\t\treturn this._dx;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tgetEdge: function () {\n\t\treturn this._edge;\n\t},\n\tgetQuadrant: function () {\n\t\treturn this._quadrant;\n\t},\n\tgetNode: function () {\n\t\treturn this._node;\n\t},\n\ttoString: function () {\n\t\tvar angle = Math.atan2(this._dy, this._dx);\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\treturn \"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + angle + \"   \" + this._label;\n\t},\n\tcomputeLabel: function (boundaryNodeRule) {},\n\tinit: function (p0, p1) {\n\t\tthis._p0 = p0;\n\t\tthis._p1 = p1;\n\t\tthis._dx = p1.x - p0.x;\n\t\tthis._dy = p1.y - p0.y;\n\t\tthis._quadrant = Quadrant.quadrant(this._dx, this._dy);\n\t\tAssert.isTrue(!(this._dx === 0 && this._dy === 0), \"EdgeEnd with identical endpoints found\");\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEnd;\n\t}\n});\n","import Coordinate from './Coordinate';\nimport extend from '../../../../extend';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport inherits from '../../../../inherits';\nexport default function TopologyException() {\n\tthis.pt = null;\n\tif (arguments.length === 1) {\n\t\tlet msg = arguments[0];\n\t\tRuntimeException.call(this, msg);\n\t} else if (arguments.length === 2) {\n\t\tlet msg = arguments[0], pt = arguments[1];\n\t\tRuntimeException.call(this, TopologyException.msgWithCoord(msg, pt));\n\t\tthis.name = 'TopologyException';\n\t\tthis.pt = new Coordinate(pt);\n\t}\n}\ninherits(TopologyException, RuntimeException);\nextend(TopologyException.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyException;\n\t}\n});\nTopologyException.msgWithCoord = function (msg, pt) {\n\tif (pt !== null) return msg + \" [ \" + pt + \" ]\";\n\treturn msg;\n};\n","import Location from '../geom/Location';\nimport EdgeEnd from './EdgeEnd';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport Label from './Label';\nimport inherits from '../../../../inherits';\nexport default function DirectedEdge() {\n\tthis._isForward = null;\n\tthis._isInResult = false;\n\tthis._isVisited = false;\n\tthis._sym = null;\n\tthis._next = null;\n\tthis._nextMin = null;\n\tthis._edgeRing = null;\n\tthis._minEdgeRing = null;\n\tthis._depth = [0, -999, -999];\n\tlet edge = arguments[0], isForward = arguments[1];\n\tEdgeEnd.call(this, edge);\n\tthis._isForward = isForward;\n\tif (isForward) {\n\t\tthis.init(edge.getCoordinate(0), edge.getCoordinate(1));\n\t} else {\n\t\tvar n = edge.getNumPoints() - 1;\n\t\tthis.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n\t}\n\tthis.computeDirectedLabel();\n}\ninherits(DirectedEdge, EdgeEnd);\nextend(DirectedEdge.prototype, {\n\tgetNextMin: function () {\n\t\treturn this._nextMin;\n\t},\n\tgetDepth: function (position) {\n\t\treturn this._depth[position];\n\t},\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tcomputeDirectedLabel: function () {\n\t\tthis._label = new Label(this._edge.getLabel());\n\t\tif (!this._isForward) this._label.flip();\n\t},\n\tgetNext: function () {\n\t\treturn this._next;\n\t},\n\tsetDepth: function (position, depthVal) {\n\t\tif (this._depth[position] !== -999) {\n\t\t\tif (this._depth[position] !== depthVal) throw new TopologyException(\"assigned depths do not match\", this.getCoordinate());\n\t\t}\n\t\tthis._depth[position] = depthVal;\n\t},\n\tisInteriorAreaEdge: function () {\n\t\tvar isInteriorAreaEdge = true;\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tif (!(this._label.isArea(i) && this._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n\t\t\t\tisInteriorAreaEdge = false;\n\t\t\t}\n\t\t}\n\t\treturn isInteriorAreaEdge;\n\t},\n\tsetNextMin: function (nextMin) {\n\t\tthis._nextMin = nextMin;\n\t},\n\tprint: function (out) {\n\t\tEdgeEnd.prototype.print.call(this, out);\n\t\tout.print(\" \" + this._depth[Position.LEFT] + \"/\" + this._depth[Position.RIGHT]);\n\t\tout.print(\" (\" + this.getDepthDelta() + \")\");\n\t\tif (this._isInResult) out.print(\" inResult\");\n\t},\n\tsetMinEdgeRing: function (minEdgeRing) {\n\t\tthis._minEdgeRing = minEdgeRing;\n\t},\n\tisLineEdge: function () {\n\t\tvar isLine = this._label.isLine(0) || this._label.isLine(1);\n\t\tvar isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n\t\tvar isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n\t\treturn isLine && isExteriorIfArea0 && isExteriorIfArea1;\n\t},\n\tsetEdgeRing: function (edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t},\n\tgetMinEdgeRing: function () {\n\t\treturn this._minEdgeRing;\n\t},\n\tgetDepthDelta: function () {\n\t\tvar depthDelta = this._edge.getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\treturn depthDelta;\n\t},\n\tsetInResult: function (isInResult) {\n\t\tthis._isInResult = isInResult;\n\t},\n\tgetSym: function () {\n\t\treturn this._sym;\n\t},\n\tisForward: function () {\n\t\treturn this._isForward;\n\t},\n\tgetEdge: function () {\n\t\treturn this._edge;\n\t},\n\tprintEdge: function (out) {\n\t\tthis.print(out);\n\t\tout.print(\" \");\n\t\tif (this._isForward) this._edge.print(out); else this._edge.printReverse(out);\n\t},\n\tsetSym: function (de) {\n\t\tthis._sym = de;\n\t},\n\tsetVisitedEdge: function (isVisited) {\n\t\tthis.setVisited(isVisited);\n\t\tthis._sym.setVisited(isVisited);\n\t},\n\tsetEdgeDepths: function (position, depth) {\n\t\tvar depthDelta = this.getEdge().getDepthDelta();\n\t\tif (!this._isForward) depthDelta = -depthDelta;\n\t\tvar directionFactor = 1;\n\t\tif (position === Position.LEFT) directionFactor = -1;\n\t\tvar oppositePos = Position.opposite(position);\n\t\tvar delta = depthDelta * directionFactor;\n\t\tvar oppositeDepth = depth + delta;\n\t\tthis.setDepth(position, depth);\n\t\tthis.setDepth(oppositePos, oppositeDepth);\n\t},\n\tgetEdgeRing: function () {\n\t\treturn this._edgeRing;\n\t},\n\tisInResult: function () {\n\t\treturn this._isInResult;\n\t},\n\tsetNext: function (next) {\n\t\tthis._next = next;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.depthFactor = function (currLocation, nextLocation) {\n\tif (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) return 1; else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) return -1;\n\treturn 0;\n};\n","import Node from './Node';\nimport extend from '../../../../extend';\nexport default function NodeFactory() {}\nextend(NodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new Node(coord, null);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeFactory;\n\t}\n});\n","import Location from '../geom/Location';\nimport Coordinate from '../geom/Coordinate';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport NodeMap from './NodeMap';\nimport Orientation from '../algorithm/Orientation';\nimport DirectedEdge from './DirectedEdge';\nimport System from '../../../../java/lang/System';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport NodeFactory from './NodeFactory';\nexport default function PlanarGraph() {\n\tthis._edges = new ArrayList();\n\tthis._nodes = null;\n\tthis._edgeEndList = new ArrayList();\n\tif (arguments.length === 0) {\n\t\tthis._nodes = new NodeMap(new NodeFactory());\n\t} else if (arguments.length === 1) {\n\t\tlet nodeFact = arguments[0];\n\t\tthis._nodes = new NodeMap(nodeFact);\n\t}\n}\nextend(PlanarGraph.prototype, {\n\tprintEdges: function (out) {\n\t\tout.println(\"Edges:\");\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tout.println(\"edge \" + i + \":\");\n\t\t\tvar e = this._edges.get(i);\n\t\t\te.print(out);\n\t\t\te.eiList.print(out);\n\t\t}\n\t},\n\tfind: function (coord) {\n\t\treturn this._nodes.find(coord);\n\t},\n\taddNode: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\treturn this._nodes.addNode(node);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet coord = arguments[0];\n\t\t\treturn this._nodes.addNode(coord);\n\t\t}\n\t},\n\tgetNodeIterator: function () {\n\t\treturn this._nodes.iterator();\n\t},\n\tlinkResultDirectedEdges: function () {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkResultDirectedEdges();\n\t\t}\n\t},\n\tdebugPrintln: function (o) {\n\t\tSystem.out.println(o);\n\t},\n\tisBoundaryNode: function (geomIndex, coord) {\n\t\tvar node = this._nodes.find(coord);\n\t\tif (node === null) return false;\n\t\tvar label = node.getLabel();\n\t\tif (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) return true;\n\t\treturn false;\n\t},\n\tlinkAllDirectedEdges: function () {\n\t\tfor (var nodeit = this._nodes.iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().linkAllDirectedEdges();\n\t\t}\n\t},\n\tmatchInSameDirection: function (p0, p1, ep0, ep1) {\n\t\tif (!p0.equals(ep0)) return false;\n\t\tif (Orientation.index(p0, p1, ep1) === Orientation.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) return true;\n\t\treturn false;\n\t},\n\tgetEdgeEnds: function () {\n\t\treturn this._edgeEndList;\n\t},\n\tdebugPrint: function (o) {\n\t\tSystem.out.print(o);\n\t},\n\tgetEdgeIterator: function () {\n\t\treturn this._edges.iterator();\n\t},\n\tfindEdgeInSameDirection: function (p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) return e;\n\t\t\tif (this.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinsertEdge: function (e) {\n\t\tthis._edges.add(e);\n\t},\n\tfindEdgeEnd: function (e) {\n\t\tfor (var i = this.getEdgeEnds().iterator(); i.hasNext(); ) {\n\t\t\tvar ee = i.next();\n\t\t\tif (ee.getEdge() === e) return ee;\n\t\t}\n\t\treturn null;\n\t},\n\taddEdges: function (edgesToAdd) {\n\t\tfor (var it = edgesToAdd.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tthis._edges.add(e);\n\t\t\tvar de1 = new DirectedEdge(e, true);\n\t\t\tvar de2 = new DirectedEdge(e, false);\n\t\t\tde1.setSym(de2);\n\t\t\tde2.setSym(de1);\n\t\t\tthis.add(de1);\n\t\t\tthis.add(de2);\n\t\t}\n\t},\n\tadd: function (e) {\n\t\tthis._nodes.add(e);\n\t\tthis._edgeEndList.add(e);\n\t},\n\tgetNodes: function () {\n\t\treturn this._nodes.values();\n\t},\n\tfindEdge: function (p0, p1) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tvar e = this._edges.get(i);\n\t\t\tvar eCoord = e.getCoordinates();\n\t\t\tif (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) return e;\n\t\t}\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PlanarGraph;\n\t}\n});\nPlanarGraph.linkResultDirectedEdges = function (nodes) {\n\tfor (var nodeit = nodes.iterator(); nodeit.hasNext(); ) {\n\t\tvar node = nodeit.next();\n\t\tnode.getEdges().linkResultDirectedEdges();\n\t}\n};\n","import PointLocator from '../algorithm/PointLocator';\nimport Location from '../geom/Location';\nimport LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport Position from './Position';\nimport Coordinate from '../geom/Coordinate';\nimport Point from '../geom/Point';\nimport Polygon from '../geom/Polygon';\nimport MultiPoint from '../geom/MultiPoint';\nimport SimpleMCSweepLineIntersector from './index/SimpleMCSweepLineIntersector';\nimport LinearRing from '../geom/LinearRing';\nimport BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport SegmentIntersector from './index/SegmentIntersector';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport Label from './Label';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport Polygonal from '../geom/Polygonal';\nimport IndexedPointInAreaLocator from '../algorithm/locate/IndexedPointInAreaLocator';\nimport Assert from '../util/Assert';\nimport Edge from './Edge';\nimport inherits from '../../../../inherits';\nimport MultiLineString from '../geom/MultiLineString';\nimport PlanarGraph from './PlanarGraph';\nexport default function GeometryGraph() {\n\tPlanarGraph.apply(this);\n\tthis._parentGeom = null;\n\tthis._lineEdgeMap = new HashMap();\n\tthis._boundaryNodeRule = null;\n\tthis._useBoundaryDeterminationRule = true;\n\tthis._argIndex = null;\n\tthis._boundaryNodes = null;\n\tthis._hasTooFewPoints = false;\n\tthis._invalidPoint = null;\n\tthis._areaPtLocator = null;\n\tthis._ptLocator = new PointLocator();\n\tif (arguments.length === 2) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1];\n\t\tGeometryGraph.call(this, argIndex, parentGeom, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet argIndex = arguments[0], parentGeom = arguments[1], boundaryNodeRule = arguments[2];\n\t\tthis._argIndex = argIndex;\n\t\tthis._parentGeom = parentGeom;\n\t\tthis._boundaryNodeRule = boundaryNodeRule;\n\t\tif (parentGeom !== null) {\n\t\t\tthis.add(parentGeom);\n\t\t}\n\t}\n}\ninherits(GeometryGraph, PlanarGraph);\nextend(GeometryGraph.prototype, {\n\tinsertBoundaryPoint: function (argIndex, coord) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tvar boundaryCount = 1;\n\t\tvar loc = Location.NONE;\n\t\tloc = lbl.getLocation(argIndex, Position.ON);\n\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\tvar newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n\t\tlbl.setLocation(argIndex, newLoc);\n\t},\n\tcomputeSelfNodes: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1];\n\t\t\treturn this.computeSelfNodes(li, computeRingSelfNodes, false);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet li = arguments[0], computeRingSelfNodes = arguments[1], isDoneIfProperInt = arguments[2];\n\t\t\tvar si = new SegmentIntersector(li, true, false);\n\t\t\tsi.setIsDoneIfProperInt(isDoneIfProperInt);\n\t\t\tvar esi = this.createEdgeSetIntersector();\n\t\t\tvar isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n\t\t\tvar computeAllSegments = computeRingSelfNodes || !isRings;\n\t\t\tesi.computeIntersections(this._edges, si, computeAllSegments);\n\t\t\tthis.addSelfIntersectionNodes(this._argIndex);\n\t\t\treturn si;\n\t\t}\n\t},\n\tcomputeSplitEdges: function (edgelist) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\te.eiList.addSplitEdges(edgelist);\n\t\t}\n\t},\n\tcomputeEdgeIntersections: function (g, li, includeProper) {\n\t\tvar si = new SegmentIntersector(li, includeProper, true);\n\t\tsi.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n\t\tvar esi = this.createEdgeSetIntersector();\n\t\tesi.computeIntersections(this._edges, g._edges, si);\n\t\treturn si;\n\t},\n\tgetGeometry: function () {\n\t\treturn this._parentGeom;\n\t},\n\tgetBoundaryNodeRule: function () {\n\t\treturn this._boundaryNodeRule;\n\t},\n\thasTooFewPoints: function () {\n\t\treturn this._hasTooFewPoints;\n\t},\n\taddPoint: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar coord = p.getCoordinate();\n\t\t\tthis.insertPoint(this._argIndex, coord, Location.INTERIOR);\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\tthis.insertPoint(this._argIndex, pt, Location.INTERIOR);\n\t\t}\n\t},\n\taddPolygon: function (p) {\n\t\tthis.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tthis.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\taddEdge: function (e) {\n\t\tthis.insertEdge(e);\n\t\tvar coord = e.getCoordinates();\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t\tthis.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n\t},\n\taddLineString: function (line) {\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (coord.length < 2) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n\t\tthis._lineEdgeMap.put(line, e);\n\t\tthis.insertEdge(e);\n\t\tAssert.isTrue(coord.length >= 2, \"found LineString with single point\");\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[0]);\n\t\tthis.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n\t},\n\tgetInvalidPoint: function () {\n\t\treturn this._invalidPoint;\n\t},\n\tgetBoundaryPoints: function () {\n\t\tvar coll = this.getBoundaryNodes();\n\t\tvar pts = new Array(coll.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = coll.iterator(); it.hasNext(); ) {\n\t\t\tvar node = it.next();\n\t\t\tpts[i++] = node.getCoordinate().copy();\n\t\t}\n\t\treturn pts;\n\t},\n\tgetBoundaryNodes: function () {\n\t\tif (this._boundaryNodes === null) this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex);\n\t\treturn this._boundaryNodes;\n\t},\n\taddSelfIntersectionNode: function (argIndex, coord, loc) {\n\t\tif (this.isBoundaryNode(argIndex, coord)) return null;\n\t\tif (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) this.insertBoundaryPoint(argIndex, coord); else this.insertPoint(argIndex, coord, loc);\n\t},\n\taddPolygonRing: function (lr, cwLeft, cwRight) {\n\t\tif (lr.isEmpty()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n\t\tif (coord.length < 4) {\n\t\t\tthis._hasTooFewPoints = true;\n\t\t\tthis._invalidPoint = coord[0];\n\t\t\treturn null;\n\t\t}\n\t\tvar left = cwLeft;\n\t\tvar right = cwRight;\n\t\tif (Orientation.isCCW(coord)) {\n\t\t\tleft = cwRight;\n\t\t\tright = cwLeft;\n\t\t}\n\t\tvar e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n\t\tthis._lineEdgeMap.put(lr, e);\n\t\tthis.insertEdge(e);\n\t\tthis.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n\t},\n\tinsertPoint: function (argIndex, coord, onLocation) {\n\t\tvar n = this._nodes.addNode(coord);\n\t\tvar lbl = n.getLabel();\n\t\tif (lbl === null) {\n\t\t\tn._label = new Label(argIndex, onLocation);\n\t\t} else lbl.setLocation(argIndex, onLocation);\n\t},\n\tcreateEdgeSetIntersector: function () {\n\t\treturn new SimpleMCSweepLineIntersector();\n\t},\n\taddSelfIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this._edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.eiList.iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tthis.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n\t\t\t}\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof MultiPolygon) this._useBoundaryDeterminationRule = false;\n\t\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t} else return PlanarGraph.prototype.add.apply(this, arguments);\n\t},\n\taddCollection: function (gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tlocate: function (pt) {\n\t\tif (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n\t\t\tif (this._areaPtLocator === null) {\n\t\t\t\tthis._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n\t\t\t}\n\t\t\treturn this._areaPtLocator.locate(pt);\n\t\t}\n\t\treturn this._ptLocator.locate(pt, this._parentGeom);\n\t},\n\tfindEdge: function () {\n\t\tif (arguments.length === 1 && arguments[0] instanceof LineString) {\n\t\t\tlet line = arguments[0];\n\t\t\treturn this._lineEdgeMap.get(line);\n\t\t} else return PlanarGraph.prototype.findEdge.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryGraph;\n\t}\n});\nGeometryGraph.determineBoundary = function (boundaryNodeRule, boundaryCount) {\n\treturn boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR;\n};\n","import extend from '../../../../../extend';\nexport default function KdNodeVisitor() {}\nextend(KdNodeVisitor.prototype, {\n\tvisit: function (node) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdNodeVisitor;\n\t}\n});\n","import Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nexport default function KdNode() {\n\tthis._p = null;\n\tthis._data = null;\n\tthis._left = null;\n\tthis._right = null;\n\tthis._count = null;\n\tif (arguments.length === 2) {\n\t\tlet p = arguments[0], data = arguments[1];\n\t\tthis._p = new Coordinate(p);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], data = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y);\n\t\tthis._left = null;\n\t\tthis._right = null;\n\t\tthis._count = 1;\n\t\tthis._data = data;\n\t}\n}\nextend(KdNode.prototype, {\n\tisRepeated: function () {\n\t\treturn this._count > 1;\n\t},\n\tgetRight: function () {\n\t\treturn this._right;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._p;\n\t},\n\tsetLeft: function (_left) {\n\t\tthis._left = _left;\n\t},\n\tgetX: function () {\n\t\treturn this._p.x;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tgetCount: function () {\n\t\treturn this._count;\n\t},\n\tgetLeft: function () {\n\t\treturn this._left;\n\t},\n\tgetY: function () {\n\t\treturn this._p.y;\n\t},\n\tincrement: function () {\n\t\tthis._count = this._count + 1;\n\t},\n\tsetRight: function (_right) {\n\t\tthis._right = _right;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdNode;\n\t}\n});\n","import CoordinateList from '../../geom/CoordinateList';\nimport hasInterface from '../../../../../hasInterface';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport KdNodeVisitor from './KdNodeVisitor';\nimport Envelope from '../../geom/Envelope';\nimport List from '../../../../../java/util/List';\nimport KdNode from './KdNode';\nexport default function KdTree() {\n\tthis._root = null;\n\tthis._numberOfNodes = null;\n\tthis._tolerance = null;\n\tif (arguments.length === 0) {\n\t\tKdTree.call(this, 0.0);\n\t} else if (arguments.length === 1) {\n\t\tlet tolerance = arguments[0];\n\t\tthis._tolerance = tolerance;\n\t}\n}\nextend(KdTree.prototype, {\n\tinsert: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\treturn this.insert(p, null);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], data = arguments[1];\n\t\t\tif (this._root === null) {\n\t\t\t\tthis._root = new KdNode(p, data);\n\t\t\t\treturn this._root;\n\t\t\t}\n\t\t\tif (this._tolerance > 0) {\n\t\t\t\tvar matchNode = this.findBestMatchNode(p);\n\t\t\t\tif (matchNode !== null) {\n\t\t\t\t\tmatchNode.increment();\n\t\t\t\t\treturn matchNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.insertExact(p, data);\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet queryEnv = arguments[0];\n\t\t\tvar result = new ArrayList();\n\t\t\tthis.query(queryEnv, result);\n\t\t\treturn result;\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof Envelope && hasInterface(arguments[1], List)) {\n\t\t\t\tlet queryEnv = arguments[0], result = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, {\n\t\t\t\t\tinterfaces_: function () {\n\t\t\t\t\t\treturn [KdNodeVisitor];\n\t\t\t\t\t},\n\t\t\t\t\tvisit: function (node) {\n\t\t\t\t\t\tresult.add(node);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else if (arguments[0] instanceof Envelope && hasInterface(arguments[1], KdNodeVisitor)) {\n\t\t\t\tlet queryEnv = arguments[0], visitor = arguments[1];\n\t\t\t\tthis.queryNode(this._root, queryEnv, true, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tqueryNode: function (currentNode, queryEnv, odd, visitor) {\n\t\tif (currentNode === null) return null;\n\t\tvar min = null;\n\t\tvar max = null;\n\t\tvar discriminant = null;\n\t\tif (odd) {\n\t\t\tmin = queryEnv.getMinX();\n\t\t\tmax = queryEnv.getMaxX();\n\t\t\tdiscriminant = currentNode.getX();\n\t\t} else {\n\t\t\tmin = queryEnv.getMinY();\n\t\t\tmax = queryEnv.getMaxY();\n\t\t\tdiscriminant = currentNode.getY();\n\t\t}\n\t\tvar searchLeft = min < discriminant;\n\t\tvar searchRight = discriminant <= max;\n\t\tif (searchLeft) {\n\t\t\tthis.queryNode(currentNode.getLeft(), queryEnv, !odd, visitor);\n\t\t}\n\t\tif (queryEnv.contains(currentNode.getCoordinate())) {\n\t\t\tvisitor.visit(currentNode);\n\t\t}\n\t\tif (searchRight) {\n\t\t\tthis.queryNode(currentNode.getRight(), queryEnv, !odd, visitor);\n\t\t}\n\t},\n\tfindBestMatchNode: function (p) {\n\t\tvar visitor = new BestMatchVisitor(p, this._tolerance);\n\t\tthis.query(visitor.queryEnvelope(), visitor);\n\t\treturn visitor.getNode();\n\t},\n\tisEmpty: function () {\n\t\tif (this._root === null) return true;\n\t\treturn false;\n\t},\n\tinsertExact: function (p, data) {\n\t\tvar currentNode = this._root;\n\t\tvar leafNode = this._root;\n\t\tvar isOddLevel = true;\n\t\tvar isLessThan = true;\n\t\twhile (currentNode !== null) {\n\t\t\tif (currentNode !== null) {\n\t\t\t\tvar isInTolerance = p.distance(currentNode.getCoordinate()) <= this._tolerance;\n\t\t\t\tif (isInTolerance) {\n\t\t\t\t\tcurrentNode.increment();\n\t\t\t\t\treturn currentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (isOddLevel) {\n\t\t\t\tisLessThan = p.x < currentNode.getX();\n\t\t\t} else {\n\t\t\t\tisLessThan = p.y < currentNode.getY();\n\t\t\t}\n\t\t\tleafNode = currentNode;\n\t\t\tif (isLessThan) {\n\t\t\t\tcurrentNode = currentNode.getLeft();\n\t\t\t} else {\n\t\t\t\tcurrentNode = currentNode.getRight();\n\t\t\t}\n\t\t\tisOddLevel = !isOddLevel;\n\t\t}\n\t\tthis._numberOfNodes = this._numberOfNodes + 1;\n\t\tvar node = new KdNode(p, data);\n\t\tif (isLessThan) {\n\t\t\tleafNode.setLeft(node);\n\t\t} else {\n\t\t\tleafNode.setRight(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn KdTree;\n\t}\n});\nKdTree.toCoordinates = function () {\n\tif (arguments.length === 1) {\n\t\tlet kdnodes = arguments[0];\n\t\treturn KdTree.toCoordinates(kdnodes, false);\n\t} else if (arguments.length === 2) {\n\t\tlet kdnodes = arguments[0], includeRepeated = arguments[1];\n\t\tvar coord = new CoordinateList();\n\t\tfor (var it = kdnodes.iterator(); it.hasNext(); ) {\n\t\t\tvar node = it.next();\n\t\t\tvar count = includeRepeated ? node.getCount() : 1;\n\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\tcoord.add(node.getCoordinate(), true);\n\t\t\t}\n\t\t}\n\t\treturn coord.toCoordinateArray();\n\t}\n};\nfunction BestMatchVisitor() {\n\tthis._tolerance = null;\n\tthis._matchNode = null;\n\tthis._matchDist = 0.0;\n\tthis._p = null;\n\tlet p = arguments[0], tolerance = arguments[1];\n\tthis._p = p;\n\tthis._tolerance = tolerance;\n}\nextend(BestMatchVisitor.prototype, {\n\tvisit: function (node) {\n\t\tvar dist = this._p.distance(node.getCoordinate());\n\t\tvar isInTolerance = dist <= this._tolerance;\n\t\tif (!isInTolerance) return null;\n\t\tvar update = false;\n\t\tif (this._matchNode === null || dist < this._matchDist || this._matchNode !== null && dist === this._matchDist && node.getCoordinate().compareTo(this._matchNode.getCoordinate()) < 1) update = true;\n\t\tif (update) {\n\t\t\tthis._matchNode = node;\n\t\t\tthis._matchDist = dist;\n\t\t}\n\t},\n\tqueryEnvelope: function () {\n\t\tvar queryEnv = new Envelope(this._p);\n\t\tqueryEnv.expandBy(this._tolerance);\n\t\treturn queryEnv;\n\t},\n\tgetNode: function () {\n\t\treturn this._matchNode;\n\t},\n\tinterfaces_: function () {\n\t\treturn [KdNodeVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn BestMatchVisitor;\n\t}\n});\nKdTree.BestMatchVisitor = BestMatchVisitor;\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function NodeBase() {\n\tthis._items = new ArrayList();\n\tthis._subnode = new Array(4).fill(null);\n}\nextend(NodeBase.prototype, {\n\thasChildren: function () {\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisPrunable: function () {\n\t\treturn !(this.hasChildren() || this.hasItems());\n\t},\n\taddAllItems: function (resultItems) {\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItems(resultItems);\n\t\t\t}\n\t\t}\n\t\treturn resultItems;\n\t},\n\tgetNodeCount: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + 1;\n\t},\n\tsize: function () {\n\t\tvar subSize = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tsubSize += this._subnode[i].size();\n\t\t\t}\n\t\t}\n\t\treturn subSize + this._items.size();\n\t},\n\taddAllItemsFromOverlapping: function (searchEnv, resultItems) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tresultItems.addAll(this._items);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].addAllItemsFromOverlapping(searchEnv, resultItems);\n\t\t\t}\n\t\t}\n\t},\n\tvisitItems: function (searchEnv, visitor) {\n\t\tfor (var i = this._items.iterator(); i.hasNext(); ) {\n\t\t\tvisitor.visitItem(i.next());\n\t\t}\n\t},\n\thasItems: function () {\n\t\treturn !this._items.isEmpty();\n\t},\n\tremove: function (itemEnv, item) {\n\t\tif (!this.isSearchMatch(itemEnv)) return false;\n\t\tvar found = false;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tfound = this._subnode[i].remove(itemEnv, item);\n\t\t\t\tif (found) {\n\t\t\t\t\tif (this._subnode[i].isPrunable()) this._subnode[i] = null;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (found) return found;\n\t\tfound = this._items.remove(item);\n\t\treturn found;\n\t},\n\tvisit: function (searchEnv, visitor) {\n\t\tif (!this.isSearchMatch(searchEnv)) return null;\n\t\tthis.visitItems(searchEnv, visitor);\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tthis._subnode[i].visit(searchEnv, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tdepth: function () {\n\t\tvar maxSubDepth = 0;\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\tvar sqd = this._subnode[i].depth();\n\t\t\t\tif (sqd > maxSubDepth) maxSubDepth = sqd;\n\t\t\t}\n\t\t}\n\t\treturn maxSubDepth + 1;\n\t},\n\tisEmpty: function () {\n\t\tvar isEmpty = true;\n\t\tif (!this._items.isEmpty()) isEmpty = false; else {\n\t\t\tfor (var i = 0; i < 4; i++) {\n\t\t\t\tif (this._subnode[i] !== null) {\n\t\t\t\t\tif (!this._subnode[i].isEmpty()) {\n\t\t\t\t\t\tisEmpty = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn isEmpty;\n\t},\n\tadd: function (item) {\n\t\tthis._items.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn NodeBase;\n\t}\n});\nNodeBase.getSubnodeIndex = function (env, centrex, centrey) {\n\tvar subnodeIndex = -1;\n\tif (env.getMinX() >= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 3;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 1;\n\t}\n\tif (env.getMaxX() <= centrex) {\n\t\tif (env.getMinY() >= centrey) subnodeIndex = 2;\n\t\tif (env.getMaxY() <= centrey) subnodeIndex = 0;\n\t}\n\treturn subnodeIndex;\n};\n","import Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport DoubleBits from './DoubleBits';\nimport Envelope from '../../geom/Envelope';\nexport default function Key() {\n\tthis._pt = new Coordinate();\n\tthis._level = 0;\n\tthis._env = null;\n\tlet itemEnv = arguments[0];\n\tthis.computeKey(itemEnv);\n}\nextend(Key.prototype, {\n\tgetLevel: function () {\n\t\treturn this._level;\n\t},\n\tcomputeKey: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet itemEnv = arguments[0];\n\t\t\tthis._level = Key.computeQuadLevel(itemEnv);\n\t\t\tthis._env = new Envelope();\n\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\twhile (!this._env.contains(itemEnv)) {\n\t\t\t\tthis._level += 1;\n\t\t\t\tthis.computeKey(this._level, itemEnv);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet level = arguments[0], itemEnv = arguments[1];\n\t\t\tvar quadSize = DoubleBits.powerOf2(level);\n\t\t\tthis._pt.x = Math.floor(itemEnv.getMinX() / quadSize) * quadSize;\n\t\t\tthis._pt.y = Math.floor(itemEnv.getMinY() / quadSize) * quadSize;\n\t\t\tthis._env.init(this._pt.x, this._pt.x + quadSize, this._pt.y, this._pt.y + quadSize);\n\t\t}\n\t},\n\tgetEnvelope: function () {\n\t\treturn this._env;\n\t},\n\tgetCentre: function () {\n\t\treturn new Coordinate((this._env.getMinX() + this._env.getMaxX()) / 2, (this._env.getMinY() + this._env.getMaxY()) / 2);\n\t},\n\tgetPoint: function () {\n\t\treturn this._pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Key;\n\t}\n});\nKey.computeQuadLevel = function (env) {\n\tvar dx = env.getWidth();\n\tvar dy = env.getHeight();\n\tvar dMax = dx > dy ? dx : dy;\n\tvar level = DoubleBits.exponent(dMax) + 1;\n\treturn level;\n};\n","import NodeBase from './NodeBase';\nimport extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport Key from './Key';\nexport default function Node() {\n\tNodeBase.apply(this);\n\tthis._env = null;\n\tthis._centrex = null;\n\tthis._centrey = null;\n\tthis._level = null;\n\tlet env = arguments[0], level = arguments[1];\n\tthis._env = env;\n\tthis._level = level;\n\tthis._centrex = (env.getMinX() + env.getMaxX()) / 2;\n\tthis._centrey = (env.getMinY() + env.getMaxY()) / 2;\n}\ninherits(Node, NodeBase);\nextend(Node.prototype, {\n\tfind: function (searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex === -1) return this;\n\t\tif (this._subnode[subnodeIndex] !== null) {\n\t\t\tvar node = this._subnode[subnodeIndex];\n\t\t\treturn node.find(searchEnv);\n\t\t}\n\t\treturn this;\n\t},\n\tisSearchMatch: function (searchEnv) {\n\t\tif (searchEnv === null) return false;\n\t\treturn this._env.intersects(searchEnv);\n\t},\n\tgetSubnode: function (index) {\n\t\tif (this._subnode[index] === null) {\n\t\t\tthis._subnode[index] = this.createSubnode(index);\n\t\t}\n\t\treturn this._subnode[index];\n\t},\n\tgetEnvelope: function () {\n\t\treturn this._env;\n\t},\n\tgetNode: function (searchEnv) {\n\t\tvar subnodeIndex = NodeBase.getSubnodeIndex(searchEnv, this._centrex, this._centrey);\n\t\tif (subnodeIndex !== -1) {\n\t\t\tvar node = this.getSubnode(subnodeIndex);\n\t\t\treturn node.getNode(searchEnv);\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t},\n\tcreateSubnode: function (index) {\n\t\tvar minx = 0.0;\n\t\tvar maxx = 0.0;\n\t\tvar miny = 0.0;\n\t\tvar maxy = 0.0;\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 1:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._env.getMinY();\n\t\t\t\tmaxy = this._centrey;\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tminx = this._env.getMinX();\n\t\t\t\tmaxx = this._centrex;\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t\tcase 3:\n\t\t\t\tminx = this._centrex;\n\t\t\t\tmaxx = this._env.getMaxX();\n\t\t\t\tminy = this._centrey;\n\t\t\t\tmaxy = this._env.getMaxY();\n\t\t\t\tbreak;\n\t\t}\n\t\tvar sqEnv = new Envelope(minx, maxx, miny, maxy);\n\t\tvar node = new Node(sqEnv, this._level - 1);\n\t\treturn node;\n\t},\n\tinsertNode: function (node) {\n\t\tAssert.isTrue(this._env === null || this._env.contains(node._env));\n\t\tvar index = NodeBase.getSubnodeIndex(node._env, this._centrex, this._centrey);\n\t\tif (node._level === this._level - 1) {\n\t\t\tthis._subnode[index] = node;\n\t\t} else {\n\t\t\tvar childNode = this.createSubnode(index);\n\t\t\tchildNode.insertNode(node);\n\t\t\tthis._subnode[index] = childNode;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.createNode = function (env) {\n\tvar key = new Key(env);\n\tvar node = new Node(key.getEnvelope(), key.getLevel());\n\treturn node;\n};\nNode.createExpanded = function (node, addEnv) {\n\tvar expandEnv = new Envelope(addEnv);\n\tif (node !== null) expandEnv.expandToInclude(node._env);\n\tvar largerNode = Node.createNode(expandEnv);\n\tif (node !== null) largerNode.insertNode(node);\n\treturn largerNode;\n};\n","import Coordinate from '../../geom/Coordinate';\nimport NodeBase from './NodeBase';\nimport Node from './Node';\nimport extend from '../../../../../extend';\nimport IntervalSize from './IntervalSize';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function Root() {\n\tNodeBase.apply(this);\n}\ninherits(Root, NodeBase);\nextend(Root.prototype, {\n\tinsert: function (itemEnv, item) {\n\t\tvar index = NodeBase.getSubnodeIndex(itemEnv, Root.origin.x, Root.origin.y);\n\t\tif (index === -1) {\n\t\t\tthis.add(item);\n\t\t\treturn null;\n\t\t}\n\t\tvar node = this._subnode[index];\n\t\tif (node === null || !node.getEnvelope().contains(itemEnv)) {\n\t\t\tvar largerNode = Node.createExpanded(node, itemEnv);\n\t\t\tthis._subnode[index] = largerNode;\n\t\t}\n\t\tthis.insertContained(this._subnode[index], itemEnv, item);\n\t},\n\tisSearchMatch: function (searchEnv) {\n\t\treturn true;\n\t},\n\tinsertContained: function (tree, itemEnv, item) {\n\t\tAssert.isTrue(tree.getEnvelope().contains(itemEnv));\n\t\tvar isZeroX = IntervalSize.isZeroWidth(itemEnv.getMinX(), itemEnv.getMaxX());\n\t\tvar isZeroY = IntervalSize.isZeroWidth(itemEnv.getMinY(), itemEnv.getMaxY());\n\t\tvar node = null;\n\t\tif (isZeroX || isZeroY) node = tree.find(itemEnv); else node = tree.getNode(itemEnv);\n\t\tnode.add(item);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Root;\n\t}\n});\nRoot.origin = new Coordinate(0.0, 0.0);\n","import extend from '../../../../extend';\nexport default function SpatialIndex() {}\nextend(SpatialIndex.prototype, {\n\tinsert: function (itemEnv, item) {},\n\tremove: function (itemEnv, item) {},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SpatialIndex;\n\t}\n});\n","import Root from './Root';\nimport SpatialIndex from '../SpatialIndex';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport ArrayListVisitor from '../ArrayListVisitor';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nexport default function Quadtree() {\n\tthis._root = null;\n\tthis._minExtent = 1.0;\n\tthis._root = new Root();\n}\nextend(Quadtree.prototype, {\n\tsize: function () {\n\t\tif (this._root !== null) return this._root.size();\n\t\treturn 0;\n\t},\n\tinsert: function (itemEnv, item) {\n\t\tthis.collectStats(itemEnv);\n\t\tvar insertEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\tthis._root.insert(insertEnv, item);\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\tvar visitor = new ArrayListVisitor();\n\t\t\tthis.query(searchEnv, visitor);\n\t\t\treturn visitor.getItems();\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tthis._root.visit(searchEnv, visitor);\n\t\t}\n\t},\n\tqueryAll: function () {\n\t\tvar foundItems = new ArrayList();\n\t\tthis._root.addAllItems(foundItems);\n\t\treturn foundItems;\n\t},\n\tremove: function (itemEnv, item) {\n\t\tvar posEnv = Quadtree.ensureExtent(itemEnv, this._minExtent);\n\t\treturn this._root.remove(posEnv, item);\n\t},\n\tcollectStats: function (itemEnv) {\n\t\tvar delX = itemEnv.getWidth();\n\t\tif (delX < this._minExtent && delX > 0.0) this._minExtent = delX;\n\t\tvar delY = itemEnv.getHeight();\n\t\tif (delY < this._minExtent && delY > 0.0) this._minExtent = delY;\n\t},\n\tdepth: function () {\n\t\tif (this._root !== null) return this._root.depth();\n\t\treturn 0;\n\t},\n\tisEmpty: function () {\n\t\tif (this._root === null) return true;\n\t\treturn this._root.isEmpty();\n\t},\n\tinterfaces_: function () {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn Quadtree;\n\t}\n});\nQuadtree.ensureExtent = function (itemEnv, minExtent) {\n\tvar minx = itemEnv.getMinX();\n\tvar maxx = itemEnv.getMaxX();\n\tvar miny = itemEnv.getMinY();\n\tvar maxy = itemEnv.getMaxY();\n\tif (minx !== maxx && miny !== maxy) return itemEnv;\n\tif (minx === maxx) {\n\t\tminx = minx - minExtent / 2.0;\n\t\tmaxx = minx + minExtent / 2.0;\n\t}\n\tif (miny === maxy) {\n\t\tminy = miny - minExtent / 2.0;\n\t\tmaxy = miny + minExtent / 2.0;\n\t}\n\treturn new Envelope(minx, maxx, miny, maxy);\n};\nQuadtree.serialVersionUID = -7461163625812743604;\n","import extend from '../../../../../extend';\nexport default function Boundable() {}\nextend(Boundable.prototype, {\n\tgetBounds: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Boundable;\n\t}\n});\n","import Boundable from './Boundable';\nimport extend from '../../../../../extend';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function ItemBoundable() {\n\tthis._bounds = null;\n\tthis._item = null;\n\tlet bounds = arguments[0], item = arguments[1];\n\tthis._bounds = bounds;\n\tthis._item = item;\n}\nextend(ItemBoundable.prototype, {\n\tgetItem: function () {\n\t\treturn this._item;\n\t},\n\tgetBounds: function () {\n\t\treturn this._bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn ItemBoundable;\n\t}\n});\n","import extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function PriorityQueue() {\n\tthis._size = null;\n\tthis._items = null;\n\tthis._size = 0;\n\tthis._items = new ArrayList();\n\tthis._items.add(null);\n}\nextend(PriorityQueue.prototype, {\n\tpoll: function () {\n\t\tif (this.isEmpty()) return null;\n\t\tvar minItem = this._items.get(1);\n\t\tthis._items.set(1, this._items.get(this._size));\n\t\tthis._size -= 1;\n\t\tthis.reorder(1);\n\t\treturn minItem;\n\t},\n\tsize: function () {\n\t\treturn this._size;\n\t},\n\treorder: function (hole) {\n\t\tvar child = null;\n\t\tvar tmp = this._items.get(hole);\n\t\tfor (; hole * 2 <= this._size; hole = child) {\n\t\t\tchild = hole * 2;\n\t\t\tif (child !== this._size && this._items.get(child + 1).compareTo(this._items.get(child)) < 0) child++;\n\t\t\tif (this._items.get(child).compareTo(tmp) < 0) this._items.set(hole, this._items.get(child)); else break;\n\t\t}\n\t\tthis._items.set(hole, tmp);\n\t},\n\tclear: function () {\n\t\tthis._size = 0;\n\t\tthis._items.clear();\n\t},\n\tisEmpty: function () {\n\t\treturn this._size === 0;\n\t},\n\tadd: function (x) {\n\t\tthis._items.add(null);\n\t\tthis._size += 1;\n\t\tvar hole = this._size;\n\t\tthis._items.set(0, x);\n\t\tfor (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n\t\t\tthis._items.set(hole, this._items.get(Math.trunc(hole / 2)));\n\t\t}\n\t\tthis._items.set(hole, x);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PriorityQueue;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Serializable from '../../../../../java/io/Serializable';\nexport default function BoundablePairDistanceComparator() {\n\tthis.normalOrder = null;\n\tlet normalOrder = arguments[0];\n\tthis.normalOrder = normalOrder;\n}\nextend(BoundablePairDistanceComparator.prototype, {\n\tcompare: function (p1, p2) {\n\t\tvar distance1 = p1.getDistance();\n\t\tvar distance2 = p2.getDistance();\n\t\tif (this.normalOrder) {\n\t\t\tif (distance1 > distance2) {\n\t\t\t\treturn 1;\n\t\t\t} else if (distance1 === distance2) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else {\n\t\t\tif (distance1 > distance2) {\n\t\t\t\treturn -1;\n\t\t\t} else if (distance1 === distance2) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\treturn 1;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn BoundablePairDistanceComparator;\n\t}\n});\n","import Boundable from './Boundable';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nexport default function AbstractNode() {\n\tthis._childBoundables = new ArrayList();\n\tthis._bounds = null;\n\tthis._level = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet level = arguments[0];\n\t\tthis._level = level;\n\t}\n}\nextend(AbstractNode.prototype, {\n\tgetLevel: function () {\n\t\treturn this._level;\n\t},\n\tsize: function () {\n\t\treturn this._childBoundables.size();\n\t},\n\tgetChildBoundables: function () {\n\t\treturn this._childBoundables;\n\t},\n\taddChildBoundable: function (childBoundable) {\n\t\tAssert.isTrue(this._bounds === null);\n\t\tthis._childBoundables.add(childBoundable);\n\t},\n\tisEmpty: function () {\n\t\treturn this._childBoundables.isEmpty();\n\t},\n\tgetBounds: function () {\n\t\tif (this._bounds === null) {\n\t\t\tthis._bounds = this.computeBounds();\n\t\t}\n\t\treturn this._bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Boundable, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn AbstractNode;\n\t}\n});\nAbstractNode.serialVersionUID = 6493722185909573708;\n","import IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport AbstractNode from './AbstractNode';\nimport extend from '../../../../../extend';\nimport Comparable from '../../../../../java/lang/Comparable';\nexport default function BoundablePair() {\n\tthis._boundable1 = null;\n\tthis._boundable2 = null;\n\tthis._distance = null;\n\tthis._itemDistance = null;\n\tlet boundable1 = arguments[0], boundable2 = arguments[1], itemDistance = arguments[2];\n\tthis._boundable1 = boundable1;\n\tthis._boundable2 = boundable2;\n\tthis._itemDistance = itemDistance;\n\tthis._distance = this.distance();\n}\nextend(BoundablePair.prototype, {\n\texpandToQueue: function (priQ, minDistance) {\n\t\tvar isComp1 = BoundablePair.isComposite(this._boundable1);\n\t\tvar isComp2 = BoundablePair.isComposite(this._boundable2);\n\t\tif (isComp1 && isComp2) {\n\t\t\tif (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n\t\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else if (isComp1) {\n\t\t\tthis.expand(this._boundable1, this._boundable2, priQ, minDistance);\n\t\t\treturn null;\n\t\t} else if (isComp2) {\n\t\t\tthis.expand(this._boundable2, this._boundable1, priQ, minDistance);\n\t\t\treturn null;\n\t\t}\n\t\tthrow new IllegalArgumentException(\"neither boundable is composite\");\n\t},\n\tisLeaves: function () {\n\t\treturn !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2));\n\t},\n\tcompareTo: function (o) {\n\t\tvar nd = o;\n\t\tif (this._distance < nd._distance) return -1;\n\t\tif (this._distance > nd._distance) return 1;\n\t\treturn 0;\n\t},\n\texpand: function (bndComposite, bndOther, priQ, minDistance) {\n\t\tvar children = bndComposite.getChildBoundables();\n\t\tfor (var i = children.iterator(); i.hasNext(); ) {\n\t\t\tvar child = i.next();\n\t\t\tvar bp = new BoundablePair(child, bndOther, this._itemDistance);\n\t\t\tif (bp.getDistance() < minDistance) {\n\t\t\t\tpriQ.add(bp);\n\t\t\t}\n\t\t}\n\t},\n\tgetBoundable: function (i) {\n\t\tif (i === 0) return this._boundable1;\n\t\treturn this._boundable2;\n\t},\n\tgetDistance: function () {\n\t\treturn this._distance;\n\t},\n\tdistance: function () {\n\t\tif (this.isLeaves()) {\n\t\t\treturn this._itemDistance.distance(this._boundable1, this._boundable2);\n\t\t}\n\t\treturn this._boundable1.getBounds().distance(this._boundable2.getBounds());\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn BoundablePair;\n\t}\n});\nBoundablePair.area = function (b) {\n\treturn b.getBounds().getArea();\n};\nBoundablePair.isComposite = function (item) {\n\treturn item instanceof AbstractNode;\n};\n","import ItemBoundable from './ItemBoundable';\nimport hasInterface from '../../../../../hasInterface';\nimport ItemVisitor from '../ItemVisitor';\nimport AbstractNode from './AbstractNode';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Assert from '../../util/Assert';\nimport List from '../../../../../java/util/List';\nexport default function AbstractSTRtree() {\n\tthis._root = null;\n\tthis._built = false;\n\tthis._itemBoundables = new ArrayList();\n\tthis._nodeCapacity = null;\n\tif (arguments.length === 0) {\n\t\tAbstractSTRtree.call(this, AbstractSTRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAssert.isTrue(nodeCapacity > 1, \"Node capacity must be greater than 1\");\n\t\tthis._nodeCapacity = nodeCapacity;\n\t}\n}\nextend(AbstractSTRtree.prototype, {\n\tqueryInternal: function () {\n\t\tif (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], visitor = arguments[2];\n\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tthis.queryInternal(searchBounds, childBoundable, visitor);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvisitor.visitItem(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], matches = arguments[2];\n\t\t\tvar childBoundables = node.getChildBoundables();\n\t\t\tfor (var i = 0; i < childBoundables.size(); i++) {\n\t\t\t\tvar childBoundable = childBoundables.get(i);\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tthis.queryInternal(searchBounds, childBoundable, matches);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tmatches.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetNodeCapacity: function () {\n\t\treturn this._nodeCapacity;\n\t},\n\tlastNode: function (nodes) {\n\t\treturn nodes.get(nodes.size() - 1);\n\t},\n\tsize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.size(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar size = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tsize += this.size(childBoundable);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tsize += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn size;\n\t\t}\n\t},\n\tremoveItem: function (node, item) {\n\t\tvar childToRemove = null;\n\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (childBoundable instanceof ItemBoundable) {\n\t\t\t\tif (childBoundable.getItem() === item) childToRemove = childBoundable;\n\t\t\t}\n\t\t}\n\t\tif (childToRemove !== null) {\n\t\t\tnode.getChildBoundables().remove(childToRemove);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\titemsTree: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis.build();\n\t\t\tvar valuesTree = this.itemsTree(this._root);\n\t\t\tif (valuesTree === null) return new ArrayList();\n\t\t\treturn valuesTree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar valuesTreeForNode = new ArrayList();\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar valuesTreeForChild = this.itemsTree(childBoundable);\n\t\t\t\t\tif (valuesTreeForChild !== null) valuesTreeForNode.add(valuesTreeForChild);\n\t\t\t\t} else if (childBoundable instanceof ItemBoundable) {\n\t\t\t\t\tvaluesTreeForNode.add(childBoundable.getItem());\n\t\t\t\t} else {\n\t\t\t\t\tAssert.shouldNeverReachHere();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (valuesTreeForNode.size() <= 0) return null;\n\t\t\treturn valuesTreeForNode;\n\t\t}\n\t},\n\tinsert: function (bounds, item) {\n\t\tAssert.isTrue(!this._built, \"Cannot insert items into an STR packed R-tree after it has been built.\");\n\t\tthis._itemBoundables.add(new ItemBoundable(bounds, item));\n\t},\n\tboundablesAtLevel: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet level = arguments[0];\n\t\t\tvar boundables = new ArrayList();\n\t\t\tthis.boundablesAtLevel(level, this._root, boundables);\n\t\t\treturn boundables;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet level = arguments[0], top = arguments[1], boundables = arguments[2];\n\t\t\tAssert.isTrue(level > -2);\n\t\t\tif (top.getLevel() === level) {\n\t\t\t\tboundables.add(top);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tfor (var i = top.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar boundable = i.next();\n\t\t\t\tif (boundable instanceof AbstractNode) {\n\t\t\t\t\tthis.boundablesAtLevel(level, boundable, boundables);\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(boundable instanceof ItemBoundable);\n\t\t\t\t\tif (level === -1) {\n\t\t\t\t\t\tboundables.add(boundable);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchBounds = arguments[0];\n\t\t\tthis.build();\n\t\t\tvar matches = new ArrayList();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn matches;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.queryInternal(searchBounds, this._root, matches);\n\t\t\t}\n\t\t\treturn matches;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], visitor = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\tthis.queryInternal(searchBounds, this._root, visitor);\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function () {\n\t\tif (this._built) return null;\n\t\tthis._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n\t\tthis._itemBoundables = null;\n\t\tthis._built = true;\n\t},\n\tgetRoot: function () {\n\t\tthis.build();\n\t\treturn this._root;\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet searchBounds = arguments[0], item = arguments[1];\n\t\t\tthis.build();\n\t\t\tif (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n\t\t\t\treturn this.remove(searchBounds, this._root, item);\n\t\t\t}\n\t\t\treturn false;\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet searchBounds = arguments[0], node = arguments[1], item = arguments[2];\n\t\t\tvar found = this.removeItem(node, item);\n\t\t\tif (found) return true;\n\t\t\tvar childToPrune = null;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (!this.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tfound = this.remove(searchBounds, childBoundable, item);\n\t\t\t\t\tif (found) {\n\t\t\t\t\t\tchildToPrune = childBoundable;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (childToPrune !== null) {\n\t\t\t\tif (childToPrune.getChildBoundables().isEmpty()) {\n\t\t\t\t\tnode.getChildBoundables().remove(childToPrune);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn found;\n\t\t}\n\t},\n\tcreateHigherLevels: function (boundablesOfALevel, level) {\n\t\tAssert.isTrue(!boundablesOfALevel.isEmpty());\n\t\tvar parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n\t\tif (parentBoundables.size() === 1) {\n\t\t\treturn parentBoundables.get(0);\n\t\t}\n\t\treturn this.createHigherLevels(parentBoundables, level + 1);\n\t},\n\tdepth: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tthis.build();\n\t\t\treturn this.depth(this._root);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar maxChildDepth = 0;\n\t\t\tfor (var i = node.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tif (childBoundable instanceof AbstractNode) {\n\t\t\t\t\tvar childDepth = this.depth(childBoundable);\n\t\t\t\t\tif (childDepth > maxChildDepth) maxChildDepth = childDepth;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn maxChildDepth + 1;\n\t\t}\n\t},\n\tcreateParentBoundables: function (childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar parentBoundables = new ArrayList();\n\t\tparentBoundables.add(this.createNode(newLevel));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, this.getComparator());\n\t\tfor (var i = sortedChildBoundables.iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (this.lastNode(parentBoundables).getChildBoundables().size() === this.getNodeCapacity()) {\n\t\t\t\tparentBoundables.add(this.createNode(newLevel));\n\t\t\t}\n\t\t\tthis.lastNode(parentBoundables).addChildBoundable(childBoundable);\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tisEmpty: function () {\n\t\tif (!this._built) return this._itemBoundables.isEmpty();\n\t\treturn this._root.isEmpty();\n\t},\n\tinterfaces_: function () {\n\t\treturn [Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn AbstractSTRtree;\n\t}\n});\nAbstractSTRtree.compareDoubles = function (a, b) {\n\treturn a > b ? 1 : a < b ? -1 : 0;\n};\nfunction IntersectsOp() {}\nAbstractSTRtree.IntersectsOp = IntersectsOp;\nAbstractSTRtree.serialVersionUID = -3886435814360241337;\nAbstractSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","import extend from '../../../../../extend';\nexport default function ItemDistance() {}\nextend(ItemDistance.prototype, {\n\tdistance: function (item1, item2) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ItemDistance;\n\t}\n});\n","import ItemBoundable from './ItemBoundable';\nimport PriorityQueue from '../../util/PriorityQueue';\nimport hasInterface from '../../../../../hasInterface';\nimport BoundablePairDistanceComparator from './BoundablePairDistanceComparator';\nimport SpatialIndex from '../SpatialIndex';\nimport AbstractNode from './AbstractNode';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport BoundablePair from './BoundablePair';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Serializable from '../../../../../java/io/Serializable';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport AbstractSTRtree from './AbstractSTRtree';\nimport ItemDistance from './ItemDistance';\nexport default function STRtree() {\n\tif (arguments.length === 0) {\n\t\tSTRtree.call(this, STRtree.DEFAULT_NODE_CAPACITY);\n\t} else if (arguments.length === 1) {\n\t\tlet nodeCapacity = arguments[0];\n\t\tAbstractSTRtree.call(this, nodeCapacity);\n\t}\n}\ninherits(STRtree, AbstractSTRtree);\nextend(STRtree.prototype, {\n\tcreateParentBoundablesFromVerticalSlices: function (verticalSlices, newLevel) {\n\t\tAssert.isTrue(verticalSlices.length > 0);\n\t\tvar parentBoundables = new ArrayList();\n\t\tfor (var i = 0; i < verticalSlices.length; i++) {\n\t\t\tparentBoundables.addAll(this.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n\t\t}\n\t\treturn parentBoundables;\n\t},\n\tcreateNode: function (level) {\n\t\treturn new STRtreeNode(level);\n\t},\n\tsize: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.size.call(this);\n\t\t} else return AbstractSTRtree.prototype.size.apply(this, arguments);\n\t},\n\tinsert: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\tif (itemEnv.isNull()) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tAbstractSTRtree.prototype.insert.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.insert.apply(this, arguments);\n\t},\n\tgetIntersectsOp: function () {\n\t\treturn STRtree.intersectsOp;\n\t},\n\tverticalSlices: function (childBoundables, sliceCount) {\n\t\tvar sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n\t\tvar slices = new Array(sliceCount).fill(null);\n\t\tvar i = childBoundables.iterator();\n\t\tfor (var j = 0; j < sliceCount; j++) {\n\t\t\tslices[j] = new ArrayList();\n\t\t\tvar boundablesAddedToSlice = 0;\n\t\t\twhile (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n\t\t\t\tvar childBoundable = i.next();\n\t\t\t\tslices[j].add(childBoundable);\n\t\t\t\tboundablesAddedToSlice++;\n\t\t\t}\n\t\t}\n\t\treturn slices;\n\t},\n\tquery: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet searchEnv = arguments[0];\n\t\t\treturn AbstractSTRtree.prototype.query.call(this, searchEnv);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet searchEnv = arguments[0], visitor = arguments[1];\n\t\t\tAbstractSTRtree.prototype.query.call(this, searchEnv, visitor);\n\t\t}\n\t},\n\tgetComparator: function () {\n\t\treturn STRtree.yComparator;\n\t},\n\tcreateParentBoundablesFromVerticalSlice: function (childBoundables, newLevel) {\n\t\treturn AbstractSTRtree.prototype.createParentBoundables.call(this, childBoundables, newLevel);\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Object && arguments[0] instanceof Envelope)) {\n\t\t\tlet itemEnv = arguments[0], item = arguments[1];\n\t\t\treturn AbstractSTRtree.prototype.remove.call(this, itemEnv, item);\n\t\t} else return AbstractSTRtree.prototype.remove.apply(this, arguments);\n\t},\n\tdepth: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn AbstractSTRtree.prototype.depth.call(this);\n\t\t} else return AbstractSTRtree.prototype.depth.apply(this, arguments);\n\t},\n\tcreateParentBoundables: function (childBoundables, newLevel) {\n\t\tAssert.isTrue(!childBoundables.isEmpty());\n\t\tvar minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n\t\tvar sortedChildBoundables = new ArrayList(childBoundables);\n\t\tCollections.sort(sortedChildBoundables, STRtree.xComparator);\n\t\tvar verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n\t\treturn this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel);\n\t},\n\tnearestNeighbour: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (hasInterface(arguments[0], ItemDistance)) {\n\t\t\t\tlet itemDist = arguments[0];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair) {\n\t\t\t\tlet initBndPair = arguments[0];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tif (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n\t\t\t\tlet tree = arguments[0], itemDist = arguments[1];\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp);\n\t\t\t} else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\") {\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar minPair = null;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) break;\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tdistanceLowerBound = currentDistance;\n\t\t\t\t\t\tminPair = bndPair;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()];\n\t\t\t} else if (arguments[0] instanceof BoundablePair && Number.isInteger(arguments[1])) {\n\t\t\t\tlet initBndPair = arguments[0], k = arguments[1];\n\t\t\t\treturn this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY, k);\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], ItemDistance) && (arguments[0] instanceof Envelope && arguments[1] instanceof Object)) {\n\t\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2];\n\t\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\t\treturn this.nearestNeighbour(bp)[0];\n\t\t\t} else if (Number.isInteger(arguments[2]) && (arguments[0] instanceof BoundablePair && typeof arguments[1] === \"number\")) {\n\t\t\t\tlet initBndPair = arguments[0], maxDistance = arguments[1], k = arguments[2];\n\t\t\t\tvar distanceLowerBound = maxDistance;\n\t\t\t\tvar priQ = new PriorityQueue();\n\t\t\t\tpriQ.add(initBndPair);\n\t\t\t\tvar kNearestNeighbors = new java.util.PriorityQueue<BoundablePair>(k, new BoundablePairDistanceComparator(false));\n\t\t\t\twhile (!priQ.isEmpty() && distanceLowerBound >= 0.0) {\n\t\t\t\t\tvar bndPair = priQ.poll();\n\t\t\t\t\tvar currentDistance = bndPair.getDistance();\n\t\t\t\t\tif (currentDistance >= distanceLowerBound) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tif (bndPair.isLeaves()) {\n\t\t\t\t\t\tif (kNearestNeighbors.size() < k) {\n\t\t\t\t\t\t\tkNearestNeighbors.add(bndPair);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (kNearestNeighbors.peek().getDistance() > currentDistance) {\n\t\t\t\t\t\t\t\tkNearestNeighbors.poll();\n\t\t\t\t\t\t\t\tkNearestNeighbors.add(bndPair);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdistanceLowerBound = kNearestNeighbors.peek().getDistance();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbndPair.expandToQueue(priQ, distanceLowerBound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn STRtree.getItems(kNearestNeighbors);\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet env = arguments[0], item = arguments[1], itemDist = arguments[2], k = arguments[3];\n\t\t\tvar bnd = new ItemBoundable(env, item);\n\t\t\tvar bp = new BoundablePair(this.getRoot(), bnd, itemDist);\n\t\t\treturn this.nearestNeighbour(bp, k);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [SpatialIndex, Serializable];\n\t},\n\tgetClass: function () {\n\t\treturn STRtree;\n\t}\n});\nSTRtree.centreX = function (e) {\n\treturn STRtree.avg(e.getMinX(), e.getMaxX());\n};\nSTRtree.avg = function (a, b) {\n\treturn (a + b) / 2;\n};\nSTRtree.getItems = function (kNearestNeighbors) {\n\tvar items = new Array(kNearestNeighbors.size()).fill(null);\n\tvar resultIterator = kNearestNeighbors.iterator();\n\tvar count = 0;\n\twhile (resultIterator.hasNext()) {\n\t\titems[count] = resultIterator.next().getBoundable(0).getItem();\n\t\tcount++;\n\t}\n\treturn items;\n};\nSTRtree.centreY = function (e) {\n\treturn STRtree.avg(e.getMinY(), e.getMaxY());\n};\nfunction STRtreeNode() {\n\tlet level = arguments[0];\n\tAbstractNode.call(this, level);\n}\ninherits(STRtreeNode, AbstractNode);\nextend(STRtreeNode.prototype, {\n\tcomputeBounds: function () {\n\t\tvar bounds = null;\n\t\tfor (var i = this.getChildBoundables().iterator(); i.hasNext(); ) {\n\t\t\tvar childBoundable = i.next();\n\t\t\tif (bounds === null) {\n\t\t\t\tbounds = new Envelope(childBoundable.getBounds());\n\t\t\t} else {\n\t\t\t\tbounds.expandToInclude(childBoundable.getBounds());\n\t\t\t}\n\t\t}\n\t\treturn bounds;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn STRtreeNode;\n\t}\n});\nSTRtree.STRtreeNode = STRtreeNode;\nSTRtree.serialVersionUID = 259274702368956900;\nSTRtree.xComparator = {\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tcompare: function (o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()));\n\t}\n};\nSTRtree.yComparator = {\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tcompare: function (o1, o2) {\n\t\treturn AbstractSTRtree.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()));\n\t}\n};\nSTRtree.intersectsOp = {\n\tinterfaces_: function () {\n\t\treturn [IntersectsOp];\n\t},\n\tintersects: function (aBounds, bBounds) {\n\t\treturn aBounds.intersects(bBounds);\n\t}\n};\nSTRtree.DEFAULT_NODE_CAPACITY = 10;\n","import Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nconst geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon']\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nexport default function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n}\n\nextend(GeoJSONParser.prototype, {\n  /**\n   * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n   *\n   * @param {}\n   *          A GeoJSON object.\n   * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n   * @private\n   */\n  read (json) {\n    let obj\n    if (typeof json === 'string')\n      obj = JSON.parse(json)\n    else\n      obj = json\n\n    const type = obj.type\n\n    if (!parse[type])\n      throw new Error('Unknown GeoJSON type: ' + obj.type)\n\n    if (geometryTypes.indexOf(type) !== -1)\n      return parse[type].call(this, obj.coordinates)\n    else if (type === 'GeometryCollection')\n      return parse[type].call(this, obj.geometries)\n\n    // feature or feature collection\n    return parse[type].call(this, obj)\n  },\n\n  /**\n   * Serialize a Geometry object into GeoJSON\n   *\n   * @param {Geometry}\n   *          geometry A Geometry or array of Geometries.\n   * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n   * @private\n   */\n  write (geometry) {\n    const type = geometry.getGeometryType()\n\n    if (!extract[type])\n      throw new Error('Geometry is not supported')\n\n    return extract[type].call(this, geometry)\n  }\n})\n\nconst parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    const feature = {}\n\n    for (let key in obj)\n      feature[key] = obj[key]\n\n    if (obj.geometry) {\n      const type = obj.geometry.type\n      if (!parse[type])\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      feature.geometry = this.read(obj.geometry)\n    }\n\n    if (obj.bbox)\n      feature.bbox = parse.bbox.call(this, obj.bbox)\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    const featureCollection = {}\n\n    if (obj.features) {\n      featureCollection.features = []\n\n      for (let i = 0; i < obj.features.length; ++i)\n        featureCollection.features.push(this.read(obj.features[i]))\n    }\n\n    if (obj.bbox)\n      featureCollection.bbox = this.parse.bbox.call(this, obj.bbox)\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    const coordinates = []\n    for (let i = 0; i < array.length; ++i) {\n      const sub = array[i]\n      coordinates.push(new Coordinate(sub[0], sub[1]))\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    const coordinate = new Coordinate(array[0], array[1])\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    const points = []\n    for (let i = 0; i < array.length; ++i)\n      points.push(parse.Point.call(this, array[i]))\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    const coordinates = parse.coordinates.call(this, array)\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    const lineStrings = []\n    for (let i = 0; i < array.length; ++i)\n      lineStrings.push(parse.LineString.call(this, array[i]))\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    const shellCoordinates = parse.coordinates.call(this, array[0])\n    const shell = this.geometryFactory.createLinearRing(shellCoordinates)\n    const holes = []\n    for (let i = 1; i < array.length; ++i) {\n      var hole = array[i]\n      var coordinates = parse.coordinates.call(this, hole)\n      var linearRing = this.geometryFactory.createLinearRing(coordinates)\n      holes.push(linearRing)\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    const polygons = []\n    for (let i = 0; i < array.length; ++i) {\n      const polygon = array[i]\n      polygons.push(parse.Polygon.call(this, polygon))\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    const geometries = []\n    for (let i = 0; i < array.length; ++i) {\n      const geometry = array[i]\n      geometries.push(this.read(geometry))\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n}\n\nconst extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    const array = extract.coordinate.call(this, point.getCoordinate())\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    const array = []\n    for (let i = 0; i < multipoint._geometries.length; ++i) {\n      const point = multipoint._geometries[i]\n      const geoJson = extract.Point.call(this, point)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    const array = []\n    const coordinates = linestring.getCoordinates()\n    for (let i = 0; i < coordinates.length; ++i) {\n      const coordinate = coordinates[i]\n      array.push(extract.coordinate.call(this, coordinate))\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    const array = []\n    for (let i = 0; i < multilinestring._geometries.length; ++i) {\n      const linestring = multilinestring._geometries[i]\n      const geoJson = extract.LineString.call(this, linestring)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    const array = []\n    const shellGeoJson = extract.LineString.call(this, polygon._shell)\n    array.push(shellGeoJson.coordinates)\n    for (let i = 0; i < polygon._holes.length; ++i) {\n      const hole = polygon._holes[i]\n      const holeGeoJson = extract.LineString.call(this, hole)\n      array.push(holeGeoJson.coordinates)\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    const array = []\n    for (let i = 0; i < multipolygon._geometries.length; ++i) {\n      const polygon = multipolygon._geometries[i]\n      const geoJson = extract.Polygon.call(this, polygon)\n      array.push(geoJson.coordinates)\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    const array = []\n    for (let i = 0; i < collection._geometries.length; ++i) {\n      const geometry = collection._geometries[i]\n      const type = geometry.getGeometryType()\n      array.push(extract[type].call(this, geometry))\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n}\n","/**\n * @module org/locationtech/jts/io/GeoJSONReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONReader (geometryFactory) {\n  this.parser = new GeoJSONParser(geometryFactory || new GeometryFactory())\n}\n\nextend(GeoJSONReader.prototype, {\n  /**\n   * Reads a GeoJSON representation of a {@link Geometry}\n   *\n   * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n   *\n   * @param {Object|String} geoJson a GeoJSON Object or String.\n   * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n   * @memberof module:org/locationtech/jts/io/GeoJSONReader#\n   */\n  read (geoJson) {\n    var geometry = this.parser.read(geoJson)\n    return geometry\n  }\n})\n","/**\n * @module org/locationtech/jts/io/GeoJSONWriter\n */\n\nimport GeoJSONParser from './GeoJSONParser'\nimport extend from '../../../../extend'\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory)\n}\n\nextend(GeoJSONWriter.prototype, {\n  /**\n   * Converts a <code>Geometry</code> to its GeoJSON representation.\n   *\n   * @param {Geometry}\n   *          geometry a <code>Geometry</code> to process.\n   * @return {Object} The GeoJSON representation of the Geometry.\n   * @memberof module:org/locationtech/jts/io/GeoJSONWriter#\n   */\n  write (geometry) {\n    return this.parser.write(geometry)\n  }\n})\n","/**\n * @module org/locationtech/jts/io/WKTReader\n */\n\nimport GeometryFactory from '../geom/GeometryFactory'\nimport PrecisionModel from '../geom/PrecisionModel'\nimport WKTParser from './WKTParser'\nimport extend from '../../../../extend'\n\n/**\n * Converts a geometry in Well-Known Text format to a {@link Geometry}.\n * <p>\n * <code>WKTReader</code> supports extracting <code>Geometry</code> objects\n * from either {@link Reader}s or {@link String}s. This allows it to function\n * as a parser to read <code>Geometry</code> objects from text blocks embedded\n * in other data formats (e.g. XML).\n */\n\n/**\n * A <code>WKTReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nexport default function WKTReader (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory || new GeometryFactory())\n}\n\nextend(WKTReader.prototype, {\n  /**\n   * Reads a Well-Known Text representation of a {@link Geometry}\n   *\n   * @param {string}\n   *          wkt a <Geometry Tagged Text> string (see the OpenGIS Simple Features\n   *          Specification).\n   * @return {Geometry} a <code>Geometry</code> read from\n   *         <code>string.</code>\n   * @memberof module:org/locationtech/jts/io/WKTReader#\n   */\n  read (wkt) {\n    var geometry = this.parser.read(wkt)\n    return geometry\n  }\n})\n","/*eslint-disable no-undef */\n\n/**\n * @module org/locationtech/jts/io/OL3Parser\n */\n\nimport Coordinate from '../geom/Coordinate'\nimport GeometryFactory from '../geom/GeometryFactory'\nimport extend from '../../../../extend'\n\nfunction p2c (p) { return [p.x, p.y] }\n\n/**\n * OpenLayers Geometry parser and writer\n * @param {GeometryFactory} geometryFactory\n * @param {ol} olReference \n * @constructor\n */\nexport default function OL3Parser (geometryFactory, olReference) {\n  this.geometryFactory = geometryFactory || new GeometryFactory()\n  this.ol = olReference || (typeof ol !== 'undefined' && ol)\n}\n\nextend(OL3Parser.prototype, {\n\n  /**\n   * Inject OpenLayers geom classes\n   */\n  inject(Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection) {\n    this.ol = {\n      geom: {\n        Point, LineString, LinearRing, Polygon, MultiPoint, MultiLineString, MultiPolygon, GeometryCollection\n      }\n    }\n  },\n\n  /**\n   * @param geometry {ol.geom.Geometry}\n   * @return {Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  read (geometry) {\n    const ol = this.ol\n    if (geometry instanceof ol.geom.Point) {\n      return this.convertFromPoint(geometry)\n    } else if (geometry instanceof ol.geom.LineString) {\n      return this.convertFromLineString(geometry)\n    } else if (geometry instanceof ol.geom.LinearRing) {\n      return this.convertFromLinearRing(geometry)\n    } else if (geometry instanceof ol.geom.Polygon) {\n      return this.convertFromPolygon(geometry)\n    } else if (geometry instanceof ol.geom.MultiPoint) {\n      return this.convertFromMultiPoint(geometry)\n    } else if (geometry instanceof ol.geom.MultiLineString) {\n      return this.convertFromMultiLineString(geometry)\n    } else if (geometry instanceof ol.geom.MultiPolygon) {\n      return this.convertFromMultiPolygon(geometry)\n    } else if (geometry instanceof ol.geom.GeometryCollection) {\n      return this.convertFromCollection(geometry)\n    }\n  },\n\n  convertFromPoint (point) {\n    const coordinates = point.getCoordinates()\n    return this.geometryFactory.createPoint(new Coordinate(coordinates[0], coordinates[1]))\n  },\n\n  convertFromLineString (lineString) {\n    return this.geometryFactory.createLineString(lineString.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromLinearRing (linearRing) {\n    return this.geometryFactory.createLinearRing(linearRing.getCoordinates().map(function (coordinates) {\n      return new Coordinate(coordinates[0], coordinates[1])\n    }))\n  },\n\n  convertFromPolygon (polygon) {\n    const linearRings = polygon.getLinearRings()\n    var shell = null\n    var holes = []\n    for (let i = 0; i < linearRings.length; i++) {\n      const linearRing = this.convertFromLinearRing(linearRings[i])\n      if (i === 0) {\n        shell = linearRing\n      } else {\n        holes.push(linearRing)\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  convertFromMultiPoint (multiPoint) {\n    const points = multiPoint.getPoints().map(function (point) {\n      return this.convertFromPoint(point)\n    }, this)\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  convertFromMultiLineString (multiLineString) {\n    const lineStrings = multiLineString.getLineStrings().map(function (lineString) {\n      return this.convertFromLineString(lineString)\n    }, this)\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  convertFromMultiPolygon (multiPolygon) {\n    const polygons = multiPolygon.getPolygons().map(function (polygon) {\n      return this.convertFromPolygon(polygon)\n    }, this)\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  convertFromCollection (collection) {\n    const geometries = collection.getGeometries().map(function (geometry) {\n      return this.read(geometry)\n    }, this)\n    return this.geometryFactory.createGeometryCollection(geometries)\n  },\n\n  /**\n   * @param geometry\n   *          {Geometry}\n   * @return {ol.geom.Geometry}\n   * @memberof module:org/locationtech/jts/io/OL3Parser#\n   */\n  write (geometry) {\n    if (geometry.getGeometryType() === 'Point') {\n      return this.convertToPoint(geometry.getCoordinate())\n    } else if (geometry.getGeometryType() === 'LineString') {\n      return this.convertToLineString(geometry)\n    } else if (geometry.getGeometryType() === 'LinearRing') {\n      return this.convertToLinearRing(geometry)\n    } else if (geometry.getGeometryType() === 'Polygon') {\n      return this.convertToPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPoint') {\n      return this.convertToMultiPoint(geometry)\n    } else if (geometry.getGeometryType() === 'MultiLineString') {\n      return this.convertToMultiLineString(geometry)\n    } else if (geometry.getGeometryType() === 'MultiPolygon') {\n      return this.convertToMultiPolygon(geometry)\n    } else if (geometry.getGeometryType() === 'GeometryCollection') {\n      return this.convertToCollection(geometry)\n    }\n  },\n\n  convertToPoint (coordinate) {\n    return new this.ol.geom.Point([coordinate.x, coordinate.y])\n  },\n\n  convertToLineString (lineString) {\n    var points = lineString._points._coordinates.map(p2c)\n    return new this.ol.geom.LineString(points)\n  },\n\n  convertToLinearRing (linearRing) {\n    var points = linearRing._points._coordinates.map(p2c)\n    return new this.ol.geom.LinearRing(points)\n  },\n\n  convertToPolygon (polygon) {\n    var rings = [polygon._shell._points._coordinates.map(p2c)]\n    for (let i = 0; i < polygon._holes.length; i++) {\n      rings.push(polygon._holes[i]._points._coordinates.map(p2c))\n    }\n    return new this.ol.geom.Polygon(rings)\n  },\n\n  convertToMultiPoint (multiPoint) {\n    return new this.ol.geom.MultiPoint(multiPoint.getCoordinates().map(p2c))\n  },\n\n  convertToMultiLineString (multiLineString) {\n    var lineStrings = []\n    for (let i = 0; i < multiLineString._geometries.length; i++) {\n      lineStrings.push(this.convertToLineString(multiLineString._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiLineString(lineStrings)\n  },\n\n  convertToMultiPolygon (multiPolygon) {\n    var polygons = []\n    for (let i = 0; i < multiPolygon._geometries.length; i++) {\n      polygons.push(this.convertToPolygon(multiPolygon._geometries[i]).getCoordinates())\n    }\n    return new this.ol.geom.MultiPolygon(polygons)\n  },\n\n  convertToCollection (geometryCollection) {\n    var geometries = []\n    for (let i = 0; i < geometryCollection._geometries.length; i++) {\n      var geometry = geometryCollection._geometries[i]\n      geometries.push(this.write(geometry))\n    }\n    return new this.ol.geom.GeometryCollection(geometries)\n  }\n})\n","import extend from '../../../../extend';\nimport Assert from '../util/Assert';\nexport default function SegmentPointComparator() {}\nextend(SegmentPointComparator.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentPointComparator;\n\t}\n});\nSegmentPointComparator.relativeSign = function (x0, x1) {\n\tif (x0 < x1) return -1;\n\tif (x0 > x1) return 1;\n\treturn 0;\n};\nSegmentPointComparator.compare = function (octant, p0, p1) {\n\tif (p0.equals2D(p1)) return 0;\n\tvar xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n\tvar ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n\tswitch (octant) {\n\t\tcase 0:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, ySign);\n\t\tcase 1:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, xSign);\n\t\tcase 2:\n\t\t\treturn SegmentPointComparator.compareValue(ySign, -xSign);\n\t\tcase 3:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, ySign);\n\t\tcase 4:\n\t\t\treturn SegmentPointComparator.compareValue(-xSign, -ySign);\n\t\tcase 5:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, -xSign);\n\t\tcase 6:\n\t\t\treturn SegmentPointComparator.compareValue(-ySign, xSign);\n\t\tcase 7:\n\t\t\treturn SegmentPointComparator.compareValue(xSign, -ySign);\n\t}\n\tAssert.shouldNeverReachHere(\"invalid octant value\");\n\treturn 0;\n};\nSegmentPointComparator.compareValue = function (compareSign0, compareSign1) {\n\tif (compareSign0 < 0) return -1;\n\tif (compareSign0 > 0) return 1;\n\tif (compareSign1 < 0) return -1;\n\tif (compareSign1 > 0) return 1;\n\treturn 0;\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport SegmentPointComparator from './SegmentPointComparator';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function SegmentNode() {\n\tthis._segString = null;\n\tthis.coord = null;\n\tthis.segmentIndex = null;\n\tthis._segmentOctant = null;\n\tthis._isInterior = null;\n\tlet segString = arguments[0], coord = arguments[1], segmentIndex = arguments[2], segmentOctant = arguments[3];\n\tthis._segString = segString;\n\tthis.coord = new Coordinate(coord);\n\tthis.segmentIndex = segmentIndex;\n\tthis._segmentOctant = segmentOctant;\n\tthis._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n}\nextend(SegmentNode.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this.coord;\n\t},\n\tprint: function (out) {\n\t\tout.print(this.coord);\n\t\tout.print(\" seg # = \" + this.segmentIndex);\n\t},\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\tif (this.segmentIndex < other.segmentIndex) return -1;\n\t\tif (this.segmentIndex > other.segmentIndex) return 1;\n\t\tif (this.coord.equals2D(other.coord)) return 0;\n\t\treturn SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord);\n\t},\n\tisEndPoint: function (maxSegmentIndex) {\n\t\tif (this.segmentIndex === 0 && !this._isInterior) return true;\n\t\tif (this.segmentIndex === maxSegmentIndex) return true;\n\t\treturn false;\n\t},\n\tisInterior: function () {\n\t\treturn this._isInterior;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentNode;\n\t}\n});\n","import CoordinateList from '../geom/CoordinateList';\nimport SegmentNode from './SegmentNode';\nimport Iterator from '../../../../java/util/Iterator';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport extend from '../../../../extend';\nimport Integer from '../../../../java/lang/Integer';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function SegmentNodeList() {\n\tthis._nodeMap = new TreeMap();\n\tthis._edge = null;\n\tlet edge = arguments[0];\n\tthis._edge = edge;\n}\nextend(SegmentNodeList.prototype, {\n\tgetSplitCoordinates: function () {\n\t\tvar coordList = new CoordinateList();\n\t\tthis.addEndpoints();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tthis.addEdgeCoordinates(eiPrev, ei, coordList);\n\t\t\teiPrev = ei;\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\taddCollapsedNodes: function () {\n\t\tvar collapsedVertexIndexes = new ArrayList();\n\t\tthis.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n\t\tthis.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n\t\tfor (var it = collapsedVertexIndexes.iterator(); it.hasNext(); ) {\n\t\t\tvar vertexIndex = it.next().intValue();\n\t\t\tthis.add(this._edge.getCoordinate(vertexIndex), vertexIndex);\n\t\t}\n\t},\n\tprint: function (out) {\n\t\tout.println(\"Intersections:\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ei = it.next();\n\t\t\tei.print(out);\n\t\t}\n\t},\n\tfindCollapsesFromExistingVertices: function (collapsedVertexIndexes) {\n\t\tfor (var i = 0; i < this._edge.size() - 2; i++) {\n\t\t\tvar p0 = this._edge.getCoordinate(i);\n\t\t\tvar p1 = this._edge.getCoordinate(i + 1);\n\t\t\tvar p2 = this._edge.getCoordinate(i + 2);\n\t\t\tif (p0.equals2D(p2)) {\n\t\t\t\tcollapsedVertexIndexes.add(new Integer(i + 1));\n\t\t\t}\n\t\t}\n\t},\n\taddEdgeCoordinates: function (ei0, ei1, coordList) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar ipt = 0;\n\t\tcoordList.add(new Coordinate(ei0.coord), false);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tcoordList.add(this._edge.getCoordinate(i));\n\t\t}\n\t\tif (useIntPt1) {\n\t\t\tcoordList.add(new Coordinate(ei1.coord));\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\taddSplitEdges: function (edgeList) {\n\t\tthis.addEndpoints();\n\t\tthis.addCollapsedNodes();\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar newEdge = this.createSplitEdge(eiPrev, ei);\n\t\t\tedgeList.add(newEdge);\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tfindCollapseIndex: function (ei0, ei1, collapsedVertexIndex) {\n\t\tif (!ei0.coord.equals2D(ei1.coord)) return false;\n\t\tvar numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n\t\tif (!ei1.isInterior()) {\n\t\t\tnumVerticesBetween--;\n\t\t}\n\t\tif (numVerticesBetween === 1) {\n\t\t\tcollapsedVertexIndex[0] = ei0.segmentIndex + 1;\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tfindCollapsesFromInsertedNodes: function (collapsedVertexIndexes) {\n\t\tvar collapsedVertexIndex = new Array(1).fill(null);\n\t\tvar it = this.iterator();\n\t\tvar eiPrev = it.next();\n\t\twhile (it.hasNext()) {\n\t\t\tvar ei = it.next();\n\t\t\tvar isCollapsed = this.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n\t\t\tif (isCollapsed) collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0]));\n\t\t\teiPrev = ei;\n\t\t}\n\t},\n\tgetEdge: function () {\n\t\treturn this._edge;\n\t},\n\taddEndpoints: function () {\n\t\tvar maxSegIndex = this._edge.size() - 1;\n\t\tthis.add(this._edge.getCoordinate(0), 0);\n\t\tthis.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n\t},\n\tcreateSplitEdge: function (ei0, ei1) {\n\t\tvar npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n\t\tvar lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n\t\tvar useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n\t\tif (!useIntPt1) {\n\t\t\tnpts--;\n\t\t}\n\t\tvar pts = new Array(npts).fill(null);\n\t\tvar ipt = 0;\n\t\tpts[ipt++] = new Coordinate(ei0.coord);\n\t\tfor (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n\t\t\tpts[ipt++] = this._edge.getCoordinate(i);\n\t\t}\n\t\tif (useIntPt1) pts[ipt] = new Coordinate(ei1.coord);\n\t\treturn new NodedSegmentString(pts, this._edge.getData());\n\t},\n\tadd: function (intPt, segmentIndex) {\n\t\tvar eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n\t\tvar ei = this._nodeMap.get(eiNew);\n\t\tif (ei !== null) {\n\t\t\tAssert.isTrue(ei.coord.equals2D(intPt), \"Found equal nodes with different coordinates\");\n\t\t\treturn ei;\n\t\t}\n\t\tthis._nodeMap.put(eiNew, eiNew);\n\t\treturn eiNew;\n\t},\n\tcheckSplitEdgesCorrectness: function (splitEdges) {\n\t\tvar edgePts = this._edge.getCoordinates();\n\t\tvar split0 = splitEdges.get(0);\n\t\tvar pt0 = split0.getCoordinate(0);\n\t\tif (!pt0.equals2D(edgePts[0])) throw new RuntimeException(\"bad split edge start point at \" + pt0);\n\t\tvar splitn = splitEdges.get(splitEdges.size() - 1);\n\t\tvar splitnPts = splitn.getCoordinates();\n\t\tvar ptn = splitnPts[splitnPts.length - 1];\n\t\tif (!ptn.equals2D(edgePts[edgePts.length - 1])) throw new RuntimeException(\"bad split edge end point at \" + ptn);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentNodeList;\n\t}\n});\nfunction NodeVertexIterator() {\n\tthis._nodeList = null;\n\tthis._edge = null;\n\tthis._nodeIt = null;\n\tthis._currNode = null;\n\tthis._nextNode = null;\n\tthis._currSegIndex = 0;\n\tlet nodeList = arguments[0];\n\tthis._nodeList = nodeList;\n\tthis._edge = nodeList.getEdge();\n\tthis._nodeIt = nodeList.iterator();\n\tthis.readNextNode();\n}\nextend(NodeVertexIterator.prototype, {\n\tnext: function () {\n\t\tif (this._currNode === null) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode === null) return null;\n\t\tif (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n\t\t\tthis._currNode = this._nextNode;\n\t\t\tthis._currSegIndex = this._currNode.segmentIndex;\n\t\t\tthis.readNextNode();\n\t\t\treturn this._currNode;\n\t\t}\n\t\tif (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n\t\treturn null;\n\t},\n\tremove: function () {\n\t\tthrow new UnsupportedOperationException(this.getClass().getName());\n\t},\n\thasNext: function () {\n\t\tif (this._nextNode === null) return false;\n\t\treturn true;\n\t},\n\treadNextNode: function () {\n\t\tif (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Iterator];\n\t},\n\tgetClass: function () {\n\t\treturn NodeVertexIterator;\n\t}\n});\n","import Coordinate from '../geom/Coordinate';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nexport default function Octant() {}\nextend(Octant.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Octant;\n\t}\n});\nOctant.octant = function () {\n\tif (typeof arguments[0] === \"number\" && typeof arguments[1] === \"number\") {\n\t\tlet dx = arguments[0], dy = arguments[1];\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for point ( \" + dx + \", \" + dy + \" )\");\n\t\tvar adx = Math.abs(dx);\n\t\tvar ady = Math.abs(dy);\n\t\tif (dx >= 0) {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 0; else return 1;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 7; else return 6;\n\t\t\t}\n\t\t} else {\n\t\t\tif (dy >= 0) {\n\t\t\t\tif (adx >= ady) return 3; else return 2;\n\t\t\t} else {\n\t\t\t\tif (adx >= ady) return 4; else return 5;\n\t\t\t}\n\t\t}\n\t} else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tif (dx === 0.0 && dy === 0.0) throw new IllegalArgumentException(\"Cannot compute the octant for two identical points \" + p0);\n\t\treturn Octant.octant(dx, dy);\n\t}\n};\n","import extend from '../../../../extend';\nexport default function SegmentString() {}\nextend(SegmentString.prototype, {\n\tgetCoordinates: function () {},\n\tsize: function () {},\n\tgetCoordinate: function (i) {},\n\tisClosed: function () {},\n\tsetData: function (data) {},\n\tgetData: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentString;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentString from './SegmentString';\nexport default function NodableSegmentString() {}\nextend(NodableSegmentString.prototype, {\n\taddIntersection: function (intPt, segmentIndex) {},\n\tinterfaces_: function () {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn NodableSegmentString;\n\t}\n});\n","import SegmentNodeList from './SegmentNodeList';\nimport WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Coordinate from '../geom/Coordinate';\nimport Octant from './Octant';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport NodableSegmentString from './NodableSegmentString';\nexport default function NodedSegmentString() {\n\tthis._nodeList = new SegmentNodeList(this);\n\tthis._pts = null;\n\tthis._data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n}\nextend(NodedSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this._pts;\n\t},\n\tsize: function () {\n\t\treturn this._pts.length;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this._pts[i];\n\t},\n\tisClosed: function () {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t},\n\tgetSegmentOctant: function (index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tsafeOctant: function (p0, p1) {\n\t\tif (p0.equals2D(p1)) return 0;\n\t\treturn Octant.octant(p0, p1);\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\taddIntersection: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet intPt = arguments[0], segmentIndex = arguments[1];\n\t\t\tthis.addIntersectionNode(intPt, segmentIndex);\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet li = arguments[0], segmentIndex = arguments[1], geomIndex = arguments[2], intIndex = arguments[3];\n\t\t\tvar intPt = new Coordinate(li.getIntersection(intIndex));\n\t\t\tthis.addIntersection(intPt, segmentIndex);\n\t\t}\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t},\n\tgetNodeList: function () {\n\t\treturn this._nodeList;\n\t},\n\taddIntersectionNode: function (intPt, segmentIndex) {\n\t\tvar normalizedSegmentIndex = segmentIndex;\n\t\tvar nextSegIndex = normalizedSegmentIndex + 1;\n\t\tif (nextSegIndex < this._pts.length) {\n\t\t\tvar nextPt = this._pts[nextSegIndex];\n\t\t\tif (intPt.equals2D(nextPt)) {\n\t\t\t\tnormalizedSegmentIndex = nextSegIndex;\n\t\t\t}\n\t\t}\n\t\tvar ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n\t\treturn ei;\n\t},\n\taddIntersections: function (li, segmentIndex, geomIndex) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tthis.addIntersection(li, segmentIndex, geomIndex, i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [NodableSegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn NodedSegmentString;\n\t}\n});\nNodedSegmentString.getNodedSubstrings = function () {\n\tif (arguments.length === 1) {\n\t\tlet segStrings = arguments[0];\n\t\tvar resultEdgelist = new ArrayList();\n\t\tNodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n\t\treturn resultEdgelist;\n\t} else if (arguments.length === 2) {\n\t\tlet segStrings = arguments[0], resultEdgelist = arguments[1];\n\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar ss = i.next();\n\t\t\tss.getNodeList().addSplitEdges(resultEdgelist);\n\t\t}\n\t}\n};\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nexport default function MonotoneChainOverlapAction() {\n\tthis._overlapSeg1 = new LineSegment();\n\tthis._overlapSeg2 = new LineSegment();\n}\nextend(MonotoneChainOverlapAction.prototype, {\n\toverlap: function () {\n\t\tif (arguments.length === 2) {\n\t\t\tlet seg1 = arguments[0], seg2 = arguments[1];\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tmc1.getLineSegment(start1, this._overlapSeg1);\n\t\t\tmc2.getLineSegment(start2, this._overlapSeg2);\n\t\t\tthis.overlap(this._overlapSeg1, this._overlapSeg2);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MonotoneChainOverlapAction;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function Noder() {}\nextend(Noder.prototype, {\n\tcomputeNodes: function (segStrings) {},\n\tgetNodedSubstrings: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Noder;\n\t}\n});\n","import Noder from './Noder';\nimport extend from '../../../../extend';\nexport default function SinglePassNoder() {\n\tthis._segInt = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet segInt = arguments[0];\n\t\tthis.setSegmentIntersector(segInt);\n\t}\n}\nextend(SinglePassNoder.prototype, {\n\tsetSegmentIntersector: function (segInt) {\n\t\tthis._segInt = segInt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn SinglePassNoder;\n\t}\n});\n","import STRtree from '../index/strtree/STRtree';\nimport NodedSegmentString from './NodedSegmentString';\nimport MonotoneChainOverlapAction from '../index/chain/MonotoneChainOverlapAction';\nimport extend from '../../../../extend';\nimport MonotoneChainBuilder from '../index/chain/MonotoneChainBuilder';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport inherits from '../../../../inherits';\nimport SinglePassNoder from './SinglePassNoder';\nexport default function MCIndexNoder() {\n\tthis._monoChains = new ArrayList();\n\tthis._index = new STRtree();\n\tthis._idCounter = 0;\n\tthis._nodedSegStrings = null;\n\tthis._nOverlaps = 0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet si = arguments[0];\n\t\tSinglePassNoder.call(this, si);\n\t}\n}\ninherits(MCIndexNoder, SinglePassNoder);\nextend(MCIndexNoder.prototype, {\n\tgetMonotoneChains: function () {\n\t\treturn this._monoChains;\n\t},\n\tgetNodedSubstrings: function () {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t},\n\tgetIndex: function () {\n\t\treturn this._index;\n\t},\n\tadd: function (segStr) {\n\t\tvar segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n\t\tfor (var i = segChains.iterator(); i.hasNext(); ) {\n\t\t\tvar mc = i.next();\n\t\t\tmc.setId(this._idCounter++);\n\t\t\tthis._index.insert(mc.getEnvelope(), mc);\n\t\t\tthis._monoChains.add(mc);\n\t\t}\n\t},\n\tcomputeNodes: function (inputSegStrings) {\n\t\tthis._nodedSegStrings = inputSegStrings;\n\t\tfor (var i = inputSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t\tthis.intersectChains();\n\t},\n\tintersectChains: function () {\n\t\tvar overlapAction = new SegmentOverlapAction(this._segInt);\n\t\tfor (var i = this._monoChains.iterator(); i.hasNext(); ) {\n\t\t\tvar queryChain = i.next();\n\t\t\tvar overlapChains = this._index.query(queryChain.getEnvelope());\n\t\t\tfor (var j = overlapChains.iterator(); j.hasNext(); ) {\n\t\t\t\tvar testChain = j.next();\n\t\t\t\tif (testChain.getId() > queryChain.getId()) {\n\t\t\t\t\tqueryChain.computeOverlaps(testChain, overlapAction);\n\t\t\t\t\tthis._nOverlaps++;\n\t\t\t\t}\n\t\t\t\tif (this._segInt.isDone()) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexNoder;\n\t}\n});\nfunction SegmentOverlapAction() {\n\tMonotoneChainOverlapAction.apply(this);\n\tthis._si = null;\n\tlet si = arguments[0];\n\tthis._si = si;\n}\ninherits(SegmentOverlapAction, MonotoneChainOverlapAction);\nextend(SegmentOverlapAction.prototype, {\n\toverlap: function () {\n\t\tif (arguments.length === 4) {\n\t\t\tlet mc1 = arguments[0], start1 = arguments[1], mc2 = arguments[2], start2 = arguments[3];\n\t\t\tvar ss1 = mc1.getContext();\n\t\t\tvar ss2 = mc2.getContext();\n\t\t\tthis._si.processIntersections(ss1, start1, ss2, start2);\n\t\t} else return MonotoneChainOverlapAction.prototype.overlap.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentOverlapAction;\n\t}\n});\nMCIndexNoder.SegmentOverlapAction = SegmentOverlapAction;\n","import hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport Noder from './Noder';\nimport Coordinate from '../geom/Coordinate';\nimport NodedSegmentString from './NodedSegmentString';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function ScaledNoder() {\n\tthis._noder = null;\n\tthis._scaleFactor = null;\n\tthis._offsetX = null;\n\tthis._offsetY = null;\n\tthis._isScaled = false;\n\tif (arguments.length === 2) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1];\n\t\tScaledNoder.call(this, noder, scaleFactor, 0, 0);\n\t} else if (arguments.length === 4) {\n\t\tlet noder = arguments[0], scaleFactor = arguments[1], offsetX = arguments[2], offsetY = arguments[3];\n\t\tthis._noder = noder;\n\t\tthis._scaleFactor = scaleFactor;\n\t\tthis._isScaled = !this.isIntegerPrecision();\n\t}\n}\nextend(ScaledNoder.prototype, {\n\trescale: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.rescale(ss.getCoordinates());\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar p0 = null;\n\t\t\tvar p1 = null;\n\t\t\tif (pts.length === 2) {\n\t\t\t\tp0 = new Coordinate(pts[0]);\n\t\t\t\tp1 = new Coordinate(pts[1]);\n\t\t\t}\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tpts[i].x = pts[i].x / this._scaleFactor + this._offsetX;\n\t\t\t\tpts[i].y = pts[i].y / this._scaleFactor + this._offsetY;\n\t\t\t}\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) {\n\t\t\t\tSystem.out.println(pts);\n\t\t\t}\n\t\t}\n\t},\n\tscale: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet segStrings = arguments[0];\n\t\t\tvar nodedSegmentStrings = new ArrayList(segStrings.size());\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tnodedSegmentStrings.add(new NodedSegmentString(this.scale(ss.getCoordinates()), ss.getData()));\n\t\t\t}\n\t\t\treturn nodedSegmentStrings;\n\t\t} else if (arguments[0] instanceof Array) {\n\t\t\tlet pts = arguments[0];\n\t\t\tvar roundPts = new Array(pts.length).fill(null);\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\troundPts[i] = new Coordinate(Math.round((pts[i].x - this._offsetX) * this._scaleFactor), Math.round((pts[i].y - this._offsetY) * this._scaleFactor), pts[i].z);\n\t\t\t}\n\t\t\tvar roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n\t\t\treturn roundPtsNoDup;\n\t\t}\n\t},\n\tisIntegerPrecision: function () {\n\t\treturn this._scaleFactor === 1.0;\n\t},\n\tgetNodedSubstrings: function () {\n\t\tvar splitSS = this._noder.getNodedSubstrings();\n\t\tif (this._isScaled) this.rescale(splitSS);\n\t\treturn splitSS;\n\t},\n\tcomputeNodes: function (inputSegStrings) {\n\t\tvar intSegStrings = inputSegStrings;\n\t\tif (this._isScaled) intSegStrings = this.scale(inputSegStrings);\n\t\tthis._noder.computeNodes(intSegStrings);\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn ScaledNoder;\n\t}\n});\n","import TreeSet from '../../../../java/util/TreeSet';\nimport LineString from '../geom/LineString';\nimport hasInterface from '../../../../hasInterface';\nimport MultiPoint from '../geom/MultiPoint';\nimport extend from '../../../../extend';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport GeometryCollection from '../geom/GeometryCollection';\nimport Polygonal from '../geom/Polygonal';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function IsSimpleOp() {\n\tthis._inputGeom = null;\n\tthis._isClosedEndpointsInInterior = true;\n\tthis._nonSimpleLocation = null;\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tthis._inputGeom = geom;\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\n\t\tthis._inputGeom = geom;\n\t\tthis._isClosedEndpointsInInterior = !boundaryNodeRule.isInBoundary(2);\n\t}\n}\nextend(IsSimpleOp.prototype, {\n\tisSimpleMultiPoint: function (mp) {\n\t\tif (mp.isEmpty()) return true;\n\t\tvar points = new TreeSet();\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar pt = mp.getGeometryN(i);\n\t\t\tvar p = pt.getCoordinate();\n\t\t\tif (points.contains(p)) {\n\t\t\t\tthis._nonSimpleLocation = p;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tpoints.add(p);\n\t\t}\n\t\treturn true;\n\t},\n\tisSimplePolygonal: function (geom) {\n\t\tvar rings = LinearComponentExtracter.getLines(geom);\n\t\tfor (var i = rings.iterator(); i.hasNext(); ) {\n\t\t\tvar ring = i.next();\n\t\t\tif (!this.isSimpleLinearGeometry(ring)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasClosedEndpointIntersection: function (graph) {\n\t\tvar endPoints = new TreeMap();\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tvar isClosed = e.isClosed();\n\t\t\tvar p0 = e.getCoordinate(0);\n\t\t\tthis.addEndpoint(endPoints, p0, isClosed);\n\t\t\tvar p1 = e.getCoordinate(e.getNumPoints() - 1);\n\t\t\tthis.addEndpoint(endPoints, p1, isClosed);\n\t\t}\n\t\tfor (var i = endPoints.values().iterator(); i.hasNext(); ) {\n\t\t\tvar eiInfo = i.next();\n\t\t\tif (eiInfo.isClosed && eiInfo.degree !== 2) {\n\t\t\t\tthis._nonSimpleLocation = eiInfo.getCoordinate();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetNonSimpleLocation: function () {\n\t\treturn this._nonSimpleLocation;\n\t},\n\tisSimpleLinearGeometry: function (geom) {\n\t\tif (geom.isEmpty()) return true;\n\t\tvar graph = new GeometryGraph(0, geom);\n\t\tvar li = new RobustLineIntersector();\n\t\tvar si = graph.computeSelfNodes(li, true);\n\t\tif (!si.hasIntersection()) return true;\n\t\tif (si.hasProperIntersection()) {\n\t\t\tthis._nonSimpleLocation = si.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tif (this.hasNonEndpointIntersection(graph)) return false;\n\t\tif (this._isClosedEndpointsInInterior) {\n\t\t\tif (this.hasClosedEndpointIntersection(graph)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\thasNonEndpointIntersection: function (graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar maxSegmentIndex = e.getMaximumSegmentIndex();\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tif (!ei.isEndPoint(maxSegmentIndex)) {\n\t\t\t\t\tthis._nonSimpleLocation = ei.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\taddEndpoint: function (endPoints, p, isClosed) {\n\t\tvar eiInfo = endPoints.get(p);\n\t\tif (eiInfo === null) {\n\t\t\teiInfo = new EndpointInfo(p);\n\t\t\tendPoints.put(p, eiInfo);\n\t\t}\n\t\teiInfo.addEndpoint(isClosed);\n\t},\n\tcomputeSimple: function (geom) {\n\t\tthis._nonSimpleLocation = null;\n\t\tif (geom.isEmpty()) return true;\n\t\tif (geom instanceof LineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiLineString) return this.isSimpleLinearGeometry(geom);\n\t\tif (geom instanceof MultiPoint) return this.isSimpleMultiPoint(geom);\n\t\tif (hasInterface(geom, Polygonal)) return this.isSimplePolygonal(geom);\n\t\tif (geom instanceof GeometryCollection) return this.isSimpleGeometryCollection(geom);\n\t\treturn true;\n\t},\n\tisSimple: function () {\n\t\tthis._nonSimpleLocation = null;\n\t\treturn this.computeSimple(this._inputGeom);\n\t},\n\tisSimpleGeometryCollection: function (geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.computeSimple(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IsSimpleOp;\n\t}\n});\nIsSimpleOp.isSimple = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tvar op = new IsSimpleOp(geom);\n\t\treturn op.isSimple();\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], boundaryNodeRule = arguments[1];\n\t\tvar op = new IsSimpleOp(geom, boundaryNodeRule);\n\t\treturn op.isSimple();\n\t}\n};\nfunction EndpointInfo() {\n\tthis.pt = null;\n\tthis.isClosed = null;\n\tthis.degree = null;\n\tlet pt = arguments[0];\n\tthis.pt = pt;\n\tthis.isClosed = false;\n\tthis.degree = 0;\n}\nextend(EndpointInfo.prototype, {\n\taddEndpoint: function (isClosed) {\n\t\tthis.degree++;\n\t\tthis.isClosed |= isClosed;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this.pt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EndpointInfo;\n\t}\n});\nIsSimpleOp.EndpointInfo = EndpointInfo;\n","import extend from '../../../../../extend';\nexport default function BufferParameters() {\n\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\tthis._endCapStyle = BufferParameters.CAP_ROUND;\n\tthis._joinStyle = BufferParameters.JOIN_ROUND;\n\tthis._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n\tthis._isSingleSided = false;\n\tthis._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet quadrantSegments = arguments[0];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t} else if (arguments.length === 2) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t} else if (arguments.length === 4) {\n\t\tlet quadrantSegments = arguments[0], endCapStyle = arguments[1], joinStyle = arguments[2], mitreLimit = arguments[3];\n\t\tthis.setQuadrantSegments(quadrantSegments);\n\t\tthis.setEndCapStyle(endCapStyle);\n\t\tthis.setJoinStyle(joinStyle);\n\t\tthis.setMitreLimit(mitreLimit);\n\t}\n}\nextend(BufferParameters.prototype, {\n\tgetEndCapStyle: function () {\n\t\treturn this._endCapStyle;\n\t},\n\tisSingleSided: function () {\n\t\treturn this._isSingleSided;\n\t},\n\tsetQuadrantSegments: function (quadSegs) {\n\t\tthis._quadrantSegments = quadSegs;\n\t\tif (this._quadrantSegments === 0) this._joinStyle = BufferParameters.JOIN_BEVEL;\n\t\tif (this._quadrantSegments < 0) {\n\t\t\tthis._joinStyle = BufferParameters.JOIN_MITRE;\n\t\t\tthis._mitreLimit = Math.abs(this._quadrantSegments);\n\t\t}\n\t\tif (quadSegs <= 0) {\n\t\t\tthis._quadrantSegments = 1;\n\t\t}\n\t\tif (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n\t\t\tthis._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n\t\t}\n\t},\n\tgetJoinStyle: function () {\n\t\treturn this._joinStyle;\n\t},\n\tsetJoinStyle: function (joinStyle) {\n\t\tthis._joinStyle = joinStyle;\n\t},\n\tsetSimplifyFactor: function (simplifyFactor) {\n\t\tthis._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n\t},\n\tgetSimplifyFactor: function () {\n\t\treturn this._simplifyFactor;\n\t},\n\tgetQuadrantSegments: function () {\n\t\treturn this._quadrantSegments;\n\t},\n\tsetEndCapStyle: function (endCapStyle) {\n\t\tthis._endCapStyle = endCapStyle;\n\t},\n\tgetMitreLimit: function () {\n\t\treturn this._mitreLimit;\n\t},\n\tsetMitreLimit: function (mitreLimit) {\n\t\tthis._mitreLimit = mitreLimit;\n\t},\n\tsetSingleSided: function (isSingleSided) {\n\t\tthis._isSingleSided = isSingleSided;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferParameters;\n\t}\n});\nBufferParameters.bufferDistanceError = function (quadSegs) {\n\tvar alpha = Math.PI / 2.0 / quadSegs;\n\treturn 1 - Math.cos(alpha / 2.0);\n};\nBufferParameters.CAP_ROUND = 1;\nBufferParameters.CAP_FLAT = 2;\nBufferParameters.CAP_SQUARE = 3;\nBufferParameters.JOIN_ROUND = 1;\nBufferParameters.JOIN_MITRE = 2;\nBufferParameters.JOIN_BEVEL = 3;\nBufferParameters.DEFAULT_QUADRANT_SEGMENTS = 8;\nBufferParameters.DEFAULT_MITRE_LIMIT = 5.0;\nBufferParameters.DEFAULT_SIMPLIFY_FACTOR = 0.01;\n","import Position from '../../geomgraph/Position';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport Assert from '../../util/Assert';\nexport default function RightmostEdgeFinder() {\n\tthis._minIndex = -1;\n\tthis._minCoord = null;\n\tthis._minDe = null;\n\tthis._orientedDe = null;\n}\nextend(RightmostEdgeFinder.prototype, {\n\tgetCoordinate: function () {\n\t\treturn this._minCoord;\n\t},\n\tgetRightmostSide: function (de, index) {\n\t\tvar side = this.getRightmostSideOfSegment(de, index);\n\t\tif (side < 0) side = this.getRightmostSideOfSegment(de, index - 1);\n\t\tif (side < 0) {\n\t\t\tthis._minCoord = null;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\treturn side;\n\t},\n\tfindRightmostEdgeAtVertex: function () {\n\t\tvar pts = this._minDe.getEdge().getCoordinates();\n\t\tAssert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, \"rightmost point expected to be interior vertex of edge\");\n\t\tvar pPrev = pts[this._minIndex - 1];\n\t\tvar pNext = pts[this._minIndex + 1];\n\t\tvar orientation = Orientation.index(this._minCoord, pNext, pPrev);\n\t\tvar usePrev = false;\n\t\tif (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === Orientation.COUNTERCLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t} else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === Orientation.CLOCKWISE) {\n\t\t\tusePrev = true;\n\t\t}\n\t\tif (usePrev) {\n\t\t\tthis._minIndex = this._minIndex - 1;\n\t\t}\n\t},\n\tgetRightmostSideOfSegment: function (de, i) {\n\t\tvar e = de.getEdge();\n\t\tvar coord = e.getCoordinates();\n\t\tif (i < 0 || i + 1 >= coord.length) return -1;\n\t\tif (coord[i].y === coord[i + 1].y) return -1;\n\t\tvar pos = Position.LEFT;\n\t\tif (coord[i].y < coord[i + 1].y) pos = Position.RIGHT;\n\t\treturn pos;\n\t},\n\tgetEdge: function () {\n\t\treturn this._orientedDe;\n\t},\n\tcheckForRightmostCoordinate: function (de) {\n\t\tvar coord = de.getEdge().getCoordinates();\n\t\tfor (var i = 0; i < coord.length - 1; i++) {\n\t\t\tif (this._minCoord === null || coord[i].x > this._minCoord.x) {\n\t\t\t\tthis._minDe = de;\n\t\t\t\tthis._minIndex = i;\n\t\t\t\tthis._minCoord = coord[i];\n\t\t\t}\n\t\t}\n\t},\n\tfindRightmostEdgeAtNode: function () {\n\t\tvar node = this._minDe.getNode();\n\t\tvar star = node.getEdges();\n\t\tthis._minDe = star.getRightmostEdge();\n\t\tif (!this._minDe.isForward()) {\n\t\t\tthis._minDe = this._minDe.getSym();\n\t\t\tthis._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n\t\t}\n\t},\n\tfindEdge: function (dirEdgeList) {\n\t\tfor (var i = dirEdgeList.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (!de.isForward()) continue;\n\t\t\tthis.checkForRightmostCoordinate(de);\n\t\t}\n\t\tAssert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), \"inconsistency in rightmost processing\");\n\t\tif (this._minIndex === 0) {\n\t\t\tthis.findRightmostEdgeAtNode();\n\t\t} else {\n\t\t\tthis.findRightmostEdgeAtVertex();\n\t\t}\n\t\tthis._orientedDe = this._minDe;\n\t\tvar rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n\t\tif (rightmostSide === Position.LEFT) {\n\t\t\tthis._orientedDe = this._minDe.getSym();\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RightmostEdgeFinder;\n\t}\n});\n","export default function LinkedList () {\n  this.array_ = []\n}\nLinkedList.prototype.addLast = function (e) {\n  this.array_.push(e)\n}\nLinkedList.prototype.removeFirst = function () {\n  return this.array_.shift()\n}\nLinkedList.prototype.isEmpty = function () {\n  return this.array_.length === 0\n}\n","import HashSet from '../../../../../java/util/HashSet';\nimport Position from '../../geomgraph/Position';\nimport Stack from '../../../../../java/util/Stack';\nimport RightmostEdgeFinder from './RightmostEdgeFinder';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport LinkedList from '../../../../../java/util/LinkedList';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default function BufferSubgraph() {\n\tthis._finder = null;\n\tthis._dirEdgeList = new ArrayList();\n\tthis._nodes = new ArrayList();\n\tthis._rightMostCoord = null;\n\tthis._env = null;\n\tthis._finder = new RightmostEdgeFinder();\n}\nextend(BufferSubgraph.prototype, {\n\tclearVisitedEdges: function () {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tde.setVisited(false);\n\t\t}\n\t},\n\tgetRightmostCoordinate: function () {\n\t\treturn this._rightMostCoord;\n\t},\n\tcomputeNodeDepth: function (n) {\n\t\tvar startEdge = null;\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isVisited() || de.getSym().isVisited()) {\n\t\t\t\tstartEdge = de;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (startEdge === null) throw new TopologyException(\"unable to find edge to compute depths at \" + n.getCoordinate());\n\t\tn.getEdges().computeDepths(startEdge);\n\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tde.setVisited(true);\n\t\t\tthis.copySymDepths(de);\n\t\t}\n\t},\n\tcomputeDepth: function (outsideDepth) {\n\t\tthis.clearVisitedEdges();\n\t\tvar de = this._finder.getEdge();\n\t\tvar n = de.getNode();\n\t\tvar label = de.getLabel();\n\t\tde.setEdgeDepths(Position.RIGHT, outsideDepth);\n\t\tthis.copySymDepths(de);\n\t\tthis.computeDepths(de);\n\t},\n\tcreate: function (node) {\n\t\tthis.addReachable(node);\n\t\tthis._finder.findEdge(this._dirEdgeList);\n\t\tthis._rightMostCoord = this._finder.getCoordinate();\n\t},\n\tfindResultEdges: function () {\n\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeDepths: function (startEdge) {\n\t\tvar nodesVisited = new HashSet();\n\t\tvar nodeQueue = new LinkedList();\n\t\tvar startNode = startEdge.getNode();\n\t\tnodeQueue.addLast(startNode);\n\t\tnodesVisited.add(startNode);\n\t\tstartEdge.setVisited(true);\n\t\twhile (!nodeQueue.isEmpty()) {\n\t\t\tvar n = nodeQueue.removeFirst();\n\t\t\tnodesVisited.add(n);\n\t\t\tthis.computeNodeDepth(n);\n\t\t\tfor (var i = n.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym.isVisited()) continue;\n\t\t\t\tvar adjNode = sym.getNode();\n\t\t\t\tif (!nodesVisited.contains(adjNode)) {\n\t\t\t\t\tnodeQueue.addLast(adjNode);\n\t\t\t\t\tnodesVisited.add(adjNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcompareTo: function (o) {\n\t\tvar graph = o;\n\t\tif (this._rightMostCoord.x < graph._rightMostCoord.x) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this._rightMostCoord.x > graph._rightMostCoord.x) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t},\n\tgetEnvelope: function () {\n\t\tif (this._env === null) {\n\t\t\tvar edgeEnv = new Envelope();\n\t\t\tfor (var it = this._dirEdgeList.iterator(); it.hasNext(); ) {\n\t\t\t\tvar dirEdge = it.next();\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tedgeEnv.expandToInclude(pts[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._env = edgeEnv;\n\t\t}\n\t\treturn this._env;\n\t},\n\taddReachable: function (startNode) {\n\t\tvar nodeStack = new Stack();\n\t\tnodeStack.add(startNode);\n\t\twhile (!nodeStack.empty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tthis.add(node, nodeStack);\n\t\t}\n\t},\n\tcopySymDepths: function (de) {\n\t\tvar sym = de.getSym();\n\t\tsym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n\t\tsym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n\t},\n\tadd: function (node, nodeStack) {\n\t\tnode.setVisited(true);\n\t\tthis._nodes.add(node);\n\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tthis._dirEdgeList.add(de);\n\t\t\tvar sym = de.getSym();\n\t\t\tvar symNode = sym.getNode();\n\t\t\tif (!symNode.isVisited()) nodeStack.push(symNode);\n\t\t}\n\t},\n\tgetNodes: function () {\n\t\treturn this._nodes;\n\t},\n\tgetDirectedEdges: function () {\n\t\treturn this._dirEdgeList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn BufferSubgraph;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport PointLocation from '../algorithm/PointLocation';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nexport default function EdgeRing() {\n\tthis._startDe = null;\n\tthis._maxNodeDegree = -1;\n\tthis._edges = new ArrayList();\n\tthis._pts = new ArrayList();\n\tthis._label = new Label(Location.NONE);\n\tthis._ring = null;\n\tthis._isHole = null;\n\tthis._shell = null;\n\tthis._holes = new ArrayList();\n\tthis._geometryFactory = null;\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tthis._geometryFactory = geometryFactory;\n\tthis.computePoints(start);\n\tthis.computeRing();\n}\nextend(EdgeRing.prototype, {\n\tcomputeRing: function () {\n\t\tif (this._ring !== null) return null;\n\t\tvar coord = new Array(this._pts.size()).fill(null);\n\t\tfor (var i = 0; i < this._pts.size(); i++) {\n\t\t\tcoord[i] = this._pts.get(i);\n\t\t}\n\t\tthis._ring = this._geometryFactory.createLinearRing(coord);\n\t\tthis._isHole = Orientation.isCCW(this._ring.getCoordinates());\n\t},\n\tisIsolated: function () {\n\t\treturn this._label.getGeometryCount() === 1;\n\t},\n\tcomputePoints: function (start) {\n\t\tthis._startDe = start;\n\t\tvar de = start;\n\t\tvar isFirstEdge = true;\n\t\tdo {\n\t\t\tif (de === null) throw new TopologyException(\"Found null DirectedEdge\");\n\t\t\tif (de.getEdgeRing() === this) throw new TopologyException(\"Directed Edge visited twice during ring-building at \" + de.getCoordinate());\n\t\t\tthis._edges.add(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tAssert.isTrue(label.isArea());\n\t\t\tthis.mergeLabel(label);\n\t\t\tthis.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n\t\t\tisFirstEdge = false;\n\t\t\tthis.setEdgeRing(de, this);\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t},\n\tgetLinearRing: function () {\n\t\treturn this._ring;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this._pts.get(i);\n\t},\n\tcomputeMaxNodeDegree: function () {\n\t\tthis._maxNodeDegree = 0;\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tvar degree = node.getEdges().getOutgoingDegree(this);\n\t\t\tif (degree > this._maxNodeDegree) this._maxNodeDegree = degree;\n\t\t\tde = this.getNext(de);\n\t\t} while (de !== this._startDe);\n\t\tthis._maxNodeDegree *= 2;\n\t},\n\taddPoints: function (edge, isForward, isFirstEdge) {\n\t\tvar edgePts = edge.getCoordinates();\n\t\tif (isForward) {\n\t\t\tvar startIndex = 1;\n\t\t\tif (isFirstEdge) startIndex = 0;\n\t\t\tfor (var i = startIndex; i < edgePts.length; i++) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tvar startIndex = edgePts.length - 2;\n\t\t\tif (isFirstEdge) startIndex = edgePts.length - 1;\n\t\t\tfor (var i = startIndex; i >= 0; i--) {\n\t\t\t\tthis._pts.add(edgePts[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisHole: function () {\n\t\treturn this._isHole;\n\t},\n\tsetInResult: function () {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tde.getEdge().setInResult(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t},\n\tcontainsPoint: function (p) {\n\t\tvar shell = this.getLinearRing();\n\t\tvar env = shell.getEnvelopeInternal();\n\t\tif (!env.contains(p)) return false;\n\t\tif (!PointLocation.isInRing(p, shell.getCoordinates())) return false;\n\t\tfor (var i = this._holes.iterator(); i.hasNext(); ) {\n\t\t\tvar hole = i.next();\n\t\t\tif (hole.containsPoint(p)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\taddHole: function (ring) {\n\t\tthis._holes.add(ring);\n\t},\n\tisShell: function () {\n\t\treturn this._shell === null;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tgetMaxNodeDegree: function () {\n\t\tif (this._maxNodeDegree < 0) this.computeMaxNodeDegree();\n\t\treturn this._maxNodeDegree;\n\t},\n\tgetShell: function () {\n\t\treturn this._shell;\n\t},\n\tmergeLabel: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet deLabel = arguments[0];\n\t\t\tthis.mergeLabel(deLabel, 0);\n\t\t\tthis.mergeLabel(deLabel, 1);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet deLabel = arguments[0], geomIndex = arguments[1];\n\t\t\tvar loc = deLabel.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (loc === Location.NONE) return null;\n\t\t\tif (this._label.getLocation(geomIndex) === Location.NONE) {\n\t\t\t\tthis._label.setLocation(geomIndex, loc);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function (shell) {\n\t\tthis._shell = shell;\n\t\tif (shell !== null) shell.addHole(this);\n\t},\n\ttoPolygon: function (geometryFactory) {\n\t\tvar holeLR = new Array(this._holes.size()).fill(null);\n\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\tholeLR[i] = this._holes.get(i).getLinearRing();\n\t\t}\n\t\tvar poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n\t\treturn poly;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeRing;\n\t}\n});\n","import extend from '../../../../../extend';\nimport EdgeRing from '../../geomgraph/EdgeRing';\nimport inherits from '../../../../../inherits';\nexport default function MinimalEdgeRing() {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MinimalEdgeRing, EdgeRing);\nextend(MinimalEdgeRing.prototype, {\n\tsetEdgeRing: function (de, er) {\n\t\tde.setMinEdgeRing(er);\n\t},\n\tgetNext: function (de) {\n\t\treturn de.getNextMin();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MinimalEdgeRing;\n\t}\n});\n","import MinimalEdgeRing from './MinimalEdgeRing';\nimport extend from '../../../../../extend';\nimport EdgeRing from '../../geomgraph/EdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport inherits from '../../../../../inherits';\nexport default function MaximalEdgeRing() {\n\tlet start = arguments[0], geometryFactory = arguments[1];\n\tEdgeRing.call(this, start, geometryFactory);\n}\ninherits(MaximalEdgeRing, EdgeRing);\nextend(MaximalEdgeRing.prototype, {\n\tbuildMinimalRings: function () {\n\t\tvar minEdgeRings = new ArrayList();\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tif (de.getMinEdgeRing() === null) {\n\t\t\t\tvar minEr = new MinimalEdgeRing(de, this._geometryFactory);\n\t\t\t\tminEdgeRings.add(minEr);\n\t\t\t}\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t\treturn minEdgeRings;\n\t},\n\tsetEdgeRing: function (de, er) {\n\t\tde.setEdgeRing(er);\n\t},\n\tlinkDirectedEdgesForMinimalEdgeRings: function () {\n\t\tvar de = this._startDe;\n\t\tdo {\n\t\t\tvar node = de.getNode();\n\t\t\tnode.getEdges().linkMinimalDirectedEdges(this);\n\t\t\tde = de.getNext();\n\t\t} while (de !== this._startDe);\n\t},\n\tgetNext: function (de) {\n\t\treturn de.getNext();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MaximalEdgeRing;\n\t}\n});\n","import PointLocation from '../../algorithm/PointLocation';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport MaximalEdgeRing from './MaximalEdgeRing';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function PolygonBuilder() {\n\tthis._geometryFactory = null;\n\tthis._shellList = new ArrayList();\n\tlet geometryFactory = arguments[0];\n\tthis._geometryFactory = geometryFactory;\n}\nextend(PolygonBuilder.prototype, {\n\tsortShellsAndHoles: function (edgeRings, shellList, freeHoleList) {\n\t\tfor (var it = edgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\tfreeHoleList.add(er);\n\t\t\t} else {\n\t\t\t\tshellList.add(er);\n\t\t\t}\n\t\t}\n\t},\n\tcomputePolygons: function (shellList) {\n\t\tvar resultPolyList = new ArrayList();\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tvar poly = er.toPolygon(this._geometryFactory);\n\t\t\tresultPolyList.add(poly);\n\t\t}\n\t\treturn resultPolyList;\n\t},\n\tplaceFreeHoles: function (shellList, freeHoleList) {\n\t\tfor (var it = freeHoleList.iterator(); it.hasNext(); ) {\n\t\t\tvar hole = it.next();\n\t\t\tif (hole.getShell() === null) {\n\t\t\t\tvar shell = this.findEdgeRingContaining(hole, shellList);\n\t\t\t\tif (shell === null) throw new TopologyException(\"unable to assign hole to a shell\", hole.getCoordinate(0));\n\t\t\t\thole.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tbuildMinimalEdgeRings: function (maxEdgeRings, shellList, freeHoleList) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = maxEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.getMaxNodeDegree() > 2) {\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tvar shell = this.findShell(minEdgeRings);\n\t\t\t\tif (shell !== null) {\n\t\t\t\t\tthis.placePolygonHoles(shell, minEdgeRings);\n\t\t\t\t\tshellList.add(shell);\n\t\t\t\t} else {\n\t\t\t\t\tfreeHoleList.addAll(minEdgeRings);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tedgeRings.add(er);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\tcontainsPoint: function (p) {\n\t\tfor (var it = this._shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.containsPoint(p)) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tbuildMaximalEdgeRings: function (dirEdges) {\n\t\tvar maxEdgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getLabel().isArea()) {\n\t\t\t\tif (de.getEdgeRing() === null) {\n\t\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\t\tmaxEdgeRings.add(er);\n\t\t\t\t\ter.setInResult();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn maxEdgeRings;\n\t},\n\tplacePolygonHoles: function (shell, minEdgeRings) {\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (er.isHole()) {\n\t\t\t\ter.setShell(shell);\n\t\t\t}\n\t\t}\n\t},\n\tgetPolygons: function () {\n\t\tvar resultPolyList = this.computePolygons(this._shellList);\n\t\treturn resultPolyList;\n\t},\n\tfindEdgeRingContaining: function (testEr, shellList) {\n\t\tvar testRing = testEr.getLinearRing();\n\t\tvar testEnv = testRing.getEnvelopeInternal();\n\t\tvar testPt = testRing.getCoordinateN(0);\n\t\tvar minShell = null;\n\t\tvar minEnv = null;\n\t\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\t\tvar tryShell = it.next();\n\t\t\tvar tryRing = tryShell.getLinearRing();\n\t\t\tvar tryEnv = tryRing.getEnvelopeInternal();\n\t\t\tif (minShell !== null) minEnv = minShell.getLinearRing().getEnvelopeInternal();\n\t\t\tvar isContained = false;\n\t\t\tif (tryEnv.contains(testEnv) && PointLocation.isInRing(testPt, tryRing.getCoordinates())) isContained = true;\n\t\t\tif (isContained) {\n\t\t\t\tif (minShell === null || minEnv.contains(tryEnv)) {\n\t\t\t\t\tminShell = tryShell;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn minShell;\n\t},\n\tfindShell: function (minEdgeRings) {\n\t\tvar shellCount = 0;\n\t\tvar shell = null;\n\t\tfor (var it = minEdgeRings.iterator(); it.hasNext(); ) {\n\t\t\tvar er = it.next();\n\t\t\tif (!er.isHole()) {\n\t\t\t\tshell = er;\n\t\t\t\tshellCount++;\n\t\t\t}\n\t\t}\n\t\tAssert.isTrue(shellCount <= 1, \"found two shells in MinimalEdgeRing list\");\n\t\treturn shell;\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet graph = arguments[0];\n\t\t\tthis.add(graph.getEdgeEnds(), graph.getNodes());\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet dirEdges = arguments[0], nodes = arguments[1];\n\t\t\tPlanarGraph.linkResultDirectedEdges(nodes);\n\t\t\tvar maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n\t\t\tvar freeHoleList = new ArrayList();\n\t\t\tvar edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n\t\t\tthis.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n\t\t\tthis.placeFreeHoles(this._shellList, freeHoleList);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonBuilder;\n\t}\n});\n","import CoordinateList from '../../geom/CoordinateList';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport Distance from '../../algorithm/Distance';\nexport default function BufferInputLineSimplifier() {\n\tthis._inputLine = null;\n\tthis._distanceTol = null;\n\tthis._isDeleted = null;\n\tthis._angleOrientation = Orientation.COUNTERCLOCKWISE;\n\tlet inputLine = arguments[0];\n\tthis._inputLine = inputLine;\n}\nextend(BufferInputLineSimplifier.prototype, {\n\tisDeletable: function (i0, i1, i2, distanceTol) {\n\t\tvar p0 = this._inputLine[i0];\n\t\tvar p1 = this._inputLine[i1];\n\t\tvar p2 = this._inputLine[i2];\n\t\tif (!this.isConcave(p0, p1, p2)) return false;\n\t\tif (!this.isShallow(p0, p1, p2, distanceTol)) return false;\n\t\treturn this.isShallowSampled(p0, p1, i0, i2, distanceTol);\n\t},\n\tdeleteShallowConcavities: function () {\n\t\tvar index = 1;\n\t\tvar maxIndex = this._inputLine.length - 1;\n\t\tvar midIndex = this.findNextNonDeletedIndex(index);\n\t\tvar lastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\tvar isChanged = false;\n\t\twhile (lastIndex < this._inputLine.length) {\n\t\t\tvar isMiddleVertexDeleted = false;\n\t\t\tif (this.isDeletable(index, midIndex, lastIndex, this._distanceTol)) {\n\t\t\t\tthis._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n\t\t\t\tisMiddleVertexDeleted = true;\n\t\t\t\tisChanged = true;\n\t\t\t}\n\t\t\tif (isMiddleVertexDeleted) index = lastIndex; else index = midIndex;\n\t\t\tmidIndex = this.findNextNonDeletedIndex(index);\n\t\t\tlastIndex = this.findNextNonDeletedIndex(midIndex);\n\t\t}\n\t\treturn isChanged;\n\t},\n\tisShallowConcavity: function (p0, p1, p2, distanceTol) {\n\t\tvar orientation = Orientation.index(p0, p1, p2);\n\t\tvar isAngleToSimplify = orientation === this._angleOrientation;\n\t\tif (!isAngleToSimplify) return false;\n\t\tvar dist = Distance.pointToSegment(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tisShallowSampled: function (p0, p2, i0, i2, distanceTol) {\n\t\tvar inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n\t\tif (inc <= 0) inc = 1;\n\t\tfor (var i = i0; i < i2; i += inc) {\n\t\t\tif (!this.isShallow(p0, p2, this._inputLine[i], distanceTol)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisConcave: function (p0, p1, p2) {\n\t\tvar orientation = Orientation.index(p0, p1, p2);\n\t\tvar isConcave = orientation === this._angleOrientation;\n\t\treturn isConcave;\n\t},\n\tsimplify: function (distanceTol) {\n\t\tthis._distanceTol = Math.abs(distanceTol);\n\t\tif (distanceTol < 0) this._angleOrientation = Orientation.CLOCKWISE;\n\t\tthis._isDeleted = new Array(this._inputLine.length).fill(null);\n\t\tvar isChanged = false;\n\t\tdo {\n\t\t\tisChanged = this.deleteShallowConcavities();\n\t\t} while (isChanged);\n\t\treturn this.collapseLine();\n\t},\n\tfindNextNonDeletedIndex: function (index) {\n\t\tvar next = index + 1;\n\t\twhile (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) next++;\n\t\treturn next;\n\t},\n\tisShallow: function (p0, p1, p2, distanceTol) {\n\t\tvar dist = Distance.pointToSegment(p1, p0, p2);\n\t\treturn dist < distanceTol;\n\t},\n\tcollapseLine: function () {\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._inputLine.length; i++) {\n\t\t\tif (this._isDeleted[i] !== BufferInputLineSimplifier.DELETE) coordList.add(this._inputLine[i]);\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferInputLineSimplifier;\n\t}\n});\nBufferInputLineSimplifier.simplify = function (inputLine, distanceTol) {\n\tvar simp = new BufferInputLineSimplifier(inputLine);\n\treturn simp.simplify(distanceTol);\n};\nBufferInputLineSimplifier.INIT = 0;\nBufferInputLineSimplifier.DELETE = 1;\nBufferInputLineSimplifier.KEEP = 1;\nBufferInputLineSimplifier.NUM_PTS_TO_CHECK = 10;\n","import GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function OffsetSegmentString() {\n\tthis._ptList = null;\n\tthis._precisionModel = null;\n\tthis._minimimVertexDistance = 0.0;\n\tthis._ptList = new ArrayList();\n}\nextend(OffsetSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\tvar coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n\t\treturn coord;\n\t},\n\tsetPrecisionModel: function (precisionModel) {\n\t\tthis._precisionModel = precisionModel;\n\t},\n\taddPt: function (pt) {\n\t\tvar bufPt = new Coordinate(pt);\n\t\tthis._precisionModel.makePrecise(bufPt);\n\t\tif (this.isRedundant(bufPt)) return null;\n\t\tthis._ptList.add(bufPt);\n\t},\n\treverse: function () {},\n\taddPts: function (pt, isForward) {\n\t\tif (isForward) {\n\t\t\tfor (var i = 0; i < pt.length; i++) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var i = pt.length - 1; i >= 0; i--) {\n\t\t\t\tthis.addPt(pt[i]);\n\t\t\t}\n\t\t}\n\t},\n\tisRedundant: function (pt) {\n\t\tif (this._ptList.size() < 1) return false;\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar ptDist = pt.distance(lastPt);\n\t\tif (ptDist < this._minimimVertexDistance) return true;\n\t\treturn false;\n\t},\n\ttoString: function () {\n\t\tvar fact = new GeometryFactory();\n\t\tvar line = fact.createLineString(this.getCoordinates());\n\t\treturn line.toString();\n\t},\n\tcloseRing: function () {\n\t\tif (this._ptList.size() < 1) return null;\n\t\tvar startPt = new Coordinate(this._ptList.get(0));\n\t\tvar lastPt = this._ptList.get(this._ptList.size() - 1);\n\t\tvar last2Pt = null;\n\t\tif (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2);\n\t\tif (startPt.equals(lastPt)) return null;\n\t\tthis._ptList.add(startPt);\n\t},\n\tsetMinimumVertexDistance: function (minimimVertexDistance) {\n\t\tthis._minimimVertexDistance = minimimVertexDistance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetSegmentString;\n\t}\n});\nOffsetSegmentString.COORDINATE_ARRAY_TYPE = new Array(0).fill(null);\n","import BufferParameters from './BufferParameters';\nimport NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport OffsetSegmentString from './OffsetSegmentString';\nimport LineSegment from '../../geom/LineSegment';\nimport Angle from '../../algorithm/Angle';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default function OffsetSegmentGenerator() {\n\tthis._maxCurveSegmentError = 0.0;\n\tthis._filletAngleQuantum = null;\n\tthis._closingSegLengthFactor = 1;\n\tthis._segList = null;\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tthis._li = null;\n\tthis._s0 = null;\n\tthis._s1 = null;\n\tthis._s2 = null;\n\tthis._seg0 = new LineSegment();\n\tthis._seg1 = new LineSegment();\n\tthis._offset0 = new LineSegment();\n\tthis._offset1 = new LineSegment();\n\tthis._side = 0;\n\tthis._hasNarrowConcaveAngle = false;\n\tlet precisionModel = arguments[0], bufParams = arguments[1], distance = arguments[2];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n\tthis._li = new RobustLineIntersector();\n\tthis._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n\tif (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;\n\tthis.init(distance);\n}\nextend(OffsetSegmentGenerator.prototype, {\n\taddNextSegment: function (p, addStartPoint) {\n\t\tthis._s0 = this._s1;\n\t\tthis._s1 = this._s2;\n\t\tthis._s2 = p;\n\t\tthis._seg0.setCoordinates(this._s0, this._s1);\n\t\tthis.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n\t\tthis._seg1.setCoordinates(this._s1, this._s2);\n\t\tthis.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n\t\tif (this._s1.equals(this._s2)) return null;\n\t\tvar orientation = Orientation.index(this._s0, this._s1, this._s2);\n\t\tvar outsideTurn = orientation === Orientation.CLOCKWISE && this._side === Position.LEFT || orientation === Orientation.COUNTERCLOCKWISE && this._side === Position.RIGHT;\n\t\tif (orientation === 0) {\n\t\t\tthis.addCollinear(addStartPoint);\n\t\t} else if (outsideTurn) {\n\t\t\tthis.addOutsideTurn(orientation, addStartPoint);\n\t\t} else {\n\t\t\tthis.addInsideTurn(orientation, addStartPoint);\n\t\t}\n\t},\n\taddLineEndCap: function (p0, p1) {\n\t\tvar seg = new LineSegment(p0, p1);\n\t\tvar offsetL = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n\t\tvar offsetR = new LineSegment();\n\t\tthis.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n\t\tvar dx = p1.x - p0.x;\n\t\tvar dy = p1.y - p0.y;\n\t\tvar angle = Math.atan2(dy, dx);\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis.addDirectedFillet(p1, angle + Math.PI / 2, angle - Math.PI / 2, Orientation.CLOCKWISE, this._distance);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_FLAT:\n\t\t\t\tthis._segList.addPt(offsetL.p1);\n\t\t\t\tthis._segList.addPt(offsetR.p1);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tvar squareCapSideOffset = new Coordinate();\n\t\t\t\tsquareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n\t\t\t\tsquareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n\t\t\t\tvar squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n\t\t\t\tvar squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n\t\t\t\tthis._segList.addPt(squareCapLOffset);\n\t\t\t\tthis._segList.addPt(squareCapROffset);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetCoordinates: function () {\n\t\tvar pts = this._segList.getCoordinates();\n\t\treturn pts;\n\t},\n\taddMitreJoin: function (p, offset0, offset1, distance) {\n\t\tvar isMitreWithinLimit = true;\n\t\tvar intPt = null;\n\t\ttry {\n\t\t\tintPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n\t\t\tvar mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n\t\t\tif (mitreRatio > this._bufParams.getMitreLimit()) isMitreWithinLimit = false;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof NotRepresentableException) {\n\t\t\t\tintPt = new Coordinate(0, 0);\n\t\t\t\tisMitreWithinLimit = false;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (isMitreWithinLimit) {\n\t\t\tthis._segList.addPt(intPt);\n\t\t} else {\n\t\t\tthis.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n\t\t}\n\t},\n\taddOutsideTurn: function (orientation, addStartPoint) {\n\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\tthis.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n\t\t} else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n\t\t\tthis.addBevelJoin(this._offset0, this._offset1);\n\t\t} else {\n\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\tthis.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t}\n\t},\n\tcreateSquare: function (p) {\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n\t\tthis._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n\t\tthis._segList.closeRing();\n\t},\n\taddSegments: function (pt, isForward) {\n\t\tthis._segList.addPts(pt, isForward);\n\t},\n\taddFirstSegment: function () {\n\t\tthis._segList.addPt(this._offset1.p0);\n\t},\n\taddCornerFillet: function (p, p0, p1, direction, radius) {\n\t\tvar dx0 = p0.x - p.x;\n\t\tvar dy0 = p0.y - p.y;\n\t\tvar startAngle = Math.atan2(dy0, dx0);\n\t\tvar dx1 = p1.x - p.x;\n\t\tvar dy1 = p1.y - p.y;\n\t\tvar endAngle = Math.atan2(dy1, dx1);\n\t\tif (direction === Orientation.CLOCKWISE) {\n\t\t\tif (startAngle <= endAngle) startAngle += 2.0 * Math.PI;\n\t\t} else {\n\t\t\tif (startAngle >= endAngle) startAngle -= 2.0 * Math.PI;\n\t\t}\n\t\tthis._segList.addPt(p0);\n\t\tthis.addDirectedFillet(p, startAngle, endAngle, direction, radius);\n\t\tthis._segList.addPt(p1);\n\t},\n\taddLastSegment: function () {\n\t\tthis._segList.addPt(this._offset1.p1);\n\t},\n\tinitSideSegments: function (s1, s2, side) {\n\t\tthis._s1 = s1;\n\t\tthis._s2 = s2;\n\t\tthis._side = side;\n\t\tthis._seg1.setCoordinates(s1, s2);\n\t\tthis.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n\t},\n\taddLimitedMitreJoin: function (offset0, offset1, distance, mitreLimit) {\n\t\tvar basePt = this._seg0.p1;\n\t\tvar ang0 = Angle.angle(basePt, this._seg0.p0);\n\t\tvar ang1 = Angle.angle(basePt, this._seg1.p1);\n\t\tvar angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n\t\tvar angDiffHalf = angDiff / 2;\n\t\tvar midAng = Angle.normalize(ang0 + angDiffHalf);\n\t\tvar mitreMidAng = Angle.normalize(midAng + Math.PI);\n\t\tvar mitreDist = mitreLimit * distance;\n\t\tvar bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n\t\tvar bevelHalfLen = distance - bevelDelta;\n\t\tvar bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n\t\tvar bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n\t\tvar bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n\t\tvar mitreMidLine = new LineSegment(basePt, bevelMidPt);\n\t\tvar bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n\t\tvar bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n\t\tif (this._side === Position.LEFT) {\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t} else {\n\t\t\tthis._segList.addPt(bevelEndRight);\n\t\t\tthis._segList.addPt(bevelEndLeft);\n\t\t}\n\t},\n\taddDirectedFillet: function (p, startAngle, endAngle, direction, radius) {\n\t\tvar directionFactor = direction === Orientation.CLOCKWISE ? -1 : 1;\n\t\tvar totalAngle = Math.abs(startAngle - endAngle);\n\t\tvar nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n\t\tif (nSegs < 1) return null;\n\t\tvar initAngle = null, currAngleInc = null;\n\t\tinitAngle = 0.0;\n\t\tcurrAngleInc = totalAngle / nSegs;\n\t\tvar currAngle = initAngle;\n\t\tvar pt = new Coordinate();\n\t\twhile (currAngle < totalAngle) {\n\t\t\tvar angle = startAngle + directionFactor * currAngle;\n\t\t\tpt.x = p.x + radius * Math.cos(angle);\n\t\t\tpt.y = p.y + radius * Math.sin(angle);\n\t\t\tthis._segList.addPt(pt);\n\t\t\tcurrAngle += currAngleInc;\n\t\t}\n\t},\n\tcomputeOffsetSegment: function (seg, side, distance, offset) {\n\t\tvar sideSign = side === Position.LEFT ? 1 : -1;\n\t\tvar dx = seg.p1.x - seg.p0.x;\n\t\tvar dy = seg.p1.y - seg.p0.y;\n\t\tvar len = Math.sqrt(dx * dx + dy * dy);\n\t\tvar ux = sideSign * distance * dx / len;\n\t\tvar uy = sideSign * distance * dy / len;\n\t\toffset.p0.x = seg.p0.x - uy;\n\t\toffset.p0.y = seg.p0.y + ux;\n\t\toffset.p1.x = seg.p1.x - uy;\n\t\toffset.p1.y = seg.p1.y + ux;\n\t},\n\taddInsideTurn: function (orientation, addStartPoint) {\n\t\tthis._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis._segList.addPt(this._li.getIntersection(0));\n\t\t} else {\n\t\t\tthis._hasNarrowConcaveAngle = true;\n\t\t\tif (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t} else {\n\t\t\t\tthis._segList.addPt(this._offset0.p1);\n\t\t\t\tif (this._closingSegLengthFactor > 0) {\n\t\t\t\t\tvar mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid0);\n\t\t\t\t\tvar mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n\t\t\t\t\tthis._segList.addPt(mid1);\n\t\t\t\t} else {\n\t\t\t\t\tthis._segList.addPt(this._s1);\n\t\t\t\t}\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t}\n\t\t}\n\t},\n\tcreateCircle: function (p) {\n\t\tvar pt = new Coordinate(p.x + this._distance, p.y);\n\t\tthis._segList.addPt(pt);\n\t\tthis.addDirectedFillet(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n\t\tthis._segList.closeRing();\n\t},\n\taddBevelJoin: function (offset0, offset1) {\n\t\tthis._segList.addPt(offset0.p1);\n\t\tthis._segList.addPt(offset1.p0);\n\t},\n\tinit: function (distance) {\n\t\tthis._distance = distance;\n\t\tthis._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n\t\tthis._segList = new OffsetSegmentString();\n\t\tthis._segList.setPrecisionModel(this._precisionModel);\n\t\tthis._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n\t},\n\taddCollinear: function (addStartPoint) {\n\t\tthis._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n\t\tvar numInt = this._li.getIntersectionNum();\n\t\tif (numInt >= 2) {\n\t\t\tif (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n\t\t\t\tif (addStartPoint) this._segList.addPt(this._offset0.p1);\n\t\t\t\tthis._segList.addPt(this._offset1.p0);\n\t\t\t} else {\n\t\t\t\tthis.addCornerFillet(this._s1, this._offset0.p1, this._offset1.p0, Orientation.CLOCKWISE, this._distance);\n\t\t\t}\n\t\t}\n\t},\n\tcloseRing: function () {\n\t\tthis._segList.closeRing();\n\t},\n\thasNarrowConcaveAngle: function () {\n\t\treturn this._hasNarrowConcaveAngle;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetSegmentGenerator;\n\t}\n});\nOffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-3;\nOffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR = 1.0E-6;\nOffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR = 80;\n","import BufferParameters from './BufferParameters';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport BufferInputLineSimplifier from './BufferInputLineSimplifier';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport OffsetSegmentGenerator from './OffsetSegmentGenerator';\nexport default function OffsetCurveBuilder() {\n\tthis._distance = 0.0;\n\tthis._precisionModel = null;\n\tthis._bufParams = null;\n\tlet precisionModel = arguments[0], bufParams = arguments[1];\n\tthis._precisionModel = precisionModel;\n\tthis._bufParams = bufParams;\n}\nextend(OffsetCurveBuilder.prototype, {\n\tgetOffsetCurve: function (inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance === 0.0) return null;\n\t\tvar isRightSide = distance < 0.0;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tthis.computeOffsetCurve(inputPts, isRightSide, segGen);\n\t\t}\n\t\tvar curvePts = segGen.getCoordinates();\n\t\tif (isRightSide) CoordinateArrays.reverse(curvePts);\n\t\treturn curvePts;\n\t},\n\tcomputeSingleSidedBufferCurve: function (inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tsegGen.addSegments(inputPts, true);\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tsegGen.addSegments(inputPts, false);\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.closeRing();\n\t},\n\tcomputeRingBufferCurve: function (inputPts, side, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (side === Position.RIGHT) distTol = -distTol;\n\t\tvar simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n = simp.length - 1;\n\t\tsegGen.initSideSegments(simp[n - 1], simp[0], side);\n\t\tfor (var i = 1; i <= n; i++) {\n\t\t\tvar addStartPoint = i !== 1;\n\t\t\tsegGen.addNextSegment(simp[i], addStartPoint);\n\t\t}\n\t\tsegGen.closeRing();\n\t},\n\tcomputeLineBufferCurve: function (inputPts, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\tvar n1 = simp1.length - 1;\n\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\tvar n2 = simp2.length - 1;\n\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t}\n\t\tsegGen.addLastSegment();\n\t\tsegGen.addLineEndCap(simp2[1], simp2[0]);\n\t\tsegGen.closeRing();\n\t},\n\tcomputePointCurve: function (pt, segGen) {\n\t\tswitch (this._bufParams.getEndCapStyle()) {\n\t\t\tcase BufferParameters.CAP_ROUND:\n\t\t\t\tsegGen.createCircle(pt);\n\t\t\t\tbreak;\n\t\t\tcase BufferParameters.CAP_SQUARE:\n\t\t\t\tsegGen.createSquare(pt);\n\t\t\t\tbreak;\n\t\t}\n\t},\n\tgetLineCurve: function (inputPts, distance) {\n\t\tthis._distance = distance;\n\t\tif (distance < 0.0 && !this._bufParams.isSingleSided()) return null;\n\t\tif (distance === 0.0) return null;\n\t\tvar posDistance = Math.abs(distance);\n\t\tvar segGen = this.getSegGen(posDistance);\n\t\tif (inputPts.length <= 1) {\n\t\t\tthis.computePointCurve(inputPts[0], segGen);\n\t\t} else {\n\t\t\tif (this._bufParams.isSingleSided()) {\n\t\t\t\tvar isRightSide = distance < 0.0;\n\t\t\t\tthis.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n\t\t\t} else this.computeLineBufferCurve(inputPts, segGen);\n\t\t}\n\t\tvar lineCoord = segGen.getCoordinates();\n\t\treturn lineCoord;\n\t},\n\tgetBufferParameters: function () {\n\t\treturn this._bufParams;\n\t},\n\tsimplifyTolerance: function (bufDistance) {\n\t\treturn bufDistance * this._bufParams.getSimplifyFactor();\n\t},\n\tgetRingCurve: function (inputPts, side, distance) {\n\t\tthis._distance = distance;\n\t\tif (inputPts.length <= 2) return this.getLineCurve(inputPts, distance);\n\t\tif (distance === 0.0) {\n\t\t\treturn OffsetCurveBuilder.copyCoordinates(inputPts);\n\t\t}\n\t\tvar segGen = this.getSegGen(distance);\n\t\tthis.computeRingBufferCurve(inputPts, side, segGen);\n\t\treturn segGen.getCoordinates();\n\t},\n\tcomputeOffsetCurve: function (inputPts, isRightSide, segGen) {\n\t\tvar distTol = this.simplifyTolerance(this._distance);\n\t\tif (isRightSide) {\n\t\t\tvar simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n\t\t\tvar n2 = simp2.length - 1;\n\t\t\tsegGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = n2 - 2; i >= 0; i--) {\n\t\t\t\tsegGen.addNextSegment(simp2[i], true);\n\t\t\t}\n\t\t} else {\n\t\t\tvar simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n\t\t\tvar n1 = simp1.length - 1;\n\t\t\tsegGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n\t\t\tsegGen.addFirstSegment();\n\t\t\tfor (var i = 2; i <= n1; i++) {\n\t\t\t\tsegGen.addNextSegment(simp1[i], true);\n\t\t\t}\n\t\t}\n\t\tsegGen.addLastSegment();\n\t},\n\tgetSegGen: function (distance) {\n\t\treturn new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetCurveBuilder;\n\t}\n});\nOffsetCurveBuilder.copyCoordinates = function (pts) {\n\tvar copy = new Array(pts.length).fill(null);\n\tfor (var i = 0; i < copy.length; i++) {\n\t\tcopy[i] = new Coordinate(pts[i]);\n\t}\n\treturn copy;\n};\n","import hasInterface from '../../../../../hasInterface';\nimport Position from '../../geomgraph/Position';\nimport Coordinate from '../../geom/Coordinate';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport Collections from '../../../../../java/util/Collections';\nimport DirectedEdge from '../../geomgraph/DirectedEdge';\nimport LineSegment from '../../geom/LineSegment';\nimport Comparable from '../../../../../java/lang/Comparable';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default function SubgraphDepthLocater() {\n\tthis._subgraphs = null;\n\tthis._seg = new LineSegment();\n\tlet subgraphs = arguments[0];\n\tthis._subgraphs = subgraphs;\n}\nextend(SubgraphDepthLocater.prototype, {\n\tfindStabbedSegments: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet stabbingRayLeftPt = arguments[0];\n\t\t\tvar stabbedSegments = new ArrayList();\n\t\t\tfor (var i = this._subgraphs.iterator(); i.hasNext(); ) {\n\t\t\t\tvar bsg = i.next();\n\t\t\t\tvar env = bsg.getEnvelope();\n\t\t\t\tif (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) continue;\n\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n\t\t\t}\n\t\t\treturn stabbedSegments;\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdge = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tvar pts = dirEdge.getEdge().getCoordinates();\n\t\t\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\t\t\tthis._seg.p0 = pts[i];\n\t\t\t\t\tthis._seg.p1 = pts[i + 1];\n\t\t\t\t\tif (this._seg.p0.y > this._seg.p1.y) this._seg.reverse();\n\t\t\t\t\tvar maxx = Math.max(this._seg.p0.x, this._seg.p1.x);\n\t\t\t\t\tif (maxx < stabbingRayLeftPt.x) continue;\n\t\t\t\t\tif (this._seg.isHorizontal()) continue;\n\t\t\t\t\tif (stabbingRayLeftPt.y < this._seg.p0.y || stabbingRayLeftPt.y > this._seg.p1.y) continue;\n\t\t\t\t\tif (Orientation.index(this._seg.p0, this._seg.p1, stabbingRayLeftPt) === Orientation.RIGHT) continue;\n\t\t\t\t\tvar depth = dirEdge.getDepth(Position.LEFT);\n\t\t\t\t\tif (!this._seg.p0.equals(pts[i])) depth = dirEdge.getDepth(Position.RIGHT);\n\t\t\t\t\tvar ds = new DepthSegment(this._seg, depth);\n\t\t\t\t\tstabbedSegments.add(ds);\n\t\t\t\t}\n\t\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n\t\t\t\tlet stabbingRayLeftPt = arguments[0], dirEdges = arguments[1], stabbedSegments = arguments[2];\n\t\t\t\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\t\t\t\tvar de = i.next();\n\t\t\t\t\tif (!de.isForward()) continue;\n\t\t\t\t\tthis.findStabbedSegments(stabbingRayLeftPt, de, stabbedSegments);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDepth: function (p) {\n\t\tvar stabbedSegments = this.findStabbedSegments(p);\n\t\tif (stabbedSegments.size() === 0) return 0;\n\t\tvar ds = Collections.min(stabbedSegments);\n\t\treturn ds._leftDepth;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SubgraphDepthLocater;\n\t}\n});\nfunction DepthSegment() {\n\tthis._upwardSeg = null;\n\tthis._leftDepth = null;\n\tlet seg = arguments[0], depth = arguments[1];\n\tthis._upwardSeg = new LineSegment(seg);\n\tthis._leftDepth = depth;\n}\nextend(DepthSegment.prototype, {\n\tcompareTo: function (obj) {\n\t\tvar other = obj;\n\t\tif (this._upwardSeg.minX() >= other._upwardSeg.maxX()) return 1;\n\t\tif (this._upwardSeg.maxX() <= other._upwardSeg.minX()) return -1;\n\t\tvar orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\torientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n\t\tif (orientIndex !== 0) return orientIndex;\n\t\treturn this._upwardSeg.compareTo(other._upwardSeg);\n\t},\n\tcompareX: function (seg0, seg1) {\n\t\tvar compare0 = seg0.p0.compareTo(seg1.p0);\n\t\tif (compare0 !== 0) return compare0;\n\t\treturn seg0.p1.compareTo(seg1.p1);\n\t},\n\ttoString: function () {\n\t\treturn this._upwardSeg.toString();\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn DepthSegment;\n\t}\n});\nSubgraphDepthLocater.DepthSegment = DepthSegment;\n","import Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport Position from '../../geomgraph/Position';\nimport Point from '../../geom/Point';\nimport NodedSegmentString from '../../noding/NodedSegmentString';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport Orientation from '../../algorithm/Orientation';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport Label from '../../geomgraph/Label';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Distance from '../../algorithm/Distance';\nimport MultiLineString from '../../geom/MultiLineString';\nimport Triangle from '../../geom/Triangle';\nexport default function OffsetCurveSetBuilder() {\n\tthis._inputGeom = null;\n\tthis._distance = null;\n\tthis._curveBuilder = null;\n\tthis._curveList = new ArrayList();\n\tlet inputGeom = arguments[0], distance = arguments[1], curveBuilder = arguments[2];\n\tthis._inputGeom = inputGeom;\n\tthis._distance = distance;\n\tthis._curveBuilder = curveBuilder;\n}\nextend(OffsetCurveSetBuilder.prototype, {\n\taddPoint: function (p) {\n\t\tif (this._distance <= 0.0) return null;\n\t\tvar coord = p.getCoordinates();\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddPolygon: function (p) {\n\t\tvar offsetDistance = this._distance;\n\t\tvar offsetSide = Position.LEFT;\n\t\tif (this._distance < 0.0) {\n\t\t\toffsetDistance = -this._distance;\n\t\t\toffsetSide = Position.RIGHT;\n\t\t}\n\t\tvar shell = p.getExteriorRing();\n\t\tvar shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n\t\tif (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) return null;\n\t\tif (this._distance <= 0.0 && shellCoord.length < 3) return null;\n\t\tthis.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n\t\t\tif (this._distance > 0.0 && this.isErodedCompletely(hole, -this._distance)) continue;\n\t\t\tthis.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n\t\t}\n\t},\n\tisTriangleErodedCompletely: function (triangleCoord, bufferDistance) {\n\t\tvar tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n\t\tvar inCentre = tri.inCentre();\n\t\tvar distToCentre = Distance.pointToSegment(inCentre, tri.p0, tri.p1);\n\t\treturn distToCentre < Math.abs(bufferDistance);\n\t},\n\taddLineString: function (line) {\n\t\tif (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) return null;\n\t\tvar coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tvar curve = this._curveBuilder.getLineCurve(coord, this._distance);\n\t\tthis.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n\t},\n\taddCurve: function (coord, leftLoc, rightLoc) {\n\t\tif (coord === null || coord.length < 2) return null;\n\t\tvar e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n\t\tthis._curveList.add(e);\n\t},\n\tgetCurves: function () {\n\t\tthis.add(this._inputGeom);\n\t\treturn this._curveList;\n\t},\n\taddPolygonRing: function (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n\t\tif (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) return null;\n\t\tvar leftLoc = cwLeftLoc;\n\t\tvar rightLoc = cwRightLoc;\n\t\tif (coord.length >= LinearRing.MINIMUM_VALID_SIZE && Orientation.isCCW(coord)) {\n\t\t\tleftLoc = cwRightLoc;\n\t\t\trightLoc = cwLeftLoc;\n\t\t\tside = Position.opposite(side);\n\t\t}\n\t\tvar curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n\t\tthis.addCurve(curve, leftLoc, rightLoc);\n\t},\n\tadd: function (g) {\n\t\tif (g.isEmpty()) return null;\n\t\tif (g instanceof Polygon) this.addPolygon(g); else if (g instanceof LineString) this.addLineString(g); else if (g instanceof Point) this.addPoint(g); else if (g instanceof MultiPoint) this.addCollection(g); else if (g instanceof MultiLineString) this.addCollection(g); else if (g instanceof MultiPolygon) this.addCollection(g); else if (g instanceof GeometryCollection) this.addCollection(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t},\n\tisErodedCompletely: function (ring, bufferDistance) {\n\t\tvar ringCoord = ring.getCoordinates();\n\t\tvar minDiam = 0.0;\n\t\tif (ringCoord.length < 4) return bufferDistance < 0;\n\t\tif (ringCoord.length === 4) return this.isTriangleErodedCompletely(ringCoord, bufferDistance);\n\t\tvar env = ring.getEnvelopeInternal();\n\t\tvar envMinDimension = Math.min(env.getHeight(), env.getWidth());\n\t\tif (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) return true;\n\t\treturn false;\n\t},\n\taddCollection: function (gc) {\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = gc.getGeometryN(i);\n\t\t\tthis.add(g);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OffsetCurveSetBuilder;\n\t}\n});\n","import StringBuffer from '../../../../java/lang/StringBuffer';\nimport Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport System from '../../../../java/lang/System';\nimport SimplePointInAreaLocator from '../algorithm/locate/SimplePointInAreaLocator';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Assert from '../util/Assert';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeEndStar() {\n\tthis._edgeMap = new TreeMap();\n\tthis._edgeList = null;\n\tthis._ptInAreaLocation = [Location.NONE, Location.NONE];\n}\nextend(EdgeEndStar.prototype, {\n\tgetNextCW: function (ee) {\n\t\tthis.getEdges();\n\t\tvar i = this._edgeList.indexOf(ee);\n\t\tvar iNextCW = i - 1;\n\t\tif (i === 0) iNextCW = this._edgeList.size() - 1;\n\t\treturn this._edgeList.get(iNextCW);\n\t},\n\tpropagateSideLabels: function (geomIndex) {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) startLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (label.getLocation(geomIndex, Position.ON) === Location.NONE) label.setLocation(geomIndex, Position.ON, currLoc);\n\t\t\tif (label.isArea(geomIndex)) {\n\t\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\t\tif (rightLoc !== Location.NONE) {\n\t\t\t\t\tif (rightLoc !== currLoc) throw new TopologyException(\"side location conflict\", e.getCoordinate());\n\t\t\t\t\tif (leftLoc === Location.NONE) {\n\t\t\t\t\t\tAssert.shouldNeverReachHere(\"found single null side (at \" + e.getCoordinate() + \")\");\n\t\t\t\t\t}\n\t\t\t\t\tcurrLoc = leftLoc;\n\t\t\t\t} else {\n\t\t\t\t\tAssert.isTrue(label.getLocation(geomIndex, Position.LEFT) === Location.NONE, \"found single null side\");\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.RIGHT, currLoc);\n\t\t\t\t\tlabel.setLocation(geomIndex, Position.LEFT, currLoc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\tprint: function (out) {\n\t\tSystem.out.println(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\te.print(out);\n\t\t}\n\t},\n\tisAreaLabelsConsistent: function (geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n\t\treturn this.checkAreaLabelsConsistent(0);\n\t},\n\tcheckAreaLabelsConsistent: function (geomIndex) {\n\t\tvar edges = this.getEdges();\n\t\tif (edges.size() <= 0) return true;\n\t\tvar lastEdgeIndex = edges.size() - 1;\n\t\tvar startLabel = edges.get(lastEdgeIndex).getLabel();\n\t\tvar startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n\t\tAssert.isTrue(startLoc !== Location.NONE, \"Found unlabelled area edge\");\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tAssert.isTrue(label.isArea(geomIndex), \"Found non-area edge\");\n\t\t\tvar leftLoc = label.getLocation(geomIndex, Position.LEFT);\n\t\t\tvar rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n\t\t\tif (leftLoc === rightLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (rightLoc !== currLoc) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tcurrLoc = leftLoc;\n\t\t}\n\t\treturn true;\n\t},\n\tfindIndex: function (eSearch) {\n\t\tthis.iterator();\n\t\tfor (var i = 0; i < this._edgeList.size(); i++) {\n\t\t\tvar e = this._edgeList.get(i);\n\t\t\tif (e === eSearch) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function () {\n\t\treturn this.getEdges().iterator();\n\t},\n\tgetEdges: function () {\n\t\tif (this._edgeList === null) {\n\t\t\tthis._edgeList = new ArrayList(this._edgeMap.values());\n\t\t}\n\t\treturn this._edgeList;\n\t},\n\tgetLocation: function (geomIndex, p, geom) {\n\t\tif (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n\t\t\tthis._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n\t\t}\n\t\treturn this._ptInAreaLocation[geomIndex];\n\t},\n\ttoString: function () {\n\t\tvar buf = new StringBuffer();\n\t\tbuf.append(\"EdgeEndStar:   \" + this.getCoordinate());\n\t\tbuf.append(\"\\n\");\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tbuf.append(e);\n\t\t\tbuf.append(\"\\n\");\n\t\t}\n\t\treturn buf.toString();\n\t},\n\tcomputeEdgeEndLabels: function (boundaryNodeRule) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.computeLabel(boundaryNodeRule);\n\t\t}\n\t},\n\tcomputeLabelling: function (geomGraph) {\n\t\tthis.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n\t\tthis.propagateSideLabels(0);\n\t\tthis.propagateSideLabels(1);\n\t\tvar hasDimensionalCollapseEdge = [false, false];\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) hasDimensionalCollapseEdge[geomi] = true;\n\t\t\t}\n\t\t}\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tfor (var geomi = 0; geomi < 2; geomi++) {\n\t\t\t\tif (label.isAnyNull(geomi)) {\n\t\t\t\t\tvar loc = Location.NONE;\n\t\t\t\t\tif (hasDimensionalCollapseEdge[geomi]) {\n\t\t\t\t\t\tloc = Location.EXTERIOR;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar p = e.getCoordinate();\n\t\t\t\t\t\tloc = this.getLocation(geomi, p, geomGraph);\n\t\t\t\t\t}\n\t\t\t\t\tlabel.setAllLocationsIfNull(geomi, loc);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tgetDegree: function () {\n\t\treturn this._edgeMap.size();\n\t},\n\tinsertEdgeEnd: function (e, obj) {\n\t\tthis._edgeMap.put(e, obj);\n\t\tthis._edgeList = null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndStar;\n\t}\n});\n","import Location from '../geom/Location';\nimport Position from './Position';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport EdgeEndStar from './EdgeEndStar';\nimport System from '../../../../java/lang/System';\nimport Label from './Label';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from './Quadrant';\nimport Assert from '../util/Assert';\nimport inherits from '../../../../inherits';\nexport default function DirectedEdgeStar() {\n\tEdgeEndStar.apply(this);\n\tthis._resultAreaEdgeList = null;\n\tthis._label = null;\n\tthis._SCANNING_FOR_INCOMING = 1;\n\tthis._LINKING_TO_OUTGOING = 2;\n}\ninherits(DirectedEdgeStar, EdgeEndStar);\nextend(DirectedEdgeStar.prototype, {\n\tlinkResultDirectedEdges: function () {\n\t\tthis.getResultAreaEdges();\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.getLabel().isArea()) continue;\n\t\t\tif (firstOut === null && nextOut.isInResult()) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (!nextIn.isInResult()) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (!nextOut.isInResult()) continue;\n\t\t\t\t\tincoming.setNext(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tif (firstOut === null) throw new TopologyException(\"no outgoing dirEdge found\", this.getCoordinate());\n\t\t\tAssert.isTrue(firstOut.isInResult(), \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNext(firstOut);\n\t\t}\n\t},\n\tinsert: function (ee) {\n\t\tvar de = ee;\n\t\tthis.insertEdgeEnd(de, de);\n\t},\n\tgetRightmostEdge: function () {\n\t\tvar edges = this.getEdges();\n\t\tvar size = edges.size();\n\t\tif (size < 1) return null;\n\t\tvar de0 = edges.get(0);\n\t\tif (size === 1) return de0;\n\t\tvar deLast = edges.get(size - 1);\n\t\tvar quad0 = de0.getQuadrant();\n\t\tvar quad1 = deLast.getQuadrant();\n\t\tif (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) return de0; else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) return deLast; else {\n\t\t\tvar nonHorizontalEdge = null;\n\t\t\tif (de0.getDy() !== 0) return de0; else if (deLast.getDy() !== 0) return deLast;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"found two horizontal edges incident on node\");\n\t\treturn null;\n\t},\n\tprint: function (out) {\n\t\tSystem.out.println(\"DirectedEdgeStar: \" + this.getCoordinate());\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tout.print(\"out \");\n\t\t\tde.print(out);\n\t\t\tout.println();\n\t\t\tout.print(\"in \");\n\t\t\tde.getSym().print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\tgetResultAreaEdges: function () {\n\t\tif (this._resultAreaEdgeList !== null) return this._resultAreaEdgeList;\n\t\tthis._resultAreaEdgeList = new ArrayList();\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() || de.getSym().isInResult()) this._resultAreaEdgeList.add(de);\n\t\t}\n\t\treturn this._resultAreaEdgeList;\n\t},\n\tupdateLabelling: function (nodeLabel) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n\t\t\tlabel.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n\t\t}\n\t},\n\tlinkAllDirectedEdges: function () {\n\t\tthis.getEdges();\n\t\tvar prevOut = null;\n\t\tvar firstIn = null;\n\t\tfor (var i = this._edgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._edgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstIn === null) firstIn = nextIn;\n\t\t\tif (prevOut !== null) nextIn.setNext(prevOut);\n\t\t\tprevOut = nextOut;\n\t\t}\n\t\tfirstIn.setNext(prevOut);\n\t},\n\tcomputeDepths: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar edgeIndex = this.findIndex(de);\n\t\t\tvar label = de.getLabel();\n\t\t\tvar startDepth = de.getDepth(Position.LEFT);\n\t\t\tvar targetLastDepth = de.getDepth(Position.RIGHT);\n\t\t\tvar nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n\t\t\tvar lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n\t\t\tif (lastDepth !== targetLastDepth) throw new TopologyException(\"depth mismatch at \" + de.getCoordinate());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet startIndex = arguments[0], endIndex = arguments[1], startDepth = arguments[2];\n\t\t\tvar currDepth = startDepth;\n\t\t\tfor (var i = startIndex; i < endIndex; i++) {\n\t\t\t\tvar nextDe = this._edgeList.get(i);\n\t\t\t\tvar label = nextDe.getLabel();\n\t\t\t\tnextDe.setEdgeDepths(Position.RIGHT, currDepth);\n\t\t\t\tcurrDepth = nextDe.getDepth(Position.LEFT);\n\t\t\t}\n\t\t\treturn currDepth;\n\t\t}\n\t},\n\tmergeSymLabels: function () {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tlabel.merge(de.getSym().getLabel());\n\t\t}\n\t},\n\tlinkMinimalDirectedEdges: function (er) {\n\t\tvar firstOut = null;\n\t\tvar incoming = null;\n\t\tvar state = this._SCANNING_FOR_INCOMING;\n\t\tfor (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n\t\t\tvar nextOut = this._resultAreaEdgeList.get(i);\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (firstOut === null && nextOut.getEdgeRing() === er) firstOut = nextOut;\n\t\t\tswitch (state) {\n\t\t\t\tcase this._SCANNING_FOR_INCOMING:\n\t\t\t\t\tif (nextIn.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming = nextIn;\n\t\t\t\t\tstate = this._LINKING_TO_OUTGOING;\n\t\t\t\t\tbreak;\n\t\t\t\tcase this._LINKING_TO_OUTGOING:\n\t\t\t\t\tif (nextOut.getEdgeRing() !== er) continue;\n\t\t\t\t\tincoming.setNextMin(nextOut);\n\t\t\t\t\tstate = this._SCANNING_FOR_INCOMING;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (state === this._LINKING_TO_OUTGOING) {\n\t\t\tAssert.isTrue(firstOut !== null, \"found null for first outgoing dirEdge\");\n\t\t\tAssert.isTrue(firstOut.getEdgeRing() === er, \"unable to link last incoming dirEdge\");\n\t\t\tincoming.setNextMin(firstOut);\n\t\t}\n\t},\n\tgetOutgoingDegree: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.isInResult()) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet er = arguments[0];\n\t\t\tvar degree = 0;\n\t\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\t\tvar de = it.next();\n\t\t\t\tif (de.getEdgeRing() === er) degree++;\n\t\t\t}\n\t\t\treturn degree;\n\t\t}\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tfindCoveredLineEdges: function () {\n\t\tvar startLoc = Location.NONE;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (!nextOut.isLineEdge()) {\n\t\t\t\tif (nextOut.isInResult()) {\n\t\t\t\t\tstartLoc = Location.INTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (nextIn.isInResult()) {\n\t\t\t\t\tstartLoc = Location.EXTERIOR;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (startLoc === Location.NONE) return null;\n\t\tvar currLoc = startLoc;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar nextOut = it.next();\n\t\t\tvar nextIn = nextOut.getSym();\n\t\t\tif (nextOut.isLineEdge()) {\n\t\t\t\tnextOut.getEdge().setCovered(currLoc === Location.INTERIOR);\n\t\t\t} else {\n\t\t\t\tif (nextOut.isInResult()) currLoc = Location.EXTERIOR;\n\t\t\t\tif (nextIn.isInResult()) currLoc = Location.INTERIOR;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function (geom) {\n\t\tEdgeEndStar.prototype.computeLabelling.call(this, geom);\n\t\tthis._label = new Label(Location.NONE);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tvar e = ee.getEdge();\n\t\t\tvar eLabel = e.getLabel();\n\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\tvar eLoc = eLabel.getLocation(i);\n\t\t\t\tif (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) this._label.setLocation(i, Location.INTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n","import DirectedEdgeStar from '../../geomgraph/DirectedEdgeStar';\nimport Node from '../../geomgraph/Node';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default function OverlayNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(OverlayNodeFactory, NodeFactory);\nextend(OverlayNodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new Node(coord, new DirectedEdgeStar());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OverlayNodeFactory;\n\t}\n});\n","import extend from '../../../../extend';\nimport Comparable from '../../../../java/lang/Comparable';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nexport default function OrientedCoordinateArray() {\n\tthis._pts = null;\n\tthis._orientation = null;\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n\tthis._orientation = OrientedCoordinateArray.orientation(pts);\n}\nextend(OrientedCoordinateArray.prototype, {\n\tcompareTo: function (o1) {\n\t\tvar oca = o1;\n\t\tvar comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n\t\treturn comp;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn OrientedCoordinateArray;\n\t}\n});\nOrientedCoordinateArray.orientation = function (pts) {\n\treturn CoordinateArrays.increasingDirection(pts) === 1;\n};\nOrientedCoordinateArray.compareOriented = function (pts1, orientation1, pts2, orientation2) {\n\tvar dir1 = orientation1 ? 1 : -1;\n\tvar dir2 = orientation2 ? 1 : -1;\n\tvar limit1 = orientation1 ? pts1.length : -1;\n\tvar limit2 = orientation2 ? pts2.length : -1;\n\tvar i1 = orientation1 ? 0 : pts1.length - 1;\n\tvar i2 = orientation2 ? 0 : pts2.length - 1;\n\tvar comp = 0;\n\twhile (true) {\n\t\tvar compPt = pts1[i1].compareTo(pts2[i2]);\n\t\tif (compPt !== 0) return compPt;\n\t\ti1 += dir1;\n\t\ti2 += dir2;\n\t\tvar done1 = i1 === limit1;\n\t\tvar done2 = i2 === limit2;\n\t\tif (done1 && !done2) return -1;\n\t\tif (!done1 && done2) return 1;\n\t\tif (done1 && done2) return 0;\n\t}\n};\n","import OrientedCoordinateArray from '../noding/OrientedCoordinateArray';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function EdgeList() {\n\tthis._edges = new ArrayList();\n\tthis._ocaMap = new TreeMap();\n}\nextend(EdgeList.prototype, {\n\tprint: function (out) {\n\t\tout.print(\"MULTILINESTRING ( \");\n\t\tfor (var j = 0; j < this._edges.size(); j++) {\n\t\t\tvar e = this._edges.get(j);\n\t\t\tif (j > 0) out.print(\",\");\n\t\t\tout.print(\"(\");\n\t\t\tvar pts = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\t\tif (i > 0) out.print(\",\");\n\t\t\t\tout.print(pts[i].x + \" \" + pts[i].y);\n\t\t\t}\n\t\t\tout.println(\")\");\n\t\t}\n\t\tout.print(\")  \");\n\t},\n\taddAll: function (edgeColl) {\n\t\tfor (var i = edgeColl.iterator(); i.hasNext(); ) {\n\t\t\tthis.add(i.next());\n\t\t}\n\t},\n\tfindEdgeIndex: function (e) {\n\t\tfor (var i = 0; i < this._edges.size(); i++) {\n\t\t\tif (this._edges.get(i).equals(e)) return i;\n\t\t}\n\t\treturn -1;\n\t},\n\titerator: function () {\n\t\treturn this._edges.iterator();\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tget: function (i) {\n\t\treturn this._edges.get(i);\n\t},\n\tfindEqualEdge: function (e) {\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tvar matchEdge = this._ocaMap.get(oca);\n\t\treturn matchEdge;\n\t},\n\tadd: function (e) {\n\t\tthis._edges.add(e);\n\t\tvar oca = new OrientedCoordinateArray(e.getCoordinates());\n\t\tthis._ocaMap.put(oca, e);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeList;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function SegmentIntersector() {}\nextend(SegmentIntersector.prototype, {\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {},\n\tisDone: function () {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SegmentIntersector;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nexport default function IntersectionAdder() {\n\tthis._hasIntersection = false;\n\tthis._hasProper = false;\n\tthis._hasProperInterior = false;\n\tthis._hasInterior = false;\n\tthis._properIntersectionPoint = null;\n\tthis._li = null;\n\tthis._isSelfIntersection = null;\n\tthis.numIntersections = 0;\n\tthis.numInteriorIntersections = 0;\n\tthis.numProperIntersections = 0;\n\tthis.numTests = 0;\n\tlet li = arguments[0];\n\tthis._li = li;\n}\nextend(IntersectionAdder.prototype, {\n\tisTrivialIntersection: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1) {\n\t\t\tif (this._li.getIntersectionNum() === 1) {\n\t\t\t\tif (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) return true;\n\t\t\t\tif (e0.isClosed()) {\n\t\t\t\t\tvar maxSegIndex = e0.size() - 1;\n\t\t\t\t\tif (segIndex0 === 0 && segIndex1 === maxSegIndex || segIndex1 === 0 && segIndex0 === maxSegIndex) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tgetProperIntersectionPoint: function () {\n\t\treturn this._properIntersectionPoint;\n\t},\n\thasProperInteriorIntersection: function () {\n\t\treturn this._hasProperInterior;\n\t},\n\tgetLineIntersector: function () {\n\t\treturn this._li;\n\t},\n\thasProperIntersection: function () {\n\t\treturn this._hasProper;\n\t},\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tthis.numTests++;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tthis.numIntersections++;\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis.numInteriorIntersections++;\n\t\t\t\tthis._hasInterior = true;\n\t\t\t}\n\t\t\tif (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t\tif (this._li.isProper()) {\n\t\t\t\t\tthis.numProperIntersections++;\n\t\t\t\t\tthis._hasProper = true;\n\t\t\t\t\tthis._hasProperInterior = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\thasIntersection: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\thasInteriorIntersection: function () {\n\t\treturn this._hasInterior;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn IntersectionAdder;\n\t}\n});\nIntersectionAdder.isAdjacentSegments = function (i1, i2) {\n\treturn Math.abs(i1 - i2) === 1;\n};\n","import Location from '../../geom/Location';\nimport BufferSubgraph from './BufferSubgraph';\nimport PolygonBuilder from '../overlay/PolygonBuilder';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport MCIndexNoder from '../../noding/MCIndexNoder';\nimport OffsetCurveBuilder from './OffsetCurveBuilder';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport SubgraphDepthLocater from './SubgraphDepthLocater';\nimport OffsetCurveSetBuilder from './OffsetCurveSetBuilder';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport IntersectionAdder from '../../noding/IntersectionAdder';\nimport Edge from '../../geomgraph/Edge';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function BufferBuilder() {\n\tthis._bufParams = null;\n\tthis._workingPrecisionModel = null;\n\tthis._workingNoder = null;\n\tthis._geomFact = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tlet bufParams = arguments[0];\n\tthis._bufParams = bufParams;\n}\nextend(BufferBuilder.prototype, {\n\tsetWorkingPrecisionModel: function (pm) {\n\t\tthis._workingPrecisionModel = pm;\n\t},\n\tinsertUniqueEdge: function (e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t\tvar mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n\t\t\tvar existingDelta = existingEdge.getDepthDelta();\n\t\t\tvar newDelta = existingDelta + mergeDelta;\n\t\t\texistingEdge.setDepthDelta(newDelta);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t\te.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n\t\t}\n\t},\n\tbuildSubgraphs: function (subgraphList, polyBuilder) {\n\t\tvar processedGraphs = new ArrayList();\n\t\tfor (var i = subgraphList.iterator(); i.hasNext(); ) {\n\t\t\tvar subgraph = i.next();\n\t\t\tvar p = subgraph.getRightmostCoordinate();\n\t\t\tvar locater = new SubgraphDepthLocater(processedGraphs);\n\t\t\tvar outsideDepth = locater.getDepth(p);\n\t\t\tsubgraph.computeDepth(outsideDepth);\n\t\t\tsubgraph.findResultEdges();\n\t\t\tprocessedGraphs.add(subgraph);\n\t\t\tpolyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n\t\t}\n\t},\n\tcreateSubgraphs: function (graph) {\n\t\tvar subgraphList = new ArrayList();\n\t\tfor (var i = graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isVisited()) {\n\t\t\t\tvar subgraph = new BufferSubgraph();\n\t\t\t\tsubgraph.create(node);\n\t\t\t\tsubgraphList.add(subgraph);\n\t\t\t}\n\t\t}\n\t\tCollections.sort(subgraphList, Collections.reverseOrder());\n\t\treturn subgraphList;\n\t},\n\tcreateEmptyResultGeometry: function () {\n\t\tvar emptyGeom = this._geomFact.createPolygon();\n\t\treturn emptyGeom;\n\t},\n\tgetNoder: function (precisionModel) {\n\t\tif (this._workingNoder !== null) return this._workingNoder;\n\t\tvar noder = new MCIndexNoder();\n\t\tvar li = new RobustLineIntersector();\n\t\tli.setPrecisionModel(precisionModel);\n\t\tnoder.setSegmentIntersector(new IntersectionAdder(li));\n\t\treturn noder;\n\t},\n\tbuffer: function (g, distance) {\n\t\tvar precisionModel = this._workingPrecisionModel;\n\t\tif (precisionModel === null) precisionModel = g.getPrecisionModel();\n\t\tthis._geomFact = g.getFactory();\n\t\tvar curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n\t\tvar curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n\t\tvar bufferSegStrList = curveSetBuilder.getCurves();\n\t\tif (bufferSegStrList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tthis.computeNodedEdges(bufferSegStrList, precisionModel);\n\t\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tvar subgraphList = this.createSubgraphs(this._graph);\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tthis.buildSubgraphs(subgraphList, polyBuilder);\n\t\tvar resultPolyList = polyBuilder.getPolygons();\n\t\tif (resultPolyList.size() <= 0) {\n\t\t\treturn this.createEmptyResultGeometry();\n\t\t}\n\t\tvar resultGeom = this._geomFact.buildGeometry(resultPolyList);\n\t\treturn resultGeom;\n\t},\n\tcomputeNodedEdges: function (bufferSegStrList, precisionModel) {\n\t\tvar noder = this.getNoder(precisionModel);\n\t\tnoder.computeNodes(bufferSegStrList);\n\t\tvar nodedSegStrings = noder.getNodedSubstrings();\n\t\tfor (var i = nodedSegStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar segStr = i.next();\n\t\t\tvar pts = segStr.getCoordinates();\n\t\t\tif (pts.length === 2 && pts[0].equals2D(pts[1])) continue;\n\t\t\tvar oldLabel = segStr.getData();\n\t\t\tvar edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n\t\t\tthis.insertUniqueEdge(edge);\n\t\t}\n\t},\n\tsetNoder: function (noder) {\n\t\tthis._workingNoder = noder;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferBuilder;\n\t}\n});\nBufferBuilder.depthDelta = function (label) {\n\tvar lLoc = label.getLocation(0, Position.LEFT);\n\tvar rLoc = label.getLocation(0, Position.RIGHT);\n\tif (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) return 1; else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) return -1;\n\treturn 0;\n};\nBufferBuilder.convertSegStrings = function (it) {\n\tvar fact = new GeometryFactory();\n\tvar lines = new ArrayList();\n\twhile (it.hasNext()) {\n\t\tvar ss = it.next();\n\t\tvar line = fact.createLineString(ss.getCoordinates());\n\t\tlines.add(line);\n\t}\n\treturn fact.buildGeometry(lines);\n};\n","import GeometryFactory from '../geom/GeometryFactory';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport RuntimeException from '../../../../java/lang/RuntimeException';\nexport default function NodingValidator() {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tlet segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n}\nextend(NodingValidator.prototype, {\n\tcheckEndPtVertexIntersections: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[0], this._segStrings);\n\t\t\t\tthis.checkEndPtVertexIntersections(pts[pts.length - 1], this._segStrings);\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet testPt = arguments[0], segStrings = arguments[1];\n\t\t\tfor (var i = segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tvar pts = ss.getCoordinates();\n\t\t\t\tfor (var j = 1; j < pts.length - 1; j++) {\n\t\t\t\t\tif (pts[j].equals(testPt)) throw new RuntimeException(\"found endpt/interior pt intersection at index \" + j + \" :pt \" + testPt);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckInteriorIntersections: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss0 = i.next();\n\t\t\t\tfor (var j = this._segStrings.iterator(); j.hasNext(); ) {\n\t\t\t\t\tvar ss1 = j.next();\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, ss1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet ss0 = arguments[0], ss1 = arguments[1];\n\t\t\tvar pts0 = ss0.getCoordinates();\n\t\t\tvar pts1 = ss1.getCoordinates();\n\t\t\tfor (var i0 = 0; i0 < pts0.length - 1; i0++) {\n\t\t\t\tfor (var i1 = 0; i1 < pts1.length - 1; i1++) {\n\t\t\t\t\tthis.checkInteriorIntersections(ss0, i0, ss1, i1);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 4) {\n\t\t\tlet e0 = arguments[0], segIndex0 = arguments[1], e1 = arguments[2], segIndex1 = arguments[3];\n\t\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\t\tif (this._li.hasIntersection()) {\n\t\t\t\tif (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n\t\t\t\t\tthrow new RuntimeException(\"found non-noded intersection at \" + p00 + \"-\" + p01 + \" and \" + p10 + \"-\" + p11);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcheckValid: function () {\n\t\tthis.checkEndPtVertexIntersections();\n\t\tthis.checkInteriorIntersections();\n\t\tthis.checkCollapses();\n\t},\n\tcheckCollapses: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var i = this._segStrings.iterator(); i.hasNext(); ) {\n\t\t\t\tvar ss = i.next();\n\t\t\t\tthis.checkCollapses(ss);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet ss = arguments[0];\n\t\t\tvar pts = ss.getCoordinates();\n\t\t\tfor (var i = 0; i < pts.length - 2; i++) {\n\t\t\t\tthis.checkCollapse(pts[i], pts[i + 1], pts[i + 2]);\n\t\t\t}\n\t\t}\n\t},\n\thasInteriorIntersection: function (li, p0, p1) {\n\t\tfor (var i = 0; i < li.getIntersectionNum(); i++) {\n\t\t\tvar intPt = li.getIntersection(i);\n\t\t\tif (!(intPt.equals(p0) || intPt.equals(p1))) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tcheckCollapse: function (p0, p1, p2) {\n\t\tif (p0.equals(p2)) throw new RuntimeException(\"found non-noded collapse at \" + NodingValidator.fact.createLineString([p0, p1, p2]));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodingValidator;\n\t}\n});\nNodingValidator.fact = new GeometryFactory();\n","import Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../../extend';\nimport Envelope from '../../geom/Envelope';\nimport Assert from '../../util/Assert';\nexport default function HotPixel() {\n\tthis._li = null;\n\tthis._pt = null;\n\tthis._originalPt = null;\n\tthis._ptScaled = null;\n\tthis._p0Scaled = null;\n\tthis._p1Scaled = null;\n\tthis._scaleFactor = null;\n\tthis._minx = null;\n\tthis._maxx = null;\n\tthis._miny = null;\n\tthis._maxy = null;\n\tthis._corner = new Array(4).fill(null);\n\tthis._safeEnv = null;\n\tlet pt = arguments[0], scaleFactor = arguments[1], li = arguments[2];\n\tthis._originalPt = pt;\n\tthis._pt = pt;\n\tthis._scaleFactor = scaleFactor;\n\tthis._li = li;\n\tif (scaleFactor <= 0) throw new IllegalArgumentException(\"Scale factor must be non-zero\");\n\tif (scaleFactor !== 1.0) {\n\t\tthis._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n\t\tthis._p0Scaled = new Coordinate();\n\t\tthis._p1Scaled = new Coordinate();\n\t}\n\tthis.initCorners(this._pt);\n}\nextend(HotPixel.prototype, {\n\tintersectsScaled: function (p0, p1) {\n\t\tvar segMinx = Math.min(p0.x, p1.x);\n\t\tvar segMaxx = Math.max(p0.x, p1.x);\n\t\tvar segMiny = Math.min(p0.y, p1.y);\n\t\tvar segMaxy = Math.max(p0.y, p1.y);\n\t\tvar isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n\t\tif (isOutsidePixelEnv) return false;\n\t\tvar intersects = this.intersectsToleranceSquare(p0, p1);\n\t\tAssert.isTrue(!(isOutsidePixelEnv && intersects), \"Found bad envelope test\");\n\t\treturn intersects;\n\t},\n\tinitCorners: function (pt) {\n\t\tvar tolerance = 0.5;\n\t\tthis._minx = pt.x - tolerance;\n\t\tthis._maxx = pt.x + tolerance;\n\t\tthis._miny = pt.y - tolerance;\n\t\tthis._maxy = pt.y + tolerance;\n\t\tthis._corner[0] = new Coordinate(this._maxx, this._maxy);\n\t\tthis._corner[1] = new Coordinate(this._minx, this._maxy);\n\t\tthis._corner[2] = new Coordinate(this._minx, this._miny);\n\t\tthis._corner[3] = new Coordinate(this._maxx, this._miny);\n\t},\n\tintersects: function (p0, p1) {\n\t\tif (this._scaleFactor === 1.0) return this.intersectsScaled(p0, p1);\n\t\tthis.copyScaled(p0, this._p0Scaled);\n\t\tthis.copyScaled(p1, this._p1Scaled);\n\t\treturn this.intersectsScaled(this._p0Scaled, this._p1Scaled);\n\t},\n\tscale: function (val) {\n\t\treturn Math.round(val * this._scaleFactor);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._originalPt;\n\t},\n\tcopyScaled: function (p, pScaled) {\n\t\tpScaled.x = this.scale(p.x);\n\t\tpScaled.y = this.scale(p.y);\n\t},\n\tgetSafeEnvelope: function () {\n\t\tif (this._safeEnv === null) {\n\t\t\tvar safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n\t\t\tthis._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n\t\t}\n\t\treturn this._safeEnv;\n\t},\n\tintersectsPixelClosure: function (p0, p1) {\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tintersectsToleranceSquare: function (p0, p1) {\n\t\tvar intersectsLeft = false;\n\t\tvar intersectsBottom = false;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n\t\tif (this._li.isProper()) return true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsLeft = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (this._li.hasIntersection()) intersectsBottom = true;\n\t\tthis._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n\t\tif (this._li.isProper()) return true;\n\t\tif (intersectsLeft && intersectsBottom) return true;\n\t\tif (p0.equals(this._pt)) return true;\n\t\tif (p1.equals(this._pt)) return true;\n\t\treturn false;\n\t},\n\taddSnappedNode: function (segStr, segIndex) {\n\t\tvar p0 = segStr.getCoordinate(segIndex);\n\t\tvar p1 = segStr.getCoordinate(segIndex + 1);\n\t\tif (this.intersects(p0, p1)) {\n\t\t\tsegStr.addIntersection(this.getCoordinate(), segIndex);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HotPixel;\n\t}\n});\nHotPixel.SAFE_ENV_EXPANSION_FACTOR = 0.75;\n","import MonotoneChainSelectAction from '../../index/chain/MonotoneChainSelectAction';\nimport MonotoneChain from '../../index/chain/MonotoneChain';\nimport ItemVisitor from '../../index/ItemVisitor';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function MCIndexPointSnapper() {\n\tthis._index = null;\n\tlet index = arguments[0];\n\tthis._index = index;\n}\nextend(MCIndexPointSnapper.prototype, {\n\tsnap: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet hotPixel = arguments[0];\n\t\t\treturn this.snap(hotPixel, null, -1);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\t\t\tvar pixelEnv = hotPixel.getSafeEnvelope();\n\t\t\tvar hotPixelSnapAction = new HotPixelSnapAction(hotPixel, parentEdge, hotPixelVertexIndex);\n\t\t\tthis._index.query(pixelEnv, {\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [ItemVisitor];\n\t\t\t\t},\n\t\t\t\tvisitItem: function (item) {\n\t\t\t\t\tvar testChain = item;\n\t\t\t\t\ttestChain.select(pixelEnv, hotPixelSnapAction);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn hotPixelSnapAction.isNodeAdded();\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexPointSnapper;\n\t}\n});\nfunction HotPixelSnapAction() {\n\tMonotoneChainSelectAction.apply(this);\n\tthis._hotPixel = null;\n\tthis._parentEdge = null;\n\tthis._hotPixelVertexIndex = null;\n\tthis._isNodeAdded = false;\n\tlet hotPixel = arguments[0], parentEdge = arguments[1], hotPixelVertexIndex = arguments[2];\n\tthis._hotPixel = hotPixel;\n\tthis._parentEdge = parentEdge;\n\tthis._hotPixelVertexIndex = hotPixelVertexIndex;\n}\ninherits(HotPixelSnapAction, MonotoneChainSelectAction);\nextend(HotPixelSnapAction.prototype, {\n\tisNodeAdded: function () {\n\t\treturn this._isNodeAdded;\n\t},\n\tselect: function () {\n\t\tif (arguments.length === 2 && (Number.isInteger(arguments[1]) && arguments[0] instanceof MonotoneChain)) {\n\t\t\tlet mc = arguments[0], startIndex = arguments[1];\n\t\t\tvar ss = mc.getContext();\n\t\t\tif (this._parentEdge !== null) {\n\t\t\t\tif (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) return null;\n\t\t\t}\n\t\t\tthis._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n\t\t} else return MonotoneChainSelectAction.prototype.select.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn HotPixelSnapAction;\n\t}\n});\nMCIndexPointSnapper.HotPixelSnapAction = HotPixelSnapAction;\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function InteriorIntersectionFinderAdder() {\n\tthis._li = null;\n\tthis._interiorIntersections = null;\n\tlet li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersections = new ArrayList();\n}\nextend(InteriorIntersectionFinderAdder.prototype, {\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tfor (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n\t\t\t\t\tthis._interiorIntersections.add(this._li.getIntersection(intIndex));\n\t\t\t\t}\n\t\t\t\te0.addIntersections(this._li, segIndex0, 0);\n\t\t\t\te1.addIntersections(this._li, segIndex1, 1);\n\t\t\t}\n\t\t}\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\tgetInteriorIntersections: function () {\n\t\treturn this._interiorIntersections;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorIntersectionFinderAdder;\n\t}\n});\n","import NodingValidator from '../NodingValidator';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport Noder from '../Noder';\nimport MCIndexNoder from '../MCIndexNoder';\nimport NodedSegmentString from '../NodedSegmentString';\nimport HotPixel from './HotPixel';\nimport extend from '../../../../../extend';\nimport Exception from '../../../../../java/lang/Exception';\nimport MCIndexPointSnapper from './MCIndexPointSnapper';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinderAdder from '../InteriorIntersectionFinderAdder';\nexport default function MCIndexSnapRounder() {\n\tthis._pm = null;\n\tthis._li = null;\n\tthis._scaleFactor = null;\n\tthis._noder = null;\n\tthis._pointSnapper = null;\n\tthis._nodedSegStrings = null;\n\tlet pm = arguments[0];\n\tthis._pm = pm;\n\tthis._li = new RobustLineIntersector();\n\tthis._li.setPrecisionModel(pm);\n\tthis._scaleFactor = pm.getScale();\n}\nextend(MCIndexSnapRounder.prototype, {\n\tcheckCorrectness: function (inputSegmentStrings) {\n\t\tvar resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n\t\tvar nv = new NodingValidator(resultSegStrings);\n\t\ttry {\n\t\t\tnv.checkValid();\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tex.printStackTrace();\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetNodedSubstrings: function () {\n\t\treturn NodedSegmentString.getNodedSubstrings(this._nodedSegStrings);\n\t},\n\tsnapRound: function (segStrings, li) {\n\t\tvar intersections = this.findInteriorIntersections(segStrings, li);\n\t\tthis.computeIntersectionSnaps(intersections);\n\t\tthis.computeVertexSnaps(segStrings);\n\t},\n\tfindInteriorIntersections: function (segStrings, li) {\n\t\tvar intFinderAdder = new InteriorIntersectionFinderAdder(li);\n\t\tthis._noder.setSegmentIntersector(intFinderAdder);\n\t\tthis._noder.computeNodes(segStrings);\n\t\treturn intFinderAdder.getInteriorIntersections();\n\t},\n\tcomputeVertexSnaps: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet edges = arguments[0];\n\t\t\tfor (var i0 = edges.iterator(); i0.hasNext(); ) {\n\t\t\t\tvar edge0 = i0.next();\n\t\t\t\tthis.computeVertexSnaps(edge0);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof NodedSegmentString) {\n\t\t\tlet e = arguments[0];\n\t\t\tvar pts0 = e.getCoordinates();\n\t\t\tfor (var i = 0; i < pts0.length; i++) {\n\t\t\t\tvar hotPixel = new HotPixel(pts0[i], this._scaleFactor, this._li);\n\t\t\t\tvar isNodeAdded = this._pointSnapper.snap(hotPixel, e, i);\n\t\t\t\tif (isNodeAdded) {\n\t\t\t\t\te.addIntersection(pts0[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeNodes: function (inputSegmentStrings) {\n\t\tthis._nodedSegStrings = inputSegmentStrings;\n\t\tthis._noder = new MCIndexNoder();\n\t\tthis._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n\t\tthis.snapRound(inputSegmentStrings, this._li);\n\t},\n\tcomputeIntersectionSnaps: function (snapPts) {\n\t\tfor (var it = snapPts.iterator(); it.hasNext(); ) {\n\t\t\tvar snapPt = it.next();\n\t\t\tvar hotPixel = new HotPixel(snapPt, this._scaleFactor, this._li);\n\t\t\tthis._pointSnapper.snap(hotPixel);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [Noder];\n\t},\n\tgetClass: function () {\n\t\treturn MCIndexSnapRounder;\n\t}\n});\n","import BufferParameters from './BufferParameters';\nimport Geometry from '../../geom/Geometry';\nimport BufferBuilder from './BufferBuilder';\nimport ScaledNoder from '../../noding/ScaledNoder';\nimport TopologyException from '../../geom/TopologyException';\nimport extend from '../../../../../extend';\nimport MathUtil from '../../math/MathUtil';\nimport PrecisionModel from '../../geom/PrecisionModel';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nimport MCIndexSnapRounder from '../../noding/snapround/MCIndexSnapRounder';\nexport default function BufferOp() {\n\tthis._argGeom = null;\n\tthis._distance = null;\n\tthis._bufParams = new BufferParameters();\n\tthis._resultGeometry = null;\n\tthis._saveException = null;\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tthis._argGeom = g;\n\t} else if (arguments.length === 2) {\n\t\tlet g = arguments[0], bufParams = arguments[1];\n\t\tthis._argGeom = g;\n\t\tthis._bufParams = bufParams;\n\t}\n}\nextend(BufferOp.prototype, {\n\tbufferFixedPrecision: function (fixedPM) {\n\t\tvar noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\tbufBuilder.setWorkingPrecisionModel(fixedPM);\n\t\tbufBuilder.setNoder(noder);\n\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t},\n\tbufferReducedPrecision: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tfor (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.bufferReducedPrecision(precDigits);\n\t\t\t\t} catch (ex) {\n\t\t\t\t\tif (ex instanceof TopologyException) {\n\t\t\t\t\t\tthis._saveException = ex;\n\t\t\t\t\t} else throw ex;\n\t\t\t\t} finally {}\n\t\t\t\tif (this._resultGeometry !== null) return null;\n\t\t\t}\n\t\t\tthrow this._saveException;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet precisionDigits = arguments[0];\n\t\t\tvar sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n\t\t\tvar fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n\t\t\tthis.bufferFixedPrecision(fixedPM);\n\t\t}\n\t},\n\tcomputeGeometry: function () {\n\t\tthis.bufferOriginalPrecision();\n\t\tif (this._resultGeometry !== null) return null;\n\t\tvar argPM = this._argGeom.getFactory().getPrecisionModel();\n\t\tif (argPM.getType() === PrecisionModel.FIXED) this.bufferFixedPrecision(argPM); else this.bufferReducedPrecision();\n\t},\n\tsetQuadrantSegments: function (quadrantSegments) {\n\t\tthis._bufParams.setQuadrantSegments(quadrantSegments);\n\t},\n\tbufferOriginalPrecision: function () {\n\t\ttry {\n\t\t\tvar bufBuilder = new BufferBuilder(this._bufParams);\n\t\t\tthis._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tthis._saveException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t},\n\tgetResultGeometry: function (distance) {\n\t\tthis._distance = distance;\n\t\tthis.computeGeometry();\n\t\treturn this._resultGeometry;\n\t},\n\tsetEndCapStyle: function (endCapStyle) {\n\t\tthis._bufParams.setEndCapStyle(endCapStyle);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn BufferOp;\n\t}\n});\nBufferOp.bufferOp = function () {\n\tif (arguments.length === 2) {\n\t\tlet g = arguments[0], distance = arguments[1];\n\t\tvar gBuf = new BufferOp(g);\n\t\tvar geomBuf = gBuf.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t} else if (arguments.length === 3) {\n\t\tif (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g);\n\t\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t} else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === \"number\")) {\n\t\t\tlet g = arguments[0], distance = arguments[1], params = arguments[2];\n\t\t\tvar bufOp = new BufferOp(g, params);\n\t\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\t\treturn geomBuf;\n\t\t}\n\t} else if (arguments.length === 4) {\n\t\tlet g = arguments[0], distance = arguments[1], quadrantSegments = arguments[2], endCapStyle = arguments[3];\n\t\tvar bufOp = new BufferOp(g);\n\t\tbufOp.setQuadrantSegments(quadrantSegments);\n\t\tbufOp.setEndCapStyle(endCapStyle);\n\t\tvar geomBuf = bufOp.getResultGeometry(distance);\n\t\treturn geomBuf;\n\t}\n};\nBufferOp.precisionScaleFactor = function (g, distance, maxPrecisionDigits) {\n\tvar env = g.getEnvelopeInternal();\n\tvar envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n\tvar expandByDistance = distance > 0.0 ? distance : 0.0;\n\tvar bufEnvMax = envMax + 2 * expandByDistance;\n\tvar bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n\tvar minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n\tvar scaleFactor = Math.pow(10.0, minUnitLog10);\n\treturn scaleFactor;\n};\nBufferOp.CAP_ROUND = BufferParameters.CAP_ROUND;\nBufferOp.CAP_BUTT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_FLAT = BufferParameters.CAP_FLAT;\nBufferOp.CAP_SQUARE = BufferParameters.CAP_SQUARE;\nBufferOp.MAX_PRECISION_DIGITS = 12;\n","import Polygon from '../Polygon';\nimport extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default function PolygonExtracter() {\n\tthis._comps = null;\n\tlet comps = arguments[0];\n\tthis._comps = comps;\n}\nextend(PolygonExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Polygon) this._comps.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonExtracter;\n\t}\n});\nPolygonExtracter.getPolygons = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\treturn PolygonExtracter.getPolygons(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], list = arguments[1];\n\t\tif (geom instanceof Polygon) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PolygonExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n","import extend from '../../../../../extend';\nexport default function GeometryLocation() {\n\tthis._component = null;\n\tthis._segIndex = null;\n\tthis._pt = null;\n\tif (arguments.length === 2) {\n\t\tlet component = arguments[0], pt = arguments[1];\n\t\tGeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n\t} else if (arguments.length === 3) {\n\t\tlet component = arguments[0], segIndex = arguments[1], pt = arguments[2];\n\t\tthis._component = component;\n\t\tthis._segIndex = segIndex;\n\t\tthis._pt = pt;\n\t}\n}\nextend(GeometryLocation.prototype, {\n\tisInsideArea: function () {\n\t\treturn this._segIndex === GeometryLocation.INSIDE_AREA;\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._pt;\n\t},\n\tgetGeometryComponent: function () {\n\t\treturn this._component;\n\t},\n\tgetSegmentIndex: function () {\n\t\treturn this._segIndex;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryLocation;\n\t}\n});\nGeometryLocation.INSIDE_AREA = -1;\n","import Point from '../Point';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nexport default function PointExtracter() {\n\tthis._pts = null;\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n}\nextend(PointExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Point) this._pts.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn PointExtracter;\n\t}\n});\nPointExtracter.getPoints = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tif (geom instanceof Point) {\n\t\t\treturn Collections.singletonList(geom);\n\t\t}\n\t\treturn PointExtracter.getPoints(geom, new ArrayList());\n\t} else if (arguments.length === 2) {\n\t\tlet geom = arguments[0], list = arguments[1];\n\t\tif (geom instanceof Point) {\n\t\t\tlist.add(geom);\n\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\tgeom.apply(new PointExtracter(list));\n\t\t}\n\t\treturn list;\n\t}\n};\n","import LineString from '../../geom/LineString';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../../geom/GeometryFilter';\nexport default function ConnectedElementLocationFilter() {\n\tthis._locations = null;\n\tlet locations = arguments[0];\n\tthis._locations = locations;\n}\nextend(ConnectedElementLocationFilter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate()));\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn ConnectedElementLocationFilter;\n\t}\n});\nConnectedElementLocationFilter.getLocations = function (geom) {\n\tvar locations = new ArrayList();\n\tgeom.apply(new ConnectedElementLocationFilter(locations));\n\treturn locations;\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport Location from '../../geom/Location';\nimport LineString from '../../geom/LineString';\nimport hasInterface from '../../../../../hasInterface';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport GeometryLocation from './GeometryLocation';\nimport Double from '../../../../../java/lang/Double';\nimport PointExtracter from '../../geom/util/PointExtracter';\nimport extend from '../../../../../extend';\nimport ConnectedElementLocationFilter from './ConnectedElementLocationFilter';\nimport LineSegment from '../../geom/LineSegment';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport List from '../../../../../java/util/List';\nimport Distance from '../../algorithm/Distance';\nexport default function DistanceOp() {\n\tthis._geom = null;\n\tthis._terminateDistance = 0.0;\n\tthis._ptLocator = new PointLocator();\n\tthis._minDistanceLocation = null;\n\tthis._minDistance = Double.MAX_VALUE;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tDistanceOp.call(this, g0, g1, 0.0);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], terminateDistance = arguments[2];\n\t\tthis._geom = new Array(2).fill(null);\n\t\tthis._geom[0] = g0;\n\t\tthis._geom[1] = g1;\n\t\tthis._terminateDistance = terminateDistance;\n\t}\n}\nextend(DistanceOp.prototype, {\n\tcomputeContainmentDistance: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tvar locPtPoly = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance(0, locPtPoly);\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeContainmentDistance(1, locPtPoly);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet polyGeomIndex = arguments[0], locPtPoly = arguments[1];\n\t\t\tvar polyGeom = this._geom[polyGeomIndex];\n\t\t\tif (polyGeom.getDimension() < 2) return null;\n\t\t\tvar locationsIndex = 1 - polyGeomIndex;\n\t\t\tvar polys = PolygonExtracter.getPolygons(polyGeom);\n\t\t\tif (polys.size() > 0) {\n\t\t\t\tvar insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n\t\t\t\tthis.computeContainmentDistance(insideLocs, polys, locPtPoly);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) {\n\t\t\t\t\tthis._minDistanceLocation[locationsIndex] = locPtPoly[0];\n\t\t\t\t\tthis._minDistanceLocation[polyGeomIndex] = locPtPoly[1];\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n\t\t\t\tlet locs = arguments[0], polys = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tfor (var i = 0; i < locs.size(); i++) {\n\t\t\t\t\tvar loc = locs.get(i);\n\t\t\t\t\tfor (var j = 0; j < polys.size(); j++) {\n\t\t\t\t\t\tthis.computeContainmentDistance(loc, polys.get(j), locPtPoly);\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n\t\t\t\tlet ptLoc = arguments[0], poly = arguments[1], locPtPoly = arguments[2];\n\t\t\t\tvar pt = ptLoc.getCoordinate();\n\t\t\t\tif (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n\t\t\t\t\tthis._minDistance = 0.0;\n\t\t\t\t\tlocPtPoly[0] = ptLoc;\n\t\t\t\t\tlocPtPoly[1] = new GeometryLocation(poly, pt);\n\t\t\t\t\t;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistanceLinesPoints: function (lines, points, locGeom) {\n\t\tfor (var i = 0; i < lines.size(); i++) {\n\t\t\tvar line = lines.get(i);\n\t\t\tfor (var j = 0; j < points.size(); j++) {\n\t\t\t\tvar pt = points.get(j);\n\t\t\t\tthis.computeMinDistance(line, pt, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcomputeFacetDistance: function () {\n\t\tvar locGeom = new Array(2).fill(null);\n\t\tvar lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n\t\tvar lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n\t\tvar pts0 = PointExtracter.getPoints(this._geom[0]);\n\t\tvar pts1 = PointExtracter.getPoints(this._geom[1]);\n\t\tthis.computeMinDistanceLines(lines0, lines1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n\t\tthis.updateMinDistance(locGeom, true);\n\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\tlocGeom[0] = null;\n\t\tlocGeom[1] = null;\n\t\tthis.computeMinDistancePoints(pts0, pts1, locGeom);\n\t\tthis.updateMinDistance(locGeom, false);\n\t},\n\tnearestLocations: function () {\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistanceLocation;\n\t},\n\tupdateMinDistance: function (locGeom, flip) {\n\t\tif (locGeom[0] === null) return null;\n\t\tif (flip) {\n\t\t\tthis._minDistanceLocation[0] = locGeom[1];\n\t\t\tthis._minDistanceLocation[1] = locGeom[0];\n\t\t} else {\n\t\t\tthis._minDistanceLocation[0] = locGeom[0];\n\t\t\tthis._minDistanceLocation[1] = locGeom[1];\n\t\t}\n\t},\n\tnearestPoints: function () {\n\t\tthis.computeMinDistance();\n\t\tvar nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n\t\treturn nearestPts;\n\t},\n\tcomputeMinDistance: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tif (this._minDistanceLocation !== null) return null;\n\t\t\tthis._minDistanceLocation = new Array(2).fill(null);\n\t\t\tthis.computeContainmentDistance();\n\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\tthis.computeFacetDistance();\n\t\t} else if (arguments.length === 3) {\n\t\t\tif (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n\t\t\t\tlet line = arguments[0], pt = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line.getCoordinates();\n\t\t\t\tvar coord = pt.getCoordinate();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tvar dist = Distance.pointToSegment(coord, coord0[i], coord0[i + 1]);\n\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\tvar seg = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\tvar segClosestPoint = seg.closestPoint(coord);\n\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt, 0, coord);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t}\n\t\t\t} else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n\t\t\t\tlet line0 = arguments[0], line1 = arguments[1], locGeom = arguments[2];\n\t\t\t\tif (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) return null;\n\t\t\t\tvar coord0 = line0.getCoordinates();\n\t\t\t\tvar coord1 = line1.getCoordinates();\n\t\t\t\tfor (var i = 0; i < coord0.length - 1; i++) {\n\t\t\t\t\tfor (var j = 0; j < coord1.length - 1; j++) {\n\t\t\t\t\t\tvar dist = Distance.segmentToSegment(coord0[i], coord0[i + 1], coord1[j], coord1[j + 1]);\n\t\t\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\t\t\tvar seg0 = new LineSegment(coord0[i], coord0[i + 1]);\n\t\t\t\t\t\t\tvar seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n\t\t\t\t\t\t\tvar closestPt = seg0.closestPoints(seg1);\n\t\t\t\t\t\t\tlocGeom[0] = new GeometryLocation(line0, i, closestPt[0]);\n\t\t\t\t\t\t\tlocGeom[1] = new GeometryLocation(line1, j, closestPt[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeMinDistancePoints: function (points0, points1, locGeom) {\n\t\tfor (var i = 0; i < points0.size(); i++) {\n\t\t\tvar pt0 = points0.get(i);\n\t\t\tfor (var j = 0; j < points1.size(); j++) {\n\t\t\t\tvar pt1 = points1.get(j);\n\t\t\t\tvar dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n\t\t\t\tif (dist < this._minDistance) {\n\t\t\t\t\tthis._minDistance = dist;\n\t\t\t\t\tlocGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n\t\t\t\t\tlocGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n\t\t\t\t}\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tdistance: function () {\n\t\tif (this._geom[0] === null || this._geom[1] === null) throw new IllegalArgumentException(\"null geometries are not supported\");\n\t\tif (this._geom[0].isEmpty() || this._geom[1].isEmpty()) return 0.0;\n\t\tthis.computeMinDistance();\n\t\treturn this._minDistance;\n\t},\n\tcomputeMinDistanceLines: function (lines0, lines1, locGeom) {\n\t\tfor (var i = 0; i < lines0.size(); i++) {\n\t\t\tvar line0 = lines0.get(i);\n\t\t\tfor (var j = 0; j < lines1.size(); j++) {\n\t\t\t\tvar line1 = lines1.get(j);\n\t\t\t\tthis.computeMinDistance(line0, line1, locGeom);\n\t\t\t\tif (this._minDistance <= this._terminateDistance) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DistanceOp;\n\t}\n});\nDistanceOp.distance = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.distance();\n};\nDistanceOp.isWithinDistance = function (g0, g1, distance) {\n\tvar envDist = g0.getEnvelopeInternal().distance(g1.getEnvelopeInternal());\n\tif (envDist > distance) return false;\n\tvar distOp = new DistanceOp(g0, g1, distance);\n\treturn distOp.distance() <= distance;\n};\nDistanceOp.nearestPoints = function (g0, g1) {\n\tvar distOp = new DistanceOp(g0, g1);\n\treturn distOp.nearestPoints();\n};\n","import CoordinateList from '../../geom/CoordinateList';\nimport extend from '../../../../../extend';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function EdgeString() {\n\tthis._factory = null;\n\tthis._directedEdges = new ArrayList();\n\tthis._coordinates = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n}\nextend(EdgeString.prototype, {\n\tgetCoordinates: function () {\n\t\tif (this._coordinates === null) {\n\t\t\tvar forwardDirectedEdges = 0;\n\t\t\tvar reverseDirectedEdges = 0;\n\t\t\tvar coordinateList = new CoordinateList();\n\t\t\tfor (var i = this._directedEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar directedEdge = i.next();\n\t\t\t\tif (directedEdge.getEdgeDirection()) {\n\t\t\t\t\tforwardDirectedEdges++;\n\t\t\t\t} else {\n\t\t\t\t\treverseDirectedEdges++;\n\t\t\t\t}\n\t\t\t\tcoordinateList.add(directedEdge.getEdge().getLine().getCoordinates(), false, directedEdge.getEdgeDirection());\n\t\t\t}\n\t\t\tthis._coordinates = coordinateList.toCoordinateArray();\n\t\t\tif (reverseDirectedEdges > forwardDirectedEdges) {\n\t\t\t\tCoordinateArrays.reverse(this._coordinates);\n\t\t\t}\n\t\t}\n\t\treturn this._coordinates;\n\t},\n\ttoLineString: function () {\n\t\treturn this._factory.createLineString(this.getCoordinates());\n\t},\n\tadd: function (directedEdge) {\n\t\tthis._directedEdges.add(directedEdge);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeString;\n\t}\n});\n","import extend from '../../../../extend';\nexport default function GraphComponent() {\n\tthis._isMarked = false;\n\tthis._isVisited = false;\n\tthis._data = null;\n}\nextend(GraphComponent.prototype, {\n\tsetVisited: function (isVisited) {\n\t\tthis._isVisited = isVisited;\n\t},\n\tisMarked: function () {\n\t\treturn this._isMarked;\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tsetMarked: function (isMarked) {\n\t\tthis._isMarked = isMarked;\n\t},\n\tgetContext: function () {\n\t\treturn this._data;\n\t},\n\tisVisited: function () {\n\t\treturn this._isVisited;\n\t},\n\tsetContext: function (data) {\n\t\tthis._data = data;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GraphComponent;\n\t}\n});\nGraphComponent.getComponentWithVisitedState = function (i, visitedState) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tif (comp.isVisited() === visitedState) return comp;\n\t}\n\treturn null;\n};\nGraphComponent.setVisited = function (i, visited) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setVisited(visited);\n\t}\n};\nGraphComponent.setMarked = function (i, marked) {\n\twhile (i.hasNext()) {\n\t\tvar comp = i.next();\n\t\tcomp.setMarked(marked);\n\t}\n};\n","import extend from '../../../../extend';\nimport Orientation from '../algorithm/Orientation';\nimport Comparable from '../../../../java/lang/Comparable';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Quadrant from '../geomgraph/Quadrant';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function DirectedEdge() {\n\tGraphComponent.apply(this);\n\tthis._parentEdge = null;\n\tthis._from = null;\n\tthis._to = null;\n\tthis._p0 = null;\n\tthis._p1 = null;\n\tthis._sym = null;\n\tthis._edgeDirection = null;\n\tthis._quadrant = null;\n\tthis._angle = null;\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tthis._from = from;\n\tthis._to = to;\n\tthis._edgeDirection = edgeDirection;\n\tthis._p0 = from.getCoordinate();\n\tthis._p1 = directionPt;\n\tvar dx = this._p1.x - this._p0.x;\n\tvar dy = this._p1.y - this._p0.y;\n\tthis._quadrant = Quadrant.quadrant(dx, dy);\n\tthis._angle = Math.atan2(dy, dx);\n}\ninherits(DirectedEdge, GraphComponent);\nextend(DirectedEdge.prototype, {\n\tisRemoved: function () {\n\t\treturn this._parentEdge === null;\n\t},\n\tcompareDirection: function (e) {\n\t\tif (this._quadrant > e._quadrant) return 1;\n\t\tif (this._quadrant < e._quadrant) return -1;\n\t\treturn Orientation.index(e._p0, e._p1, this._p1);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._from.getCoordinate();\n\t},\n\tprint: function (out) {\n\t\tvar className = this.getClass().getName();\n\t\tvar lastDotPos = className.lastIndexOf('.');\n\t\tvar name = className.substring(lastDotPos + 1);\n\t\tout.print(\"  \" + name + \": \" + this._p0 + \" - \" + this._p1 + \" \" + this._quadrant + \":\" + this._angle);\n\t},\n\tgetDirectionPt: function () {\n\t\treturn this._p1;\n\t},\n\tgetAngle: function () {\n\t\treturn this._angle;\n\t},\n\tcompareTo: function (obj) {\n\t\tvar de = obj;\n\t\treturn this.compareDirection(de);\n\t},\n\tgetFromNode: function () {\n\t\treturn this._from;\n\t},\n\tgetSym: function () {\n\t\treturn this._sym;\n\t},\n\tsetEdge: function (parentEdge) {\n\t\tthis._parentEdge = parentEdge;\n\t},\n\tremove: function () {\n\t\tthis._sym = null;\n\t\tthis._parentEdge = null;\n\t},\n\tgetEdge: function () {\n\t\treturn this._parentEdge;\n\t},\n\tgetQuadrant: function () {\n\t\treturn this._quadrant;\n\t},\n\tsetSym: function (sym) {\n\t\tthis._sym = sym;\n\t},\n\tgetToNode: function () {\n\t\treturn this._to;\n\t},\n\tgetEdgeDirection: function () {\n\t\treturn this._edgeDirection;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdge;\n\t}\n});\nDirectedEdge.toEdges = function (dirEdges) {\n\tvar edges = new ArrayList();\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tedges.add(i.next()._parentEdge);\n\t}\n\treturn edges;\n};\n","import extend from '../../../../../extend';\nimport DirectedEdge from '../../planargraph/DirectedEdge';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nexport default function LineMergeDirectedEdge() {\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(LineMergeDirectedEdge, DirectedEdge);\nextend(LineMergeDirectedEdge.prototype, {\n\tgetNext: function () {\n\t\tif (this.getToNode().getDegree() !== 2) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.getToNode().getOutEdges().getEdges().get(0) === this.getSym()) {\n\t\t\treturn this.getToNode().getOutEdges().getEdges().get(1);\n\t\t}\n\t\tAssert.isTrue(this.getToNode().getOutEdges().getEdges().get(1) === this.getSym());\n\t\treturn this.getToNode().getOutEdges().getEdges().get(0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeDirectedEdge;\n\t}\n});\n","import Node from './Node';\nimport extend from '../../../../extend';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Edge() {\n\tGraphComponent.apply(this);\n\tthis._dirEdge = null;\n\tif (arguments.length === 0) {} else if (arguments.length === 2) {\n\t\tlet de0 = arguments[0], de1 = arguments[1];\n\t\tthis.setDirectedEdges(de0, de1);\n\t}\n}\ninherits(Edge, GraphComponent);\nextend(Edge.prototype, {\n\tisRemoved: function () {\n\t\treturn this._dirEdge === null;\n\t},\n\tsetDirectedEdges: function (de0, de1) {\n\t\tthis._dirEdge = [de0, de1];\n\t\tde0.setEdge(this);\n\t\tde1.setEdge(this);\n\t\tde0.setSym(de1);\n\t\tde1.setSym(de0);\n\t\tde0.getFromNode().addOutEdge(de0);\n\t\tde1.getFromNode().addOutEdge(de1);\n\t},\n\tgetDirEdge: function () {\n\t\tif (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\treturn this._dirEdge[i];\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet fromNode = arguments[0];\n\t\t\tif (this._dirEdge[0].getFromNode() === fromNode) return this._dirEdge[0];\n\t\t\tif (this._dirEdge[1].getFromNode() === fromNode) return this._dirEdge[1];\n\t\t\treturn null;\n\t\t}\n\t},\n\tremove: function () {\n\t\tthis._dirEdge = null;\n\t},\n\tgetOppositeNode: function (node) {\n\t\tif (this._dirEdge[0].getFromNode() === node) return this._dirEdge[0].getToNode();\n\t\tif (this._dirEdge[1].getFromNode() === node) return this._dirEdge[1].getToNode();\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Edge;\n\t}\n});\n","import extend from '../../../../extend';\nimport Collections from '../../../../java/util/Collections';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default function DirectedEdgeStar() {\n\tthis._outEdges = new ArrayList();\n\tthis._sorted = false;\n}\nextend(DirectedEdgeStar.prototype, {\n\tgetNextEdge: function (dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i + 1));\n\t},\n\tgetCoordinate: function () {\n\t\tvar it = this.iterator();\n\t\tif (!it.hasNext()) return null;\n\t\tvar e = it.next();\n\t\treturn e.getCoordinate();\n\t},\n\titerator: function () {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges.iterator();\n\t},\n\tsortEdges: function () {\n\t\tif (!this._sorted) {\n\t\t\tCollections.sort(this._outEdges);\n\t\t\tthis._sorted = true;\n\t\t}\n\t},\n\tremove: function (de) {\n\t\tthis._outEdges.remove(de);\n\t},\n\tgetEdges: function () {\n\t\tthis.sortEdges();\n\t\treturn this._outEdges;\n\t},\n\tgetNextCWEdge: function (dirEdge) {\n\t\tvar i = this.getIndex(dirEdge);\n\t\treturn this._outEdges.get(this.getIndex(i - 1));\n\t},\n\tgetIndex: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de.getEdge() === edge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis.sortEdges();\n\t\t\tfor (var i = 0; i < this._outEdges.size(); i++) {\n\t\t\t\tvar de = this._outEdges.get(i);\n\t\t\t\tif (de === dirEdge) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t} else if (Number.isInteger(arguments[0])) {\n\t\t\tlet i = arguments[0];\n\t\t\tvar modi = i % this._outEdges.size();\n\t\t\tif (modi < 0) modi += this._outEdges.size();\n\t\t\treturn modi;\n\t\t}\n\t},\n\tadd: function (de) {\n\t\tthis._outEdges.add(de);\n\t\tthis._sorted = false;\n\t},\n\tgetDegree: function () {\n\t\treturn this._outEdges.size();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DirectedEdgeStar;\n\t}\n});\n","import DirectedEdgeStar from './DirectedEdgeStar';\nimport HashSet from '../../../../java/util/HashSet';\nimport extend from '../../../../extend';\nimport DirectedEdge from './DirectedEdge';\nimport inherits from '../../../../inherits';\nimport GraphComponent from './GraphComponent';\nexport default function Node() {\n\tGraphComponent.apply(this);\n\tthis._pt = null;\n\tthis._deStar = null;\n\tif (arguments.length === 1) {\n\t\tlet pt = arguments[0];\n\t\tNode.call(this, pt, new DirectedEdgeStar());\n\t} else if (arguments.length === 2) {\n\t\tlet pt = arguments[0], deStar = arguments[1];\n\t\tthis._pt = pt;\n\t\tthis._deStar = deStar;\n\t}\n}\ninherits(Node, GraphComponent);\nextend(Node.prototype, {\n\tisRemoved: function () {\n\t\treturn this._pt === null;\n\t},\n\taddOutEdge: function (de) {\n\t\tthis._deStar.add(de);\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._pt;\n\t},\n\tgetOutEdges: function () {\n\t\treturn this._deStar;\n\t},\n\tremove: function () {\n\t\tif (arguments.length === 0) {\n\t\t\tthis._pt = null;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t\tthis._deStar.remove(de);\n\t\t}\n\t},\n\tgetIndex: function (edge) {\n\t\treturn this._deStar.getIndex(edge);\n\t},\n\tgetDegree: function () {\n\t\treturn this._deStar.getDegree();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Node;\n\t}\n});\nNode.getEdgesBetween = function (node0, node1) {\n\tvar edges0 = DirectedEdge.toEdges(node0.getOutEdges().getEdges());\n\tvar commonEdges = new HashSet(edges0);\n\tvar edges1 = DirectedEdge.toEdges(node1.getOutEdges().getEdges());\n\tcommonEdges.retainAll(edges1);\n\treturn commonEdges;\n};\n","import extend from '../../../../../extend';\nimport Edge from '../../planargraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function LineMergeEdge() {\n\tEdge.apply(this);\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n}\ninherits(LineMergeEdge, Edge);\nextend(LineMergeEdge.prototype, {\n\tgetLine: function () {\n\t\treturn this._line;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeEdge;\n\t}\n});\n","import extend from '../../../../extend';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function NodeMap() {\n\tthis._nodeMap = new TreeMap();\n}\nextend(NodeMap.prototype, {\n\tfind: function (coord) {\n\t\treturn this._nodeMap.get(coord);\n\t},\n\titerator: function () {\n\t\treturn this._nodeMap.values().iterator();\n\t},\n\tremove: function (pt) {\n\t\treturn this._nodeMap.remove(pt);\n\t},\n\tvalues: function () {\n\t\treturn this._nodeMap.values();\n\t},\n\tadd: function (n) {\n\t\tthis._nodeMap.put(n.getCoordinate(), n);\n\t\treturn n;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn NodeMap;\n\t}\n});\n","import HashSet from '../../../../java/util/HashSet';\nimport Node from './Node';\nimport extend from '../../../../extend';\nimport NodeMap from './NodeMap';\nimport DirectedEdge from './DirectedEdge';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Edge from './Edge';\nexport default function PlanarGraph() {\n\tthis._edges = new HashSet();\n\tthis._dirEdges = new HashSet();\n\tthis._nodeMap = new NodeMap();\n}\nextend(PlanarGraph.prototype, {\n\tfindNodesOfDegree: function (degree) {\n\t\tvar nodesFound = new ArrayList();\n\t\tfor (var i = this.nodeIterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() === degree) nodesFound.add(node);\n\t\t}\n\t\treturn nodesFound;\n\t},\n\tdirEdgeIterator: function () {\n\t\treturn this._dirEdges.iterator();\n\t},\n\tedgeIterator: function () {\n\t\treturn this._edges.iterator();\n\t},\n\tremove: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis.remove(edge.getDirEdge(0));\n\t\t\tthis.remove(edge.getDirEdge(1));\n\t\t\tthis._edges.remove(edge);\n\t\t\tedge.remove();\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\tvar sym = de.getSym();\n\t\t\tif (sym !== null) sym.setSym(null);\n\t\t\tde.getFromNode().remove(de);\n\t\t\tde.remove();\n\t\t\tthis._dirEdges.remove(de);\n\t\t} else if (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tvar outEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = outEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) this.remove(sym);\n\t\t\t\tthis._dirEdges.remove(de);\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tif (edge !== null) {\n\t\t\t\t\tthis._edges.remove(edge);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._nodeMap.remove(node.getCoordinate());\n\t\t\tnode.remove();\n\t\t}\n\t},\n\tfindNode: function (pt) {\n\t\treturn this._nodeMap.find(pt);\n\t},\n\tgetEdges: function () {\n\t\treturn this._edges;\n\t},\n\tnodeIterator: function () {\n\t\treturn this._nodeMap.iterator();\n\t},\n\tcontains: function () {\n\t\tif (arguments[0] instanceof Edge) {\n\t\t\tlet e = arguments[0];\n\t\t\treturn this._edges.contains(e);\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet de = arguments[0];\n\t\t\treturn this._dirEdges.contains(de);\n\t\t}\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Node) {\n\t\t\tlet node = arguments[0];\n\t\t\tthis._nodeMap.add(node);\n\t\t} else if (arguments[0] instanceof Edge) {\n\t\t\tlet edge = arguments[0];\n\t\t\tthis._edges.add(edge);\n\t\t\tthis.add(edge.getDirEdge(0));\n\t\t\tthis.add(edge.getDirEdge(1));\n\t\t} else if (arguments[0] instanceof DirectedEdge) {\n\t\t\tlet dirEdge = arguments[0];\n\t\t\tthis._dirEdges.add(dirEdge);\n\t\t}\n\t},\n\tgetNodes: function () {\n\t\treturn this._nodeMap.values();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PlanarGraph;\n\t}\n});\n","import LineMergeDirectedEdge from './LineMergeDirectedEdge';\nimport Node from '../../planargraph/Node';\nimport extend from '../../../../../extend';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport LineMergeEdge from './LineMergeEdge';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default function LineMergeGraph() {\n\tPlanarGraph.apply(this);\n}\ninherits(LineMergeGraph, PlanarGraph);\nextend(LineMergeGraph.prototype, {\n\taddEdge: function (lineString) {\n\t\tif (lineString.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar coordinates = CoordinateArrays.removeRepeatedPoints(lineString.getCoordinates());\n\t\tif (coordinates.length <= 1) return null;\n\t\tvar startCoordinate = coordinates[0];\n\t\tvar endCoordinate = coordinates[coordinates.length - 1];\n\t\tvar startNode = this.getNode(startCoordinate);\n\t\tvar endNode = this.getNode(endCoordinate);\n\t\tvar directedEdge0 = new LineMergeDirectedEdge(startNode, endNode, coordinates[1], true);\n\t\tvar directedEdge1 = new LineMergeDirectedEdge(endNode, startNode, coordinates[coordinates.length - 2], false);\n\t\tvar edge = new LineMergeEdge(lineString);\n\t\tedge.setDirectedEdges(directedEdge0, directedEdge1);\n\t\tthis.add(edge);\n\t},\n\tgetNode: function (coordinate) {\n\t\tvar node = this.findNode(coordinate);\n\t\tif (node === null) {\n\t\t\tnode = new Node(coordinate);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMergeGraph;\n\t}\n});\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport EdgeString from './EdgeString';\nimport extend from '../../../../../extend';\nimport LineMergeGraph from './LineMergeGraph';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport GraphComponent from '../../planargraph/GraphComponent';\nexport default function LineMerger() {\n\tthis._graph = new LineMergeGraph();\n\tthis._mergedLineStrings = null;\n\tthis._factory = null;\n\tthis._edgeStrings = null;\n}\nextend(LineMerger.prototype, {\n\tbuildEdgeStringsForUnprocessedNodes: function () {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (!node.isMarked()) {\n\t\t\t\tAssert.isTrue(node.getDegree() === 2);\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForNonDegree2Nodes: function () {\n\t\tfor (var i = this._graph.getNodes().iterator(); i.hasNext(); ) {\n\t\t\tvar node = i.next();\n\t\t\tif (node.getDegree() !== 2) {\n\t\t\t\tthis.buildEdgeStringsStartingAt(node);\n\t\t\t\tnode.setMarked(true);\n\t\t\t}\n\t\t}\n\t},\n\tbuildEdgeStringsForObviousStartNodes: function () {\n\t\tthis.buildEdgeStringsForNonDegree2Nodes();\n\t},\n\tgetMergedLineStrings: function () {\n\t\tthis.merge();\n\t\treturn this._mergedLineStrings;\n\t},\n\tbuildEdgeStringsStartingAt: function (node) {\n\t\tfor (var i = node.getOutEdges().iterator(); i.hasNext(); ) {\n\t\t\tvar directedEdge = i.next();\n\t\t\tif (directedEdge.getEdge().isMarked()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tthis._edgeStrings.add(this.buildEdgeStringStartingWith(directedEdge));\n\t\t}\n\t},\n\tmerge: function () {\n\t\tif (this._mergedLineStrings !== null) {\n\t\t\treturn null;\n\t\t}\n\t\tGraphComponent.setMarked(this._graph.nodeIterator(), false);\n\t\tGraphComponent.setMarked(this._graph.edgeIterator(), false);\n\t\tthis._edgeStrings = new ArrayList();\n\t\tthis.buildEdgeStringsForObviousStartNodes();\n\t\tthis.buildEdgeStringsForIsolatedLoops();\n\t\tthis._mergedLineStrings = new ArrayList();\n\t\tfor (var i = this._edgeStrings.iterator(); i.hasNext(); ) {\n\t\t\tvar edgeString = i.next();\n\t\t\tthis._mergedLineStrings.add(edgeString.toLineString());\n\t\t}\n\t},\n\tbuildEdgeStringStartingWith: function (start) {\n\t\tvar edgeString = new EdgeString(this._factory);\n\t\tvar current = start;\n\t\tdo {\n\t\t\tedgeString.add(current);\n\t\t\tcurrent.getEdge().setMarked(true);\n\t\t\tcurrent = current.getNext();\n\t\t} while (current !== null && current !== start);\n\t\treturn edgeString;\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geometry = arguments[0];\n\t\t\tgeometry.apply({\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [GeometryComponentFilter];\n\t\t\t\t},\n\t\t\t\tfilter: function (component) {\n\t\t\t\t\tif (component instanceof LineString) {\n\t\t\t\t\t\tthis.add(component);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geometries = arguments[0];\n\t\t\tthis._mergedLineStrings = null;\n\t\t\tfor (var i = geometries.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet lineString = arguments[0];\n\t\t\tif (this._factory === null) {\n\t\t\t\tthis._factory = lineString.getFactory();\n\t\t\t}\n\t\t\tthis._graph.addEdge(lineString);\n\t\t}\n\t},\n\tbuildEdgeStringsForIsolatedLoops: function () {\n\t\tthis.buildEdgeStringsForUnprocessedNodes();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineMerger;\n\t}\n});\n","import WKTWriter from '../io/WKTWriter';\nimport CoordinateArraySequence from '../geom/impl/CoordinateArraySequence';\nimport Octant from './Octant';\nimport extend from '../../../../extend';\nimport SegmentString from './SegmentString';\nexport default function BasicSegmentString() {\n\tthis._pts = null;\n\tthis._data = null;\n\tlet pts = arguments[0], data = arguments[1];\n\tthis._pts = pts;\n\tthis._data = data;\n}\nextend(BasicSegmentString.prototype, {\n\tgetCoordinates: function () {\n\t\treturn this._pts;\n\t},\n\tsize: function () {\n\t\treturn this._pts.length;\n\t},\n\tgetCoordinate: function (i) {\n\t\treturn this._pts[i];\n\t},\n\tisClosed: function () {\n\t\treturn this._pts[0].equals(this._pts[this._pts.length - 1]);\n\t},\n\tgetSegmentOctant: function (index) {\n\t\tif (index === this._pts.length - 1) return -1;\n\t\treturn Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1));\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this._pts));\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentString];\n\t},\n\tgetClass: function () {\n\t\treturn BasicSegmentString;\n\t}\n});\n","import extend from '../../../../extend';\nimport SegmentIntersector from './SegmentIntersector';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function InteriorIntersectionFinder() {\n\tthis._findAllIntersections = false;\n\tthis._isCheckEndSegmentsOnly = false;\n\tthis._li = null;\n\tthis._interiorIntersection = null;\n\tthis._intSegments = null;\n\tthis._intersections = new ArrayList();\n\tthis._intersectionCount = 0;\n\tthis._keepIntersections = true;\n\tlet li = arguments[0];\n\tthis._li = li;\n\tthis._interiorIntersection = null;\n}\nextend(InteriorIntersectionFinder.prototype, {\n\tgetInteriorIntersection: function () {\n\t\treturn this._interiorIntersection;\n\t},\n\tsetCheckEndSegmentsOnly: function (isCheckEndSegmentsOnly) {\n\t\tthis._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n\t},\n\tgetIntersectionSegments: function () {\n\t\treturn this._intSegments;\n\t},\n\tcount: function () {\n\t\treturn this._intersectionCount;\n\t},\n\tgetIntersections: function () {\n\t\treturn this._intersections;\n\t},\n\tsetFindAllIntersections: function (findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t},\n\tsetKeepIntersections: function (keepIntersections) {\n\t\tthis._keepIntersections = keepIntersections;\n\t},\n\tprocessIntersections: function (e0, segIndex0, e1, segIndex1) {\n\t\tif (!this._findAllIntersections && this.hasIntersection()) return null;\n\t\tif (e0 === e1 && segIndex0 === segIndex1) return null;\n\t\tif (this._isCheckEndSegmentsOnly) {\n\t\t\tvar isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n\t\t\tif (!isEndSegPresent) return null;\n\t\t}\n\t\tvar p00 = e0.getCoordinates()[segIndex0];\n\t\tvar p01 = e0.getCoordinates()[segIndex0 + 1];\n\t\tvar p10 = e1.getCoordinates()[segIndex1];\n\t\tvar p11 = e1.getCoordinates()[segIndex1 + 1];\n\t\tthis._li.computeIntersection(p00, p01, p10, p11);\n\t\tif (this._li.hasIntersection()) {\n\t\t\tif (this._li.isInteriorIntersection()) {\n\t\t\t\tthis._intSegments = new Array(4).fill(null);\n\t\t\t\tthis._intSegments[0] = p00;\n\t\t\t\tthis._intSegments[1] = p01;\n\t\t\t\tthis._intSegments[2] = p10;\n\t\t\t\tthis._intSegments[3] = p11;\n\t\t\t\tthis._interiorIntersection = this._li.getIntersection(0);\n\t\t\t\tif (this._keepIntersections) this._intersections.add(this._interiorIntersection);\n\t\t\t\tthis._intersectionCount++;\n\t\t\t}\n\t\t}\n\t},\n\tisEndSegment: function (segStr, index) {\n\t\tif (index === 0) return true;\n\t\tif (index >= segStr.size() - 2) return true;\n\t\treturn false;\n\t},\n\thasIntersection: function () {\n\t\treturn this._interiorIntersection !== null;\n\t},\n\tisDone: function () {\n\t\tif (this._findAllIntersections) return false;\n\t\treturn this._interiorIntersection !== null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [SegmentIntersector];\n\t},\n\tgetClass: function () {\n\t\treturn InteriorIntersectionFinder;\n\t}\n});\nInteriorIntersectionFinder.createAllIntersectionsFinder = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\treturn finder;\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function (li) {\n\treturn new InteriorIntersectionFinder(li);\n};\nInteriorIntersectionFinder.createIntersectionCounter = function (li) {\n\tvar finder = new InteriorIntersectionFinder(li);\n\tfinder.setFindAllIntersections(true);\n\tfinder.setKeepIntersections(false);\n\treturn finder;\n};\n","import WKTWriter from '../io/WKTWriter';\nimport MCIndexNoder from './MCIndexNoder';\nimport TopologyException from '../geom/TopologyException';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nimport InteriorIntersectionFinder from './InteriorIntersectionFinder';\nexport default function FastNodingValidator() {\n\tthis._li = new RobustLineIntersector();\n\tthis._segStrings = null;\n\tthis._findAllIntersections = false;\n\tthis._segInt = null;\n\tthis._isValid = true;\n\tlet segStrings = arguments[0];\n\tthis._segStrings = segStrings;\n}\nextend(FastNodingValidator.prototype, {\n\texecute: function () {\n\t\tif (this._segInt !== null) return null;\n\t\tthis.checkInteriorIntersections();\n\t},\n\tgetIntersections: function () {\n\t\treturn this._segInt.getIntersections();\n\t},\n\tisValid: function () {\n\t\tthis.execute();\n\t\treturn this._isValid;\n\t},\n\tsetFindAllIntersections: function (findAllIntersections) {\n\t\tthis._findAllIntersections = findAllIntersections;\n\t},\n\tcheckInteriorIntersections: function () {\n\t\tthis._isValid = true;\n\t\tthis._segInt = new InteriorIntersectionFinder(this._li);\n\t\tthis._segInt.setFindAllIntersections(this._findAllIntersections);\n\t\tvar noder = new MCIndexNoder();\n\t\tnoder.setSegmentIntersector(this._segInt);\n\t\tnoder.computeNodes(this._segStrings);\n\t\tif (this._segInt.hasIntersection()) {\n\t\t\tthis._isValid = false;\n\t\t\treturn null;\n\t\t}\n\t},\n\tcheckValid: function () {\n\t\tthis.execute();\n\t\tif (!this._isValid) throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection());\n\t},\n\tgetErrorMessage: function () {\n\t\tif (this._isValid) return \"no intersections found\";\n\t\tvar intSegs = this._segInt.getIntersectionSegments();\n\t\treturn \"found non-noded intersection between \" + WKTWriter.toLineString(intSegs[0], intSegs[1]) + \" and \" + WKTWriter.toLineString(intSegs[2], intSegs[3]);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn FastNodingValidator;\n\t}\n});\nFastNodingValidator.computeIntersections = function (segStrings) {\n\tvar nv = new FastNodingValidator(segStrings);\n\tnv.setFindAllIntersections(true);\n\tnv.isValid();\n\treturn nv.getIntersections();\n};\n","import BasicSegmentString from '../noding/BasicSegmentString';\nimport extend from '../../../../extend';\nimport FastNodingValidator from '../noding/FastNodingValidator';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function EdgeNodingValidator() {\n\tthis._nv = null;\n\tlet edges = arguments[0];\n\tthis._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n}\nextend(EdgeNodingValidator.prototype, {\n\tcheckValid: function () {\n\t\tthis._nv.checkValid();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeNodingValidator;\n\t}\n});\nEdgeNodingValidator.toSegmentStrings = function (edges) {\n\tvar segStrings = new ArrayList();\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar e = i.next();\n\t\tsegStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n\t}\n\treturn segStrings;\n};\nEdgeNodingValidator.checkValid = function (edges) {\n\tvar validator = new EdgeNodingValidator(edges);\n\tvalidator.checkValid();\n};\n","import GeometryFactory from '../GeometryFactory';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function GeometryCollectionMapper() {\n\tthis._mapOp = null;\n\tlet mapOp = arguments[0];\n\tthis._mapOp = mapOp;\n}\nextend(GeometryCollectionMapper.prototype, {\n\tmap: function (gc) {\n\t\tvar mapped = new ArrayList();\n\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\tvar g = this._mapOp.map(gc.getGeometryN(i));\n\t\t\tif (!g.isEmpty()) mapped.add(g);\n\t\t}\n\t\treturn gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped));\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCollectionMapper;\n\t}\n});\nGeometryCollectionMapper.map = function (gc, op) {\n\tvar mapper = new GeometryCollectionMapper(op);\n\treturn mapper.map(gc);\n};\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport OverlayOp from './OverlayOp';\nexport default function LineBuilder() {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._ptLocator = null;\n\tthis._lineEdgesList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n\tthis._ptLocator = ptLocator;\n}\nextend(LineBuilder.prototype, {\n\tcollectLines: function (opCode) {\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tthis.collectLineEdge(de, opCode, this._lineEdgesList);\n\t\t\tthis.collectBoundaryTouchEdge(de, opCode, this._lineEdgesList);\n\t\t}\n\t},\n\tlabelIsolatedLine: function (e, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n\t\te.getLabel().setLocation(targetIndex, loc);\n\t},\n\tbuild: function (opCode) {\n\t\tthis.findCoveredLineEdges();\n\t\tthis.collectLines(opCode);\n\t\tthis.buildLines(opCode);\n\t\treturn this._resultLineList;\n\t},\n\tcollectLineEdge: function (de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tvar e = de.getEdge();\n\t\tif (de.isLineEdge()) {\n\t\t\tif (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n\t\t\t\tedges.add(e);\n\t\t\t\tde.setVisitedEdge(true);\n\t\t\t}\n\t\t}\n\t},\n\tfindCoveredLineEdges: function () {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().findCoveredLineEdges();\n\t\t}\n\t\tfor (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar e = de.getEdge();\n\t\t\tif (de.isLineEdge() && !e.isCoveredSet()) {\n\t\t\t\tvar isCovered = this._op.isCoveredByA(de.getCoordinate());\n\t\t\t\te.setCovered(isCovered);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedLines: function (edgesList) {\n\t\tfor (var it = edgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedLine(e, 0); else this.labelIsolatedLine(e, 1);\n\t\t\t}\n\t\t}\n\t},\n\tbuildLines: function (opCode) {\n\t\tfor (var it = this._lineEdgesList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar label = e.getLabel();\n\t\t\tvar line = this._geometryFactory.createLineString(e.getCoordinates());\n\t\t\tthis._resultLineList.add(line);\n\t\t\te.setInResult(true);\n\t\t}\n\t},\n\tcollectBoundaryTouchEdge: function (de, opCode, edges) {\n\t\tvar label = de.getLabel();\n\t\tif (de.isLineEdge()) return null;\n\t\tif (de.isVisited()) return null;\n\t\tif (de.isInteriorAreaEdge()) return null;\n\t\tif (de.getEdge().isInResult()) return null;\n\t\tAssert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n\t\tif (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n\t\t\tedges.add(de.getEdge());\n\t\t\tde.setVisitedEdge(true);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineBuilder;\n\t}\n});\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport OverlayOp from './OverlayOp';\nexport default function PointBuilder() {\n\tthis._op = null;\n\tthis._geometryFactory = null;\n\tthis._resultPointList = new ArrayList();\n\tlet op = arguments[0], geometryFactory = arguments[1], ptLocator = arguments[2];\n\tthis._op = op;\n\tthis._geometryFactory = geometryFactory;\n}\nextend(PointBuilder.prototype, {\n\tfilterCoveredNodeToPoint: function (n) {\n\t\tvar coord = n.getCoordinate();\n\t\tif (!this._op.isCoveredByLA(coord)) {\n\t\t\tvar pt = this._geometryFactory.createPoint(coord);\n\t\t\tthis._resultPointList.add(pt);\n\t\t}\n\t},\n\textractNonCoveredResultNodes: function (opCode) {\n\t\tfor (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar n = nodeit.next();\n\t\t\tif (n.isInResult()) continue;\n\t\t\tif (n.isIncidentEdgeInResult()) continue;\n\t\t\tif (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n\t\t\t\tvar label = n.getLabel();\n\t\t\t\tif (OverlayOp.isResultOfOp(label, opCode)) {\n\t\t\t\t\tthis.filterCoveredNodeToPoint(n);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbuild: function (opCode) {\n\t\tthis.extractNonCoveredResultNodes(opCode);\n\t\treturn this._resultPointList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointBuilder;\n\t}\n});\n","import LineString from '../../../geom/LineString';\nimport CoordinateList from '../../../geom/CoordinateList';\nimport Coordinate from '../../../geom/Coordinate';\nimport Double from '../../../../../../java/lang/Double';\nimport extend from '../../../../../../extend';\nimport LineSegment from '../../../geom/LineSegment';\nexport default function LineStringSnapper() {\n\tthis._snapTolerance = 0.0;\n\tthis._srcPts = null;\n\tthis._seg = new LineSegment();\n\tthis._allowSnappingToSourceVertices = false;\n\tthis._isClosed = false;\n\tif (arguments[0] instanceof LineString && typeof arguments[1] === \"number\") {\n\t\tlet srcLine = arguments[0], snapTolerance = arguments[1];\n\t\tLineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n\t} else if (arguments[0] instanceof Array && typeof arguments[1] === \"number\") {\n\t\tlet srcPts = arguments[0], snapTolerance = arguments[1];\n\t\tthis._srcPts = srcPts;\n\t\tthis._isClosed = LineStringSnapper.isClosed(srcPts);\n\t\tthis._snapTolerance = snapTolerance;\n\t}\n}\nextend(LineStringSnapper.prototype, {\n\tsnapVertices: function (srcCoords, snapPts) {\n\t\tvar end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n\t\tfor (var i = 0; i < end; i++) {\n\t\t\tvar srcPt = srcCoords.get(i);\n\t\t\tvar snapVert = this.findSnapForVertex(srcPt, snapPts);\n\t\t\tif (snapVert !== null) {\n\t\t\t\tsrcCoords.set(i, new Coordinate(snapVert));\n\t\t\t\tif (i === 0 && this._isClosed) srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert));\n\t\t\t}\n\t\t}\n\t},\n\tfindSnapForVertex: function (pt, snapPts) {\n\t\tfor (var i = 0; i < snapPts.length; i++) {\n\t\t\tif (pt.equals2D(snapPts[i])) return null;\n\t\t\tif (pt.distance(snapPts[i]) < this._snapTolerance) return snapPts[i];\n\t\t}\n\t\treturn null;\n\t},\n\tsnapTo: function (snapPts) {\n\t\tvar coordList = new CoordinateList(this._srcPts);\n\t\tthis.snapVertices(coordList, snapPts);\n\t\tthis.snapSegments(coordList, snapPts);\n\t\tvar newPts = coordList.toCoordinateArray();\n\t\treturn newPts;\n\t},\n\tsnapSegments: function (srcCoords, snapPts) {\n\t\tif (snapPts.length === 0) return null;\n\t\tvar distinctPtCount = snapPts.length;\n\t\tif (snapPts[0].equals2D(snapPts[snapPts.length - 1])) distinctPtCount = snapPts.length - 1;\n\t\tfor (var i = 0; i < distinctPtCount; i++) {\n\t\t\tvar snapPt = snapPts[i];\n\t\t\tvar index = this.findSegmentIndexToSnap(snapPt, srcCoords);\n\t\t\tif (index >= 0) {\n\t\t\t\tsrcCoords.add(index + 1, new Coordinate(snapPt), false);\n\t\t\t}\n\t\t}\n\t},\n\tfindSegmentIndexToSnap: function (snapPt, srcCoords) {\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tvar snapIndex = -1;\n\t\tfor (var i = 0; i < srcCoords.size() - 1; i++) {\n\t\t\tthis._seg.p0 = srcCoords.get(i);\n\t\t\tthis._seg.p1 = srcCoords.get(i + 1);\n\t\t\tif (this._seg.p0.equals2D(snapPt) || this._seg.p1.equals2D(snapPt)) {\n\t\t\t\tif (this._allowSnappingToSourceVertices) continue; else return -1;\n\t\t\t}\n\t\t\tvar dist = this._seg.distance(snapPt);\n\t\t\tif (dist < this._snapTolerance && dist < minDist) {\n\t\t\t\tminDist = dist;\n\t\t\t\tsnapIndex = i;\n\t\t\t}\n\t\t}\n\t\treturn snapIndex;\n\t},\n\tsetAllowSnappingToSourceVertices: function (allowSnappingToSourceVertices) {\n\t\tthis._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringSnapper;\n\t}\n});\nLineStringSnapper.isClosed = function (pts) {\n\tif (pts.length <= 1) return false;\n\treturn pts[0].equals2D(pts[pts.length - 1]);\n};\n","import TreeSet from '../../../../../../java/util/TreeSet';\nimport GeometryTransformer from '../../../geom/util/GeometryTransformer';\nimport hasInterface from '../../../../../../hasInterface';\nimport Double from '../../../../../../java/lang/Double';\nimport extend from '../../../../../../extend';\nimport LineStringSnapper from './LineStringSnapper';\nimport PrecisionModel from '../../../geom/PrecisionModel';\nimport Polygonal from '../../../geom/Polygonal';\nimport inherits from '../../../../../../inherits';\nexport default function GeometrySnapper() {\n\tthis._srcGeom = null;\n\tlet srcGeom = arguments[0];\n\tthis._srcGeom = srcGeom;\n}\nextend(GeometrySnapper.prototype, {\n\tsnapTo: function (snapGeom, snapTolerance) {\n\t\tvar snapPts = this.extractTargetCoordinates(snapGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts);\n\t\treturn snapTrans.transform(this._srcGeom);\n\t},\n\tsnapToSelf: function (snapTolerance, cleanResult) {\n\t\tvar snapPts = this.extractTargetCoordinates(this._srcGeom);\n\t\tvar snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n\t\tvar snappedGeom = snapTrans.transform(this._srcGeom);\n\t\tvar result = snappedGeom;\n\t\tif (cleanResult && hasInterface(result, Polygonal)) {\n\t\t\tresult = snappedGeom.buffer(0);\n\t\t}\n\t\treturn result;\n\t},\n\tcomputeSnapTolerance: function (ringPts) {\n\t\tvar minSegLen = this.computeMinimumSegmentLength(ringPts);\n\t\tvar snapTol = minSegLen / 10;\n\t\treturn snapTol;\n\t},\n\textractTargetCoordinates: function (g) {\n\t\tvar ptSet = new TreeSet();\n\t\tvar pts = g.getCoordinates();\n\t\tfor (var i = 0; i < pts.length; i++) {\n\t\t\tptSet.add(pts[i]);\n\t\t}\n\t\treturn ptSet.toArray(new Array(0).fill(null));\n\t},\n\tcomputeMinimumSegmentLength: function (pts) {\n\t\tvar minSegLen = Double.MAX_VALUE;\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar segLen = pts[i].distance(pts[i + 1]);\n\t\t\tif (segLen < minSegLen) minSegLen = segLen;\n\t\t}\n\t\treturn minSegLen;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometrySnapper;\n\t}\n});\nGeometrySnapper.snap = function (g0, g1, snapTolerance) {\n\tvar snapGeom = new Array(2).fill(null);\n\tvar snapper0 = new GeometrySnapper(g0);\n\tsnapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n\tvar snapper1 = new GeometrySnapper(g1);\n\tsnapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n\treturn snapGeom;\n};\nGeometrySnapper.computeOverlaySnapTolerance = function () {\n\tif (arguments.length === 1) {\n\t\tlet g = arguments[0];\n\t\tvar snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n\t\tvar pm = g.getPrecisionModel();\n\t\tif (pm.getType() === PrecisionModel.FIXED) {\n\t\t\tvar fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n\t\t\tif (fixedSnapTol > snapTolerance) snapTolerance = fixedSnapTol;\n\t\t}\n\t\treturn snapTolerance;\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\treturn Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1));\n\t}\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function (g) {\n\tvar env = g.getEnvelopeInternal();\n\tvar minDimension = Math.min(env.getHeight(), env.getWidth());\n\tvar snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n\treturn snapTol;\n};\nGeometrySnapper.snapToSelf = function (geom, snapTolerance, cleanResult) {\n\tvar snapper0 = new GeometrySnapper(geom);\n\treturn snapper0.snapToSelf(snapTolerance, cleanResult);\n};\nGeometrySnapper.SNAP_PRECISION_FACTOR = 1e-9;\nfunction SnapTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._snapTolerance = null;\n\tthis._snapPts = null;\n\tthis._isSelfSnap = false;\n\tif (arguments.length === 2) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t} else if (arguments.length === 3) {\n\t\tlet snapTolerance = arguments[0], snapPts = arguments[1], isSelfSnap = arguments[2];\n\t\tthis._snapTolerance = snapTolerance;\n\t\tthis._snapPts = snapPts;\n\t\tthis._isSelfSnap = isSelfSnap;\n\t}\n}\ninherits(SnapTransformer, GeometryTransformer);\nextend(SnapTransformer.prototype, {\n\tsnapLine: function (srcPts, snapPts) {\n\t\tvar snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n\t\tsnapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n\t\treturn snapper.snapTo(snapPts);\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar srcPts = coords.toCoordinateArray();\n\t\tvar newPts = this.snapLine(srcPts, this._snapPts);\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapTransformer;\n\t}\n});\n","import Double from '../../../../java/lang/Double';\nimport Long from '../../../../java/lang/Long';\nimport extend from '../../../../extend';\nexport default function CommonBits() {\n\tthis._isFirst = true;\n\tthis._commonMantissaBitsCount = 53;\n\tthis._commonBits = new Long();\n\tthis._commonSignExp = null;\n}\nextend(CommonBits.prototype, {\n\tgetCommon: function () {\n\t\treturn Double.longBitsToDouble(this._commonBits);\n\t},\n\tadd: function (num) {\n\t\tvar numBits = Double.doubleToLongBits(num);\n\t\tif (this._isFirst) {\n\t\t\tthis._commonBits = numBits;\n\t\t\tthis._commonSignExp = CommonBits.signExpBits(this._commonBits);\n\t\t\tthis._isFirst = false;\n\t\t\treturn null;\n\t\t}\n\t\tvar numSignExp = CommonBits.signExpBits(numBits);\n\t\tif (numSignExp !== this._commonSignExp) {\n\t\t\tthis._commonBits.high = 0 | 0;\n\t\t\tthis._commonBits.low = 0 | 0;\n\t\t\treturn null;\n\t\t}\n\t\tthis._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n\t\tthis._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n\t},\n\ttoString: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet bits = arguments[0];\n\t\t\tvar x = Double.longBitsToDouble(bits);\n\t\t\tvar numStr = Long.toBinaryString(bits);\n\t\t\tvar padStr = \"0000000000000000000000000000000000000000000000000000000000000000\" + numStr;\n\t\t\tvar bitStr = padStr.substring(padStr.length - 64);\n\t\t\tvar str = bitStr.substring(0, 1) + \"  \" + bitStr.substring(1, 12) + \"(exp) \" + bitStr.substring(12) + \" [ \" + x + \" ]\";\n\t\t\treturn str;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CommonBits;\n\t}\n});\nCommonBits.getBit = function (bits, i) {\n\tvar mask = (1 << (i % 32));\n\tif (i < 32) {\n\t\treturn (bits.low & mask) != 0 ? 1 : 0;\n\t}\n\treturn (bits.high & mask) != 0 ? 1 : 0;\n};\nCommonBits.signExpBits = function (num) {\n\treturn num.high >>> 20;\n};\nCommonBits.zeroLowerBits = function (bits, nBits) {\n\tvar prop = 'low';\n\tif (nBits > 32) {\n\t\tbits.low = 0 | 0;\n\t\tnBits %= 32;\n\t\tprop = 'high';\n\t}\n\tif (nBits > 0) {\n\t\tvar mask = (nBits < 32) ? (~((1 << nBits) - 1)) : 0;\n\t\tbits[prop] &= mask;\n\t}\n\treturn bits;\n};\nCommonBits.numCommonMostSigMantissaBits = function (num1, num2) {\n\tvar count = 0;\n\tfor (var i = 52; i >= 0; i--) {\n\t\tif (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) return count;\n\t\tcount++;\n\t}\n\treturn 52;\n};\n","import CommonBits from './CommonBits';\nimport CoordinateFilter from '../geom/CoordinateFilter';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport CoordinateSequenceFilter from '../geom/CoordinateSequenceFilter';\nexport default function CommonBitsRemover() {\n\tthis._commonCoord = null;\n\tthis._ccFilter = new CommonCoordinateFilter();\n}\nextend(CommonBitsRemover.prototype, {\n\taddCommonBits: function (geom) {\n\t\tvar trans = new Translater(this._commonCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t},\n\tremoveCommonBits: function (geom) {\n\t\tif (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) return geom;\n\t\tvar invCoord = new Coordinate(this._commonCoord);\n\t\tinvCoord.x = -invCoord.x;\n\t\tinvCoord.y = -invCoord.y;\n\t\tvar trans = new Translater(invCoord);\n\t\tgeom.apply(trans);\n\t\tgeom.geometryChanged();\n\t\treturn geom;\n\t},\n\tgetCommonCoordinate: function () {\n\t\treturn this._commonCoord;\n\t},\n\tadd: function (geom) {\n\t\tgeom.apply(this._ccFilter);\n\t\tthis._commonCoord = this._ccFilter.getCommonCoordinate();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CommonBitsRemover;\n\t}\n});\nfunction CommonCoordinateFilter() {\n\tthis._commonBitsX = new CommonBits();\n\tthis._commonBitsY = new CommonBits();\n}\nextend(CommonCoordinateFilter.prototype, {\n\tfilter: function (coord) {\n\t\tthis._commonBitsX.add(coord.x);\n\t\tthis._commonBitsY.add(coord.y);\n\t},\n\tgetCommonCoordinate: function () {\n\t\treturn new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon());\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateFilter];\n\t},\n\tgetClass: function () {\n\t\treturn CommonCoordinateFilter;\n\t}\n});\nfunction Translater() {\n\tthis.trans = null;\n\tlet trans = arguments[0];\n\tthis.trans = trans;\n}\nextend(Translater.prototype, {\n\tfilter: function (seq, i) {\n\t\tvar xp = seq.getOrdinate(i, 0) + this.trans.x;\n\t\tvar yp = seq.getOrdinate(i, 1) + this.trans.y;\n\t\tseq.setOrdinate(i, 0, xp);\n\t\tseq.setOrdinate(i, 1, yp);\n\t},\n\tisDone: function () {\n\t\treturn false;\n\t},\n\tisGeometryChanged: function () {\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [CoordinateSequenceFilter];\n\t},\n\tgetClass: function () {\n\t\treturn Translater;\n\t}\n});\nCommonBitsRemover.CommonCoordinateFilter = CommonCoordinateFilter;\nCommonBitsRemover.Translater = Translater;\n","import GeometrySnapper from './GeometrySnapper';\nimport extend from '../../../../../../extend';\nimport System from '../../../../../../java/lang/System';\nimport CommonBitsRemover from '../../../precision/CommonBitsRemover';\nimport OverlayOp from '../OverlayOp';\nexport default function SnapOverlayOp() {\n\tthis._geom = new Array(2).fill(null);\n\tthis._snapTolerance = null;\n\tthis._cbr = null;\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n\tthis.computeSnapTolerance();\n}\nextend(SnapOverlayOp.prototype, {\n\tselfSnap: function (geom) {\n\t\tvar snapper0 = new GeometrySnapper(geom);\n\t\tvar snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tremoveCommonBits: function (geom) {\n\t\tthis._cbr = new CommonBitsRemover();\n\t\tthis._cbr.add(geom[0]);\n\t\tthis._cbr.add(geom[1]);\n\t\tvar remGeom = new Array(2).fill(null);\n\t\tremGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n\t\tremGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n\t\treturn remGeom;\n\t},\n\tprepareResult: function (geom) {\n\t\tthis._cbr.addCommonBits(geom);\n\t\treturn geom;\n\t},\n\tgetResultGeometry: function (opCode) {\n\t\tvar prepGeom = this.snap(this._geom);\n\t\tvar result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n\t\treturn this.prepareResult(result);\n\t},\n\tcheckValid: function (g) {\n\t\tif (!g.isValid()) {\n\t\t\tSystem.out.println(\"Snapped geometry is invalid\");\n\t\t}\n\t},\n\tcomputeSnapTolerance: function () {\n\t\tthis._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n\t},\n\tsnap: function (geom) {\n\t\tvar remGeom = this.removeCommonBits(geom);\n\t\tvar snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n\t\treturn snapGeom;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapOverlayOp;\n\t}\n});\nSnapOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapOverlayOp.union = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapOverlayOp.intersection = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapOverlayOp.difference = function (g0, g1) {\n\treturn SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n","import SnapOverlayOp from './SnapOverlayOp';\nimport extend from '../../../../../../extend';\nimport RuntimeException from '../../../../../../java/lang/RuntimeException';\nimport OverlayOp from '../OverlayOp';\nexport default function SnapIfNeededOverlayOp() {\n\tthis._geom = new Array(2).fill(null);\n\tlet g1 = arguments[0], g2 = arguments[1];\n\tthis._geom[0] = g1;\n\tthis._geom[1] = g2;\n}\nextend(SnapIfNeededOverlayOp.prototype, {\n\tgetResultGeometry: function (opCode) {\n\t\tvar result = null;\n\t\tvar isSuccess = false;\n\t\tvar savedException = null;\n\t\ttry {\n\t\t\tresult = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\tvar isValid = true;\n\t\t\tif (isValid) isSuccess = true;\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\tsavedException = ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (!isSuccess) {\n\t\t\ttry {\n\t\t\t\tresult = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n\t\t\t} catch (ex) {\n\t\t\t\tif (ex instanceof RuntimeException) {\n\t\t\t\t\tthrow savedException;\n\t\t\t\t} else throw ex;\n\t\t\t} finally {}\n\t\t}\n\t\treturn result;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SnapIfNeededOverlayOp;\n\t}\n});\nSnapIfNeededOverlayOp.overlayOp = function (g0, g1, opCode) {\n\tvar op = new SnapIfNeededOverlayOp(g0, g1);\n\treturn op.getResultGeometry(opCode);\n};\nSnapIfNeededOverlayOp.union = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION);\n};\nSnapIfNeededOverlayOp.intersection = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION);\n};\nSnapIfNeededOverlayOp.symDifference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE);\n};\nSnapIfNeededOverlayOp.difference = function (g0, g1) {\n\treturn SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE);\n};\n","import BoundaryNodeRule from '../algorithm/BoundaryNodeRule';\nimport extend from '../../../../extend';\nimport GeometryGraph from '../geomgraph/GeometryGraph';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default function GeometryGraphOperation() {\n\tthis._li = new RobustLineIntersector();\n\tthis._resultPrecisionModel = null;\n\tthis._arg = null;\n\tif (arguments.length === 1) {\n\t\tlet g0 = arguments[0];\n\t\tthis.setComputationPrecision(g0.getPrecisionModel());\n\t\tthis._arg = new Array(1).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0);\n\t\t;\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1, BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tif (g0.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) this.setComputationPrecision(g0.getPrecisionModel()); else this.setComputationPrecision(g1.getPrecisionModel());\n\t\tthis._arg = new Array(2).fill(null);\n\t\tthis._arg[0] = new GeometryGraph(0, g0, boundaryNodeRule);\n\t\tthis._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n\t}\n}\nextend(GeometryGraphOperation.prototype, {\n\tgetArgGeometry: function (i) {\n\t\treturn this._arg[i].getGeometry();\n\t},\n\tsetComputationPrecision: function (pm) {\n\t\tthis._resultPrecisionModel = pm;\n\t\tthis._li.setPrecisionModel(this._resultPrecisionModel);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryGraphOperation;\n\t}\n});\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport EdgeNodingValidator from '../../geomgraph/EdgeNodingValidator';\nimport GeometryCollectionMapper from '../../geom/util/GeometryCollectionMapper';\nimport PolygonBuilder from './PolygonBuilder';\nimport Position from '../../geomgraph/Position';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport LineBuilder from './LineBuilder';\nimport PointBuilder from './PointBuilder';\nimport SnapIfNeededOverlayOp from './snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport Label from '../../geomgraph/Label';\nimport OverlayNodeFactory from './OverlayNodeFactory';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport EdgeList from '../../geomgraph/EdgeList';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function OverlayOp() {\n\tthis._ptLocator = new PointLocator();\n\tthis._geomFact = null;\n\tthis._resultGeom = null;\n\tthis._graph = null;\n\tthis._edgeList = new EdgeList();\n\tthis._resultPolyList = new ArrayList();\n\tthis._resultLineList = new ArrayList();\n\tthis._resultPointList = new ArrayList();\n\tlet g0 = arguments[0], g1 = arguments[1];\n\tGeometryGraphOperation.call(this, g0, g1);\n\tthis._graph = new PlanarGraph(new OverlayNodeFactory());\n\tthis._geomFact = g0.getFactory();\n}\ninherits(OverlayOp, GeometryGraphOperation);\nextend(OverlayOp.prototype, {\n\tinsertUniqueEdge: function (e) {\n\t\tvar existingEdge = this._edgeList.findEqualEdge(e);\n\t\tif (existingEdge !== null) {\n\t\t\tvar existingLabel = existingEdge.getLabel();\n\t\t\tvar labelToMerge = e.getLabel();\n\t\t\tif (!existingEdge.isPointwiseEqual(e)) {\n\t\t\t\tlabelToMerge = new Label(e.getLabel());\n\t\t\t\tlabelToMerge.flip();\n\t\t\t}\n\t\t\tvar depth = existingEdge.getDepth();\n\t\t\tif (depth.isNull()) {\n\t\t\t\tdepth.add(existingLabel);\n\t\t\t}\n\t\t\tdepth.add(labelToMerge);\n\t\t\texistingLabel.merge(labelToMerge);\n\t\t} else {\n\t\t\tthis._edgeList.add(e);\n\t\t}\n\t},\n\tgetGraph: function () {\n\t\treturn this._graph;\n\t},\n\tcancelDuplicateResultEdges: function () {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.isInResult() && sym.isInResult()) {\n\t\t\t\tde.setInResult(false);\n\t\t\t\tsym.setInResult(false);\n\t\t\t}\n\t\t}\n\t},\n\tisCoveredByLA: function (coord) {\n\t\tif (this.isCovered(coord, this._resultLineList)) return true;\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tcomputeGeometry: function (resultPointList, resultLineList, resultPolyList, opcode) {\n\t\tvar geomList = new ArrayList();\n\t\tgeomList.addAll(resultPointList);\n\t\tgeomList.addAll(resultLineList);\n\t\tgeomList.addAll(resultPolyList);\n\t\tif (geomList.isEmpty()) return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact);\n\t\treturn this._geomFact.buildGeometry(geomList);\n\t},\n\tmergeSymLabels: function () {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().mergeSymLabels();\n\t\t}\n\t},\n\tisCovered: function (coord, geomList) {\n\t\tfor (var it = geomList.iterator(); it.hasNext(); ) {\n\t\t\tvar geom = it.next();\n\t\t\tvar loc = this._ptLocator.locate(coord, geom);\n\t\t\tif (loc !== Location.EXTERIOR) return true;\n\t\t}\n\t\treturn false;\n\t},\n\treplaceCollapsedEdges: function () {\n\t\tvar newEdges = new ArrayList();\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.isCollapsed()) {\n\t\t\t\tit.remove();\n\t\t\t\tnewEdges.add(e.getCollapsedEdge());\n\t\t\t}\n\t\t}\n\t\tthis._edgeList.addAll(newEdges);\n\t},\n\tupdateNodeLabelling: function () {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tvar lbl = node.getEdges().getLabel();\n\t\t\tnode.getLabel().merge(lbl);\n\t\t}\n\t},\n\tgetResultGeometry: function (overlayOpCode) {\n\t\tthis.computeOverlay(overlayOpCode);\n\t\treturn this._resultGeom;\n\t},\n\tinsertUniqueEdges: function (edges) {\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.insertUniqueEdge(e);\n\t\t}\n\t},\n\tcomputeOverlay: function (opCode) {\n\t\tthis.copyPoints(0);\n\t\tthis.copyPoints(1);\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tthis._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n\t\tvar baseSplitEdges = new ArrayList();\n\t\tthis._arg[0].computeSplitEdges(baseSplitEdges);\n\t\tthis._arg[1].computeSplitEdges(baseSplitEdges);\n\t\tvar splitEdges = baseSplitEdges;\n\t\tthis.insertUniqueEdges(baseSplitEdges);\n\t\tthis.computeLabelsFromDepths();\n\t\tthis.replaceCollapsedEdges();\n\t\tEdgeNodingValidator.checkValid(this._edgeList.getEdges());\n\t\tthis._graph.addEdges(this._edgeList.getEdges());\n\t\tthis.computeLabelling();\n\t\tthis.labelIncompleteNodes();\n\t\tthis.findResultAreaEdges(opCode);\n\t\tthis.cancelDuplicateResultEdges();\n\t\tvar polyBuilder = new PolygonBuilder(this._geomFact);\n\t\tpolyBuilder.add(this._graph);\n\t\tthis._resultPolyList = polyBuilder.getPolygons();\n\t\tvar lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultLineList = lineBuilder.build(opCode);\n\t\tvar pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n\t\tthis._resultPointList = pointBuilder.build(opCode);\n\t\tthis._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n\t},\n\tlabelIncompleteNode: function (n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setLocation(targetIndex, loc);\n\t},\n\tcopyPoints: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._graph.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tfindResultAreaEdges: function (opCode) {\n\t\tfor (var it = this._graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tif (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelsFromDepths: function () {\n\t\tfor (var it = this._edgeList.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar lbl = e.getLabel();\n\t\t\tvar depth = e.getDepth();\n\t\t\tif (!depth.isNull()) {\n\t\t\t\tdepth.normalize();\n\t\t\t\tfor (var i = 0; i < 2; i++) {\n\t\t\t\t\tif (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n\t\t\t\t\t\tif (depth.getDelta(i) === 0) {\n\t\t\t\t\t\t\tlbl.toLine(i);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.LEFT), \"depth of LEFT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n\t\t\t\t\t\t\tAssert.isTrue(!depth.isNull(i, Position.RIGHT), \"depth of RIGHT side has not been initialized\");\n\t\t\t\t\t\t\tlbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tcomputeLabelling: function () {\n\t\tfor (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext(); ) {\n\t\t\tvar node = nodeit.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t\tthis.mergeSymLabels();\n\t\tthis.updateNodeLabelling();\n\t},\n\tlabelIncompleteNodes: function () {\n\t\tvar nodeCount = 0;\n\t\tfor (var ni = this._graph.getNodes().iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tnodeCount++;\n\t\t\t\tif (label.isNull(0)) this.labelIncompleteNode(n, 0); else this.labelIncompleteNode(n, 1);\n\t\t\t}\n\t\t\tn.getEdges().updateLabelling(label);\n\t\t}\n\t},\n\tisCoveredByA: function (coord) {\n\t\tif (this.isCovered(coord, this._resultPolyList)) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn OverlayOp;\n\t}\n});\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n\tvar gov = new OverlayOp(geom0, geom1);\n\tvar geomOv = gov.getResultGeometry(opCode);\n\treturn geomOv;\n};\nOverlayOp.union = function (geom, other) {\n\tif (geom.isEmpty() || other.isEmpty()) {\n\t\tif (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, geom, other, geom.getFactory());\n\t\tif (geom.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return geom.copy();\n\t}\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.UNION);\n};\nOverlayOp.intersection = function (geom, other) {\n\tif (geom.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, geom, other, geom.getFactory());\n\tif (geom.isGeometryCollection()) {\n\t\tvar g2 = other;\n\t\treturn GeometryCollectionMapper.map(geom, {\n\t\t\tinterfaces_: function () {\n\t\t\t\treturn [MapOp];\n\t\t\t},\n\t\t\tmap: function (g) {\n\t\t\t\treturn g.intersection(g2);\n\t\t\t}\n\t\t});\n\t}\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.INTERSECTION);\n};\nOverlayOp.symDifference = function (geom, other) {\n\tif (geom.isEmpty() || other.isEmpty()) {\n\t\tif (geom.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, geom, other, geom.getFactory());\n\t\tif (geom.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return geom.copy();\n\t}\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.SYMDIFFERENCE);\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n\tvar dim0 = g0.getDimension();\n\tvar dim1 = g1.getDimension();\n\tvar resultDimension = -1;\n\tswitch (opCode) {\n\t\tcase OverlayOp.INTERSECTION:\n\t\t\tresultDimension = Math.min(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.UNION:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t\tcase OverlayOp.DIFFERENCE:\n\t\t\tresultDimension = dim0;\n\t\t\tbreak;\n\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\tresultDimension = Math.max(dim0, dim1);\n\t\t\tbreak;\n\t}\n\treturn resultDimension;\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n\tvar result = null;\n\tswitch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n\t\tcase -1:\n\t\t\tresult = geomFact.createGeometryCollection();\n\t\t\tbreak;\n\t\tcase 0:\n\t\t\tresult = geomFact.createPoint();\n\t\t\tbreak;\n\t\tcase 1:\n\t\t\tresult = geomFact.createLineString();\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tresult = geomFact.createPolygon();\n\t\t\tbreak;\n\t}\n\treturn result;\n};\nOverlayOp.difference = function (geom, other) {\n\tif (geom.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, geom, other, geom.getFactory());\n\tif (other.isEmpty()) return geom.copy();\n\tif (geom.isGeometryCollection() || other.isGeometryCollection()) throw new IllegalArgumentException(\"This method does not support GeometryCollection arguments\");\n\treturn SnapIfNeededOverlayOp.overlayOp(geom, other, OverlayOp.DIFFERENCE);\n};\nOverlayOp.isResultOfOp = function () {\n\tif (arguments.length === 2) {\n\t\tlet label = arguments[0], opCode = arguments[1];\n\t\tvar loc0 = label.getLocation(0);\n\t\tvar loc1 = label.getLocation(1);\n\t\treturn OverlayOp.isResultOfOp(loc0, loc1, opCode);\n\t} else if (arguments.length === 3) {\n\t\tlet loc0 = arguments[0], loc1 = arguments[1], overlayOpCode = arguments[2];\n\t\tif (loc0 === Location.BOUNDARY) loc0 = Location.INTERIOR;\n\t\tif (loc1 === Location.BOUNDARY) loc1 = Location.INTERIOR;\n\t\tswitch (overlayOpCode) {\n\t\t\tcase OverlayOp.INTERSECTION:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.UNION:\n\t\t\t\treturn loc0 === Location.INTERIOR || loc1 === Location.INTERIOR;\n\t\t\tcase OverlayOp.DIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR;\n\t\t\tcase OverlayOp.SYMDIFFERENCE:\n\t\t\t\treturn loc0 === Location.INTERIOR && loc1 !== Location.INTERIOR || loc0 !== Location.INTERIOR && loc1 === Location.INTERIOR;\n\t\t}\n\t\treturn false;\n\t}\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n","import extend from '../../../../../extend';\nimport DirectedEdge from '../../planargraph/DirectedEdge';\nimport inherits from '../../../../../inherits';\nexport default function PolygonizeDirectedEdge() {\n\tthis._edgeRing = null;\n\tthis._next = null;\n\tthis._label = -1;\n\tlet from = arguments[0], to = arguments[1], directionPt = arguments[2], edgeDirection = arguments[3];\n\tDirectedEdge.call(this, from, to, directionPt, edgeDirection);\n}\ninherits(PolygonizeDirectedEdge, DirectedEdge);\nextend(PolygonizeDirectedEdge.prototype, {\n\tgetNext: function () {\n\t\treturn this._next;\n\t},\n\tisInRing: function () {\n\t\treturn this._edgeRing !== null;\n\t},\n\tsetRing: function (edgeRing) {\n\t\tthis._edgeRing = edgeRing;\n\t},\n\tsetLabel: function (label) {\n\t\tthis._label = label;\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tsetNext: function (next) {\n\t\tthis._next = next;\n\t},\n\tgetRing: function () {\n\t\treturn this._edgeRing;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeDirectedEdge;\n\t}\n});\n","import extend from '../../../../../extend';\nimport Edge from '../../planargraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function PolygonizeEdge() {\n\tEdge.apply(this);\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n}\ninherits(PolygonizeEdge, Edge);\nextend(PolygonizeEdge.prototype, {\n\tgetLine: function () {\n\t\treturn this._line;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeEdge;\n\t}\n});\n","import CoordinateList from '../../geom/CoordinateList';\nimport WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport PointLocation from '../../algorithm/PointLocation';\nimport LinearRing from '../../geom/LinearRing';\nimport extend from '../../../../../extend';\nimport Exception from '../../../../../java/lang/Exception';\nimport Orientation from '../../algorithm/Orientation';\nimport System from '../../../../../java/lang/System';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Comparator from '../../../../../java/util/Comparator';\nimport Assert from '../../util/Assert';\nexport default function EdgeRing() {\n\tthis._factory = null;\n\tthis._deList = new ArrayList();\n\tthis._lowestEdge = null;\n\tthis._ring = null;\n\tthis._ringPts = null;\n\tthis._holes = null;\n\tthis._shell = null;\n\tthis._isHole = null;\n\tthis._isProcessed = false;\n\tthis._isIncludedSet = false;\n\tthis._isIncluded = false;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n}\nextend(EdgeRing.prototype, {\n\tisIncluded: function () {\n\t\treturn this._isIncluded;\n\t},\n\tgetCoordinates: function () {\n\t\tif (this._ringPts === null) {\n\t\t\tvar coordList = new CoordinateList();\n\t\t\tfor (var i = this._deList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tvar edge = de.getEdge();\n\t\t\t\tEdgeRing.addEdge(edge.getLine().getCoordinates(), de.getEdgeDirection(), coordList);\n\t\t\t}\n\t\t\tthis._ringPts = coordList.toCoordinateArray();\n\t\t}\n\t\treturn this._ringPts;\n\t},\n\tisIncludedSet: function () {\n\t\treturn this._isIncludedSet;\n\t},\n\tisValid: function () {\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length <= 3) return false;\n\t\tthis.getRing();\n\t\treturn this._ring.isValid();\n\t},\n\tbuild: function (startDE) {\n\t\tvar de = startDE;\n\t\tdo {\n\t\t\tthis.add(de);\n\t\t\tde.setRing(this);\n\t\t\tde = de.getNext();\n\t\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t\t} while (de !== startDE);\n\t},\n\tisOuterHole: function () {\n\t\tif (!this._isHole) return false;\n\t\treturn !this.hasShell();\n\t},\n\tgetPolygon: function () {\n\t\tvar holeLR = null;\n\t\tif (this._holes !== null) {\n\t\t\tholeLR = new Array(this._holes.size()).fill(null);\n\t\t\tfor (var i = 0; i < this._holes.size(); i++) {\n\t\t\t\tholeLR[i] = this._holes.get(i);\n\t\t\t}\n\t\t}\n\t\tvar poly = this._factory.createPolygon(this._ring, holeLR);\n\t\treturn poly;\n\t},\n\tisHole: function () {\n\t\treturn this._isHole;\n\t},\n\tisProcessed: function () {\n\t\treturn this._isProcessed;\n\t},\n\taddHole: function () {\n\t\tif (arguments[0] instanceof LinearRing) {\n\t\t\tlet hole = arguments[0];\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t} else if (arguments[0] instanceof EdgeRing) {\n\t\t\tlet holeER = arguments[0];\n\t\t\tholeER.setShell(this);\n\t\t\tvar hole = holeER.getRing();\n\t\t\tif (this._holes === null) this._holes = new ArrayList();\n\t\t\tthis._holes.add(hole);\n\t\t}\n\t},\n\tsetIncluded: function (isIncluded) {\n\t\tthis._isIncluded = isIncluded;\n\t\tthis._isIncludedSet = true;\n\t},\n\tgetOuterHole: function () {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjRing = de.getSym().getRing();\n\t\t\tif (adjRing.isOuterHole()) return adjRing;\n\t\t}\n\t\treturn null;\n\t},\n\tcomputeHole: function () {\n\t\tvar ring = this.getRing();\n\t\tthis._isHole = Orientation.isCCW(ring.getCoordinates());\n\t},\n\thasShell: function () {\n\t\treturn this._shell !== null;\n\t},\n\tisOuterShell: function () {\n\t\treturn this.getOuterHole() !== null;\n\t},\n\tgetLineString: function () {\n\t\tthis.getCoordinates();\n\t\treturn this._factory.createLineString(this._ringPts);\n\t},\n\ttoString: function () {\n\t\treturn WKTWriter.toLineString(new CoordinateArraySequence(this.getCoordinates()));\n\t},\n\tgetShell: function () {\n\t\tif (this.isHole()) return this._shell;\n\t\treturn this;\n\t},\n\tadd: function (de) {\n\t\tthis._deList.add(de);\n\t},\n\tgetRing: function () {\n\t\tif (this._ring !== null) return this._ring;\n\t\tthis.getCoordinates();\n\t\tif (this._ringPts.length < 3) System.out.println(this._ringPts);\n\t\ttry {\n\t\t\tthis._ring = this._factory.createLinearRing(this._ringPts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof Exception) {\n\t\t\t\tSystem.out.println(this._ringPts);\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\treturn this._ring;\n\t},\n\tupdateIncluded: function () {\n\t\tif (this.isHole()) return null;\n\t\tfor (var i = 0; i < this._deList.size(); i++) {\n\t\t\tvar de = this._deList.get(i);\n\t\t\tvar adjShell = de.getSym().getRing().getShell();\n\t\t\tif (adjShell !== null && adjShell.isIncludedSet()) {\n\t\t\t\tthis.setIncluded(!adjShell.isIncluded());\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tsetShell: function (shell) {\n\t\tthis._shell = shell;\n\t},\n\tsetProcessed: function (isProcessed) {\n\t\tthis._isProcessed = isProcessed;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeRing;\n\t}\n});\nEdgeRing.findDirEdgesInRing = function (startDE) {\n\tvar de = startDE;\n\tvar edges = new ArrayList();\n\tdo {\n\t\tedges.add(de);\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn edges;\n};\nEdgeRing.addEdge = function (coords, isForward, coordList) {\n\tif (isForward) {\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t} else {\n\t\tfor (var i = coords.length - 1; i >= 0; i--) {\n\t\t\tcoordList.add(coords[i], false);\n\t\t}\n\t}\n};\nEdgeRing.findEdgeRingContaining = function (testEr, shellList) {\n\tvar testRing = testEr.getRing();\n\tvar testEnv = testRing.getEnvelopeInternal();\n\tvar testPt = testRing.getCoordinateN(0);\n\tvar minShell = null;\n\tvar minShellEnv = null;\n\tfor (var it = shellList.iterator(); it.hasNext(); ) {\n\t\tvar tryShell = it.next();\n\t\tvar tryShellRing = tryShell.getRing();\n\t\tvar tryShellEnv = tryShellRing.getEnvelopeInternal();\n\t\tif (tryShellEnv.equals(testEnv)) continue;\n\t\tif (!tryShellEnv.contains(testEnv)) continue;\n\t\ttestPt = CoordinateArrays.ptNotInList(testRing.getCoordinates(), tryShellRing.getCoordinates());\n\t\tvar isContained = false;\n\t\tif (PointLocation.isInRing(testPt, tryShellRing.getCoordinates())) isContained = true;\n\t\tif (isContained) {\n\t\t\tif (minShell === null || minShellEnv.contains(tryShellEnv)) {\n\t\t\t\tminShell = tryShell;\n\t\t\t\tminShellEnv = minShell.getRing().getEnvelopeInternal();\n\t\t\t}\n\t\t}\n\t}\n\treturn minShell;\n};\nfunction EnvelopeComparator() {}\nextend(EnvelopeComparator.prototype, {\n\tcompare: function (obj0, obj1) {\n\t\tvar r0 = obj0;\n\t\tvar r1 = obj1;\n\t\treturn r0.getRing().getEnvelope().compareTo(r1.getRing().getEnvelope());\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparator];\n\t},\n\tgetClass: function () {\n\t\treturn EnvelopeComparator;\n\t}\n});\nEdgeRing.EnvelopeComparator = EnvelopeComparator;\n","import PolygonizeDirectedEdge from './PolygonizeDirectedEdge';\nimport HashSet from '../../../../../java/util/HashSet';\nimport Stack from '../../../../../java/util/Stack';\nimport Node from '../../planargraph/Node';\nimport PolygonizeEdge from './PolygonizeEdge';\nimport extend from '../../../../../extend';\nimport EdgeRing from './EdgeRing';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport inherits from '../../../../../inherits';\nimport PlanarGraph from '../../planargraph/PlanarGraph';\nexport default function PolygonizeGraph() {\n\tPlanarGraph.apply(this);\n\tthis._factory = null;\n\tlet factory = arguments[0];\n\tthis._factory = factory;\n}\ninherits(PolygonizeGraph, PlanarGraph);\nextend(PolygonizeGraph.prototype, {\n\tfindEdgeRing: function (startDE) {\n\t\tvar er = new EdgeRing(this._factory);\n\t\ter.build(startDE);\n\t\treturn er;\n\t},\n\tcomputeDepthParity: function () {\n\t\tif (arguments.length === 0) {\n\t\t\twhile (true) {\n\t\t\t\tvar de = null;\n\t\t\t\tif (de === null) return null;\n\t\t\t\tthis.computeDepthParity(de);\n\t\t\t}\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet de = arguments[0];\n\t\t}\n\t},\n\tcomputeNextCWEdges: function () {\n\t\tfor (var iNode = this.nodeIterator(); iNode.hasNext(); ) {\n\t\t\tvar node = iNode.next();\n\t\t\tPolygonizeGraph.computeNextCWEdges(node);\n\t\t}\n\t},\n\taddEdge: function (line) {\n\t\tif (line.isEmpty()) {\n\t\t\treturn null;\n\t\t}\n\t\tvar linePts = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n\t\tif (linePts.length < 2) {\n\t\t\treturn null;\n\t\t}\n\t\tvar startPt = linePts[0];\n\t\tvar endPt = linePts[linePts.length - 1];\n\t\tvar nStart = this.getNode(startPt);\n\t\tvar nEnd = this.getNode(endPt);\n\t\tvar de0 = new PolygonizeDirectedEdge(nStart, nEnd, linePts[1], true);\n\t\tvar de1 = new PolygonizeDirectedEdge(nEnd, nStart, linePts[linePts.length - 2], false);\n\t\tvar edge = new PolygonizeEdge(line);\n\t\tedge.setDirectedEdges(de0, de1);\n\t\tthis.add(edge);\n\t},\n\tdeleteCutEdges: function () {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tvar cutLines = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tvar sym = de.getSym();\n\t\t\tif (de.getLabel() === sym.getLabel()) {\n\t\t\t\tde.setMarked(true);\n\t\t\t\tsym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tcutLines.add(e.getLine());\n\t\t\t}\n\t\t}\n\t\treturn cutLines;\n\t},\n\tgetEdgeRings: function () {\n\t\tthis.computeNextCWEdges();\n\t\tPolygonizeGraph.label(this._dirEdges, -1);\n\t\tvar maximalRings = PolygonizeGraph.findLabeledEdgeRings(this._dirEdges);\n\t\tthis.convertMaximalToMinimalEdgeRings(maximalRings);\n\t\tvar edgeRingList = new ArrayList();\n\t\tfor (var i = this._dirEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tif (de.isMarked()) continue;\n\t\t\tif (de.isInRing()) continue;\n\t\t\tvar er = this.findEdgeRing(de);\n\t\t\tedgeRingList.add(er);\n\t\t}\n\t\treturn edgeRingList;\n\t},\n\tgetNode: function (pt) {\n\t\tvar node = this.findNode(pt);\n\t\tif (node === null) {\n\t\t\tnode = new Node(pt);\n\t\t\tthis.add(node);\n\t\t}\n\t\treturn node;\n\t},\n\tconvertMaximalToMinimalEdgeRings: function (ringEdges) {\n\t\tfor (var i = ringEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar de = i.next();\n\t\t\tvar label = de.getLabel();\n\t\t\tvar intNodes = PolygonizeGraph.findIntersectionNodes(de, label);\n\t\t\tif (intNodes === null) continue;\n\t\t\tfor (var iNode = intNodes.iterator(); iNode.hasNext(); ) {\n\t\t\t\tvar node = iNode.next();\n\t\t\t\tPolygonizeGraph.computeNextCCWEdges(node, label);\n\t\t\t}\n\t\t}\n\t},\n\tdeleteDangles: function () {\n\t\tvar nodesToRemove = this.findNodesOfDegree(1);\n\t\tvar dangleLines = new HashSet();\n\t\tvar nodeStack = new Stack();\n\t\tfor (var i = nodesToRemove.iterator(); i.hasNext(); ) {\n\t\t\tnodeStack.push(i.next());\n\t\t}\n\t\twhile (!nodeStack.isEmpty()) {\n\t\t\tvar node = nodeStack.pop();\n\t\t\tPolygonizeGraph.deleteAllEdges(node);\n\t\t\tvar nodeOutEdges = node.getOutEdges().getEdges();\n\t\t\tfor (var i = nodeOutEdges.iterator(); i.hasNext(); ) {\n\t\t\t\tvar de = i.next();\n\t\t\t\tde.setMarked(true);\n\t\t\t\tvar sym = de.getSym();\n\t\t\t\tif (sym !== null) sym.setMarked(true);\n\t\t\t\tvar e = de.getEdge();\n\t\t\t\tdangleLines.add(e.getLine());\n\t\t\t\tvar toNode = de.getToNode();\n\t\t\t\tif (PolygonizeGraph.getDegreeNonDeleted(toNode) === 1) nodeStack.push(toNode);\n\t\t\t}\n\t\t}\n\t\treturn dangleLines;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PolygonizeGraph;\n\t}\n});\nPolygonizeGraph.findLabeledEdgeRings = function (dirEdges) {\n\tvar edgeRingStarts = new ArrayList();\n\tvar currLabel = 1;\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (de.isMarked()) continue;\n\t\tif (de.getLabel() >= 0) continue;\n\t\tedgeRingStarts.add(de);\n\t\tvar edges = EdgeRing.findDirEdgesInRing(de);\n\t\tPolygonizeGraph.label(edges, currLabel);\n\t\tcurrLabel++;\n\t}\n\treturn edgeRingStarts;\n};\nPolygonizeGraph.getDegreeNonDeleted = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (!de.isMarked()) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.deleteAllEdges = function (node) {\n\tvar edges = node.getOutEdges().getEdges();\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tde.setMarked(true);\n\t\tvar sym = de.getSym();\n\t\tif (sym !== null) sym.setMarked(true);\n\t}\n};\nPolygonizeGraph.label = function (dirEdges, label) {\n\tfor (var i = dirEdges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tde.setLabel(label);\n\t}\n};\nPolygonizeGraph.computeNextCWEdges = function (node) {\n\tvar deStar = node.getOutEdges();\n\tvar startDE = null;\n\tvar prevDE = null;\n\tfor (var i = deStar.getEdges().iterator(); i.hasNext(); ) {\n\t\tvar outDE = i.next();\n\t\tif (outDE.isMarked()) continue;\n\t\tif (startDE === null) startDE = outDE;\n\t\tif (prevDE !== null) {\n\t\t\tvar sym = prevDE.getSym();\n\t\t\tsym.setNext(outDE);\n\t\t}\n\t\tprevDE = outDE;\n\t}\n\tif (prevDE !== null) {\n\t\tvar sym = prevDE.getSym();\n\t\tsym.setNext(startDE);\n\t}\n};\nPolygonizeGraph.computeNextCCWEdges = function (node, label) {\n\tvar deStar = node.getOutEdges();\n\tvar firstOutDE = null;\n\tvar prevInDE = null;\n\tvar edges = deStar.getEdges();\n\tfor (var i = edges.size() - 1; i >= 0; i--) {\n\t\tvar de = edges.get(i);\n\t\tvar sym = de.getSym();\n\t\tvar outDE = null;\n\t\tif (de.getLabel() === label) outDE = de;\n\t\tvar inDE = null;\n\t\tif (sym.getLabel() === label) inDE = sym;\n\t\tif (outDE === null && inDE === null) continue;\n\t\tif (inDE !== null) {\n\t\t\tprevInDE = inDE;\n\t\t}\n\t\tif (outDE !== null) {\n\t\t\tif (prevInDE !== null) {\n\t\t\t\tprevInDE.setNext(outDE);\n\t\t\t\tprevInDE = null;\n\t\t\t}\n\t\t\tif (firstOutDE === null) firstOutDE = outDE;\n\t\t}\n\t}\n\tif (prevInDE !== null) {\n\t\tAssert.isTrue(firstOutDE !== null);\n\t\tprevInDE.setNext(firstOutDE);\n\t}\n};\nPolygonizeGraph.getDegree = function (node, label) {\n\tvar edges = node.getOutEdges().getEdges();\n\tvar degree = 0;\n\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\tvar de = i.next();\n\t\tif (de.getLabel() === label) degree++;\n\t}\n\treturn degree;\n};\nPolygonizeGraph.findIntersectionNodes = function (startDE, label) {\n\tvar de = startDE;\n\tvar intNodes = null;\n\tdo {\n\t\tvar node = de.getFromNode();\n\t\tif (PolygonizeGraph.getDegree(node, label) > 1) {\n\t\t\tif (intNodes === null) intNodes = new ArrayList();\n\t\t\tintNodes.add(node);\n\t\t}\n\t\tde = de.getNext();\n\t\tAssert.isTrue(de !== null, \"found null DE in ring\");\n\t\tAssert.isTrue(de === startDE || !de.isInRing(), \"found DE already in ring\");\n\t} while (de !== startDE);\n\treturn intNodes;\n};\n","import LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport PolygonizeGraph from './PolygonizeGraph';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Collection from '../../../../../java/util/Collection';\nimport extend from '../../../../../extend';\nimport Collections from '../../../../../java/util/Collections';\nimport EdgeRing from './EdgeRing';\nimport GeometryComponentFilter from '../../geom/GeometryComponentFilter';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function Polygonizer() {\n\tthis._lineStringAdder = new LineStringAdder(this);\n\tthis._graph = null;\n\tthis._dangles = new ArrayList();\n\tthis._cutEdges = new ArrayList();\n\tthis._invalidRingLines = new ArrayList();\n\tthis._holeList = null;\n\tthis._shellList = null;\n\tthis._polyList = null;\n\tthis._isCheckingRingsValid = true;\n\tthis._extractOnlyPolygonal = null;\n\tthis._geomFactory = null;\n\tif (arguments.length === 0) {\n\t\tPolygonizer.call(this, false);\n\t} else if (arguments.length === 1) {\n\t\tlet extractOnlyPolygonal = arguments[0];\n\t\tthis._extractOnlyPolygonal = extractOnlyPolygonal;\n\t}\n}\nextend(Polygonizer.prototype, {\n\tgetGeometry: function () {\n\t\tif (this._geomFactory === null) this._geomFactory = new GeometryFactory();\n\t\tthis.polygonize();\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\treturn this._geomFactory.buildGeometry(this._polyList);\n\t\t}\n\t\treturn this._geomFactory.createGeometryCollection(GeometryFactory.toGeometryArray(this._polyList));\n\t},\n\tgetInvalidRingLines: function () {\n\t\tthis.polygonize();\n\t\treturn this._invalidRingLines;\n\t},\n\tfindValidRings: function (edgeRingList, validEdgeRingList, invalidRingList) {\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isValid()) validEdgeRingList.add(er); else invalidRingList.add(er.getLineString());\n\t\t}\n\t},\n\tpolygonize: function () {\n\t\tif (this._polyList !== null) return null;\n\t\tthis._polyList = new ArrayList();\n\t\tif (this._graph === null) return null;\n\t\tthis._dangles = this._graph.deleteDangles();\n\t\tthis._cutEdges = this._graph.deleteCutEdges();\n\t\tvar edgeRingList = this._graph.getEdgeRings();\n\t\tvar validEdgeRingList = new ArrayList();\n\t\tthis._invalidRingLines = new ArrayList();\n\t\tif (this._isCheckingRingsValid) {\n\t\t\tthis.findValidRings(edgeRingList, validEdgeRingList, this._invalidRingLines);\n\t\t} else {\n\t\t\tvalidEdgeRingList = edgeRingList;\n\t\t}\n\t\tthis.findShellsAndHoles(validEdgeRingList);\n\t\tPolygonizer.assignHolesToShells(this._holeList, this._shellList);\n\t\tCollections.sort(this._shellList, new EdgeRing.EnvelopeComparator());\n\t\tvar includeAll = true;\n\t\tif (this._extractOnlyPolygonal) {\n\t\t\tPolygonizer.findDisjointShells(this._shellList);\n\t\t\tincludeAll = false;\n\t\t}\n\t\tthis._polyList = Polygonizer.extractPolygons(this._shellList, includeAll);\n\t},\n\tgetDangles: function () {\n\t\tthis.polygonize();\n\t\treturn this._dangles;\n\t},\n\tgetCutEdges: function () {\n\t\tthis.polygonize();\n\t\treturn this._cutEdges;\n\t},\n\tgetPolygons: function () {\n\t\tthis.polygonize();\n\t\treturn this._polyList;\n\t},\n\tadd: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geomList = arguments[0];\n\t\t\tfor (var i = geomList.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geometry = i.next();\n\t\t\t\tthis.add(geometry);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tthis._geomFactory = line.getFactory();\n\t\t\tif (this._graph === null) this._graph = new PolygonizeGraph(this._geomFactory);\n\t\t\tthis._graph.addEdge(line);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tg.apply(this._lineStringAdder);\n\t\t}\n\t},\n\tsetCheckRingsValid: function (isCheckingRingsValid) {\n\t\tthis._isCheckingRingsValid = isCheckingRingsValid;\n\t},\n\tfindShellsAndHoles: function (edgeRingList) {\n\t\tthis._holeList = new ArrayList();\n\t\tthis._shellList = new ArrayList();\n\t\tfor (var i = edgeRingList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\ter.computeHole();\n\t\t\tif (er.isHole()) this._holeList.add(er); else this._shellList.add(er);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Polygonizer;\n\t}\n});\nPolygonizer.findOuterShells = function (shellList) {\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\tvar er = i.next();\n\t\tvar outerHoleER = er.getOuterHole();\n\t\tif (outerHoleER !== null && !outerHoleER.isProcessed()) {\n\t\t\ter.setIncluded(true);\n\t\t\touterHoleER.setProcessed(true);\n\t\t}\n\t}\n};\nPolygonizer.extractPolygons = function (shellList, includeAll) {\n\tvar polyList = new ArrayList();\n\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\tvar er = i.next();\n\t\tif (includeAll || er.isIncluded()) {\n\t\t\tpolyList.add(er.getPolygon());\n\t\t}\n\t}\n\treturn polyList;\n};\nPolygonizer.assignHolesToShells = function (holeList, shellList) {\n\tfor (var i = holeList.iterator(); i.hasNext(); ) {\n\t\tvar holeER = i.next();\n\t\tPolygonizer.assignHoleToShell(holeER, shellList);\n\t}\n};\nPolygonizer.assignHoleToShell = function (holeER, shellList) {\n\tvar shell = EdgeRing.findEdgeRingContaining(holeER, shellList);\n\tif (shell !== null) {\n\t\tshell.addHole(holeER);\n\t}\n};\nPolygonizer.findDisjointShells = function (shellList) {\n\tPolygonizer.findOuterShells(shellList);\n\tvar isMoreToScan = null;\n\tdo {\n\t\tisMoreToScan = false;\n\t\tfor (var i = shellList.iterator(); i.hasNext(); ) {\n\t\t\tvar er = i.next();\n\t\t\tif (er.isIncludedSet()) continue;\n\t\t\ter.updateIncluded();\n\t\t\tif (!er.isIncludedSet()) {\n\t\t\t\tisMoreToScan = true;\n\t\t\t}\n\t\t}\n\t} while (isMoreToScan);\n};\nfunction LineStringAdder() {\n\tthis.p = null;\n\tlet p = arguments[0];\n\tthis.p = p;\n}\nextend(LineStringAdder.prototype, {\n\tfilter: function (g) {\n\t\tif (g instanceof LineString) this.p.add(g);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringAdder;\n\t}\n});\nPolygonizer.LineStringAdder = LineStringAdder;\n","import EdgeEnd from '../../geomgraph/EdgeEnd';\nimport extend from '../../../../../extend';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function EdgeEndBuilder() {}\nextend(EdgeEndBuilder.prototype, {\n\tcreateEdgeEndForNext: function (edge, l, eiCurr, eiNext) {\n\t\tvar iNext = eiCurr.segmentIndex + 1;\n\t\tif (iNext >= edge.getNumPoints() && eiNext === null) return null;\n\t\tvar pNext = edge.getCoordinate(iNext);\n\t\tif (eiNext !== null && eiNext.segmentIndex === eiCurr.segmentIndex) pNext = eiNext.coord;\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pNext, new Label(edge.getLabel()));\n\t\tl.add(e);\n\t},\n\tcreateEdgeEndForPrev: function (edge, l, eiCurr, eiPrev) {\n\t\tvar iPrev = eiCurr.segmentIndex;\n\t\tif (eiCurr.dist === 0.0) {\n\t\t\tif (iPrev === 0) return null;\n\t\t\tiPrev--;\n\t\t}\n\t\tvar pPrev = edge.getCoordinate(iPrev);\n\t\tif (eiPrev !== null && eiPrev.segmentIndex >= iPrev) pPrev = eiPrev.coord;\n\t\tvar label = new Label(edge.getLabel());\n\t\tlabel.flip();\n\t\tvar e = new EdgeEnd(edge, eiCurr.coord, pPrev, label);\n\t\tl.add(e);\n\t},\n\tcomputeEdgeEnds: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet edges = arguments[0];\n\t\t\tvar l = new ArrayList();\n\t\t\tfor (var i = edges; i.hasNext(); ) {\n\t\t\t\tvar e = i.next();\n\t\t\t\tthis.computeEdgeEnds(e, l);\n\t\t\t}\n\t\t\treturn l;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet edge = arguments[0], l = arguments[1];\n\t\t\tvar eiList = edge.getEdgeIntersectionList();\n\t\t\teiList.addEndpoints();\n\t\t\tvar it = eiList.iterator();\n\t\t\tvar eiPrev = null;\n\t\t\tvar eiCurr = null;\n\t\t\tif (!it.hasNext()) return null;\n\t\t\tvar eiNext = it.next();\n\t\t\tdo {\n\t\t\t\teiPrev = eiCurr;\n\t\t\t\teiCurr = eiNext;\n\t\t\t\teiNext = null;\n\t\t\t\tif (it.hasNext()) eiNext = it.next();\n\t\t\t\tif (eiCurr !== null) {\n\t\t\t\t\tthis.createEdgeEndForPrev(edge, l, eiCurr, eiPrev);\n\t\t\t\t\tthis.createEdgeEndForNext(edge, l, eiCurr, eiNext);\n\t\t\t\t}\n\t\t\t} while (eiCurr !== null);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBuilder;\n\t}\n});\n","import Location from '../../geom/Location';\nimport EdgeEnd from '../../geomgraph/EdgeEnd';\nimport Position from '../../geomgraph/Position';\nimport extend from '../../../../../extend';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport Label from '../../geomgraph/Label';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Edge from '../../geomgraph/Edge';\nimport inherits from '../../../../../inherits';\nexport default function EdgeEndBundle() {\n\tthis._edgeEnds = new ArrayList();\n\tif (arguments.length === 1) {\n\t\tlet e = arguments[0];\n\t\tEdgeEndBundle.call(this, null, e);\n\t} else if (arguments.length === 2) {\n\t\tlet boundaryNodeRule = arguments[0], e = arguments[1];\n\t\tEdgeEnd.call(this, e.getEdge(), e.getCoordinate(), e.getDirectedCoordinate(), new Label(e.getLabel()));\n\t\tthis.insert(e);\n\t}\n}\ninherits(EdgeEndBundle, EdgeEnd);\nextend(EdgeEndBundle.prototype, {\n\tinsert: function (e) {\n\t\tthis._edgeEnds.add(e);\n\t},\n\tprint: function (out) {\n\t\tout.println(\"EdgeEndBundle--> Label: \" + this._label);\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar ee = it.next();\n\t\t\tee.print(out);\n\t\t\tout.println();\n\t\t}\n\t},\n\titerator: function () {\n\t\treturn this._edgeEnds.iterator();\n\t},\n\tgetEdgeEnds: function () {\n\t\treturn this._edgeEnds;\n\t},\n\tcomputeLabelOn: function (geomIndex, boundaryNodeRule) {\n\t\tvar boundaryCount = 0;\n\t\tvar foundInterior = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tvar loc = e.getLabel().getLocation(geomIndex);\n\t\t\tif (loc === Location.BOUNDARY) boundaryCount++;\n\t\t\tif (loc === Location.INTERIOR) foundInterior = true;\n\t\t}\n\t\tvar loc = Location.NONE;\n\t\tif (foundInterior) loc = Location.INTERIOR;\n\t\tif (boundaryCount > 0) {\n\t\t\tloc = GeometryGraph.determineBoundary(boundaryNodeRule, boundaryCount);\n\t\t}\n\t\tthis._label.setLocation(geomIndex, loc);\n\t},\n\tcomputeLabelSide: function (geomIndex, side) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) {\n\t\t\t\tvar loc = e.getLabel().getLocation(geomIndex, side);\n\t\t\t\tif (loc === Location.INTERIOR) {\n\t\t\t\t\tthis._label.setLocation(geomIndex, side, Location.INTERIOR);\n\t\t\t\t\treturn null;\n\t\t\t\t} else if (loc === Location.EXTERIOR) this._label.setLocation(geomIndex, side, Location.EXTERIOR);\n\t\t\t}\n\t\t}\n\t},\n\tgetLabel: function () {\n\t\treturn this._label;\n\t},\n\tcomputeLabelSides: function (geomIndex) {\n\t\tthis.computeLabelSide(geomIndex, Position.LEFT);\n\t\tthis.computeLabelSide(geomIndex, Position.RIGHT);\n\t},\n\tupdateIM: function (im) {\n\t\tEdge.updateIM(this._label, im);\n\t},\n\tcomputeLabel: function (boundaryNodeRule) {\n\t\tvar isArea = false;\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar e = it.next();\n\t\t\tif (e.getLabel().isArea()) isArea = true;\n\t\t}\n\t\tif (isArea) this._label = new Label(Location.NONE, Location.NONE, Location.NONE); else this._label = new Label(Location.NONE);\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tthis.computeLabelOn(i, boundaryNodeRule);\n\t\t\tif (isArea) this.computeLabelSides(i);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBundle;\n\t}\n});\n","import extend from '../../../../../extend';\nimport EdgeEndStar from '../../geomgraph/EdgeEndStar';\nimport inherits from '../../../../../inherits';\nimport EdgeEndBundle from './EdgeEndBundle';\nexport default function EdgeEndBundleStar() {\n\tEdgeEndStar.apply(this);\n}\ninherits(EdgeEndBundleStar, EdgeEndStar);\nextend(EdgeEndBundleStar.prototype, {\n\tupdateIM: function (im) {\n\t\tfor (var it = this.iterator(); it.hasNext(); ) {\n\t\t\tvar esb = it.next();\n\t\t\tesb.updateIM(im);\n\t\t}\n\t},\n\tinsert: function (e) {\n\t\tvar eb = this._edgeMap.get(e);\n\t\tif (eb === null) {\n\t\t\teb = new EdgeEndBundle(e);\n\t\t\tthis.insertEdgeEnd(e, eb);\n\t\t} else {\n\t\t\teb.insert(e);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EdgeEndBundleStar;\n\t}\n});\n","import Node from '../../geomgraph/Node';\nimport extend from '../../../../../extend';\nimport inherits from '../../../../../inherits';\nexport default function RelateNode() {\n\tlet coord = arguments[0], edges = arguments[1];\n\tNode.call(this, coord, edges);\n}\ninherits(RelateNode, Node);\nextend(RelateNode.prototype, {\n\tupdateIMFromEdges: function (im) {\n\t\tthis._edges.updateIM(im);\n\t},\n\tcomputeIM: function (im) {\n\t\tim.setAtLeastIfValid(this._label.getLocation(0), this._label.getLocation(1), 0);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNode;\n\t}\n});\n","import EdgeEndBundleStar from './EdgeEndBundleStar';\nimport extend from '../../../../../extend';\nimport RelateNode from './RelateNode';\nimport inherits from '../../../../../inherits';\nimport NodeFactory from '../../geomgraph/NodeFactory';\nexport default function RelateNodeFactory() {\n\tNodeFactory.apply(this);\n}\ninherits(RelateNodeFactory, NodeFactory);\nextend(RelateNodeFactory.prototype, {\n\tcreateNode: function (coord) {\n\t\treturn new RelateNode(coord, new EdgeEndBundleStar());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNodeFactory;\n\t}\n});\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport IntersectionMatrix from '../../geom/IntersectionMatrix';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport extend from '../../../../../extend';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport Assert from '../../util/Assert';\nexport default function RelateComputer() {\n\tthis._li = new RobustLineIntersector();\n\tthis._ptLocator = new PointLocator();\n\tthis._arg = null;\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n\tthis._im = null;\n\tthis._isolatedEdges = new ArrayList();\n\tthis._invalidPoint = null;\n\tlet arg = arguments[0];\n\tthis._arg = arg;\n}\nextend(RelateComputer.prototype, {\n\tinsertEdgeEnds: function (ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t},\n\tcomputeProperIntersectionIM: function (intersector, im) {\n\t\tvar dimA = this._arg[0].getGeometry().getDimension();\n\t\tvar dimB = this._arg[1].getGeometry().getDimension();\n\t\tvar hasProper = intersector.hasProperIntersection();\n\t\tvar hasProperInterior = intersector.hasProperInteriorIntersection();\n\t\tif (dimA === 2 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"212101212\");\n\t\t} else if (dimA === 2 && dimB === 1) {\n\t\t\tif (hasProper) im.setAtLeast(\"FFF0FFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1FFFFF1FF\");\n\t\t} else if (dimA === 1 && dimB === 2) {\n\t\t\tif (hasProper) im.setAtLeast(\"F0FFFFFF2\");\n\t\t\tif (hasProperInterior) im.setAtLeast(\"1F1FFFFFF\");\n\t\t} else if (dimA === 1 && dimB === 1) {\n\t\t\tif (hasProperInterior) im.setAtLeast(\"0FFFFFFFF\");\n\t\t}\n\t},\n\tlabelIsolatedEdges: function (thisIndex, targetIndex) {\n\t\tfor (var ei = this._arg[thisIndex].getEdgeIterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\tif (e.isIsolated()) {\n\t\t\t\tthis.labelIsolatedEdge(e, targetIndex, this._arg[targetIndex].getGeometry());\n\t\t\t\tthis._isolatedEdges.add(e);\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedEdge: function (e, targetIndex, target) {\n\t\tif (target.getDimension() > 0) {\n\t\t\tvar loc = this._ptLocator.locate(e.getCoordinate(), target);\n\t\t\te.getLabel().setAllLocations(targetIndex, loc);\n\t\t} else {\n\t\t\te.getLabel().setAllLocations(targetIndex, Location.EXTERIOR);\n\t\t}\n\t},\n\tcomputeIM: function () {\n\t\tvar im = new IntersectionMatrix();\n\t\tim.set(Location.EXTERIOR, Location.EXTERIOR, 2);\n\t\tif (!this._arg[0].getGeometry().getEnvelopeInternal().intersects(this._arg[1].getGeometry().getEnvelopeInternal())) {\n\t\t\tthis.computeDisjointIM(im);\n\t\t\treturn im;\n\t\t}\n\t\tthis._arg[0].computeSelfNodes(this._li, false);\n\t\tthis._arg[1].computeSelfNodes(this._li, false);\n\t\tvar intersector = this._arg[0].computeEdgeIntersections(this._arg[1], this._li, false);\n\t\tthis.computeIntersectionNodes(0);\n\t\tthis.computeIntersectionNodes(1);\n\t\tthis.copyNodesAndLabels(0);\n\t\tthis.copyNodesAndLabels(1);\n\t\tthis.labelIsolatedNodes();\n\t\tthis.computeProperIntersectionIM(intersector, im);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar ee0 = eeBuilder.computeEdgeEnds(this._arg[0].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee0);\n\t\tvar ee1 = eeBuilder.computeEdgeEnds(this._arg[1].getEdgeIterator());\n\t\tthis.insertEdgeEnds(ee1);\n\t\tthis.labelNodeEdges();\n\t\tthis.labelIsolatedEdges(0, 1);\n\t\tthis.labelIsolatedEdges(1, 0);\n\t\tthis.updateIM(im);\n\t\treturn im;\n\t},\n\tlabelNodeEdges: function () {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.getEdges().computeLabelling(this._arg);\n\t\t}\n\t},\n\tcopyNodesAndLabels: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getNodeIterator(); i.hasNext(); ) {\n\t\t\tvar graphNode = i.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tlabelIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.find(ei.coord);\n\t\t\t\tif (n.getLabel().isNull(argIndex)) {\n\t\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNode: function (n, targetIndex) {\n\t\tvar loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n\t\tn.getLabel().setAllLocations(targetIndex, loc);\n\t},\n\tcomputeIntersectionNodes: function (argIndex) {\n\t\tfor (var i = this._arg[argIndex].getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tlabelIsolatedNodes: function () {\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar n = ni.next();\n\t\t\tvar label = n.getLabel();\n\t\t\tAssert.isTrue(label.getGeometryCount() > 0, \"node with empty label found\");\n\t\t\tif (n.isIsolated()) {\n\t\t\t\tif (label.isNull(0)) this.labelIsolatedNode(n, 0); else this.labelIsolatedNode(n, 1);\n\t\t\t}\n\t\t}\n\t},\n\tupdateIM: function (im) {\n\t\tfor (var ei = this._isolatedEdges.iterator(); ei.hasNext(); ) {\n\t\t\tvar e = ei.next();\n\t\t\te.updateIM(im);\n\t\t}\n\t\tfor (var ni = this._nodes.iterator(); ni.hasNext(); ) {\n\t\t\tvar node = ni.next();\n\t\t\tnode.updateIM(im);\n\t\t\tnode.updateIMFromEdges(im);\n\t\t}\n\t},\n\tcomputeDisjointIM: function (im) {\n\t\tvar ga = this._arg[0].getGeometry();\n\t\tif (!ga.isEmpty()) {\n\t\t\tim.set(Location.INTERIOR, Location.EXTERIOR, ga.getDimension());\n\t\t\tim.set(Location.BOUNDARY, Location.EXTERIOR, ga.getBoundaryDimension());\n\t\t}\n\t\tvar gb = this._arg[1].getGeometry();\n\t\tif (!gb.isEmpty()) {\n\t\t\tim.set(Location.EXTERIOR, Location.INTERIOR, gb.getDimension());\n\t\t\tim.set(Location.EXTERIOR, Location.BOUNDARY, gb.getBoundaryDimension());\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateComputer;\n\t}\n});\n","import LineString from '../../geom/LineString';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport extend from '../../../../../extend';\nexport default function RectangleContains() {\n\tthis._rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleContains.prototype, {\n\tisContainedInBoundary: function (geom) {\n\t\tif (geom instanceof Polygon) return false;\n\t\tif (geom instanceof Point) return this.isPointContainedInBoundary(geom);\n\t\tif (geom instanceof LineString) return this.isLineStringContainedInBoundary(geom);\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar comp = geom.getGeometryN(i);\n\t\t\tif (!this.isContainedInBoundary(comp)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisLineSegmentContainedInBoundary: function (p0, p1) {\n\t\tif (p0.equals(p1)) return this.isPointContainedInBoundary(p0);\n\t\tif (p0.x === p1.x) {\n\t\t\tif (p0.x === this._rectEnv.getMinX() || p0.x === this._rectEnv.getMaxX()) return true;\n\t\t} else if (p0.y === p1.y) {\n\t\t\tif (p0.y === this._rectEnv.getMinY() || p0.y === this._rectEnv.getMaxY()) return true;\n\t\t}\n\t\treturn false;\n\t},\n\tisLineStringContainedInBoundary: function (line) {\n\t\tvar seq = line.getCoordinateSequence();\n\t\tvar p0 = new Coordinate();\n\t\tvar p1 = new Coordinate();\n\t\tfor (var i = 0; i < seq.size() - 1; i++) {\n\t\t\tseq.getCoordinate(i, p0);\n\t\t\tseq.getCoordinate(i + 1, p1);\n\t\t\tif (!this.isLineSegmentContainedInBoundary(p0, p1)) return false;\n\t\t}\n\t\treturn true;\n\t},\n\tisPointContainedInBoundary: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet point = arguments[0];\n\t\t\treturn this.isPointContainedInBoundary(point.getCoordinate());\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet pt = arguments[0];\n\t\t\treturn pt.x === this._rectEnv.getMinX() || pt.x === this._rectEnv.getMaxX() || pt.y === this._rectEnv.getMinY() || pt.y === this._rectEnv.getMaxY();\n\t\t}\n\t},\n\tcontains: function (geom) {\n\t\tif (!this._rectEnv.contains(geom.getEnvelopeInternal())) return false;\n\t\tif (this.isContainedInBoundary(geom)) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleContains;\n\t}\n});\nRectangleContains.contains = function (rectangle, b) {\n\tvar rc = new RectangleContains(rectangle);\n\treturn rc.contains(b);\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport RobustLineIntersector from './RobustLineIntersector';\nimport Envelope from '../geom/Envelope';\nexport default function RectangleLineIntersector() {\n\tthis._li = new RobustLineIntersector();\n\tthis._rectEnv = null;\n\tthis._diagUp0 = null;\n\tthis._diagUp1 = null;\n\tthis._diagDown0 = null;\n\tthis._diagDown1 = null;\n\tlet rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n\tthis._diagUp0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMinY());\n\tthis._diagUp1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMaxY());\n\tthis._diagDown0 = new Coordinate(rectEnv.getMinX(), rectEnv.getMaxY());\n\tthis._diagDown1 = new Coordinate(rectEnv.getMaxX(), rectEnv.getMinY());\n}\nextend(RectangleLineIntersector.prototype, {\n\tintersects: function (p0, p1) {\n\t\tvar segEnv = new Envelope(p0, p1);\n\t\tif (!this._rectEnv.intersects(segEnv)) return false;\n\t\tif (this._rectEnv.intersects(p0)) return true;\n\t\tif (this._rectEnv.intersects(p1)) return true;\n\t\tif (p0.compareTo(p1) > 0) {\n\t\t\tvar tmp = p0;\n\t\t\tp0 = p1;\n\t\t\tp1 = tmp;\n\t\t}\n\t\tvar isSegUpwards = false;\n\t\tif (p1.y > p0.y) isSegUpwards = true;\n\t\tif (isSegUpwards) {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagDown0, this._diagDown1);\n\t\t} else {\n\t\t\tthis._li.computeIntersection(p0, p1, this._diagUp0, this._diagUp1);\n\t\t}\n\t\tif (this._li.hasIntersection()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleLineIntersector;\n\t}\n});\n","import extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nexport default function ShortCircuitedGeometryVisitor() {\n\tthis._isDone = false;\n}\nextend(ShortCircuitedGeometryVisitor.prototype, {\n\tapplyTo: function (geom) {\n\t\tfor (var i = 0; i < geom.getNumGeometries() && !this._isDone; i++) {\n\t\t\tvar element = geom.getGeometryN(i);\n\t\t\tif (!(element instanceof GeometryCollection)) {\n\t\t\t\tthis.visit(element);\n\t\t\t\tif (this.isDone()) {\n\t\t\t\t\tthis._isDone = true;\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t} else this.applyTo(element);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ShortCircuitedGeometryVisitor;\n\t}\n});\n","import Coordinate from '../../geom/Coordinate';\nimport Polygon from '../../geom/Polygon';\nimport RectangleLineIntersector from '../../algorithm/RectangleLineIntersector';\nimport extend from '../../../../../extend';\nimport ShortCircuitedGeometryVisitor from '../../geom/util/ShortCircuitedGeometryVisitor';\nimport SimplePointInAreaLocator from '../../algorithm/locate/SimplePointInAreaLocator';\nimport LinearComponentExtracter from '../../geom/util/LinearComponentExtracter';\nimport inherits from '../../../../../inherits';\nexport default function RectangleIntersects() {\n\tthis._rectangle = null;\n\tthis._rectEnv = null;\n\tlet rectangle = arguments[0];\n\tthis._rectangle = rectangle;\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\nextend(RectangleIntersects.prototype, {\n\tintersects: function (geom) {\n\t\tif (!this._rectEnv.intersects(geom.getEnvelopeInternal())) return false;\n\t\tvar visitor = new EnvelopeIntersectsVisitor(this._rectEnv);\n\t\tvisitor.applyTo(geom);\n\t\tif (visitor.intersects()) return true;\n\t\tvar ecpVisitor = new GeometryContainsPointVisitor(this._rectangle);\n\t\tecpVisitor.applyTo(geom);\n\t\tif (ecpVisitor.containsPoint()) return true;\n\t\tvar riVisitor = new RectangleIntersectsSegmentVisitor(this._rectangle);\n\t\triVisitor.applyTo(geom);\n\t\tif (riVisitor.intersects()) return true;\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleIntersects;\n\t}\n});\nRectangleIntersects.intersects = function (rectangle, b) {\n\tvar rp = new RectangleIntersects(rectangle);\n\treturn rp.intersects(b);\n};\nfunction EnvelopeIntersectsVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectEnv = null;\n\tthis._intersects = false;\n\tlet rectEnv = arguments[0];\n\tthis._rectEnv = rectEnv;\n}\ninherits(EnvelopeIntersectsVisitor, ShortCircuitedGeometryVisitor);\nextend(EnvelopeIntersectsVisitor.prototype, {\n\tisDone: function () {\n\t\treturn this._intersects === true;\n\t},\n\tvisit: function (element) {\n\t\tvar elementEnv = element.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._rectEnv.contains(elementEnv)) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinX() >= this._rectEnv.getMinX() && elementEnv.getMaxX() <= this._rectEnv.getMaxX()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t\tif (elementEnv.getMinY() >= this._rectEnv.getMinY() && elementEnv.getMaxY() <= this._rectEnv.getMaxY()) {\n\t\t\tthis._intersects = true;\n\t\t\treturn null;\n\t\t}\n\t},\n\tintersects: function () {\n\t\treturn this._intersects;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn EnvelopeIntersectsVisitor;\n\t}\n});\nfunction GeometryContainsPointVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectSeq = null;\n\tthis._rectEnv = null;\n\tthis._containsPoint = false;\n\tlet rectangle = arguments[0];\n\tthis._rectSeq = rectangle.getExteriorRing().getCoordinateSequence();\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n}\ninherits(GeometryContainsPointVisitor, ShortCircuitedGeometryVisitor);\nextend(GeometryContainsPointVisitor.prototype, {\n\tisDone: function () {\n\t\treturn this._containsPoint === true;\n\t},\n\tvisit: function (geom) {\n\t\tif (!(geom instanceof Polygon)) return null;\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar rectPt = new Coordinate();\n\t\tfor (var i = 0; i < 4; i++) {\n\t\t\tthis._rectSeq.getCoordinate(i, rectPt);\n\t\t\tif (!elementEnv.contains(rectPt)) continue;\n\t\t\tif (SimplePointInAreaLocator.containsPointInPolygon(rectPt, geom)) {\n\t\t\t\tthis._containsPoint = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcontainsPoint: function () {\n\t\treturn this._containsPoint;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryContainsPointVisitor;\n\t}\n});\nfunction RectangleIntersectsSegmentVisitor() {\n\tShortCircuitedGeometryVisitor.apply(this);\n\tthis._rectEnv = null;\n\tthis._rectIntersector = null;\n\tthis._hasIntersection = false;\n\tthis._p0 = new Coordinate();\n\tthis._p1 = new Coordinate();\n\tlet rectangle = arguments[0];\n\tthis._rectEnv = rectangle.getEnvelopeInternal();\n\tthis._rectIntersector = new RectangleLineIntersector(this._rectEnv);\n}\ninherits(RectangleIntersectsSegmentVisitor, ShortCircuitedGeometryVisitor);\nextend(RectangleIntersectsSegmentVisitor.prototype, {\n\tintersects: function () {\n\t\treturn this._hasIntersection;\n\t},\n\tisDone: function () {\n\t\treturn this._hasIntersection === true;\n\t},\n\tvisit: function (geom) {\n\t\tvar elementEnv = geom.getEnvelopeInternal();\n\t\tif (!this._rectEnv.intersects(elementEnv)) return null;\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tthis.checkIntersectionWithLineStrings(lines);\n\t},\n\tcheckIntersectionWithLineStrings: function (lines) {\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar testLine = i.next();\n\t\t\tthis.checkIntersectionWithSegments(testLine);\n\t\t\tif (this._hasIntersection) return null;\n\t\t}\n\t},\n\tcheckIntersectionWithSegments: function (testLine) {\n\t\tvar seq1 = testLine.getCoordinateSequence();\n\t\tfor (var j = 1; j < seq1.size(); j++) {\n\t\t\tseq1.getCoordinate(j - 1, this._p0);\n\t\t\tseq1.getCoordinate(j, this._p1);\n\t\t\tif (this._rectIntersector.intersects(this._p0, this._p1)) {\n\t\t\t\tthis._hasIntersection = true;\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RectangleIntersectsSegmentVisitor;\n\t}\n});\n","import RelateComputer from './RelateComputer';\nimport extend from '../../../../../extend';\nimport GeometryGraphOperation from '../GeometryGraphOperation';\nimport RectangleContains from '../predicate/RectangleContains';\nimport inherits from '../../../../../inherits';\nimport RectangleIntersects from '../predicate/RectangleIntersects';\nexport default function RelateOp() {\n\tthis._relate = null;\n\tif (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tGeometryGraphOperation.call(this, g0, g1);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], boundaryNodeRule = arguments[2];\n\t\tGeometryGraphOperation.call(this, g0, g1, boundaryNodeRule);\n\t\tthis._relate = new RelateComputer(this._arg);\n\t}\n}\ninherits(RelateOp, GeometryGraphOperation);\nextend(RelateOp.prototype, {\n\tgetIntersectionMatrix: function () {\n\t\treturn this._relate.computeIM();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateOp;\n\t}\n});\nRelateOp.covers = function (g1, g2) {\n\tif (g2.getDimension() === 2 && g1.getDimension() < 2) {\n\t\treturn false;\n\t}\n\tif (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n\t\treturn false;\n\t}\n\tif (!g1.getEnvelopeInternal().covers(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn true;\n\t}\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isCovers();\n};\nRelateOp.intersects = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g1, g2);\n\t}\n\tif (g2.isRectangle()) {\n\t\treturn RectangleIntersects.intersects(g2, g1);\n\t}\n\tif (g1.isGeometryCollection() || g2.isGeometryCollection()) {\n\t\tvar r = false;\n\t\tfor (var i = 0; i < g1.getNumGeometries(); i++) {\n\t\t\tfor (var j = 0; j < g2.getNumGeometries(); j++) {\n\t\t\t\tif (g1.getGeometryN(i).intersects(g2.getGeometryN(j))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isIntersects();\n};\nRelateOp.touches = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isTouches(g1.getDimension(), g2.getDimension());\n};\nRelateOp.relate = function () {\n\tif (arguments.length === 2) {\n\t\tlet a = arguments[0], b = arguments[1];\n\t\tvar relOp = new RelateOp(a, b);\n\t\tvar im = relOp.getIntersectionMatrix();\n\t\treturn im;\n\t} else if (arguments.length === 3) {\n\t\tlet a = arguments[0], b = arguments[1], boundaryNodeRule = arguments[2];\n\t\tvar relOp = new RelateOp(a, b, boundaryNodeRule);\n\t\tvar im = relOp.getIntersectionMatrix();\n\t\treturn im;\n\t}\n};\nRelateOp.overlaps = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isOverlaps(g1.getDimension(), g2.getDimension());\n};\nRelateOp.crosses = function (g1, g2) {\n\tif (!g1.getEnvelopeInternal().intersects(g2.getEnvelopeInternal())) return false;\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isCrosses(g1.getDimension(), g2.getDimension());\n};\nRelateOp.contains = function (g1, g2) {\n\tif (g2.getDimension() === 2 && g1.getDimension() < 2) {\n\t\treturn false;\n\t}\n\tif (g2.getDimension() === 1 && g1.getDimension() < 1 && g2.getLength() > 0.0) {\n\t\treturn false;\n\t}\n\tif (!g1.getEnvelopeInternal().contains(g2.getEnvelopeInternal())) return false;\n\tif (g1.isRectangle()) {\n\t\treturn RectangleContains.contains(g1, g2);\n\t}\n\treturn new RelateOp(g1, g2).getIntersectionMatrix().isContains();\n};\n","import extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nexport default function GeometryCombiner() {\n\tthis._geomFactory = null;\n\tthis._skipEmpty = false;\n\tthis._inputGeoms = null;\n\tlet geoms = arguments[0];\n\tthis._geomFactory = GeometryCombiner.extractFactory(geoms);\n\tthis._inputGeoms = geoms;\n}\nextend(GeometryCombiner.prototype, {\n\textractElements: function (geom, elems) {\n\t\tif (geom === null) return null;\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elemGeom = geom.getGeometryN(i);\n\t\t\tif (this._skipEmpty && elemGeom.isEmpty()) continue;\n\t\t\telems.add(elemGeom);\n\t\t}\n\t},\n\tcombine: function () {\n\t\tvar elems = new ArrayList();\n\t\tfor (var i = this._inputGeoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tthis.extractElements(g, elems);\n\t\t}\n\t\tif (elems.size() === 0) {\n\t\t\tif (this._geomFactory !== null) {\n\t\t\t\treturn this._geomFactory.createGeometryCollection();\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(elems);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryCombiner;\n\t}\n});\nGeometryCombiner.combine = function () {\n\tif (arguments.length === 1) {\n\t\tlet geoms = arguments[0];\n\t\tvar combiner = new GeometryCombiner(geoms);\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 2) {\n\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n\t\treturn combiner.combine();\n\t} else if (arguments.length === 3) {\n\t\tlet g0 = arguments[0], g1 = arguments[1], g2 = arguments[2];\n\t\tvar combiner = new GeometryCombiner(GeometryCombiner.createList(g0, g1, g2));\n\t\treturn combiner.combine();\n\t}\n};\nGeometryCombiner.extractFactory = function (geoms) {\n\tif (geoms.isEmpty()) return null;\n\treturn geoms.iterator().next().getFactory();\n};\nGeometryCombiner.createList = function () {\n\tif (arguments.length === 2) {\n\t\tlet obj0 = arguments[0], obj1 = arguments[1];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\treturn list;\n\t} else if (arguments.length === 3) {\n\t\tlet obj0 = arguments[0], obj1 = arguments[1], obj2 = arguments[2];\n\t\tvar list = new ArrayList();\n\t\tlist.add(obj0);\n\t\tlist.add(obj1);\n\t\tlist.add(obj2);\n\t\treturn list;\n\t}\n};\n","import PointLocator from '../../algorithm/PointLocator';\nimport Location from '../../geom/Location';\nimport TreeSet from '../../../../../java/util/TreeSet';\nimport extend from '../../../../../extend';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport CoordinateArrays from '../../geom/CoordinateArrays';\nexport default function PointGeometryUnion() {\n\tthis._pointGeom = null;\n\tthis._otherGeom = null;\n\tthis._geomFact = null;\n\tlet pointGeom = arguments[0], otherGeom = arguments[1];\n\tthis._pointGeom = pointGeom;\n\tthis._otherGeom = otherGeom;\n\tthis._geomFact = otherGeom.getFactory();\n}\nextend(PointGeometryUnion.prototype, {\n\tunion: function () {\n\t\tvar locater = new PointLocator();\n\t\tvar exteriorCoords = new TreeSet();\n\t\tfor (var i = 0; i < this._pointGeom.getNumGeometries(); i++) {\n\t\t\tvar point = this._pointGeom.getGeometryN(i);\n\t\t\tvar coord = point.getCoordinate();\n\t\t\tvar loc = locater.locate(coord, this._otherGeom);\n\t\t\tif (loc === Location.EXTERIOR) exteriorCoords.add(coord);\n\t\t}\n\t\tif (exteriorCoords.size() === 0) return this._otherGeom;\n\t\tvar ptComp = null;\n\t\tvar coords = CoordinateArrays.toCoordinateArray(exteriorCoords);\n\t\tif (coords.length === 1) {\n\t\t\tptComp = this._geomFact.createPoint(coords[0]);\n\t\t} else {\n\t\t\tptComp = this._geomFact.createMultiPointFromCoords(coords);\n\t\t}\n\t\treturn GeometryCombiner.combine(ptComp, this._otherGeom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PointGeometryUnion;\n\t}\n});\nPointGeometryUnion.union = function (pointGeom, otherGeom) {\n\tvar unioner = new PointGeometryUnion(pointGeom, otherGeom);\n\treturn unioner.union();\n};\n","import Geometry from '../Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport extend from '../../../../../extend';\nimport GeometryCollection from '../GeometryCollection';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryFilter from '../GeometryFilter';\nimport List from '../../../../../java/util/List';\nexport default function GeometryExtracter() {\n\tthis._geometryType = null;\n\tthis._comps = null;\n\tlet geometryType = arguments[0], comps = arguments[1];\n\tthis._geometryType = geometryType;\n\tthis._comps = comps;\n}\nextend(GeometryExtracter.prototype, {\n\tfilter: function (geom) {\n\t\tif (this._geometryType === null || GeometryExtracter.isOfType(geom, this._geometryType)) this._comps.add(geom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryFilter];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryExtracter;\n\t}\n});\nGeometryExtracter.isOfType = function (geom, geometryType) {\n\tif (geom.getGeometryType() === geometryType) return true;\n\tif (geometryType === Geometry.TYPENAME_LINESTRING && geom.getGeometryType() === Geometry.TYPENAME_LINEARRING) return true;\n\treturn false;\n};\nGeometryExtracter.extract = function () {\n\tif (arguments.length === 2) {\n\t\tlet geom = arguments[0], geometryType = arguments[1];\n\t\treturn GeometryExtracter.extract(geom, geometryType, new ArrayList());\n\t} else if (arguments.length === 3) {\n\t\tif (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && typeof arguments[1] === \"string\")) {\n\t\t\tlet geom = arguments[0], geometryType = arguments[1], list = arguments[2];\n\t\t\tif (geom.getGeometryType() === geometryType) {\n\t\t\t\tlist.add(geom);\n\t\t\t} else if (geom instanceof GeometryCollection) {\n\t\t\t\tgeom.apply(new GeometryExtracter(geometryType, list));\n\t\t\t}\n\t\t\treturn list;\n\t\t} else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Geometry && arguments[1] instanceof Class)) {\n\t\t\tlet geom = arguments[0], clz = arguments[1], list = arguments[2];\n\t\t\treturn GeometryExtracter.extract(geom, GeometryExtracter.toGeometryType(clz), list);\n\t\t}\n\t}\n};\n","import PolygonExtracter from '../../geom/util/PolygonExtracter';\nimport STRtree from '../../index/strtree/STRtree';\nimport Geometry from '../../geom/Geometry';\nimport hasInterface from '../../../../../hasInterface';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport extend from '../../../../../extend';\nimport GeometryCombiner from '../../geom/util/GeometryCombiner';\nimport Polygonal from '../../geom/Polygonal';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport List from '../../../../../java/util/List';\nexport default function CascadedPolygonUnion() {\n\tthis._inputPolys = null;\n\tthis._geomFactory = null;\n\tlet polys = arguments[0];\n\tthis._inputPolys = polys;\n\tif (this._inputPolys === null) this._inputPolys = new ArrayList();\n}\nextend(CascadedPolygonUnion.prototype, {\n\treduceToGeometries: function (geomTree) {\n\t\tvar geoms = new ArrayList();\n\t\tfor (var i = geomTree.iterator(); i.hasNext(); ) {\n\t\t\tvar o = i.next();\n\t\t\tvar geom = null;\n\t\t\tif (hasInterface(o, List)) {\n\t\t\t\tgeom = this.unionTree(o);\n\t\t\t} else if (o instanceof Geometry) {\n\t\t\t\tgeom = o;\n\t\t\t}\n\t\t\tgeoms.add(geom);\n\t\t}\n\t\treturn geoms;\n\t},\n\textractByEnvelope: function (env, geom, disjointGeoms) {\n\t\tvar intersectingGeoms = new ArrayList();\n\t\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\t\tvar elem = geom.getGeometryN(i);\n\t\t\tif (elem.getEnvelopeInternal().intersects(env)) intersectingGeoms.add(elem); else disjointGeoms.add(elem);\n\t\t}\n\t\treturn this._geomFactory.buildGeometry(intersectingGeoms);\n\t},\n\tunionOptimized: function (g0, g1) {\n\t\tvar g0Env = g0.getEnvelopeInternal();\n\t\tvar g1Env = g1.getEnvelopeInternal();\n\t\tif (!g0Env.intersects(g1Env)) {\n\t\t\tvar combo = GeometryCombiner.combine(g0, g1);\n\t\t\treturn combo;\n\t\t}\n\t\tif (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) return this.unionActual(g0, g1);\n\t\tvar commonEnv = g0Env.intersection(g1Env);\n\t\treturn this.unionUsingEnvelopeIntersection(g0, g1, commonEnv);\n\t},\n\tunion: function () {\n\t\tif (this._inputPolys === null) throw new IllegalStateException(\"union() method cannot be called twice\");\n\t\tif (this._inputPolys.isEmpty()) return null;\n\t\tthis._geomFactory = this._inputPolys.iterator().next().getFactory();\n\t\tvar index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n\t\tfor (var i = this._inputPolys.iterator(); i.hasNext(); ) {\n\t\t\tvar item = i.next();\n\t\t\tindex.insert(item.getEnvelopeInternal(), item);\n\t\t}\n\t\tthis._inputPolys = null;\n\t\tvar itemTree = index.itemsTree();\n\t\tvar unionAll = this.unionTree(itemTree);\n\t\treturn unionAll;\n\t},\n\tbinaryUnion: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\treturn this.binaryUnion(geoms, 0, geoms.size());\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet geoms = arguments[0], start = arguments[1], end = arguments[2];\n\t\t\tif (end - start <= 1) {\n\t\t\t\tvar g0 = CascadedPolygonUnion.getGeometry(geoms, start);\n\t\t\t\treturn this.unionSafe(g0, null);\n\t\t\t} else if (end - start === 2) {\n\t\t\t\treturn this.unionSafe(CascadedPolygonUnion.getGeometry(geoms, start), CascadedPolygonUnion.getGeometry(geoms, start + 1));\n\t\t\t} else {\n\t\t\t\tvar mid = Math.trunc((end + start) / 2);\n\t\t\t\tvar g0 = this.binaryUnion(geoms, start, mid);\n\t\t\t\tvar g1 = this.binaryUnion(geoms, mid, end);\n\t\t\t\treturn this.unionSafe(g0, g1);\n\t\t\t}\n\t\t}\n\t},\n\trepeatedUnion: function (geoms) {\n\t\tvar union = null;\n\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\tvar g = i.next();\n\t\t\tif (union === null) union = g.copy(); else union = union.union(g);\n\t\t}\n\t\treturn union;\n\t},\n\tunionSafe: function (g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g0 === null) return g1.copy();\n\t\tif (g1 === null) return g0.copy();\n\t\treturn this.unionOptimized(g0, g1);\n\t},\n\tunionActual: function (g0, g1) {\n\t\treturn CascadedPolygonUnion.restrictToPolygons(g0.union(g1));\n\t},\n\tunionTree: function (geomTree) {\n\t\tvar geoms = this.reduceToGeometries(geomTree);\n\t\tvar union = this.binaryUnion(geoms);\n\t\treturn union;\n\t},\n\tunionUsingEnvelopeIntersection: function (g0, g1, common) {\n\t\tvar disjointPolys = new ArrayList();\n\t\tvar g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n\t\tvar g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n\t\tvar union = this.unionActual(g0Int, g1Int);\n\t\tdisjointPolys.add(union);\n\t\tvar overallUnion = GeometryCombiner.combine(disjointPolys);\n\t\treturn overallUnion;\n\t},\n\tbufferUnion: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar factory = geoms.get(0).getFactory();\n\t\t\tvar gColl = factory.buildGeometry(geoms);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet g0 = arguments[0], g1 = arguments[1];\n\t\t\tvar factory = g0.getFactory();\n\t\t\tvar gColl = factory.createGeometryCollection([g0, g1]);\n\t\t\tvar unionAll = gColl.buffer(0.0);\n\t\t\treturn unionAll;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn CascadedPolygonUnion;\n\t}\n});\nCascadedPolygonUnion.restrictToPolygons = function (g) {\n\tif (hasInterface(g, Polygonal)) {\n\t\treturn g;\n\t}\n\tvar polygons = PolygonExtracter.getPolygons(g);\n\tif (polygons.size() === 1) return polygons.get(0);\n\treturn g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons));\n};\nCascadedPolygonUnion.getGeometry = function (list, index) {\n\tif (index >= list.size()) return null;\n\treturn list.get(index);\n};\nCascadedPolygonUnion.union = function (polys) {\n\tvar op = new CascadedPolygonUnion(polys);\n\treturn op.union();\n};\nCascadedPolygonUnion.STRTREE_NODE_CAPACITY = 4;\n","import Geometry from '../../geom/Geometry';\nimport PointGeometryUnion from './PointGeometryUnion';\nimport hasInterface from '../../../../../hasInterface';\nimport Collection from '../../../../../java/util/Collection';\nimport SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport GeometryExtracter from '../../geom/util/GeometryExtracter';\nimport OverlayOp from '../overlay/OverlayOp';\nimport CascadedPolygonUnion from './CascadedPolygonUnion';\nexport default function UnaryUnionOp() {\n\tthis._polygons = new ArrayList();\n\tthis._lines = new ArrayList();\n\tthis._points = new ArrayList();\n\tthis._geomFact = null;\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tthis.extract(geoms);\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis.extract(geom);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\tthis._geomFact = geomFact;\n\t\tthis.extract(geoms);\n\t}\n}\nextend(UnaryUnionOp.prototype, {\n\tunionNoOpt: function (g0) {\n\t\tvar empty = this._geomFact.createPoint();\n\t\treturn SnapIfNeededOverlayOp.overlayOp(g0, empty, OverlayOp.UNION);\n\t},\n\tunionWithNull: function (g0, g1) {\n\t\tif (g0 === null && g1 === null) return null;\n\t\tif (g1 === null) return g0;\n\t\tif (g0 === null) return g1;\n\t\treturn g0.union(g1);\n\t},\n\textract: function () {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tfor (var i = geoms.iterator(); i.hasNext(); ) {\n\t\t\t\tvar geom = i.next();\n\t\t\t\tthis.extract(geom);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tif (this._geomFact === null) this._geomFact = geom.getFactory();\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_POLYGON, this._polygons);\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_LINESTRING, this._lines);\n\t\t\tGeometryExtracter.extract(geom, Geometry.TYPENAME_POINT, this._points);\n\t\t}\n\t},\n\tunion: function () {\n\t\tif (this._geomFact === null) {\n\t\t\treturn null;\n\t\t}\n\t\tvar unionPoints = null;\n\t\tif (this._points.size() > 0) {\n\t\t\tvar ptGeom = this._geomFact.buildGeometry(this._points);\n\t\t\tunionPoints = this.unionNoOpt(ptGeom);\n\t\t}\n\t\tvar unionLines = null;\n\t\tif (this._lines.size() > 0) {\n\t\t\tvar lineGeom = this._geomFact.buildGeometry(this._lines);\n\t\t\tunionLines = this.unionNoOpt(lineGeom);\n\t\t}\n\t\tvar unionPolygons = null;\n\t\tif (this._polygons.size() > 0) {\n\t\t\tunionPolygons = CascadedPolygonUnion.union(this._polygons);\n\t\t}\n\t\tvar unionLA = this.unionWithNull(unionLines, unionPolygons);\n\t\tvar union = null;\n\t\tif (unionPoints === null) union = unionLA; else if (unionLA === null) union = unionPoints; else union = PointGeometryUnion.union(unionPoints, unionLA);\n\t\tif (union === null) return this._geomFact.createGeometryCollection();\n\t\treturn union;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn UnaryUnionOp;\n\t}\n});\nUnaryUnionOp.union = function () {\n\tif (arguments.length === 1) {\n\t\tif (hasInterface(arguments[0], Collection)) {\n\t\t\tlet geoms = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geoms);\n\t\t\treturn op.union();\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tvar op = new UnaryUnionOp(geom);\n\t\t\treturn op.union();\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet geoms = arguments[0], geomFact = arguments[1];\n\t\tvar op = new UnaryUnionOp(geoms, geomFact);\n\t\treturn op.union();\n\t}\n};\n","import Location from '../../geom/Location';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Position from '../../geomgraph/Position';\nimport Polygon from '../../geom/Polygon';\nimport extend from '../../../../../extend';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport MaximalEdgeRing from '../overlay/MaximalEdgeRing';\nimport OverlayNodeFactory from '../overlay/OverlayNodeFactory';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Assert from '../../util/Assert';\nimport PlanarGraph from '../../geomgraph/PlanarGraph';\nexport default function ConnectedInteriorTester() {\n\tthis._geometryFactory = new GeometryFactory();\n\tthis._geomGraph = null;\n\tthis._disconnectedRingcoord = null;\n\tlet geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n}\nextend(ConnectedInteriorTester.prototype, {\n\tvisitInteriorRing: function (ring, graph) {\n\t\tvar pts = ring.getCoordinates();\n\t\tvar pt0 = pts[0];\n\t\tvar pt1 = ConnectedInteriorTester.findDifferentPoint(pts, pt0);\n\t\tvar e = graph.findEdgeInSameDirection(pt0, pt1);\n\t\tvar de = graph.findEdgeEnd(e);\n\t\tvar intDe = null;\n\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de;\n\t\t} else if (de.getSym().getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\tintDe = de.getSym();\n\t\t}\n\t\tAssert.isTrue(intDe !== null, \"unable to find dirEdge with Interior on RHS\");\n\t\tthis.visitLinkedDirectedEdges(intDe);\n\t},\n\tvisitShellInteriors: function (g, graph) {\n\t\tif (g instanceof Polygon) {\n\t\t\tvar p = g;\n\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t}\n\t\tif (g instanceof MultiPolygon) {\n\t\t\tvar mp = g;\n\t\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\t\tvar p = mp.getGeometryN(i);\n\t\t\t\tthis.visitInteriorRing(p.getExteriorRing(), graph);\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._disconnectedRingcoord;\n\t},\n\tsetInteriorEdgesInResult: function (graph) {\n\t\tfor (var it = graph.getEdgeEnds().iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) === Location.INTERIOR) {\n\t\t\t\tde.setInResult(true);\n\t\t\t}\n\t\t}\n\t},\n\tvisitLinkedDirectedEdges: function (start) {\n\t\tvar startDe = start;\n\t\tvar de = start;\n\t\tdo {\n\t\t\tAssert.isTrue(de !== null, \"found null Directed Edge\");\n\t\t\tde.setVisited(true);\n\t\t\tde = de.getNext();\n\t\t} while (de !== startDe);\n\t},\n\tbuildEdgeRings: function (dirEdges) {\n\t\tvar edgeRings = new ArrayList();\n\t\tfor (var it = dirEdges.iterator(); it.hasNext(); ) {\n\t\t\tvar de = it.next();\n\t\t\tif (de.isInResult() && de.getEdgeRing() === null) {\n\t\t\t\tvar er = new MaximalEdgeRing(de, this._geometryFactory);\n\t\t\t\ter.linkDirectedEdgesForMinimalEdgeRings();\n\t\t\t\tvar minEdgeRings = er.buildMinimalRings();\n\t\t\t\tedgeRings.addAll(minEdgeRings);\n\t\t\t}\n\t\t}\n\t\treturn edgeRings;\n\t},\n\thasUnvisitedShellEdge: function (edgeRings) {\n\t\tfor (var i = 0; i < edgeRings.size(); i++) {\n\t\t\tvar er = edgeRings.get(i);\n\t\t\tif (er.isHole()) continue;\n\t\t\tvar edges = er.getEdges();\n\t\t\tvar de = edges.get(0);\n\t\t\tif (de.getLabel().getLocation(0, Position.RIGHT) !== Location.INTERIOR) continue;\n\t\t\tfor (var j = 0; j < edges.size(); j++) {\n\t\t\t\tde = edges.get(j);\n\t\t\t\tif (!de.isVisited()) {\n\t\t\t\t\tthis._disconnectedRingcoord = de.getCoordinate();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisInteriorsConnected: function () {\n\t\tvar splitEdges = new ArrayList();\n\t\tthis._geomGraph.computeSplitEdges(splitEdges);\n\t\tvar graph = new PlanarGraph(new OverlayNodeFactory());\n\t\tgraph.addEdges(splitEdges);\n\t\tthis.setInteriorEdgesInResult(graph);\n\t\tgraph.linkResultDirectedEdges();\n\t\tvar edgeRings = this.buildEdgeRings(graph.getEdgeEnds());\n\t\tthis.visitShellInteriors(this._geomGraph.getGeometry(), graph);\n\t\treturn !this.hasUnvisitedShellEdge(edgeRings);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConnectedInteriorTester;\n\t}\n});\nConnectedInteriorTester.findDifferentPoint = function (coord, pt) {\n\tfor (var i = 0; i < coord.length; i++) {\n\t\tif (!coord[i].equals(pt)) return coord[i];\n\t}\n\treturn null;\n};\n","import Location from '../../geom/Location';\nimport EdgeEndBuilder from './EdgeEndBuilder';\nimport extend from '../../../../../extend';\nimport NodeMap from '../../geomgraph/NodeMap';\nimport RelateNodeFactory from './RelateNodeFactory';\nexport default function RelateNodeGraph() {\n\tthis._nodes = new NodeMap(new RelateNodeFactory());\n}\nextend(RelateNodeGraph.prototype, {\n\tinsertEdgeEnds: function (ee) {\n\t\tfor (var i = ee.iterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis._nodes.add(e);\n\t\t}\n\t},\n\tgetNodeIterator: function () {\n\t\treturn this._nodes.iterator();\n\t},\n\tcopyNodesAndLabels: function (geomGraph, argIndex) {\n\t\tfor (var nodeIt = geomGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar graphNode = nodeIt.next();\n\t\t\tvar newNode = this._nodes.addNode(graphNode.getCoordinate());\n\t\t\tnewNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n\t\t}\n\t},\n\tbuild: function (geomGraph) {\n\t\tthis.computeIntersectionNodes(geomGraph, 0);\n\t\tthis.copyNodesAndLabels(geomGraph, 0);\n\t\tvar eeBuilder = new EdgeEndBuilder();\n\t\tvar eeList = eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());\n\t\tthis.insertEdgeEnds(eeList);\n\t},\n\tcomputeIntersectionNodes: function (geomGraph, argIndex) {\n\t\tfor (var edgeIt = geomGraph.getEdgeIterator(); edgeIt.hasNext(); ) {\n\t\t\tvar e = edgeIt.next();\n\t\t\tvar eLoc = e.getLabel().getLocation(argIndex);\n\t\t\tfor (var eiIt = e.getEdgeIntersectionList().iterator(); eiIt.hasNext(); ) {\n\t\t\t\tvar ei = eiIt.next();\n\t\t\t\tvar n = this._nodes.addNode(ei.coord);\n\t\t\t\tif (eLoc === Location.BOUNDARY) n.setLabelBoundary(argIndex); else {\n\t\t\t\t\tif (n.getLabel().isNull(argIndex)) n.setLabel(argIndex, Location.INTERIOR);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn RelateNodeGraph;\n\t}\n});\n","import RelateNodeGraph from '../relate/RelateNodeGraph';\nimport extend from '../../../../../extend';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nexport default function ConsistentAreaTester() {\n\tthis._li = new RobustLineIntersector();\n\tthis._geomGraph = null;\n\tthis._nodeGraph = new RelateNodeGraph();\n\tthis._invalidPoint = null;\n\tlet geomGraph = arguments[0];\n\tthis._geomGraph = geomGraph;\n}\nextend(ConsistentAreaTester.prototype, {\n\tisNodeEdgeAreaLabelsConsistent: function () {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tif (!node.getEdges().isAreaLabelsConsistent(this._geomGraph)) {\n\t\t\t\tthis._invalidPoint = node.getCoordinate().copy();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tgetInvalidPoint: function () {\n\t\treturn this._invalidPoint;\n\t},\n\thasDuplicateRings: function () {\n\t\tfor (var nodeIt = this._nodeGraph.getNodeIterator(); nodeIt.hasNext(); ) {\n\t\t\tvar node = nodeIt.next();\n\t\t\tfor (var i = node.getEdges().iterator(); i.hasNext(); ) {\n\t\t\t\tvar eeb = i.next();\n\t\t\t\tif (eeb.getEdgeEnds().size() > 1) {\n\t\t\t\t\tthis._invalidPoint = eeb.getEdge().getCoordinate(0);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tisNodeConsistentArea: function () {\n\t\tvar intersector = this._geomGraph.computeSelfNodes(this._li, true, true);\n\t\tif (intersector.hasProperIntersection()) {\n\t\t\tthis._invalidPoint = intersector.getProperIntersectionPoint();\n\t\t\treturn false;\n\t\t}\n\t\tthis._nodeGraph.build(this._geomGraph);\n\t\treturn this.isNodeEdgeAreaLabelsConsistent();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConsistentAreaTester;\n\t}\n});\n","import STRtree from '../../index/strtree/STRtree';\nimport IsValidOp from './IsValidOp';\nimport PointLocation from '../../algorithm/PointLocation';\nimport extend from '../../../../../extend';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nexport default function IndexedNestedRingTester() {\n\tthis._graph = null;\n\tthis._rings = new ArrayList();\n\tthis._totalEnv = new Envelope();\n\tthis._index = null;\n\tthis._nestedPt = null;\n\tlet graph = arguments[0];\n\tthis._graph = graph;\n}\nextend(IndexedNestedRingTester.prototype, {\n\tbuildIndex: function () {\n\t\tthis._index = new STRtree();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar ring = this._rings.get(i);\n\t\t\tvar env = ring.getEnvelopeInternal();\n\t\t\tthis._index.insert(env, ring);\n\t\t}\n\t},\n\tgetNestedPoint: function () {\n\t\treturn this._nestedPt;\n\t},\n\tisNonNested: function () {\n\t\tthis.buildIndex();\n\t\tfor (var i = 0; i < this._rings.size(); i++) {\n\t\t\tvar innerRing = this._rings.get(i);\n\t\t\tvar innerRingPts = innerRing.getCoordinates();\n\t\t\tvar results = this._index.query(innerRing.getEnvelopeInternal());\n\t\t\tfor (var j = 0; j < results.size(); j++) {\n\t\t\t\tvar searchRing = results.get(j);\n\t\t\t\tvar searchRingPts = searchRing.getCoordinates();\n\t\t\t\tif (innerRing === searchRing) continue;\n\t\t\t\tif (!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())) continue;\n\t\t\t\tvar innerRingPt = IsValidOp.findPtNotNode(innerRingPts, searchRing, this._graph);\n\t\t\t\tif (innerRingPt === null) continue;\n\t\t\t\tvar isInside = PointLocation.isInRing(innerRingPt, searchRingPts);\n\t\t\t\tif (isInside) {\n\t\t\t\t\tthis._nestedPt = innerRingPt;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t},\n\tadd: function (ring) {\n\t\tthis._rings.add(ring);\n\t\tthis._totalEnv.expandToInclude(ring.getEnvelopeInternal());\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IndexedNestedRingTester;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function TopologyValidationError() {\n\tthis._errorType = null;\n\tthis._pt = null;\n\tif (arguments.length === 1) {\n\t\tlet errorType = arguments[0];\n\t\tTopologyValidationError.call(this, errorType, null);\n\t} else if (arguments.length === 2) {\n\t\tlet errorType = arguments[0], pt = arguments[1];\n\t\tthis._errorType = errorType;\n\t\tif (pt !== null) this._pt = pt.copy();\n\t}\n}\nextend(TopologyValidationError.prototype, {\n\tgetErrorType: function () {\n\t\treturn this._errorType;\n\t},\n\tgetMessage: function () {\n\t\treturn TopologyValidationError.errMsg[this._errorType];\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._pt;\n\t},\n\ttoString: function () {\n\t\tvar locStr = \"\";\n\t\tif (this._pt !== null) locStr = \" at or near point \" + this._pt;\n\t\treturn this.getMessage() + locStr;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyValidationError;\n\t}\n});\nTopologyValidationError.ERROR = 0;\nTopologyValidationError.REPEATED_POINT = 1;\nTopologyValidationError.HOLE_OUTSIDE_SHELL = 2;\nTopologyValidationError.NESTED_HOLES = 3;\nTopologyValidationError.DISCONNECTED_INTERIOR = 4;\nTopologyValidationError.SELF_INTERSECTION = 5;\nTopologyValidationError.RING_SELF_INTERSECTION = 6;\nTopologyValidationError.NESTED_SHELLS = 7;\nTopologyValidationError.DUPLICATE_RINGS = 8;\nTopologyValidationError.TOO_FEW_POINTS = 9;\nTopologyValidationError.INVALID_COORDINATE = 10;\nTopologyValidationError.RING_NOT_CLOSED = 11;\nTopologyValidationError.errMsg = [\"Topology Validation Error\", \"Repeated Point\", \"Hole lies outside shell\", \"Holes are nested\", \"Interior is disconnected\", \"Self-intersection\", \"Ring Self-intersection\", \"Nested shells\", \"Duplicate Rings\", \"Too few distinct points in geometry component\", \"Invalid Coordinate\", \"Ring is not closed\"];\n","import Location from '../../geom/Location';\nimport TreeSet from '../../../../../java/util/TreeSet';\nimport LineString from '../../geom/LineString';\nimport Geometry from '../../geom/Geometry';\nimport ConnectedInteriorTester from './ConnectedInteriorTester';\nimport Coordinate from '../../geom/Coordinate';\nimport Point from '../../geom/Point';\nimport Polygon from '../../geom/Polygon';\nimport MultiPoint from '../../geom/MultiPoint';\nimport PointLocation from '../../algorithm/PointLocation';\nimport LinearRing from '../../geom/LinearRing';\nimport Double from '../../../../../java/lang/Double';\nimport extend from '../../../../../extend';\nimport GeometryGraph from '../../geomgraph/GeometryGraph';\nimport MultiPolygon from '../../geom/MultiPolygon';\nimport ConsistentAreaTester from './ConsistentAreaTester';\nimport GeometryCollection from '../../geom/GeometryCollection';\nimport IndexedNestedRingTester from './IndexedNestedRingTester';\nimport RobustLineIntersector from '../../algorithm/RobustLineIntersector';\nimport TopologyValidationError from './TopologyValidationError';\nimport IndexedPointInAreaLocator from '../../algorithm/locate/IndexedPointInAreaLocator';\nimport Assert from '../../util/Assert';\nexport default function IsValidOp() {\n\tthis._parentGeometry = null;\n\tthis._isSelfTouchingRingFormingHoleValid = false;\n\tthis._validErr = null;\n\tlet parentGeometry = arguments[0];\n\tthis._parentGeometry = parentGeometry;\n}\nextend(IsValidOp.prototype, {\n\tcheckInvalidCoordinates: function () {\n\t\tif (arguments[0] instanceof Array) {\n\t\t\tlet coords = arguments[0];\n\t\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\t\tif (!IsValidOp.isValid(coords[i])) {\n\t\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.INVALID_COORDINATE, coords[i]);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet poly = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\t\tthis.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesNotNested: function (p, graph) {\n\t\tvar nestedTester = new IndexedNestedRingTester(graph);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar innerHole = p.getInteriorRingN(i);\n\t\t\tnestedTester.add(innerHole);\n\t\t}\n\t\tvar isNonNested = nestedTester.isNonNested();\n\t\tif (!isNonNested) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_HOLES, nestedTester.getNestedPoint());\n\t\t}\n\t},\n\tcheckConsistentArea: function (graph) {\n\t\tvar cat = new ConsistentAreaTester(graph);\n\t\tvar isValidArea = cat.isNodeConsistentArea();\n\t\tif (!isValidArea) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.SELF_INTERSECTION, cat.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t\tif (cat.hasDuplicateRings()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.DUPLICATE_RINGS, cat.getInvalidPoint());\n\t\t}\n\t},\n\tisValid: function () {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr === null;\n\t},\n\tcheckShellInsideHole: function (shell, hole, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar holePts = hole.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, hole, graph);\n\t\tif (shellPt !== null) {\n\t\t\tvar insideHole = PointLocation.isInRing(shellPt, holePts);\n\t\t\tif (!insideHole) {\n\t\t\t\treturn shellPt;\n\t\t\t}\n\t\t}\n\t\tvar holePt = IsValidOp.findPtNotNode(holePts, shell, graph);\n\t\tif (holePt !== null) {\n\t\t\tvar insideShell = PointLocation.isInRing(holePt, shellPts);\n\t\t\tif (insideShell) {\n\t\t\t\treturn holePt;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t\tAssert.shouldNeverReachHere(\"points in shell and hole appear to be equal\");\n\t\treturn null;\n\t},\n\tcheckNoSelfIntersectingRings: function (graph) {\n\t\tfor (var i = graph.getEdgeIterator(); i.hasNext(); ) {\n\t\t\tvar e = i.next();\n\t\t\tthis.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t},\n\tcheckConnectedInteriors: function (graph) {\n\t\tvar cit = new ConnectedInteriorTester(graph);\n\t\tif (!cit.isInteriorsConnected()) this._validErr = new TopologyValidationError(TopologyValidationError.DISCONNECTED_INTERIOR, cit.getCoordinate());\n\t},\n\tcheckNoSelfIntersectingRing: function (eiList) {\n\t\tvar nodeSet = new TreeSet();\n\t\tvar isFirst = true;\n\t\tfor (var i = eiList.iterator(); i.hasNext(); ) {\n\t\t\tvar ei = i.next();\n\t\t\tif (isFirst) {\n\t\t\t\tisFirst = false;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (nodeSet.contains(ei.coord)) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_SELF_INTERSECTION, ei.coord);\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tnodeSet.add(ei.coord);\n\t\t\t}\n\t\t}\n\t},\n\tcheckHolesInShell: function (p, graph) {\n\t\tvar shell = p.getExteriorRing();\n\t\tvar pir = new IndexedPointInAreaLocator(shell);\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tvar holePt = IsValidOp.findPtNotNode(hole.getCoordinates(), shell, graph);\n\t\t\tif (holePt === null) return null;\n\t\t\tvar outside = Location.EXTERIOR === pir.locate(holePt);\n\t\t\tif (outside) {\n\t\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.HOLE_OUTSIDE_SHELL, holePt);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\tcheckTooFewPoints: function (graph) {\n\t\tif (graph.hasTooFewPoints()) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.TOO_FEW_POINTS, graph.getInvalidPoint());\n\t\t\treturn null;\n\t\t}\n\t},\n\tgetValidationError: function () {\n\t\tthis.checkValid(this._parentGeometry);\n\t\treturn this._validErr;\n\t},\n\tcheckValid: function () {\n\t\tif (arguments[0] instanceof Point) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof MultiPoint) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t} else if (arguments[0] instanceof LinearRing) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRing(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar li = new RobustLineIntersector();\n\t\t\tgraph.computeSelfNodes(li, true, true);\n\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t} else if (arguments[0] instanceof LineString) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g.getCoordinates());\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t} else if (arguments[0] instanceof Polygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis.checkInvalidCoordinates(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkClosedRings(g);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkHolesInShell(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkHolesNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof MultiPolygon) {\n\t\t\tlet g = arguments[0];\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkInvalidCoordinates(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t\tthis.checkClosedRings(p);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tvar graph = new GeometryGraph(0, g);\n\t\t\tthis.checkTooFewPoints(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConsistentArea(graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tif (!this._isSelfTouchingRingFormingHoleValid) {\n\t\t\t\tthis.checkNoSelfIntersectingRings(graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesInShell(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tfor (var i = 0; i < g.getNumGeometries(); i++) {\n\t\t\t\tvar p = g.getGeometryN(i);\n\t\t\t\tthis.checkHolesNotNested(p, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t\tthis.checkShellsNotNested(g, graph);\n\t\t\tif (this._validErr !== null) return null;\n\t\t\tthis.checkConnectedInteriors(graph);\n\t\t} else if (arguments[0] instanceof GeometryCollection) {\n\t\t\tlet gc = arguments[0];\n\t\t\tfor (var i = 0; i < gc.getNumGeometries(); i++) {\n\t\t\t\tvar g = gc.getGeometryN(i);\n\t\t\t\tthis.checkValid(g);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t} else if (arguments[0] instanceof Geometry) {\n\t\t\tlet g = arguments[0];\n\t\t\tthis._validErr = null;\n\t\t\tif (g.isEmpty()) return null;\n\t\t\tif (g instanceof Point) this.checkValid(g); else if (g instanceof MultiPoint) this.checkValid(g); else if (g instanceof LinearRing) this.checkValid(g); else if (g instanceof LineString) this.checkValid(g); else if (g instanceof Polygon) this.checkValid(g); else if (g instanceof MultiPolygon) this.checkValid(g); else if (g instanceof GeometryCollection) this.checkValid(g); else throw new UnsupportedOperationException(g.getClass().getName());\n\t\t}\n\t},\n\tsetSelfTouchingRingFormingHoleValid: function (isValid) {\n\t\tthis._isSelfTouchingRingFormingHoleValid = isValid;\n\t},\n\tcheckShellNotNested: function (shell, p, graph) {\n\t\tvar shellPts = shell.getCoordinates();\n\t\tvar polyShell = p.getExteriorRing();\n\t\tvar polyPts = polyShell.getCoordinates();\n\t\tvar shellPt = IsValidOp.findPtNotNode(shellPts, polyShell, graph);\n\t\tif (shellPt === null) return null;\n\t\tvar insidePolyShell = PointLocation.isInRing(shellPt, polyPts);\n\t\tif (!insidePolyShell) return null;\n\t\tif (p.getNumInteriorRing() <= 0) {\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, shellPt);\n\t\t\treturn null;\n\t\t}\n\t\tvar badNestedPt = null;\n\t\tfor (var i = 0; i < p.getNumInteriorRing(); i++) {\n\t\t\tvar hole = p.getInteriorRingN(i);\n\t\t\tbadNestedPt = this.checkShellInsideHole(shell, hole, graph);\n\t\t\tif (badNestedPt === null) return null;\n\t\t}\n\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.NESTED_SHELLS, badNestedPt);\n\t},\n\tcheckClosedRings: function (poly) {\n\t\tthis.checkClosedRing(poly.getExteriorRing());\n\t\tif (this._validErr !== null) return null;\n\t\tfor (var i = 0; i < poly.getNumInteriorRing(); i++) {\n\t\t\tthis.checkClosedRing(poly.getInteriorRingN(i));\n\t\t\tif (this._validErr !== null) return null;\n\t\t}\n\t},\n\tcheckClosedRing: function (ring) {\n\t\tif (!ring.isClosed()) {\n\t\t\tvar pt = null;\n\t\t\tif (ring.getNumPoints() >= 1) pt = ring.getCoordinateN(0);\n\t\t\tthis._validErr = new TopologyValidationError(TopologyValidationError.RING_NOT_CLOSED, pt);\n\t\t}\n\t},\n\tcheckShellsNotNested: function (mp, graph) {\n\t\tfor (var i = 0; i < mp.getNumGeometries(); i++) {\n\t\t\tvar p = mp.getGeometryN(i);\n\t\t\tvar shell = p.getExteriorRing();\n\t\t\tfor (var j = 0; j < mp.getNumGeometries(); j++) {\n\t\t\t\tif (i === j) continue;\n\t\t\t\tvar p2 = mp.getGeometryN(j);\n\t\t\t\tthis.checkShellNotNested(shell, p2, graph);\n\t\t\t\tif (this._validErr !== null) return null;\n\t\t\t}\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IsValidOp;\n\t}\n});\nIsValidOp.findPtNotNode = function (testCoords, searchRing, graph) {\n\tvar searchEdge = graph.findEdge(searchRing);\n\tvar eiList = searchEdge.getEdgeIntersectionList();\n\tfor (var i = 0; i < testCoords.length; i++) {\n\t\tvar pt = testCoords[i];\n\t\tif (!eiList.isIntersection(pt)) return pt;\n\t}\n\treturn null;\n};\nIsValidOp.isValid = function () {\n\tif (arguments[0] instanceof Geometry) {\n\t\tlet geom = arguments[0];\n\t\tvar isValidOp = new IsValidOp(geom);\n\t\treturn isValidOp.isValid();\n\t} else if (arguments[0] instanceof Coordinate) {\n\t\tlet coord = arguments[0];\n\t\tif (Double.isNaN(coord.x)) return false;\n\t\tif (Double.isInfinite(coord.x)) return false;\n\t\tif (Double.isNaN(coord.y)) return false;\n\t\tif (Double.isInfinite(coord.y)) return false;\n\t\treturn true;\n\t}\n};\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport Coordinate from '../geom/Coordinate';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport LinearRing from '../geom/LinearRing';\nimport extend from '../../../../extend';\nimport inherits from '../../../../inherits';\nexport default function PrecisionReducerCoordinateOperation() {\n\tGeometryEditor.CoordinateOperation.apply(this);\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tlet targetPM = arguments[0], removeCollapsed = arguments[1];\n\tthis._targetPM = targetPM;\n\tthis._removeCollapsed = removeCollapsed;\n}\ninherits(PrecisionReducerCoordinateOperation, GeometryEditor.CoordinateOperation);\nextend(PrecisionReducerCoordinateOperation.prototype, {\n\tedit: function () {\n\t\tif (arguments.length === 2 && (arguments[1] instanceof Geometry && arguments[0] instanceof Array)) {\n\t\t\tlet coordinates = arguments[0], geom = arguments[1];\n\t\t\tif (coordinates.length === 0) return null;\n\t\t\tvar reducedCoords = new Array(coordinates.length).fill(null);\n\t\t\tfor (var i = 0; i < coordinates.length; i++) {\n\t\t\t\tvar coord = new Coordinate(coordinates[i]);\n\t\t\t\tthis._targetPM.makePrecise(coord);\n\t\t\t\treducedCoords[i] = coord;\n\t\t\t}\n\t\t\tvar noRepeatedCoordList = new CoordinateList(reducedCoords, false);\n\t\t\tvar noRepeatedCoords = noRepeatedCoordList.toCoordinateArray();\n\t\t\tvar minLength = 0;\n\t\t\tif (geom instanceof LineString) minLength = 2;\n\t\t\tif (geom instanceof LinearRing) minLength = 4;\n\t\t\tvar collapsedCoords = reducedCoords;\n\t\t\tif (this._removeCollapsed) collapsedCoords = null;\n\t\t\tif (noRepeatedCoords.length < minLength) {\n\t\t\t\treturn collapsedCoords;\n\t\t\t}\n\t\t\treturn noRepeatedCoords;\n\t\t} else return GeometryEditor.CoordinateOperation.prototype.edit.apply(this, arguments);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn PrecisionReducerCoordinateOperation;\n\t}\n});\n","import hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport IsValidOp from '../operation/valid/IsValidOp';\nimport GeometryEditor from '../geom/util/GeometryEditor';\nimport extend from '../../../../extend';\nimport BufferOp from '../operation/buffer/BufferOp';\nimport Polygonal from '../geom/Polygonal';\nimport PrecisionReducerCoordinateOperation from './PrecisionReducerCoordinateOperation';\nexport default function GeometryPrecisionReducer() {\n\tthis._targetPM = null;\n\tthis._removeCollapsed = true;\n\tthis._changePrecisionModel = false;\n\tthis._isPointwise = false;\n\tlet pm = arguments[0];\n\tthis._targetPM = pm;\n}\nextend(GeometryPrecisionReducer.prototype, {\n\tfixPolygonalTopology: function (geom) {\n\t\tvar geomToBuffer = geom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tgeomToBuffer = this.changePM(geom, this._targetPM);\n\t\t}\n\t\tvar bufGeom = BufferOp.bufferOp(geomToBuffer, 0);\n\t\tvar finalGeom = bufGeom;\n\t\tif (!this._changePrecisionModel) {\n\t\t\tfinalGeom = bufGeom.copy();\n\t\t\tthis.changePM(finalGeom, geom.getPrecisionModel());\n\t\t}\n\t\treturn finalGeom;\n\t},\n\treducePointwise: function (geom) {\n\t\tvar geomEdit = null;\n\t\tif (this._changePrecisionModel) {\n\t\t\tvar newFactory = this.createFactory(geom.getFactory(), this._targetPM);\n\t\t\tgeomEdit = new GeometryEditor(newFactory);\n\t\t} else geomEdit = new GeometryEditor();\n\t\tvar finalRemoveCollapsed = this._removeCollapsed;\n\t\tif (geom.getDimension() >= 2) finalRemoveCollapsed = true;\n\t\tvar reduceGeom = geomEdit.edit(geom, new PrecisionReducerCoordinateOperation(this._targetPM, finalRemoveCollapsed));\n\t\treturn reduceGeom;\n\t},\n\tchangePM: function (geom, newPM) {\n\t\tvar geomEditor = this.createEditor(geom.getFactory(), newPM);\n\t\treturn geomEditor.edit(geom, new GeometryEditor.NoOpGeometryOperation());\n\t},\n\tsetRemoveCollapsedComponents: function (removeCollapsed) {\n\t\tthis._removeCollapsed = removeCollapsed;\n\t},\n\tcreateFactory: function (inputFactory, pm) {\n\t\tvar newFactory = new GeometryFactory(pm, inputFactory.getSRID(), inputFactory.getCoordinateSequenceFactory());\n\t\treturn newFactory;\n\t},\n\tsetChangePrecisionModel: function (changePrecisionModel) {\n\t\tthis._changePrecisionModel = changePrecisionModel;\n\t},\n\treduce: function (geom) {\n\t\tvar reducePW = this.reducePointwise(geom);\n\t\tif (this._isPointwise) return reducePW;\n\t\tif (!hasInterface(reducePW, Polygonal)) return reducePW;\n\t\tif (IsValidOp.isValid(reducePW)) return reducePW;\n\t\treturn this.fixPolygonalTopology(reducePW);\n\t},\n\tsetPointwise: function (isPointwise) {\n\t\tthis._isPointwise = isPointwise;\n\t},\n\tcreateEditor: function (geomFactory, newPM) {\n\t\tif (geomFactory.getPrecisionModel() === newPM) return new GeometryEditor();\n\t\tvar newFactory = this.createFactory(geomFactory, newPM);\n\t\tvar geomEdit = new GeometryEditor(newFactory);\n\t\treturn geomEdit;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn GeometryPrecisionReducer;\n\t}\n});\nGeometryPrecisionReducer.reduce = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treturn reducer.reduce(g);\n};\nGeometryPrecisionReducer.reducePointwise = function (g, precModel) {\n\tvar reducer = new GeometryPrecisionReducer(precModel);\n\treducer.setPointwise(true);\n\treturn reducer.reduce(g);\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nexport default function DouglasPeuckerLineSimplifier() {\n\tthis._pts = null;\n\tthis._usePt = null;\n\tthis._distanceTolerance = null;\n\tthis._seg = new LineSegment();\n\tlet pts = arguments[0];\n\tthis._pts = pts;\n}\nextend(DouglasPeuckerLineSimplifier.prototype, {\n\tsimplifySection: function (i, j) {\n\t\tif (i + 1 === j) {\n\t\t\treturn null;\n\t\t}\n\t\tthis._seg.p0 = this._pts[i];\n\t\tthis._seg.p1 = this._pts[j];\n\t\tvar maxDistance = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar distance = this._seg.distance(this._pts[k]);\n\t\t\tif (distance > maxDistance) {\n\t\t\t\tmaxDistance = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tif (maxDistance <= this._distanceTolerance) {\n\t\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\t\tthis._usePt[k] = false;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.simplifySection(i, maxIndex);\n\t\t\tthis.simplifySection(maxIndex, j);\n\t\t}\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function () {\n\t\tthis._usePt = new Array(this._pts.length).fill(null);\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tthis._usePt[i] = true;\n\t\t}\n\t\tthis.simplifySection(0, this._pts.length - 1);\n\t\tvar coordList = new CoordinateList();\n\t\tfor (var i = 0; i < this._pts.length; i++) {\n\t\t\tif (this._usePt[i]) coordList.add(new Coordinate(this._pts[i]));\n\t\t}\n\t\treturn coordList.toCoordinateArray();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DouglasPeuckerLineSimplifier;\n\t}\n});\nDouglasPeuckerLineSimplifier.simplify = function (pts, distanceTolerance) {\n\tvar simp = new DouglasPeuckerLineSimplifier(pts);\n\tsimp.setDistanceTolerance(distanceTolerance);\n\treturn simp.simplify();\n};\n","import DouglasPeuckerLineSimplifier from './DouglasPeuckerLineSimplifier';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport Polygon from '../geom/Polygon';\nimport LinearRing from '../geom/LinearRing';\nimport extend from '../../../../extend';\nimport MultiPolygon from '../geom/MultiPolygon';\nimport inherits from '../../../../inherits';\nexport default function DouglasPeuckerSimplifier() {\n\tthis._inputGeom = null;\n\tthis._distanceTolerance = null;\n\tthis._isEnsureValidTopology = true;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(DouglasPeuckerSimplifier.prototype, {\n\tsetEnsureValid: function (isEnsureValidTopology) {\n\t\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\t},\n\tgetResultGeometry: function () {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\treturn new DPTransformer(this._isEnsureValidTopology, this._distanceTolerance).transform(this._inputGeom);\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DouglasPeuckerSimplifier;\n\t}\n});\nDouglasPeuckerSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new DouglasPeuckerSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction DPTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._isEnsureValidTopology = true;\n\tthis._distanceTolerance = null;\n\tlet isEnsureValidTopology = arguments[0], distanceTolerance = arguments[1];\n\tthis._isEnsureValidTopology = isEnsureValidTopology;\n\tthis._distanceTolerance = distanceTolerance;\n}\ninherits(DPTransformer, GeometryTransformer);\nextend(DPTransformer.prototype, {\n\ttransformPolygon: function (geom, parent) {\n\t\tif (geom.isEmpty()) return null;\n\t\tvar rawGeom = GeometryTransformer.prototype.transformPolygon.call(this, geom, parent);\n\t\tif (parent instanceof MultiPolygon) {\n\t\t\treturn rawGeom;\n\t\t}\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\tcreateValidArea: function (rawAreaGeom) {\n\t\tif (this._isEnsureValidTopology) return rawAreaGeom.buffer(0.0);\n\t\treturn rawAreaGeom;\n\t},\n\ttransformCoordinates: function (coords, parent) {\n\t\tvar inputPts = coords.toCoordinateArray();\n\t\tvar newPts = null;\n\t\tif (inputPts.length === 0) {\n\t\t\tnewPts = new Array(0).fill(null);\n\t\t} else {\n\t\t\tnewPts = DouglasPeuckerLineSimplifier.simplify(inputPts, this._distanceTolerance);\n\t\t}\n\t\treturn this._factory.getCoordinateSequenceFactory().create(newPts);\n\t},\n\ttransformMultiPolygon: function (geom, parent) {\n\t\tvar rawGeom = GeometryTransformer.prototype.transformMultiPolygon.call(this, geom, parent);\n\t\treturn this.createValidArea(rawGeom);\n\t},\n\ttransformLinearRing: function (geom, parent) {\n\t\tvar removeDegenerateRings = parent instanceof Polygon;\n\t\tvar simpResult = GeometryTransformer.prototype.transformLinearRing.call(this, geom, parent);\n\t\tif (removeDegenerateRings && !(simpResult instanceof LinearRing)) return null;\n\t\t;\n\t\treturn simpResult;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DPTransformer;\n\t}\n});\nDouglasPeuckerSimplifier.DPTransformer = DPTransformer;\n","import extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport inherits from '../../../../inherits';\nexport default function TaggedLineSegment() {\n\tthis._parent = null;\n\tthis._index = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tTaggedLineSegment.call(this, p0, p1, null, -1);\n\t} else if (arguments.length === 4) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], parent = arguments[2], index = arguments[3];\n\t\tLineSegment.call(this, p0, p1);\n\t\tthis._parent = parent;\n\t\tthis._index = index;\n\t}\n}\ninherits(TaggedLineSegment, LineSegment);\nextend(TaggedLineSegment.prototype, {\n\tgetIndex: function () {\n\t\treturn this._index;\n\t},\n\tgetParent: function () {\n\t\treturn this._parent;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineSegment;\n\t}\n});\n","import extend from '../../../../extend';\nimport TaggedLineSegment from './TaggedLineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function TaggedLineString() {\n\tthis._parentLine = null;\n\tthis._segs = null;\n\tthis._resultSegs = new ArrayList();\n\tthis._minimumSize = null;\n\tif (arguments.length === 1) {\n\t\tlet parentLine = arguments[0];\n\t\tTaggedLineString.call(this, parentLine, 2);\n\t} else if (arguments.length === 2) {\n\t\tlet parentLine = arguments[0], minimumSize = arguments[1];\n\t\tthis._parentLine = parentLine;\n\t\tthis._minimumSize = minimumSize;\n\t\tthis.init();\n\t}\n}\nextend(TaggedLineString.prototype, {\n\taddToResult: function (seg) {\n\t\tthis._resultSegs.add(seg);\n\t},\n\tasLineString: function () {\n\t\treturn this._parentLine.getFactory().createLineString(TaggedLineString.extractCoordinates(this._resultSegs));\n\t},\n\tgetResultSize: function () {\n\t\tvar resultSegsSize = this._resultSegs.size();\n\t\treturn resultSegsSize === 0 ? 0 : resultSegsSize + 1;\n\t},\n\tgetParent: function () {\n\t\treturn this._parentLine;\n\t},\n\tgetSegment: function (i) {\n\t\treturn this._segs[i];\n\t},\n\tgetParentCoordinates: function () {\n\t\treturn this._parentLine.getCoordinates();\n\t},\n\tgetMinimumSize: function () {\n\t\treturn this._minimumSize;\n\t},\n\tasLinearRing: function () {\n\t\treturn this._parentLine.getFactory().createLinearRing(TaggedLineString.extractCoordinates(this._resultSegs));\n\t},\n\tgetSegments: function () {\n\t\treturn this._segs;\n\t},\n\tinit: function () {\n\t\tvar pts = this._parentLine.getCoordinates();\n\t\tthis._segs = new Array(pts.length - 1).fill(null);\n\t\tfor (var i = 0; i < pts.length - 1; i++) {\n\t\t\tvar seg = new TaggedLineSegment(pts[i], pts[i + 1], this._parentLine, i);\n\t\t\tthis._segs[i] = seg;\n\t\t}\n\t},\n\tgetResultCoordinates: function () {\n\t\treturn TaggedLineString.extractCoordinates(this._resultSegs);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineString;\n\t}\n});\nTaggedLineString.extractCoordinates = function (segs) {\n\tvar pts = new Array(segs.size() + 1).fill(null);\n\tvar seg = null;\n\tfor (var i = 0; i < segs.size(); i++) {\n\t\tseg = segs.get(i);\n\t\tpts[i] = seg.p0;\n\t}\n\tpts[pts.length - 1] = seg.p1;\n\treturn pts;\n};\n","import Quadtree from '../index/quadtree/Quadtree';\nimport ItemVisitor from '../index/ItemVisitor';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nimport TaggedLineString from './TaggedLineString';\nexport default function LineSegmentIndex() {\n\tthis._index = new Quadtree();\n}\nextend(LineSegmentIndex.prototype, {\n\tremove: function (seg) {\n\t\tthis._index.remove(new Envelope(seg.p0, seg.p1), seg);\n\t},\n\tadd: function () {\n\t\tif (arguments[0] instanceof TaggedLineString) {\n\t\t\tlet line = arguments[0];\n\t\t\tvar segs = line.getSegments();\n\t\t\tfor (var i = 0; i < segs.length; i++) {\n\t\t\t\tvar seg = segs[i];\n\t\t\t\tthis.add(seg);\n\t\t\t}\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tthis._index.insert(new Envelope(seg.p0, seg.p1), seg);\n\t\t}\n\t},\n\tquery: function (querySeg) {\n\t\tvar env = new Envelope(querySeg.p0, querySeg.p1);\n\t\tvar visitor = new LineSegmentVisitor(querySeg);\n\t\tthis._index.query(env, visitor);\n\t\tvar itemsFound = visitor.getItems();\n\t\treturn itemsFound;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegmentIndex;\n\t}\n});\nfunction LineSegmentVisitor() {\n\tthis._querySeg = null;\n\tthis._items = new ArrayList();\n\tlet querySeg = arguments[0];\n\tthis._querySeg = querySeg;\n}\nextend(LineSegmentVisitor.prototype, {\n\tvisitItem: function (item) {\n\t\tvar seg = item;\n\t\tif (Envelope.intersects(seg.p0, seg.p1, this._querySeg.p0, this._querySeg.p1)) this._items.add(item);\n\t},\n\tgetItems: function () {\n\t\treturn this._items;\n\t},\n\tinterfaces_: function () {\n\t\treturn [ItemVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn LineSegmentVisitor;\n\t}\n});\n","import extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport LineSegmentIndex from './LineSegmentIndex';\nimport RobustLineIntersector from '../algorithm/RobustLineIntersector';\nexport default function TaggedLineStringSimplifier() {\n\tthis._li = new RobustLineIntersector();\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._line = null;\n\tthis._linePts = null;\n\tthis._distanceTolerance = 0.0;\n\tlet inputIndex = arguments[0], outputIndex = arguments[1];\n\tthis._inputIndex = inputIndex;\n\tthis._outputIndex = outputIndex;\n}\nextend(TaggedLineStringSimplifier.prototype, {\n\tflatten: function (start, end) {\n\t\tvar p0 = this._linePts[start];\n\t\tvar p1 = this._linePts[end];\n\t\tvar newSeg = new LineSegment(p0, p1);\n\t\tthis.remove(this._line, start, end);\n\t\tthis._outputIndex.add(newSeg);\n\t\treturn newSeg;\n\t},\n\thasBadIntersection: function (parentLine, sectionIndex, candidateSeg) {\n\t\tif (this.hasBadOutputIntersection(candidateSeg)) return true;\n\t\tif (this.hasBadInputIntersection(parentLine, sectionIndex, candidateSeg)) return true;\n\t\treturn false;\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplifySection: function (i, j, depth) {\n\t\tdepth += 1;\n\t\tvar sectionIndex = new Array(2).fill(null);\n\t\tif (i + 1 === j) {\n\t\t\tvar newSeg = this._line.getSegment(i);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tvar isValidToSimplify = true;\n\t\tif (this._line.getResultSize() < this._line.getMinimumSize()) {\n\t\t\tvar worstCaseSize = depth + 1;\n\t\t\tif (worstCaseSize < this._line.getMinimumSize()) isValidToSimplify = false;\n\t\t}\n\t\tvar distance = new Array(1).fill(null);\n\t\tvar furthestPtIndex = this.findFurthestPoint(this._linePts, i, j, distance);\n\t\tif (distance[0] > this._distanceTolerance) isValidToSimplify = false;\n\t\tvar candidateSeg = new LineSegment();\n\t\tcandidateSeg.p0 = this._linePts[i];\n\t\tcandidateSeg.p1 = this._linePts[j];\n\t\tsectionIndex[0] = i;\n\t\tsectionIndex[1] = j;\n\t\tif (this.hasBadIntersection(this._line, sectionIndex, candidateSeg)) isValidToSimplify = false;\n\t\tif (isValidToSimplify) {\n\t\t\tvar newSeg = this.flatten(i, j);\n\t\t\tthis._line.addToResult(newSeg);\n\t\t\treturn null;\n\t\t}\n\t\tthis.simplifySection(i, furthestPtIndex, depth);\n\t\tthis.simplifySection(furthestPtIndex, j, depth);\n\t},\n\thasBadOutputIntersection: function (candidateSeg) {\n\t\tvar querySegs = this._outputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tfindFurthestPoint: function (pts, i, j, maxDistance) {\n\t\tvar seg = new LineSegment();\n\t\tseg.p0 = pts[i];\n\t\tseg.p1 = pts[j];\n\t\tvar maxDist = -1.0;\n\t\tvar maxIndex = i;\n\t\tfor (var k = i + 1; k < j; k++) {\n\t\t\tvar midPt = pts[k];\n\t\t\tvar distance = seg.distance(midPt);\n\t\t\tif (distance > maxDist) {\n\t\t\t\tmaxDist = distance;\n\t\t\t\tmaxIndex = k;\n\t\t\t}\n\t\t}\n\t\tmaxDistance[0] = maxDist;\n\t\treturn maxIndex;\n\t},\n\tsimplify: function (line) {\n\t\tthis._line = line;\n\t\tthis._linePts = line.getParentCoordinates();\n\t\tthis.simplifySection(0, this._linePts.length - 1, 0);\n\t},\n\tremove: function (line, start, end) {\n\t\tfor (var i = start; i < end; i++) {\n\t\t\tvar seg = line.getSegment(i);\n\t\t\tthis._inputIndex.remove(seg);\n\t\t}\n\t},\n\thasInteriorIntersection: function (seg0, seg1) {\n\t\tthis._li.computeIntersection(seg0.p0, seg0.p1, seg1.p0, seg1.p1);\n\t\treturn this._li.isInteriorIntersection();\n\t},\n\thasBadInputIntersection: function (parentLine, sectionIndex, candidateSeg) {\n\t\tvar querySegs = this._inputIndex.query(candidateSeg);\n\t\tfor (var i = querySegs.iterator(); i.hasNext(); ) {\n\t\t\tvar querySeg = i.next();\n\t\t\tif (this.hasInteriorIntersection(querySeg, candidateSeg)) {\n\t\t\t\tif (TaggedLineStringSimplifier.isInLineSection(parentLine, sectionIndex, querySeg)) continue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLineStringSimplifier;\n\t}\n});\nTaggedLineStringSimplifier.isInLineSection = function (line, sectionIndex, seg) {\n\tif (seg.getParent() !== line.getParent()) return false;\n\tvar segIndex = seg.getIndex();\n\tif (segIndex >= sectionIndex[0] && segIndex < sectionIndex[1]) return true;\n\treturn false;\n};\n","import extend from '../../../../extend';\nimport TaggedLineStringSimplifier from './TaggedLineStringSimplifier';\nimport LineSegmentIndex from './LineSegmentIndex';\nexport default function TaggedLinesSimplifier() {\n\tthis._inputIndex = new LineSegmentIndex();\n\tthis._outputIndex = new LineSegmentIndex();\n\tthis._distanceTolerance = 0.0;\n}\nextend(TaggedLinesSimplifier.prototype, {\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tthis._distanceTolerance = distanceTolerance;\n\t},\n\tsimplify: function (taggedLines) {\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tthis._inputIndex.add(i.next());\n\t\t}\n\t\tfor (var i = taggedLines.iterator(); i.hasNext(); ) {\n\t\t\tvar tlss = new TaggedLineStringSimplifier(this._inputIndex, this._outputIndex);\n\t\t\ttlss.setDistanceTolerance(this._distanceTolerance);\n\t\t\ttlss.simplify(i.next());\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TaggedLinesSimplifier;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport HashMap from '../../../../java/util/HashMap';\nimport GeometryTransformer from '../geom/util/GeometryTransformer';\nimport TaggedLinesSimplifier from './TaggedLinesSimplifier';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport GeometryComponentFilter from '../geom/GeometryComponentFilter';\nimport inherits from '../../../../inherits';\nimport TaggedLineString from './TaggedLineString';\nexport default function TopologyPreservingSimplifier() {\n\tthis._inputGeom = null;\n\tthis._lineSimplifier = new TaggedLinesSimplifier();\n\tthis._linestringMap = null;\n\tlet inputGeom = arguments[0];\n\tthis._inputGeom = inputGeom;\n}\nextend(TopologyPreservingSimplifier.prototype, {\n\tgetResultGeometry: function () {\n\t\tif (this._inputGeom.isEmpty()) return this._inputGeom.copy();\n\t\tthis._linestringMap = new HashMap();\n\t\tthis._inputGeom.apply(new LineStringMapBuilderFilter(this));\n\t\tthis._lineSimplifier.simplify(this._linestringMap.values());\n\t\tvar result = new LineStringTransformer(this._linestringMap).transform(this._inputGeom);\n\t\treturn result;\n\t},\n\tsetDistanceTolerance: function (distanceTolerance) {\n\t\tif (distanceTolerance < 0.0) throw new IllegalArgumentException(\"Tolerance must be non-negative\");\n\t\tthis._lineSimplifier.setDistanceTolerance(distanceTolerance);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TopologyPreservingSimplifier;\n\t}\n});\nTopologyPreservingSimplifier.simplify = function (geom, distanceTolerance) {\n\tvar tss = new TopologyPreservingSimplifier(geom);\n\ttss.setDistanceTolerance(distanceTolerance);\n\treturn tss.getResultGeometry();\n};\nfunction LineStringTransformer() {\n\tGeometryTransformer.apply(this);\n\tthis._linestringMap = null;\n\tlet linestringMap = arguments[0];\n\tthis._linestringMap = linestringMap;\n}\ninherits(LineStringTransformer, GeometryTransformer);\nextend(LineStringTransformer.prototype, {\n\ttransformCoordinates: function (coords, parent) {\n\t\tif (coords.size() === 0) return null;\n\t\tif (parent instanceof LineString) {\n\t\t\tvar taggedLine = this._linestringMap.get(parent);\n\t\t\treturn this.createCoordinateSequence(taggedLine.getResultCoordinates());\n\t\t}\n\t\treturn GeometryTransformer.prototype.transformCoordinates.call(this, coords, parent);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringTransformer;\n\t}\n});\nfunction LineStringMapBuilderFilter() {\n\tthis.tps = null;\n\tlet tps = arguments[0];\n\tthis.tps = tps;\n}\nextend(LineStringMapBuilderFilter.prototype, {\n\tfilter: function (geom) {\n\t\tif (geom instanceof LineString) {\n\t\t\tvar line = geom;\n\t\t\tif (line.isEmpty()) return null;\n\t\t\tvar minSize = line.isClosed() ? 4 : 2;\n\t\t\tvar taggedLine = new TaggedLineString(line, minSize);\n\t\t\tthis.tps._linestringMap.put(line, taggedLine);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [GeometryComponentFilter];\n\t},\n\tgetClass: function () {\n\t\treturn LineStringMapBuilderFilter;\n\t}\n});\nTopologyPreservingSimplifier.LineStringTransformer = LineStringTransformer;\nTopologyPreservingSimplifier.LineStringMapBuilderFilter = LineStringMapBuilderFilter;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nexport default function SplitSegment() {\n\tthis._seg = null;\n\tthis._segLen = null;\n\tthis._splitPt = null;\n\tthis._minimumLen = 0.0;\n\tlet seg = arguments[0];\n\tthis._seg = seg;\n\tthis._segLen = seg.getLength();\n}\nextend(SplitSegment.prototype, {\n\tsplitAt: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pt = arguments[0];\n\t\t\tvar minFrac = this._minimumLen / this._segLen;\n\t\t\tif (pt.distance(this._seg.p0) < this._minimumLen) {\n\t\t\t\tthis._splitPt = this._seg.pointAlong(minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (pt.distance(this._seg.p1) < this._minimumLen) {\n\t\t\t\tthis._splitPt = SplitSegment.pointAlongReverse(this._seg, minFrac);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._splitPt = pt;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet length = arguments[0], endPt = arguments[1];\n\t\t\tvar actualLen = this.getConstrainedLength(length);\n\t\t\tvar frac = actualLen / this._segLen;\n\t\t\tif (endPt.equals2D(this._seg.p0)) this._splitPt = this._seg.pointAlong(frac); else this._splitPt = SplitSegment.pointAlongReverse(this._seg, frac);\n\t\t}\n\t},\n\tsetMinimumLength: function (minLen) {\n\t\tthis._minimumLen = minLen;\n\t},\n\tgetConstrainedLength: function (len) {\n\t\tif (len < this._minimumLen) return this._minimumLen;\n\t\treturn len;\n\t},\n\tgetSplitPoint: function () {\n\t\treturn this._splitPt;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn SplitSegment;\n\t}\n});\nSplitSegment.pointAlongReverse = function (seg, segmentLengthFraction) {\n\tvar coord = new Coordinate();\n\tcoord.x = seg.p1.x - segmentLengthFraction * (seg.p1.x - seg.p0.x);\n\tcoord.y = seg.p1.y - segmentLengthFraction * (seg.p1.y - seg.p0.y);\n\treturn coord;\n};\n","import extend from '../../../../extend';\nexport default function ConstraintSplitPointFinder() {}\nextend(ConstraintSplitPointFinder.prototype, {\n\tfindSplitPoint: function (seg, encroachPt) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConstraintSplitPointFinder;\n\t}\n});\n","import extend from '../../../../extend';\nimport SplitSegment from './SplitSegment';\nimport ConstraintSplitPointFinder from './ConstraintSplitPointFinder';\nexport default function NonEncroachingSplitPointFinder() {}\nextend(NonEncroachingSplitPointFinder.prototype, {\n\tfindSplitPoint: function (seg, encroachPt) {\n\t\tvar lineSeg = seg.getLineSegment();\n\t\tvar segLen = lineSeg.getLength();\n\t\tvar midPtLen = segLen / 2;\n\t\tvar splitSeg = new SplitSegment(lineSeg);\n\t\tvar projPt = NonEncroachingSplitPointFinder.projectedSplitPoint(seg, encroachPt);\n\t\tvar nonEncroachDiam = projPt.distance(encroachPt) * 2 * 0.8;\n\t\tvar maxSplitLen = nonEncroachDiam;\n\t\tif (maxSplitLen > midPtLen) {\n\t\t\tmaxSplitLen = midPtLen;\n\t\t}\n\t\tsplitSeg.setMinimumLength(maxSplitLen);\n\t\tsplitSeg.splitAt(projPt);\n\t\treturn splitSeg.getSplitPoint();\n\t},\n\tinterfaces_: function () {\n\t\treturn [ConstraintSplitPointFinder];\n\t},\n\tgetClass: function () {\n\t\treturn NonEncroachingSplitPointFinder;\n\t}\n});\nNonEncroachingSplitPointFinder.projectedSplitPoint = function (seg, encroachPt) {\n\tvar lineSeg = seg.getLineSegment();\n\tvar projPt = lineSeg.project(encroachPt);\n\treturn projPt;\n};\n","import WKTWriter from '../../io/WKTWriter';\nimport CoordinateArraySequence from '../../geom/impl/CoordinateArraySequence';\nimport extend from '../../../../../extend';\nimport DD from '../../math/DD';\nimport System from '../../../../../java/lang/System';\nimport Triangle from '../../geom/Triangle';\nexport default function TrianglePredicate() {}\nextend(TrianglePredicate.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TrianglePredicate;\n\t}\n});\nTrianglePredicate.triArea = function (a, b, c) {\n\treturn (b.x - a.x) * (c.y - a.y) - (b.y - a.y) * (c.x - a.x);\n};\nTrianglePredicate.isInCircleDDNormalized = function (a, b, c, p) {\n\tvar adx = DD.valueOf(a.x).selfSubtract(p.x);\n\tvar ady = DD.valueOf(a.y).selfSubtract(p.y);\n\tvar bdx = DD.valueOf(b.x).selfSubtract(p.x);\n\tvar bdy = DD.valueOf(b.y).selfSubtract(p.y);\n\tvar cdx = DD.valueOf(c.x).selfSubtract(p.x);\n\tvar cdy = DD.valueOf(c.y).selfSubtract(p.y);\n\tvar abdet = adx.multiply(bdy).selfSubtract(bdx.multiply(ady));\n\tvar bcdet = bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));\n\tvar cadet = cdx.multiply(ady).selfSubtract(adx.multiply(cdy));\n\tvar alift = adx.multiply(adx).selfAdd(ady.multiply(ady));\n\tvar blift = bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));\n\tvar clift = cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));\n\tvar sum = alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.checkRobustInCircle = function (a, b, c, p) {\n\tvar nonRobustInCircle = TrianglePredicate.isInCircleNonRobust(a, b, c, p);\n\tvar isInCircleDD = TrianglePredicate.isInCircleDDSlow(a, b, c, p);\n\tvar isInCircleCC = TrianglePredicate.isInCircleCC(a, b, c, p);\n\tvar circumCentre = Triangle.circumcentre(a, b, c);\n\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) - a.distance(circumCentre)) / a.distance(circumCentre));\n\tif (nonRobustInCircle !== isInCircleDD || nonRobustInCircle !== isInCircleCC) {\n\t\tSystem.out.println(\"inCircle robustness failure (double result = \" + nonRobustInCircle + \", DD result = \" + isInCircleDD + \", CC result = \" + isInCircleCC + \")\");\n\t\tSystem.out.println(WKTWriter.toLineString(new CoordinateArraySequence([a, b, c, p])));\n\t\tSystem.out.println(\"Circumcentre = \" + WKTWriter.toPoint(circumCentre) + \" radius = \" + a.distance(circumCentre));\n\t\tSystem.out.println(\"p radius diff a = \" + Math.abs(p.distance(circumCentre) / a.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff b = \" + Math.abs(p.distance(circumCentre) / b.distance(circumCentre) - 1));\n\t\tSystem.out.println(\"p radius diff c = \" + Math.abs(p.distance(circumCentre) / c.distance(circumCentre) - 1));\n\t\tSystem.out.println();\n\t}\n};\nTrianglePredicate.isInCircleDDFast = function (a, b, c, p) {\n\tvar aTerm = DD.sqr(a.x).selfAdd(DD.sqr(a.y)).selfMultiply(TrianglePredicate.triAreaDDFast(b, c, p));\n\tvar bTerm = DD.sqr(b.x).selfAdd(DD.sqr(b.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, c, p));\n\tvar cTerm = DD.sqr(c.x).selfAdd(DD.sqr(c.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, p));\n\tvar pTerm = DD.sqr(p.x).selfAdd(DD.sqr(p.y)).selfMultiply(TrianglePredicate.triAreaDDFast(a, b, c));\n\tvar sum = aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleCC = function (a, b, c, p) {\n\tvar cc = Triangle.circumcentre(a, b, c);\n\tvar ccRadius = a.distance(cc);\n\tvar pRadiusDiff = p.distance(cc) - ccRadius;\n\treturn pRadiusDiff <= 0;\n};\nTrianglePredicate.isInCircleNormalized = function (a, b, c, p) {\n\tvar adx = a.x - p.x;\n\tvar ady = a.y - p.y;\n\tvar bdx = b.x - p.x;\n\tvar bdy = b.y - p.y;\n\tvar cdx = c.x - p.x;\n\tvar cdy = c.y - p.y;\n\tvar abdet = adx * bdy - bdx * ady;\n\tvar bcdet = bdx * cdy - cdx * bdy;\n\tvar cadet = cdx * ady - adx * cdy;\n\tvar alift = adx * adx + ady * ady;\n\tvar blift = bdx * bdx + bdy * bdy;\n\tvar clift = cdx * cdx + cdy * cdy;\n\tvar disc = alift * bcdet + blift * cadet + clift * abdet;\n\treturn disc > 0;\n};\nTrianglePredicate.isInCircleDDSlow = function (a, b, c, p) {\n\tvar px = DD.valueOf(p.x);\n\tvar py = DD.valueOf(p.y);\n\tvar ax = DD.valueOf(a.x);\n\tvar ay = DD.valueOf(a.y);\n\tvar bx = DD.valueOf(b.x);\n\tvar by = DD.valueOf(b.y);\n\tvar cx = DD.valueOf(c.x);\n\tvar cy = DD.valueOf(c.y);\n\tvar aTerm = ax.multiply(ax).add(ay.multiply(ay)).multiply(TrianglePredicate.triAreaDDSlow(bx, by, cx, cy, px, py));\n\tvar bTerm = bx.multiply(bx).add(by.multiply(by)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, cx, cy, px, py));\n\tvar cTerm = cx.multiply(cx).add(cy.multiply(cy)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, px, py));\n\tvar pTerm = px.multiply(px).add(py.multiply(py)).multiply(TrianglePredicate.triAreaDDSlow(ax, ay, bx, by, cx, cy));\n\tvar sum = aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);\n\tvar isInCircle = sum.doubleValue() > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleNonRobust = function (a, b, c, p) {\n\tvar isInCircle = (a.x * a.x + a.y * a.y) * TrianglePredicate.triArea(b, c, p) - (b.x * b.x + b.y * b.y) * TrianglePredicate.triArea(a, c, p) + (c.x * c.x + c.y * c.y) * TrianglePredicate.triArea(a, b, p) - (p.x * p.x + p.y * p.y) * TrianglePredicate.triArea(a, b, c) > 0;\n\treturn isInCircle;\n};\nTrianglePredicate.isInCircleRobust = function (a, b, c, p) {\n\treturn TrianglePredicate.isInCircleNormalized(a, b, c, p);\n};\nTrianglePredicate.triAreaDDSlow = function (ax, ay, bx, by, cx, cy) {\n\treturn bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax)));\n};\nTrianglePredicate.triAreaDDFast = function (a, b, c) {\n\tvar t1 = DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(DD.valueOf(c.y).selfSubtract(a.y));\n\tvar t2 = DD.valueOf(b.y).selfSubtract(a.y).selfMultiply(DD.valueOf(c.x).selfSubtract(a.x));\n\treturn t1.selfSubtract(t2);\n};\n","import NotRepresentableException from '../../algorithm/NotRepresentableException';\nimport Coordinate from '../../geom/Coordinate';\nimport TrianglePredicate from './TrianglePredicate';\nimport extend from '../../../../../extend';\nimport System from '../../../../../java/lang/System';\nimport HCoordinate from '../../algorithm/HCoordinate';\nexport default function Vertex() {\n\tthis._p = null;\n\tif (arguments.length === 1) {\n\t\tlet _p = arguments[0];\n\t\tthis._p = new Coordinate(_p);\n\t} else if (arguments.length === 2) {\n\t\tlet _x = arguments[0], _y = arguments[1];\n\t\tthis._p = new Coordinate(_x, _y);\n\t} else if (arguments.length === 3) {\n\t\tlet _x = arguments[0], _y = arguments[1], _z = arguments[2];\n\t\tthis._p = new Coordinate(_x, _y, _z);\n\t}\n}\nextend(Vertex.prototype, {\n\tcircleCenter: function (b, c) {\n\t\tvar a = new Vertex(this.getX(), this.getY());\n\t\tvar cab = this.bisector(a, b);\n\t\tvar cbc = this.bisector(b, c);\n\t\tvar hcc = new HCoordinate(cab, cbc);\n\t\tvar cc = null;\n\t\ttry {\n\t\t\tcc = new Vertex(hcc.getX(), hcc.getY());\n\t\t} catch (nre) {\n\t\t\tif (nre instanceof NotRepresentableException) {\n\t\t\t\tSystem.err.println(\"a: \" + a + \"  b: \" + b + \"  c: \" + c);\n\t\t\t\tSystem.err.println(nre);\n\t\t\t} else throw nre;\n\t\t} finally {}\n\t\treturn cc;\n\t},\n\tdot: function (v) {\n\t\treturn this._p.x * v.getX() + this._p.y * v.getY();\n\t},\n\tmagn: function () {\n\t\treturn Math.sqrt(this._p.x * this._p.x + this._p.y * this._p.y);\n\t},\n\tgetZ: function () {\n\t\treturn this._p.z;\n\t},\n\tbisector: function (a, b) {\n\t\tvar dx = b.getX() - a.getX();\n\t\tvar dy = b.getY() - a.getY();\n\t\tvar l1 = new HCoordinate(a.getX() + dx / 2.0, a.getY() + dy / 2.0, 1.0);\n\t\tvar l2 = new HCoordinate(a.getX() - dy + dx / 2.0, a.getY() + dx + dy / 2.0, 1.0);\n\t\treturn new HCoordinate(l1, l2);\n\t},\n\tequals: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet _x = arguments[0];\n\t\t\tif (this._p.x === _x.getX() && this._p.y === _x.getY()) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet _x = arguments[0], tolerance = arguments[1];\n\t\t\tif (this._p.distance(_x.getCoordinate()) < tolerance) {\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t},\n\tgetCoordinate: function () {\n\t\treturn this._p;\n\t},\n\tisInCircle: function (a, b, c) {\n\t\treturn TrianglePredicate.isInCircleRobust(a._p, b._p, c._p, this._p);\n\t},\n\tinterpolateZValue: function (v0, v1, v2) {\n\t\tvar x0 = v0.getX();\n\t\tvar y0 = v0.getY();\n\t\tvar a = v1.getX() - x0;\n\t\tvar b = v2.getX() - x0;\n\t\tvar c = v1.getY() - y0;\n\t\tvar d = v2.getY() - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = this.getX() - x0;\n\t\tvar dy = this.getY() - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.getZ() + t * (v1.getZ() - v0.getZ()) + u * (v2.getZ() - v0.getZ());\n\t\treturn z;\n\t},\n\tmidPoint: function (a) {\n\t\tvar xm = (this._p.x + a.getX()) / 2.0;\n\t\tvar ym = (this._p.y + a.getY()) / 2.0;\n\t\tvar zm = (this._p.z + a.getZ()) / 2.0;\n\t\treturn new Vertex(xm, ym, zm);\n\t},\n\trightOf: function (e) {\n\t\treturn this.isCCW(e.dest(), e.orig());\n\t},\n\tisCCW: function (b, c) {\n\t\treturn (b._p.x - this._p.x) * (c._p.y - this._p.y) - (b._p.y - this._p.y) * (c._p.x - this._p.x) > 0;\n\t},\n\tgetX: function () {\n\t\treturn this._p.x;\n\t},\n\tcrossProduct: function (v) {\n\t\treturn this._p.x * v.getY() - this._p.y * v.getX();\n\t},\n\tsetZ: function (_z) {\n\t\tthis._p.z = _z;\n\t},\n\ttimes: function (c) {\n\t\treturn new Vertex(c * this._p.x, c * this._p.y);\n\t},\n\tcross: function () {\n\t\treturn new Vertex(this._p.y, -this._p.x);\n\t},\n\tleftOf: function (e) {\n\t\treturn this.isCCW(e.orig(), e.dest());\n\t},\n\ttoString: function () {\n\t\treturn \"POINT (\" + this._p.x + \" \" + this._p.y + \")\";\n\t},\n\tsub: function (v) {\n\t\treturn new Vertex(this._p.x - v.getX(), this._p.y - v.getY());\n\t},\n\tgetY: function () {\n\t\treturn this._p.y;\n\t},\n\tclassify: function (p0, p1) {\n\t\tvar p2 = this;\n\t\tvar a = p1.sub(p0);\n\t\tvar b = p2.sub(p0);\n\t\tvar sa = a.crossProduct(b);\n\t\tif (sa > 0.0) return Vertex.LEFT;\n\t\tif (sa < 0.0) return Vertex.RIGHT;\n\t\tif (a.getX() * b.getX() < 0.0 || a.getY() * b.getY() < 0.0) return Vertex.BEHIND;\n\t\tif (a.magn() < b.magn()) return Vertex.BEYOND;\n\t\tif (p0.equals(p2)) return Vertex.ORIGIN;\n\t\tif (p1.equals(p2)) return Vertex.DESTINATION;\n\t\treturn Vertex.BETWEEN;\n\t},\n\tsum: function (v) {\n\t\treturn new Vertex(this._p.x + v.getX(), this._p.y + v.getY());\n\t},\n\tdistance: function (v1, v2) {\n\t\treturn Math.sqrt(Math.pow(v2.getX() - v1.getX(), 2.0) + Math.pow(v2.getY() - v1.getY(), 2.0));\n\t},\n\tcircumRadiusRatio: function (b, c) {\n\t\tvar x = this.circleCenter(b, c);\n\t\tvar radius = this.distance(x, b);\n\t\tvar edgeLength = this.distance(this, b);\n\t\tvar el = this.distance(b, c);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\tel = this.distance(c, this);\n\t\tif (el < edgeLength) {\n\t\t\tedgeLength = el;\n\t\t}\n\t\treturn radius / edgeLength;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Vertex;\n\t}\n});\nVertex.interpolateZ = function () {\n\tif (arguments.length === 3) {\n\t\tlet p = arguments[0], p0 = arguments[1], p1 = arguments[2];\n\t\tvar segLen = p0.distance(p1);\n\t\tvar ptLen = p.distance(p0);\n\t\tvar dz = p1.z - p0.z;\n\t\tvar pz = p0.z + dz * (ptLen / segLen);\n\t\treturn pz;\n\t} else if (arguments.length === 4) {\n\t\tlet p = arguments[0], v0 = arguments[1], v1 = arguments[2], v2 = arguments[3];\n\t\tvar x0 = v0.x;\n\t\tvar y0 = v0.y;\n\t\tvar a = v1.x - x0;\n\t\tvar b = v2.x - x0;\n\t\tvar c = v1.y - y0;\n\t\tvar d = v2.y - y0;\n\t\tvar det = a * d - b * c;\n\t\tvar dx = p.x - x0;\n\t\tvar dy = p.y - y0;\n\t\tvar t = (d * dx - b * dy) / det;\n\t\tvar u = (-c * dx + a * dy) / det;\n\t\tvar z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n\t\treturn z;\n\t}\n};\nVertex.LEFT = 0;\nVertex.RIGHT = 1;\nVertex.BEYOND = 2;\nVertex.BEHIND = 3;\nVertex.BETWEEN = 4;\nVertex.ORIGIN = 5;\nVertex.DESTINATION = 6;\n","import extend from '../../../../extend';\nimport Vertex from './quadedge/Vertex';\nimport inherits from '../../../../inherits';\nexport default function ConstraintVertex() {\n\tthis._isOnConstraint = null;\n\tthis._constraint = null;\n\tlet p = arguments[0];\n\tVertex.call(this, p);\n}\ninherits(ConstraintVertex, Vertex);\nextend(ConstraintVertex.prototype, {\n\tgetConstraint: function () {\n\t\treturn this._constraint;\n\t},\n\tsetOnConstraint: function (isOnConstraint) {\n\t\tthis._isOnConstraint = isOnConstraint;\n\t},\n\tmerge: function (other) {\n\t\tif (other._isOnConstraint) {\n\t\t\tthis._isOnConstraint = true;\n\t\t\tthis._constraint = other._constraint;\n\t\t}\n\t},\n\tisOnConstraint: function () {\n\t\treturn this._isOnConstraint;\n\t},\n\tsetConstraint: function (constraint) {\n\t\tthis._isOnConstraint = true;\n\t\tthis._constraint = constraint;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConstraintVertex;\n\t}\n});\n","import WKTWriter from '../../io/WKTWriter';\nimport extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nexport default function QuadEdge() {\n\tthis._rot = null;\n\tthis._vertex = null;\n\tthis._next = null;\n\tthis._data = null;\n}\nextend(QuadEdge.prototype, {\n\tequalsNonOriented: function (qe) {\n\t\tif (this.equalsOriented(qe)) return true;\n\t\tif (this.equalsOriented(qe.sym())) return true;\n\t\treturn false;\n\t},\n\ttoLineSegment: function () {\n\t\treturn new LineSegment(this._vertex.getCoordinate(), this.dest().getCoordinate());\n\t},\n\tdest: function () {\n\t\treturn this.sym().orig();\n\t},\n\toNext: function () {\n\t\treturn this._next;\n\t},\n\tequalsOriented: function (qe) {\n\t\tif (this.orig().getCoordinate().equals2D(qe.orig().getCoordinate()) && this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())) return true;\n\t\treturn false;\n\t},\n\tdNext: function () {\n\t\treturn this.sym().oNext().sym();\n\t},\n\tlPrev: function () {\n\t\treturn this._next.sym();\n\t},\n\trPrev: function () {\n\t\treturn this.sym().oNext();\n\t},\n\trot: function () {\n\t\treturn this._rot;\n\t},\n\toPrev: function () {\n\t\treturn this._rot._next._rot;\n\t},\n\tsym: function () {\n\t\treturn this._rot._rot;\n\t},\n\tsetOrig: function (o) {\n\t\tthis._vertex = o;\n\t},\n\tlNext: function () {\n\t\treturn this.invRot().oNext().rot();\n\t},\n\tgetLength: function () {\n\t\treturn this.orig().getCoordinate().distance(this.dest().getCoordinate());\n\t},\n\tinvRot: function () {\n\t\treturn this._rot.sym();\n\t},\n\tsetDest: function (d) {\n\t\tthis.sym().setOrig(d);\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tdelete: function () {\n\t\tthis._rot = null;\n\t},\n\torig: function () {\n\t\treturn this._vertex;\n\t},\n\trNext: function () {\n\t\treturn this._rot._next.invRot();\n\t},\n\ttoString: function () {\n\t\tvar p0 = this._vertex.getCoordinate();\n\t\tvar p1 = this.dest().getCoordinate();\n\t\treturn WKTWriter.toLineString(p0, p1);\n\t},\n\tisLive: function () {\n\t\treturn this._rot !== null;\n\t},\n\tgetPrimary: function () {\n\t\tif (this.orig().getCoordinate().compareTo(this.dest().getCoordinate()) <= 0) return this; else return this.sym();\n\t},\n\tdPrev: function () {\n\t\treturn this.invRot().oNext().invRot();\n\t},\n\tsetNext: function (next) {\n\t\tthis._next = next;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdge;\n\t}\n});\nQuadEdge.makeEdge = function (o, d) {\n\tvar q0 = new QuadEdge();\n\tvar q1 = new QuadEdge();\n\tvar q2 = new QuadEdge();\n\tvar q3 = new QuadEdge();\n\tq0._rot = q1;\n\tq1._rot = q2;\n\tq2._rot = q3;\n\tq3._rot = q0;\n\tq0.setNext(q0);\n\tq1.setNext(q3);\n\tq2.setNext(q2);\n\tq3.setNext(q1);\n\tvar base = q0;\n\tbase.setOrig(o);\n\tbase.setDest(d);\n\treturn base;\n};\nQuadEdge.swap = function (e) {\n\tvar a = e.oPrev();\n\tvar b = e.sym().oPrev();\n\tQuadEdge.splice(e, a);\n\tQuadEdge.splice(e.sym(), b);\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b.lNext());\n\te.setOrig(a.dest());\n\te.setDest(b.dest());\n};\nQuadEdge.splice = function (a, b) {\n\tvar alpha = a.oNext().rot();\n\tvar beta = b.oNext().rot();\n\tvar t1 = b.oNext();\n\tvar t2 = a.oNext();\n\tvar t3 = beta.oNext();\n\tvar t4 = alpha.oNext();\n\ta.setNext(t1);\n\tb.setNext(t2);\n\talpha.setNext(t3);\n\tbeta.setNext(t4);\n};\nQuadEdge.connect = function (a, b) {\n\tvar e = QuadEdge.makeEdge(a.dest(), b.orig());\n\tQuadEdge.splice(e, a.lNext());\n\tQuadEdge.splice(e.sym(), b);\n\treturn e;\n};\n","import QuadEdge from './quadedge/QuadEdge';\nimport extend from '../../../../extend';\nexport default function IncrementalDelaunayTriangulator() {\n\tthis._subdiv = null;\n\tthis._isUsingTolerance = false;\n\tlet subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis._isUsingTolerance = subdiv.getTolerance() > 0.0;\n}\nextend(IncrementalDelaunayTriangulator.prototype, {\n\tinsertSite: function (v) {\n\t\tvar e = this._subdiv.locate(v);\n\t\tif (this._subdiv.isVertexOfEdge(e, v)) {\n\t\t\treturn e;\n\t\t} else if (this._subdiv.isOnEdge(e, v.getCoordinate())) {\n\t\t\te = e.oPrev();\n\t\t\tthis._subdiv.delete(e.oNext());\n\t\t}\n\t\tvar base = this._subdiv.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this._subdiv.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\tdo {\n\t\t\tvar t = e.oPrev();\n\t\t\tif (t.dest().rightOf(e) && v.isInCircle(e.orig(), t.dest(), e.dest())) {\n\t\t\t\tQuadEdge.swap(e);\n\t\t\t\te = e.oPrev();\n\t\t\t} else if (e.oNext() === startEdge) {\n\t\t\t\treturn base;\n\t\t\t} else {\n\t\t\t\te = e.oNext().lPrev();\n\t\t\t}\n\t\t} while (true);\n\t},\n\tinsertSites: function (vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn IncrementalDelaunayTriangulator;\n\t}\n});\n","import extend from '../../../../../extend';\nexport default function QuadEdgeLocator() {}\nextend(QuadEdgeLocator.prototype, {\n\tlocate: function (v) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdgeLocator;\n\t}\n});\n","import extend from '../../../../../extend';\nimport QuadEdgeLocator from './QuadEdgeLocator';\nexport default function LastFoundQuadEdgeLocator() {\n\tthis._subdiv = null;\n\tthis._lastEdge = null;\n\tlet subdiv = arguments[0];\n\tthis._subdiv = subdiv;\n\tthis.init();\n}\nextend(LastFoundQuadEdgeLocator.prototype, {\n\tinit: function () {\n\t\tthis._lastEdge = this.findEdge();\n\t},\n\tlocate: function (v) {\n\t\tif (!this._lastEdge.isLive()) {\n\t\t\tthis.init();\n\t\t}\n\t\tvar e = this._subdiv.locateFromEdge(v, this._lastEdge);\n\t\tthis._lastEdge = e;\n\t\treturn e;\n\t},\n\tfindEdge: function () {\n\t\tvar edges = this._subdiv.getEdges();\n\t\treturn edges.iterator().next();\n\t},\n\tinterfaces_: function () {\n\t\treturn [QuadEdgeLocator];\n\t},\n\tgetClass: function () {\n\t\treturn LastFoundQuadEdgeLocator;\n\t}\n});\n","import extend from '../../../../../extend';\nimport LineSegment from '../../geom/LineSegment';\nimport RuntimeException from '../../../../../java/lang/RuntimeException';\nimport inherits from '../../../../../inherits';\nexport default function LocateFailureException() {\n\tthis._seg = null;\n\tif (arguments.length === 1) {\n\t\tif (typeof arguments[0] === \"string\") {\n\t\t\tlet msg = arguments[0];\n\t\t\tRuntimeException.call(this, msg);\n\t\t} else if (arguments[0] instanceof LineSegment) {\n\t\t\tlet seg = arguments[0];\n\t\t\tRuntimeException.call(this, \"Locate failed to converge (at edge: \" + seg + \").  Possible causes include invalid Subdivision topology or very close sites\");\n\t\t\tthis._seg = new LineSegment(seg);\n\t\t}\n\t} else if (arguments.length === 2) {\n\t\tlet msg = arguments[0], seg = arguments[1];\n\t\tRuntimeException.call(this, LocateFailureException.msgWithSpatial(msg, seg));\n\t\tthis._seg = new LineSegment(seg);\n\t}\n}\ninherits(LocateFailureException, RuntimeException);\nextend(LocateFailureException.prototype, {\n\tgetSegment: function () {\n\t\treturn this._seg;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocateFailureException;\n\t}\n});\nLocateFailureException.msgWithSpatial = function (msg, seg) {\n\tif (seg !== null) return msg + \" [ \" + seg + \" ]\";\n\treturn msg;\n};\n","import extend from '../../../../../extend';\nexport default function TriangleVisitor() {}\nextend(TriangleVisitor.prototype, {\n\tvisit: function (triEdges) {},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleVisitor;\n\t}\n});\n","import QuadEdge from './QuadEdge';\nimport CoordinateList from '../../geom/CoordinateList';\nimport HashSet from '../../../../../java/util/HashSet';\nimport WKTWriter from '../../io/WKTWriter';\nimport GeometryFactory from '../../geom/GeometryFactory';\nimport Coordinate from '../../geom/Coordinate';\nimport IllegalArgumentException from '../../../../../java/lang/IllegalArgumentException';\nimport Stack from '../../../../../java/util/Stack';\nimport extend from '../../../../../extend';\nimport LastFoundQuadEdgeLocator from './LastFoundQuadEdgeLocator';\nimport LocateFailureException from './LocateFailureException';\nimport Vertex from './Vertex';\nimport System from '../../../../../java/lang/System';\nimport LineSegment from '../../geom/LineSegment';\nimport ArrayList from '../../../../../java/util/ArrayList';\nimport Envelope from '../../geom/Envelope';\nimport Triangle from '../../geom/Triangle';\nimport TriangleVisitor from './TriangleVisitor';\nexport default function QuadEdgeSubdivision() {\n\tthis._visitedKey = 0;\n\tthis._quadEdges = new ArrayList();\n\tthis._startingEdge = null;\n\tthis._tolerance = null;\n\tthis._edgeCoincidenceTolerance = null;\n\tthis._frameVertex = new Array(3).fill(null);\n\tthis._frameEnv = null;\n\tthis._locator = null;\n\tthis._seg = new LineSegment();\n\tthis._triEdges = new Array(3).fill(null);\n\tlet env = arguments[0], tolerance = arguments[1];\n\tthis._tolerance = tolerance;\n\tthis._edgeCoincidenceTolerance = tolerance / QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;\n\tthis.createFrame(env);\n\tthis._startingEdge = this.initSubdiv();\n\tthis._locator = new LastFoundQuadEdgeLocator(this);\n}\nextend(QuadEdgeSubdivision.prototype, {\n\tgetTriangleVertices: function (includeFrame) {\n\t\tvar visitor = new TriangleVertexListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleVertices();\n\t},\n\tisFrameVertex: function (v) {\n\t\tif (v.equals(this._frameVertex[0])) return true;\n\t\tif (v.equals(this._frameVertex[1])) return true;\n\t\tif (v.equals(this._frameVertex[2])) return true;\n\t\treturn false;\n\t},\n\tisVertexOfEdge: function (e, v) {\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t},\n\tconnect: function (a, b) {\n\t\tvar q = QuadEdge.connect(a, b);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t},\n\tgetVoronoiCellPolygon: function (qe, geomFact) {\n\t\tvar cellPts = new ArrayList();\n\t\tvar startQE = qe;\n\t\tdo {\n\t\t\tvar cc = qe.rot().orig().getCoordinate();\n\t\t\tcellPts.add(cc);\n\t\t\tqe = qe.oPrev();\n\t\t} while (qe !== startQE);\n\t\tvar coordList = new CoordinateList();\n\t\tcoordList.addAll(cellPts, false);\n\t\tcoordList.closeRing();\n\t\tif (coordList.size() < 4) {\n\t\t\tSystem.out.println(coordList);\n\t\t\tcoordList.add(coordList.get(coordList.size() - 1), true);\n\t\t}\n\t\tvar pts = coordList.toCoordinateArray();\n\t\tvar cellPoly = geomFact.createPolygon(geomFact.createLinearRing(pts));\n\t\tvar v = startQE.orig();\n\t\tcellPoly.setUserData(v.getCoordinate());\n\t\treturn cellPoly;\n\t},\n\tsetLocator: function (locator) {\n\t\tthis._locator = locator;\n\t},\n\tinitSubdiv: function () {\n\t\tvar ea = this.makeEdge(this._frameVertex[0], this._frameVertex[1]);\n\t\tvar eb = this.makeEdge(this._frameVertex[1], this._frameVertex[2]);\n\t\tQuadEdge.splice(ea.sym(), eb);\n\t\tvar ec = this.makeEdge(this._frameVertex[2], this._frameVertex[0]);\n\t\tQuadEdge.splice(eb.sym(), ec);\n\t\tQuadEdge.splice(ec.sym(), ea);\n\t\treturn ea;\n\t},\n\tisFrameBorderEdge: function (e) {\n\t\tvar leftTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e, leftTri);\n\t\tvar rightTri = new Array(3).fill(null);\n\t\tQuadEdgeSubdivision.getTriangleEdges(e.sym(), rightTri);\n\t\tvar vLeftTriOther = e.lNext().dest();\n\t\tif (this.isFrameVertex(vLeftTriOther)) return true;\n\t\tvar vRightTriOther = e.sym().lNext().dest();\n\t\tif (this.isFrameVertex(vRightTriOther)) return true;\n\t\treturn false;\n\t},\n\tmakeEdge: function (o, d) {\n\t\tvar q = QuadEdge.makeEdge(o, d);\n\t\tthis._quadEdges.add(q);\n\t\treturn q;\n\t},\n\tvisitTriangles: function (triVisitor, includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar triEdges = this.fetchTriangleToVisit(edge, edgeStack, includeFrame, visitedEdges);\n\t\t\t\tif (triEdges !== null) triVisitor.visit(triEdges);\n\t\t\t}\n\t\t}\n\t},\n\tisFrameEdge: function (e) {\n\t\tif (this.isFrameVertex(e.orig()) || this.isFrameVertex(e.dest())) return true;\n\t\treturn false;\n\t},\n\tisOnEdge: function (e, p) {\n\t\tthis._seg.setCoordinates(e.orig().getCoordinate(), e.dest().getCoordinate());\n\t\tvar dist = this._seg.distance(p);\n\t\treturn dist < this._edgeCoincidenceTolerance;\n\t},\n\tgetEnvelope: function () {\n\t\treturn new Envelope(this._frameEnv);\n\t},\n\tcreateFrame: function (env) {\n\t\tvar deltaX = env.getWidth();\n\t\tvar deltaY = env.getHeight();\n\t\tvar offset = 0.0;\n\t\tif (deltaX > deltaY) {\n\t\t\toffset = deltaX * 10.0;\n\t\t} else {\n\t\t\toffset = deltaY * 10.0;\n\t\t}\n\t\tthis._frameVertex[0] = new Vertex((env.getMaxX() + env.getMinX()) / 2.0, env.getMaxY() + offset);\n\t\tthis._frameVertex[1] = new Vertex(env.getMinX() - offset, env.getMinY() - offset);\n\t\tthis._frameVertex[2] = new Vertex(env.getMaxX() + offset, env.getMinY() - offset);\n\t\tthis._frameEnv = new Envelope(this._frameVertex[0].getCoordinate(), this._frameVertex[1].getCoordinate());\n\t\tthis._frameEnv.expandToInclude(this._frameVertex[2].getCoordinate());\n\t},\n\tgetTriangleCoordinates: function (includeFrame) {\n\t\tvar visitor = new TriangleCoordinatesVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangles();\n\t},\n\tgetVertices: function (includeFrame) {\n\t\tvar vertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (includeFrame || !this.isFrameVertex(v)) vertices.add(v);\n\t\t\tvar vd = qe.dest();\n\t\t\tif (includeFrame || !this.isFrameVertex(vd)) vertices.add(vd);\n\t\t}\n\t\treturn vertices;\n\t},\n\tfetchTriangleToVisit: function (edge, edgeStack, includeFrame, visitedEdges) {\n\t\tvar curr = edge;\n\t\tvar edgeCount = 0;\n\t\tvar isFrame = false;\n\t\tdo {\n\t\t\tthis._triEdges[edgeCount] = curr;\n\t\t\tif (this.isFrameEdge(curr)) isFrame = true;\n\t\t\tvar sym = curr.sym();\n\t\t\tif (!visitedEdges.contains(sym)) edgeStack.push(sym);\n\t\t\tvisitedEdges.add(curr);\n\t\t\tedgeCount++;\n\t\t\tcurr = curr.lNext();\n\t\t} while (curr !== edge);\n\t\tif (isFrame && !includeFrame) return null;\n\t\treturn this._triEdges;\n\t},\n\tgetEdges: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn this._quadEdges;\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet geomFact = arguments[0];\n\t\t\tvar quadEdges = this.getPrimaryEdges(false);\n\t\t\tvar edges = new Array(quadEdges.size()).fill(null);\n\t\t\tvar i = 0;\n\t\t\tfor (var it = quadEdges.iterator(); it.hasNext(); ) {\n\t\t\t\tvar qe = it.next();\n\t\t\t\tedges[i++] = geomFact.createLineString([qe.orig().getCoordinate(), qe.dest().getCoordinate()]);\n\t\t\t}\n\t\t\treturn geomFact.createMultiLineString(edges);\n\t\t}\n\t},\n\tgetVertexUniqueEdges: function (includeFrame) {\n\t\tvar edges = new ArrayList();\n\t\tvar visitedVertices = new HashSet();\n\t\tfor (var i = this._quadEdges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tvar v = qe.orig();\n\t\t\tif (!visitedVertices.contains(v)) {\n\t\t\t\tvisitedVertices.add(v);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(v)) {\n\t\t\t\t\tedges.add(qe);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar qd = qe.sym();\n\t\t\tvar vd = qd.orig();\n\t\t\tif (!visitedVertices.contains(vd)) {\n\t\t\t\tvisitedVertices.add(vd);\n\t\t\t\tif (includeFrame || !this.isFrameVertex(vd)) {\n\t\t\t\t\tedges.add(qd);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tgetTriangleEdges: function (includeFrame) {\n\t\tvar visitor = new TriangleEdgesListVisitor();\n\t\tthis.visitTriangles(visitor, includeFrame);\n\t\treturn visitor.getTriangleEdges();\n\t},\n\tgetPrimaryEdges: function (includeFrame) {\n\t\tthis._visitedKey++;\n\t\tvar edges = new ArrayList();\n\t\tvar edgeStack = new Stack();\n\t\tedgeStack.push(this._startingEdge);\n\t\tvar visitedEdges = new HashSet();\n\t\twhile (!edgeStack.empty()) {\n\t\t\tvar edge = edgeStack.pop();\n\t\t\tif (!visitedEdges.contains(edge)) {\n\t\t\t\tvar priQE = edge.getPrimary();\n\t\t\t\tif (includeFrame || !this.isFrameEdge(priQE)) edges.add(priQE);\n\t\t\t\tedgeStack.push(edge.oNext());\n\t\t\t\tedgeStack.push(edge.sym().oNext());\n\t\t\t\tvisitedEdges.add(edge);\n\t\t\t\tvisitedEdges.add(edge.sym());\n\t\t\t}\n\t\t}\n\t\treturn edges;\n\t},\n\tdelete: function (e) {\n\t\tQuadEdge.splice(e, e.oPrev());\n\t\tQuadEdge.splice(e.sym(), e.sym().oPrev());\n\t\tvar eSym = e.sym();\n\t\tvar eRot = e.rot();\n\t\tvar eRotSym = e.rot().sym();\n\t\tthis._quadEdges.remove(e);\n\t\tthis._quadEdges.remove(eSym);\n\t\tthis._quadEdges.remove(eRot);\n\t\tthis._quadEdges.remove(eRotSym);\n\t\te.delete();\n\t\teSym.delete();\n\t\teRot.delete();\n\t\teRotSym.delete();\n\t},\n\tlocateFromEdge: function (v, startEdge) {\n\t\tvar iter = 0;\n\t\tvar maxIter = this._quadEdges.size();\n\t\tvar e = startEdge;\n\t\twhile (true) {\n\t\t\titer++;\n\t\t\tif (iter > maxIter) {\n\t\t\t\tthrow new LocateFailureException(e.toLineSegment());\n\t\t\t}\n\t\t\tif (v.equals(e.orig()) || v.equals(e.dest())) {\n\t\t\t\tbreak;\n\t\t\t} else if (v.rightOf(e)) {\n\t\t\t\te = e.sym();\n\t\t\t} else if (!v.rightOf(e.oNext())) {\n\t\t\t\te = e.oNext();\n\t\t\t} else if (!v.rightOf(e.dPrev())) {\n\t\t\t\te = e.dPrev();\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn e;\n\t},\n\tgetTolerance: function () {\n\t\treturn this._tolerance;\n\t},\n\tgetVoronoiCellPolygons: function (geomFact) {\n\t\tthis.visitTriangles(new TriangleCircumcentreVisitor(), true);\n\t\tvar cells = new ArrayList();\n\t\tvar edges = this.getVertexUniqueEdges(false);\n\t\tfor (var i = edges.iterator(); i.hasNext(); ) {\n\t\t\tvar qe = i.next();\n\t\t\tcells.add(this.getVoronoiCellPolygon(qe, geomFact));\n\t\t}\n\t\treturn cells;\n\t},\n\tgetVoronoiDiagram: function (geomFact) {\n\t\tvar vorCells = this.getVoronoiCellPolygons(geomFact);\n\t\treturn geomFact.createGeometryCollection(GeometryFactory.toGeometryArray(vorCells));\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tvar triPtsList = this.getTriangleCoordinates(false);\n\t\tvar tris = new Array(triPtsList.size()).fill(null);\n\t\tvar i = 0;\n\t\tfor (var it = triPtsList.iterator(); it.hasNext(); ) {\n\t\t\tvar triPt = it.next();\n\t\t\ttris[i++] = geomFact.createPolygon(geomFact.createLinearRing(triPt));\n\t\t}\n\t\treturn geomFact.createGeometryCollection(tris);\n\t},\n\tinsertSite: function (v) {\n\t\tvar e = this.locate(v);\n\t\tif (v.equals(e.orig(), this._tolerance) || v.equals(e.dest(), this._tolerance)) {\n\t\t\treturn e;\n\t\t}\n\t\tvar base = this.makeEdge(e.orig(), v);\n\t\tQuadEdge.splice(base, e);\n\t\tvar startEdge = base;\n\t\tdo {\n\t\t\tbase = this.connect(e, base.sym());\n\t\t\te = base.oPrev();\n\t\t} while (e.lNext() !== startEdge);\n\t\treturn startEdge;\n\t},\n\tlocate: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tif (arguments[0] instanceof Vertex) {\n\t\t\t\tlet v = arguments[0];\n\t\t\t\treturn this._locator.locate(v);\n\t\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\t\tlet p = arguments[0];\n\t\t\t\treturn this._locator.locate(new Vertex(p));\n\t\t\t}\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\t\tvar e = this._locator.locate(new Vertex(p0));\n\t\t\tif (e === null) return null;\n\t\t\tvar base = e;\n\t\t\tif (e.dest().getCoordinate().equals2D(p0)) base = e.sym();\n\t\t\tvar locEdge = base;\n\t\t\tdo {\n\t\t\t\tif (locEdge.dest().getCoordinate().equals2D(p1)) return locEdge;\n\t\t\t\tlocEdge = locEdge.oNext();\n\t\t\t} while (locEdge !== base);\n\t\t\treturn null;\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn QuadEdgeSubdivision;\n\t}\n});\nQuadEdgeSubdivision.getTriangleEdges = function (startQE, triEdge) {\n\ttriEdge[0] = startQE;\n\ttriEdge[1] = triEdge[0].lNext();\n\ttriEdge[2] = triEdge[1].lNext();\n\tif (triEdge[2].lNext() !== triEdge[0]) throw new IllegalArgumentException(\"Edges do not form a triangle\");\n};\nfunction TriangleCircumcentreVisitor() {}\nextend(TriangleCircumcentreVisitor.prototype, {\n\tvisit: function (triEdges) {\n\t\tvar a = triEdges[0].orig().getCoordinate();\n\t\tvar b = triEdges[1].orig().getCoordinate();\n\t\tvar c = triEdges[2].orig().getCoordinate();\n\t\tvar cc = Triangle.circumcentre(a, b, c);\n\t\tvar ccVertex = new Vertex(cc);\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\ttriEdges[i].rot().setOrig(ccVertex);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleCircumcentreVisitor;\n\t}\n});\nfunction TriangleEdgesListVisitor() {\n\tthis._triList = new ArrayList();\n}\nextend(TriangleEdgesListVisitor.prototype, {\n\tgetTriangleEdges: function () {\n\t\treturn this._triList;\n\t},\n\tvisit: function (triEdges) {\n\t\tthis._triList.add(triEdges);\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleEdgesListVisitor;\n\t}\n});\nfunction TriangleVertexListVisitor() {\n\tthis._triList = new ArrayList();\n}\nextend(TriangleVertexListVisitor.prototype, {\n\tvisit: function (triEdges) {\n\t\tthis._triList.add([triEdges[0].orig(), triEdges[1].orig(), triEdges[2].orig()]);\n\t},\n\tgetTriangleVertices: function () {\n\t\treturn this._triList;\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleVertexListVisitor;\n\t}\n});\nfunction TriangleCoordinatesVisitor() {\n\tthis._coordList = new CoordinateList();\n\tthis._triCoords = new ArrayList();\n}\nextend(TriangleCoordinatesVisitor.prototype, {\n\tcheckTriangleSize: function (pts) {\n\t\tvar loc = \"\";\n\t\tif (pts.length >= 2) loc = WKTWriter.toLineString(pts[0], pts[1]); else {\n\t\t\tif (pts.length >= 1) loc = WKTWriter.toPoint(pts[0]);\n\t\t}\n\t},\n\tvisit: function (triEdges) {\n\t\tthis._coordList.clear();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\tvar v = triEdges[i].orig();\n\t\t\tthis._coordList.add(v.getCoordinate());\n\t\t}\n\t\tif (this._coordList.size() > 0) {\n\t\t\tthis._coordList.closeRing();\n\t\t\tvar pts = this._coordList.toCoordinateArray();\n\t\t\tif (pts.length !== 4) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tthis._triCoords.add(pts);\n\t\t}\n\t},\n\tgetTriangles: function () {\n\t\treturn this._triCoords;\n\t},\n\tinterfaces_: function () {\n\t\treturn [TriangleVisitor];\n\t},\n\tgetClass: function () {\n\t\treturn TriangleCoordinatesVisitor;\n\t}\n});\nQuadEdgeSubdivision.TriangleCircumcentreVisitor = TriangleCircumcentreVisitor;\nQuadEdgeSubdivision.TriangleEdgesListVisitor = TriangleEdgesListVisitor;\nQuadEdgeSubdivision.TriangleVertexListVisitor = TriangleVertexListVisitor;\nQuadEdgeSubdivision.TriangleCoordinatesVisitor = TriangleCoordinatesVisitor;\nQuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR = 1000;\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nexport default function Segment() {\n\tthis._ls = null;\n\tthis._data = null;\n\tif (arguments.length === 2) {\n\t\tlet p0 = arguments[0], p1 = arguments[1];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t} else if (arguments.length === 3) {\n\t\tlet p0 = arguments[0], p1 = arguments[1], data = arguments[2];\n\t\tthis._ls = new LineSegment(p0, p1);\n\t\tthis._data = data;\n\t} else if (arguments.length === 6) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2));\n\t} else if (arguments.length === 7) {\n\t\tlet x1 = arguments[0], y1 = arguments[1], z1 = arguments[2], x2 = arguments[3], y2 = arguments[4], z2 = arguments[5], data = arguments[6];\n\t\tSegment.call(this, new Coordinate(x1, y1, z1), new Coordinate(x2, y2, z2), data);\n\t}\n}\nextend(Segment.prototype, {\n\tgetLineSegment: function () {\n\t\treturn this._ls;\n\t},\n\tgetEndZ: function () {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.z;\n\t},\n\tgetStartZ: function () {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.z;\n\t},\n\tintersection: function (s) {\n\t\treturn this._ls.intersection(s.getLineSegment());\n\t},\n\tgetStart: function () {\n\t\treturn this._ls.getCoordinate(0);\n\t},\n\tgetEnd: function () {\n\t\treturn this._ls.getCoordinate(1);\n\t},\n\tgetEndY: function () {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.y;\n\t},\n\tgetStartX: function () {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.x;\n\t},\n\tequalsTopo: function (s) {\n\t\treturn this._ls.equalsTopo(s.getLineSegment());\n\t},\n\tgetStartY: function () {\n\t\tvar p = this._ls.getCoordinate(0);\n\t\treturn p.y;\n\t},\n\tsetData: function (data) {\n\t\tthis._data = data;\n\t},\n\tgetData: function () {\n\t\treturn this._data;\n\t},\n\tgetEndX: function () {\n\t\tvar p = this._ls.getCoordinate(1);\n\t\treturn p.x;\n\t},\n\ttoString: function () {\n\t\treturn this._ls.toString();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn Segment;\n\t}\n});\n","import GeometryFactory from '../geom/GeometryFactory';\nimport NonEncroachingSplitPointFinder from './NonEncroachingSplitPointFinder';\nimport ConstraintVertex from './ConstraintVertex';\nimport Coordinate from '../geom/Coordinate';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LastFoundQuadEdgeLocator from './quadedge/LastFoundQuadEdgeLocator';\nimport Segment from './Segment';\nimport ConvexHull from '../algorithm/ConvexHull';\nimport KdTree from '../index/kdtree/KdTree';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default function ConformingDelaunayTriangulator() {\n\tthis._initialVertices = null;\n\tthis._segVertices = null;\n\tthis._segments = new ArrayList();\n\tthis._subdiv = null;\n\tthis._incDel = null;\n\tthis._convexHull = null;\n\tthis._splitFinder = new NonEncroachingSplitPointFinder();\n\tthis._kdt = null;\n\tthis._vertexFactory = null;\n\tthis._computeAreaEnv = null;\n\tthis._splitPt = null;\n\tthis._tolerance = null;\n\tlet initialVertices = arguments[0], tolerance = arguments[1];\n\tthis._initialVertices = new ArrayList(initialVertices);\n\tthis._tolerance = tolerance;\n\tthis._kdt = new KdTree(tolerance);\n}\nextend(ConformingDelaunayTriangulator.prototype, {\n\tgetInitialVertices: function () {\n\t\treturn this._initialVertices;\n\t},\n\tgetKDT: function () {\n\t\treturn this._kdt;\n\t},\n\tenforceConstraints: function () {\n\t\tthis.addConstraintVertices();\n\t\tvar count = 0;\n\t\tvar splits = 0;\n\t\tdo {\n\t\t\tsplits = this.enforceGabriel(this._segments);\n\t\t\tcount++;\n\t\t} while (splits > 0 && count < ConformingDelaunayTriangulator.MAX_SPLIT_ITER);\n\t},\n\tinsertSites: function (vertices) {\n\t\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tthis.insertSite(v);\n\t\t}\n\t},\n\tgetVertexFactory: function () {\n\t\treturn this._vertexFactory;\n\t},\n\tgetPointArray: function () {\n\t\tvar pts = new Array(this._initialVertices.size() + this._segVertices.size()).fill(null);\n\t\tvar index = 0;\n\t\tfor (var i = this._initialVertices.iterator(); i.hasNext(); ) {\n\t\t\tvar v = i.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\tfor (var i2 = this._segVertices.iterator(); i2.hasNext(); ) {\n\t\t\tvar v = i2.next();\n\t\t\tpts[index++] = v.getCoordinate();\n\t\t}\n\t\treturn pts;\n\t},\n\tsetConstraints: function (segments, segVertices) {\n\t\tthis._segments = segments;\n\t\tthis._segVertices = segVertices;\n\t},\n\tcomputeConvexHull: function () {\n\t\tvar fact = new GeometryFactory();\n\t\tvar coords = this.getPointArray();\n\t\tvar hull = new ConvexHull(coords, fact);\n\t\tthis._convexHull = hull.getConvexHull();\n\t},\n\taddConstraintVertices: function () {\n\t\tthis.computeConvexHull();\n\t\tthis.insertSites(this._segVertices);\n\t},\n\tfindNonGabrielPoint: function (seg) {\n\t\tvar p = seg.getStart();\n\t\tvar q = seg.getEnd();\n\t\tvar midPt = new Coordinate((p.x + q.x) / 2.0, (p.y + q.y) / 2.0);\n\t\tvar segRadius = p.distance(midPt);\n\t\tvar env = new Envelope(midPt);\n\t\tenv.expandBy(segRadius);\n\t\tvar result = this._kdt.query(env);\n\t\tvar closestNonGabriel = null;\n\t\tvar minDist = Double.MAX_VALUE;\n\t\tfor (var i = result.iterator(); i.hasNext(); ) {\n\t\t\tvar nextNode = i.next();\n\t\t\tvar testPt = nextNode.getCoordinate();\n\t\t\tif (testPt.equals2D(p) || testPt.equals2D(q)) continue;\n\t\t\tvar testRadius = midPt.distance(testPt);\n\t\t\tif (testRadius < segRadius) {\n\t\t\t\tvar testDist = testRadius;\n\t\t\t\tif (closestNonGabriel === null || testDist < minDist) {\n\t\t\t\t\tclosestNonGabriel = testPt;\n\t\t\t\t\tminDist = testDist;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn closestNonGabriel;\n\t},\n\tgetConstraintSegments: function () {\n\t\treturn this._segments;\n\t},\n\tsetSplitPointFinder: function (splitFinder) {\n\t\tthis._splitFinder = splitFinder;\n\t},\n\tgetConvexHull: function () {\n\t\treturn this._convexHull;\n\t},\n\tgetTolerance: function () {\n\t\treturn this._tolerance;\n\t},\n\tenforceGabriel: function (segsToInsert) {\n\t\tvar newSegments = new ArrayList();\n\t\tvar splits = 0;\n\t\tvar segsToRemove = new ArrayList();\n\t\tfor (var i = segsToInsert.iterator(); i.hasNext(); ) {\n\t\t\tvar seg = i.next();\n\t\t\tvar encroachPt = this.findNonGabrielPoint(seg);\n\t\t\tif (encroachPt === null) continue;\n\t\t\tthis._splitPt = this._splitFinder.findSplitPoint(seg, encroachPt);\n\t\t\tvar splitVertex = this.createVertex(this._splitPt, seg);\n\t\t\tvar insertedVertex = this.insertSite(splitVertex);\n\t\t\tif (!insertedVertex.getCoordinate().equals2D(this._splitPt)) {}\n\t\t\tvar s1 = new Segment(seg.getStartX(), seg.getStartY(), seg.getStartZ(), splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getData());\n\t\t\tvar s2 = new Segment(splitVertex.getX(), splitVertex.getY(), splitVertex.getZ(), seg.getEndX(), seg.getEndY(), seg.getEndZ(), seg.getData());\n\t\t\tnewSegments.add(s1);\n\t\t\tnewSegments.add(s2);\n\t\t\tsegsToRemove.add(seg);\n\t\t\tsplits = splits + 1;\n\t\t}\n\t\tsegsToInsert.removeAll(segsToRemove);\n\t\tsegsToInsert.addAll(newSegments);\n\t\treturn splits;\n\t},\n\tcreateVertex: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet p = arguments[0];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, null); else v = new ConstraintVertex(p);\n\t\t\treturn v;\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet p = arguments[0], seg = arguments[1];\n\t\t\tvar v = null;\n\t\t\tif (this._vertexFactory !== null) v = this._vertexFactory.createVertex(p, seg); else v = new ConstraintVertex(p);\n\t\t\tv.setOnConstraint(true);\n\t\t\treturn v;\n\t\t}\n\t},\n\tgetSubdivision: function () {\n\t\treturn this._subdiv;\n\t},\n\tcomputeBoundingBox: function () {\n\t\tvar vertexEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._initialVertices);\n\t\tvar segEnv = ConformingDelaunayTriangulator.computeVertexEnvelope(this._segVertices);\n\t\tvar allPointsEnv = new Envelope(vertexEnv);\n\t\tallPointsEnv.expandToInclude(segEnv);\n\t\tvar deltaX = allPointsEnv.getWidth() * 0.2;\n\t\tvar deltaY = allPointsEnv.getHeight() * 0.2;\n\t\tvar delta = Math.max(deltaX, deltaY);\n\t\tthis._computeAreaEnv = new Envelope(allPointsEnv);\n\t\tthis._computeAreaEnv.expandBy(delta);\n\t},\n\tsetVertexFactory: function (vertexFactory) {\n\t\tthis._vertexFactory = vertexFactory;\n\t},\n\tformInitialDelaunay: function () {\n\t\tthis.computeBoundingBox();\n\t\tthis._subdiv = new QuadEdgeSubdivision(this._computeAreaEnv, this._tolerance);\n\t\tthis._subdiv.setLocator(new LastFoundQuadEdgeLocator(this._subdiv));\n\t\tthis._incDel = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\tthis.insertSites(this._initialVertices);\n\t},\n\tinsertSite: function () {\n\t\tif (arguments[0] instanceof ConstraintVertex) {\n\t\t\tlet v = arguments[0];\n\t\t\tvar kdnode = this._kdt.insert(v.getCoordinate(), v);\n\t\t\tif (!kdnode.isRepeated()) {\n\t\t\t\tthis._incDel.insertSite(v);\n\t\t\t} else {\n\t\t\t\tvar snappedV = kdnode.getData();\n\t\t\t\tsnappedV.merge(v);\n\t\t\t\treturn snappedV;\n\t\t\t}\n\t\t\treturn v;\n\t\t} else if (arguments[0] instanceof Coordinate) {\n\t\t\tlet p = arguments[0];\n\t\t\tthis.insertSite(this.createVertex(p));\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConformingDelaunayTriangulator;\n\t}\n});\nConformingDelaunayTriangulator.computeVertexEnvelope = function (vertices) {\n\tvar env = new Envelope();\n\tfor (var i = vertices.iterator(); i.hasNext(); ) {\n\t\tvar v = i.next();\n\t\tenv.expandToInclude(v.getCoordinate());\n\t}\n\treturn env;\n};\nConformingDelaunayTriangulator.MAX_SPLIT_ITER = 99;\n","import CoordinateList from '../geom/CoordinateList';\nimport Geometry from '../geom/Geometry';\nimport Arrays from '../../../../java/util/Arrays';\nimport hasInterface from '../../../../hasInterface';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport extend from '../../../../extend';\nimport Vertex from './quadedge/Vertex';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport Envelope from '../geom/Envelope';\nexport default function DelaunayTriangulationBuilder() {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n}\nextend(DelaunayTriangulationBuilder.prototype, {\n\tcreate: function () {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetSites: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tgetEdges: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn DelaunayTriangulationBuilder;\n\t}\n});\nDelaunayTriangulationBuilder.extractUniqueCoordinates = function (geom) {\n\tif (geom === null) return new CoordinateList();\n\tvar coords = geom.getCoordinates();\n\treturn DelaunayTriangulationBuilder.unique(coords);\n};\nDelaunayTriangulationBuilder.envelope = function (coords) {\n\tvar env = new Envelope();\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\tvar coord = i.next();\n\t\tenv.expandToInclude(coord);\n\t}\n\treturn env;\n};\nDelaunayTriangulationBuilder.unique = function (coords) {\n\tvar coordsCopy = CoordinateArrays.copyDeep(coords);\n\tArrays.sort(coordsCopy);\n\tvar coordList = new CoordinateList(coordsCopy, false);\n\treturn coordList;\n};\nDelaunayTriangulationBuilder.toVertices = function (coords) {\n\tvar verts = new ArrayList();\n\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\tvar coord = i.next();\n\t\tverts.add(new Vertex(coord));\n\t}\n\treturn verts;\n};\n","import ConformingDelaunayTriangulator from './ConformingDelaunayTriangulator';\nimport ConstraintVertex from './ConstraintVertex';\nimport extend from '../../../../extend';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport Segment from './Segment';\nimport ArrayList from '../../../../java/util/ArrayList';\nimport LinearComponentExtracter from '../geom/util/LinearComponentExtracter';\nimport TreeMap from '../../../../java/util/TreeMap';\nexport default function ConformingDelaunayTriangulationBuilder() {\n\tthis._siteCoords = null;\n\tthis._constraintLines = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._constraintVertexMap = new TreeMap();\n}\nextend(ConformingDelaunayTriangulationBuilder.prototype, {\n\tcreateSiteVertices: function (coords) {\n\t\tvar verts = new ArrayList();\n\t\tfor (var i = coords.iterator(); i.hasNext(); ) {\n\t\t\tvar coord = i.next();\n\t\t\tif (this._constraintVertexMap.containsKey(coord)) continue;\n\t\t\tverts.add(new ConstraintVertex(coord));\n\t\t}\n\t\treturn verts;\n\t},\n\tcreate: function () {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tvar segments = new ArrayList();\n\t\tif (this._constraintLines !== null) {\n\t\t\tsiteEnv.expandToInclude(this._constraintLines.getEnvelopeInternal());\n\t\t\tthis.createVertices(this._constraintLines);\n\t\t\tsegments = ConformingDelaunayTriangulationBuilder.createConstraintSegments(this._constraintLines);\n\t\t}\n\t\tvar sites = this.createSiteVertices(this._siteCoords);\n\t\tvar cdt = new ConformingDelaunayTriangulator(sites, this._tolerance);\n\t\tcdt.setConstraints(segments, new ArrayList(this._constraintVertexMap.values()));\n\t\tcdt.formInitialDelaunay();\n\t\tcdt.enforceConstraints();\n\t\tthis._subdiv = cdt.getSubdivision();\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetConstraints: function (constraintLines) {\n\t\tthis._constraintLines = constraintLines;\n\t},\n\tsetSites: function (geom) {\n\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t},\n\tgetEdges: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getEdges(geomFact);\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tgetTriangles: function (geomFact) {\n\t\tthis.create();\n\t\treturn this._subdiv.getTriangles(geomFact);\n\t},\n\tcreateVertices: function (geom) {\n\t\tvar coords = geom.getCoordinates();\n\t\tfor (var i = 0; i < coords.length; i++) {\n\t\t\tvar v = new ConstraintVertex(coords[i]);\n\t\t\tthis._constraintVertexMap.put(coords[i], v);\n\t\t}\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ConformingDelaunayTriangulationBuilder;\n\t}\n});\nConformingDelaunayTriangulationBuilder.createConstraintSegments = function () {\n\tif (arguments.length === 1) {\n\t\tlet geom = arguments[0];\n\t\tvar lines = LinearComponentExtracter.getLines(geom);\n\t\tvar constraintSegs = new ArrayList();\n\t\tfor (var i = lines.iterator(); i.hasNext(); ) {\n\t\t\tvar line = i.next();\n\t\t\tConformingDelaunayTriangulationBuilder.createConstraintSegments(line, constraintSegs);\n\t\t}\n\t\treturn constraintSegs;\n\t} else if (arguments.length === 2) {\n\t\tlet line = arguments[0], constraintSegs = arguments[1];\n\t\tvar coords = line.getCoordinates();\n\t\tfor (var i = 1; i < coords.length; i++) {\n\t\t\tconstraintSegs.add(new Segment(coords[i - 1], coords[i]));\n\t\t}\n\t}\n};\n","import Geometry from '../geom/Geometry';\nimport hasInterface from '../../../../hasInterface';\nimport GeometryFactory from '../geom/GeometryFactory';\nimport Collection from '../../../../java/util/Collection';\nimport IncrementalDelaunayTriangulator from './IncrementalDelaunayTriangulator';\nimport QuadEdgeSubdivision from './quadedge/QuadEdgeSubdivision';\nimport extend from '../../../../extend';\nimport DelaunayTriangulationBuilder from './DelaunayTriangulationBuilder';\nimport CoordinateArrays from '../geom/CoordinateArrays';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function VoronoiDiagramBuilder() {\n\tthis._siteCoords = null;\n\tthis._tolerance = 0.0;\n\tthis._subdiv = null;\n\tthis._clipEnv = null;\n\tthis._diagramEnv = null;\n}\nextend(VoronoiDiagramBuilder.prototype, {\n\tcreate: function () {\n\t\tif (this._subdiv !== null) return null;\n\t\tvar siteEnv = DelaunayTriangulationBuilder.envelope(this._siteCoords);\n\t\tthis._diagramEnv = siteEnv;\n\t\tvar expandBy = Math.max(this._diagramEnv.getWidth(), this._diagramEnv.getHeight());\n\t\tthis._diagramEnv.expandBy(expandBy);\n\t\tif (this._clipEnv !== null) this._diagramEnv.expandToInclude(this._clipEnv);\n\t\tvar vertices = DelaunayTriangulationBuilder.toVertices(this._siteCoords);\n\t\tthis._subdiv = new QuadEdgeSubdivision(siteEnv, this._tolerance);\n\t\tvar triangulator = new IncrementalDelaunayTriangulator(this._subdiv);\n\t\ttriangulator.insertSites(vertices);\n\t},\n\tgetDiagram: function (geomFact) {\n\t\tthis.create();\n\t\tvar polys = this._subdiv.getVoronoiDiagram(geomFact);\n\t\treturn VoronoiDiagramBuilder.clipGeometryCollection(polys, this._diagramEnv);\n\t},\n\tsetTolerance: function (tolerance) {\n\t\tthis._tolerance = tolerance;\n\t},\n\tsetSites: function () {\n\t\tif (arguments[0] instanceof Geometry) {\n\t\t\tlet geom = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);\n\t\t} else if (hasInterface(arguments[0], Collection)) {\n\t\t\tlet coords = arguments[0];\n\t\t\tthis._siteCoords = DelaunayTriangulationBuilder.unique(CoordinateArrays.toCoordinateArray(coords));\n\t\t}\n\t},\n\tsetClipEnvelope: function (clipEnv) {\n\t\tthis._clipEnv = clipEnv;\n\t},\n\tgetSubdivision: function () {\n\t\tthis.create();\n\t\treturn this._subdiv;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn VoronoiDiagramBuilder;\n\t}\n});\nVoronoiDiagramBuilder.clipGeometryCollection = function (geom, clipEnv) {\n\tvar clipPoly = geom.getFactory().toGeometry(clipEnv);\n\tvar clipped = new ArrayList();\n\tfor (var i = 0; i < geom.getNumGeometries(); i++) {\n\t\tvar g = geom.getGeometryN(i);\n\t\tvar result = null;\n\t\tif (clipEnv.contains(g.getEnvelopeInternal())) result = g; else if (clipEnv.intersects(g.getEnvelopeInternal())) {\n\t\t\tresult = clipPoly.intersection(g);\n\t\t\tresult.setUserData(g.getUserData());\n\t\t}\n\t\tif (result !== null && !result.isEmpty()) {\n\t\t\tclipped.add(result);\n\t\t}\n\t}\n\treturn geom.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(clipped));\n};\n","import Coordinate from '../geom/Coordinate';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport Comparable from '../../../../java/lang/Comparable';\nexport default function LinearLocation() {\n\tthis._componentIndex = 0;\n\tthis._segmentIndex = 0;\n\tthis._segmentFraction = 0.0;\n\tif (arguments.length === 0) {} else if (arguments.length === 1) {\n\t\tlet loc = arguments[0];\n\t\tthis._componentIndex = loc._componentIndex;\n\t\tthis._segmentIndex = loc._segmentIndex;\n\t\tthis._segmentFraction = loc._segmentFraction;\n\t} else if (arguments.length === 2) {\n\t\tlet segmentIndex = arguments[0], segmentFraction = arguments[1];\n\t\tLinearLocation.call(this, 0, segmentIndex, segmentFraction);\n\t} else if (arguments.length === 3) {\n\t\tlet componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tthis.normalize();\n\t} else if (arguments.length === 4) {\n\t\tlet componentIndex = arguments[0], segmentIndex = arguments[1], segmentFraction = arguments[2], doNormalize = arguments[3];\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._segmentIndex = segmentIndex;\n\t\tthis._segmentFraction = segmentFraction;\n\t\tif (doNormalize) this.normalize();\n\t}\n}\nextend(LinearLocation.prototype, {\n\tgetSegmentIndex: function () {\n\t\treturn this._segmentIndex;\n\t},\n\tgetComponentIndex: function () {\n\t\treturn this._componentIndex;\n\t},\n\tisEndpoint: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\treturn this._segmentIndex >= nseg || this._segmentIndex === nseg && this._segmentFraction >= 1.0;\n\t},\n\tisValid: function (linearGeom) {\n\t\tif (this._componentIndex < 0 || this._componentIndex >= linearGeom.getNumGeometries()) return false;\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tif (this._segmentIndex < 0 || this._segmentIndex > lineComp.getNumPoints()) return false;\n\t\tif (this._segmentIndex === lineComp.getNumPoints() && this._segmentFraction !== 0.0) return false;\n\t\tif (this._segmentFraction < 0.0 || this._segmentFraction > 1.0) return false;\n\t\treturn true;\n\t},\n\tnormalize: function () {\n\t\tif (this._segmentFraction < 0.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction > 1.0) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t\tif (this._componentIndex < 0) {\n\t\t\tthis._componentIndex = 0;\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentIndex < 0) {\n\t\t\tthis._segmentIndex = 0;\n\t\t\tthis._segmentFraction = 0.0;\n\t\t}\n\t\tif (this._segmentFraction === 1.0) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t\tthis._segmentIndex += 1;\n\t\t}\n\t},\n\ttoLowest: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar nseg = lineComp.getNumPoints() - 1;\n\t\tif (this._segmentIndex < nseg) return this;\n\t\treturn new LinearLocation(this._componentIndex, nseg, 1.0, false);\n\t},\n\tgetCoordinate: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) return p0;\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn LinearLocation.pointAlongSegmentByFraction(p0, p1, this._segmentFraction);\n\t},\n\tgetSegmentFraction: function () {\n\t\treturn this._segmentFraction;\n\t},\n\tgetSegment: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar p0 = lineComp.getCoordinateN(this._segmentIndex);\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) {\n\t\t\tvar prev = lineComp.getCoordinateN(lineComp.getNumPoints() - 2);\n\t\t\treturn new LineSegment(prev, p0);\n\t\t}\n\t\tvar p1 = lineComp.getCoordinateN(this._segmentIndex + 1);\n\t\treturn new LineSegment(p0, p1);\n\t},\n\tclamp: function (linear) {\n\t\tif (this._componentIndex >= linear.getNumGeometries()) {\n\t\t\tthis.setToEnd(linear);\n\t\t\treturn null;\n\t\t}\n\t\tif (this._segmentIndex >= linear.getNumPoints()) {\n\t\t\tvar line = linear.getGeometryN(this._componentIndex);\n\t\t\tthis._segmentIndex = line.getNumPoints() - 1;\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t},\n\tsetToEnd: function (linear) {\n\t\tthis._componentIndex = linear.getNumGeometries() - 1;\n\t\tvar lastLine = linear.getGeometryN(this._componentIndex);\n\t\tthis._segmentIndex = lastLine.getNumPoints() - 1;\n\t\tthis._segmentFraction = 1.0;\n\t},\n\tcompareTo: function (o) {\n\t\tvar other = o;\n\t\tif (this._componentIndex < other._componentIndex) return -1;\n\t\tif (this._componentIndex > other._componentIndex) return 1;\n\t\tif (this._segmentIndex < other._segmentIndex) return -1;\n\t\tif (this._segmentIndex > other._segmentIndex) return 1;\n\t\tif (this._segmentFraction < other._segmentFraction) return -1;\n\t\tif (this._segmentFraction > other._segmentFraction) return 1;\n\t\treturn 0;\n\t},\n\tcopy: function () {\n\t\treturn new LinearLocation(this._componentIndex, this._segmentIndex, this._segmentFraction);\n\t},\n\ttoString: function () {\n\t\treturn \"LinearLoc[\" + this._componentIndex + \", \" + this._segmentIndex + \", \" + this._segmentFraction + \"]\";\n\t},\n\tisOnSameSegment: function (loc) {\n\t\tif (this._componentIndex !== loc._componentIndex) return false;\n\t\tif (this._segmentIndex === loc._segmentIndex) return true;\n\t\tif (loc._segmentIndex - this._segmentIndex === 1 && loc._segmentFraction === 0.0) return true;\n\t\tif (this._segmentIndex - loc._segmentIndex === 1 && this._segmentFraction === 0.0) return true;\n\t\treturn false;\n\t},\n\tsnapToVertex: function (linearGeom, minDistance) {\n\t\tif (this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0) return null;\n\t\tvar segLen = this.getSegmentLength(linearGeom);\n\t\tvar lenToStart = this._segmentFraction * segLen;\n\t\tvar lenToEnd = segLen - lenToStart;\n\t\tif (lenToStart <= lenToEnd && lenToStart < minDistance) {\n\t\t\tthis._segmentFraction = 0.0;\n\t\t} else if (lenToEnd <= lenToStart && lenToEnd < minDistance) {\n\t\t\tthis._segmentFraction = 1.0;\n\t\t}\n\t},\n\tcompareLocationValues: function (componentIndex1, segmentIndex1, segmentFraction1) {\n\t\tif (this._componentIndex < componentIndex1) return -1;\n\t\tif (this._componentIndex > componentIndex1) return 1;\n\t\tif (this._segmentIndex < segmentIndex1) return -1;\n\t\tif (this._segmentIndex > segmentIndex1) return 1;\n\t\tif (this._segmentFraction < segmentFraction1) return -1;\n\t\tif (this._segmentFraction > segmentFraction1) return 1;\n\t\treturn 0;\n\t},\n\tgetSegmentLength: function (linearGeom) {\n\t\tvar lineComp = linearGeom.getGeometryN(this._componentIndex);\n\t\tvar segIndex = this._segmentIndex;\n\t\tif (this._segmentIndex >= lineComp.getNumPoints() - 1) segIndex = lineComp.getNumPoints() - 2;\n\t\tvar p0 = lineComp.getCoordinateN(segIndex);\n\t\tvar p1 = lineComp.getCoordinateN(segIndex + 1);\n\t\treturn p0.distance(p1);\n\t},\n\tisVertex: function () {\n\t\treturn this._segmentFraction <= 0.0 || this._segmentFraction >= 1.0;\n\t},\n\tinterfaces_: function () {\n\t\treturn [Comparable];\n\t},\n\tgetClass: function () {\n\t\treturn LinearLocation;\n\t}\n});\nLinearLocation.getEndLocation = function (linear) {\n\tvar loc = new LinearLocation();\n\tloc.setToEnd(linear);\n\treturn loc;\n};\nLinearLocation.pointAlongSegmentByFraction = function (p0, p1, frac) {\n\tif (frac <= 0.0) return p0;\n\tif (frac >= 1.0) return p1;\n\tvar x = (p1.x - p0.x) * frac + p0.x;\n\tvar y = (p1.y - p0.y) * frac + p0.y;\n\tvar z = (p1.z - p0.z) * frac + p0.z;\n\treturn new Coordinate(x, y, z);\n};\nLinearLocation.compareLocationValues = function (componentIndex0, segmentIndex0, segmentFraction0, componentIndex1, segmentIndex1, segmentFraction1) {\n\tif (componentIndex0 < componentIndex1) return -1;\n\tif (componentIndex0 > componentIndex1) return 1;\n\tif (segmentIndex0 < segmentIndex1) return -1;\n\tif (segmentIndex0 > segmentIndex1) return 1;\n\tif (segmentFraction0 < segmentFraction1) return -1;\n\tif (segmentFraction0 > segmentFraction1) return 1;\n\treturn 0;\n};\n","import hasInterface from '../../../../hasInterface';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport Lineal from '../geom/Lineal';\nexport default function LinearIterator() {\n\tthis._linearGeom = null;\n\tthis._numLines = null;\n\tthis._currentLine = null;\n\tthis._componentIndex = 0;\n\tthis._vertexIndex = 0;\n\tif (arguments.length === 1) {\n\t\tlet linear = arguments[0];\n\t\tLinearIterator.call(this, linear, 0, 0);\n\t} else if (arguments.length === 2) {\n\t\tlet linear = arguments[0], start = arguments[1];\n\t\tLinearIterator.call(this, linear, start.getComponentIndex(), LinearIterator.segmentEndVertexIndex(start));\n\t} else if (arguments.length === 3) {\n\t\tlet linearGeom = arguments[0], componentIndex = arguments[1], vertexIndex = arguments[2];\n\t\tif (!hasInterface(linearGeom, Lineal)) throw new IllegalArgumentException(\"Lineal geometry is required\");\n\t\tthis._linearGeom = linearGeom;\n\t\tthis._numLines = linearGeom.getNumGeometries();\n\t\tthis._componentIndex = componentIndex;\n\t\tthis._vertexIndex = vertexIndex;\n\t\tthis.loadCurrentLine();\n\t}\n}\nextend(LinearIterator.prototype, {\n\tgetComponentIndex: function () {\n\t\treturn this._componentIndex;\n\t},\n\tgetLine: function () {\n\t\treturn this._currentLine;\n\t},\n\tgetVertexIndex: function () {\n\t\treturn this._vertexIndex;\n\t},\n\tgetSegmentEnd: function () {\n\t\tif (this._vertexIndex < this.getLine().getNumPoints() - 1) return this._currentLine.getCoordinateN(this._vertexIndex + 1);\n\t\treturn null;\n\t},\n\tnext: function () {\n\t\tif (!this.hasNext()) return null;\n\t\tthis._vertexIndex++;\n\t\tif (this._vertexIndex >= this._currentLine.getNumPoints()) {\n\t\t\tthis._componentIndex++;\n\t\t\tthis.loadCurrentLine();\n\t\t\tthis._vertexIndex = 0;\n\t\t}\n\t},\n\tloadCurrentLine: function () {\n\t\tif (this._componentIndex >= this._numLines) {\n\t\t\tthis._currentLine = null;\n\t\t\treturn null;\n\t\t}\n\t\tthis._currentLine = this._linearGeom.getGeometryN(this._componentIndex);\n\t},\n\tgetSegmentStart: function () {\n\t\treturn this._currentLine.getCoordinateN(this._vertexIndex);\n\t},\n\tisEndOfLine: function () {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._vertexIndex < this._currentLine.getNumPoints() - 1) return false;\n\t\treturn true;\n\t},\n\thasNext: function () {\n\t\tif (this._componentIndex >= this._numLines) return false;\n\t\tif (this._componentIndex === this._numLines - 1 && this._vertexIndex >= this._currentLine.getNumPoints()) return false;\n\t\treturn true;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearIterator;\n\t}\n});\nLinearIterator.segmentEndVertexIndex = function (loc) {\n\tif (loc.getSegmentFraction() > 0.0) return loc.getSegmentIndex() + 1;\n\treturn loc.getSegmentIndex();\n};\n","import LinearIterator from './LinearIterator';\nimport LinearLocation from './LinearLocation';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport Assert from '../util/Assert';\nexport default function LocationIndexOfPoint() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LocationIndexOfPoint.prototype, {\n\tindexOf: function (inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, null);\n\t},\n\tindexOfFromStart: function (inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar minComponentIndex = 0;\n\t\tvar minSegmentIndex = 0;\n\t\tvar minFrac = -1.0;\n\t\tvar seg = new LineSegment();\n\t\tfor (var it = new LinearIterator(this._linearGeom); it.hasNext(); it.next()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segFrac = seg.segmentFraction(inputPt);\n\t\t\t\tvar candidateComponentIndex = it.getComponentIndex();\n\t\t\t\tvar candidateSegmentIndex = it.getVertexIndex();\n\t\t\t\tif (segDistance < minDistance) {\n\t\t\t\t\tif (minIndex === null || minIndex.compareLocationValues(candidateComponentIndex, candidateSegmentIndex, segFrac) < 0) {\n\t\t\t\t\t\tminComponentIndex = candidateComponentIndex;\n\t\t\t\t\t\tminSegmentIndex = candidateSegmentIndex;\n\t\t\t\t\t\tminFrac = segFrac;\n\t\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (minDistance === Double.MAX_VALUE) {\n\t\t\treturn new LinearLocation(minIndex);\n\t\t}\n\t\tvar loc = new LinearLocation(minComponentIndex, minSegmentIndex, minFrac);\n\t\treturn loc;\n\t},\n\tindexOfAfter: function (inputPt, minIndex) {\n\t\tif (minIndex === null) return this.indexOf(inputPt);\n\t\tvar endLoc = LinearLocation.getEndLocation(this._linearGeom);\n\t\tif (endLoc.compareTo(minIndex) <= 0) return endLoc;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter.compareTo(minIndex) >= 0, \"computed location is before specified minimum location\");\n\t\treturn closestAfter;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocationIndexOfPoint;\n\t}\n});\nLocationIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLocationIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LocationIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n","import extend from '../../../../extend';\nimport LocationIndexOfPoint from './LocationIndexOfPoint';\nexport default function LocationIndexOfLine() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LocationIndexOfLine.prototype, {\n\tindicesOf: function (subLine) {\n\t\tvar startPt = subLine.getGeometryN(0).getCoordinateN(0);\n\t\tvar lastLine = subLine.getGeometryN(subLine.getNumGeometries() - 1);\n\t\tvar endPt = lastLine.getCoordinateN(lastLine.getNumPoints() - 1);\n\t\tvar locPt = new LocationIndexOfPoint(this._linearGeom);\n\t\tvar subLineLoc = new Array(2).fill(null);\n\t\tsubLineLoc[0] = locPt.indexOf(startPt);\n\t\tif (subLine.getLength() === 0.0) {\n\t\t\tsubLineLoc[1] = subLineLoc[0].copy();\n\t\t} else {\n\t\t\tsubLineLoc[1] = locPt.indexOfAfter(endPt, subLineLoc[0]);\n\t\t}\n\t\treturn subLineLoc;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocationIndexOfLine;\n\t}\n});\nLocationIndexOfLine.indicesOf = function (linearGeom, subLine) {\n\tvar locater = new LocationIndexOfLine(linearGeom);\n\treturn locater.indicesOf(subLine);\n};\n","import CoordinateList from '../geom/CoordinateList';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport extend from '../../../../extend';\nimport ArrayList from '../../../../java/util/ArrayList';\nexport default function LinearGeometryBuilder() {\n\tthis._geomFact = null;\n\tthis._lines = new ArrayList();\n\tthis._coordList = null;\n\tthis._ignoreInvalidLines = false;\n\tthis._fixInvalidLines = false;\n\tthis._lastPt = null;\n\tlet geomFact = arguments[0];\n\tthis._geomFact = geomFact;\n}\nextend(LinearGeometryBuilder.prototype, {\n\tgetGeometry: function () {\n\t\tthis.endLine();\n\t\treturn this._geomFact.buildGeometry(this._lines);\n\t},\n\tgetLastCoordinate: function () {\n\t\treturn this._lastPt;\n\t},\n\tendLine: function () {\n\t\tif (this._coordList === null) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this._ignoreInvalidLines && this._coordList.size() < 2) {\n\t\t\tthis._coordList = null;\n\t\t\treturn null;\n\t\t}\n\t\tvar rawPts = this._coordList.toCoordinateArray();\n\t\tvar pts = rawPts;\n\t\tif (this._fixInvalidLines) pts = this.validCoordinateSequence(rawPts);\n\t\tthis._coordList = null;\n\t\tvar line = null;\n\t\ttry {\n\t\t\tline = this._geomFact.createLineString(pts);\n\t\t} catch (ex) {\n\t\t\tif (ex instanceof IllegalArgumentException) {\n\t\t\t\tif (!this._ignoreInvalidLines) throw ex;\n\t\t\t} else throw ex;\n\t\t} finally {}\n\t\tif (line !== null) this._lines.add(line);\n\t},\n\tsetFixInvalidLines: function (fixInvalidLines) {\n\t\tthis._fixInvalidLines = fixInvalidLines;\n\t},\n\tadd: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet pt = arguments[0];\n\t\t\tthis.add(pt, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet pt = arguments[0], allowRepeatedPoints = arguments[1];\n\t\t\tif (this._coordList === null) this._coordList = new CoordinateList();\n\t\t\tthis._coordList.add(pt, allowRepeatedPoints);\n\t\t\tthis._lastPt = pt;\n\t\t}\n\t},\n\tsetIgnoreInvalidLines: function (ignoreInvalidLines) {\n\t\tthis._ignoreInvalidLines = ignoreInvalidLines;\n\t},\n\tvalidCoordinateSequence: function (pts) {\n\t\tif (pts.length >= 2) return pts;\n\t\tvar validPts = [pts[0], pts[0]];\n\t\treturn validPts;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LinearGeometryBuilder;\n\t}\n});\n","import LineString from '../geom/LineString';\nimport CoordinateList from '../geom/CoordinateList';\nimport LinearIterator from './LinearIterator';\nimport extend from '../../../../extend';\nimport Assert from '../util/Assert';\nimport LinearGeometryBuilder from './LinearGeometryBuilder';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function ExtractLineByLocation() {\n\tthis._line = null;\n\tlet line = arguments[0];\n\tthis._line = line;\n}\nextend(ExtractLineByLocation.prototype, {\n\tcomputeLinear: function (start, end) {\n\t\tvar builder = new LinearGeometryBuilder(this._line.getFactory());\n\t\tbuilder.setFixInvalidLines(true);\n\t\tif (!start.isVertex()) builder.add(start.getCoordinate(this._line));\n\t\tfor (var it = new LinearIterator(this._line, start); it.hasNext(); it.next()) {\n\t\t\tif (end.compareLocationValues(it.getComponentIndex(), it.getVertexIndex(), 0.0) < 0) break;\n\t\t\tvar pt = it.getSegmentStart();\n\t\t\tbuilder.add(pt);\n\t\t\tif (it.isEndOfLine()) builder.endLine();\n\t\t}\n\t\tif (!end.isVertex()) builder.add(end.getCoordinate(this._line));\n\t\treturn builder.getGeometry();\n\t},\n\tcomputeLine: function (start, end) {\n\t\tvar coordinates = this._line.getCoordinates();\n\t\tvar newCoordinates = new CoordinateList();\n\t\tvar startSegmentIndex = start.getSegmentIndex();\n\t\tif (start.getSegmentFraction() > 0.0) startSegmentIndex += 1;\n\t\tvar lastSegmentIndex = end.getSegmentIndex();\n\t\tif (end.getSegmentFraction() === 1.0) lastSegmentIndex += 1;\n\t\tif (lastSegmentIndex >= coordinates.length) lastSegmentIndex = coordinates.length - 1;\n\t\tif (!start.isVertex()) newCoordinates.add(start.getCoordinate(this._line));\n\t\tfor (var i = startSegmentIndex; i <= lastSegmentIndex; i++) {\n\t\t\tnewCoordinates.add(coordinates[i]);\n\t\t}\n\t\tif (!end.isVertex()) newCoordinates.add(end.getCoordinate(this._line));\n\t\tif (newCoordinates.size() <= 0) newCoordinates.add(start.getCoordinate(this._line));\n\t\tvar newCoordinateArray = newCoordinates.toCoordinateArray();\n\t\tif (newCoordinateArray.length <= 1) {\n\t\t\tnewCoordinateArray = [newCoordinateArray[0], newCoordinateArray[0]];\n\t\t}\n\t\treturn this._line.getFactory().createLineString(newCoordinateArray);\n\t},\n\textract: function (start, end) {\n\t\tif (end.compareTo(start) < 0) {\n\t\t\treturn this.reverse(this.computeLinear(end, start));\n\t\t}\n\t\treturn this.computeLinear(start, end);\n\t},\n\treverse: function (linear) {\n\t\tif (linear instanceof LineString) return linear.reverse();\n\t\tif (linear instanceof MultiLineString) return linear.reverse();\n\t\tAssert.shouldNeverReachHere(\"non-linear geometry encountered\");\n\t\treturn null;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn ExtractLineByLocation;\n\t}\n});\nExtractLineByLocation.extract = function (line, start, end) {\n\tvar ls = new ExtractLineByLocation(line);\n\treturn ls.extract(start, end);\n};\n","import LineString from '../geom/LineString';\nimport IllegalArgumentException from '../../../../java/lang/IllegalArgumentException';\nimport LinearLocation from './LinearLocation';\nimport extend from '../../../../extend';\nimport LocationIndexOfPoint from './LocationIndexOfPoint';\nimport LocationIndexOfLine from './LocationIndexOfLine';\nimport ExtractLineByLocation from './ExtractLineByLocation';\nimport MultiLineString from '../geom/MultiLineString';\nexport default function LocationIndexedLine() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n\tthis.checkGeometryType();\n}\nextend(LocationIndexedLine.prototype, {\n\tclampIndex: function (index) {\n\t\tvar loc = index.copy();\n\t\tloc.clamp(this._linearGeom);\n\t\treturn loc;\n\t},\n\tproject: function (pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tcheckGeometryType: function () {\n\t\tif (!(this._linearGeom instanceof LineString || this._linearGeom instanceof MultiLineString)) throw new IllegalArgumentException(\"Input geometry must be linear\");\n\t},\n\textractPoint: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\treturn index.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], offsetDistance = arguments[1];\n\t\t\tvar indexLow = index.toLowest(this._linearGeom);\n\t\t\treturn indexLow.getSegment(this._linearGeom).pointAlongOffset(indexLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function (index) {\n\t\treturn index.isValid(this._linearGeom);\n\t},\n\tgetEndIndex: function () {\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t},\n\tgetStartIndex: function () {\n\t\treturn new LinearLocation();\n\t},\n\tindexOfAfter: function (pt, minIndex) {\n\t\treturn LocationIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t},\n\textractLine: function (startIndex, endIndex) {\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startIndex, endIndex);\n\t},\n\tindexOf: function (pt) {\n\t\treturn LocationIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tindicesOf: function (subLine) {\n\t\treturn LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LocationIndexedLine;\n\t}\n});\n","import LinearIterator from './LinearIterator';\nimport Double from '../../../../java/lang/Double';\nimport extend from '../../../../extend';\nimport LineSegment from '../geom/LineSegment';\nimport Assert from '../util/Assert';\nexport default function LengthIndexOfPoint() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthIndexOfPoint.prototype, {\n\tindexOf: function (inputPt) {\n\t\treturn this.indexOfFromStart(inputPt, -1.0);\n\t},\n\tindexOfFromStart: function (inputPt, minIndex) {\n\t\tvar minDistance = Double.MAX_VALUE;\n\t\tvar ptMeasure = minIndex;\n\t\tvar segmentStartMeasure = 0.0;\n\t\tvar seg = new LineSegment();\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tseg.p0 = it.getSegmentStart();\n\t\t\t\tseg.p1 = it.getSegmentEnd();\n\t\t\t\tvar segDistance = seg.distance(inputPt);\n\t\t\t\tvar segMeasureToPt = this.segmentNearestMeasure(seg, inputPt, segmentStartMeasure);\n\t\t\t\tif (segDistance < minDistance && segMeasureToPt > minIndex) {\n\t\t\t\t\tptMeasure = segMeasureToPt;\n\t\t\t\t\tminDistance = segDistance;\n\t\t\t\t}\n\t\t\t\tsegmentStartMeasure += seg.getLength();\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn ptMeasure;\n\t},\n\tindexOfAfter: function (inputPt, minIndex) {\n\t\tif (minIndex < 0.0) return this.indexOf(inputPt);\n\t\tvar endIndex = this._linearGeom.getLength();\n\t\tif (endIndex < minIndex) return endIndex;\n\t\tvar closestAfter = this.indexOfFromStart(inputPt, minIndex);\n\t\tAssert.isTrue(closestAfter >= minIndex, \"computed index is before specified minimum index\");\n\t\treturn closestAfter;\n\t},\n\tsegmentNearestMeasure: function (seg, inputPt, segmentStartMeasure) {\n\t\tvar projFactor = seg.projectionFactor(inputPt);\n\t\tif (projFactor <= 0.0) return segmentStartMeasure;\n\t\tif (projFactor <= 1.0) return segmentStartMeasure + projFactor * seg.getLength();\n\t\treturn segmentStartMeasure + seg.getLength();\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LengthIndexOfPoint;\n\t}\n});\nLengthIndexOfPoint.indexOf = function (linearGeom, inputPt) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOf(inputPt);\n};\nLengthIndexOfPoint.indexOfAfter = function (linearGeom, inputPt, minIndex) {\n\tvar locater = new LengthIndexOfPoint(linearGeom);\n\treturn locater.indexOfAfter(inputPt, minIndex);\n};\n","import LinearIterator from './LinearIterator';\nimport LinearLocation from './LinearLocation';\nimport extend from '../../../../extend';\nexport default function LengthLocationMap() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthLocationMap.prototype, {\n\tgetLength: function (loc) {\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (!it.isEndOfLine()) {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (loc.getComponentIndex() === it.getComponentIndex() && loc.getSegmentIndex() === it.getVertexIndex()) {\n\t\t\t\t\treturn totalLength + segLen * loc.getSegmentFraction();\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn totalLength;\n\t},\n\tresolveHigher: function (loc) {\n\t\tif (!loc.isEndpoint(this._linearGeom)) return loc;\n\t\tvar compIndex = loc.getComponentIndex();\n\t\tif (compIndex >= this._linearGeom.getNumGeometries() - 1) return loc;\n\t\tdo {\n\t\t\tcompIndex++;\n\t\t} while (compIndex < this._linearGeom.getNumGeometries() - 1 && this._linearGeom.getGeometryN(compIndex).getLength() === 0);\n\t\treturn new LinearLocation(compIndex, 0, 0.0);\n\t},\n\tgetLocation: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet length = arguments[0];\n\t\t\treturn this.getLocation(length, true);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet length = arguments[0], resolveLower = arguments[1];\n\t\t\tvar forwardLength = length;\n\t\t\tif (length < 0.0) {\n\t\t\t\tvar lineLen = this._linearGeom.getLength();\n\t\t\t\tforwardLength = lineLen + length;\n\t\t\t}\n\t\t\tvar loc = this.getLocationForward(forwardLength);\n\t\t\tif (resolveLower) {\n\t\t\t\treturn loc;\n\t\t\t}\n\t\t\treturn this.resolveHigher(loc);\n\t\t}\n\t},\n\tgetLocationForward: function (length) {\n\t\tif (length <= 0.0) return new LinearLocation();\n\t\tvar totalLength = 0.0;\n\t\tvar it = new LinearIterator(this._linearGeom);\n\t\twhile (it.hasNext()) {\n\t\t\tif (it.isEndOfLine()) {\n\t\t\t\tif (totalLength === length) {\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, 0.0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar p0 = it.getSegmentStart();\n\t\t\t\tvar p1 = it.getSegmentEnd();\n\t\t\t\tvar segLen = p1.distance(p0);\n\t\t\t\tif (totalLength + segLen > length) {\n\t\t\t\t\tvar frac = (length - totalLength) / segLen;\n\t\t\t\t\tvar compIndex = it.getComponentIndex();\n\t\t\t\t\tvar segIndex = it.getVertexIndex();\n\t\t\t\t\treturn new LinearLocation(compIndex, segIndex, frac);\n\t\t\t\t}\n\t\t\t\ttotalLength += segLen;\n\t\t\t}\n\t\t\tit.next();\n\t\t}\n\t\treturn LinearLocation.getEndLocation(this._linearGeom);\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LengthLocationMap;\n\t}\n});\nLengthLocationMap.getLength = function (linearGeom, loc) {\n\tvar locater = new LengthLocationMap(linearGeom);\n\treturn locater.getLength(loc);\n};\nLengthLocationMap.getLocation = function () {\n\tif (arguments.length === 2) {\n\t\tlet linearGeom = arguments[0], length = arguments[1];\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLocation(length);\n\t} else if (arguments.length === 3) {\n\t\tlet linearGeom = arguments[0], length = arguments[1], resolveLower = arguments[2];\n\t\tvar locater = new LengthLocationMap(linearGeom);\n\t\treturn locater.getLocation(length, resolveLower);\n\t}\n};\n","import LocationIndexedLine from './LocationIndexedLine';\nimport extend from '../../../../extend';\nimport LengthIndexOfPoint from './LengthIndexOfPoint';\nimport LocationIndexOfLine from './LocationIndexOfLine';\nimport LengthLocationMap from './LengthLocationMap';\nimport ExtractLineByLocation from './ExtractLineByLocation';\nexport default function LengthIndexedLine() {\n\tthis._linearGeom = null;\n\tlet linearGeom = arguments[0];\n\tthis._linearGeom = linearGeom;\n}\nextend(LengthIndexedLine.prototype, {\n\tclampIndex: function (index) {\n\t\tvar posIndex = this.positiveIndex(index);\n\t\tvar startIndex = this.getStartIndex();\n\t\tif (posIndex < startIndex) return startIndex;\n\t\tvar endIndex = this.getEndIndex();\n\t\tif (posIndex > endIndex) return endIndex;\n\t\treturn posIndex;\n\t},\n\tlocationOf: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], resolveLower = arguments[1];\n\t\t\treturn LengthLocationMap.getLocation(this._linearGeom, index, resolveLower);\n\t\t}\n\t},\n\tproject: function (pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tpositiveIndex: function (index) {\n\t\tif (index >= 0.0) return index;\n\t\treturn this._linearGeom.getLength() + index;\n\t},\n\textractPoint: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet index = arguments[0];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\treturn loc.getCoordinate(this._linearGeom);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet index = arguments[0], offsetDistance = arguments[1];\n\t\t\tvar loc = LengthLocationMap.getLocation(this._linearGeom, index);\n\t\t\tvar locLow = loc.toLowest(this._linearGeom);\n\t\t\treturn locLow.getSegment(this._linearGeom).pointAlongOffset(locLow.getSegmentFraction(), offsetDistance);\n\t\t}\n\t},\n\tisValidIndex: function (index) {\n\t\treturn index >= this.getStartIndex() && index <= this.getEndIndex();\n\t},\n\tgetEndIndex: function () {\n\t\treturn this._linearGeom.getLength();\n\t},\n\tgetStartIndex: function () {\n\t\treturn 0.0;\n\t},\n\tindexOfAfter: function (pt, minIndex) {\n\t\treturn LengthIndexOfPoint.indexOfAfter(this._linearGeom, pt, minIndex);\n\t},\n\textractLine: function (startIndex, endIndex) {\n\t\tvar lil = new LocationIndexedLine(this._linearGeom);\n\t\tvar startIndex2 = this.clampIndex(startIndex);\n\t\tvar endIndex2 = this.clampIndex(endIndex);\n\t\tvar resolveStartLower = startIndex2 === endIndex2;\n\t\tvar startLoc = this.locationOf(startIndex2, resolveStartLower);\n\t\tvar endLoc = this.locationOf(endIndex2);\n\t\treturn ExtractLineByLocation.extract(this._linearGeom, startLoc, endLoc);\n\t},\n\tindexOf: function (pt) {\n\t\treturn LengthIndexOfPoint.indexOf(this._linearGeom, pt);\n\t},\n\tindicesOf: function (subLine) {\n\t\tvar locIndex = LocationIndexOfLine.indicesOf(this._linearGeom, subLine);\n\t\tvar index = [LengthLocationMap.getLength(this._linearGeom, locIndex[0]), LengthLocationMap.getLength(this._linearGeom, locIndex[1])];\n\t\treturn index;\n\t},\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn LengthIndexedLine;\n\t}\n});\n","import SnapIfNeededOverlayOp from '../overlay/snap/SnapIfNeededOverlayOp';\nimport extend from '../../../../../extend';\nimport OverlayOp from '../overlay/OverlayOp';\nexport default function UnionOp() {}\nextend(UnionOp.prototype, {\n\tinterfaces_: function () {\n\t\treturn [];\n\t},\n\tgetClass: function () {\n\t\treturn UnionOp;\n\t}\n});\nUnionOp.union = function (g, other) {\n\tif (g.isEmpty() || other.isEmpty()) {\n\t\tif (g.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory());\n\t\tif (g.isEmpty()) return other.copy();\n\t\tif (other.isEmpty()) return g.copy();\n\t}\n\tg.checkNotGeometryCollection(g);\n\tg.checkNotGeometryCollection(other);\n\treturn SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION);\n};\n","import WKTWriter from './io/WKTWriter';\nimport GeometryCollectionMapper from './geom/util/GeometryCollectionMapper';\nimport IsValidOp from './operation/valid/IsValidOp';\nimport InteriorPointArea from './algorithm/InteriorPointArea';\nimport UnaryUnionOp from './operation/union/UnaryUnionOp';\nimport UnionOp from './operation/union/UnionOp';\nimport SnapIfNeededOverlayOp from './operation/overlay/snap/SnapIfNeededOverlayOp';\nimport InteriorPointLine from './algorithm/InteriorPointLine';\nimport IsSimpleOp from './operation/IsSimpleOp';\nimport BufferOp from './operation/buffer/BufferOp';\nimport ConvexHull from './algorithm/ConvexHull';\nimport Centroid from './algorithm/Centroid';\nimport Comparable from '../../../java/lang/Comparable';\nimport RelateOp from './operation/relate/RelateOp';\nimport InteriorPointPoint from './algorithm/InteriorPointPoint';\nimport Cloneable from '../../../java/lang/Cloneable';\nimport Serializable from '../../../java/io/Serializable';\nimport DistanceOp from './operation/distance/DistanceOp';\nimport Envelope from './geom/Envelope';\nimport RectangleContains from './operation/predicate/RectangleContains';\nimport Assert from './util/Assert';\nimport RectangleIntersects from './operation/predicate/RectangleIntersects';\nimport OverlayOp from './operation/overlay/OverlayOp';\n\nimport Geometry from './geom/Geometry';\nimport GeometryCollection from './geom/GeometryCollection';\n\nimport extend from '../../../extend';\n\nextend(Geometry.prototype, {\n\tequalsTopo: function (g) {\n\t\tif (!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())) return false;\n\t\treturn RelateOp.relate(this, g).isEquals(this.getDimension(), g.getDimension());\n\t},\n\tunion: function () {\n\t\tif (arguments.length === 0) {\n\t\t\treturn UnaryUnionOp.union(this);\n\t\t} else if (arguments.length === 1) {\n\t\t\tlet other = arguments[0];\n\t\t\treturn UnionOp.union(this, other);\n\t\t}\n\t},\n\tisValid: function () {\n\t\treturn IsValidOp.isValid(this);\n\t},\n\tintersection: function (other) {\n\t\tif (this.isEmpty() || other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, this, other, this._factory);\n\t\tif (this.isGeometryCollection()) {\n\t\t\tvar g2 = other;\n\t\t\treturn GeometryCollectionMapper.map(this, {\n\t\t\t\tinterfaces_: function () {\n\t\t\t\t\treturn [MapOp];\n\t\t\t\t},\n\t\t\t\tmap: function (g) {\n\t\t\t\t\treturn g.intersection(g2);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.INTERSECTION);\n\t},\n\tcovers: function (g) {\n\t\treturn RelateOp.covers(this, g);\n\t},\n\tcoveredBy: function (g) {\n\t\treturn RelateOp.covers(g, this);\n\t},\n\ttouches: function (g) {\n\t\treturn RelateOp.touches(this, g);\n\t},\n\tintersects: function (g) {\n\t\treturn RelateOp.intersects(this, g);\n\t},\n\twithin: function (g) {\n\t\treturn RelateOp.within(this, g);\n\t},\n\toverlaps: function (g) {\n\t\treturn RelateOp.overlaps(this, g);\n\t},\n\tdisjoint: function (g) {\n\t\treturn RelateOp.disjoint(this, g);\n\t},\n\tcrosses: function (g) {\n\t\treturn RelateOp.crosses(this, g);\n\t},\n\tbuffer: function () {\n\t\tif (arguments.length === 1) {\n\t\t\tlet distance = arguments[0];\n\t\t\treturn BufferOp.bufferOp(this, distance);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1];\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments);\n\t\t} else if (arguments.length === 3) {\n\t\t\tlet distance = arguments[0], quadrantSegments = arguments[1], endCapStyle = arguments[2];\n\t\t\treturn BufferOp.bufferOp(this, distance, quadrantSegments, endCapStyle);\n\t\t}\n\t},\n\tconvexHull: function () {\n\t\treturn new ConvexHull(this).getConvexHull();\n\t},\n\trelate: function (...args) {\n\t\tif (arguments.length === 1) {\n\t\t\tlet geometry = arguments[0];\n\t\t\treturn RelateOp.relate(this, geometry);\n\t\t} else if (arguments.length === 2) {\n\t\t\tlet geometry = arguments[0], intersectionPattern = arguments[1];\n\t\t\treturn RelateOp.relate(this, geometry).matches(intersectionPattern);\n\t\t}\n\t},\n\tgetCentroid: function () {\n\t\tif (this.isEmpty()) return this._factory.createPoint();\n\t\tvar centPt = Centroid.getCentroid(this);\n\t\treturn this.createPointFromInternalCoord(centPt, this);\n\t},\n\tgetInteriorPoint: function () {\n\t\tif (this.isEmpty()) return this._factory.createPoint();\n\t\tvar interiorPt = null;\n\t\tvar dim = this.getDimension();\n\t\tif (dim === 0) {\n\t\t\tvar intPt = new InteriorPointPoint(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else if (dim === 1) {\n\t\t\tvar intPt = new InteriorPointLine(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t} else {\n\t\t\tvar intPt = new InteriorPointArea(this);\n\t\t\tinteriorPt = intPt.getInteriorPoint();\n\t\t}\n\t\treturn this.createPointFromInternalCoord(interiorPt, this);\n\t},\n\tsymDifference: function (other) {\n\t\tif (this.isEmpty() || other.isEmpty()) {\n\t\t\tif (this.isEmpty() && other.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, this, other, this._factory);\n\t\t\tif (this.isEmpty()) return other.copy();\n\t\t\tif (other.isEmpty()) return this.copy();\n\t\t}\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.SYMDIFFERENCE);\n\t},\n\tcreatePointFromInternalCoord: function (coord, exemplar) {\n\t\texemplar.getPrecisionModel().makePrecise(coord);\n\t\treturn exemplar.getFactory().createPoint(coord);\n\t},\n\ttoText: function () {\n\t\tvar writer = new WKTWriter();\n\t\treturn writer.write(this);\n\t},\n\ttoString: function() {\n\t\tthis.toText();\n\t},\n\tcontains: function (g) {\n\t\treturn RelateOp.contains(this, g);\n\t},\n\tdifference: function (other) {\n\t\tif (this.isEmpty()) return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, this, other, this._factory);\n\t\tif (other.isEmpty()) return this.copy();\n\t\tthis.checkNotGeometryCollection(this);\n\t\tthis.checkNotGeometryCollection(other);\n\t\treturn SnapIfNeededOverlayOp.overlayOp(this, other, OverlayOp.DIFFERENCE);\n\t},\n\tisSimple: function () {\n\t\tvar op = new IsSimpleOp(this);\n\t\treturn op.isSimple();\n\t},\n\tisWithinDistance: function (geom, distance) {\n\t\tvar envDist = this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());\n\t\tif (envDist > distance) return false;\n\t\treturn DistanceOp.isWithinDistance(this, geom, distance);\n\t},\n\tdistance: function (g) {\n\t\treturn DistanceOp.distance(this, g);\n\t},\n\tisEquivalentClass: function (other) {\n\t\treturn this.getClass() === other.getClass();\n\t}\n})\n","import './Array'\nimport './Number'\nimport './Math'\n\nimport * as geom from './org/locationtech/jts/geom'\nimport * as algorithm from './org/locationtech/jts/algorithm'\nimport * as densify from './org/locationtech/jts/densify'\nimport * as dissolve from './org/locationtech/jts/dissolve'\nimport * as geomgraph from './org/locationtech/jts/geomgraph'\nimport * as index from './org/locationtech/jts/index'\nimport * as io from './org/locationtech/jts/io'\nimport * as noding from './org/locationtech/jts/noding'\nimport * as operation from './org/locationtech/jts/operation'\nimport * as precision from './org/locationtech/jts/precision'\nimport * as simplify from './org/locationtech/jts/simplify'\nimport * as triangulate from './org/locationtech/jts/triangulate'\nimport * as linearref from './org/locationtech/jts/linearref'\n\nimport './org/locationtech/jts/monkey'\n\nconst version = 'npm_package_version (git_hash)'\nexport {\n  version,\n  algorithm,\n  densify,\n  dissolve,\n  geom,\n  geomgraph,\n  index,\n  io,\n  noding,\n  operation,\n  precision,\n  simplify,\n  triangulate,\n  linearref\n}\n"]}