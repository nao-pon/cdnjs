{"version":3,"sources":["webpack:///rollbar.named-amd.min.js","webpack:///webpack/bootstrap 7bb14946e5946b76b3b1","webpack:///./src/browser/bundles/rollbar.js","webpack:///./src/browser/rollbar.js","webpack:///./src/rollbar.js","webpack:///./src/rateLimiter.js","webpack:///./src/queue.js","webpack:///./src/utility.js","webpack:///./~/extend/index.js","webpack:///./vendor/JSON-js/json3.js","webpack:///./src/notifier.js","webpack:///./src/telemetry.js","webpack:///./src/api.js","webpack:///./src/apiUtility.js","webpack:///./src/browser/logger.js","webpack:///./~/console-polyfill/index.js","webpack:///./src/browser/detection.js","webpack:///./src/browser/globalSetup.js","webpack:///./src/browser/transport.js","webpack:///./src/browser/url.js","webpack:///./src/browser/transforms.js","webpack:///./src/browser/errorParser.js","webpack:///./~/error-stack-parser/error-stack-parser.js","webpack:///./~/error-stack-parser/~/stackframe/stackframe.js","webpack:///./src/transforms.js","webpack:///./src/browser/predicates.js","webpack:///./src/browser/telemetry.js","webpack:///./src/browser/domUtility.js"],"names":["define","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","rollbar","options","window","_rollbarConfig","alias","globalAlias","shimRunning","shimId","undefined","_rollbarStartTime","Date","getTime","Rollbar","_rollbarDidLoad","self","client","this","_","extend","defaultOptions","api","API","transport","urllib","Client","logger","gWindow","gDocument","document","addTransformsToNotifier","notifier","addPredicatesToQueue","queue","captureUncaught","handleUncaughtExceptions","globals","captureUncaughtExceptions","wrapGlobals","captureUnhandledRejections","handleUnhandledRejections","instrumenter","Instrumenter","telemeter","instrument","handleUninitialized","maybeCallback","message","error","Error","addTransform","transforms","handleItemWithError","ensureItemHasSomethingToSay","addBaseInfo","addRequestInfo","addClientInfo","addPluginInfo","addBody","sharedTransforms","addMessageWithError","addTelemetryData","addConfigToPayload","scrubPayload","userTransform","itemToPayload","addPredicate","predicates","checkIgnore","userCheckIgnore","urlIsNotBlacklisted","urlIsWhitelisted","messageIsIgnored","_getFirstFunction","args","i","len","length","isFunction","errorParser","_instance","init","global","configure","prototype","payloadData","oldOptions","payload","lastError","log","item","_createItem","arguments","uuid","apply","debug","info","warn","warning","critical","handleUncaughtException","url","lineno","colno","context","stackInfo","makeUnhandledStackInfo","isError","_unhandledStackInfo","level","uncaughtErrorLevel","_isUncaught","handleUnhandledRejection","reason","promise","String","_rollbarContext","_originalArgs","push","wrap","f","_before","ctxFn","_isWrap","_rollbar_wrapped","exc","e","isType","_wrappedSource","toString","_rollbarWrappedError","hasOwnProperty","prop","captureEvent","metadata","captureDomContentLoaded","ts","captureLoad","createItem","version","scrubFields","logLevel","reportLevel","endpoint","verbose","enabled","sendConfig","platform","rateLimiter","configureGlobal","setPlatformOptions","Queue","Notifier","Telemeter","RateLimiter","maxItems","itemsPerMinute","_defaultLogLevel","_log","wait","callback","defaultLevel","_sameAsLastError","_captureRollbarItem","telemetryEvents","copyEvents","err","startTime","counter","perMinCounter","platformOptions","checkRate","limit","ignoreRateLimit","shouldSendValue","shouldSend","globalRateLimit","limitPerMin","perMinute","rateLimitPayload","msg","environment","body","extra","language","framework","name","globalSettings","now","globalRateLimitPerMin","pendingItems","pendingRequests","retryQueue","retryHandle","waitCallback","waitIntervalID","predicate","addPendingItem","removePendingItem","idx","indexOf","splice","addItem","originalError","originalItem","predicateResult","_applyPredicates","stop","_maybeLog","_makeApiRequest","resp","_dequeuePendingRequest","bind","_maybeCallWait","clearInterval","setInterval","rateLimitResponse","postItem","_maybeRetry","RETRIABLE_ERRORS","shouldRetry","retryInterval","code","_retryApiRequest","retryObject","shift","data","get","setupJSON","__initRollbarJSON","isDefined","JSON","isNativeFunction","stringify","RollbarJSON","parse","setupCustomJSON","x","t","typeName","match","toLowerCase","reRegExpChar","funcMatchString","Function","Object","replace","reIsNative","RegExp","isObject","test","value","type","u","isIterable","traverse","obj","func","seen","k","v","isObj","isArray","keys","result","redact","uuid4","d","r","Math","random","floor","sanitizeUrl","baseUrlParts","parseUri","anchor","source","query","str","o","parseUriOptions","parser","strictMode","exec","uri","key","q","$0","$1","$2","addParamsAndAccessTokenToPath","accessToken","params","access_token","paramsArray","join","sort","path","qs","h","substring","formatUrl","protocol","port","hostname","backup","jsonError","backupError","jsonParse","s","mode","backupMessage","location","line","column","guessFunctionName","gatherContext","href","useragent","navigator","userAgent","stack","wrapCallback","requestKeys","lambdaContext","custom","request","arg","extraArgs","l","typ","DOMException","j","timestamp","split","set","temp","replacement","scrub","redactQueryParam","dummy0","paramPart","dummy1","dummy2","dummy3","valPart","paramScrubber","queryRes","valScrubber","paramRes","scrubber","tmpV","_getScrubFieldRegexs","_getScrubQueryParamRegexs","pat","ret","formatArgsAsString","substr","LEVELS","strict","loose","hasOwn","toStr","arr","Array","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","constructor","src","copy","copyIsArray","clone","target","deep","n","this_value","valueOf","quote","string","rx_escapable","lastIndex","a","meta","charCodeAt","slice","holder","partial","mind","gap","toJSON","rep","isFinite","indent","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","Boolean","Number","\b","\t","\n","\f","\r","\"","\\","replacer","space","","debackslashify","text","ignore","b","fromCharCode","parseInt","escapes","state","container","/","go","firstokey","okey","ovalue","firstavalue","avalue","number","action","{","}","pop","ocomma","[","]","acomma",":","colon","SyntaxError",",","true","false","null","reviver","tx","walk","val","transform","_applyTransforms","transformIndex","transformsLength","cb","maxTelemetryEvents","MAX_EVENTS","maxQueueSize","max","min","getLevel","manual","newMaxEvents","deleteCount","capture","rollbarUUID","timestamp_ms","filterTelemetry","captureError","captureLog","captureNetwork","subtype","requestData","levelFromStatus","status_code","statusCode","captureDom","element","checked","captureNavigation","from","to","captureConnectivityChange","change","Api","jsonBackup","transportOptions","_getTransport","helpers","getTransportFromOptions","search","buildPayload","post","contextResult","defaults","proxy","opts","pathname","method","host","appendPathToPath","base","baseTrailingSlash","pathBeginningSlash","unshift","detection","ieVersion","console","con","dummy","properties","methods","getIEVersion","undef","div","createElement","all","getElementsByTagName","innerHTML","Detection","handler","shim","oldOnError","_rollbarOldOnError","onerror","belongsToShim","fn","_rollbarWindowOnError","old","_rollbarURH","removeEventListener","rejectionHandler","evt","detail","addEventListener","_extendListenerPrototype","oldAddEventListener","_rollbarOldAdd","addFn","event","bubble","oldRemoveEventListener","_rollbarOldRemove","removeFn","requestFactory","_makeRequest","stringifyResult","writeData","_createXMLHTTPObject","onreadystatechange","readyState","parseResponse","responseText","_isSuccess","_isNormalFailure","status","_newRetriableError","ex","open","setRequestHeader","send","e1","XDomainRequest","xdomainrequest","onprogress","ontimeout","onload","e2","xmlhttp","factories","XMLHttpRequest","ActiveXObject","numFactories","last","auth","hash","pathParts","_savedStackTrace","description","server","query_string","user_ip","nav","scr","screen","runtime_ms","round","javascript","browser","cookie_enabled","cookieEnabled","width","height","cur","plugins","navPlugins","addBodyTrace","addBodyMessage","messageResult","guess","guessErrorClass","className","trace","exception","class","rawStack","raw","rawException","stackFrame","frame","pre","contextLength","mid","frames","filename","endsWith","reverse","UNKNOWN_FUNCTION","Frame","_stackFrame","fileName","lineNumber","functionName","columnNumber","Stack","getStack","parserStack","ErrorStackParser","errMsg","errClassMatch","ERR_CLASS_REGEXP","errClass","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","StackFrame","_map","array","thisArg","map","output","_filter","filter","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","stacktrace","parseOpera","parseV8OrIE","parseFFOrSafari","extractLocation","urlLike","locationParts","lastNumber","possibleNumber","isNaN","parseFloat","filtered","tokens","parseOpera9","parseOpera11","parseOpera10","lineRE","lines","argsRaw","functionCall","_isNumber","setFunctionName","setArgs","setFileName","setLineNumber","setColumnNumber","setSource","getFunctionName","getArgs","TypeError","getFileName","getLineNumber","getColumnNumber","getSource","payloadOptions","tracePath","newExtra","newItem","configKey","settings","levelVal","isUncaught","urlIsOnAList","whiteOrBlack","black","list","frameLength","listLength","urlRegex","hostBlackList","hostWhiteList","listName","exceptionMessage","ignoredMessages","rIgnoredMessage","traceMessage","bodyMessage","replacements","orig","restore","_window","_document","autoInstrument","scrubTelemetryInputs","telemetryScrubber","network","navigation","connectivity","eventRemovers","dom","_location","_lastHref","urlparser","domUtil","networkResponseHeaders","networkResponseBody","networkRequestBody","oldSettings","deinstrumentNetwork","instrumentNetwork","deinstrumentConsole","instrumentConsole","deinstrumentDom","instrumentDom","deinstrumentNavigation","instrumentNavigation","deinstrumentConnectivity","instrumentConnectivity","wrapProp","xhr","xhrp","__rollbar_xhr","start_time_ms","end_time_ms","onreadystatechangeHandler","__rollbar_event","headers","headersConfig","header","allHeaders","getAllResponseHeaders","parts","trim","getResponseHeader","response","input","then","wrapConsole","origConsole","removeListeners","clickHandler","handleClick","blurHandler","handleBlur","addListener","getElementFromEvent","hasTag","tagName","anchorOrButton","isDescribedElement","captureDomEvent","handleSelectInputChanged","elem","multiple","selected","selectedIndex","isChecked","getElementType","describeElement","elementString","elementArrayToString","treeToArray","chrome","chromePackagedApp","app","runtime","hasPushState","history","pushState","current","handleUrlChange","parsedHref","parsedTo","parsedFrom","section","altType","attachEvent","detachEvent","getAttribute","subtypes","doc","elementFromPoint","clientX","clientY","nextDescription","MAX_HEIGHT","out","parentNode","nextStr","totalLength","MAX_LENGTH","separator","separatorLength","descriptionToString","desc","classes","attributes","attr"],"mappings":"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","file":"rollbar.named-amd.min.js","sourcesContent":["define(\"rollbar\", [], function() { return /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar rollbar = __webpack_require__(2);\n\t\n\tvar options = (typeof window !== 'undefined') && window._rollbarConfig;\n\tvar alias = options && options.globalAlias || 'Rollbar';\n\tvar shimRunning = (typeof window !== 'undefined') && window[alias] && typeof window[alias].shimId === 'function' && window[alias].shimId() !== undefined;\n\t\n\tif ((typeof window !== 'undefined') && !window._rollbarStartTime) {\n\t  window._rollbarStartTime = (new Date()).getTime();\n\t}\n\t\n\tif (!shimRunning && options) {\n\t  var Rollbar = new rollbar(options);\n\t  window[alias] = Rollbar;\n\t} else if (typeof window !== 'undefined') {\n\t  window.rollbar = rollbar;\n\t  window._rollbarDidLoad = true;\n\t} else if (typeof self !== 'undefined') {\n\t  self.rollbar = rollbar;\n\t  self._rollbarDidLoad = true;\n\t}\n\t\n\tmodule.exports = rollbar;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar Client = __webpack_require__(3);\n\tvar _ = __webpack_require__(6);\n\tvar API = __webpack_require__(11);\n\tvar logger = __webpack_require__(13);\n\tvar globals = __webpack_require__(16);\n\t\n\tvar transport = __webpack_require__(17);\n\tvar urllib = __webpack_require__(18);\n\t\n\tvar transforms = __webpack_require__(19);\n\tvar sharedTransforms = __webpack_require__(23);\n\tvar predicates = __webpack_require__(24);\n\tvar errorParser = __webpack_require__(20);\n\tvar Instrumenter = __webpack_require__(25);\n\t\n\tfunction Rollbar(options, client) {\n\t  this.options = _.extend(true, defaultOptions, options);\n\t  var api = new API(this.options, transport, urllib);\n\t  this.client = client || new Client(this.options, api, logger, 'browser');\n\t\n\t  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n\t  var gDocument = (typeof document != 'undefined') && document;\n\t  addTransformsToNotifier(this.client.notifier);\n\t  addPredicatesToQueue(this.client.queue);\n\t  if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {\n\t    globals.captureUncaughtExceptions(gWindow, this);\n\t    globals.wrapGlobals(gWindow, this);\n\t  }\n\t  if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {\n\t    globals.captureUnhandledRejections(gWindow, this);\n\t  }\n\t\n\t  this.instrumenter = new Instrumenter(this.options, this.client.telemeter, this, gWindow, gDocument);\n\t  this.instrumenter.instrument();\n\t}\n\t\n\tvar _instance = null;\n\tRollbar.init = function(options, client) {\n\t  if (_instance) {\n\t    return _instance.global(options).configure(options);\n\t  }\n\t  _instance = new Rollbar(options, client);\n\t  return _instance;\n\t};\n\t\n\tfunction handleUninitialized(maybeCallback) {\n\t  var message = 'Rollbar is not initialized';\n\t  logger.error(message);\n\t  if (maybeCallback) {\n\t    maybeCallback(new Error(message));\n\t  }\n\t}\n\t\n\tRollbar.prototype.global = function(options) {\n\t  this.client.global(options);\n\t  return this;\n\t};\n\tRollbar.global = function(options) {\n\t  if (_instance) {\n\t    return _instance.global(options);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.configure = function(options, payloadData) {\n\t  var oldOptions = this.options;\n\t  var payload = {};\n\t  if (payloadData) {\n\t    payload = {payload: payloadData};\n\t  }\n\t  this.options = _.extend(true, {}, oldOptions, options, payload);\n\t  this.client.configure(options, payloadData);\n\t  this.instrumenter.configure(options);\n\t  return this;\n\t};\n\tRollbar.configure = function(options, payloadData) {\n\t  if (_instance) {\n\t    return _instance.configure(options, payloadData);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.lastError = function() {\n\t  return this.client.lastError;\n\t};\n\tRollbar.lastError = function() {\n\t  if (_instance) {\n\t    return _instance.lastError();\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.log = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.log(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.log = function() {\n\t  if (_instance) {\n\t    return _instance.log.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.debug = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.debug(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.debug = function() {\n\t  if (_instance) {\n\t    return _instance.debug.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.info = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.info(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.info = function() {\n\t  if (_instance) {\n\t    return _instance.info.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.warn = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.warn(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.warn = function() {\n\t  if (_instance) {\n\t    return _instance.warn.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.warning = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.warning(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.warning = function() {\n\t  if (_instance) {\n\t    return _instance.warning.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.error = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.error(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.error = function() {\n\t  if (_instance) {\n\t    return _instance.error.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.critical = function() {\n\t  var item = this._createItem(arguments);\n\t  var uuid = item.uuid;\n\t  this.client.critical(item);\n\t  return {uuid: uuid};\n\t};\n\tRollbar.critical = function() {\n\t  if (_instance) {\n\t    return _instance.critical.apply(_instance, arguments);\n\t  } else {\n\t    var maybeCallback = _getFirstFunction(arguments);\n\t    handleUninitialized(maybeCallback);\n\t  }\n\t};\n\t\n\tRollbar.prototype.handleUncaughtException = function(message, url, lineno, colno, error, context) {\n\t  var item;\n\t  var stackInfo = _.makeUnhandledStackInfo(\n\t    message,\n\t    url,\n\t    lineno,\n\t    colno,\n\t    error,\n\t    'onerror',\n\t    'uncaught exception',\n\t    errorParser\n\t  );\n\t  if (_.isError(error)) {\n\t    item = this._createItem([message, error, context]);\n\t    item._unhandledStackInfo = stackInfo;\n\t  } else if (_.isError(url)) {\n\t    item = this._createItem([message, url, context]);\n\t    item._unhandledStackInfo = stackInfo;\n\t  } else {\n\t    item = this._createItem([message, context]);\n\t    item.stackInfo = stackInfo;\n\t  }\n\t  item.level = this.options.uncaughtErrorLevel;\n\t  item._isUncaught = true;\n\t  this.client.log(item);\n\t};\n\t\n\tRollbar.prototype.handleUnhandledRejection = function(reason, promise) {\n\t  var message = 'unhandled rejection was null or undefined!';\n\t  message = reason ? (reason.message || String(reason)) : message;\n\t  var context = (reason && reason._rollbarContext) || (promise && promise._rollbarContext);\n\t\n\t  var item;\n\t  if (_.isError(reason)) {\n\t    item = this._createItem([message, reason, context]);\n\t  } else {\n\t    item = this._createItem([message, reason, context]);\n\t    item.stackInfo = _.makeUnhandledStackInfo(\n\t      message,\n\t      '',\n\t      0,\n\t      0,\n\t      null,\n\t      'unhandledrejection',\n\t      '',\n\t      errorParser\n\t    );\n\t  }\n\t  item.level = this.options.uncaughtErrorLevel;\n\t  item._isUncaught = true;\n\t  item._originalArgs = item._originalArgs || [];\n\t  item._originalArgs.push(promise);\n\t  this.client.log(item);\n\t};\n\t\n\tRollbar.prototype.wrap = function(f, context, _before) {\n\t  try {\n\t    var ctxFn;\n\t    if(_.isFunction(context)) {\n\t      ctxFn = context;\n\t    } else {\n\t      ctxFn = function() { return context || {}; };\n\t    }\n\t\n\t    if (!_.isFunction(f)) {\n\t      return f;\n\t    }\n\t\n\t    if (f._isWrap) {\n\t      return f;\n\t    }\n\t\n\t    if (!f._rollbar_wrapped) {\n\t      f._rollbar_wrapped = function () {\n\t        if (_before && _.isFunction(_before)) {\n\t          _before.apply(this, arguments);\n\t        }\n\t        try {\n\t          return f.apply(this, arguments);\n\t        } catch(exc) {\n\t          var e = exc;\n\t          if (_.isType(e, 'string')) {\n\t            e = new String(e);\n\t          }\n\t          e._rollbarContext = ctxFn() || {};\n\t          e._rollbarContext._wrappedSource = f.toString();\n\t\n\t          window._rollbarWrappedError = e;\n\t          throw e;\n\t        }\n\t      };\n\t\n\t      f._rollbar_wrapped._isWrap = true;\n\t\n\t      if (f.hasOwnProperty) {\n\t        for (var prop in f) {\n\t          if (f.hasOwnProperty(prop)) {\n\t            f._rollbar_wrapped[prop] = f[prop];\n\t          }\n\t        }\n\t      }\n\t    }\n\t\n\t    return f._rollbar_wrapped;\n\t  } catch (e) {\n\t    // Return the original function if the wrap fails.\n\t    return f;\n\t  }\n\t};\n\tRollbar.wrap = function(f, context) {\n\t  if (_instance) {\n\t    return _instance.wrap(f, context);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\tRollbar.prototype.captureEvent = function(metadata, level) {\n\t  return this.client.captureEvent(metadata, level);\n\t};\n\tRollbar.captureEvent = function(metadata, level) {\n\t  if (_instance) {\n\t    return _instance.captureEvent(metadata, level);\n\t  } else {\n\t    handleUninitialized();\n\t  }\n\t};\n\t\n\t// The following two methods are used internally and are not meant for public use\n\tRollbar.prototype.captureDomContentLoaded = function(e, ts) {\n\t  if (!ts) {\n\t    ts = new Date();\n\t  }\n\t  return this.client.captureDomContentLoaded(ts);\n\t};\n\t\n\tRollbar.prototype.captureLoad = function(e, ts) {\n\t  if (!ts) {\n\t    ts = new Date();\n\t  }\n\t  return this.client.captureLoad(ts);\n\t};\n\t\n\t/* Internal */\n\t\n\tfunction addTransformsToNotifier(notifier) {\n\t  notifier\n\t    .addTransform(transforms.handleItemWithError)\n\t    .addTransform(transforms.ensureItemHasSomethingToSay)\n\t    .addTransform(transforms.addBaseInfo)\n\t    .addTransform(transforms.addRequestInfo(window))\n\t    .addTransform(transforms.addClientInfo(window))\n\t    .addTransform(transforms.addPluginInfo(window))\n\t    .addTransform(transforms.addBody)\n\t    .addTransform(sharedTransforms.addMessageWithError)\n\t    .addTransform(sharedTransforms.addTelemetryData)\n\t    .addTransform(sharedTransforms.addConfigToPayload)\n\t    .addTransform(transforms.scrubPayload)\n\t    .addTransform(sharedTransforms.userTransform(logger))\n\t    .addTransform(sharedTransforms.itemToPayload);\n\t}\n\t\n\tfunction addPredicatesToQueue(queue) {\n\t  queue\n\t    .addPredicate(predicates.checkIgnore)\n\t    .addPredicate(predicates.userCheckIgnore)\n\t    .addPredicate(predicates.urlIsNotBlacklisted)\n\t    .addPredicate(predicates.urlIsWhitelisted)\n\t    .addPredicate(predicates.messageIsIgnored);\n\t}\n\t\n\tRollbar.prototype._createItem = function(args) {\n\t  return _.createItem(args, logger, this);\n\t};\n\t\n\tfunction _getFirstFunction(args) {\n\t  for (var i = 0, len = args.length; i < len; ++i) {\n\t    if (_.isFunction(args[i])) {\n\t      return args[i];\n\t    }\n\t  }\n\t  return undefined;\n\t}\n\t\n\t/* global __NOTIFIER_VERSION__:false */\n\t/* global __DEFAULT_BROWSER_SCRUB_FIELDS__:false */\n\t/* global __DEFAULT_LOG_LEVEL__:false */\n\t/* global __DEFAULT_REPORT_LEVEL__:false */\n\t/* global __DEFAULT_UNCAUGHT_ERROR_LEVEL:false */\n\t/* global __DEFAULT_ENDPOINT__:false */\n\t\n\tvar defaultOptions = {\n\t  version: (\"2.3.8\"),\n\t  scrubFields: ([\"pw\",\"pass\",\"passwd\",\"password\",\"secret\",\"confirm_password\",\"confirmPassword\",\"password_confirmation\",\"passwordConfirmation\",\"access_token\",\"accessToken\",\"secret_key\",\"secretKey\",\"secretToken\"]),\n\t  logLevel: (\"debug\"),\n\t  reportLevel: (\"debug\"),\n\t  uncaughtErrorLevel: (\"error\"),\n\t  endpoint: (\"api.rollbar.com/api/1/item/\"),\n\t  verbose: false,\n\t  enabled: true,\n\t  sendConfig: false\n\t};\n\t\n\tmodule.exports = Rollbar;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar RateLimiter = __webpack_require__(4);\n\tvar Queue = __webpack_require__(5);\n\tvar Notifier = __webpack_require__(9);\n\tvar Telemeter = __webpack_require__(10);\n\tvar _ = __webpack_require__(6);\n\t\n\t/*\n\t * Rollbar - the interface to Rollbar\n\t *\n\t * @param options\n\t * @param api\n\t * @param logger\n\t */\n\tfunction Rollbar(options, api, logger, platform) {\n\t  this.options = _.extend(true, {}, options);\n\t  this.logger = logger;\n\t  Rollbar.rateLimiter.configureGlobal(this.options);\n\t  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);\n\t  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);\n\t  this.notifier = new Notifier(this.queue, this.options);\n\t  this.telemeter = new Telemeter(this.options);\n\t  this.lastError = null;\n\t}\n\t\n\tvar defaultOptions = {\n\t  maxItems: 0,\n\t  itemsPerMinute: 60\n\t};\n\t\n\tRollbar.rateLimiter = new RateLimiter(defaultOptions);\n\t\n\tRollbar.prototype.global = function(options) {\n\t  Rollbar.rateLimiter.configureGlobal(options);\n\t  return this;\n\t};\n\t\n\tRollbar.prototype.configure = function(options, payloadData) {\n\t  this.notifier && this.notifier.configure(options);\n\t  this.telemeter && this.telemeter.configure(options);\n\t  var oldOptions = this.options;\n\t  var payload = {};\n\t  if (payloadData) {\n\t    payload = {payload: payloadData};\n\t  }\n\t  this.options = _.extend(true, {}, oldOptions, options, payload);\n\t  this.global(this.options);\n\t  return this;\n\t};\n\t\n\tRollbar.prototype.log = function(item) {\n\t  var level = this._defaultLogLevel();\n\t  return this._log(level, item);\n\t};\n\t\n\tRollbar.prototype.debug = function(item) {\n\t  this._log('debug', item);\n\t};\n\t\n\tRollbar.prototype.info = function(item) {\n\t  this._log('info', item);\n\t};\n\t\n\tRollbar.prototype.warn = function(item) {\n\t  this._log('warning', item);\n\t};\n\t\n\tRollbar.prototype.warning = function(item) {\n\t  this._log('warning', item);\n\t};\n\t\n\tRollbar.prototype.error = function(item) {\n\t  this._log('error', item);\n\t};\n\t\n\tRollbar.prototype.critical = function(item) {\n\t  this._log('critical', item);\n\t};\n\t\n\tRollbar.prototype.wait = function(callback) {\n\t  this.queue.wait(callback);\n\t};\n\t\n\tRollbar.prototype.captureEvent = function(metadata, level) {\n\t  return this.telemeter.captureEvent(metadata, level);\n\t};\n\t\n\tRollbar.prototype.captureDomContentLoaded = function(ts) {\n\t  return this.telemeter.captureDomContentLoaded(ts);\n\t};\n\t\n\tRollbar.prototype.captureLoad = function(ts) {\n\t  return this.telemeter.captureLoad(ts);\n\t};\n\t\n\t/* Internal */\n\t\n\tRollbar.prototype._log = function(defaultLevel, item) {\n\t  if (this._sameAsLastError(item)) {\n\t    if (item.callback) {\n\t      item.callback();\n\t    }\n\t    return;\n\t  }\n\t  try {\n\t    var callback = null;\n\t    if (item.callback) {\n\t      callback = item.callback;\n\t      delete item.callback;\n\t    }\n\t    item.level = item.level || defaultLevel;\n\t    this.telemeter._captureRollbarItem(item);\n\t    item.telemetryEvents = this.telemeter.copyEvents();\n\t    this.notifier.log(item, callback);\n\t  } catch (e) {\n\t    this.logger.error(e)\n\t  }\n\t};\n\t\n\tRollbar.prototype._defaultLogLevel = function() {\n\t  return this.options.logLevel || 'debug';\n\t};\n\t\n\tRollbar.prototype._sameAsLastError = function(item) {\n\t  if (this.lastError && this.lastError === item.err) {\n\t    return true;\n\t  }\n\t  this.lastError = item.err;\n\t  return false;\n\t};\n\t\n\tmodule.exports = Rollbar;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/*\n\t * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar\n\t *\n\t * @param options - the same options that are accepted by configureGlobal offered as a convenience\n\t */\n\tfunction RateLimiter(options) {\n\t  this.startTime = (new Date()).getTime();\n\t  this.counter = 0;\n\t  this.perMinCounter = 0;\n\t  this.platform = null;\n\t  this.platformOptions = {};\n\t  this.configureGlobal(options);\n\t}\n\t\n\tRateLimiter.globalSettings = {\n\t  startTime: (new Date()).getTime(),\n\t  maxItems: undefined,\n\t  itemsPerMinute: undefined\n\t};\n\t\n\t/*\n\t * configureGlobal - set the global rate limiter options\n\t *\n\t * @param options - Only the following values are recognized:\n\t *    startTime: a timestamp of the form returned by (new Date()).getTime()\n\t *    maxItems: the maximum items\n\t *    itemsPerMinute: the max number of items to send in a given minute\n\t */\n\tRateLimiter.prototype.configureGlobal = function(options) {\n\t  if (options.startTime !== undefined) {\n\t    RateLimiter.globalSettings.startTime = options.startTime;\n\t  }\n\t  if (options.maxItems !== undefined) {\n\t    RateLimiter.globalSettings.maxItems = options.maxItems;\n\t  }\n\t  if (options.itemsPerMinute !== undefined) {\n\t    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;\n\t  }\n\t};\n\t\n\t/*\n\t * shouldSend - determine if we should send a given item based on rate limit settings\n\t *\n\t * @param item - the item we are about to send\n\t * @returns An object with the following structure:\n\t *  error: (Error|null)\n\t *  shouldSend: bool\n\t *  payload: (Object|null)\n\t *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and\n\t *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will\n\t *  describe the situation, but it means that we were already over a rate limit (either globally or\n\t *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it\n\t *  means this item put us over the global rate limit and the payload should be sent to Rollbar in\n\t *  place of the passed in item.\n\t */\n\tRateLimiter.prototype.shouldSend = function(item, now) {\n\t  now = now || (new Date()).getTime();\n\t  if (now - this.startTime >= 60000) {\n\t    this.startTime = now;\n\t    this.perMinCounter = 0;\n\t  }\n\t\n\t  var globalRateLimit = RateLimiter.globalSettings.maxItems;\n\t  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;\n\t\n\t  if (checkRate(item, globalRateLimit, this.counter)) {\n\t    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);\n\t  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {\n\t    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);\n\t  }\n\t  this.counter++;\n\t  this.perMinCounter++;\n\t\n\t  var shouldSend = !checkRate(item, globalRateLimit, this.counter);\n\t  var perMinute = shouldSend;\n\t  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);\n\t  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);\n\t};\n\t\n\tRateLimiter.prototype.setPlatformOptions = function(platform, options) {\n\t  this.platform = platform;\n\t  this.platformOptions = options;\n\t};\n\t\n\t/* Helpers */\n\t\n\tfunction checkRate(item, limit, counter) {\n\t  return !item.ignoreRateLimit && limit >= 1 && counter > limit;\n\t}\n\t\n\tfunction shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {\n\t  var payload = null;\n\t  if (error) {\n\t    error = new Error(error);\n\t  }\n\t  if (!error && !shouldSend) {\n\t    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);\n\t  }\n\t  return {error: error, shouldSend: shouldSend, payload: payload};\n\t}\n\t\n\tfunction rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {\n\t  var environment = options.environment || (options.payload && options.payload.environment);\n\t  var msg;\n\t  if (perMinute) {\n\t    msg = 'item per minute limit reached, ignoring errors until timeout';\n\t  } else {\n\t    msg = 'maxItems has been hit, ignoring errors until reset.';\n\t  }\n\t  var item = {\n\t    body: {\n\t      message: {\n\t        body: msg,\n\t        extra: {\n\t          maxItems: globalRateLimit,\n\t          itemsPerMinute: limitPerMin\n\t        }\n\t      }\n\t    },\n\t    language: 'javascript',\n\t    environment: environment,\n\t    notifier: {\n\t      version: (options.notifier && options.notifier.version) || options.version\n\t    }\n\t  };\n\t  if (platform === 'browser') {\n\t    item.platform = 'browser';\n\t    item.framework = 'browser-js';\n\t    item.notifier.name = 'rollbar-browser-js';\n\t  } else if (platform === 'server') {\n\t    item.framework = options.framework || 'node-js';\n\t    item.notifier.name = options.notifier.name;\n\t  } else if (platform === 'react-native') {\n\t    item.framework = options.framework || 'react-native';\n\t    item.notifier.name = options.notifier.name;\n\t  }\n\t  return item;\n\t}\n\t\n\tmodule.exports = RateLimiter;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\t\n\t/*\n\t * Queue - an object which handles which handles a queue of items to be sent to Rollbar.\n\t *   This object handles rate limiting via a passed in rate limiter, retries based on connection\n\t *   errors, and filtering of items based on a set of configurable predicates. The communication to\n\t *   the backend is performed via a given API object.\n\t *\n\t * @param rateLimiter - An object which conforms to the interface\n\t *    rateLimiter.shouldSend(item) -> bool\n\t * @param api - An object which conforms to the interface\n\t *    api.postItem(payload, function(err, response))\n\t * @param logger - An object used to log verbose messages if desired\n\t * @param options - see Queue.prototype.configure\n\t */\n\tfunction Queue(rateLimiter, api, logger, options) {\n\t  this.rateLimiter = rateLimiter;\n\t  this.api = api;\n\t  this.logger = logger;\n\t  this.options = options;\n\t  this.predicates = [];\n\t  this.pendingItems = [];\n\t  this.pendingRequests = [];\n\t  this.retryQueue = [];\n\t  this.retryHandle = null;\n\t  this.waitCallback = null;\n\t  this.waitIntervalID = null;\n\t}\n\t\n\t/*\n\t * configure - updates the options this queue uses\n\t *\n\t * @param options\n\t */\n\tQueue.prototype.configure = function(options) {\n\t  this.api && this.api.configure(options);\n\t  var oldOptions = this.options;\n\t  this.options = _.extend(true, {}, oldOptions, options);\n\t  return this;\n\t};\n\t\n\t/*\n\t * addPredicate - adds a predicate to the end of the list of predicates for this queue\n\t *\n\t * @param predicate - function(item, options) -> (bool|{err: Error})\n\t *  Returning true means that this predicate passes and the item is okay to go on the queue\n\t *  Returning false means do not add the item to the queue, but it is not an error\n\t *  Returning {err: Error} means do not add the item to the queue, and the given error explains why\n\t *  Returning {err: undefined} is equivalent to returning true but don't do that\n\t */\n\tQueue.prototype.addPredicate = function(predicate) {\n\t  if (_.isFunction(predicate)) {\n\t    this.predicates.push(predicate);\n\t  }\n\t  return this;\n\t};\n\t\n\tQueue.prototype.addPendingItem = function(item) {\n\t  this.pendingItems.push(item);\n\t};\n\t\n\tQueue.prototype.removePendingItem = function(item) {\n\t  var idx = this.pendingItems.indexOf(item);\n\t  if (idx !== -1) {\n\t    this.pendingItems.splice(idx, 1);\n\t  }\n\t};\n\t\n\t/*\n\t * addItem - Send an item to the Rollbar API if all of the predicates are satisfied\n\t *\n\t * @param item - The payload to send to the backend\n\t * @param callback - function(error, repsonse) which will be called with the response from the API\n\t *  in the case of a success, otherwise response will be null and error will have a value. If both\n\t *  error and response are null then the item was stopped by a predicate which did not consider this\n\t *  to be an error condition, but nonetheless did not send the item to the API.\n\t *  @param originalError - The original error before any transformations that is to be logged if any\n\t */\n\tQueue.prototype.addItem = function(item, callback, originalError, originalItem) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() { return; };\n\t  }\n\t  var predicateResult = this._applyPredicates(item);\n\t  if (predicateResult.stop) {\n\t    this.removePendingItem(originalItem);\n\t    callback(predicateResult.err);\n\t    return;\n\t  }\n\t  this._maybeLog(item, originalError);\n\t  this.removePendingItem(originalItem);\n\t  this.pendingRequests.push(item);\n\t  try {\n\t    this._makeApiRequest(item, function(err, resp) {\n\t      this._dequeuePendingRequest(item);\n\t      callback(err, resp);\n\t    }.bind(this));\n\t  } catch (e) {\n\t    this._dequeuePendingRequest(item);\n\t    callback(e);\n\t  }\n\t};\n\t\n\t/*\n\t * wait - Stop any further errors from being added to the queue, and get called back when all items\n\t *   currently processing have finished sending to the backend.\n\t *\n\t * @param callback - function() called when all pending items have been sent\n\t */\n\tQueue.prototype.wait = function(callback) {\n\t  if (!_.isFunction(callback)) {\n\t    return;\n\t  }\n\t  this.waitCallback = callback;\n\t  if (this._maybeCallWait()) {\n\t    return;\n\t  }\n\t  if (this.waitIntervalID) {\n\t    this.waitIntervalID = clearInterval(this.waitIntervalID);\n\t  }\n\t  this.waitIntervalID = setInterval(function() {\n\t    this._maybeCallWait();\n\t  }.bind(this), 500);\n\t};\n\t\n\t/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the\n\t *   given item with the currently configured options.\n\t *\n\t * @param item - An item in the queue\n\t * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,\n\t *   the error value should be passed up to a callbak if we are stopping.\n\t */\n\tQueue.prototype._applyPredicates = function(item) {\n\t  var p = null;\n\t  for (var i = 0, len = this.predicates.length; i < len; i++) {\n\t    p = this.predicates[i](item, this.options);\n\t    if (!p || p.err !== undefined) {\n\t      return {stop: true, err: p.err};\n\t    }\n\t  }\n\t  return {stop: false, err: null};\n\t};\n\t\n\t/*\n\t * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an\n\t *   effort to retry if we are configured to do so.\n\t *\n\t * @param item - an item ready to send to the backend\n\t * @param callback - function(err, response)\n\t */\n\tQueue.prototype._makeApiRequest = function(item, callback) {\n\t  var rateLimitResponse = this.rateLimiter.shouldSend(item);\n\t  if (rateLimitResponse.shouldSend) {\n\t    this.api.postItem(item, function(err, resp) {\n\t      if (err) {\n\t        this._maybeRetry(err, item, callback);\n\t      } else {\n\t        callback(err, resp);\n\t      }\n\t    }.bind(this));\n\t  } else if (rateLimitResponse.error) {\n\t    callback(rateLimitResponse.error);\n\t  } else {\n\t    this.api.postItem(rateLimitResponse.payload, callback);\n\t  }\n\t};\n\t\n\t// These are errors basically mean there is no internet connection\n\tvar RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];\n\t\n\t/*\n\t * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback\n\t *   with the error.\n\t *\n\t * @param err - an error returned by the API transport\n\t * @param item - the item that was trying to be sent when this error occured\n\t * @param callback - function(err, response)\n\t */\n\tQueue.prototype._maybeRetry = function(err, item, callback) {\n\t  var shouldRetry = false;\n\t  if (this.options.retryInterval) {\n\t    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {\n\t      if (err.code === RETRIABLE_ERRORS[i]) {\n\t        shouldRetry = true;\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  if (shouldRetry) {\n\t    this._retryApiRequest(item, callback);\n\t  } else {\n\t    callback(err);\n\t  }\n\t};\n\t\n\t/*\n\t * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process\n\t *   that queue based on the retryInterval in the options for this queue.\n\t *\n\t * @param item - an item that failed to send due to an error we deem retriable\n\t * @param callback - function(err, response)\n\t */\n\tQueue.prototype._retryApiRequest = function(item, callback) {\n\t  this.retryQueue.push({item: item, callback: callback});\n\t\n\t  if (!this.retryHandle) {\n\t    this.retryHandle = setInterval(function() {\n\t      while (this.retryQueue.length) {\n\t        var retryObject = this.retryQueue.shift();\n\t        this._makeApiRequest(retryObject.item, retryObject.callback);\n\t      }\n\t    }.bind(this), this.options.retryInterval);\n\t  }\n\t};\n\t\n\t/*\n\t * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to\n\t *   enable to functionality of providing a callback that clients can pass to `wait` to be notified\n\t *   when the pending request queue has been emptied. This must be called when the API finishes\n\t *   processing this item. If a `wait` callback is configured, it is called by this function.\n\t *\n\t * @param item - the item previously added to the pending request queue\n\t */\n\tQueue.prototype._dequeuePendingRequest = function(item) {\n\t  var idx = this.pendingRequests.indexOf(item);\n\t  if (idx !== -1) {\n\t    this.pendingRequests.splice(idx, 1);\n\t    this._maybeCallWait();\n\t  }\n\t};\n\t\n\tQueue.prototype._maybeLog = function(data, originalError) {\n\t  if (this.logger && this.options.verbose) {\n\t    var message = originalError;\n\t    message = message || _.get(data, 'body.trace.exception.message');\n\t    message = message || _.get(data, 'body.trace_chain.0.exception.message');\n\t    if (message) {\n\t      this.logger.error(message);\n\t      return;\n\t    }\n\t    message = _.get(data, 'body.message.body');\n\t    if (message) {\n\t      this.logger.log(message);\n\t    }\n\t  }\n\t};\n\t\n\tQueue.prototype._maybeCallWait = function() {\n\t  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {\n\t    if (this.waitIntervalID) {\n\t      this.waitIntervalID = clearInterval(this.waitIntervalID);\n\t    }\n\t    this.waitCallback();\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\t\n\tmodule.exports = Queue;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar extend = __webpack_require__(7);\n\t\n\tvar RollbarJSON = {};\n\tvar __initRollbarJSON = false;\n\tfunction setupJSON() {\n\t  if (__initRollbarJSON) {\n\t    return;\n\t  }\n\t  __initRollbarJSON = true;\n\t\n\t  if (isDefined(JSON)) {\n\t    if (isNativeFunction(JSON.stringify)) {\n\t      RollbarJSON.stringify = JSON.stringify;\n\t    }\n\t    if (isNativeFunction(JSON.parse)) {\n\t      RollbarJSON.parse = JSON.parse;\n\t    }\n\t  }\n\t  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {\n\t    var setupCustomJSON = __webpack_require__(8);\n\t    setupCustomJSON(RollbarJSON);\n\t  }\n\t}\n\tsetupJSON();\n\t\n\t/*\n\t * isType - Given a Javascript value and a string, returns true if the type of the value matches the\n\t * given string.\n\t *\n\t * @param x - any value\n\t * @param t - a lowercase string containing one of the following type names:\n\t *    - undefined\n\t *    - null\n\t *    - error\n\t *    - number\n\t *    - boolean\n\t *    - string\n\t *    - symbol\n\t *    - function\n\t *    - object\n\t *    - array\n\t * @returns true if x is of type t, otherwise false\n\t */\n\tfunction isType(x, t) {\n\t  return t === typeName(x);\n\t}\n\t\n\t/*\n\t * typeName - Given a Javascript value, returns the type of the object as a string\n\t */\n\tfunction typeName(x) {\n\t  var name = typeof x;\n\t  if (name !== 'object') {\n\t    return name;\n\t  }\n\t  if (!x) {\n\t    return 'null';\n\t  }\n\t  if (x instanceof Error) {\n\t    return 'error';\n\t  }\n\t  return ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n\t}\n\t\n\t/* isFunction - a convenience function for checking if a value is a function\n\t *\n\t * @param f - any value\n\t * @returns true if f is a function, otherwise false\n\t */\n\tfunction isFunction(f) {\n\t  return isType(f, 'function');\n\t}\n\t\n\t/* isNativeFunction - a convenience function for checking if a value is a native JS function\n\t *\n\t * @param f - any value\n\t * @returns true if f is a native JS function, otherwise false\n\t */\n\tfunction isNativeFunction(f) {\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\t  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)\n\t    .replace(reRegExpChar, '\\\\$&')\n\t    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?');\n\t  var reIsNative = RegExp('^' + funcMatchString + '$');\n\t  return isObject(f) && reIsNative.test(f);\n\t}\n\t\n\t/* isObject - Checks if the argument is an object\n\t *\n\t * @param value - any value\n\t * @returns true is value is an object function is an object)\n\t*/\n\tfunction isObject(value) {\n\t  var type = typeof value;\n\t  return value != null && (type == 'object' || type == 'function');\n\t}\n\t\n\t/*\n\t * isDefined - a convenience function for checking if a value is not equal to undefined\n\t *\n\t * @param u - any value\n\t * @returns true if u is anything other than undefined\n\t */\n\tfunction isDefined(u) {\n\t  return !isType(u, 'undefined');\n\t}\n\t\n\t/*\n\t * isIterable - convenience function for checking if a value can be iterated, essentially\n\t * whether it is an object or an array.\n\t *\n\t * @param i - any value\n\t * @returns true if i is an object or an array as determined by `typeName`\n\t */\n\tfunction isIterable(i) {\n\t  var type = typeName(i);\n\t  return (type === 'object' || type === 'array');\n\t}\n\t\n\t/*\n\t * isError - convenience function for checking if a value is of an error type\n\t *\n\t * @param e - any value\n\t * @returns true if e is an error\n\t */\n\tfunction isError(e) {\n\t  return isType(e, 'error');\n\t}\n\t\n\tfunction traverse(obj, func, seen) {\n\t  var k, v, i;\n\t  var isObj = isType(obj, 'object');\n\t  var isArray = isType(obj, 'array');\n\t  var keys = [];\n\t\n\t  if (isObj && seen.indexOf(obj) !== -1) {\n\t    return obj;\n\t  }\n\t  seen.push(obj);\n\t\n\t  if (isObj) {\n\t    for (k in obj) {\n\t      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n\t        keys.push(k);\n\t      }\n\t    }\n\t  } else if (isArray) {\n\t    for (i = 0; i < obj.length; ++i) {\n\t      keys.push(i);\n\t    }\n\t  }\n\t\n\t  var result = isObj ? {} : [];\n\t  for (i = 0; i < keys.length; ++i) {\n\t    k = keys[i];\n\t    v = obj[k];\n\t    result[k] = func(k, v, seen);\n\t  }\n\t\n\t  return (keys.length != 0) ? result : obj;\n\t}\n\t\n\tfunction redact() {\n\t  return '********';\n\t}\n\t\n\t// from http://stackoverflow.com/a/8809472/1138191\n\tfunction uuid4() {\n\t  var d = now();\n\t  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n\t    var r = (d + Math.random() * 16) % 16 | 0;\n\t    d = Math.floor(d / 16);\n\t    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n\t  });\n\t  return uuid;\n\t}\n\t\n\tvar LEVELS = {\n\t  debug: 0,\n\t  info: 1,\n\t  warning: 2,\n\t  error: 3,\n\t  critical: 4\n\t};\n\t\n\tfunction sanitizeUrl(url) {\n\t  var baseUrlParts = parseUri(url);\n\t  // remove a trailing # if there is no anchor\n\t  if (baseUrlParts.anchor === '') {\n\t    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n\t  }\n\t\n\t  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n\t  return url;\n\t}\n\t\n\tvar parseUriOptions = {\n\t  strictMode: false,\n\t  key: [\n\t    'source',\n\t    'protocol',\n\t    'authority',\n\t    'userInfo',\n\t    'user',\n\t    'password',\n\t    'host',\n\t    'port',\n\t    'relative',\n\t    'path',\n\t    'directory',\n\t    'file',\n\t    'query',\n\t    'anchor'\n\t  ],\n\t  q: {\n\t    name: 'queryKey',\n\t    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t  },\n\t  parser: {\n\t    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t  }\n\t};\n\t\n\tfunction parseUri(str) {\n\t  if (!isType(str, 'string')) {\n\t    throw new Error('received invalid input');\n\t  }\n\t\n\t  var o = parseUriOptions;\n\t  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n\t  var uri = {};\n\t  var i = o.key.length;\n\t\n\t  while (i--) {\n\t    uri[o.key[i]] = m[i] || '';\n\t  }\n\t\n\t  uri[o.q.name] = {};\n\t  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t    if ($1) {\n\t      uri[o.q.name][$1] = $2;\n\t    }\n\t  });\n\t\n\t  return uri;\n\t}\n\t\n\tfunction addParamsAndAccessTokenToPath(accessToken, options, params) {\n\t  params = params || {};\n\t  params.access_token = accessToken;\n\t  var paramsArray = [];\n\t  var k;\n\t  for (k in params) {\n\t    if (Object.prototype.hasOwnProperty.call(params, k)) {\n\t      paramsArray.push([k, params[k]].join('='));\n\t    }\n\t  }\n\t  var query = '?' + paramsArray.sort().join('&');\n\t\n\t  options = options || {};\n\t  options.path = options.path || '';\n\t  var qs = options.path.indexOf('?');\n\t  var h = options.path.indexOf('#');\n\t  var p;\n\t  if (qs !== -1 && (h === -1 || h > qs)) {\n\t    p = options.path;\n\t    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);\n\t  } else {\n\t    if (h !== -1) {\n\t      p = options.path;\n\t      options.path = p.substring(0,h) + query + p.substring(h);\n\t    } else {\n\t      options.path = options.path + query;\n\t    }\n\t  }\n\t}\n\t\n\tfunction formatUrl(u, protocol) {\n\t  protocol = protocol || u.protocol;\n\t  if (!protocol && u.port) {\n\t    if (u.port === 80) {\n\t      protocol = 'http:';\n\t    } else if (u.port === 443) {\n\t      protocol = 'https:';\n\t    }\n\t  }\n\t  protocol = protocol || 'https:';\n\t\n\t  if (!u.hostname) {\n\t    return null;\n\t  }\n\t  var result = protocol + '//' + u.hostname;\n\t  if (u.port) {\n\t    result = result + ':' + u.port;\n\t  }\n\t  if (u.path) {\n\t    result = result + u.path;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction stringify(obj, backup) {\n\t  var value, error;\n\t  try {\n\t    value = RollbarJSON.stringify(obj);\n\t  } catch (jsonError) {\n\t    if (backup && isFunction(backup)) {\n\t      try {\n\t        value = backup(obj);\n\t      } catch (backupError) {\n\t        error = backupError;\n\t      }\n\t    } else {\n\t      error = jsonError;\n\t    }\n\t  }\n\t  return {error: error, value: value};\n\t}\n\t\n\tfunction jsonParse(s) {\n\t  var value, error;\n\t  try {\n\t    value = RollbarJSON.parse(s);\n\t  } catch (e) {\n\t    error = e;\n\t  }\n\t  return {error: error, value: value};\n\t}\n\t\n\tfunction makeUnhandledStackInfo(\n\t  message,\n\t  url,\n\t  lineno,\n\t  colno,\n\t  error,\n\t  mode,\n\t  backupMessage,\n\t  errorParser\n\t) {\n\t  var location = {\n\t    url: url || '',\n\t    line: lineno,\n\t    column: colno\n\t  };\n\t  location.func = errorParser.guessFunctionName(location.url, location.line);\n\t  location.context = errorParser.gatherContext(location.url, location.line);\n\t  var href = document && document.location && document.location.href;\n\t  var useragent = window && window.navigator && window.navigator.userAgent;\n\t  return {\n\t    'mode': mode,\n\t    'message': error ? String(error) : (message || backupMessage),\n\t    'url': href,\n\t    'stack': [location],\n\t    'useragent': useragent\n\t  };\n\t}\n\t\n\tfunction wrapCallback(logger, f) {\n\t  return function(err, resp) {\n\t    try {\n\t      f(err, resp);\n\t    } catch (e) {\n\t      logger.error(e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction createItem(args, logger, notifier, requestKeys, lambdaContext) {\n\t  var message, err, custom, callback, request;\n\t  var arg;\n\t  var extraArgs = [];\n\t\n\t  for (var i = 0, l = args.length; i < l; ++i) {\n\t    arg = args[i];\n\t\n\t    var typ = typeName(arg);\n\t    switch (typ) {\n\t      case 'undefined':\n\t        break;\n\t      case 'string':\n\t        message ? extraArgs.push(arg) : message = arg;\n\t        break;\n\t      case 'function':\n\t        callback = wrapCallback(logger, arg);\n\t        break;\n\t      case 'date':\n\t        extraArgs.push(arg);\n\t        break;\n\t      case 'error':\n\t      case 'domexception':\n\t        err ? extraArgs.push(arg) : err = arg;\n\t        break;\n\t      case 'object':\n\t      case 'array':\n\t        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n\t          err ? extraArgs.push(arg) : err = arg;\n\t          break;\n\t        }\n\t        if (requestKeys && typ === 'object' && !request) {\n\t          for (var j = 0, len = requestKeys.length; j < len; ++j) {\n\t            if (arg[requestKeys[j]] !== undefined) {\n\t              request = arg;\n\t              break;\n\t            }\n\t          }\n\t          if (request) {\n\t            break;\n\t          }\n\t        }\n\t        custom ? extraArgs.push(arg) : custom = arg;\n\t        break;\n\t      default:\n\t        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n\t          err ? extraArgs.push(arg) : err = arg;\n\t          break;\n\t        }\n\t        extraArgs.push(arg);\n\t    }\n\t  }\n\t\n\t  if (extraArgs.length > 0) {\n\t    // if custom is an array this turns it into an object with integer keys\n\t    custom = extend(true, {}, custom);\n\t    custom.extraArgs = extraArgs;\n\t  }\n\t\n\t  var item = {\n\t    message: message,\n\t    err: err,\n\t    custom: custom,\n\t    timestamp: now(),\n\t    callback: callback,\n\t    uuid: uuid4()\n\t  };\n\t  if (custom && custom.level !== undefined) {\n\t    item.level = custom.level;\n\t    delete custom.level;\n\t  }\n\t  if (requestKeys && request) {\n\t    item.request = request;\n\t  }\n\t  if (lambdaContext) {\n\t    item.lambdaContext = lambdaContext;\n\t  }\n\t  item._originalArgs = args;\n\t  return item;\n\t}\n\t\n\t/*\n\t * get - given an obj/array and a keypath, return the value at that keypath or\n\t *       undefined if not possible.\n\t *\n\t * @param obj - an object or array\n\t * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'\n\t *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`\n\t */\n\tfunction get(obj, path) {\n\t  if (!obj) {\n\t    return undefined;\n\t  }\n\t  var keys = path.split('.');\n\t  var result = obj;\n\t  try {\n\t    for (var i = 0, len = keys.length; i < len; ++i) {\n\t      result = result[keys[i]];\n\t    }\n\t  } catch (e) {\n\t    result = undefined;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction set(obj, path, value) {\n\t  if (!obj) {\n\t    return;\n\t  }\n\t  var keys = path.split('.');\n\t  var len = keys.length;\n\t  if (len < 1) {\n\t    return;\n\t  }\n\t  if (len === 1) {\n\t    obj[keys[0]] = value;\n\t    return;\n\t  }\n\t  try {\n\t    var temp = obj[keys[0]] || {};\n\t    var replacement = temp;\n\t    for (var i = 1; i < len-1; i++) {\n\t      temp[keys[i]] = temp[keys[i]] || {};\n\t      temp = temp[keys[i]];\n\t    }\n\t    temp[keys[len-1]] = value;\n\t    obj[keys[0]] = replacement;\n\t  } catch (e) {\n\t    return;\n\t  }\n\t}\n\t\n\tfunction scrub(data, scrubFields) {\n\t  scrubFields = scrubFields || [];\n\t  var paramRes = _getScrubFieldRegexs(scrubFields);\n\t  var queryRes = _getScrubQueryParamRegexs(scrubFields);\n\t\n\t  function redactQueryParam(dummy0, paramPart, dummy1, dummy2, dummy3, valPart) {\n\t    return paramPart + redact(valPart);\n\t  }\n\t\n\t  function paramScrubber(v) {\n\t    var i;\n\t    if (isType(v, 'string')) {\n\t      for (i = 0; i < queryRes.length; ++i) {\n\t        v = v.replace(queryRes[i], redactQueryParam);\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function valScrubber(k, v) {\n\t    var i;\n\t    for (i = 0; i < paramRes.length; ++i) {\n\t      if (paramRes[i].test(k)) {\n\t        v = redact(v);\n\t        break;\n\t      }\n\t    }\n\t    return v;\n\t  }\n\t\n\t  function scrubber(k, v, seen) {\n\t    var tmpV = valScrubber(k, v);\n\t    if (tmpV === v) {\n\t      if (isType(v, 'object') || isType(v, 'array')) {\n\t        return traverse(v, scrubber, seen);\n\t      }\n\t      return paramScrubber(tmpV);\n\t    } else {\n\t      return tmpV;\n\t    }\n\t  }\n\t\n\t  return traverse(data, scrubber, []);\n\t}\n\t\n\tfunction _getScrubFieldRegexs(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '^\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?$';\n\t    ret.push(new RegExp(pat, 'i'));\n\t  }\n\t  return ret;\n\t}\n\t\n\t\n\tfunction _getScrubQueryParamRegexs(scrubFields) {\n\t  var ret = [];\n\t  var pat;\n\t  for (var i = 0; i < scrubFields.length; ++i) {\n\t    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n\t    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n\t  }\n\t  return ret;\n\t}\n\t\n\tfunction formatArgsAsString(args) {\n\t  var i, len, arg;\n\t  var result = [];\n\t  for (i = 0, len = args.length; i < len; i++) {\n\t    arg = args[i];\n\t    if (typeof arg === 'object') {\n\t      arg = stringify(arg);\n\t      arg = arg.error || arg.value;\n\t      if (arg.length > 500)\n\t        arg = arg.substr(0,500)+'...';\n\t    } else if (typeof arg === 'undefined') {\n\t      arg = 'undefined';\n\t    }\n\t    result.push(arg);\n\t  }\n\t  return result.join(' ');\n\t}\n\t\n\tfunction now() {\n\t  if (Date.now) {\n\t    return +Date.now();\n\t  }\n\t  return +new Date();\n\t}\n\t\n\tmodule.exports = {\n\t  isType: isType,\n\t  typeName: typeName,\n\t  isFunction: isFunction,\n\t  isNativeFunction: isNativeFunction,\n\t  isIterable: isIterable,\n\t  isError: isError,\n\t  extend: extend,\n\t  traverse: traverse,\n\t  redact: redact,\n\t  uuid4: uuid4,\n\t  LEVELS: LEVELS,\n\t  sanitizeUrl: sanitizeUrl,\n\t  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,\n\t  formatUrl: formatUrl,\n\t  stringify: stringify,\n\t  jsonParse: jsonParse,\n\t  makeUnhandledStackInfo: makeUnhandledStackInfo,\n\t  createItem: createItem,\n\t  get: get,\n\t  set: set,\n\t  scrub: scrub,\n\t  formatArgsAsString: formatArgsAsString,\n\t  now: now\n\t};\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar hasOwn = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\t\n\tvar isArray = function isArray(arr) {\n\t\tif (typeof Array.isArray === 'function') {\n\t\t\treturn Array.isArray(arr);\n\t\t}\n\t\n\t\treturn toStr.call(arr) === '[object Array]';\n\t};\n\t\n\tvar isPlainObject = function isPlainObject(obj) {\n\t\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\t\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t\t// Not own constructor property must be Object\n\t\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\t// Own properties are enumerated firstly, so to speed up,\n\t\t// if last one is own, then all properties are own.\n\t\tvar key;\n\t\tfor (key in obj) {/**/}\n\t\n\t\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n\t};\n\t\n\tmodule.exports = function extend() {\n\t\tvar options, name, src, copy, copyIsArray, clone,\n\t\t\ttarget = arguments[0],\n\t\t\ti = 1,\n\t\t\tlength = arguments.length,\n\t\t\tdeep = false;\n\t\n\t\t// Handle a deep copy situation\n\t\tif (typeof target === 'boolean') {\n\t\t\tdeep = target;\n\t\t\ttarget = arguments[1] || {};\n\t\t\t// skip the boolean and the target\n\t\t\ti = 2;\n\t\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\t\ttarget = {};\n\t\t}\n\t\n\t\tfor (; i < length; ++i) {\n\t\t\toptions = arguments[i];\n\t\t\t// Only deal with non-null/undefined values\n\t\t\tif (options != null) {\n\t\t\t\t// Extend the base object\n\t\t\t\tfor (name in options) {\n\t\t\t\t\tsrc = target[name];\n\t\t\t\t\tcopy = options[name];\n\t\n\t\t\t\t\t// Prevent never-ending loop\n\t\t\t\t\tif (target !== copy) {\n\t\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\t\n\t\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Return the modified object\n\t\treturn target;\n\t};\n\t\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n\t//  json3.js\n\t//  2017-02-21\n\t//  Public Domain.\n\t//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n\t//  See http://www.JSON.org/js.html\n\t//  This code should be minified before deployment.\n\t//  See http://javascript.crockford.com/jsmin.html\n\t\n\t//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n\t//  NOT CONTROL.\n\t\n\t//  This file creates a global JSON object containing two methods: stringify\n\t//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n\t//  If a project might run on IE8 or earlier, then this file should be included.\n\t//  This file does nothing on ES5 systems.\n\t\n\t//      JSON.stringify(value, replacer, space)\n\t//          value       any JavaScript value, usually an object or array.\n\t//          replacer    an optional parameter that determines how object\n\t//                      values are stringified for objects. It can be a\n\t//                      function or an array of strings.\n\t//          space       an optional parameter that specifies the indentation\n\t//                      of nested structures. If it is omitted, the text will\n\t//                      be packed without extra whitespace. If it is a number,\n\t//                      it will specify the number of spaces to indent at each\n\t//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n\t//                      it contains the characters used to indent at each level.\n\t//          This method produces a JSON text from a JavaScript value.\n\t//          When an object value is found, if the object contains a toJSON\n\t//          method, its toJSON method will be called and the result will be\n\t//          stringified. A toJSON method does not serialize: it returns the\n\t//          value represented by the name/value pair that should be serialized,\n\t//          or undefined if nothing should be serialized. The toJSON method\n\t//          will be passed the key associated with the value, and this will be\n\t//          bound to the value.\n\t\n\t//          For example, this would serialize Dates as ISO strings.\n\t\n\t//              Date.prototype.toJSON = function (key) {\n\t//                  function f(n) {\n\t//                      // Format integers to have at least two digits.\n\t//                      return (n < 10)\n\t//                          ? \"0\" + n\n\t//                          : n;\n\t//                  }\n\t//                  return this.getUTCFullYear()   + \"-\" +\n\t//                       f(this.getUTCMonth() + 1) + \"-\" +\n\t//                       f(this.getUTCDate())      + \"T\" +\n\t//                       f(this.getUTCHours())     + \":\" +\n\t//                       f(this.getUTCMinutes())   + \":\" +\n\t//                       f(this.getUTCSeconds())   + \"Z\";\n\t//              };\n\t\n\t//          You can provide an optional replacer method. It will be passed the\n\t//          key and value of each member, with this bound to the containing\n\t//          object. The value that is returned from your method will be\n\t//          serialized. If your method returns undefined, then the member will\n\t//          be excluded from the serialization.\n\t\n\t//          If the replacer parameter is an array of strings, then it will be\n\t//          used to select the members to be serialized. It filters the results\n\t//          such that only members with keys listed in the replacer array are\n\t//          stringified.\n\t\n\t//          Values that do not have JSON representations, such as undefined or\n\t//          functions, will not be serialized. Such values in objects will be\n\t//          dropped; in arrays they will be replaced with null. You can use\n\t//          a replacer function to replace those with JSON values.\n\t\n\t//          JSON.stringify(undefined) returns undefined.\n\t\n\t//          The optional space parameter produces a stringification of the\n\t//          value that is filled with line breaks and indentation to make it\n\t//          easier to read.\n\t\n\t//          If the space parameter is a non-empty string, then that string will\n\t//          be used for indentation. If the space parameter is a number, then\n\t//          the indentation will be that many spaces.\n\t\n\t//          Example:\n\t\n\t//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n\t//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\t\n\t//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n\t//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\t\n\t//          text = JSON.stringify([new Date()], function (key, value) {\n\t//              return this[key] instanceof Date\n\t//                  ? \"Date(\" + this[key] + \")\"\n\t//                  : value;\n\t//          });\n\t//          // text is '[\"Date(---current time---)\"]'\n\t\n\t//      JSON.parse(text, reviver)\n\t//          This method parses a JSON text to produce an object or array.\n\t//          It can throw a SyntaxError exception.\n\t//          This has been modified to use JSON-js/json_parse_state.js as the\n\t//          parser instead of the one built around eval found in JSON-js/json2.js\n\t\n\t//          The optional reviver parameter is a function that can filter and\n\t//          transform the results. It receives each of the keys and values,\n\t//          and its return value is used instead of the original value.\n\t//          If it returns what it received, then the structure is not modified.\n\t//          If it returns undefined then the member is deleted.\n\t\n\t//          Example:\n\t\n\t//          // Parse the text. Values that look like ISO date strings will\n\t//          // be converted to Date objects.\n\t\n\t//          myData = JSON.parse(text, function (key, value) {\n\t//              var a;\n\t//              if (typeof value === \"string\") {\n\t//                  a =\n\t//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n\t//                  if (a) {\n\t//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n\t//                          +a[5], +a[6]));\n\t//                  }\n\t//              }\n\t//              return value;\n\t//          });\n\t\n\t//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n\t//              var d;\n\t//              if (typeof value === \"string\" &&\n\t//                      value.slice(0, 5) === \"Date(\" &&\n\t//                      value.slice(-1) === \")\") {\n\t//                  d = new Date(value.slice(5, -1));\n\t//                  if (d) {\n\t//                      return d;\n\t//                  }\n\t//              }\n\t//              return value;\n\t//          });\n\t\n\t//  This is a reference implementation. You are free to copy, modify, or\n\t//  redistribute.\n\t\n\t/*jslint\n\t  for, this\n\t  */\n\t\n\t/*property\n\t  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n\t  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n\t  lastIndex, length, parse, prototype, push, replace, slice, stringify,\n\t  test, toJSON, toString, valueOf\n\t  */\n\t\n\tvar setupCustomJSON = function(JSON) {\n\t\n\t  var rx_one = /^[\\],:{}\\s]*$/;\n\t  var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n\t  var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n\t  var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n\t  var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\t  var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\t\n\t  function f(n) {\n\t    // Format integers to have at least two digits.\n\t    return n < 10\n\t      ? \"0\" + n\n\t      : n;\n\t  }\n\t\n\t  function this_value() {\n\t    return this.valueOf();\n\t  }\n\t\n\t  if (typeof Date.prototype.toJSON !== \"function\") {\n\t\n\t    Date.prototype.toJSON = function () {\n\t\n\t      return isFinite(this.valueOf())\n\t        ? this.getUTCFullYear() + \"-\" +\n\t        f(this.getUTCMonth() + 1) + \"-\" +\n\t        f(this.getUTCDate()) + \"T\" +\n\t        f(this.getUTCHours()) + \":\" +\n\t        f(this.getUTCMinutes()) + \":\" +\n\t        f(this.getUTCSeconds()) + \"Z\"\n\t        : null;\n\t    };\n\t\n\t    Boolean.prototype.toJSON = this_value;\n\t    Number.prototype.toJSON = this_value;\n\t    String.prototype.toJSON = this_value;\n\t  }\n\t\n\t  var gap;\n\t  var indent;\n\t  var meta;\n\t  var rep;\n\t\n\t\n\t  function quote(string) {\n\t\n\t    // If the string contains no control characters, no quote characters, and no\n\t    // backslash characters, then we can safely slap some quotes around it.\n\t    // Otherwise we must also replace the offending characters with safe escape\n\t    // sequences.\n\t\n\t    rx_escapable.lastIndex = 0;\n\t    return rx_escapable.test(string)\n\t      ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n\t        var c = meta[a];\n\t        return typeof c === \"string\"\n\t          ? c\n\t          : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n\t      }) + \"\\\"\"\n\t    : \"\\\"\" + string + \"\\\"\";\n\t  }\n\t\n\t\n\t  function str(key, holder) {\n\t\n\t    // Produce a string from holder[key].\n\t\n\t    var i;          // The loop counter.\n\t    var k;          // The member key.\n\t    var v;          // The member value.\n\t    var length;\n\t    var mind = gap;\n\t    var partial;\n\t    var value = holder[key];\n\t\n\t    // If the value has a toJSON method, call it to obtain a replacement value.\n\t\n\t    if (value && typeof value === \"object\" &&\n\t        typeof value.toJSON === \"function\") {\n\t      value = value.toJSON(key);\n\t    }\n\t\n\t    // If we were called with a replacer function, then call the replacer to\n\t    // obtain a replacement value.\n\t\n\t    if (typeof rep === \"function\") {\n\t      value = rep.call(holder, key, value);\n\t    }\n\t\n\t    // What happens next depends on the value's type.\n\t\n\t    switch (typeof value) {\n\t      case \"string\":\n\t        return quote(value);\n\t\n\t      case \"number\":\n\t\n\t        // JSON numbers must be finite. Encode non-finite numbers as null.\n\t\n\t        return isFinite(value)\n\t          ? String(value)\n\t          : \"null\";\n\t\n\t      case \"boolean\":\n\t      case \"null\":\n\t\n\t        // If the value is a boolean or null, convert it to a string. Note:\n\t        // typeof null does not produce \"null\". The case is included here in\n\t        // the remote chance that this gets fixed someday.\n\t\n\t        return String(value);\n\t\n\t        // If the type is \"object\", we might be dealing with an object or an array or\n\t        // null.\n\t\n\t      case \"object\":\n\t\n\t        // Due to a specification blunder in ECMAScript, typeof null is \"object\",\n\t        // so watch out for that case.\n\t\n\t        if (!value) {\n\t          return \"null\";\n\t        }\n\t\n\t        // Make an array to hold the partial results of stringifying this object value.\n\t\n\t        gap += indent;\n\t        partial = [];\n\t\n\t        // Is the value an array?\n\t\n\t        if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\t\n\t          // The value is an array. Stringify every element. Use null as a placeholder\n\t          // for non-JSON values.\n\t\n\t          length = value.length;\n\t          for (i = 0; i < length; i += 1) {\n\t            partial[i] = str(i, value) || \"null\";\n\t          }\n\t\n\t          // Join all of the elements together, separated with commas, and wrap them in\n\t          // brackets.\n\t\n\t          v = partial.length === 0\n\t            ? \"[]\"\n\t            : gap\n\t            ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n\t            : \"[\" + partial.join(\",\") + \"]\";\n\t          gap = mind;\n\t          return v;\n\t        }\n\t\n\t        // If the replacer is an array, use it to select the members to be stringified.\n\t\n\t        if (rep && typeof rep === \"object\") {\n\t          length = rep.length;\n\t          for (i = 0; i < length; i += 1) {\n\t            if (typeof rep[i] === \"string\") {\n\t              k = rep[i];\n\t              v = str(k, value);\n\t              if (v) {\n\t                partial.push(quote(k) + (\n\t                      gap\n\t                      ? \": \"\n\t                      : \":\"\n\t                      ) + v);\n\t              }\n\t            }\n\t          }\n\t        } else {\n\t\n\t          // Otherwise, iterate through all of the keys in the object.\n\t\n\t          for (k in value) {\n\t            if (Object.prototype.hasOwnProperty.call(value, k)) {\n\t              v = str(k, value);\n\t              if (v) {\n\t                partial.push(quote(k) + (\n\t                      gap\n\t                      ? \": \"\n\t                      : \":\"\n\t                      ) + v);\n\t              }\n\t            }\n\t          }\n\t        }\n\t\n\t        // Join all of the member texts together, separated with commas,\n\t        // and wrap them in braces.\n\t\n\t        v = partial.length === 0\n\t          ? \"{}\"\n\t          : gap\n\t          ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n\t          : \"{\" + partial.join(\",\") + \"}\";\n\t        gap = mind;\n\t        return v;\n\t    }\n\t  }\n\t\n\t  // If the JSON object does not yet have a stringify method, give it one.\n\t\n\t  if (typeof JSON.stringify !== \"function\") {\n\t    meta = {    // table of character substitutions\n\t      \"\\b\": \"\\\\b\",\n\t      \"\\t\": \"\\\\t\",\n\t      \"\\n\": \"\\\\n\",\n\t      \"\\f\": \"\\\\f\",\n\t      \"\\r\": \"\\\\r\",\n\t      \"\\\"\": \"\\\\\\\"\",\n\t      \"\\\\\": \"\\\\\\\\\"\n\t    };\n\t    JSON.stringify = function (value, replacer, space) {\n\t\n\t      // The stringify method takes a value and an optional replacer, and an optional\n\t      // space parameter, and returns a JSON text. The replacer can be a function\n\t      // that can replace values, or an array of strings that will select the keys.\n\t      // A default replacer method can be provided. Use of the space parameter can\n\t      // produce text that is more easily readable.\n\t\n\t      var i;\n\t      gap = \"\";\n\t      indent = \"\";\n\t\n\t      // If the space parameter is a number, make an indent string containing that\n\t      // many spaces.\n\t\n\t      if (typeof space === \"number\") {\n\t        for (i = 0; i < space; i += 1) {\n\t          indent += \" \";\n\t        }\n\t\n\t        // If the space parameter is a string, it will be used as the indent string.\n\t\n\t      } else if (typeof space === \"string\") {\n\t        indent = space;\n\t      }\n\t\n\t      // If there is a replacer, it must be a function or an array.\n\t      // Otherwise, throw an error.\n\t\n\t      rep = replacer;\n\t      if (replacer && typeof replacer !== \"function\" &&\n\t          (typeof replacer !== \"object\" ||\n\t           typeof replacer.length !== \"number\")) {\n\t        throw new Error(\"JSON.stringify\");\n\t      }\n\t\n\t      // Make a fake root object containing our value under the key of \"\".\n\t      // Return the result of stringifying the value.\n\t\n\t      return str(\"\", {\"\": value});\n\t    };\n\t  }\n\t\n\t\n\t  // If the JSON object does not yet have a parse method, give it one.\n\t\n\t  if (typeof JSON.parse !== \"function\") {\n\t    JSON.parse = (function () {\n\t\n\t      // This function creates a JSON parse function that uses a state machine rather\n\t      // than the dangerous eval function to parse a JSON text.\n\t\n\t      var state;      // The state of the parser, one of\n\t      // 'go'         The starting state\n\t      // 'ok'         The final, accepting state\n\t      // 'firstokey'  Ready for the first key of the object or\n\t      //              the closing of an empty object\n\t      // 'okey'       Ready for the next key of the object\n\t      // 'colon'      Ready for the colon\n\t      // 'ovalue'     Ready for the value half of a key/value pair\n\t      // 'ocomma'     Ready for a comma or closing }\n\t      // 'firstavalue' Ready for the first value of an array or\n\t      //              an empty array\n\t      // 'avalue'     Ready for the next value of an array\n\t      // 'acomma'     Ready for a comma or closing ]\n\t      var stack;      // The stack, for controlling nesting.\n\t      var container;  // The current container object or array\n\t      var key;        // The current key\n\t      var value;      // The current value\n\t      var escapes = { // Escapement translation table\n\t        \"\\\\\": \"\\\\\",\n\t        \"\\\"\": \"\\\"\",\n\t        \"/\": \"/\",\n\t        \"t\": \"\\t\",\n\t        \"n\": \"\\n\",\n\t        \"r\": \"\\r\",\n\t        \"f\": \"\\f\",\n\t        \"b\": \"\\b\"\n\t      };\n\t      var string = {   // The actions for string tokens\n\t        go: function () {\n\t          state = \"ok\";\n\t        },\n\t        firstokey: function () {\n\t          key = value;\n\t          state = \"colon\";\n\t        },\n\t        okey: function () {\n\t          key = value;\n\t          state = \"colon\";\n\t        },\n\t        ovalue: function () {\n\t          state = \"ocomma\";\n\t        },\n\t        firstavalue: function () {\n\t          state = \"acomma\";\n\t        },\n\t        avalue: function () {\n\t          state = \"acomma\";\n\t        }\n\t      };\n\t      var number = {   // The actions for number tokens\n\t        go: function () {\n\t          state = \"ok\";\n\t        },\n\t        ovalue: function () {\n\t          state = \"ocomma\";\n\t        },\n\t        firstavalue: function () {\n\t          state = \"acomma\";\n\t        },\n\t        avalue: function () {\n\t          state = \"acomma\";\n\t        }\n\t      };\n\t      var action = {\n\t\n\t        // The action table describes the behavior of the machine. It contains an\n\t        // object for each token. Each object contains a method that is called when\n\t        // a token is matched in a state. An object will lack a method for illegal\n\t        // states.\n\t\n\t        \"{\": {\n\t          go: function () {\n\t            stack.push({state: \"ok\"});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          },\n\t          ovalue: function () {\n\t            stack.push({container: container, state: \"ocomma\", key: key});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          },\n\t          firstavalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          },\n\t          avalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = {};\n\t            state = \"firstokey\";\n\t          }\n\t        },\n\t        \"}\": {\n\t          firstokey: function () {\n\t            var pop = stack.pop();\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          },\n\t          ocomma: function () {\n\t            var pop = stack.pop();\n\t            container[key] = value;\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          }\n\t        },\n\t        \"[\": {\n\t          go: function () {\n\t            stack.push({state: \"ok\"});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          },\n\t          ovalue: function () {\n\t            stack.push({container: container, state: \"ocomma\", key: key});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          },\n\t          firstavalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          },\n\t          avalue: function () {\n\t            stack.push({container: container, state: \"acomma\"});\n\t            container = [];\n\t            state = \"firstavalue\";\n\t          }\n\t        },\n\t        \"]\": {\n\t          firstavalue: function () {\n\t            var pop = stack.pop();\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          },\n\t          acomma: function () {\n\t            var pop = stack.pop();\n\t            container.push(value);\n\t            value = container;\n\t            container = pop.container;\n\t            key = pop.key;\n\t            state = pop.state;\n\t          }\n\t        },\n\t        \":\": {\n\t          colon: function () {\n\t            if (Object.hasOwnProperty.call(container, key)) {\n\t              throw new SyntaxError(\"Duplicate key '\" + key + \"\\\"\");\n\t            }\n\t            state = \"ovalue\";\n\t          }\n\t        },\n\t        \",\": {\n\t          ocomma: function () {\n\t            container[key] = value;\n\t            state = \"okey\";\n\t          },\n\t          acomma: function () {\n\t            container.push(value);\n\t            state = \"avalue\";\n\t          }\n\t        },\n\t        \"true\": {\n\t          go: function () {\n\t            value = true;\n\t            state = \"ok\";\n\t          },\n\t          ovalue: function () {\n\t            value = true;\n\t            state = \"ocomma\";\n\t          },\n\t          firstavalue: function () {\n\t            value = true;\n\t            state = \"acomma\";\n\t          },\n\t          avalue: function () {\n\t            value = true;\n\t            state = \"acomma\";\n\t          }\n\t        },\n\t        \"false\": {\n\t          go: function () {\n\t            value = false;\n\t            state = \"ok\";\n\t          },\n\t          ovalue: function () {\n\t            value = false;\n\t            state = \"ocomma\";\n\t          },\n\t          firstavalue: function () {\n\t            value = false;\n\t            state = \"acomma\";\n\t          },\n\t          avalue: function () {\n\t            value = false;\n\t            state = \"acomma\";\n\t          }\n\t        },\n\t        \"null\": {\n\t          go: function () {\n\t            value = null;\n\t            state = \"ok\";\n\t          },\n\t          ovalue: function () {\n\t            value = null;\n\t            state = \"ocomma\";\n\t          },\n\t          firstavalue: function () {\n\t            value = null;\n\t            state = \"acomma\";\n\t          },\n\t          avalue: function () {\n\t            value = null;\n\t            state = \"acomma\";\n\t          }\n\t        }\n\t      };\n\t\n\t      function debackslashify(text) {\n\t\n\t        // Remove and replace any backslash escapement.\n\t\n\t        return text.replace(/\\\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {\n\t          return b\n\t            ? String.fromCharCode(parseInt(b, 16))\n\t            : escapes[c];\n\t        });\n\t      }\n\t\n\t      return function (source, reviver) {\n\t\n\t        // A regular expression is used to extract tokens from the JSON text.\n\t        // The extraction process is cautious.\n\t\n\t        var result;\n\t        var tx = /^[\\u0020\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")/;\n\t\n\t        // Set the starting state.\n\t\n\t        state = \"go\";\n\t\n\t        // The stack records the container, key, and state for each object or array\n\t        // that contains another object or array while processing nested structures.\n\t\n\t        stack = [];\n\t\n\t        // If any error occurs, we will catch it and ultimately throw a syntax error.\n\t\n\t        try {\n\t\n\t          // For each token...\n\t\n\t          while (true) {\n\t            result = tx.exec(source);\n\t            if (!result) {\n\t              break;\n\t            }\n\t\n\t            // result is the result array from matching the tokenizing regular expression.\n\t            //  result[0] contains everything that matched, including any initial whitespace.\n\t            //  result[1] contains any punctuation that was matched, or true, false, or null.\n\t            //  result[2] contains a matched number, still in string form.\n\t            //  result[3] contains a matched string, without quotes but with escapement.\n\t\n\t            if (result[1]) {\n\t\n\t              // Token: Execute the action for this state and token.\n\t\n\t              action[result[1]][state]();\n\t\n\t            } else if (result[2]) {\n\t\n\t              // Number token: Convert the number string into a number value and execute\n\t              // the action for this state and number.\n\t\n\t              value = +result[2];\n\t              number[state]();\n\t            } else {\n\t\n\t              // String token: Replace the escapement sequences and execute the action for\n\t              // this state and string.\n\t\n\t              value = debackslashify(result[3]);\n\t              string[state]();\n\t            }\n\t\n\t            // Remove the token from the string. The loop will continue as long as there\n\t            // are tokens. This is a slow process, but it allows the use of ^ matching,\n\t            // which assures that no illegal tokens slip through.\n\t\n\t            source = source.slice(result[0].length);\n\t          }\n\t\n\t          // If we find a state/token combination that is illegal, then the action will\n\t          // cause an error. We handle the error by simply changing the state.\n\t\n\t        } catch (e) {\n\t          state = e;\n\t        }\n\t\n\t        // The parsing is finished. If we are not in the final \"ok\" state, or if the\n\t        // remaining source contains anything except whitespace, then we did not have\n\t        //a well-formed JSON text.\n\t\n\t        if (state !== \"ok\" || (/[^\\u0020\\t\\n\\r]/.test(source))) {\n\t          throw (state instanceof SyntaxError)\n\t            ? state\n\t            : new SyntaxError(\"JSON\");\n\t        }\n\t\n\t        // If there is a reviver function, we recursively walk the new structure,\n\t        // passing each name/value pair to the reviver function for possible\n\t        // transformation, starting with a temporary root object that holds the current\n\t        // value in an empty key. If there is not a reviver function, we simply return\n\t        // that value.\n\t\n\t        return (typeof reviver === \"function\")\n\t          ? (function walk(holder, key) {\n\t            var k;\n\t            var v;\n\t            var val = holder[key];\n\t            if (val && typeof val === \"object\") {\n\t              for (k in value) {\n\t                if (Object.prototype.hasOwnProperty.call(val, k)) {\n\t                  v = walk(val, k);\n\t                  if (v !== undefined) {\n\t                    val[k] = v;\n\t                  } else {\n\t                    delete val[k];\n\t                  }\n\t                }\n\t              }\n\t            }\n\t            return reviver.call(holder, key, val);\n\t          }({\"\": value}, \"\"))\n\t        : value;\n\t      };\n\t    }());\n\t  }\n\t}\n\t\n\tmodule.exports = setupCustomJSON;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\t\n\t/*\n\t * Notifier - the internal object responsible for delegating between the client exposed API, the\n\t * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the\n\t * queue which handles the communcation with the Rollbar API servers.\n\t *\n\t * @param queue - an object that conforms to the interface: addItem(item, callback)\n\t * @param options - an object representing the options to be set for this notifier, this should have\n\t * any defaults already set by the caller\n\t */\n\tfunction Notifier(queue, options) {\n\t  this.queue = queue;\n\t  this.options = options;\n\t  this.transforms = [];\n\t}\n\t\n\t/*\n\t * configure - updates the options for this notifier with the passed in object\n\t *\n\t * @param options - an object which gets merged with the current options set on this notifier\n\t * @returns this\n\t */\n\tNotifier.prototype.configure = function(options) {\n\t  this.queue && this.queue.configure(options);\n\t  var oldOptions = this.options;\n\t  this.options = _.extend(true, {}, oldOptions, options);\n\t  return this;\n\t};\n\t\n\t/*\n\t * addTransform - adds a transform onto the end of the queue of transforms for this notifier\n\t *\n\t * @param transform - a function which takes three arguments:\n\t *    * item: An Object representing the data to eventually be sent to Rollbar\n\t *    * options: The current value of the options for this notifier\n\t *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this\n\t *    callback with a null value for error if it wants the processing chain to continue, otherwise\n\t *    with an error to terminate the processing. The item should be the updated item after this\n\t *    transform is finished modifying it.\n\t */\n\tNotifier.prototype.addTransform = function(transform) {\n\t  if (_.isFunction(transform)) {\n\t    this.transforms.push(transform);\n\t  }\n\t  return this;\n\t};\n\t\n\t/*\n\t * log - the internal log function which applies the configured transforms and then pushes onto the\n\t * queue to be sent to the backend.\n\t *\n\t * @param item - An object with the following structure:\n\t *    message [String] - An optional string to be sent to rollbar\n\t *    error [Error] - An optional error\n\t *\n\t * @param callback - A function of type function(err, resp) which will be called with exactly one\n\t * null argument and one non-null argument. The callback will be called once, either during the\n\t * transform stage if an error occurs inside a transform, or in response to the communication with\n\t * the backend. The second argument will be the response from the backend in case of success.\n\t */\n\tNotifier.prototype.log = function(item, callback) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() {};\n\t  }\n\t\n\t  if (!this.options.enabled) {\n\t    return callback(new Error('Rollbar is not enabled'));\n\t  }\n\t\n\t  this.queue.addPendingItem(item);\n\t  var originalError = item.err;\n\t  this._applyTransforms(item, function(err, i) {\n\t    if (err) {\n\t      this.queue.removePendingItem(item);\n\t      return callback(err, null);\n\t    }\n\t    this.queue.addItem(i, callback, originalError, item);\n\t  }.bind(this));\n\t};\n\t\n\t/* Internal */\n\t\n\t/*\n\t * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See\n\t * `addTransform` for more information.\n\t *\n\t * @param item - An item to be transformed\n\t * @param callback - A function of type function(err, item) which will be called with a non-null\n\t * error and a null item in the case of a transform failure, or a null error and non-null item after\n\t * all transforms have been applied.\n\t */\n\tNotifier.prototype._applyTransforms = function(item, callback) {\n\t  var transformIndex = -1;\n\t  var transformsLength = this.transforms.length;\n\t  var transforms = this.transforms;\n\t  var options = this.options;\n\t\n\t  var cb = function(err, i) {\n\t    if (err) {\n\t      callback(err, null);\n\t      return;\n\t    }\n\t\n\t    transformIndex++;\n\t\n\t    if (transformIndex === transformsLength) {\n\t      callback(null, i);\n\t      return;\n\t    }\n\t\n\t    transforms[transformIndex](i, options, cb);\n\t  };\n\t\n\t  cb(null, item);\n\t};\n\t\n\tmodule.exports = Notifier;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\t\n\tvar MAX_EVENTS = 100;\n\t\n\tfunction Telemeter(options) {\n\t  this.queue = [];\n\t  this.options = _.extend(true, {}, options);\n\t  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n\t  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n\t}\n\t\n\tTelemeter.prototype.configure = function(options) {\n\t  var oldOptions = this.options;\n\t  this.options = _.extend(true, {}, oldOptions, options);\n\t  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n\t  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n\t  var deleteCount = 0;\n\t  if (this.maxQueueSize > newMaxEvents) {\n\t    deleteCount = this.maxQueueSize - newMaxEvents;\n\t  }\n\t  this.maxQueueSize = newMaxEvents;\n\t  this.queue.splice(0, deleteCount);\n\t};\n\t\n\tTelemeter.prototype.copyEvents = function() {\n\t  return Array.prototype.slice.call(this.queue, 0);\n\t};\n\t\n\tTelemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {\n\t  var e = {\n\t    level: getLevel(type, level),\n\t    type: type,\n\t    timestamp_ms: timestamp || _.now(),\n\t    body: metadata,\n\t    source: 'client'\n\t  };\n\t  if (rollbarUUID) {\n\t    e.uuid = rollbarUUID;\n\t  }\n\t\n\t  try {\n\t    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {\n\t      return false;\n\t    }\n\t  } catch (e) {\n\t    this.options.filterTelemetry = null;\n\t  }\n\t\n\t  this.push(e);\n\t  return e;\n\t};\n\t\n\tTelemeter.prototype.captureEvent = function(metadata, level, rollbarUUID) {\n\t  return this.capture('manual', metadata, level, rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {\n\t  var metadata = {\n\t    message: err.message || String(err)\n\t  };\n\t  if (err.stack) {\n\t    metadata.stack = err.stack;\n\t  }\n\t  return this.capture('error', metadata, level, rollbarUUID, timestamp);\n\t};\n\t\n\tTelemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {\n\t  return this.capture('log', {\n\t    message: message\n\t  }, level, rollbarUUID, timestamp);\n\t};\n\t\n\tTelemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {\n\t  subtype = subtype || 'xhr';\n\t  metadata.subtype = metadata.subtype || subtype;\n\t  if (requestData) {\n\t    metadata.request = requestData;\n\t  }\n\t  var level = this.levelFromStatus(metadata.status_code);\n\t  return this.capture('network', metadata, level, rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.levelFromStatus = function(statusCode) {\n\t  if (statusCode >= 200 && statusCode < 400) {\n\t    return 'info';\n\t  }\n\t  if (statusCode === 0 || statusCode >= 400) {\n\t    return 'error';\n\t  }\n\t  return 'info';\n\t};\n\t\n\tTelemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {\n\t  var metadata = {\n\t    subtype: subtype,\n\t    element: element\n\t  };\n\t  if (value !== undefined) {\n\t    metadata.value = value;\n\t  }\n\t  if (checked !== undefined) {\n\t    metadata.checked = checked;\n\t  }\n\t  return this.capture('dom', metadata, 'info', rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {\n\t  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);\n\t};\n\t\n\tTelemeter.prototype.captureDomContentLoaded = function(ts) {\n\t  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n\t  /**\n\t   * If we decide to make this a dom event instead, then use the line below:\n\t  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n\t  */\n\t};\n\tTelemeter.prototype.captureLoad = function(ts) {\n\t  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n\t  /**\n\t   * If we decide to make this a dom event instead, then use the line below:\n\t  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n\t  */\n\t};\n\t\n\tTelemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {\n\t  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);\n\t};\n\t\n\t// Only intended to be used internally by the notifier\n\tTelemeter.prototype._captureRollbarItem = function(item) {\n\t  if (item.err) {\n\t    return this.captureError(item.err, item.level, item.uuid, item.timestamp);\n\t  }\n\t  if (item.message) {\n\t    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);\n\t  }\n\t  if (item.custom) {\n\t    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);\n\t  }\n\t};\n\t\n\tTelemeter.prototype.push = function(e) {\n\t  this.queue.push(e);\n\t  if (this.queue.length > this.maxQueueSize) {\n\t    this.queue.shift();\n\t  }\n\t};\n\t\n\tfunction getLevel(type, level) {\n\t  if (level) {\n\t    return level;\n\t  }\n\t  var defaultLevel = {\n\t    error: 'error',\n\t    manual: 'info'\n\t  };\n\t  return defaultLevel[type] || 'info';\n\t}\n\t\n\tmodule.exports = Telemeter;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\tvar helpers = __webpack_require__(12);\n\t\n\tvar defaultOptions = {\n\t  hostname: 'api.rollbar.com',\n\t  path: '/api/1/item/',\n\t  search: null,\n\t  version: '1',\n\t  protocol: 'https:',\n\t  port: 443\n\t};\n\t\n\t/**\n\t * Api is an object that encapsulates methods of communicating with\n\t * the Rollbar API.  It is a standard interface with some parts implemented\n\t * differently for server or browser contexts.  It is an object that should\n\t * be instantiated when used so it can contain non-global options that may\n\t * be different for another instance of RollbarApi.\n\t *\n\t * @param options {\n\t *    accessToken: the accessToken to use for posting items to rollbar\n\t *    endpoint: an alternative endpoint to send errors to\n\t *        must be a valid, fully qualified URL.\n\t *        The default is: https://api.rollbar.com/api/1/item\n\t *    proxy: if you wish to proxy requests provide an object\n\t *        with the following keys:\n\t *          host or hostname (required): foo.example.com\n\t *          port (optional): 123\n\t *          protocol (optional): https\n\t * }\n\t */\n\tfunction Api(options, t, u, j) {\n\t  this.options = options;\n\t  this.transport = t;\n\t  this.url = u;\n\t  this.jsonBackup = j;\n\t  this.accessToken = options.accessToken;\n\t  this.transportOptions = _getTransport(options, u);\n\t}\n\t\n\t/**\n\t *\n\t * @param data\n\t * @param callback\n\t */\n\tApi.prototype.postItem = function(data, callback) {\n\t  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n\t  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n\t  this.transport.post(this.accessToken, transportOptions, payload, callback);\n\t};\n\t\n\tApi.prototype.configure = function(options) {\n\t  var oldOptions = this.oldOptions;\n\t  this.options = _.extend(true, {}, oldOptions, options);\n\t  this.transportOptions = _getTransport(this.options, this.url);\n\t  if (this.options.accessToken !== undefined) {\n\t    this.accessToken = this.options.accessToken;\n\t  }\n\t  return this;\n\t};\n\t\n\tfunction _getTransport(options, url) {\n\t  return helpers.getTransportFromOptions(options, defaultOptions, url);\n\t}\n\t\n\tmodule.exports = Api;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\t\n\tfunction buildPayload(accessToken, data, jsonBackup) {\n\t  if (_.isType(data.context, 'object')) {\n\t    var contextResult = _.stringify(data.context, jsonBackup);\n\t    if (contextResult.error) {\n\t      data.context = 'Error: could not serialize \\'context\\'';\n\t    } else {\n\t      data.context = contextResult.value || '';\n\t    }\n\t    if (data.context.length > 255) {\n\t      data.context = data.context.substr(0, 255);\n\t    }\n\t  }\n\t  return {\n\t    access_token: accessToken,\n\t    data: data\n\t  };\n\t}\n\t\n\tfunction getTransportFromOptions(options, defaults, url) {\n\t  var hostname = defaults.hostname;\n\t  var protocol = defaults.protocol;\n\t  var port = defaults.port;\n\t  var path = defaults.path;\n\t  var search = defaults.search;\n\t\n\t  var proxy = options.proxy;\n\t  if (options.endpoint) {\n\t    var opts = url.parse(options.endpoint);\n\t    hostname = opts.hostname;\n\t    protocol = opts.protocol;\n\t    port = opts.port;\n\t    path = opts.pathname;\n\t    search = opts.search;\n\t  }\n\t  return {\n\t    hostname: hostname,\n\t    protocol: protocol,\n\t    port: port,\n\t    path: path,\n\t    search: search,\n\t    proxy: proxy\n\t  };\n\t}\n\t\n\tfunction transportOptions(transport, method) {\n\t  var protocol = transport.protocol || 'https:';\n\t  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);\n\t  var hostname = transport.hostname;\n\t  var path = transport.path;\n\t  if (transport.search) {\n\t    path = path + transport.search;\n\t  }\n\t  if (transport.proxy) {\n\t    path = protocol + '//' + hostname + path;\n\t    hostname = transport.proxy.host || transport.proxy.hostname;\n\t    port = transport.proxy.port;\n\t    protocol = transport.proxy.protocol || protocol;\n\t  }\n\t  return {\n\t    protocol: protocol,\n\t    hostname: hostname,\n\t    path: path,\n\t    port: port,\n\t    method: method\n\t  };\n\t}\n\t\n\tfunction appendPathToPath(base, path) {\n\t  var baseTrailingSlash = /\\/$/.test(base);\n\t  var pathBeginningSlash = /^\\//.test(path);\n\t\n\t  if (baseTrailingSlash && pathBeginningSlash) {\n\t    path = path.substring(1);\n\t  } else if (!baseTrailingSlash && !pathBeginningSlash) {\n\t    path = '/' + path;\n\t  }\n\t\n\t  return base + path;\n\t}\n\t\n\tmodule.exports = {\n\t  buildPayload: buildPayload,\n\t  getTransportFromOptions: getTransportFromOptions,\n\t  transportOptions: transportOptions,\n\t  appendPathToPath: appendPathToPath\n\t};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/* eslint-disable no-console */\n\t__webpack_require__(14);\n\tvar detection = __webpack_require__(15);\n\tvar _ = __webpack_require__(6);\n\t\n\tfunction error() {\n\t  var args = Array.prototype.slice.call(arguments, 0);\n\t  args.unshift('Rollbar:');\n\t  if (detection.ieVersion() <= 8) {\n\t    console.error(_.formatArgsAsString(args));\n\t  } else {\n\t    console.error.apply(console, args);\n\t  }\n\t}\n\t\n\tfunction info() {\n\t  var args = Array.prototype.slice.call(arguments, 0);\n\t  args.unshift('Rollbar:');\n\t  if (detection.ieVersion() <= 8) {\n\t    console.info(_.formatArgsAsString(args));\n\t  } else {\n\t    console.info.apply(console, args);\n\t  }\n\t}\n\t\n\tfunction log() {\n\t  var args = Array.prototype.slice.call(arguments, 0);\n\t  args.unshift('Rollbar:');\n\t  if (detection.ieVersion() <= 8) {\n\t    console.log(_.formatArgsAsString(args));\n\t  } else {\n\t    console.log.apply(console, args);\n\t  }\n\t}\n\t\n\t/* eslint-enable no-console */\n\t\n\tmodule.exports = {\n\t  error: error,\n\t  info: info,\n\t  log: log\n\t};\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t// Console-polyfill. MIT license.\n\t// https://github.com/paulmillr/console-polyfill\n\t// Make it safe to do console.log() always.\n\t(function(global) {\n\t  'use strict';\n\t  if (!global.console) {\n\t    global.console = {};\n\t  }\n\t  var con = global.console;\n\t  var prop, method;\n\t  var dummy = function() {};\n\t  var properties = ['memory'];\n\t  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n\t     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n\t     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n\t  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n\t  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n\t  // Using `this` for web workers & supports Browserify / Webpack.\n\t})(typeof window === 'undefined' ? this : window);\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// This detection.js module is used to encapsulate any ugly browser/feature\n\t// detection we may need to do.\n\t\n\t// Figure out which version of IE we're using, if any.\n\t// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n\t// Will return an integer on IE (i.e. 8)\n\t// Will return undefined otherwise\n\tfunction getIEVersion() {\n\t\tvar undef;\n\t\tif (!document) {\n\t\t\treturn undef;\n\t\t}\n\t\n\t  var v = 3,\n\t    div = document.createElement('div'),\n\t    all = div.getElementsByTagName('i');\n\t\n\t  while (\n\t    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n\t      all[0]\n\t    );\n\t\n\t  return v > 4 ? v : undef;\n\t}\n\t\n\tvar Detection = {\n\t  ieVersion: getIEVersion\n\t};\n\t\n\tmodule.exports = Detection;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction captureUncaughtExceptions(window, handler, shim) {\n\t  if (!window) { return; }\n\t  var oldOnError;\n\t\n\t  if (typeof handler._rollbarOldOnError === 'function') {\n\t    oldOnError = handler._rollbarOldOnError;\n\t  } else if (window.onerror && !window.onerror.belongsToShim) {\n\t    oldOnError = window.onerror;\n\t    handler._rollbarOldOnError = oldOnError;\n\t  }\n\t\n\t  var fn = function() {\n\t    var args = Array.prototype.slice.call(arguments, 0);\n\t    _rollbarWindowOnError(window, handler, oldOnError, args);\n\t  };\n\t  fn.belongsToShim = shim;\n\t  window.onerror = fn;\n\t}\n\t\n\tfunction _rollbarWindowOnError(window, r, old, args) {\n\t  if (window._rollbarWrappedError) {\n\t    if (!args[4]) {\n\t      args[4] = window._rollbarWrappedError;\n\t    }\n\t    if (!args[5]) {\n\t      args[5] = window._rollbarWrappedError._rollbarContext;\n\t    }\n\t    window._rollbarWrappedError = null;\n\t  }\n\t\n\t  r.handleUncaughtException.apply(r, args);\n\t  if (old) {\n\t    old.apply(window, args);\n\t  }\n\t}\n\t\n\tfunction captureUnhandledRejections(window, handler, shim) {\n\t  if (!window) { return; }\n\t\n\t  if (typeof window._rollbarURH === 'function' && window._rollbarURH.belongsToShim) {\n\t    window.removeEventListener('unhandledrejection', window._rollbarURH);\n\t  }\n\t\n\t  var rejectionHandler = function (evt) {\n\t    var reason, promise, detail;\n\t    try {\n\t      reason = evt.reason;\n\t    } catch (e) {\n\t      reason = undefined;\n\t    }\n\t    try {\n\t      promise = evt.promise;\n\t    } catch (e) {\n\t      promise = '[unhandledrejection] error getting `promise` from event';\n\t    }\n\t    try {\n\t      detail = evt.detail;\n\t      if (!reason && detail) {\n\t        reason = detail.reason;\n\t        promise = detail.promise;\n\t      }\n\t    } catch (e) {\n\t      detail = '[unhandledrejection] error getting `detail` from event';\n\t    }\n\t    if (!reason) {\n\t      reason = '[unhandledrejection] error getting `reason` from event';\n\t    }\n\t\n\t    if (handler && handler.handleUnhandledRejection) {\n\t      handler.handleUnhandledRejection(reason, promise);\n\t    }\n\t  };\n\t  rejectionHandler.belongsToShim = shim;\n\t  window._rollbarURH = rejectionHandler;\n\t  window.addEventListener('unhandledrejection', rejectionHandler);\n\t}\n\t\n\tfunction wrapGlobals(window, handler, shim) {\n\t  if (!window) { return; }\n\t  // Adapted from https://github.com/bugsnag/bugsnag-js\n\t  var globals = 'EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload'.split(',');\n\t  var i, global;\n\t  for (i = 0; i < globals.length; ++i) {\n\t    global = globals[i];\n\t\n\t    if (window[global] && window[global].prototype) {\n\t      _extendListenerPrototype(handler, window[global].prototype, shim);\n\t    }\n\t  }\n\t}\n\t\n\tfunction _extendListenerPrototype(handler, prototype, shim) {\n\t  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n\t    var oldAddEventListener = prototype.addEventListener;\n\t    while (oldAddEventListener._rollbarOldAdd && oldAddEventListener.belongsToShim) {\n\t      oldAddEventListener = oldAddEventListener._rollbarOldAdd;\n\t    }\n\t    var addFn = function(event, callback, bubble) {\n\t      oldAddEventListener.call(this, event, handler.wrap(callback), bubble);\n\t    };\n\t    addFn._rollbarOldAdd = oldAddEventListener;\n\t    addFn.belongsToShim = shim;\n\t    prototype.addEventListener = addFn;\n\t\n\t    var oldRemoveEventListener = prototype.removeEventListener;\n\t    while (oldRemoveEventListener._rollbarOldRemove && oldRemoveEventListener.belongsToShim) {\n\t      oldRemoveEventListener = oldRemoveEventListener._rollbarOldRemove;\n\t    }\n\t    var removeFn = function(event, callback, bubble) {\n\t      oldRemoveEventListener.call(this, event, callback && callback._rollbar_wrapped || callback, bubble);\n\t    };\n\t    removeFn._rollbarOldRemove = oldRemoveEventListener;\n\t    removeFn.belongsToShim = shim;\n\t    prototype.removeEventListener = removeFn;\n\t  }\n\t}\n\t\n\tmodule.exports = {\n\t  captureUncaughtExceptions: captureUncaughtExceptions,\n\t  captureUnhandledRejections: captureUnhandledRejections,\n\t  wrapGlobals: wrapGlobals\n\t};\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\tvar logger = __webpack_require__(13);\n\t\n\t/*\n\t * accessToken may be embedded in payload but that should not\n\t *   be assumed\n\t *\n\t * options: {\n\t *   hostname\n\t *   protocol\n\t *   path\n\t *   port\n\t *   method\n\t * }\n\t *\n\t *  params is an object containing key/value pairs. These\n\t *    will be appended to the path as 'key=value&key=value'\n\t *\n\t * payload is an unserialized object\n\t */\n\t\n\tfunction get(accessToken, options, params, callback, requestFactory) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() {};\n\t  }\n\t  _.addParamsAndAccessTokenToPath(accessToken, options, params);\n\t\n\t  var method = 'GET';\n\t  var url = _.formatUrl(options);\n\t  _makeRequest(accessToken, url, method, null, callback, requestFactory);\n\t}\n\t\n\tfunction post(accessToken, options, payload, callback, requestFactory) {\n\t  if (!callback || !_.isFunction(callback)) {\n\t    callback = function() {};\n\t  }\n\t\n\t  if (!payload) {\n\t    return callback(new Error('Cannot send empty request'));\n\t  }\n\t\n\t  var stringifyResult = _.stringify(payload);\n\t  if (stringifyResult.error) {\n\t    return callback(stringifyResult.error);\n\t  }\n\t\n\t  var writeData = stringifyResult.value;\n\t  var method = 'POST';\n\t  var url = _.formatUrl(options);\n\t  _makeRequest(accessToken, url, method, writeData, callback, requestFactory);\n\t}\n\t\n\tfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n\t  var request;\n\t  if (requestFactory) {\n\t    request = requestFactory();\n\t  } else {\n\t    request = _createXMLHTTPObject();\n\t  }\n\t  if (!request) {\n\t    // Give up, no way to send requests\n\t    return callback(new Error('No way to send a request'));\n\t  }\n\t  try {\n\t    try {\n\t      var onreadystatechange = function() {\n\t        try {\n\t          if (onreadystatechange && request.readyState === 4) {\n\t            onreadystatechange = undefined;\n\t\n\t            var parseResponse = _.jsonParse(request.responseText);\n\t            if (_isSuccess(request)) {\n\t              callback(parseResponse.error, parseResponse.value);\n\t              return;\n\t            } else if (_isNormalFailure(request)) {\n\t              if (request.status === 403) {\n\t                // likely caused by using a server access token\n\t                var message = parseResponse.value && parseResponse.value.message;\n\t                logger.error(message);\n\t              }\n\t              // return valid http status codes\n\t              callback(new Error(String(request.status)));\n\t            } else {\n\t              // IE will return a status 12000+ on some sort of connection failure,\n\t              // so we return a blank error\n\t              // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n\t              var msg = 'XHR response had no status code (likely connection failure)';\n\t              callback(_newRetriableError(msg));\n\t            }\n\t          }\n\t        } catch (ex) {\n\t          //jquery source mentions firefox may error out while accessing the\n\t          //request members if there is a network error\n\t          //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n\t          var exc;\n\t          if (ex && ex.stack) {\n\t            exc = ex;\n\t          } else {\n\t            exc = new Error(ex);\n\t          }\n\t          callback(exc);\n\t        }\n\t      };\n\t\n\t      request.open(method, url, true);\n\t      if (request.setRequestHeader) {\n\t        request.setRequestHeader('Content-Type', 'application/json');\n\t        request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n\t      }\n\t      request.onreadystatechange = onreadystatechange;\n\t      request.send(data);\n\t    } catch (e1) {\n\t      // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n\t      if (typeof XDomainRequest !== 'undefined') {\n\t\n\t        // Assume we are in a really old browser which has a bunch of limitations:\n\t        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\t\n\t        // Extreme paranoia: if we have XDomainRequest then we have a window, but just in case\n\t        if (!window || !window.location) {\n\t          return callback(new Error('No window available during request, unknown environment'));\n\t        }\n\t\n\t        // If the current page is http, try and send over http\n\t        if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n\t          url = 'http' + url.substring(5);\n\t        }\n\t\n\t        var xdomainrequest = new XDomainRequest();\n\t        xdomainrequest.onprogress = function() {};\n\t        xdomainrequest.ontimeout = function() {\n\t          var msg = 'Request timed out';\n\t          var code = 'ETIMEDOUT';\n\t          callback(_newRetriableError(msg, code));\n\t        };\n\t        xdomainrequest.onerror = function() {\n\t          callback(new Error('Error during request'));\n\t        };\n\t        xdomainrequest.onload = function() {\n\t          var parseResponse = _.jsonParse(xdomainrequest.responseText);\n\t          callback(parseResponse.error, parseResponse.value);\n\t        };\n\t        xdomainrequest.open(method, url, true);\n\t        xdomainrequest.send(data);\n\t      } else {\n\t        callback(new Error('Cannot find a method to transport a request'));\n\t      }\n\t    }\n\t  } catch (e2) {\n\t    callback(e2);\n\t  }\n\t}\n\t\n\tfunction _createXMLHTTPObject() {\n\t  /* global ActiveXObject:false */\n\t\n\t  var factories = [\n\t    function () {\n\t      return new XMLHttpRequest();\n\t    },\n\t    function () {\n\t      return new ActiveXObject('Msxml2.XMLHTTP');\n\t    },\n\t    function () {\n\t      return new ActiveXObject('Msxml3.XMLHTTP');\n\t    },\n\t    function () {\n\t      return new ActiveXObject('Microsoft.XMLHTTP');\n\t    }\n\t  ];\n\t  var xmlhttp;\n\t  var i;\n\t  var numFactories = factories.length;\n\t  for (i = 0; i < numFactories; i++) {\n\t    /* eslint-disable no-empty */\n\t    try {\n\t      xmlhttp = factories[i]();\n\t      break;\n\t    } catch (e) {\n\t      // pass\n\t    }\n\t    /* eslint-enable no-empty */\n\t  }\n\t  return xmlhttp;\n\t}\n\t\n\tfunction _isSuccess(r) {\n\t  return r && r.status && r.status === 200;\n\t}\n\t\n\tfunction _isNormalFailure(r) {\n\t  return r && _.isType(r.status, 'number') && r.status >= 400 && r.status < 600;\n\t}\n\t\n\tfunction _newRetriableError(message, code) {\n\t  var err = new Error(message);\n\t  err.code = code || 'ENOTFOUND';\n\t  return err;\n\t}\n\t\n\tmodule.exports = {\n\t  get: get,\n\t  post: post\n\t};\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t// See https://nodejs.org/docs/latest/api/url.html\n\tfunction parse(url) {\n\t  var result = {\n\t    protocol: null, auth: null, host: null, path: null,\n\t    hash: null, href: url, hostname: null, port: null,\n\t    pathname: null, search: null, query: null\n\t  };\n\t\n\t  var i, last;\n\t  i = url.indexOf('//');\n\t  if (i !== -1) {\n\t    result.protocol = url.substring(0,i);\n\t    last = i+2;\n\t  } else {\n\t    last = 0;\n\t  }\n\t  \n\t  i = url.indexOf('@', last);\n\t  if (i !== -1) {\n\t    result.auth = url.substring(last, i);\n\t    last = i+1;\n\t  }\n\t\n\t  i = url.indexOf('/', last);\n\t  if (i === -1) {\n\t    i = url.indexOf('?', last);\n\t    if (i === -1) {\n\t      i = url.indexOf('#', last);\n\t      if (i === -1) {\n\t        result.host = url.substring(last);\n\t      } else {\n\t        result.host = url.substring(last, i);\n\t        result.hash = url.substring(i);\n\t      }\n\t      result.hostname = result.host.split(':')[0];\n\t      result.port = result.host.split(':')[1];\n\t      if (result.port) {\n\t        result.port = parseInt(result.port, 10);\n\t      }\n\t      return result;\n\t    } else {\n\t      result.host = url.substring(last, i);\n\t      result.hostname = result.host.split(':')[0];\n\t      result.port = result.host.split(':')[1];\n\t      if (result.port) {\n\t        result.port = parseInt(result.port, 10);\n\t      }\n\t      last = i;\n\t    }\n\t  } else {\n\t    result.host = url.substring(last, i);\n\t    result.hostname = result.host.split(':')[0];\n\t    result.port = result.host.split(':')[1];\n\t    if (result.port) {\n\t      result.port = parseInt(result.port, 10);\n\t    }\n\t    last = i;\n\t  }\n\t\n\t  i = url.indexOf('#', last);\n\t  if (i === -1) {\n\t    result.path = url.substring(last);\n\t  } else {\n\t    result.path = url.substring(last, i);\n\t    result.hash = url.substring(i);\n\t  }\n\t\n\t  if (result.path) {\n\t    var pathParts = result.path.split('?');\n\t    result.pathname = pathParts[0];\n\t    result.query = pathParts[1];\n\t    result.search = result.query ? '?' + result.query : null;\n\t  }\n\t  return result;\n\t}\n\t\n\tmodule.exports = {\n\t  parse: parse\n\t};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\tvar errorParser = __webpack_require__(20);\n\tvar logger = __webpack_require__(13);\n\t\n\tfunction handleItemWithError(item, options, callback) {\n\t  item.data = item.data || {};\n\t  if (item.err) {\n\t    try {\n\t      item.stackInfo = item.err._savedStackTrace || errorParser.parse(item.err);\n\t    } catch (e)\n\t    /* istanbul ignore next */\n\t    {\n\t      logger.error('Error while parsing the error object.', e);\n\t      item.message = item.err.message || item.err.description || item.message || String(item.err);\n\t      delete item.err;\n\t    }\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction ensureItemHasSomethingToSay(item, options, callback) {\n\t  if (!item.message && !item.stackInfo && !item.custom) {\n\t    callback(new Error('No message, stack info, or custom data'), null);\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction addBaseInfo(item, options, callback) {\n\t  var environment = (options.payload && options.payload.environment) || options.environment;\n\t  item.data = _.extend(true, {}, item.data, {\n\t    environment: environment,\n\t    level: item.level,\n\t    endpoint: options.endpoint,\n\t    platform: 'browser',\n\t    framework: 'browser-js',\n\t    language: 'javascript',\n\t    server: {},\n\t    uuid: item.uuid,\n\t    notifier: {\n\t      name: 'rollbar-browser-js',\n\t      version: options.version\n\t    }\n\t  });\n\t  callback(null, item);\n\t}\n\t\n\tfunction addRequestInfo(window) {\n\t  return function(item, options, callback) {\n\t    if (!window || !window.location) {\n\t      return callback(null, item);\n\t    }\n\t    _.set(item, 'data.request', {\n\t      url: window.location.href,\n\t      query_string: window.location.search,\n\t      user_ip: '$remote_ip'\n\t    });\n\t    callback(null, item);\n\t  };\n\t}\n\t\n\tfunction addClientInfo(window) {\n\t  return function(item, options, callback) {\n\t    if (!window) {\n\t      return callback(null, item);\n\t    }\n\t    var nav = window.navigator || {};\n\t    var scr = window.screen || {};\n\t    _.set(item, 'data.client', {\n\t      runtime_ms: item.timestamp - window._rollbarStartTime,\n\t      timestamp: Math.round(item.timestamp / 1000),\n\t      javascript: {\n\t        browser: nav.userAgent,\n\t        language: nav.language,\n\t        cookie_enabled: nav.cookieEnabled,\n\t        screen: {\n\t          width: scr.width,\n\t          height: scr.height\n\t        }\n\t      }\n\t    });\n\t    callback(null, item);\n\t  };\n\t}\n\t\n\tfunction addPluginInfo(window) {\n\t  return function(item, options, callback) {\n\t    if (!window || !window.navigator) {\n\t      return callback(null, item);\n\t    }\n\t    var plugins = [];\n\t    var navPlugins = window.navigator.plugins || [];\n\t    var cur;\n\t    for (var i=0, l=navPlugins.length; i < l; ++i) {\n\t      cur = navPlugins[i];\n\t      plugins.push({name: cur.name, description: cur.description});\n\t    }\n\t    _.set(item, 'data.client.javascript.plugins', plugins);\n\t    callback(null, item);\n\t  };\n\t}\n\t\n\tfunction addBody(item, options, callback) {\n\t  if (item.stackInfo) {\n\t    addBodyTrace(item, options, callback);\n\t  } else {\n\t    addBodyMessage(item, options, callback);\n\t  }\n\t}\n\t\n\tfunction addBodyMessage(item, options, callback) {\n\t  var message = item.message;\n\t  var custom = item.custom;\n\t\n\t  if (!message) {\n\t    if (custom) {\n\t      var scrubFields = options.scrubFields;\n\t      var messageResult = _.stringify(_.scrub(custom, scrubFields));\n\t      message = messageResult.error || messageResult.value || '';\n\t    } else {\n\t      message = '';\n\t    }\n\t  }\n\t  var result = {\n\t    body: message\n\t  };\n\t\n\t  if (custom) {\n\t    result.extra = _.extend(true, {}, custom);\n\t  }\n\t\n\t  _.set(item, 'data.body', {message: result});\n\t  callback(null, item);\n\t}\n\t\n\t\n\tfunction addBodyTrace(item, options, callback) {\n\t  var description = item.data.description;\n\t  var stackInfo = item.stackInfo;\n\t  var custom = item.custom;\n\t\n\t  var guess = errorParser.guessErrorClass(stackInfo.message);\n\t  var className = stackInfo.name || guess[0];\n\t  var message = guess[1];\n\t  var trace = {\n\t    exception: {\n\t      'class': className,\n\t      message: message\n\t    }\n\t  };\n\t\n\t  if (description) {\n\t    trace.exception.description = description;\n\t  }\n\t\n\t  // Transform a TraceKit stackInfo object into a Rollbar trace\n\t  var stack = stackInfo.stack;\n\t  if (stack && stack.length === 0 && item._unhandledStackInfo && item._unhandledStackInfo.stack) {\n\t    stack = item._unhandledStackInfo.stack;\n\t  }\n\t  if (stack) {\n\t    if (stack.length === 0) {\n\t      trace.exception.stack = stackInfo.rawStack;\n\t      trace.exception.raw = String(stackInfo.rawException);\n\t    }\n\t    var stackFrame;\n\t    var frame;\n\t    var code;\n\t    var pre;\n\t    var post;\n\t    var contextLength;\n\t    var i, mid;\n\t\n\t    trace.frames = [];\n\t    for (i = 0; i < stack.length; ++i) {\n\t      stackFrame = stack[i];\n\t      frame = {\n\t        filename: stackFrame.url ? _.sanitizeUrl(stackFrame.url) : '(unknown)',\n\t        lineno: stackFrame.line || null,\n\t        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n\t        colno: stackFrame.column\n\t      };\n\t      if (frame.method && frame.method.endsWith && frame.method.endsWith('_rollbar_wrapped')) {\n\t        continue;\n\t      }\n\t\n\t      code = pre = post = null;\n\t      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n\t      if (contextLength) {\n\t        mid = Math.floor(contextLength / 2);\n\t        pre = stackFrame.context.slice(0, mid);\n\t        code = stackFrame.context[mid];\n\t        post = stackFrame.context.slice(mid);\n\t      }\n\t\n\t      if (code) {\n\t        frame.code = code;\n\t      }\n\t\n\t      if (pre || post) {\n\t        frame.context = {};\n\t        if (pre && pre.length) {\n\t          frame.context.pre = pre;\n\t        }\n\t        if (post && post.length) {\n\t          frame.context.post = post;\n\t        }\n\t      }\n\t\n\t      if (stackFrame.args) {\n\t        frame.args = stackFrame.args;\n\t      }\n\t\n\t      trace.frames.push(frame);\n\t    }\n\t\n\t    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n\t    trace.frames.reverse();\n\t\n\t    if (custom) {\n\t      trace.extra = _.extend(true, {}, custom);\n\t    }\n\t    _.set(item, 'data.body', {trace: trace});\n\t    callback(null, item);\n\t  } else {\n\t    item.message = className + ': ' + message;\n\t    addBodyMessage(item, options, callback);\n\t  }\n\t}\n\t\n\tfunction scrubPayload(item, options, callback) {\n\t  var scrubFields = options.scrubFields;\n\t  item.data = _.scrub(item.data, scrubFields);\n\t  callback(null, item);\n\t}\n\t\n\tmodule.exports = {\n\t  handleItemWithError: handleItemWithError,\n\t  ensureItemHasSomethingToSay: ensureItemHasSomethingToSay,\n\t  addBaseInfo: addBaseInfo,\n\t  addRequestInfo: addRequestInfo,\n\t  addClientInfo: addClientInfo,\n\t  addPluginInfo: addPluginInfo,\n\t  addBody: addBody,\n\t  scrubPayload: scrubPayload\n\t};\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar ErrorStackParser = __webpack_require__(21);\n\t\n\tvar UNKNOWN_FUNCTION = '?';\n\tvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\t\n\tfunction guessFunctionName() {\n\t  return UNKNOWN_FUNCTION;\n\t}\n\t\n\t\n\tfunction gatherContext() {\n\t  return null;\n\t}\n\t\n\t\n\tfunction Frame(stackFrame) {\n\t  var data = {};\n\t\n\t  data._stackFrame = stackFrame;\n\t\n\t  data.url = stackFrame.fileName;\n\t  data.line = stackFrame.lineNumber;\n\t  data.func = stackFrame.functionName;\n\t  data.column = stackFrame.columnNumber;\n\t  data.args = stackFrame.args;\n\t\n\t  data.context = gatherContext(data.url, data.line);\n\t\n\t  return data;\n\t}\n\t\n\t\n\tfunction Stack(exception) {\n\t  function getStack() {\n\t    var parserStack = [];\n\t    var exc;\n\t\n\t    if (!exception.stack) {\n\t      try {\n\t        throw exception;\n\t      } catch (e) {\n\t        exc = e;\n\t      }\n\t    } else {\n\t      exc = exception;\n\t    }\n\t\n\t    try {\n\t      parserStack = ErrorStackParser.parse(exc);\n\t    } catch(e) {\n\t      parserStack = [];\n\t    }\n\t\n\t    var stack = [];\n\t\n\t    for (var i = 0; i < parserStack.length; i++) {\n\t      stack.push(new Frame(parserStack[i]));\n\t    }\n\t\n\t    return stack;\n\t  }\n\t\n\t  return {\n\t    stack: getStack(),\n\t    message: exception.message,\n\t    name: exception.name,\n\t    rawStack: exception.stack,\n\t    rawException: exception\n\t  };\n\t}\n\t\n\t\n\tfunction parse(e) {\n\t  return new Stack(e);\n\t}\n\t\n\t\n\tfunction guessErrorClass(errMsg) {\n\t  if (!errMsg || !errMsg.match) {\n\t    return ['Unknown error. There was no error message to display.', ''];\n\t  }\n\t  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n\t  var errClass = '(unknown)';\n\t\n\t  if (errClassMatch) {\n\t    errClass = errClassMatch[errClassMatch.length - 1];\n\t    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n\t    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n\t  }\n\t  return [errClass, errMsg];\n\t}\n\t\n\t\n\tmodule.exports = {\n\t  guessFunctionName: guessFunctionName,\n\t  guessErrorClass: guessErrorClass,\n\t  gatherContext: gatherContext,\n\t  parse: parse,\n\t  Stack: Stack,\n\t  Frame: Frame\n\t};\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(22)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory(require('stackframe'));\n\t    } else {\n\t        root.ErrorStackParser = factory(root.StackFrame);\n\t    }\n\t}(this, function ErrorStackParser(StackFrame) {\n\t    'use strict';\n\t\n\t    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n\t    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n\t    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\t\n\t    function _map(array, fn, thisArg) {\n\t        if (typeof Array.prototype.map === 'function') {\n\t            return array.map(fn, thisArg);\n\t        } else {\n\t            var output = new Array(array.length);\n\t            for (var i = 0; i < array.length; i++) {\n\t                output[i] = fn.call(thisArg, array[i]);\n\t            }\n\t            return output;\n\t        }\n\t    }\n\t\n\t    function _filter(array, fn, thisArg) {\n\t        if (typeof Array.prototype.filter === 'function') {\n\t            return array.filter(fn, thisArg);\n\t        } else {\n\t            var output = [];\n\t            for (var i = 0; i < array.length; i++) {\n\t                if (fn.call(thisArg, array[i])) {\n\t                    output.push(array[i]);\n\t                }\n\t            }\n\t            return output;\n\t        }\n\t    }\n\t\n\t    return {\n\t        /**\n\t         * Given an Error object, extract the most information from it.\n\t         * @param error {Error}\n\t         * @return Array[StackFrame]\n\t         */\n\t        parse: function ErrorStackParser$$parse(error) {\n\t            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n\t                return this.parseOpera(error);\n\t            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n\t                return this.parseV8OrIE(error);\n\t            } else if (error.stack) {\n\t                return this.parseFFOrSafari(error);\n\t            } else {\n\t                throw new Error('Cannot parse given Error object');\n\t            }\n\t        },\n\t\n\t        /**\n\t         * Separate line and column numbers from a URL-like string.\n\t         * @param urlLike String\n\t         * @return Array[String]\n\t         */\n\t        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n\t            // Fail-fast but return locations like \"(native)\"\n\t            if (urlLike.indexOf(':') === -1) {\n\t                return [urlLike];\n\t            }\n\t\n\t            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n\t            var lastNumber = locationParts.pop();\n\t            var possibleNumber = locationParts[locationParts.length - 1];\n\t            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n\t                var lineNumber = locationParts.pop();\n\t                return [locationParts.join(':'), lineNumber, lastNumber];\n\t            } else {\n\t                return [locationParts.join(':'), lastNumber, undefined];\n\t            }\n\t        },\n\t\n\t        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !!line.match(CHROME_IE_STACK_REGEXP);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                if (line.indexOf('(eval ') > -1) {\n\t                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n\t                }\n\t                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionName = tokens.join(' ') || undefined;\n\t                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\t\n\t                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n\t            }, this);\n\t        },\n\t\n\t        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                // Throw away eval information until we implement stacktrace.js/stackframe#8\n\t                if (line.indexOf(' > eval') > -1) {\n\t                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n\t                }\n\t\n\t                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n\t                    // Safari eval frames only have function names and nothing else\n\t                    return new StackFrame(line);\n\t                } else {\n\t                    var tokens = line.split('@');\n\t                    var locationParts = this.extractLocation(tokens.pop());\n\t                    var functionName = tokens.shift() || undefined;\n\t                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n\t                }\n\t            }, this);\n\t        },\n\t\n\t        parseOpera: function ErrorStackParser$$parseOpera(e) {\n\t            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n\t                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n\t                return this.parseOpera9(e);\n\t            } else if (!e.stack) {\n\t                return this.parseOpera10(e);\n\t            } else {\n\t                return this.parseOpera11(e);\n\t            }\n\t        },\n\t\n\t        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n\t            var lines = e.message.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 2, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n\t            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n\t            var lines = e.stacktrace.split('\\n');\n\t            var result = [];\n\t\n\t            for (var i = 0, len = lines.length; i < len; i += 2) {\n\t                var match = lineRE.exec(lines[i]);\n\t                if (match) {\n\t                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n\t                }\n\t            }\n\t\n\t            return result;\n\t        },\n\t\n\t        // Opera 10.65+ Error.stack very similar to FF/Safari\n\t        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n\t            var filtered = _filter(error.stack.split('\\n'), function (line) {\n\t                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n\t                    !line.match(/^Error created at/);\n\t            }, this);\n\t\n\t            return _map(filtered, function (line) {\n\t                var tokens = line.split('@');\n\t                var locationParts = this.extractLocation(tokens.pop());\n\t                var functionCall = (tokens.shift() || '');\n\t                var functionName = functionCall\n\t                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n\t                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n\t                var argsRaw;\n\t                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n\t                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n\t                }\n\t                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n\t                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n\t            }, this);\n\t        }\n\t    };\n\t}));\n\t\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {\n\t    'use strict';\n\t    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\t\n\t    /* istanbul ignore next */\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory();\n\t    } else {\n\t        root.StackFrame = factory();\n\t    }\n\t}(this, function () {\n\t    'use strict';\n\t    function _isNumber(n) {\n\t        return !isNaN(parseFloat(n)) && isFinite(n);\n\t    }\n\t\n\t    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n\t        if (functionName !== undefined) {\n\t            this.setFunctionName(functionName);\n\t        }\n\t        if (args !== undefined) {\n\t            this.setArgs(args);\n\t        }\n\t        if (fileName !== undefined) {\n\t            this.setFileName(fileName);\n\t        }\n\t        if (lineNumber !== undefined) {\n\t            this.setLineNumber(lineNumber);\n\t        }\n\t        if (columnNumber !== undefined) {\n\t            this.setColumnNumber(columnNumber);\n\t        }\n\t        if (source !== undefined) {\n\t            this.setSource(source);\n\t        }\n\t    }\n\t\n\t    StackFrame.prototype = {\n\t        getFunctionName: function () {\n\t            return this.functionName;\n\t        },\n\t        setFunctionName: function (v) {\n\t            this.functionName = String(v);\n\t        },\n\t\n\t        getArgs: function () {\n\t            return this.args;\n\t        },\n\t        setArgs: function (v) {\n\t            if (Object.prototype.toString.call(v) !== '[object Array]') {\n\t                throw new TypeError('Args must be an Array');\n\t            }\n\t            this.args = v;\n\t        },\n\t\n\t        // NOTE: Property name may be misleading as it includes the path,\n\t        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n\t        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n\t        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n\t        getFileName: function () {\n\t            return this.fileName;\n\t        },\n\t        setFileName: function (v) {\n\t            this.fileName = String(v);\n\t        },\n\t\n\t        getLineNumber: function () {\n\t            return this.lineNumber;\n\t        },\n\t        setLineNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Line Number must be a Number');\n\t            }\n\t            this.lineNumber = Number(v);\n\t        },\n\t\n\t        getColumnNumber: function () {\n\t            return this.columnNumber;\n\t        },\n\t        setColumnNumber: function (v) {\n\t            if (!_isNumber(v)) {\n\t                throw new TypeError('Column Number must be a Number');\n\t            }\n\t            this.columnNumber = Number(v);\n\t        },\n\t\n\t        getSource: function () {\n\t            return this.source;\n\t        },\n\t        setSource: function (v) {\n\t            this.source = String(v);\n\t        },\n\t\n\t        toString: function() {\n\t            var functionName = this.getFunctionName() || '{anonymous}';\n\t            var args = '(' + (this.getArgs() || []).join(',') + ')';\n\t            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n\t            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n\t            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n\t            return functionName + args + fileName + lineNumber + columnNumber;\n\t        }\n\t    };\n\t\n\t    return StackFrame;\n\t}));\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\t\n\tfunction itemToPayload(item, options, callback) {\n\t  var payloadOptions = options.payload || {};\n\t  if (payloadOptions.body) {\n\t    delete payloadOptions.body;\n\t  }\n\t\n\t  var data = _.extend(true, {}, item.data, payloadOptions);\n\t  if (item._isUncaught) {\n\t    data._isUncaught = true;\n\t  }\n\t  if (item._originalArgs) {\n\t    data._originalArgs = item._originalArgs;\n\t  }\n\t  callback(null, data);\n\t}\n\t\n\tfunction addTelemetryData(item, options, callback) {\n\t  if (item.telemetryEvents) {\n\t    _.set(item, 'data.body.telemetry', item.telemetryEvents);\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction addMessageWithError(item, options, callback) {\n\t  if (!item.message) {\n\t    callback(null, item);\n\t    return;\n\t  }\n\t  var tracePath = 'data.body.trace_chain.0';\n\t  var trace = _.get(item, tracePath);\n\t  if (!trace) {\n\t    tracePath = 'data.body.trace';\n\t    trace = _.get(item, tracePath);\n\t  }\n\t  if (trace) {\n\t    if (!(trace.exception && trace.exception.description)) {\n\t      _.set(item, tracePath+'.exception.description', item.message);\n\t      callback(null, item);\n\t      return;\n\t    }\n\t    var extra = _.get(item, tracePath+'.extra') || {};\n\t    var newExtra =  _.extend(true, {}, extra, {message: item.message});\n\t    _.set(item, tracePath+'.extra', newExtra);\n\t  }\n\t  callback(null, item);\n\t}\n\t\n\tfunction userTransform(logger) {\n\t  return function(item, options, callback) {\n\t    var newItem = _.extend(true, {}, item);\n\t    try {\n\t      if (_.isFunction(options.transform)) {\n\t        options.transform(newItem.data);\n\t      }\n\t    } catch (e) {\n\t      options.transform = null;\n\t      logger.error('Error while calling custom transform() function. Removing custom transform().', e);\n\t      callback(null, item);\n\t      return;\n\t    }\n\t    callback(null, newItem);\n\t  }\n\t}\n\t\n\tfunction addConfigToPayload(item, options, callback) {\n\t  if (!options.sendConfig) {\n\t    return callback(null, item);\n\t  }\n\t  var configKey = '_rollbarConfig';\n\t  var custom = _.get(item, 'data.custom') || {};\n\t  custom[configKey] = options;\n\t  item.data.custom = custom;\n\t  callback(null, item);\n\t}\n\t\n\tmodule.exports = {\n\t  itemToPayload: itemToPayload,\n\t  addTelemetryData: addTelemetryData,\n\t  addMessageWithError: addMessageWithError,\n\t  userTransform: userTransform,\n\t  addConfigToPayload: addConfigToPayload\n\t};\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\tvar logger = __webpack_require__(13);\n\t\n\tfunction checkIgnore(item, settings) {\n\t  var level = item.level;\n\t  var levelVal = _.LEVELS[level] || 0;\n\t  var reportLevel = _.LEVELS[settings.reportLevel] || 0;\n\t\n\t  if (levelVal < reportLevel) {\n\t    return false;\n\t  }\n\t\n\t  if (_.get(settings, 'plugins.jquery.ignoreAjaxErrors')) {\n\t    return !_.get(item, 'body.message.extra.isAjax');\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction userCheckIgnore(item, settings) {\n\t  var isUncaught = !!item._isUncaught;\n\t  delete item._isUncaught;\n\t  var args = item._originalArgs;\n\t  delete item._originalArgs;\n\t  try {\n\t    if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {\n\t      return false;\n\t    }\n\t  } catch (e) {\n\t    settings.checkIgnore = null;\n\t    logger.error('Error while calling custom checkIgnore(), removing', e);\n\t  }\n\t  return true;\n\t}\n\t\n\tfunction urlIsNotBlacklisted(item, settings) {\n\t  return !urlIsOnAList(item, settings, 'blacklist');\n\t}\n\t\n\tfunction urlIsWhitelisted(item, settings) {\n\t  return urlIsOnAList(item, settings, 'whitelist');\n\t}\n\t\n\tfunction urlIsOnAList(item, settings, whiteOrBlack) {\n\t  // whitelist is the default\n\t  var black = false;\n\t  if (whiteOrBlack === 'blacklist') {\n\t    black = true;\n\t  }\n\t  var list, trace, frame, filename, frameLength, url, listLength, urlRegex;\n\t  var i, j;\n\t\n\t  try {\n\t    list = black ? settings.hostBlackList : settings.hostWhiteList;\n\t    listLength = list && list.length;\n\t    trace = _.get(item, 'body.trace');\n\t\n\t    // These two checks are important to come first as they are defaults\n\t    // in case the list is missing or the trace is missing or not well-formed\n\t    if (!list || listLength === 0) {\n\t      return !black;\n\t    }\n\t    if (!trace || !trace.frames || trace.frames.length === 0) {\n\t      return !black;\n\t    }\n\t\n\t    frameLength = trace.frames.length;\n\t    for (i = 0; i < frameLength; i++) {\n\t      frame = trace.frames[i];\n\t      filename = frame.filename;\n\t\n\t      if (!_.isType(filename, 'string')) {\n\t        return !black;\n\t      }\n\t\n\t      for (j = 0; j < listLength; j++) {\n\t        url = list[j];\n\t        urlRegex = new RegExp(url);\n\t\n\t        if (urlRegex.test(filename)) {\n\t          return true;\n\t        }\n\t      }\n\t    }\n\t  } catch (e)\n\t  /* istanbul ignore next */\n\t  {\n\t    if (black) {\n\t      settings.hostBlackList = null;\n\t    } else {\n\t      settings.hostWhiteList = null;\n\t    }\n\t    var listName = black ? 'hostBlackList' : 'hostWhiteList';\n\t    logger.error('Error while reading your configuration\\'s ' + listName + ' option. Removing custom ' + listName + '.', e);\n\t    return !black;\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction messageIsIgnored(item, settings) {\n\t  var exceptionMessage, i, ignoredMessages,\n\t      len, messageIsIgnored, rIgnoredMessage,\n\t      body, traceMessage, bodyMessage;\n\t\n\t  try {\n\t    messageIsIgnored = false;\n\t    ignoredMessages = settings.ignoredMessages;\n\t\n\t    if (!ignoredMessages || ignoredMessages.length === 0) {\n\t      return true;\n\t    }\n\t\n\t    body = item.body;\n\t    traceMessage = _.get(body, 'trace.exception.message');\n\t    bodyMessage = _.get(body, 'message.body');\n\t\n\t    exceptionMessage = traceMessage || bodyMessage;\n\t\n\t    if (!exceptionMessage){\n\t      return true;\n\t    }\n\t\n\t    len = ignoredMessages.length;\n\t    for (i = 0; i < len; i++) {\n\t      rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n\t      messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\t\n\t      if (messageIsIgnored) {\n\t        break;\n\t      }\n\t    }\n\t  } catch(e)\n\t  /* istanbul ignore next */\n\t  {\n\t    settings.ignoredMessages = null;\n\t    logger.error('Error while reading your configuration\\'s ignoredMessages option. Removing custom ignoredMessages.');\n\t  }\n\t\n\t  return !messageIsIgnored;\n\t}\n\t\n\tmodule.exports = {\n\t  checkIgnore: checkIgnore,\n\t  userCheckIgnore: userCheckIgnore,\n\t  urlIsNotBlacklisted: urlIsNotBlacklisted,\n\t  urlIsWhitelisted: urlIsWhitelisted,\n\t  messageIsIgnored: messageIsIgnored\n\t};\n\t\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(6);\n\tvar urlparser = __webpack_require__(18);\n\tvar domUtil = __webpack_require__(26);\n\t\n\tvar defaults = {\n\t  network: true,\n\t  networkResponseHeaders: false,\n\t  networkResponseBody: false,\n\t  networkRequestBody: false,\n\t  log: true,\n\t  dom: true,\n\t  navigation: true,\n\t  connectivity: true\n\t};\n\t\n\tfunction replace(obj, name, replacement, replacements, type) {\n\t  var orig = obj[name];\n\t  obj[name] = replacement(orig);\n\t  if (replacements) {\n\t    replacements[type].push([obj, name, orig]);\n\t  }\n\t}\n\t\n\tfunction restore(replacements, type) {\n\t  var b;\n\t  while (replacements[type].length) {\n\t    b = replacements[type].shift();\n\t    b[0][b[1]] = b[2];\n\t  }\n\t}\n\t\n\tfunction Instrumenter(options, telemeter, rollbar, _window, _document) {\n\t  var autoInstrument = options.autoInstrument;\n\t  if (options.enabled === false || autoInstrument === false) {\n\t    this.autoInstrument = {};\n\t  } else {\n\t    if (!_.isType(autoInstrument, 'object')) {\n\t      autoInstrument = defaults;\n\t    }\n\t    this.autoInstrument = _.extend(true, {}, defaults, autoInstrument);\n\t  }\n\t  this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n\t  this.telemetryScrubber = options.telemetryScrubber;\n\t  this.telemeter = telemeter;\n\t  this.rollbar = rollbar;\n\t  this._window = _window || {};\n\t  this._document = _document || {};\n\t  this.replacements = {\n\t    network: [],\n\t    log: [],\n\t    navigation: [],\n\t    connectivity: []\n\t  };\n\t  this.eventRemovers = {\n\t    dom: [],\n\t    connectivity: []\n\t  };\n\t\n\t  this._location = this._window.location;\n\t  this._lastHref = this._location && this._location.href;\n\t}\n\t\n\tInstrumenter.prototype.configure = function(options) {\n\t  var autoInstrument = options.autoInstrument;\n\t  var oldSettings = _.extend(true, {}, this.autoInstrument);\n\t  if (options.enabled === false || autoInstrument === false) {\n\t    this.autoInstrument = {};\n\t  } else {\n\t    if (!_.isType(autoInstrument, 'object')) {\n\t      autoInstrument = defaults;\n\t    }\n\t    this.autoInstrument = _.extend(true, {}, defaults, autoInstrument);\n\t  }\n\t  this.instrument(oldSettings);\n\t  if (options.scrubTelemetryInputs !== undefined) {\n\t    this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n\t  }\n\t  if (options.telemetryScrubber !== undefined) {\n\t    this.telemetryScrubber = options.telemetryScrubber;\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.instrument = function(oldSettings) {\n\t  if (this.autoInstrument.network && !(oldSettings && oldSettings.network)) {\n\t    this.instrumentNetwork();\n\t  } else if (!this.autoInstrument.network && oldSettings && oldSettings.network) {\n\t    this.deinstrumentNetwork();\n\t  }\n\t\n\t  if (this.autoInstrument.log && !(oldSettings && oldSettings.log)) {\n\t    this.instrumentConsole();\n\t  } else if (!this.autoInstrument.log && oldSettings && oldSettings.log) {\n\t    this.deinstrumentConsole();\n\t  }\n\t\n\t  if (this.autoInstrument.dom && !(oldSettings && oldSettings.dom)) {\n\t    this.instrumentDom();\n\t  } else if (!this.autoInstrument.dom && oldSettings && oldSettings.dom) {\n\t    this.deinstrumentDom();\n\t  }\n\t\n\t  if (this.autoInstrument.navigation && !(oldSettings && oldSettings.navigation)) {\n\t    this.instrumentNavigation();\n\t  } else if (!this.autoInstrument.navigation && oldSettings && oldSettings.navigation) {\n\t    this.deinstrumentNavigation();\n\t  }\n\t\n\t  if (this.autoInstrument.connectivity && !(oldSettings && oldSettings.connectivity)) {\n\t    this.instrumentConnectivity();\n\t  } else if (!this.autoInstrument.connectivity && oldSettings && oldSettings.connectivity) {\n\t    this.deinstrumentConnectivity();\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentNetwork = function() {\n\t  restore(this.replacements, 'network');\n\t};\n\t\n\tInstrumenter.prototype.instrumentNetwork = function() {\n\t  var self = this;\n\t\n\t  function wrapProp(prop, xhr) {\n\t    if (prop in xhr && _.isFunction(xhr[prop])) {\n\t      replace(xhr, prop, function(orig) {\n\t        return self.rollbar.wrap(orig);\n\t      });\n\t    }\n\t  }\n\t\n\t  if ('XMLHttpRequest' in this._window) {\n\t    var xhrp = this._window.XMLHttpRequest.prototype;\n\t    replace(xhrp, 'open', function(orig) {\n\t      return function(method, url) {\n\t        if (_.isType(url, 'string')) {\n\t          this.__rollbar_xhr = {\n\t            method: method,\n\t            url: url,\n\t            status_code: null,\n\t            start_time_ms: _.now(),\n\t            end_time_ms: null\n\t          };\n\t        }\n\t        return orig.apply(this, arguments);\n\t      };\n\t    }, this.replacements, 'network');\n\t\n\t    replace(xhrp, 'send', function(orig) {\n\t      /* eslint-disable no-unused-vars */\n\t      return function(data) {\n\t      /* eslint-enable no-unused-vars */\n\t        var xhr = this;\n\t\n\t        function onreadystatechangeHandler() {\n\t          if (xhr.__rollbar_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n\t            if (xhr.__rollbar_xhr.status_code === null) {\n\t              xhr.__rollbar_xhr.status_code = 0;\n\t              var requestData = null;\n\t              if (self.autoInstrument.networkRequestBody) {\n\t                requestData = data;\n\t              }\n\t              xhr.__rollbar_event = self.telemeter.captureNetwork(xhr.__rollbar_xhr, 'xhr', undefined, requestData);\n\t            }\n\t            if (xhr.readyState === 1) {\n\t              xhr.__rollbar_xhr.start_time_ms = _.now();\n\t            } else {\n\t              xhr.__rollbar_xhr.end_time_ms = _.now();\n\t\n\t              var headers = null;\n\t              if (self.autoInstrument.networkResponseHeaders) {\n\t                var headersConfig = self.autoInstrument.networkResponseHeaders;\n\t                headers = {};\n\t                try {\n\t                  var header, i;\n\t                  if (headersConfig === true) {\n\t                    var allHeaders = xhr.getAllResponseHeaders();\n\t                    if (allHeaders) {\n\t                      var arr = allHeaders.trim().split(/[\\r\\n]+/);\n\t                      var parts, value;\n\t                      for (i=0; i < arr.length; i++) {\n\t                        parts = arr[i].split(': ');\n\t                        header = parts.shift();\n\t                        value = parts.join(': ');\n\t                        headers[header] = value;\n\t                      }\n\t                    }\n\t                  } else {\n\t                    for (i=0; i < headersConfig.length; i++) {\n\t                      header = headersConfig[i];\n\t                      headers[header] = xhr.getResponseHeader(header);\n\t                    }\n\t                  }\n\t                } catch (e) {\n\t                  /* we ignore the errors here that could come from different\n\t                   * browser issues with the xhr methods */\n\t                }\n\t              }\n\t              var body = null;\n\t              if (self.autoInstrument.networkResponseBody) {\n\t                try {\n\t                  body = xhr.responseText;\n\t                } catch (e) {\n\t                  /* ignore errors from reading responseText */\n\t                }\n\t              }\n\t              var response = null;\n\t              if (body || headers) {\n\t                response = {};\n\t                if (body) {\n\t                  response.body = body;\n\t                }\n\t                if (headers) {\n\t                  response.headers = headers;\n\t                }\n\t              }\n\t              if (response) {\n\t                xhr.__rollbar_xhr.response = response;\n\t              }\n\t            }\n\t            try {\n\t              var code = xhr.status;\n\t              code = code === 1223 ? 204 : code;\n\t              xhr.__rollbar_xhr.status_code = code;\n\t              xhr.__rollbar_event.level = self.telemeter.levelFromStatus(code);\n\t            } catch (e) {\n\t              /* ignore possible exception from xhr.status */\n\t            }\n\t          }\n\t        }\n\t\n\t        wrapProp('onload', xhr);\n\t        wrapProp('onerror', xhr);\n\t        wrapProp('onprogress', xhr);\n\t\n\t        if ('onreadystatechange' in xhr && _.isFunction(xhr.onreadystatechange)) {\n\t          replace(xhr, 'onreadystatechange', function(orig) {\n\t            return self.rollbar.wrap(orig, undefined, onreadystatechangeHandler);\n\t          });\n\t        } else {\n\t          xhr.onreadystatechange = onreadystatechangeHandler;\n\t        }\n\t        return orig.apply(this, arguments);\n\t      }\n\t    }, this.replacements, 'network');\n\t  }\n\t\n\t  if ('fetch' in this._window) {\n\t    replace(this._window, 'fetch', function(orig) {\n\t      /* eslint-disable no-unused-vars */\n\t      return function(fn, t) {\n\t      /* eslint-enable no-unused-vars */\n\t        var args = new Array(arguments.length);\n\t        for (var i=0, len=args.length; i < len; i++) {\n\t          args[i] = arguments[i];\n\t        }\n\t        var input = args[0];\n\t        var method = 'GET';\n\t        var url;\n\t        if (_.isType(input, 'string')) {\n\t          url = input;\n\t        } else {\n\t          url = input.url;\n\t          if (input.method) {\n\t            method = input.method;\n\t          }\n\t        }\n\t        if (args[1] && args[1].method) {\n\t          method = args[1].method;\n\t        }\n\t        var metadata = {\n\t          method: method,\n\t          url: url,\n\t          status_code: null,\n\t          start_time_ms: _.now(),\n\t          end_time_ms: null\n\t        };\n\t        var requestData = null;\n\t        if (self.autoInstrument.networkRequestBody) {\n\t          if (args[1] && args[1].body) {\n\t            requestData = args[1].body;\n\t          } else if (args[0] && !_.isType(args[0], 'string') && args[0].body) {\n\t            requestData = args[0].body;\n\t          }\n\t        }\n\t        self.telemeter.captureNetwork(metadata, 'fetch', undefined, requestData);\n\t        return orig.apply(this, args).then(function (resp) {\n\t          metadata.end_time_ms = _.now();\n\t          metadata.status_code = resp.status;\n\t          var headers = null;\n\t          if (self.autoInstrument.networkResponseHeaders) {\n\t            var headersConfig = self.autoInstrument.networkResponseHeaders;\n\t            headers = {};\n\t            try {\n\t              if (headersConfig === true) {\n\t                // This is unsupported in IE so we can't do it\n\t                /*\n\t                var allHeaders = resp.headers.entries();\n\t                for (var pair of allHeaders) {\n\t                  headers[pair[0]] = pair[1];\n\t                }\n\t                */\n\t              } else {\n\t                for (var i=0; i < headersConfig.length; i++) {\n\t                  var header = headersConfig[i];\n\t                  headers[header] = resp.headers.get(header);\n\t                }\n\t              }\n\t            } catch (e) {\n\t              /* ignore probable IE errors */\n\t            }\n\t          }\n\t          var response = null;\n\t          if (headers) {\n\t            response = {\n\t              headers: headers\n\t            };\n\t          }\n\t          if (response) {\n\t            metadata.response = response;\n\t          }\n\t          return resp;\n\t        });\n\t      };\n\t    }, this.replacements, 'network');\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentConsole = function() {\n\t  if (!('console' in this._window && this._window.console.log)) {\n\t    return;\n\t  }\n\t  var b;\n\t  while (this.replacements['log'].length) {\n\t    b = this.replacements['log'].shift();\n\t    this._window.console[b[0]] = b[1];\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.instrumentConsole = function() {\n\t  if (!('console' in this._window && this._window.console.log)) {\n\t    return;\n\t  }\n\t\n\t  var self = this;\n\t  var c = this._window.console;\n\t\n\t  function wrapConsole(method) {\n\t    var orig = c[method];\n\t    var origConsole = c;\n\t    var level = method === 'warn' ? 'warning' : method;\n\t    c[method] = function() {\n\t      var args = Array.prototype.slice.call(arguments);\n\t      var message = _.formatArgsAsString(args);\n\t      self.telemeter.captureLog(message, level);\n\t      if (orig) {\n\t        Function.prototype.apply.call(orig, origConsole, args);\n\t      }\n\t    };\n\t    self.replacements['log'].push([method, orig]);\n\t  }\n\t  var methods = ['debug','info','warn','error','log'];\n\t  for (var i=0, len=methods.length; i < len; i++) {\n\t    wrapConsole(methods[i]);\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentDom = function() {\n\t  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n\t    return;\n\t  }\n\t  this.removeListeners('dom');\n\t};\n\t\n\tInstrumenter.prototype.instrumentDom = function() {\n\t  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n\t    return;\n\t  }\n\t  var clickHandler = this.handleClick.bind(this);\n\t  var blurHandler = this.handleBlur.bind(this);\n\t  this.addListener('dom', this._window, 'click', 'onclick', clickHandler, true);\n\t  this.addListener('dom', this._window, 'blur', 'onfocusout', blurHandler, true);\n\t};\n\t\n\tInstrumenter.prototype.handleClick = function(evt) {\n\t  try {\n\t    var e = domUtil.getElementFromEvent(evt, this._document);\n\t    var hasTag = e && e.tagName;\n\t    var anchorOrButton = domUtil.isDescribedElement(e, 'a') || domUtil.isDescribedElement(e, 'button');\n\t    if (hasTag && (anchorOrButton || domUtil.isDescribedElement(e, 'input', ['button', 'submit']))) {\n\t        this.captureDomEvent('click', e);\n\t    } else if (domUtil.isDescribedElement(e, 'input', ['checkbox', 'radio'])) {\n\t      this.captureDomEvent('input', e, e.value, e.checked);\n\t    }\n\t  } catch (exc) {\n\t    // TODO: Not sure what to do here\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.handleBlur = function(evt) {\n\t  try {\n\t    var e = domUtil.getElementFromEvent(evt, this._document);\n\t    if (e && e.tagName) {\n\t      if (domUtil.isDescribedElement(e, 'textarea')) {\n\t        this.captureDomEvent('input', e, e.value);\n\t      } else if (domUtil.isDescribedElement(e, 'select') && e.options && e.options.length) {\n\t        this.handleSelectInputChanged(e);\n\t      } else if (domUtil.isDescribedElement(e, 'input') && !domUtil.isDescribedElement(e, 'input', ['button', 'submit', 'hidden', 'checkbox', 'radio'])) {\n\t        this.captureDomEvent('input', e, e.value);\n\t      }\n\t    }\n\t  } catch (exc) {\n\t    // TODO: Not sure what to do here\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.handleSelectInputChanged = function(elem) {\n\t  if (elem.multiple) {\n\t    for (var i = 0; i < elem.options.length; i++) {\n\t      if (elem.options[i].selected) {\n\t        this.captureDomEvent('input', elem, elem.options[i].value);\n\t      }\n\t    }\n\t  } else if (elem.selectedIndex >= 0 && elem.options[elem.selectedIndex]) {\n\t    this.captureDomEvent('input', elem, elem.options[elem.selectedIndex].value);\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.captureDomEvent = function(subtype, element, value, isChecked) {\n\t  if (value !== undefined) {\n\t    if (this.scrubTelemetryInputs || (domUtil.getElementType(element) === 'password')) {\n\t      value = '[scrubbed]';\n\t    } else if (this.telemetryScrubber) {\n\t      var description = domUtil.describeElement(element);\n\t      if (this.telemetryScrubber(description)) {\n\t        value = '[scrubbed]';\n\t      }\n\t    }\n\t  }\n\t  var elementString = domUtil.elementArrayToString(domUtil.treeToArray(element));\n\t  this.telemeter.captureDom(subtype, elementString, value, isChecked);\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentNavigation = function() {\n\t  var chrome = this._window.chrome;\n\t  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n\t  // See https://github.com/angular/angular.js/pull/13945/files\n\t  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n\t  if (!hasPushState) {\n\t    return;\n\t  }\n\t  restore(this.replacements, 'navigation');\n\t};\n\t\n\tInstrumenter.prototype.instrumentNavigation = function() {\n\t  var chrome = this._window.chrome;\n\t  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n\t  // See https://github.com/angular/angular.js/pull/13945/files\n\t  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n\t  if (!hasPushState) {\n\t    return;\n\t  }\n\t  var self = this;\n\t  replace(this._window, 'onpopstate', function(orig) {\n\t    return function() {\n\t      var current = self._location.href;\n\t      self.handleUrlChange(self._lastHref, current);\n\t      if (orig) {\n\t        orig.apply(this, arguments);\n\t      }\n\t    };\n\t  }, this.replacements, 'navigation');\n\t\n\t  replace(this._window.history, 'pushState', function(orig) {\n\t    return function() {\n\t      var url = arguments.length > 2 ? arguments[2] : undefined;\n\t      if (url) {\n\t        self.handleUrlChange(self._lastHref, url + '');\n\t      }\n\t      return orig.apply(this, arguments);\n\t    };\n\t  }, this.replacements, 'navigation');\n\t};\n\t\n\tInstrumenter.prototype.handleUrlChange = function(from, to) {\n\t  var parsedHref = urlparser.parse(this._location.href);\n\t  var parsedTo = urlparser.parse(to);\n\t  var parsedFrom = urlparser.parse(from);\n\t  this._lastHref = to;\n\t  if (parsedHref.protocol === parsedTo.protocol && parsedHref.host === parsedTo.host) {\n\t    to = parsedTo.path + (parsedTo.hash || '');\n\t  }\n\t  if (parsedHref.protocol === parsedFrom.protocol && parsedHref.host === parsedFrom.host) {\n\t    from = parsedFrom.path + (parsedFrom.hash || '');\n\t  }\n\t  this.telemeter.captureNavigation(from, to);\n\t};\n\t\n\tInstrumenter.prototype.deinstrumentConnectivity = function() {\n\t  if (!('addEventListener' in this._window || 'body' in this._document)) {\n\t    return;\n\t  }\n\t  if (this._window.addEventListener) {\n\t    this.removeListeners('connectivity');\n\t  } else {\n\t    restore(this.replacements, 'connectivity');\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.instrumentConnectivity = function() {\n\t  if (!('addEventListener' in this._window || 'body' in this._document)) {\n\t    return;\n\t  }\n\t  if (this._window.addEventListener) {\n\t    this.addListener('connectivity', this._window, 'online', undefined, function() {\n\t      this.telemeter.captureConnectivityChange('online');\n\t    }.bind(this), true);\n\t    this.addListener('connectivity', this._window, 'offline', undefined, function() {\n\t      this.telemeter.captureConnectivityChange('offline');\n\t    }.bind(this), true);\n\t  } else {\n\t    var self = this;\n\t    replace(this._document.body, 'ononline', function(orig) {\n\t      return function() {\n\t        self.telemeter.captureConnectivityChange('online');\n\t        if (orig) {\n\t          orig.apply(this, arguments);\n\t        }\n\t      }\n\t    }, this.replacements, 'connectivity');\n\t    replace(this._document.body, 'onoffline', function(orig) {\n\t      return function() {\n\t        self.telemeter.captureConnectivityChange('offline');\n\t        if (orig) {\n\t          orig.apply(this, arguments);\n\t        }\n\t      }\n\t    }, this.replacements, 'connectivity');\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.addListener = function(section, obj, type, altType, handler, capture) {\n\t  if (obj.addEventListener) {\n\t    obj.addEventListener(type, handler, capture);\n\t    this.eventRemovers[section].push(function() {\n\t      obj.removeEventListener(type, handler, capture);\n\t    });\n\t  } else if (altType) {\n\t    obj.attachEvent(altType, handler);\n\t    this.eventRemovers[section].push(function() {\n\t      obj.detachEvent(altType, handler);\n\t    });\n\t  }\n\t};\n\t\n\tInstrumenter.prototype.removeListeners = function(section) {\n\t  var r;\n\t  while (this.eventRemovers[section].length) {\n\t    r = this.eventRemovers[section].shift();\n\t    r();\n\t  }\n\t};\n\t\n\tmodule.exports = Instrumenter;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction getElementType(e) {\n\t  return (e.getAttribute('type') || '').toLowerCase();\n\t}\n\t\n\tfunction isDescribedElement(element, type, subtypes) {\n\t  if (element.tagName.toLowerCase() !== type.toLowerCase()) {\n\t    return false;\n\t  }\n\t  if (!subtypes) {\n\t    return true;\n\t  }\n\t  element = getElementType(element);\n\t  for (var i = 0; i < subtypes.length; i++) {\n\t    if (subtypes[i] === element) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction getElementFromEvent(evt, doc) {\n\t  if (evt.target) {\n\t    return evt.target;\n\t  }\n\t  if (doc && doc.elementFromPoint) {\n\t    return doc.elementFromPoint(evt.clientX, evt.clientY);\n\t  }\n\t  return undefined;\n\t}\n\t\n\tfunction treeToArray(elem) {\n\t  var MAX_HEIGHT = 5;\n\t  var out = [];\n\t  var nextDescription;\n\t  for (var height = 0; elem && height < MAX_HEIGHT; height++) {\n\t    nextDescription = describeElement(elem);\n\t    if (nextDescription.tagName === 'html') {\n\t      break;\n\t    }\n\t    out.unshift(nextDescription);\n\t    elem = elem.parentNode;\n\t  }\n\t  return out;\n\t}\n\t\n\tfunction elementArrayToString(a) {\n\t  var MAX_LENGTH = 80;\n\t  var separator = ' > ', separatorLength = separator.length;\n\t  var out = [], len = 0, nextStr, totalLength;\n\t\n\t  for (var i = a.length - 1; i >= 0; i--) {\n\t    nextStr = descriptionToString(a[i]);\n\t    totalLength = len + (out.length * separatorLength) + nextStr.length;\n\t    if (i < a.length - 1 && totalLength >= MAX_LENGTH + 3) {\n\t      out.unshift('...');\n\t      break;\n\t    }\n\t    out.unshift(nextStr);\n\t    len += nextStr.length;\n\t  }\n\t  return out.join(separator);\n\t}\n\t\n\tfunction descriptionToString(desc) {\n\t  if (!desc || !desc.tagName) {\n\t    return '';\n\t  }\n\t  var out = [desc.tagName];\n\t  if (desc.id) {\n\t    out.push('#' + desc.id);\n\t  }\n\t  if (desc.classes) {\n\t    out.push('.' + desc.classes.join('.'));\n\t  }\n\t  for (var i = 0; i < desc.attributes.length; i++) {\n\t    out.push('[' + desc.attributes[i].key + '=\"' + desc.attributes[i].value + '\"]');\n\t  }\n\t\n\t  return out.join('');\n\t}\n\t\n\t/**\n\t * Input: a dom element\n\t * Output: null if tagName is falsey or input is falsey, else\n\t *  {\n\t *    tagName: String,\n\t *    id: String | undefined,\n\t *    classes: [String] | undefined,\n\t *    attributes: [\n\t *      {\n\t *        key: OneOf(type, name, title, alt),\n\t *        value: String\n\t *      }\n\t *    ]\n\t *  }\n\t */\n\tfunction describeElement(elem) {\n\t  if (!elem || !elem.tagName) {\n\t    return null;\n\t  }\n\t  var out = {}, className, key, attr, i;\n\t  out.tagName = elem.tagName.toLowerCase();\n\t  if (elem.id) {\n\t    out.id = elem.id;\n\t  }\n\t  className = elem.className;\n\t  if (className && (typeof className === 'string')) {\n\t    out.classes = className.split(/\\s+/);\n\t  }\n\t  var attributes = ['type', 'name', 'title', 'alt'];\n\t  out.attributes = [];\n\t  for (i = 0; i < attributes.length; i++) {\n\t    key = attributes[i];\n\t    attr = elem.getAttribute(key);\n\t    if (attr) {\n\t      out.attributes.push({key: key, value: attr});\n\t    }\n\t  }\n\t  return out;\n\t}\n\t\n\tmodule.exports = {\n\t  describeElement: describeElement,\n\t  descriptionToString: descriptionToString,\n\t  elementArrayToString: elementArrayToString,\n\t  treeToArray: treeToArray,\n\t  getElementFromEvent: getElementFromEvent,\n\t  isDescribedElement: isDescribedElement,\n\t  getElementType: getElementType\n\t};\n\n\n/***/ })\n/******/ ])});;\n\n\n// WEBPACK FOOTER //\n// rollbar.named-amd.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7bb14946e5946b76b3b1","'use strict';\n\nvar rollbar = require('../rollbar');\n\nvar options = (typeof window !== 'undefined') && window._rollbarConfig;\nvar alias = options && options.globalAlias || 'Rollbar';\nvar shimRunning = (typeof window !== 'undefined') && window[alias] && typeof window[alias].shimId === 'function' && window[alias].shimId() !== undefined;\n\nif ((typeof window !== 'undefined') && !window._rollbarStartTime) {\n  window._rollbarStartTime = (new Date()).getTime();\n}\n\nif (!shimRunning && options) {\n  var Rollbar = new rollbar(options);\n  window[alias] = Rollbar;\n} else if (typeof window !== 'undefined') {\n  window.rollbar = rollbar;\n  window._rollbarDidLoad = true;\n} else if (typeof self !== 'undefined') {\n  self.rollbar = rollbar;\n  self._rollbarDidLoad = true;\n}\n\nmodule.exports = rollbar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/bundles/rollbar.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar Client = require('../rollbar');\nvar _ = require('../utility');\nvar API = require('../api');\nvar logger = require('./logger');\nvar globals = require('./globalSetup');\n\nvar transport = require('./transport');\nvar urllib = require('./url');\n\nvar transforms = require('./transforms');\nvar sharedTransforms = require('../transforms');\nvar predicates = require('./predicates');\nvar errorParser = require('./errorParser');\nvar Instrumenter = require('./telemetry');\n\nfunction Rollbar(options, client) {\n  this.options = _.extend(true, defaultOptions, options);\n  var api = new API(this.options, transport, urllib);\n  this.client = client || new Client(this.options, api, logger, 'browser');\n\n  var gWindow = ((typeof window != 'undefined') && window) || ((typeof self != 'undefined') && self);\n  var gDocument = (typeof document != 'undefined') && document;\n  addTransformsToNotifier(this.client.notifier);\n  addPredicatesToQueue(this.client.queue);\n  if (this.options.captureUncaught || this.options.handleUncaughtExceptions) {\n    globals.captureUncaughtExceptions(gWindow, this);\n    globals.wrapGlobals(gWindow, this);\n  }\n  if (this.options.captureUnhandledRejections || this.options.handleUnhandledRejections) {\n    globals.captureUnhandledRejections(gWindow, this);\n  }\n\n  this.instrumenter = new Instrumenter(this.options, this.client.telemeter, this, gWindow, gDocument);\n  this.instrumenter.instrument();\n}\n\nvar _instance = null;\nRollbar.init = function(options, client) {\n  if (_instance) {\n    return _instance.global(options).configure(options);\n  }\n  _instance = new Rollbar(options, client);\n  return _instance;\n};\n\nfunction handleUninitialized(maybeCallback) {\n  var message = 'Rollbar is not initialized';\n  logger.error(message);\n  if (maybeCallback) {\n    maybeCallback(new Error(message));\n  }\n}\n\nRollbar.prototype.global = function(options) {\n  this.client.global(options);\n  return this;\n};\nRollbar.global = function(options) {\n  if (_instance) {\n    return _instance.global(options);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.configure = function(options, payloadData) {\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = {payload: payloadData};\n  }\n  this.options = _.extend(true, {}, oldOptions, options, payload);\n  this.client.configure(options, payloadData);\n  this.instrumenter.configure(options);\n  return this;\n};\nRollbar.configure = function(options, payloadData) {\n  if (_instance) {\n    return _instance.configure(options, payloadData);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.lastError = function() {\n  return this.client.lastError;\n};\nRollbar.lastError = function() {\n  if (_instance) {\n    return _instance.lastError();\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.log = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.log(item);\n  return {uuid: uuid};\n};\nRollbar.log = function() {\n  if (_instance) {\n    return _instance.log.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.debug = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.debug(item);\n  return {uuid: uuid};\n};\nRollbar.debug = function() {\n  if (_instance) {\n    return _instance.debug.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.info = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.info(item);\n  return {uuid: uuid};\n};\nRollbar.info = function() {\n  if (_instance) {\n    return _instance.info.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.warn = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warn(item);\n  return {uuid: uuid};\n};\nRollbar.warn = function() {\n  if (_instance) {\n    return _instance.warn.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.warning = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.warning(item);\n  return {uuid: uuid};\n};\nRollbar.warning = function() {\n  if (_instance) {\n    return _instance.warning.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.error = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.error(item);\n  return {uuid: uuid};\n};\nRollbar.error = function() {\n  if (_instance) {\n    return _instance.error.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.critical = function() {\n  var item = this._createItem(arguments);\n  var uuid = item.uuid;\n  this.client.critical(item);\n  return {uuid: uuid};\n};\nRollbar.critical = function() {\n  if (_instance) {\n    return _instance.critical.apply(_instance, arguments);\n  } else {\n    var maybeCallback = _getFirstFunction(arguments);\n    handleUninitialized(maybeCallback);\n  }\n};\n\nRollbar.prototype.handleUncaughtException = function(message, url, lineno, colno, error, context) {\n  var item;\n  var stackInfo = _.makeUnhandledStackInfo(\n    message,\n    url,\n    lineno,\n    colno,\n    error,\n    'onerror',\n    'uncaught exception',\n    errorParser\n  );\n  if (_.isError(error)) {\n    item = this._createItem([message, error, context]);\n    item._unhandledStackInfo = stackInfo;\n  } else if (_.isError(url)) {\n    item = this._createItem([message, url, context]);\n    item._unhandledStackInfo = stackInfo;\n  } else {\n    item = this._createItem([message, context]);\n    item.stackInfo = stackInfo;\n  }\n  item.level = this.options.uncaughtErrorLevel;\n  item._isUncaught = true;\n  this.client.log(item);\n};\n\nRollbar.prototype.handleUnhandledRejection = function(reason, promise) {\n  var message = 'unhandled rejection was null or undefined!';\n  message = reason ? (reason.message || String(reason)) : message;\n  var context = (reason && reason._rollbarContext) || (promise && promise._rollbarContext);\n\n  var item;\n  if (_.isError(reason)) {\n    item = this._createItem([message, reason, context]);\n  } else {\n    item = this._createItem([message, reason, context]);\n    item.stackInfo = _.makeUnhandledStackInfo(\n      message,\n      '',\n      0,\n      0,\n      null,\n      'unhandledrejection',\n      '',\n      errorParser\n    );\n  }\n  item.level = this.options.uncaughtErrorLevel;\n  item._isUncaught = true;\n  item._originalArgs = item._originalArgs || [];\n  item._originalArgs.push(promise);\n  this.client.log(item);\n};\n\nRollbar.prototype.wrap = function(f, context, _before) {\n  try {\n    var ctxFn;\n    if(_.isFunction(context)) {\n      ctxFn = context;\n    } else {\n      ctxFn = function() { return context || {}; };\n    }\n\n    if (!_.isFunction(f)) {\n      return f;\n    }\n\n    if (f._isWrap) {\n      return f;\n    }\n\n    if (!f._rollbar_wrapped) {\n      f._rollbar_wrapped = function () {\n        if (_before && _.isFunction(_before)) {\n          _before.apply(this, arguments);\n        }\n        try {\n          return f.apply(this, arguments);\n        } catch(exc) {\n          var e = exc;\n          if (_.isType(e, 'string')) {\n            e = new String(e);\n          }\n          e._rollbarContext = ctxFn() || {};\n          e._rollbarContext._wrappedSource = f.toString();\n\n          window._rollbarWrappedError = e;\n          throw e;\n        }\n      };\n\n      f._rollbar_wrapped._isWrap = true;\n\n      if (f.hasOwnProperty) {\n        for (var prop in f) {\n          if (f.hasOwnProperty(prop)) {\n            f._rollbar_wrapped[prop] = f[prop];\n          }\n        }\n      }\n    }\n\n    return f._rollbar_wrapped;\n  } catch (e) {\n    // Return the original function if the wrap fails.\n    return f;\n  }\n};\nRollbar.wrap = function(f, context) {\n  if (_instance) {\n    return _instance.wrap(f, context);\n  } else {\n    handleUninitialized();\n  }\n};\n\nRollbar.prototype.captureEvent = function(metadata, level) {\n  return this.client.captureEvent(metadata, level);\n};\nRollbar.captureEvent = function(metadata, level) {\n  if (_instance) {\n    return _instance.captureEvent(metadata, level);\n  } else {\n    handleUninitialized();\n  }\n};\n\n// The following two methods are used internally and are not meant for public use\nRollbar.prototype.captureDomContentLoaded = function(e, ts) {\n  if (!ts) {\n    ts = new Date();\n  }\n  return this.client.captureDomContentLoaded(ts);\n};\n\nRollbar.prototype.captureLoad = function(e, ts) {\n  if (!ts) {\n    ts = new Date();\n  }\n  return this.client.captureLoad(ts);\n};\n\n/* Internal */\n\nfunction addTransformsToNotifier(notifier) {\n  notifier\n    .addTransform(transforms.handleItemWithError)\n    .addTransform(transforms.ensureItemHasSomethingToSay)\n    .addTransform(transforms.addBaseInfo)\n    .addTransform(transforms.addRequestInfo(window))\n    .addTransform(transforms.addClientInfo(window))\n    .addTransform(transforms.addPluginInfo(window))\n    .addTransform(transforms.addBody)\n    .addTransform(sharedTransforms.addMessageWithError)\n    .addTransform(sharedTransforms.addTelemetryData)\n    .addTransform(sharedTransforms.addConfigToPayload)\n    .addTransform(transforms.scrubPayload)\n    .addTransform(sharedTransforms.userTransform(logger))\n    .addTransform(sharedTransforms.itemToPayload);\n}\n\nfunction addPredicatesToQueue(queue) {\n  queue\n    .addPredicate(predicates.checkIgnore)\n    .addPredicate(predicates.userCheckIgnore)\n    .addPredicate(predicates.urlIsNotBlacklisted)\n    .addPredicate(predicates.urlIsWhitelisted)\n    .addPredicate(predicates.messageIsIgnored);\n}\n\nRollbar.prototype._createItem = function(args) {\n  return _.createItem(args, logger, this);\n};\n\nfunction _getFirstFunction(args) {\n  for (var i = 0, len = args.length; i < len; ++i) {\n    if (_.isFunction(args[i])) {\n      return args[i];\n    }\n  }\n  return undefined;\n}\n\n/* global __NOTIFIER_VERSION__:false */\n/* global __DEFAULT_BROWSER_SCRUB_FIELDS__:false */\n/* global __DEFAULT_LOG_LEVEL__:false */\n/* global __DEFAULT_REPORT_LEVEL__:false */\n/* global __DEFAULT_UNCAUGHT_ERROR_LEVEL:false */\n/* global __DEFAULT_ENDPOINT__:false */\n\nvar defaultOptions = {\n  version: __NOTIFIER_VERSION__,\n  scrubFields: __DEFAULT_BROWSER_SCRUB_FIELDS__,\n  logLevel: __DEFAULT_LOG_LEVEL__,\n  reportLevel: __DEFAULT_REPORT_LEVEL__,\n  uncaughtErrorLevel: __DEFAULT_UNCAUGHT_ERROR_LEVEL,\n  endpoint: __DEFAULT_ENDPOINT__,\n  verbose: false,\n  enabled: true,\n  sendConfig: false\n};\n\nmodule.exports = Rollbar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/rollbar.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar RateLimiter = require('./rateLimiter');\nvar Queue = require('./queue');\nvar Notifier = require('./notifier');\nvar Telemeter = require('./telemetry');\nvar _ = require('./utility');\n\n/*\n * Rollbar - the interface to Rollbar\n *\n * @param options\n * @param api\n * @param logger\n */\nfunction Rollbar(options, api, logger, platform) {\n  this.options = _.extend(true, {}, options);\n  this.logger = logger;\n  Rollbar.rateLimiter.configureGlobal(this.options);\n  Rollbar.rateLimiter.setPlatformOptions(platform, this.options);\n  this.queue = new Queue(Rollbar.rateLimiter, api, logger, this.options);\n  this.notifier = new Notifier(this.queue, this.options);\n  this.telemeter = new Telemeter(this.options);\n  this.lastError = null;\n}\n\nvar defaultOptions = {\n  maxItems: 0,\n  itemsPerMinute: 60\n};\n\nRollbar.rateLimiter = new RateLimiter(defaultOptions);\n\nRollbar.prototype.global = function(options) {\n  Rollbar.rateLimiter.configureGlobal(options);\n  return this;\n};\n\nRollbar.prototype.configure = function(options, payloadData) {\n  this.notifier && this.notifier.configure(options);\n  this.telemeter && this.telemeter.configure(options);\n  var oldOptions = this.options;\n  var payload = {};\n  if (payloadData) {\n    payload = {payload: payloadData};\n  }\n  this.options = _.extend(true, {}, oldOptions, options, payload);\n  this.global(this.options);\n  return this;\n};\n\nRollbar.prototype.log = function(item) {\n  var level = this._defaultLogLevel();\n  return this._log(level, item);\n};\n\nRollbar.prototype.debug = function(item) {\n  this._log('debug', item);\n};\n\nRollbar.prototype.info = function(item) {\n  this._log('info', item);\n};\n\nRollbar.prototype.warn = function(item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.warning = function(item) {\n  this._log('warning', item);\n};\n\nRollbar.prototype.error = function(item) {\n  this._log('error', item);\n};\n\nRollbar.prototype.critical = function(item) {\n  this._log('critical', item);\n};\n\nRollbar.prototype.wait = function(callback) {\n  this.queue.wait(callback);\n};\n\nRollbar.prototype.captureEvent = function(metadata, level) {\n  return this.telemeter.captureEvent(metadata, level);\n};\n\nRollbar.prototype.captureDomContentLoaded = function(ts) {\n  return this.telemeter.captureDomContentLoaded(ts);\n};\n\nRollbar.prototype.captureLoad = function(ts) {\n  return this.telemeter.captureLoad(ts);\n};\n\n/* Internal */\n\nRollbar.prototype._log = function(defaultLevel, item) {\n  if (this._sameAsLastError(item)) {\n    if (item.callback) {\n      item.callback();\n    }\n    return;\n  }\n  try {\n    var callback = null;\n    if (item.callback) {\n      callback = item.callback;\n      delete item.callback;\n    }\n    item.level = item.level || defaultLevel;\n    this.telemeter._captureRollbarItem(item);\n    item.telemetryEvents = this.telemeter.copyEvents();\n    this.notifier.log(item, callback);\n  } catch (e) {\n    this.logger.error(e)\n  }\n};\n\nRollbar.prototype._defaultLogLevel = function() {\n  return this.options.logLevel || 'debug';\n};\n\nRollbar.prototype._sameAsLastError = function(item) {\n  if (this.lastError && this.lastError === item.err) {\n    return true;\n  }\n  this.lastError = item.err;\n  return false;\n};\n\nmodule.exports = Rollbar;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/rollbar.js\n// module id = 3\n// module chunks = 0","'use strict';\n\n/*\n * RateLimiter - an object that encapsulates the logic for counting items sent to Rollbar\n *\n * @param options - the same options that are accepted by configureGlobal offered as a convenience\n */\nfunction RateLimiter(options) {\n  this.startTime = (new Date()).getTime();\n  this.counter = 0;\n  this.perMinCounter = 0;\n  this.platform = null;\n  this.platformOptions = {};\n  this.configureGlobal(options);\n}\n\nRateLimiter.globalSettings = {\n  startTime: (new Date()).getTime(),\n  maxItems: undefined,\n  itemsPerMinute: undefined\n};\n\n/*\n * configureGlobal - set the global rate limiter options\n *\n * @param options - Only the following values are recognized:\n *    startTime: a timestamp of the form returned by (new Date()).getTime()\n *    maxItems: the maximum items\n *    itemsPerMinute: the max number of items to send in a given minute\n */\nRateLimiter.prototype.configureGlobal = function(options) {\n  if (options.startTime !== undefined) {\n    RateLimiter.globalSettings.startTime = options.startTime;\n  }\n  if (options.maxItems !== undefined) {\n    RateLimiter.globalSettings.maxItems = options.maxItems;\n  }\n  if (options.itemsPerMinute !== undefined) {\n    RateLimiter.globalSettings.itemsPerMinute = options.itemsPerMinute;\n  }\n};\n\n/*\n * shouldSend - determine if we should send a given item based on rate limit settings\n *\n * @param item - the item we are about to send\n * @returns An object with the following structure:\n *  error: (Error|null)\n *  shouldSend: bool\n *  payload: (Object|null)\n *  If shouldSend is false, the item passed as a parameter should not be sent to Rollbar, and\n *  exactly one of error or payload will be non-null. If error is non-null, the returned Error will\n *  describe the situation, but it means that we were already over a rate limit (either globally or\n *  per minute) when this item was checked. If error is null, and therefore payload is non-null, it\n *  means this item put us over the global rate limit and the payload should be sent to Rollbar in\n *  place of the passed in item.\n */\nRateLimiter.prototype.shouldSend = function(item, now) {\n  now = now || (new Date()).getTime();\n  if (now - this.startTime >= 60000) {\n    this.startTime = now;\n    this.perMinCounter = 0;\n  }\n\n  var globalRateLimit = RateLimiter.globalSettings.maxItems;\n  var globalRateLimitPerMin = RateLimiter.globalSettings.itemsPerMinute;\n\n  if (checkRate(item, globalRateLimit, this.counter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimit + ' max items reached', false);\n  } else if (checkRate(item, globalRateLimitPerMin, this.perMinCounter)) {\n    return shouldSendValue(this.platform, this.platformOptions, globalRateLimitPerMin + ' items per minute reached', false);\n  }\n  this.counter++;\n  this.perMinCounter++;\n\n  var shouldSend = !checkRate(item, globalRateLimit, this.counter);\n  var perMinute = shouldSend;\n  shouldSend = shouldSend && !checkRate(item, globalRateLimitPerMin, this.perMinCounter);\n  return shouldSendValue(this.platform, this.platformOptions, null, shouldSend, globalRateLimit, globalRateLimitPerMin, perMinute);\n};\n\nRateLimiter.prototype.setPlatformOptions = function(platform, options) {\n  this.platform = platform;\n  this.platformOptions = options;\n};\n\n/* Helpers */\n\nfunction checkRate(item, limit, counter) {\n  return !item.ignoreRateLimit && limit >= 1 && counter > limit;\n}\n\nfunction shouldSendValue(platform, options, error, shouldSend, globalRateLimit, limitPerMin, perMinute) {\n  var payload = null;\n  if (error) {\n    error = new Error(error);\n  }\n  if (!error && !shouldSend) {\n    payload = rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute);\n  }\n  return {error: error, shouldSend: shouldSend, payload: payload};\n}\n\nfunction rateLimitPayload(platform, options, globalRateLimit, limitPerMin, perMinute) {\n  var environment = options.environment || (options.payload && options.payload.environment);\n  var msg;\n  if (perMinute) {\n    msg = 'item per minute limit reached, ignoring errors until timeout';\n  } else {\n    msg = 'maxItems has been hit, ignoring errors until reset.';\n  }\n  var item = {\n    body: {\n      message: {\n        body: msg,\n        extra: {\n          maxItems: globalRateLimit,\n          itemsPerMinute: limitPerMin\n        }\n      }\n    },\n    language: 'javascript',\n    environment: environment,\n    notifier: {\n      version: (options.notifier && options.notifier.version) || options.version\n    }\n  };\n  if (platform === 'browser') {\n    item.platform = 'browser';\n    item.framework = 'browser-js';\n    item.notifier.name = 'rollbar-browser-js';\n  } else if (platform === 'server') {\n    item.framework = options.framework || 'node-js';\n    item.notifier.name = options.notifier.name;\n  } else if (platform === 'react-native') {\n    item.framework = options.framework || 'react-native';\n    item.notifier.name = options.notifier.name;\n  }\n  return item;\n}\n\nmodule.exports = RateLimiter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/rateLimiter.js\n// module id = 4\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\n/*\n * Queue - an object which handles which handles a queue of items to be sent to Rollbar.\n *   This object handles rate limiting via a passed in rate limiter, retries based on connection\n *   errors, and filtering of items based on a set of configurable predicates. The communication to\n *   the backend is performed via a given API object.\n *\n * @param rateLimiter - An object which conforms to the interface\n *    rateLimiter.shouldSend(item) -> bool\n * @param api - An object which conforms to the interface\n *    api.postItem(payload, function(err, response))\n * @param logger - An object used to log verbose messages if desired\n * @param options - see Queue.prototype.configure\n */\nfunction Queue(rateLimiter, api, logger, options) {\n  this.rateLimiter = rateLimiter;\n  this.api = api;\n  this.logger = logger;\n  this.options = options;\n  this.predicates = [];\n  this.pendingItems = [];\n  this.pendingRequests = [];\n  this.retryQueue = [];\n  this.retryHandle = null;\n  this.waitCallback = null;\n  this.waitIntervalID = null;\n}\n\n/*\n * configure - updates the options this queue uses\n *\n * @param options\n */\nQueue.prototype.configure = function(options) {\n  this.api && this.api.configure(options);\n  var oldOptions = this.options;\n  this.options = _.extend(true, {}, oldOptions, options);\n  return this;\n};\n\n/*\n * addPredicate - adds a predicate to the end of the list of predicates for this queue\n *\n * @param predicate - function(item, options) -> (bool|{err: Error})\n *  Returning true means that this predicate passes and the item is okay to go on the queue\n *  Returning false means do not add the item to the queue, but it is not an error\n *  Returning {err: Error} means do not add the item to the queue, and the given error explains why\n *  Returning {err: undefined} is equivalent to returning true but don't do that\n */\nQueue.prototype.addPredicate = function(predicate) {\n  if (_.isFunction(predicate)) {\n    this.predicates.push(predicate);\n  }\n  return this;\n};\n\nQueue.prototype.addPendingItem = function(item) {\n  this.pendingItems.push(item);\n};\n\nQueue.prototype.removePendingItem = function(item) {\n  var idx = this.pendingItems.indexOf(item);\n  if (idx !== -1) {\n    this.pendingItems.splice(idx, 1);\n  }\n};\n\n/*\n * addItem - Send an item to the Rollbar API if all of the predicates are satisfied\n *\n * @param item - The payload to send to the backend\n * @param callback - function(error, repsonse) which will be called with the response from the API\n *  in the case of a success, otherwise response will be null and error will have a value. If both\n *  error and response are null then the item was stopped by a predicate which did not consider this\n *  to be an error condition, but nonetheless did not send the item to the API.\n *  @param originalError - The original error before any transformations that is to be logged if any\n */\nQueue.prototype.addItem = function(item, callback, originalError, originalItem) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() { return; };\n  }\n  var predicateResult = this._applyPredicates(item);\n  if (predicateResult.stop) {\n    this.removePendingItem(originalItem);\n    callback(predicateResult.err);\n    return;\n  }\n  this._maybeLog(item, originalError);\n  this.removePendingItem(originalItem);\n  this.pendingRequests.push(item);\n  try {\n    this._makeApiRequest(item, function(err, resp) {\n      this._dequeuePendingRequest(item);\n      callback(err, resp);\n    }.bind(this));\n  } catch (e) {\n    this._dequeuePendingRequest(item);\n    callback(e);\n  }\n};\n\n/*\n * wait - Stop any further errors from being added to the queue, and get called back when all items\n *   currently processing have finished sending to the backend.\n *\n * @param callback - function() called when all pending items have been sent\n */\nQueue.prototype.wait = function(callback) {\n  if (!_.isFunction(callback)) {\n    return;\n  }\n  this.waitCallback = callback;\n  if (this._maybeCallWait()) {\n    return;\n  }\n  if (this.waitIntervalID) {\n    this.waitIntervalID = clearInterval(this.waitIntervalID);\n  }\n  this.waitIntervalID = setInterval(function() {\n    this._maybeCallWait();\n  }.bind(this), 500);\n};\n\n/* _applyPredicates - Sequentially applies the predicates that have been added to the queue to the\n *   given item with the currently configured options.\n *\n * @param item - An item in the queue\n * @returns {stop: bool, err: (Error|null)} - stop being true means do not add item to the queue,\n *   the error value should be passed up to a callbak if we are stopping.\n */\nQueue.prototype._applyPredicates = function(item) {\n  var p = null;\n  for (var i = 0, len = this.predicates.length; i < len; i++) {\n    p = this.predicates[i](item, this.options);\n    if (!p || p.err !== undefined) {\n      return {stop: true, err: p.err};\n    }\n  }\n  return {stop: false, err: null};\n};\n\n/*\n * _makeApiRequest - Send an item to Rollbar, callback when done, if there is an error make an\n *   effort to retry if we are configured to do so.\n *\n * @param item - an item ready to send to the backend\n * @param callback - function(err, response)\n */\nQueue.prototype._makeApiRequest = function(item, callback) {\n  var rateLimitResponse = this.rateLimiter.shouldSend(item);\n  if (rateLimitResponse.shouldSend) {\n    this.api.postItem(item, function(err, resp) {\n      if (err) {\n        this._maybeRetry(err, item, callback);\n      } else {\n        callback(err, resp);\n      }\n    }.bind(this));\n  } else if (rateLimitResponse.error) {\n    callback(rateLimitResponse.error);\n  } else {\n    this.api.postItem(rateLimitResponse.payload, callback);\n  }\n};\n\n// These are errors basically mean there is no internet connection\nvar RETRIABLE_ERRORS = ['ECONNRESET', 'ENOTFOUND', 'ESOCKETTIMEDOUT', 'ETIMEDOUT', 'ECONNREFUSED', 'EHOSTUNREACH', 'EPIPE', 'EAI_AGAIN'];\n\n/*\n * _maybeRetry - Given the error returned by the API, decide if we should retry or just callback\n *   with the error.\n *\n * @param err - an error returned by the API transport\n * @param item - the item that was trying to be sent when this error occured\n * @param callback - function(err, response)\n */\nQueue.prototype._maybeRetry = function(err, item, callback) {\n  var shouldRetry = false;\n  if (this.options.retryInterval) {\n    for (var i = 0, len = RETRIABLE_ERRORS.length; i < len; i++) {\n      if (err.code === RETRIABLE_ERRORS[i]) {\n        shouldRetry = true;\n        break;\n      }\n    }\n  }\n  if (shouldRetry) {\n    this._retryApiRequest(item, callback);\n  } else {\n    callback(err);\n  }\n};\n\n/*\n * _retryApiRequest - Add an item and a callback to a queue and possibly start a timer to process\n *   that queue based on the retryInterval in the options for this queue.\n *\n * @param item - an item that failed to send due to an error we deem retriable\n * @param callback - function(err, response)\n */\nQueue.prototype._retryApiRequest = function(item, callback) {\n  this.retryQueue.push({item: item, callback: callback});\n\n  if (!this.retryHandle) {\n    this.retryHandle = setInterval(function() {\n      while (this.retryQueue.length) {\n        var retryObject = this.retryQueue.shift();\n        this._makeApiRequest(retryObject.item, retryObject.callback);\n      }\n    }.bind(this), this.options.retryInterval);\n  }\n};\n\n/*\n * _dequeuePendingRequest - Removes the item from the pending request queue, this queue is used to\n *   enable to functionality of providing a callback that clients can pass to `wait` to be notified\n *   when the pending request queue has been emptied. This must be called when the API finishes\n *   processing this item. If a `wait` callback is configured, it is called by this function.\n *\n * @param item - the item previously added to the pending request queue\n */\nQueue.prototype._dequeuePendingRequest = function(item) {\n  var idx = this.pendingRequests.indexOf(item);\n  if (idx !== -1) {\n    this.pendingRequests.splice(idx, 1);\n    this._maybeCallWait();\n  }\n};\n\nQueue.prototype._maybeLog = function(data, originalError) {\n  if (this.logger && this.options.verbose) {\n    var message = originalError;\n    message = message || _.get(data, 'body.trace.exception.message');\n    message = message || _.get(data, 'body.trace_chain.0.exception.message');\n    if (message) {\n      this.logger.error(message);\n      return;\n    }\n    message = _.get(data, 'body.message.body');\n    if (message) {\n      this.logger.log(message);\n    }\n  }\n};\n\nQueue.prototype._maybeCallWait = function() {\n  if (_.isFunction(this.waitCallback) && this.pendingItems.length === 0 && this.pendingRequests.length === 0) {\n    if (this.waitIntervalID) {\n      this.waitIntervalID = clearInterval(this.waitIntervalID);\n    }\n    this.waitCallback();\n    return true;\n  }\n  return false;\n};\n\nmodule.exports = Queue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/queue.js\n// module id = 5\n// module chunks = 0","'use strict';\n\nvar extend = require('extend');\n\nvar RollbarJSON = {};\nvar __initRollbarJSON = false;\nfunction setupJSON() {\n  if (__initRollbarJSON) {\n    return;\n  }\n  __initRollbarJSON = true;\n\n  if (isDefined(JSON)) {\n    if (isNativeFunction(JSON.stringify)) {\n      RollbarJSON.stringify = JSON.stringify;\n    }\n    if (isNativeFunction(JSON.parse)) {\n      RollbarJSON.parse = JSON.parse;\n    }\n  }\n  if (!isFunction(RollbarJSON.stringify) || !isFunction(RollbarJSON.parse)) {\n    var setupCustomJSON = require('../vendor/JSON-js/json3.js');\n    setupCustomJSON(RollbarJSON);\n  }\n}\nsetupJSON();\n\n/*\n * isType - Given a Javascript value and a string, returns true if the type of the value matches the\n * given string.\n *\n * @param x - any value\n * @param t - a lowercase string containing one of the following type names:\n *    - undefined\n *    - null\n *    - error\n *    - number\n *    - boolean\n *    - string\n *    - symbol\n *    - function\n *    - object\n *    - array\n * @returns true if x is of type t, otherwise false\n */\nfunction isType(x, t) {\n  return t === typeName(x);\n}\n\n/*\n * typeName - Given a Javascript value, returns the type of the object as a string\n */\nfunction typeName(x) {\n  var name = typeof x;\n  if (name !== 'object') {\n    return name;\n  }\n  if (!x) {\n    return 'null';\n  }\n  if (x instanceof Error) {\n    return 'error';\n  }\n  return ({}).toString.call(x).match(/\\s([a-zA-Z]+)/)[1].toLowerCase();\n}\n\n/* isFunction - a convenience function for checking if a value is a function\n *\n * @param f - any value\n * @returns true if f is a function, otherwise false\n */\nfunction isFunction(f) {\n  return isType(f, 'function');\n}\n\n/* isNativeFunction - a convenience function for checking if a value is a native JS function\n *\n * @param f - any value\n * @returns true if f is a native JS function, otherwise false\n */\nfunction isNativeFunction(f) {\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n  var funcMatchString = Function.prototype.toString.call(Object.prototype.hasOwnProperty)\n    .replace(reRegExpChar, '\\\\$&')\n    .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?');\n  var reIsNative = RegExp('^' + funcMatchString + '$');\n  return isObject(f) && reIsNative.test(f);\n}\n\n/* isObject - Checks if the argument is an object\n *\n * @param value - any value\n * @returns true is value is an object function is an object)\n*/\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/*\n * isDefined - a convenience function for checking if a value is not equal to undefined\n *\n * @param u - any value\n * @returns true if u is anything other than undefined\n */\nfunction isDefined(u) {\n  return !isType(u, 'undefined');\n}\n\n/*\n * isIterable - convenience function for checking if a value can be iterated, essentially\n * whether it is an object or an array.\n *\n * @param i - any value\n * @returns true if i is an object or an array as determined by `typeName`\n */\nfunction isIterable(i) {\n  var type = typeName(i);\n  return (type === 'object' || type === 'array');\n}\n\n/*\n * isError - convenience function for checking if a value is of an error type\n *\n * @param e - any value\n * @returns true if e is an error\n */\nfunction isError(e) {\n  return isType(e, 'error');\n}\n\nfunction traverse(obj, func, seen) {\n  var k, v, i;\n  var isObj = isType(obj, 'object');\n  var isArray = isType(obj, 'array');\n  var keys = [];\n\n  if (isObj && seen.indexOf(obj) !== -1) {\n    return obj;\n  }\n  seen.push(obj);\n\n  if (isObj) {\n    for (k in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, k)) {\n        keys.push(k);\n      }\n    }\n  } else if (isArray) {\n    for (i = 0; i < obj.length; ++i) {\n      keys.push(i);\n    }\n  }\n\n  var result = isObj ? {} : [];\n  for (i = 0; i < keys.length; ++i) {\n    k = keys[i];\n    v = obj[k];\n    result[k] = func(k, v, seen);\n  }\n\n  return (keys.length != 0) ? result : obj;\n}\n\nfunction redact() {\n  return '********';\n}\n\n// from http://stackoverflow.com/a/8809472/1138191\nfunction uuid4() {\n  var d = now();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (d + Math.random() * 16) % 16 | 0;\n    d = Math.floor(d / 16);\n    return (c === 'x' ? r : (r & 0x7 | 0x8)).toString(16);\n  });\n  return uuid;\n}\n\nvar LEVELS = {\n  debug: 0,\n  info: 1,\n  warning: 2,\n  error: 3,\n  critical: 4\n};\n\nfunction sanitizeUrl(url) {\n  var baseUrlParts = parseUri(url);\n  // remove a trailing # if there is no anchor\n  if (baseUrlParts.anchor === '') {\n    baseUrlParts.source = baseUrlParts.source.replace('#', '');\n  }\n\n  url = baseUrlParts.source.replace('?' + baseUrlParts.query, '');\n  return url;\n}\n\nvar parseUriOptions = {\n  strictMode: false,\n  key: [\n    'source',\n    'protocol',\n    'authority',\n    'userInfo',\n    'user',\n    'password',\n    'host',\n    'port',\n    'relative',\n    'path',\n    'directory',\n    'file',\n    'query',\n    'anchor'\n  ],\n  q: {\n    name: 'queryKey',\n    parser: /(?:^|&)([^&=]*)=?([^&]*)/g\n  },\n  parser: {\n    strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n    loose: /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\n\nfunction parseUri(str) {\n  if (!isType(str, 'string')) {\n    throw new Error('received invalid input');\n  }\n\n  var o = parseUriOptions;\n  var m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str);\n  var uri = {};\n  var i = o.key.length;\n\n  while (i--) {\n    uri[o.key[i]] = m[i] || '';\n  }\n\n  uri[o.q.name] = {};\n  uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n    if ($1) {\n      uri[o.q.name][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\nfunction addParamsAndAccessTokenToPath(accessToken, options, params) {\n  params = params || {};\n  params.access_token = accessToken;\n  var paramsArray = [];\n  var k;\n  for (k in params) {\n    if (Object.prototype.hasOwnProperty.call(params, k)) {\n      paramsArray.push([k, params[k]].join('='));\n    }\n  }\n  var query = '?' + paramsArray.sort().join('&');\n\n  options = options || {};\n  options.path = options.path || '';\n  var qs = options.path.indexOf('?');\n  var h = options.path.indexOf('#');\n  var p;\n  if (qs !== -1 && (h === -1 || h > qs)) {\n    p = options.path;\n    options.path = p.substring(0,qs) + query + '&' + p.substring(qs+1);\n  } else {\n    if (h !== -1) {\n      p = options.path;\n      options.path = p.substring(0,h) + query + p.substring(h);\n    } else {\n      options.path = options.path + query;\n    }\n  }\n}\n\nfunction formatUrl(u, protocol) {\n  protocol = protocol || u.protocol;\n  if (!protocol && u.port) {\n    if (u.port === 80) {\n      protocol = 'http:';\n    } else if (u.port === 443) {\n      protocol = 'https:';\n    }\n  }\n  protocol = protocol || 'https:';\n\n  if (!u.hostname) {\n    return null;\n  }\n  var result = protocol + '//' + u.hostname;\n  if (u.port) {\n    result = result + ':' + u.port;\n  }\n  if (u.path) {\n    result = result + u.path;\n  }\n  return result;\n}\n\nfunction stringify(obj, backup) {\n  var value, error;\n  try {\n    value = RollbarJSON.stringify(obj);\n  } catch (jsonError) {\n    if (backup && isFunction(backup)) {\n      try {\n        value = backup(obj);\n      } catch (backupError) {\n        error = backupError;\n      }\n    } else {\n      error = jsonError;\n    }\n  }\n  return {error: error, value: value};\n}\n\nfunction jsonParse(s) {\n  var value, error;\n  try {\n    value = RollbarJSON.parse(s);\n  } catch (e) {\n    error = e;\n  }\n  return {error: error, value: value};\n}\n\nfunction makeUnhandledStackInfo(\n  message,\n  url,\n  lineno,\n  colno,\n  error,\n  mode,\n  backupMessage,\n  errorParser\n) {\n  var location = {\n    url: url || '',\n    line: lineno,\n    column: colno\n  };\n  location.func = errorParser.guessFunctionName(location.url, location.line);\n  location.context = errorParser.gatherContext(location.url, location.line);\n  var href = document && document.location && document.location.href;\n  var useragent = window && window.navigator && window.navigator.userAgent;\n  return {\n    'mode': mode,\n    'message': error ? String(error) : (message || backupMessage),\n    'url': href,\n    'stack': [location],\n    'useragent': useragent\n  };\n}\n\nfunction wrapCallback(logger, f) {\n  return function(err, resp) {\n    try {\n      f(err, resp);\n    } catch (e) {\n      logger.error(e);\n    }\n  };\n}\n\nfunction createItem(args, logger, notifier, requestKeys, lambdaContext) {\n  var message, err, custom, callback, request;\n  var arg;\n  var extraArgs = [];\n\n  for (var i = 0, l = args.length; i < l; ++i) {\n    arg = args[i];\n\n    var typ = typeName(arg);\n    switch (typ) {\n      case 'undefined':\n        break;\n      case 'string':\n        message ? extraArgs.push(arg) : message = arg;\n        break;\n      case 'function':\n        callback = wrapCallback(logger, arg);\n        break;\n      case 'date':\n        extraArgs.push(arg);\n        break;\n      case 'error':\n      case 'domexception':\n        err ? extraArgs.push(arg) : err = arg;\n        break;\n      case 'object':\n      case 'array':\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        if (requestKeys && typ === 'object' && !request) {\n          for (var j = 0, len = requestKeys.length; j < len; ++j) {\n            if (arg[requestKeys[j]] !== undefined) {\n              request = arg;\n              break;\n            }\n          }\n          if (request) {\n            break;\n          }\n        }\n        custom ? extraArgs.push(arg) : custom = arg;\n        break;\n      default:\n        if (arg instanceof Error || (typeof DOMException !== 'undefined' && arg instanceof DOMException)) {\n          err ? extraArgs.push(arg) : err = arg;\n          break;\n        }\n        extraArgs.push(arg);\n    }\n  }\n\n  if (extraArgs.length > 0) {\n    // if custom is an array this turns it into an object with integer keys\n    custom = extend(true, {}, custom);\n    custom.extraArgs = extraArgs;\n  }\n\n  var item = {\n    message: message,\n    err: err,\n    custom: custom,\n    timestamp: now(),\n    callback: callback,\n    uuid: uuid4()\n  };\n  if (custom && custom.level !== undefined) {\n    item.level = custom.level;\n    delete custom.level;\n  }\n  if (requestKeys && request) {\n    item.request = request;\n  }\n  if (lambdaContext) {\n    item.lambdaContext = lambdaContext;\n  }\n  item._originalArgs = args;\n  return item;\n}\n\n/*\n * get - given an obj/array and a keypath, return the value at that keypath or\n *       undefined if not possible.\n *\n * @param obj - an object or array\n * @param path - a string of keys separated by '.' such as 'plugin.jquery.0.message'\n *    which would correspond to 42 in `{plugin: {jquery: [{message: 42}]}}`\n */\nfunction get(obj, path) {\n  if (!obj) {\n    return undefined;\n  }\n  var keys = path.split('.');\n  var result = obj;\n  try {\n    for (var i = 0, len = keys.length; i < len; ++i) {\n      result = result[keys[i]];\n    }\n  } catch (e) {\n    result = undefined;\n  }\n  return result;\n}\n\nfunction set(obj, path, value) {\n  if (!obj) {\n    return;\n  }\n  var keys = path.split('.');\n  var len = keys.length;\n  if (len < 1) {\n    return;\n  }\n  if (len === 1) {\n    obj[keys[0]] = value;\n    return;\n  }\n  try {\n    var temp = obj[keys[0]] || {};\n    var replacement = temp;\n    for (var i = 1; i < len-1; i++) {\n      temp[keys[i]] = temp[keys[i]] || {};\n      temp = temp[keys[i]];\n    }\n    temp[keys[len-1]] = value;\n    obj[keys[0]] = replacement;\n  } catch (e) {\n    return;\n  }\n}\n\nfunction scrub(data, scrubFields) {\n  scrubFields = scrubFields || [];\n  var paramRes = _getScrubFieldRegexs(scrubFields);\n  var queryRes = _getScrubQueryParamRegexs(scrubFields);\n\n  function redactQueryParam(dummy0, paramPart, dummy1, dummy2, dummy3, valPart) {\n    return paramPart + redact(valPart);\n  }\n\n  function paramScrubber(v) {\n    var i;\n    if (isType(v, 'string')) {\n      for (i = 0; i < queryRes.length; ++i) {\n        v = v.replace(queryRes[i], redactQueryParam);\n      }\n    }\n    return v;\n  }\n\n  function valScrubber(k, v) {\n    var i;\n    for (i = 0; i < paramRes.length; ++i) {\n      if (paramRes[i].test(k)) {\n        v = redact(v);\n        break;\n      }\n    }\n    return v;\n  }\n\n  function scrubber(k, v, seen) {\n    var tmpV = valScrubber(k, v);\n    if (tmpV === v) {\n      if (isType(v, 'object') || isType(v, 'array')) {\n        return traverse(v, scrubber, seen);\n      }\n      return paramScrubber(tmpV);\n    } else {\n      return tmpV;\n    }\n  }\n\n  return traverse(data, scrubber, []);\n}\n\nfunction _getScrubFieldRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '^\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?$';\n    ret.push(new RegExp(pat, 'i'));\n  }\n  return ret;\n}\n\n\nfunction _getScrubQueryParamRegexs(scrubFields) {\n  var ret = [];\n  var pat;\n  for (var i = 0; i < scrubFields.length; ++i) {\n    pat = '\\\\[?(%5[bB])?' + scrubFields[i] + '\\\\[?(%5[bB])?\\\\]?(%5[dD])?';\n    ret.push(new RegExp('(' + pat + '=)([^&\\\\n]+)', 'igm'));\n  }\n  return ret;\n}\n\nfunction formatArgsAsString(args) {\n  var i, len, arg;\n  var result = [];\n  for (i = 0, len = args.length; i < len; i++) {\n    arg = args[i];\n    if (typeof arg === 'object') {\n      arg = stringify(arg);\n      arg = arg.error || arg.value;\n      if (arg.length > 500)\n        arg = arg.substr(0,500)+'...';\n    } else if (typeof arg === 'undefined') {\n      arg = 'undefined';\n    }\n    result.push(arg);\n  }\n  return result.join(' ');\n}\n\nfunction now() {\n  if (Date.now) {\n    return +Date.now();\n  }\n  return +new Date();\n}\n\nmodule.exports = {\n  isType: isType,\n  typeName: typeName,\n  isFunction: isFunction,\n  isNativeFunction: isNativeFunction,\n  isIterable: isIterable,\n  isError: isError,\n  extend: extend,\n  traverse: traverse,\n  redact: redact,\n  uuid4: uuid4,\n  LEVELS: LEVELS,\n  sanitizeUrl: sanitizeUrl,\n  addParamsAndAccessTokenToPath: addParamsAndAccessTokenToPath,\n  formatUrl: formatUrl,\n  stringify: stringify,\n  jsonParse: jsonParse,\n  makeUnhandledStackInfo: makeUnhandledStackInfo,\n  createItem: createItem,\n  get: get,\n  set: set,\n  scrub: scrub,\n  formatArgsAsString: formatArgsAsString,\n  now: now\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/utility.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/extend/index.js\n// module id = 7\n// module chunks = 0","//  json3.js\n//  2017-02-21\n//  Public Domain.\n//  NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n//  See http://www.JSON.org/js.html\n//  This code should be minified before deployment.\n//  See http://javascript.crockford.com/jsmin.html\n\n//  USE YOUR OWN COPY. IT IS EXTREMELY UNWISE TO LOAD CODE FROM SERVERS YOU DO\n//  NOT CONTROL.\n\n//  This file creates a global JSON object containing two methods: stringify\n//  and parse. This file provides the ES5 JSON capability to ES3 systems.\n//  If a project might run on IE8 or earlier, then this file should be included.\n//  This file does nothing on ES5 systems.\n\n//      JSON.stringify(value, replacer, space)\n//          value       any JavaScript value, usually an object or array.\n//          replacer    an optional parameter that determines how object\n//                      values are stringified for objects. It can be a\n//                      function or an array of strings.\n//          space       an optional parameter that specifies the indentation\n//                      of nested structures. If it is omitted, the text will\n//                      be packed without extra whitespace. If it is a number,\n//                      it will specify the number of spaces to indent at each\n//                      level. If it is a string (such as \"\\t\" or \"&nbsp;\"),\n//                      it contains the characters used to indent at each level.\n//          This method produces a JSON text from a JavaScript value.\n//          When an object value is found, if the object contains a toJSON\n//          method, its toJSON method will be called and the result will be\n//          stringified. A toJSON method does not serialize: it returns the\n//          value represented by the name/value pair that should be serialized,\n//          or undefined if nothing should be serialized. The toJSON method\n//          will be passed the key associated with the value, and this will be\n//          bound to the value.\n\n//          For example, this would serialize Dates as ISO strings.\n\n//              Date.prototype.toJSON = function (key) {\n//                  function f(n) {\n//                      // Format integers to have at least two digits.\n//                      return (n < 10)\n//                          ? \"0\" + n\n//                          : n;\n//                  }\n//                  return this.getUTCFullYear()   + \"-\" +\n//                       f(this.getUTCMonth() + 1) + \"-\" +\n//                       f(this.getUTCDate())      + \"T\" +\n//                       f(this.getUTCHours())     + \":\" +\n//                       f(this.getUTCMinutes())   + \":\" +\n//                       f(this.getUTCSeconds())   + \"Z\";\n//              };\n\n//          You can provide an optional replacer method. It will be passed the\n//          key and value of each member, with this bound to the containing\n//          object. The value that is returned from your method will be\n//          serialized. If your method returns undefined, then the member will\n//          be excluded from the serialization.\n\n//          If the replacer parameter is an array of strings, then it will be\n//          used to select the members to be serialized. It filters the results\n//          such that only members with keys listed in the replacer array are\n//          stringified.\n\n//          Values that do not have JSON representations, such as undefined or\n//          functions, will not be serialized. Such values in objects will be\n//          dropped; in arrays they will be replaced with null. You can use\n//          a replacer function to replace those with JSON values.\n\n//          JSON.stringify(undefined) returns undefined.\n\n//          The optional space parameter produces a stringification of the\n//          value that is filled with line breaks and indentation to make it\n//          easier to read.\n\n//          If the space parameter is a non-empty string, then that string will\n//          be used for indentation. If the space parameter is a number, then\n//          the indentation will be that many spaces.\n\n//          Example:\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}]);\n//          // text is '[\"e\",{\"pluribus\":\"unum\"}]'\n\n//          text = JSON.stringify([\"e\", {pluribus: \"unum\"}], null, \"\\t\");\n//          // text is '[\\n\\t\"e\",\\n\\t{\\n\\t\\t\"pluribus\": \"unum\"\\n\\t}\\n]'\n\n//          text = JSON.stringify([new Date()], function (key, value) {\n//              return this[key] instanceof Date\n//                  ? \"Date(\" + this[key] + \")\"\n//                  : value;\n//          });\n//          // text is '[\"Date(---current time---)\"]'\n\n//      JSON.parse(text, reviver)\n//          This method parses a JSON text to produce an object or array.\n//          It can throw a SyntaxError exception.\n//          This has been modified to use JSON-js/json_parse_state.js as the\n//          parser instead of the one built around eval found in JSON-js/json2.js\n\n//          The optional reviver parameter is a function that can filter and\n//          transform the results. It receives each of the keys and values,\n//          and its return value is used instead of the original value.\n//          If it returns what it received, then the structure is not modified.\n//          If it returns undefined then the member is deleted.\n\n//          Example:\n\n//          // Parse the text. Values that look like ISO date strings will\n//          // be converted to Date objects.\n\n//          myData = JSON.parse(text, function (key, value) {\n//              var a;\n//              if (typeof value === \"string\") {\n//                  a =\n//   /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/.exec(value);\n//                  if (a) {\n//                      return new Date(Date.UTC(+a[1], +a[2] - 1, +a[3], +a[4],\n//                          +a[5], +a[6]));\n//                  }\n//              }\n//              return value;\n//          });\n\n//          myData = JSON.parse('[\"Date(09/09/2001)\"]', function (key, value) {\n//              var d;\n//              if (typeof value === \"string\" &&\n//                      value.slice(0, 5) === \"Date(\" &&\n//                      value.slice(-1) === \")\") {\n//                  d = new Date(value.slice(5, -1));\n//                  if (d) {\n//                      return d;\n//                  }\n//              }\n//              return value;\n//          });\n\n//  This is a reference implementation. You are free to copy, modify, or\n//  redistribute.\n\n/*jslint\n  for, this\n  */\n\n/*property\n  JSON, apply, call, charCodeAt, getUTCDate, getUTCFullYear, getUTCHours,\n  getUTCMinutes, getUTCMonth, getUTCSeconds, hasOwnProperty, join,\n  lastIndex, length, parse, prototype, push, replace, slice, stringify,\n  test, toJSON, toString, valueOf\n  */\n\nvar setupCustomJSON = function(JSON) {\n\n  var rx_one = /^[\\],:{}\\s]*$/;\n  var rx_two = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\n  var rx_three = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\n  var rx_four = /(?:^|:|,)(?:\\s*\\[)+/g;\n  var rx_escapable = /[\\\\\"\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n  var rx_dangerous = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\n\n  function f(n) {\n    // Format integers to have at least two digits.\n    return n < 10\n      ? \"0\" + n\n      : n;\n  }\n\n  function this_value() {\n    return this.valueOf();\n  }\n\n  if (typeof Date.prototype.toJSON !== \"function\") {\n\n    Date.prototype.toJSON = function () {\n\n      return isFinite(this.valueOf())\n        ? this.getUTCFullYear() + \"-\" +\n        f(this.getUTCMonth() + 1) + \"-\" +\n        f(this.getUTCDate()) + \"T\" +\n        f(this.getUTCHours()) + \":\" +\n        f(this.getUTCMinutes()) + \":\" +\n        f(this.getUTCSeconds()) + \"Z\"\n        : null;\n    };\n\n    Boolean.prototype.toJSON = this_value;\n    Number.prototype.toJSON = this_value;\n    String.prototype.toJSON = this_value;\n  }\n\n  var gap;\n  var indent;\n  var meta;\n  var rep;\n\n\n  function quote(string) {\n\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n\n    rx_escapable.lastIndex = 0;\n    return rx_escapable.test(string)\n      ? \"\\\"\" + string.replace(rx_escapable, function (a) {\n        var c = meta[a];\n        return typeof c === \"string\"\n          ? c\n          : \"\\\\u\" + (\"0000\" + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + \"\\\"\"\n    : \"\\\"\" + string + \"\\\"\";\n  }\n\n\n  function str(key, holder) {\n\n    // Produce a string from holder[key].\n\n    var i;          // The loop counter.\n    var k;          // The member key.\n    var v;          // The member value.\n    var length;\n    var mind = gap;\n    var partial;\n    var value = holder[key];\n\n    // If the value has a toJSON method, call it to obtain a replacement value.\n\n    if (value && typeof value === \"object\" &&\n        typeof value.toJSON === \"function\") {\n      value = value.toJSON(key);\n    }\n\n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n\n    if (typeof rep === \"function\") {\n      value = rep.call(holder, key, value);\n    }\n\n    // What happens next depends on the value's type.\n\n    switch (typeof value) {\n      case \"string\":\n        return quote(value);\n\n      case \"number\":\n\n        // JSON numbers must be finite. Encode non-finite numbers as null.\n\n        return isFinite(value)\n          ? String(value)\n          : \"null\";\n\n      case \"boolean\":\n      case \"null\":\n\n        // If the value is a boolean or null, convert it to a string. Note:\n        // typeof null does not produce \"null\". The case is included here in\n        // the remote chance that this gets fixed someday.\n\n        return String(value);\n\n        // If the type is \"object\", we might be dealing with an object or an array or\n        // null.\n\n      case \"object\":\n\n        // Due to a specification blunder in ECMAScript, typeof null is \"object\",\n        // so watch out for that case.\n\n        if (!value) {\n          return \"null\";\n        }\n\n        // Make an array to hold the partial results of stringifying this object value.\n\n        gap += indent;\n        partial = [];\n\n        // Is the value an array?\n\n        if (Object.prototype.toString.apply(value) === \"[object Array]\") {\n\n          // The value is an array. Stringify every element. Use null as a placeholder\n          // for non-JSON values.\n\n          length = value.length;\n          for (i = 0; i < length; i += 1) {\n            partial[i] = str(i, value) || \"null\";\n          }\n\n          // Join all of the elements together, separated with commas, and wrap them in\n          // brackets.\n\n          v = partial.length === 0\n            ? \"[]\"\n            : gap\n            ? \"[\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"]\"\n            : \"[\" + partial.join(\",\") + \"]\";\n          gap = mind;\n          return v;\n        }\n\n        // If the replacer is an array, use it to select the members to be stringified.\n\n        if (rep && typeof rep === \"object\") {\n          length = rep.length;\n          for (i = 0; i < length; i += 1) {\n            if (typeof rep[i] === \"string\") {\n              k = rep[i];\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        } else {\n\n          // Otherwise, iterate through all of the keys in the object.\n\n          for (k in value) {\n            if (Object.prototype.hasOwnProperty.call(value, k)) {\n              v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (\n                      gap\n                      ? \": \"\n                      : \":\"\n                      ) + v);\n              }\n            }\n          }\n        }\n\n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0\n          ? \"{}\"\n          : gap\n          ? \"{\\n\" + gap + partial.join(\",\\n\" + gap) + \"\\n\" + mind + \"}\"\n          : \"{\" + partial.join(\",\") + \"}\";\n        gap = mind;\n        return v;\n    }\n  }\n\n  // If the JSON object does not yet have a stringify method, give it one.\n\n  if (typeof JSON.stringify !== \"function\") {\n    meta = {    // table of character substitutions\n      \"\\b\": \"\\\\b\",\n      \"\\t\": \"\\\\t\",\n      \"\\n\": \"\\\\n\",\n      \"\\f\": \"\\\\f\",\n      \"\\r\": \"\\\\r\",\n      \"\\\"\": \"\\\\\\\"\",\n      \"\\\\\": \"\\\\\\\\\"\n    };\n    JSON.stringify = function (value, replacer, space) {\n\n      // The stringify method takes a value and an optional replacer, and an optional\n      // space parameter, and returns a JSON text. The replacer can be a function\n      // that can replace values, or an array of strings that will select the keys.\n      // A default replacer method can be provided. Use of the space parameter can\n      // produce text that is more easily readable.\n\n      var i;\n      gap = \"\";\n      indent = \"\";\n\n      // If the space parameter is a number, make an indent string containing that\n      // many spaces.\n\n      if (typeof space === \"number\") {\n        for (i = 0; i < space; i += 1) {\n          indent += \" \";\n        }\n\n        // If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === \"string\") {\n        indent = space;\n      }\n\n      // If there is a replacer, it must be a function or an array.\n      // Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== \"function\" &&\n          (typeof replacer !== \"object\" ||\n           typeof replacer.length !== \"number\")) {\n        throw new Error(\"JSON.stringify\");\n      }\n\n      // Make a fake root object containing our value under the key of \"\".\n      // Return the result of stringifying the value.\n\n      return str(\"\", {\"\": value});\n    };\n  }\n\n\n  // If the JSON object does not yet have a parse method, give it one.\n\n  if (typeof JSON.parse !== \"function\") {\n    JSON.parse = (function () {\n\n      // This function creates a JSON parse function that uses a state machine rather\n      // than the dangerous eval function to parse a JSON text.\n\n      var state;      // The state of the parser, one of\n      // 'go'         The starting state\n      // 'ok'         The final, accepting state\n      // 'firstokey'  Ready for the first key of the object or\n      //              the closing of an empty object\n      // 'okey'       Ready for the next key of the object\n      // 'colon'      Ready for the colon\n      // 'ovalue'     Ready for the value half of a key/value pair\n      // 'ocomma'     Ready for a comma or closing }\n      // 'firstavalue' Ready for the first value of an array or\n      //              an empty array\n      // 'avalue'     Ready for the next value of an array\n      // 'acomma'     Ready for a comma or closing ]\n      var stack;      // The stack, for controlling nesting.\n      var container;  // The current container object or array\n      var key;        // The current key\n      var value;      // The current value\n      var escapes = { // Escapement translation table\n        \"\\\\\": \"\\\\\",\n        \"\\\"\": \"\\\"\",\n        \"/\": \"/\",\n        \"t\": \"\\t\",\n        \"n\": \"\\n\",\n        \"r\": \"\\r\",\n        \"f\": \"\\f\",\n        \"b\": \"\\b\"\n      };\n      var string = {   // The actions for string tokens\n        go: function () {\n          state = \"ok\";\n        },\n        firstokey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        okey: function () {\n          key = value;\n          state = \"colon\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var number = {   // The actions for number tokens\n        go: function () {\n          state = \"ok\";\n        },\n        ovalue: function () {\n          state = \"ocomma\";\n        },\n        firstavalue: function () {\n          state = \"acomma\";\n        },\n        avalue: function () {\n          state = \"acomma\";\n        }\n      };\n      var action = {\n\n        // The action table describes the behavior of the machine. It contains an\n        // object for each token. Each object contains a method that is called when\n        // a token is matched in a state. An object will lack a method for illegal\n        // states.\n\n        \"{\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = {};\n            state = \"firstokey\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = {};\n            state = \"firstokey\";\n          }\n        },\n        \"}\": {\n          firstokey: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          ocomma: function () {\n            var pop = stack.pop();\n            container[key] = value;\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \"[\": {\n          go: function () {\n            stack.push({state: \"ok\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          ovalue: function () {\n            stack.push({container: container, state: \"ocomma\", key: key});\n            container = [];\n            state = \"firstavalue\";\n          },\n          firstavalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          },\n          avalue: function () {\n            stack.push({container: container, state: \"acomma\"});\n            container = [];\n            state = \"firstavalue\";\n          }\n        },\n        \"]\": {\n          firstavalue: function () {\n            var pop = stack.pop();\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          },\n          acomma: function () {\n            var pop = stack.pop();\n            container.push(value);\n            value = container;\n            container = pop.container;\n            key = pop.key;\n            state = pop.state;\n          }\n        },\n        \":\": {\n          colon: function () {\n            if (Object.hasOwnProperty.call(container, key)) {\n              throw new SyntaxError(\"Duplicate key '\" + key + \"\\\"\");\n            }\n            state = \"ovalue\";\n          }\n        },\n        \",\": {\n          ocomma: function () {\n            container[key] = value;\n            state = \"okey\";\n          },\n          acomma: function () {\n            container.push(value);\n            state = \"avalue\";\n          }\n        },\n        \"true\": {\n          go: function () {\n            value = true;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = true;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = true;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = true;\n            state = \"acomma\";\n          }\n        },\n        \"false\": {\n          go: function () {\n            value = false;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = false;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = false;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = false;\n            state = \"acomma\";\n          }\n        },\n        \"null\": {\n          go: function () {\n            value = null;\n            state = \"ok\";\n          },\n          ovalue: function () {\n            value = null;\n            state = \"ocomma\";\n          },\n          firstavalue: function () {\n            value = null;\n            state = \"acomma\";\n          },\n          avalue: function () {\n            value = null;\n            state = \"acomma\";\n          }\n        }\n      };\n\n      function debackslashify(text) {\n\n        // Remove and replace any backslash escapement.\n\n        return text.replace(/\\\\(?:u(.{4})|([^u]))/g, function (ignore, b, c) {\n          return b\n            ? String.fromCharCode(parseInt(b, 16))\n            : escapes[c];\n        });\n      }\n\n      return function (source, reviver) {\n\n        // A regular expression is used to extract tokens from the JSON text.\n        // The extraction process is cautious.\n\n        var result;\n        var tx = /^[\\u0020\\t\\n\\r]*(?:([,:\\[\\]{}]|true|false|null)|(-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)|\"((?:[^\\r\\n\\t\\\\\\\"]|\\\\(?:[\"\\\\\\/trnfb]|u[0-9a-fA-F]{4}))*)\")/;\n\n        // Set the starting state.\n\n        state = \"go\";\n\n        // The stack records the container, key, and state for each object or array\n        // that contains another object or array while processing nested structures.\n\n        stack = [];\n\n        // If any error occurs, we will catch it and ultimately throw a syntax error.\n\n        try {\n\n          // For each token...\n\n          while (true) {\n            result = tx.exec(source);\n            if (!result) {\n              break;\n            }\n\n            // result is the result array from matching the tokenizing regular expression.\n            //  result[0] contains everything that matched, including any initial whitespace.\n            //  result[1] contains any punctuation that was matched, or true, false, or null.\n            //  result[2] contains a matched number, still in string form.\n            //  result[3] contains a matched string, without quotes but with escapement.\n\n            if (result[1]) {\n\n              // Token: Execute the action for this state and token.\n\n              action[result[1]][state]();\n\n            } else if (result[2]) {\n\n              // Number token: Convert the number string into a number value and execute\n              // the action for this state and number.\n\n              value = +result[2];\n              number[state]();\n            } else {\n\n              // String token: Replace the escapement sequences and execute the action for\n              // this state and string.\n\n              value = debackslashify(result[3]);\n              string[state]();\n            }\n\n            // Remove the token from the string. The loop will continue as long as there\n            // are tokens. This is a slow process, but it allows the use of ^ matching,\n            // which assures that no illegal tokens slip through.\n\n            source = source.slice(result[0].length);\n          }\n\n          // If we find a state/token combination that is illegal, then the action will\n          // cause an error. We handle the error by simply changing the state.\n\n        } catch (e) {\n          state = e;\n        }\n\n        // The parsing is finished. If we are not in the final \"ok\" state, or if the\n        // remaining source contains anything except whitespace, then we did not have\n        //a well-formed JSON text.\n\n        if (state !== \"ok\" || (/[^\\u0020\\t\\n\\r]/.test(source))) {\n          throw (state instanceof SyntaxError)\n            ? state\n            : new SyntaxError(\"JSON\");\n        }\n\n        // If there is a reviver function, we recursively walk the new structure,\n        // passing each name/value pair to the reviver function for possible\n        // transformation, starting with a temporary root object that holds the current\n        // value in an empty key. If there is not a reviver function, we simply return\n        // that value.\n\n        return (typeof reviver === \"function\")\n          ? (function walk(holder, key) {\n            var k;\n            var v;\n            var val = holder[key];\n            if (val && typeof val === \"object\") {\n              for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(val, k)) {\n                  v = walk(val, k);\n                  if (v !== undefined) {\n                    val[k] = v;\n                  } else {\n                    delete val[k];\n                  }\n                }\n              }\n            }\n            return reviver.call(holder, key, val);\n          }({\"\": value}, \"\"))\n        : value;\n      };\n    }());\n  }\n}\n\nmodule.exports = setupCustomJSON;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./vendor/JSON-js/json3.js\n// module id = 8\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\n/*\n * Notifier - the internal object responsible for delegating between the client exposed API, the\n * chain of transforms necessary to turn an item into something that can be sent to Rollbar, and the\n * queue which handles the communcation with the Rollbar API servers.\n *\n * @param queue - an object that conforms to the interface: addItem(item, callback)\n * @param options - an object representing the options to be set for this notifier, this should have\n * any defaults already set by the caller\n */\nfunction Notifier(queue, options) {\n  this.queue = queue;\n  this.options = options;\n  this.transforms = [];\n}\n\n/*\n * configure - updates the options for this notifier with the passed in object\n *\n * @param options - an object which gets merged with the current options set on this notifier\n * @returns this\n */\nNotifier.prototype.configure = function(options) {\n  this.queue && this.queue.configure(options);\n  var oldOptions = this.options;\n  this.options = _.extend(true, {}, oldOptions, options);\n  return this;\n};\n\n/*\n * addTransform - adds a transform onto the end of the queue of transforms for this notifier\n *\n * @param transform - a function which takes three arguments:\n *    * item: An Object representing the data to eventually be sent to Rollbar\n *    * options: The current value of the options for this notifier\n *    * callback: function(err: (Null|Error), item: (Null|Object)) the transform must call this\n *    callback with a null value for error if it wants the processing chain to continue, otherwise\n *    with an error to terminate the processing. The item should be the updated item after this\n *    transform is finished modifying it.\n */\nNotifier.prototype.addTransform = function(transform) {\n  if (_.isFunction(transform)) {\n    this.transforms.push(transform);\n  }\n  return this;\n};\n\n/*\n * log - the internal log function which applies the configured transforms and then pushes onto the\n * queue to be sent to the backend.\n *\n * @param item - An object with the following structure:\n *    message [String] - An optional string to be sent to rollbar\n *    error [Error] - An optional error\n *\n * @param callback - A function of type function(err, resp) which will be called with exactly one\n * null argument and one non-null argument. The callback will be called once, either during the\n * transform stage if an error occurs inside a transform, or in response to the communication with\n * the backend. The second argument will be the response from the backend in case of success.\n */\nNotifier.prototype.log = function(item, callback) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  if (!this.options.enabled) {\n    return callback(new Error('Rollbar is not enabled'));\n  }\n\n  this.queue.addPendingItem(item);\n  var originalError = item.err;\n  this._applyTransforms(item, function(err, i) {\n    if (err) {\n      this.queue.removePendingItem(item);\n      return callback(err, null);\n    }\n    this.queue.addItem(i, callback, originalError, item);\n  }.bind(this));\n};\n\n/* Internal */\n\n/*\n * _applyTransforms - Applies the transforms that have been added to this notifier sequentially. See\n * `addTransform` for more information.\n *\n * @param item - An item to be transformed\n * @param callback - A function of type function(err, item) which will be called with a non-null\n * error and a null item in the case of a transform failure, or a null error and non-null item after\n * all transforms have been applied.\n */\nNotifier.prototype._applyTransforms = function(item, callback) {\n  var transformIndex = -1;\n  var transformsLength = this.transforms.length;\n  var transforms = this.transforms;\n  var options = this.options;\n\n  var cb = function(err, i) {\n    if (err) {\n      callback(err, null);\n      return;\n    }\n\n    transformIndex++;\n\n    if (transformIndex === transformsLength) {\n      callback(null, i);\n      return;\n    }\n\n    transforms[transformIndex](i, options, cb);\n  };\n\n  cb(null, item);\n};\n\nmodule.exports = Notifier;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/notifier.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nvar MAX_EVENTS = 100;\n\nfunction Telemeter(options) {\n  this.queue = [];\n  this.options = _.extend(true, {}, options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  this.maxQueueSize = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n}\n\nTelemeter.prototype.configure = function(options) {\n  var oldOptions = this.options;\n  this.options = _.extend(true, {}, oldOptions, options);\n  var maxTelemetryEvents = this.options.maxTelemetryEvents || MAX_EVENTS;\n  var newMaxEvents = Math.max(0, Math.min(maxTelemetryEvents, MAX_EVENTS));\n  var deleteCount = 0;\n  if (this.maxQueueSize > newMaxEvents) {\n    deleteCount = this.maxQueueSize - newMaxEvents;\n  }\n  this.maxQueueSize = newMaxEvents;\n  this.queue.splice(0, deleteCount);\n};\n\nTelemeter.prototype.copyEvents = function() {\n  return Array.prototype.slice.call(this.queue, 0);\n};\n\nTelemeter.prototype.capture = function(type, metadata, level, rollbarUUID, timestamp) {\n  var e = {\n    level: getLevel(type, level),\n    type: type,\n    timestamp_ms: timestamp || _.now(),\n    body: metadata,\n    source: 'client'\n  };\n  if (rollbarUUID) {\n    e.uuid = rollbarUUID;\n  }\n\n  try {\n    if (_.isFunction(this.options.filterTelemetry) && this.options.filterTelemetry(e)) {\n      return false;\n    }\n  } catch (e) {\n    this.options.filterTelemetry = null;\n  }\n\n  this.push(e);\n  return e;\n};\n\nTelemeter.prototype.captureEvent = function(metadata, level, rollbarUUID) {\n  return this.capture('manual', metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.captureError = function(err, level, rollbarUUID, timestamp) {\n  var metadata = {\n    message: err.message || String(err)\n  };\n  if (err.stack) {\n    metadata.stack = err.stack;\n  }\n  return this.capture('error', metadata, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureLog = function(message, level, rollbarUUID, timestamp) {\n  return this.capture('log', {\n    message: message\n  }, level, rollbarUUID, timestamp);\n};\n\nTelemeter.prototype.captureNetwork = function(metadata, subtype, rollbarUUID, requestData) {\n  subtype = subtype || 'xhr';\n  metadata.subtype = metadata.subtype || subtype;\n  if (requestData) {\n    metadata.request = requestData;\n  }\n  var level = this.levelFromStatus(metadata.status_code);\n  return this.capture('network', metadata, level, rollbarUUID);\n};\n\nTelemeter.prototype.levelFromStatus = function(statusCode) {\n  if (statusCode >= 200 && statusCode < 400) {\n    return 'info';\n  }\n  if (statusCode === 0 || statusCode >= 400) {\n    return 'error';\n  }\n  return 'info';\n};\n\nTelemeter.prototype.captureDom = function(subtype, element, value, checked, rollbarUUID) {\n  var metadata = {\n    subtype: subtype,\n    element: element\n  };\n  if (value !== undefined) {\n    metadata.value = value;\n  }\n  if (checked !== undefined) {\n    metadata.checked = checked;\n  }\n  return this.capture('dom', metadata, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureNavigation = function(from, to, rollbarUUID) {\n  return this.capture('navigation', {from: from, to: to}, 'info', rollbarUUID);\n};\n\nTelemeter.prototype.captureDomContentLoaded = function(ts) {\n  return this.capture('navigation', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'DOMContentLoaded'}, 'info', undefined, ts && ts.getTime());\n  */\n};\nTelemeter.prototype.captureLoad = function(ts) {\n  return this.capture('navigation', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  /**\n   * If we decide to make this a dom event instead, then use the line below:\n  return this.capture('dom', {subtype: 'load'}, 'info', undefined, ts && ts.getTime());\n  */\n};\n\nTelemeter.prototype.captureConnectivityChange = function(type, rollbarUUID) {\n  return this.captureNetwork({change: type}, 'connectivity', rollbarUUID);\n};\n\n// Only intended to be used internally by the notifier\nTelemeter.prototype._captureRollbarItem = function(item) {\n  if (item.err) {\n    return this.captureError(item.err, item.level, item.uuid, item.timestamp);\n  }\n  if (item.message) {\n    return this.captureLog(item.message, item.level, item.uuid, item.timestamp);\n  }\n  if (item.custom) {\n    return this.capture('log', item.custom, item.level, item.uuid, item.timestamp);\n  }\n};\n\nTelemeter.prototype.push = function(e) {\n  this.queue.push(e);\n  if (this.queue.length > this.maxQueueSize) {\n    this.queue.shift();\n  }\n};\n\nfunction getLevel(type, level) {\n  if (level) {\n    return level;\n  }\n  var defaultLevel = {\n    error: 'error',\n    manual: 'info'\n  };\n  return defaultLevel[type] || 'info';\n}\n\nmodule.exports = Telemeter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/telemetry.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\nvar helpers = require('./apiUtility');\n\nvar defaultOptions = {\n  hostname: 'api.rollbar.com',\n  path: '/api/1/item/',\n  search: null,\n  version: '1',\n  protocol: 'https:',\n  port: 443\n};\n\n/**\n * Api is an object that encapsulates methods of communicating with\n * the Rollbar API.  It is a standard interface with some parts implemented\n * differently for server or browser contexts.  It is an object that should\n * be instantiated when used so it can contain non-global options that may\n * be different for another instance of RollbarApi.\n *\n * @param options {\n *    accessToken: the accessToken to use for posting items to rollbar\n *    endpoint: an alternative endpoint to send errors to\n *        must be a valid, fully qualified URL.\n *        The default is: https://api.rollbar.com/api/1/item\n *    proxy: if you wish to proxy requests provide an object\n *        with the following keys:\n *          host or hostname (required): foo.example.com\n *          port (optional): 123\n *          protocol (optional): https\n * }\n */\nfunction Api(options, t, u, j) {\n  this.options = options;\n  this.transport = t;\n  this.url = u;\n  this.jsonBackup = j;\n  this.accessToken = options.accessToken;\n  this.transportOptions = _getTransport(options, u);\n}\n\n/**\n *\n * @param data\n * @param callback\n */\nApi.prototype.postItem = function(data, callback) {\n  var transportOptions = helpers.transportOptions(this.transportOptions, 'POST');\n  var payload = helpers.buildPayload(this.accessToken, data, this.jsonBackup);\n  this.transport.post(this.accessToken, transportOptions, payload, callback);\n};\n\nApi.prototype.configure = function(options) {\n  var oldOptions = this.oldOptions;\n  this.options = _.extend(true, {}, oldOptions, options);\n  this.transportOptions = _getTransport(this.options, this.url);\n  if (this.options.accessToken !== undefined) {\n    this.accessToken = this.options.accessToken;\n  }\n  return this;\n};\n\nfunction _getTransport(options, url) {\n  return helpers.getTransportFromOptions(options, defaultOptions, url);\n}\n\nmodule.exports = Api;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/api.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nfunction buildPayload(accessToken, data, jsonBackup) {\n  if (_.isType(data.context, 'object')) {\n    var contextResult = _.stringify(data.context, jsonBackup);\n    if (contextResult.error) {\n      data.context = 'Error: could not serialize \\'context\\'';\n    } else {\n      data.context = contextResult.value || '';\n    }\n    if (data.context.length > 255) {\n      data.context = data.context.substr(0, 255);\n    }\n  }\n  return {\n    access_token: accessToken,\n    data: data\n  };\n}\n\nfunction getTransportFromOptions(options, defaults, url) {\n  var hostname = defaults.hostname;\n  var protocol = defaults.protocol;\n  var port = defaults.port;\n  var path = defaults.path;\n  var search = defaults.search;\n\n  var proxy = options.proxy;\n  if (options.endpoint) {\n    var opts = url.parse(options.endpoint);\n    hostname = opts.hostname;\n    protocol = opts.protocol;\n    port = opts.port;\n    path = opts.pathname;\n    search = opts.search;\n  }\n  return {\n    hostname: hostname,\n    protocol: protocol,\n    port: port,\n    path: path,\n    search: search,\n    proxy: proxy\n  };\n}\n\nfunction transportOptions(transport, method) {\n  var protocol = transport.protocol || 'https:';\n  var port = transport.port || (protocol === 'http:' ? 80 : protocol === 'https:' ? 443 : undefined);\n  var hostname = transport.hostname;\n  var path = transport.path;\n  if (transport.search) {\n    path = path + transport.search;\n  }\n  if (transport.proxy) {\n    path = protocol + '//' + hostname + path;\n    hostname = transport.proxy.host || transport.proxy.hostname;\n    port = transport.proxy.port;\n    protocol = transport.proxy.protocol || protocol;\n  }\n  return {\n    protocol: protocol,\n    hostname: hostname,\n    path: path,\n    port: port,\n    method: method\n  };\n}\n\nfunction appendPathToPath(base, path) {\n  var baseTrailingSlash = /\\/$/.test(base);\n  var pathBeginningSlash = /^\\//.test(path);\n\n  if (baseTrailingSlash && pathBeginningSlash) {\n    path = path.substring(1);\n  } else if (!baseTrailingSlash && !pathBeginningSlash) {\n    path = '/' + path;\n  }\n\n  return base + path;\n}\n\nmodule.exports = {\n  buildPayload: buildPayload,\n  getTransportFromOptions: getTransportFromOptions,\n  transportOptions: transportOptions,\n  appendPathToPath: appendPathToPath\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/apiUtility.js\n// module id = 12\n// module chunks = 0","'use strict';\n\n/* eslint-disable no-console */\nrequire('console-polyfill');\nvar detection = require('./detection');\nvar _ = require('../utility');\n\nfunction error() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.error(_.formatArgsAsString(args));\n  } else {\n    console.error.apply(console, args);\n  }\n}\n\nfunction info() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.info(_.formatArgsAsString(args));\n  } else {\n    console.info.apply(console, args);\n  }\n}\n\nfunction log() {\n  var args = Array.prototype.slice.call(arguments, 0);\n  args.unshift('Rollbar:');\n  if (detection.ieVersion() <= 8) {\n    console.log(_.formatArgsAsString(args));\n  } else {\n    console.log.apply(console, args);\n  }\n}\n\n/* eslint-enable no-console */\n\nmodule.exports = {\n  error: error,\n  info: info,\n  log: log\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/logger.js\n// module id = 13\n// module chunks = 0","// Console-polyfill. MIT license.\n// https://github.com/paulmillr/console-polyfill\n// Make it safe to do console.log() always.\n(function(global) {\n  'use strict';\n  if (!global.console) {\n    global.console = {};\n  }\n  var con = global.console;\n  var prop, method;\n  var dummy = function() {};\n  var properties = ['memory'];\n  var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n     'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n     'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n  while (prop = properties.pop()) if (!con[prop]) con[prop] = {};\n  while (method = methods.pop()) if (!con[method]) con[method] = dummy;\n  // Using `this` for web workers & supports Browserify / Webpack.\n})(typeof window === 'undefined' ? this : window);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/console-polyfill/index.js\n// module id = 14\n// module chunks = 0","'use strict';\n\n// This detection.js module is used to encapsulate any ugly browser/feature\n// detection we may need to do.\n\n// Figure out which version of IE we're using, if any.\n// This is gleaned from http://stackoverflow.com/questions/5574842/best-way-to-check-for-ie-less-than-9-in-javascript-without-library\n// Will return an integer on IE (i.e. 8)\n// Will return undefined otherwise\nfunction getIEVersion() {\n\tvar undef;\n\tif (!document) {\n\t\treturn undef;\n\t}\n\n  var v = 3,\n    div = document.createElement('div'),\n    all = div.getElementsByTagName('i');\n\n  while (\n    div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n      all[0]\n    );\n\n  return v > 4 ? v : undef;\n}\n\nvar Detection = {\n  ieVersion: getIEVersion\n};\n\nmodule.exports = Detection;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/detection.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nfunction captureUncaughtExceptions(window, handler, shim) {\n  if (!window) { return; }\n  var oldOnError;\n\n  if (typeof handler._rollbarOldOnError === 'function') {\n    oldOnError = handler._rollbarOldOnError;\n  } else if (window.onerror && !window.onerror.belongsToShim) {\n    oldOnError = window.onerror;\n    handler._rollbarOldOnError = oldOnError;\n  }\n\n  var fn = function() {\n    var args = Array.prototype.slice.call(arguments, 0);\n    _rollbarWindowOnError(window, handler, oldOnError, args);\n  };\n  fn.belongsToShim = shim;\n  window.onerror = fn;\n}\n\nfunction _rollbarWindowOnError(window, r, old, args) {\n  if (window._rollbarWrappedError) {\n    if (!args[4]) {\n      args[4] = window._rollbarWrappedError;\n    }\n    if (!args[5]) {\n      args[5] = window._rollbarWrappedError._rollbarContext;\n    }\n    window._rollbarWrappedError = null;\n  }\n\n  r.handleUncaughtException.apply(r, args);\n  if (old) {\n    old.apply(window, args);\n  }\n}\n\nfunction captureUnhandledRejections(window, handler, shim) {\n  if (!window) { return; }\n\n  if (typeof window._rollbarURH === 'function' && window._rollbarURH.belongsToShim) {\n    window.removeEventListener('unhandledrejection', window._rollbarURH);\n  }\n\n  var rejectionHandler = function (evt) {\n    var reason, promise, detail;\n    try {\n      reason = evt.reason;\n    } catch (e) {\n      reason = undefined;\n    }\n    try {\n      promise = evt.promise;\n    } catch (e) {\n      promise = '[unhandledrejection] error getting `promise` from event';\n    }\n    try {\n      detail = evt.detail;\n      if (!reason && detail) {\n        reason = detail.reason;\n        promise = detail.promise;\n      }\n    } catch (e) {\n      detail = '[unhandledrejection] error getting `detail` from event';\n    }\n    if (!reason) {\n      reason = '[unhandledrejection] error getting `reason` from event';\n    }\n\n    if (handler && handler.handleUnhandledRejection) {\n      handler.handleUnhandledRejection(reason, promise);\n    }\n  };\n  rejectionHandler.belongsToShim = shim;\n  window._rollbarURH = rejectionHandler;\n  window.addEventListener('unhandledrejection', rejectionHandler);\n}\n\nfunction wrapGlobals(window, handler, shim) {\n  if (!window) { return; }\n  // Adapted from https://github.com/bugsnag/bugsnag-js\n  var globals = 'EventTarget,Window,Node,ApplicationCache,AudioTrackList,ChannelMergerNode,CryptoOperation,EventSource,FileReader,HTMLUnknownElement,IDBDatabase,IDBRequest,IDBTransaction,KeyOperation,MediaController,MessagePort,ModalWindow,Notification,SVGElementInstance,Screen,TextTrack,TextTrackCue,TextTrackList,WebSocket,WebSocketWorker,Worker,XMLHttpRequest,XMLHttpRequestEventTarget,XMLHttpRequestUpload'.split(',');\n  var i, global;\n  for (i = 0; i < globals.length; ++i) {\n    global = globals[i];\n\n    if (window[global] && window[global].prototype) {\n      _extendListenerPrototype(handler, window[global].prototype, shim);\n    }\n  }\n}\n\nfunction _extendListenerPrototype(handler, prototype, shim) {\n  if (prototype.hasOwnProperty && prototype.hasOwnProperty('addEventListener')) {\n    var oldAddEventListener = prototype.addEventListener;\n    while (oldAddEventListener._rollbarOldAdd && oldAddEventListener.belongsToShim) {\n      oldAddEventListener = oldAddEventListener._rollbarOldAdd;\n    }\n    var addFn = function(event, callback, bubble) {\n      oldAddEventListener.call(this, event, handler.wrap(callback), bubble);\n    };\n    addFn._rollbarOldAdd = oldAddEventListener;\n    addFn.belongsToShim = shim;\n    prototype.addEventListener = addFn;\n\n    var oldRemoveEventListener = prototype.removeEventListener;\n    while (oldRemoveEventListener._rollbarOldRemove && oldRemoveEventListener.belongsToShim) {\n      oldRemoveEventListener = oldRemoveEventListener._rollbarOldRemove;\n    }\n    var removeFn = function(event, callback, bubble) {\n      oldRemoveEventListener.call(this, event, callback && callback._rollbar_wrapped || callback, bubble);\n    };\n    removeFn._rollbarOldRemove = oldRemoveEventListener;\n    removeFn.belongsToShim = shim;\n    prototype.removeEventListener = removeFn;\n  }\n}\n\nmodule.exports = {\n  captureUncaughtExceptions: captureUncaughtExceptions,\n  captureUnhandledRejections: captureUnhandledRejections,\n  wrapGlobals: wrapGlobals\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/globalSetup.js\n// module id = 16\n// module chunks = 0","'use strict';\n\nvar _ = require('../utility');\nvar logger = require('./logger');\n\n/*\n * accessToken may be embedded in payload but that should not\n *   be assumed\n *\n * options: {\n *   hostname\n *   protocol\n *   path\n *   port\n *   method\n * }\n *\n *  params is an object containing key/value pairs. These\n *    will be appended to the path as 'key=value&key=value'\n *\n * payload is an unserialized object\n */\n\nfunction get(accessToken, options, params, callback, requestFactory) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n  _.addParamsAndAccessTokenToPath(accessToken, options, params);\n\n  var method = 'GET';\n  var url = _.formatUrl(options);\n  _makeRequest(accessToken, url, method, null, callback, requestFactory);\n}\n\nfunction post(accessToken, options, payload, callback, requestFactory) {\n  if (!callback || !_.isFunction(callback)) {\n    callback = function() {};\n  }\n\n  if (!payload) {\n    return callback(new Error('Cannot send empty request'));\n  }\n\n  var stringifyResult = _.stringify(payload);\n  if (stringifyResult.error) {\n    return callback(stringifyResult.error);\n  }\n\n  var writeData = stringifyResult.value;\n  var method = 'POST';\n  var url = _.formatUrl(options);\n  _makeRequest(accessToken, url, method, writeData, callback, requestFactory);\n}\n\nfunction _makeRequest(accessToken, url, method, data, callback, requestFactory) {\n  var request;\n  if (requestFactory) {\n    request = requestFactory();\n  } else {\n    request = _createXMLHTTPObject();\n  }\n  if (!request) {\n    // Give up, no way to send requests\n    return callback(new Error('No way to send a request'));\n  }\n  try {\n    try {\n      var onreadystatechange = function() {\n        try {\n          if (onreadystatechange && request.readyState === 4) {\n            onreadystatechange = undefined;\n\n            var parseResponse = _.jsonParse(request.responseText);\n            if (_isSuccess(request)) {\n              callback(parseResponse.error, parseResponse.value);\n              return;\n            } else if (_isNormalFailure(request)) {\n              if (request.status === 403) {\n                // likely caused by using a server access token\n                var message = parseResponse.value && parseResponse.value.message;\n                logger.error(message);\n              }\n              // return valid http status codes\n              callback(new Error(String(request.status)));\n            } else {\n              // IE will return a status 12000+ on some sort of connection failure,\n              // so we return a blank error\n              // http://msdn.microsoft.com/en-us/library/aa383770%28VS.85%29.aspx\n              var msg = 'XHR response had no status code (likely connection failure)';\n              callback(_newRetriableError(msg));\n            }\n          }\n        } catch (ex) {\n          //jquery source mentions firefox may error out while accessing the\n          //request members if there is a network error\n          //https://github.com/jquery/jquery/blob/a938d7b1282fc0e5c52502c225ae8f0cef219f0a/src/ajax/xhr.js#L111\n          var exc;\n          if (ex && ex.stack) {\n            exc = ex;\n          } else {\n            exc = new Error(ex);\n          }\n          callback(exc);\n        }\n      };\n\n      request.open(method, url, true);\n      if (request.setRequestHeader) {\n        request.setRequestHeader('Content-Type', 'application/json');\n        request.setRequestHeader('X-Rollbar-Access-Token', accessToken);\n      }\n      request.onreadystatechange = onreadystatechange;\n      request.send(data);\n    } catch (e1) {\n      // Sending using the normal xmlhttprequest object didn't work, try XDomainRequest\n      if (typeof XDomainRequest !== 'undefined') {\n\n        // Assume we are in a really old browser which has a bunch of limitations:\n        // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n\n        // Extreme paranoia: if we have XDomainRequest then we have a window, but just in case\n        if (!window || !window.location) {\n          return callback(new Error('No window available during request, unknown environment'));\n        }\n\n        // If the current page is http, try and send over http\n        if (window.location.href.substring(0, 5) === 'http:' && url.substring(0, 5) === 'https') {\n          url = 'http' + url.substring(5);\n        }\n\n        var xdomainrequest = new XDomainRequest();\n        xdomainrequest.onprogress = function() {};\n        xdomainrequest.ontimeout = function() {\n          var msg = 'Request timed out';\n          var code = 'ETIMEDOUT';\n          callback(_newRetriableError(msg, code));\n        };\n        xdomainrequest.onerror = function() {\n          callback(new Error('Error during request'));\n        };\n        xdomainrequest.onload = function() {\n          var parseResponse = _.jsonParse(xdomainrequest.responseText);\n          callback(parseResponse.error, parseResponse.value);\n        };\n        xdomainrequest.open(method, url, true);\n        xdomainrequest.send(data);\n      } else {\n        callback(new Error('Cannot find a method to transport a request'));\n      }\n    }\n  } catch (e2) {\n    callback(e2);\n  }\n}\n\nfunction _createXMLHTTPObject() {\n  /* global ActiveXObject:false */\n\n  var factories = [\n    function () {\n      return new XMLHttpRequest();\n    },\n    function () {\n      return new ActiveXObject('Msxml2.XMLHTTP');\n    },\n    function () {\n      return new ActiveXObject('Msxml3.XMLHTTP');\n    },\n    function () {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    }\n  ];\n  var xmlhttp;\n  var i;\n  var numFactories = factories.length;\n  for (i = 0; i < numFactories; i++) {\n    /* eslint-disable no-empty */\n    try {\n      xmlhttp = factories[i]();\n      break;\n    } catch (e) {\n      // pass\n    }\n    /* eslint-enable no-empty */\n  }\n  return xmlhttp;\n}\n\nfunction _isSuccess(r) {\n  return r && r.status && r.status === 200;\n}\n\nfunction _isNormalFailure(r) {\n  return r && _.isType(r.status, 'number') && r.status >= 400 && r.status < 600;\n}\n\nfunction _newRetriableError(message, code) {\n  var err = new Error(message);\n  err.code = code || 'ENOTFOUND';\n  return err;\n}\n\nmodule.exports = {\n  get: get,\n  post: post\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/transport.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n// See https://nodejs.org/docs/latest/api/url.html\nfunction parse(url) {\n  var result = {\n    protocol: null, auth: null, host: null, path: null,\n    hash: null, href: url, hostname: null, port: null,\n    pathname: null, search: null, query: null\n  };\n\n  var i, last;\n  i = url.indexOf('//');\n  if (i !== -1) {\n    result.protocol = url.substring(0,i);\n    last = i+2;\n  } else {\n    last = 0;\n  }\n  \n  i = url.indexOf('@', last);\n  if (i !== -1) {\n    result.auth = url.substring(last, i);\n    last = i+1;\n  }\n\n  i = url.indexOf('/', last);\n  if (i === -1) {\n    i = url.indexOf('?', last);\n    if (i === -1) {\n      i = url.indexOf('#', last);\n      if (i === -1) {\n        result.host = url.substring(last);\n      } else {\n        result.host = url.substring(last, i);\n        result.hash = url.substring(i);\n      }\n      result.hostname = result.host.split(':')[0];\n      result.port = result.host.split(':')[1];\n      if (result.port) {\n        result.port = parseInt(result.port, 10);\n      }\n      return result;\n    } else {\n      result.host = url.substring(last, i);\n      result.hostname = result.host.split(':')[0];\n      result.port = result.host.split(':')[1];\n      if (result.port) {\n        result.port = parseInt(result.port, 10);\n      }\n      last = i;\n    }\n  } else {\n    result.host = url.substring(last, i);\n    result.hostname = result.host.split(':')[0];\n    result.port = result.host.split(':')[1];\n    if (result.port) {\n      result.port = parseInt(result.port, 10);\n    }\n    last = i;\n  }\n\n  i = url.indexOf('#', last);\n  if (i === -1) {\n    result.path = url.substring(last);\n  } else {\n    result.path = url.substring(last, i);\n    result.hash = url.substring(i);\n  }\n\n  if (result.path) {\n    var pathParts = result.path.split('?');\n    result.pathname = pathParts[0];\n    result.query = pathParts[1];\n    result.search = result.query ? '?' + result.query : null;\n  }\n  return result;\n}\n\nmodule.exports = {\n  parse: parse\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/url.js\n// module id = 18\n// module chunks = 0","'use strict';\n\nvar _ = require('../utility');\nvar errorParser = require('./errorParser');\nvar logger = require('./logger');\n\nfunction handleItemWithError(item, options, callback) {\n  item.data = item.data || {};\n  if (item.err) {\n    try {\n      item.stackInfo = item.err._savedStackTrace || errorParser.parse(item.err);\n    } catch (e)\n    /* istanbul ignore next */\n    {\n      logger.error('Error while parsing the error object.', e);\n      item.message = item.err.message || item.err.description || item.message || String(item.err);\n      delete item.err;\n    }\n  }\n  callback(null, item);\n}\n\nfunction ensureItemHasSomethingToSay(item, options, callback) {\n  if (!item.message && !item.stackInfo && !item.custom) {\n    callback(new Error('No message, stack info, or custom data'), null);\n  }\n  callback(null, item);\n}\n\nfunction addBaseInfo(item, options, callback) {\n  var environment = (options.payload && options.payload.environment) || options.environment;\n  item.data = _.extend(true, {}, item.data, {\n    environment: environment,\n    level: item.level,\n    endpoint: options.endpoint,\n    platform: 'browser',\n    framework: 'browser-js',\n    language: 'javascript',\n    server: {},\n    uuid: item.uuid,\n    notifier: {\n      name: 'rollbar-browser-js',\n      version: options.version\n    }\n  });\n  callback(null, item);\n}\n\nfunction addRequestInfo(window) {\n  return function(item, options, callback) {\n    if (!window || !window.location) {\n      return callback(null, item);\n    }\n    _.set(item, 'data.request', {\n      url: window.location.href,\n      query_string: window.location.search,\n      user_ip: '$remote_ip'\n    });\n    callback(null, item);\n  };\n}\n\nfunction addClientInfo(window) {\n  return function(item, options, callback) {\n    if (!window) {\n      return callback(null, item);\n    }\n    var nav = window.navigator || {};\n    var scr = window.screen || {};\n    _.set(item, 'data.client', {\n      runtime_ms: item.timestamp - window._rollbarStartTime,\n      timestamp: Math.round(item.timestamp / 1000),\n      javascript: {\n        browser: nav.userAgent,\n        language: nav.language,\n        cookie_enabled: nav.cookieEnabled,\n        screen: {\n          width: scr.width,\n          height: scr.height\n        }\n      }\n    });\n    callback(null, item);\n  };\n}\n\nfunction addPluginInfo(window) {\n  return function(item, options, callback) {\n    if (!window || !window.navigator) {\n      return callback(null, item);\n    }\n    var plugins = [];\n    var navPlugins = window.navigator.plugins || [];\n    var cur;\n    for (var i=0, l=navPlugins.length; i < l; ++i) {\n      cur = navPlugins[i];\n      plugins.push({name: cur.name, description: cur.description});\n    }\n    _.set(item, 'data.client.javascript.plugins', plugins);\n    callback(null, item);\n  };\n}\n\nfunction addBody(item, options, callback) {\n  if (item.stackInfo) {\n    addBodyTrace(item, options, callback);\n  } else {\n    addBodyMessage(item, options, callback);\n  }\n}\n\nfunction addBodyMessage(item, options, callback) {\n  var message = item.message;\n  var custom = item.custom;\n\n  if (!message) {\n    if (custom) {\n      var scrubFields = options.scrubFields;\n      var messageResult = _.stringify(_.scrub(custom, scrubFields));\n      message = messageResult.error || messageResult.value || '';\n    } else {\n      message = '';\n    }\n  }\n  var result = {\n    body: message\n  };\n\n  if (custom) {\n    result.extra = _.extend(true, {}, custom);\n  }\n\n  _.set(item, 'data.body', {message: result});\n  callback(null, item);\n}\n\n\nfunction addBodyTrace(item, options, callback) {\n  var description = item.data.description;\n  var stackInfo = item.stackInfo;\n  var custom = item.custom;\n\n  var guess = errorParser.guessErrorClass(stackInfo.message);\n  var className = stackInfo.name || guess[0];\n  var message = guess[1];\n  var trace = {\n    exception: {\n      'class': className,\n      message: message\n    }\n  };\n\n  if (description) {\n    trace.exception.description = description;\n  }\n\n  // Transform a TraceKit stackInfo object into a Rollbar trace\n  var stack = stackInfo.stack;\n  if (stack && stack.length === 0 && item._unhandledStackInfo && item._unhandledStackInfo.stack) {\n    stack = item._unhandledStackInfo.stack;\n  }\n  if (stack) {\n    if (stack.length === 0) {\n      trace.exception.stack = stackInfo.rawStack;\n      trace.exception.raw = String(stackInfo.rawException);\n    }\n    var stackFrame;\n    var frame;\n    var code;\n    var pre;\n    var post;\n    var contextLength;\n    var i, mid;\n\n    trace.frames = [];\n    for (i = 0; i < stack.length; ++i) {\n      stackFrame = stack[i];\n      frame = {\n        filename: stackFrame.url ? _.sanitizeUrl(stackFrame.url) : '(unknown)',\n        lineno: stackFrame.line || null,\n        method: (!stackFrame.func || stackFrame.func === '?') ? '[anonymous]' : stackFrame.func,\n        colno: stackFrame.column\n      };\n      if (frame.method && frame.method.endsWith && frame.method.endsWith('_rollbar_wrapped')) {\n        continue;\n      }\n\n      code = pre = post = null;\n      contextLength = stackFrame.context ? stackFrame.context.length : 0;\n      if (contextLength) {\n        mid = Math.floor(contextLength / 2);\n        pre = stackFrame.context.slice(0, mid);\n        code = stackFrame.context[mid];\n        post = stackFrame.context.slice(mid);\n      }\n\n      if (code) {\n        frame.code = code;\n      }\n\n      if (pre || post) {\n        frame.context = {};\n        if (pre && pre.length) {\n          frame.context.pre = pre;\n        }\n        if (post && post.length) {\n          frame.context.post = post;\n        }\n      }\n\n      if (stackFrame.args) {\n        frame.args = stackFrame.args;\n      }\n\n      trace.frames.push(frame);\n    }\n\n    // NOTE(cory): reverse the frames since rollbar.com expects the most recent call last\n    trace.frames.reverse();\n\n    if (custom) {\n      trace.extra = _.extend(true, {}, custom);\n    }\n    _.set(item, 'data.body', {trace: trace});\n    callback(null, item);\n  } else {\n    item.message = className + ': ' + message;\n    addBodyMessage(item, options, callback);\n  }\n}\n\nfunction scrubPayload(item, options, callback) {\n  var scrubFields = options.scrubFields;\n  item.data = _.scrub(item.data, scrubFields);\n  callback(null, item);\n}\n\nmodule.exports = {\n  handleItemWithError: handleItemWithError,\n  ensureItemHasSomethingToSay: ensureItemHasSomethingToSay,\n  addBaseInfo: addBaseInfo,\n  addRequestInfo: addRequestInfo,\n  addClientInfo: addClientInfo,\n  addPluginInfo: addPluginInfo,\n  addBody: addBody,\n  scrubPayload: scrubPayload\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/transforms.js\n// module id = 19\n// module chunks = 0","'use strict';\n\nvar ErrorStackParser = require('error-stack-parser');\n\nvar UNKNOWN_FUNCTION = '?';\nvar ERR_CLASS_REGEXP = new RegExp('^(([a-zA-Z0-9-_$ ]*): *)?(Uncaught )?([a-zA-Z0-9-_$ ]*): ');\n\nfunction guessFunctionName() {\n  return UNKNOWN_FUNCTION;\n}\n\n\nfunction gatherContext() {\n  return null;\n}\n\n\nfunction Frame(stackFrame) {\n  var data = {};\n\n  data._stackFrame = stackFrame;\n\n  data.url = stackFrame.fileName;\n  data.line = stackFrame.lineNumber;\n  data.func = stackFrame.functionName;\n  data.column = stackFrame.columnNumber;\n  data.args = stackFrame.args;\n\n  data.context = gatherContext(data.url, data.line);\n\n  return data;\n}\n\n\nfunction Stack(exception) {\n  function getStack() {\n    var parserStack = [];\n    var exc;\n\n    if (!exception.stack) {\n      try {\n        throw exception;\n      } catch (e) {\n        exc = e;\n      }\n    } else {\n      exc = exception;\n    }\n\n    try {\n      parserStack = ErrorStackParser.parse(exc);\n    } catch(e) {\n      parserStack = [];\n    }\n\n    var stack = [];\n\n    for (var i = 0; i < parserStack.length; i++) {\n      stack.push(new Frame(parserStack[i]));\n    }\n\n    return stack;\n  }\n\n  return {\n    stack: getStack(),\n    message: exception.message,\n    name: exception.name,\n    rawStack: exception.stack,\n    rawException: exception\n  };\n}\n\n\nfunction parse(e) {\n  return new Stack(e);\n}\n\n\nfunction guessErrorClass(errMsg) {\n  if (!errMsg || !errMsg.match) {\n    return ['Unknown error. There was no error message to display.', ''];\n  }\n  var errClassMatch = errMsg.match(ERR_CLASS_REGEXP);\n  var errClass = '(unknown)';\n\n  if (errClassMatch) {\n    errClass = errClassMatch[errClassMatch.length - 1];\n    errMsg = errMsg.replace((errClassMatch[errClassMatch.length - 2] || '') + errClass + ':', '');\n    errMsg = errMsg.replace(/(^[\\s]+|[\\s]+$)/g, '');\n  }\n  return [errClass, errMsg];\n}\n\n\nmodule.exports = {\n  guessFunctionName: guessFunctionName,\n  guessErrorClass: guessErrorClass,\n  gatherContext: gatherContext,\n  parse: parse,\n  Stack: Stack,\n  Frame: Frame\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/errorParser.js\n// module id = 20\n// module chunks = 0","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+\\:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+\\:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code\\])?$/;\n\n    function _map(array, fn, thisArg) {\n        if (typeof Array.prototype.map === 'function') {\n            return array.map(fn, thisArg);\n        } else {\n            var output = new Array(array.length);\n            for (var i = 0; i < array.length; i++) {\n                output[i] = fn.call(thisArg, array[i]);\n            }\n            return output;\n        }\n    }\n\n    function _filter(array, fn, thisArg) {\n        if (typeof Array.prototype.filter === 'function') {\n            return array.filter(fn, thisArg);\n        } else {\n            var output = [];\n            for (var i = 0; i < array.length; i++) {\n                if (fn.call(thisArg, array[i])) {\n                    output.push(array[i]);\n                }\n            }\n            return output;\n        }\n    }\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         * @param error {Error}\n         * @return Array[StackFrame]\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        /**\n         * Separate line and column numbers from a URL-like string.\n         * @param urlLike String\n         * @return Array[String]\n         */\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var locationParts = urlLike.replace(/[\\(\\)\\s]/g, '').split(':');\n            var lastNumber = locationParts.pop();\n            var possibleNumber = locationParts[locationParts.length - 1];\n            if (!isNaN(parseFloat(possibleNumber)) && isFinite(possibleNumber)) {\n                var lineNumber = locationParts.pop();\n                return [locationParts.join(':'), lineNumber, lastNumber];\n            } else {\n                return [locationParts.join(':'), lastNumber, undefined];\n            }\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^\\()]*)|(\\)\\,.*$)/g, '');\n                }\n                var tokens = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').split(/\\s+/).slice(1);\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionName = tokens.join(' ') || undefined;\n                var fileName = locationParts[0] === 'eval' ? undefined : locationParts[0];\n\n                return new StackFrame(functionName, undefined, fileName, locationParts[1], locationParts[2], line);\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return _map(filtered, function (line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval\\:\\d+\\:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame(line);\n                } else {\n                    var tokens = line.split('@');\n                    var locationParts = this.extractLocation(tokens.pop());\n                    var functionName = tokens.shift() || undefined;\n                    return new StackFrame(functionName, undefined, locationParts[0], locationParts[1], locationParts[2], line);\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame(match[3] || undefined, undefined, match[2], match[1], undefined, lines[i]));\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = _filter(error.stack.split('\\n'), function (line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) &&\n                    !line.match(/^Error created at/);\n            }, this);\n\n            return _map(filtered, function (line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                        .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                        .replace(/\\([^\\)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^\\)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^\\(]+\\(([^\\)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ? undefined : argsRaw.split(',');\n                return new StackFrame(functionName, args, locationParts[0], locationParts[1], locationParts[2], line);\n            }, this);\n        }\n    };\n}));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/error-stack-parser/error-stack-parser.js\n// module id = 21\n// module chunks = 0","(function (root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stackframe', [], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.StackFrame = factory();\n    }\n}(this, function () {\n    'use strict';\n    function _isNumber(n) {\n        return !isNaN(parseFloat(n)) && isFinite(n);\n    }\n\n    function StackFrame(functionName, args, fileName, lineNumber, columnNumber, source) {\n        if (functionName !== undefined) {\n            this.setFunctionName(functionName);\n        }\n        if (args !== undefined) {\n            this.setArgs(args);\n        }\n        if (fileName !== undefined) {\n            this.setFileName(fileName);\n        }\n        if (lineNumber !== undefined) {\n            this.setLineNumber(lineNumber);\n        }\n        if (columnNumber !== undefined) {\n            this.setColumnNumber(columnNumber);\n        }\n        if (source !== undefined) {\n            this.setSource(source);\n        }\n    }\n\n    StackFrame.prototype = {\n        getFunctionName: function () {\n            return this.functionName;\n        },\n        setFunctionName: function (v) {\n            this.functionName = String(v);\n        },\n\n        getArgs: function () {\n            return this.args;\n        },\n        setArgs: function (v) {\n            if (Object.prototype.toString.call(v) !== '[object Array]') {\n                throw new TypeError('Args must be an Array');\n            }\n            this.args = v;\n        },\n\n        // NOTE: Property name may be misleading as it includes the path,\n        // but it somewhat mirrors V8's JavaScriptStackTraceApi\n        // https://code.google.com/p/v8/wiki/JavaScriptStackTraceApi and Gecko's\n        // http://mxr.mozilla.org/mozilla-central/source/xpcom/base/nsIException.idl#14\n        getFileName: function () {\n            return this.fileName;\n        },\n        setFileName: function (v) {\n            this.fileName = String(v);\n        },\n\n        getLineNumber: function () {\n            return this.lineNumber;\n        },\n        setLineNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Line Number must be a Number');\n            }\n            this.lineNumber = Number(v);\n        },\n\n        getColumnNumber: function () {\n            return this.columnNumber;\n        },\n        setColumnNumber: function (v) {\n            if (!_isNumber(v)) {\n                throw new TypeError('Column Number must be a Number');\n            }\n            this.columnNumber = Number(v);\n        },\n\n        getSource: function () {\n            return this.source;\n        },\n        setSource: function (v) {\n            this.source = String(v);\n        },\n\n        toString: function() {\n            var functionName = this.getFunctionName() || '{anonymous}';\n            var args = '(' + (this.getArgs() || []).join(',') + ')';\n            var fileName = this.getFileName() ? ('@' + this.getFileName()) : '';\n            var lineNumber = _isNumber(this.getLineNumber()) ? (':' + this.getLineNumber()) : '';\n            var columnNumber = _isNumber(this.getColumnNumber()) ? (':' + this.getColumnNumber()) : '';\n            return functionName + args + fileName + lineNumber + columnNumber;\n        }\n    };\n\n    return StackFrame;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/error-stack-parser/~/stackframe/stackframe.js\n// module id = 22\n// module chunks = 0","'use strict';\n\nvar _ = require('./utility');\n\nfunction itemToPayload(item, options, callback) {\n  var payloadOptions = options.payload || {};\n  if (payloadOptions.body) {\n    delete payloadOptions.body;\n  }\n\n  var data = _.extend(true, {}, item.data, payloadOptions);\n  if (item._isUncaught) {\n    data._isUncaught = true;\n  }\n  if (item._originalArgs) {\n    data._originalArgs = item._originalArgs;\n  }\n  callback(null, data);\n}\n\nfunction addTelemetryData(item, options, callback) {\n  if (item.telemetryEvents) {\n    _.set(item, 'data.body.telemetry', item.telemetryEvents);\n  }\n  callback(null, item);\n}\n\nfunction addMessageWithError(item, options, callback) {\n  if (!item.message) {\n    callback(null, item);\n    return;\n  }\n  var tracePath = 'data.body.trace_chain.0';\n  var trace = _.get(item, tracePath);\n  if (!trace) {\n    tracePath = 'data.body.trace';\n    trace = _.get(item, tracePath);\n  }\n  if (trace) {\n    if (!(trace.exception && trace.exception.description)) {\n      _.set(item, tracePath+'.exception.description', item.message);\n      callback(null, item);\n      return;\n    }\n    var extra = _.get(item, tracePath+'.extra') || {};\n    var newExtra =  _.extend(true, {}, extra, {message: item.message});\n    _.set(item, tracePath+'.extra', newExtra);\n  }\n  callback(null, item);\n}\n\nfunction userTransform(logger) {\n  return function(item, options, callback) {\n    var newItem = _.extend(true, {}, item);\n    try {\n      if (_.isFunction(options.transform)) {\n        options.transform(newItem.data);\n      }\n    } catch (e) {\n      options.transform = null;\n      logger.error('Error while calling custom transform() function. Removing custom transform().', e);\n      callback(null, item);\n      return;\n    }\n    callback(null, newItem);\n  }\n}\n\nfunction addConfigToPayload(item, options, callback) {\n  if (!options.sendConfig) {\n    return callback(null, item);\n  }\n  var configKey = '_rollbarConfig';\n  var custom = _.get(item, 'data.custom') || {};\n  custom[configKey] = options;\n  item.data.custom = custom;\n  callback(null, item);\n}\n\nmodule.exports = {\n  itemToPayload: itemToPayload,\n  addTelemetryData: addTelemetryData,\n  addMessageWithError: addMessageWithError,\n  userTransform: userTransform,\n  addConfigToPayload: addConfigToPayload\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/transforms.js\n// module id = 23\n// module chunks = 0","'use strict';\n\nvar _ = require('../utility');\nvar logger = require('./logger');\n\nfunction checkIgnore(item, settings) {\n  var level = item.level;\n  var levelVal = _.LEVELS[level] || 0;\n  var reportLevel = _.LEVELS[settings.reportLevel] || 0;\n\n  if (levelVal < reportLevel) {\n    return false;\n  }\n\n  if (_.get(settings, 'plugins.jquery.ignoreAjaxErrors')) {\n    return !_.get(item, 'body.message.extra.isAjax');\n  }\n  return true;\n}\n\nfunction userCheckIgnore(item, settings) {\n  var isUncaught = !!item._isUncaught;\n  delete item._isUncaught;\n  var args = item._originalArgs;\n  delete item._originalArgs;\n  try {\n    if (_.isFunction(settings.checkIgnore) && settings.checkIgnore(isUncaught, args, item)) {\n      return false;\n    }\n  } catch (e) {\n    settings.checkIgnore = null;\n    logger.error('Error while calling custom checkIgnore(), removing', e);\n  }\n  return true;\n}\n\nfunction urlIsNotBlacklisted(item, settings) {\n  return !urlIsOnAList(item, settings, 'blacklist');\n}\n\nfunction urlIsWhitelisted(item, settings) {\n  return urlIsOnAList(item, settings, 'whitelist');\n}\n\nfunction urlIsOnAList(item, settings, whiteOrBlack) {\n  // whitelist is the default\n  var black = false;\n  if (whiteOrBlack === 'blacklist') {\n    black = true;\n  }\n  var list, trace, frame, filename, frameLength, url, listLength, urlRegex;\n  var i, j;\n\n  try {\n    list = black ? settings.hostBlackList : settings.hostWhiteList;\n    listLength = list && list.length;\n    trace = _.get(item, 'body.trace');\n\n    // These two checks are important to come first as they are defaults\n    // in case the list is missing or the trace is missing or not well-formed\n    if (!list || listLength === 0) {\n      return !black;\n    }\n    if (!trace || !trace.frames || trace.frames.length === 0) {\n      return !black;\n    }\n\n    frameLength = trace.frames.length;\n    for (i = 0; i < frameLength; i++) {\n      frame = trace.frames[i];\n      filename = frame.filename;\n\n      if (!_.isType(filename, 'string')) {\n        return !black;\n      }\n\n      for (j = 0; j < listLength; j++) {\n        url = list[j];\n        urlRegex = new RegExp(url);\n\n        if (urlRegex.test(filename)) {\n          return true;\n        }\n      }\n    }\n  } catch (e)\n  /* istanbul ignore next */\n  {\n    if (black) {\n      settings.hostBlackList = null;\n    } else {\n      settings.hostWhiteList = null;\n    }\n    var listName = black ? 'hostBlackList' : 'hostWhiteList';\n    logger.error('Error while reading your configuration\\'s ' + listName + ' option. Removing custom ' + listName + '.', e);\n    return !black;\n  }\n  return false;\n}\n\nfunction messageIsIgnored(item, settings) {\n  var exceptionMessage, i, ignoredMessages,\n      len, messageIsIgnored, rIgnoredMessage,\n      body, traceMessage, bodyMessage;\n\n  try {\n    messageIsIgnored = false;\n    ignoredMessages = settings.ignoredMessages;\n\n    if (!ignoredMessages || ignoredMessages.length === 0) {\n      return true;\n    }\n\n    body = item.body;\n    traceMessage = _.get(body, 'trace.exception.message');\n    bodyMessage = _.get(body, 'message.body');\n\n    exceptionMessage = traceMessage || bodyMessage;\n\n    if (!exceptionMessage){\n      return true;\n    }\n\n    len = ignoredMessages.length;\n    for (i = 0; i < len; i++) {\n      rIgnoredMessage = new RegExp(ignoredMessages[i], 'gi');\n      messageIsIgnored = rIgnoredMessage.test(exceptionMessage);\n\n      if (messageIsIgnored) {\n        break;\n      }\n    }\n  } catch(e)\n  /* istanbul ignore next */\n  {\n    settings.ignoredMessages = null;\n    logger.error('Error while reading your configuration\\'s ignoredMessages option. Removing custom ignoredMessages.');\n  }\n\n  return !messageIsIgnored;\n}\n\nmodule.exports = {\n  checkIgnore: checkIgnore,\n  userCheckIgnore: userCheckIgnore,\n  urlIsNotBlacklisted: urlIsNotBlacklisted,\n  urlIsWhitelisted: urlIsWhitelisted,\n  messageIsIgnored: messageIsIgnored\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/predicates.js\n// module id = 24\n// module chunks = 0","'use strict';\n\nvar _ = require('../utility');\nvar urlparser = require('./url');\nvar domUtil = require('./domUtility');\n\nvar defaults = {\n  network: true,\n  networkResponseHeaders: false,\n  networkResponseBody: false,\n  networkRequestBody: false,\n  log: true,\n  dom: true,\n  navigation: true,\n  connectivity: true\n};\n\nfunction replace(obj, name, replacement, replacements, type) {\n  var orig = obj[name];\n  obj[name] = replacement(orig);\n  if (replacements) {\n    replacements[type].push([obj, name, orig]);\n  }\n}\n\nfunction restore(replacements, type) {\n  var b;\n  while (replacements[type].length) {\n    b = replacements[type].shift();\n    b[0][b[1]] = b[2];\n  }\n}\n\nfunction Instrumenter(options, telemeter, rollbar, _window, _document) {\n  var autoInstrument = options.autoInstrument;\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.extend(true, {}, defaults, autoInstrument);\n  }\n  this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n  this.telemetryScrubber = options.telemetryScrubber;\n  this.telemeter = telemeter;\n  this.rollbar = rollbar;\n  this._window = _window || {};\n  this._document = _document || {};\n  this.replacements = {\n    network: [],\n    log: [],\n    navigation: [],\n    connectivity: []\n  };\n  this.eventRemovers = {\n    dom: [],\n    connectivity: []\n  };\n\n  this._location = this._window.location;\n  this._lastHref = this._location && this._location.href;\n}\n\nInstrumenter.prototype.configure = function(options) {\n  var autoInstrument = options.autoInstrument;\n  var oldSettings = _.extend(true, {}, this.autoInstrument);\n  if (options.enabled === false || autoInstrument === false) {\n    this.autoInstrument = {};\n  } else {\n    if (!_.isType(autoInstrument, 'object')) {\n      autoInstrument = defaults;\n    }\n    this.autoInstrument = _.extend(true, {}, defaults, autoInstrument);\n  }\n  this.instrument(oldSettings);\n  if (options.scrubTelemetryInputs !== undefined) {\n    this.scrubTelemetryInputs = !!options.scrubTelemetryInputs;\n  }\n  if (options.telemetryScrubber !== undefined) {\n    this.telemetryScrubber = options.telemetryScrubber;\n  }\n};\n\nInstrumenter.prototype.instrument = function(oldSettings) {\n  if (this.autoInstrument.network && !(oldSettings && oldSettings.network)) {\n    this.instrumentNetwork();\n  } else if (!this.autoInstrument.network && oldSettings && oldSettings.network) {\n    this.deinstrumentNetwork();\n  }\n\n  if (this.autoInstrument.log && !(oldSettings && oldSettings.log)) {\n    this.instrumentConsole();\n  } else if (!this.autoInstrument.log && oldSettings && oldSettings.log) {\n    this.deinstrumentConsole();\n  }\n\n  if (this.autoInstrument.dom && !(oldSettings && oldSettings.dom)) {\n    this.instrumentDom();\n  } else if (!this.autoInstrument.dom && oldSettings && oldSettings.dom) {\n    this.deinstrumentDom();\n  }\n\n  if (this.autoInstrument.navigation && !(oldSettings && oldSettings.navigation)) {\n    this.instrumentNavigation();\n  } else if (!this.autoInstrument.navigation && oldSettings && oldSettings.navigation) {\n    this.deinstrumentNavigation();\n  }\n\n  if (this.autoInstrument.connectivity && !(oldSettings && oldSettings.connectivity)) {\n    this.instrumentConnectivity();\n  } else if (!this.autoInstrument.connectivity && oldSettings && oldSettings.connectivity) {\n    this.deinstrumentConnectivity();\n  }\n};\n\nInstrumenter.prototype.deinstrumentNetwork = function() {\n  restore(this.replacements, 'network');\n};\n\nInstrumenter.prototype.instrumentNetwork = function() {\n  var self = this;\n\n  function wrapProp(prop, xhr) {\n    if (prop in xhr && _.isFunction(xhr[prop])) {\n      replace(xhr, prop, function(orig) {\n        return self.rollbar.wrap(orig);\n      });\n    }\n  }\n\n  if ('XMLHttpRequest' in this._window) {\n    var xhrp = this._window.XMLHttpRequest.prototype;\n    replace(xhrp, 'open', function(orig) {\n      return function(method, url) {\n        if (_.isType(url, 'string')) {\n          this.__rollbar_xhr = {\n            method: method,\n            url: url,\n            status_code: null,\n            start_time_ms: _.now(),\n            end_time_ms: null\n          };\n        }\n        return orig.apply(this, arguments);\n      };\n    }, this.replacements, 'network');\n\n    replace(xhrp, 'send', function(orig) {\n      /* eslint-disable no-unused-vars */\n      return function(data) {\n      /* eslint-enable no-unused-vars */\n        var xhr = this;\n\n        function onreadystatechangeHandler() {\n          if (xhr.__rollbar_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n            if (xhr.__rollbar_xhr.status_code === null) {\n              xhr.__rollbar_xhr.status_code = 0;\n              var requestData = null;\n              if (self.autoInstrument.networkRequestBody) {\n                requestData = data;\n              }\n              xhr.__rollbar_event = self.telemeter.captureNetwork(xhr.__rollbar_xhr, 'xhr', undefined, requestData);\n            }\n            if (xhr.readyState === 1) {\n              xhr.__rollbar_xhr.start_time_ms = _.now();\n            } else {\n              xhr.__rollbar_xhr.end_time_ms = _.now();\n\n              var headers = null;\n              if (self.autoInstrument.networkResponseHeaders) {\n                var headersConfig = self.autoInstrument.networkResponseHeaders;\n                headers = {};\n                try {\n                  var header, i;\n                  if (headersConfig === true) {\n                    var allHeaders = xhr.getAllResponseHeaders();\n                    if (allHeaders) {\n                      var arr = allHeaders.trim().split(/[\\r\\n]+/);\n                      var parts, value;\n                      for (i=0; i < arr.length; i++) {\n                        parts = arr[i].split(': ');\n                        header = parts.shift();\n                        value = parts.join(': ');\n                        headers[header] = value;\n                      }\n                    }\n                  } else {\n                    for (i=0; i < headersConfig.length; i++) {\n                      header = headersConfig[i];\n                      headers[header] = xhr.getResponseHeader(header);\n                    }\n                  }\n                } catch (e) {\n                  /* we ignore the errors here that could come from different\n                   * browser issues with the xhr methods */\n                }\n              }\n              var body = null;\n              if (self.autoInstrument.networkResponseBody) {\n                try {\n                  body = xhr.responseText;\n                } catch (e) {\n                  /* ignore errors from reading responseText */\n                }\n              }\n              var response = null;\n              if (body || headers) {\n                response = {};\n                if (body) {\n                  response.body = body;\n                }\n                if (headers) {\n                  response.headers = headers;\n                }\n              }\n              if (response) {\n                xhr.__rollbar_xhr.response = response;\n              }\n            }\n            try {\n              var code = xhr.status;\n              code = code === 1223 ? 204 : code;\n              xhr.__rollbar_xhr.status_code = code;\n              xhr.__rollbar_event.level = self.telemeter.levelFromStatus(code);\n            } catch (e) {\n              /* ignore possible exception from xhr.status */\n            }\n          }\n        }\n\n        wrapProp('onload', xhr);\n        wrapProp('onerror', xhr);\n        wrapProp('onprogress', xhr);\n\n        if ('onreadystatechange' in xhr && _.isFunction(xhr.onreadystatechange)) {\n          replace(xhr, 'onreadystatechange', function(orig) {\n            return self.rollbar.wrap(orig, undefined, onreadystatechangeHandler);\n          });\n        } else {\n          xhr.onreadystatechange = onreadystatechangeHandler;\n        }\n        return orig.apply(this, arguments);\n      }\n    }, this.replacements, 'network');\n  }\n\n  if ('fetch' in this._window) {\n    replace(this._window, 'fetch', function(orig) {\n      /* eslint-disable no-unused-vars */\n      return function(fn, t) {\n      /* eslint-enable no-unused-vars */\n        var args = new Array(arguments.length);\n        for (var i=0, len=args.length; i < len; i++) {\n          args[i] = arguments[i];\n        }\n        var input = args[0];\n        var method = 'GET';\n        var url;\n        if (_.isType(input, 'string')) {\n          url = input;\n        } else {\n          url = input.url;\n          if (input.method) {\n            method = input.method;\n          }\n        }\n        if (args[1] && args[1].method) {\n          method = args[1].method;\n        }\n        var metadata = {\n          method: method,\n          url: url,\n          status_code: null,\n          start_time_ms: _.now(),\n          end_time_ms: null\n        };\n        var requestData = null;\n        if (self.autoInstrument.networkRequestBody) {\n          if (args[1] && args[1].body) {\n            requestData = args[1].body;\n          } else if (args[0] && !_.isType(args[0], 'string') && args[0].body) {\n            requestData = args[0].body;\n          }\n        }\n        self.telemeter.captureNetwork(metadata, 'fetch', undefined, requestData);\n        return orig.apply(this, args).then(function (resp) {\n          metadata.end_time_ms = _.now();\n          metadata.status_code = resp.status;\n          var headers = null;\n          if (self.autoInstrument.networkResponseHeaders) {\n            var headersConfig = self.autoInstrument.networkResponseHeaders;\n            headers = {};\n            try {\n              if (headersConfig === true) {\n                // This is unsupported in IE so we can't do it\n                /*\n                var allHeaders = resp.headers.entries();\n                for (var pair of allHeaders) {\n                  headers[pair[0]] = pair[1];\n                }\n                */\n              } else {\n                for (var i=0; i < headersConfig.length; i++) {\n                  var header = headersConfig[i];\n                  headers[header] = resp.headers.get(header);\n                }\n              }\n            } catch (e) {\n              /* ignore probable IE errors */\n            }\n          }\n          var response = null;\n          if (headers) {\n            response = {\n              headers: headers\n            };\n          }\n          if (response) {\n            metadata.response = response;\n          }\n          return resp;\n        });\n      };\n    }, this.replacements, 'network');\n  }\n};\n\nInstrumenter.prototype.deinstrumentConsole = function() {\n  if (!('console' in this._window && this._window.console.log)) {\n    return;\n  }\n  var b;\n  while (this.replacements['log'].length) {\n    b = this.replacements['log'].shift();\n    this._window.console[b[0]] = b[1];\n  }\n};\n\nInstrumenter.prototype.instrumentConsole = function() {\n  if (!('console' in this._window && this._window.console.log)) {\n    return;\n  }\n\n  var self = this;\n  var c = this._window.console;\n\n  function wrapConsole(method) {\n    var orig = c[method];\n    var origConsole = c;\n    var level = method === 'warn' ? 'warning' : method;\n    c[method] = function() {\n      var args = Array.prototype.slice.call(arguments);\n      var message = _.formatArgsAsString(args);\n      self.telemeter.captureLog(message, level);\n      if (orig) {\n        Function.prototype.apply.call(orig, origConsole, args);\n      }\n    };\n    self.replacements['log'].push([method, orig]);\n  }\n  var methods = ['debug','info','warn','error','log'];\n  for (var i=0, len=methods.length; i < len; i++) {\n    wrapConsole(methods[i]);\n  }\n};\n\nInstrumenter.prototype.deinstrumentDom = function() {\n  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n    return;\n  }\n  this.removeListeners('dom');\n};\n\nInstrumenter.prototype.instrumentDom = function() {\n  if (!('addEventListener' in this._window || 'attachEvent' in this._window)) {\n    return;\n  }\n  var clickHandler = this.handleClick.bind(this);\n  var blurHandler = this.handleBlur.bind(this);\n  this.addListener('dom', this._window, 'click', 'onclick', clickHandler, true);\n  this.addListener('dom', this._window, 'blur', 'onfocusout', blurHandler, true);\n};\n\nInstrumenter.prototype.handleClick = function(evt) {\n  try {\n    var e = domUtil.getElementFromEvent(evt, this._document);\n    var hasTag = e && e.tagName;\n    var anchorOrButton = domUtil.isDescribedElement(e, 'a') || domUtil.isDescribedElement(e, 'button');\n    if (hasTag && (anchorOrButton || domUtil.isDescribedElement(e, 'input', ['button', 'submit']))) {\n        this.captureDomEvent('click', e);\n    } else if (domUtil.isDescribedElement(e, 'input', ['checkbox', 'radio'])) {\n      this.captureDomEvent('input', e, e.value, e.checked);\n    }\n  } catch (exc) {\n    // TODO: Not sure what to do here\n  }\n};\n\nInstrumenter.prototype.handleBlur = function(evt) {\n  try {\n    var e = domUtil.getElementFromEvent(evt, this._document);\n    if (e && e.tagName) {\n      if (domUtil.isDescribedElement(e, 'textarea')) {\n        this.captureDomEvent('input', e, e.value);\n      } else if (domUtil.isDescribedElement(e, 'select') && e.options && e.options.length) {\n        this.handleSelectInputChanged(e);\n      } else if (domUtil.isDescribedElement(e, 'input') && !domUtil.isDescribedElement(e, 'input', ['button', 'submit', 'hidden', 'checkbox', 'radio'])) {\n        this.captureDomEvent('input', e, e.value);\n      }\n    }\n  } catch (exc) {\n    // TODO: Not sure what to do here\n  }\n};\n\nInstrumenter.prototype.handleSelectInputChanged = function(elem) {\n  if (elem.multiple) {\n    for (var i = 0; i < elem.options.length; i++) {\n      if (elem.options[i].selected) {\n        this.captureDomEvent('input', elem, elem.options[i].value);\n      }\n    }\n  } else if (elem.selectedIndex >= 0 && elem.options[elem.selectedIndex]) {\n    this.captureDomEvent('input', elem, elem.options[elem.selectedIndex].value);\n  }\n};\n\nInstrumenter.prototype.captureDomEvent = function(subtype, element, value, isChecked) {\n  if (value !== undefined) {\n    if (this.scrubTelemetryInputs || (domUtil.getElementType(element) === 'password')) {\n      value = '[scrubbed]';\n    } else if (this.telemetryScrubber) {\n      var description = domUtil.describeElement(element);\n      if (this.telemetryScrubber(description)) {\n        value = '[scrubbed]';\n      }\n    }\n  }\n  var elementString = domUtil.elementArrayToString(domUtil.treeToArray(element));\n  this.telemeter.captureDom(subtype, elementString, value, isChecked);\n};\n\nInstrumenter.prototype.deinstrumentNavigation = function() {\n  var chrome = this._window.chrome;\n  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  // See https://github.com/angular/angular.js/pull/13945/files\n  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n  if (!hasPushState) {\n    return;\n  }\n  restore(this.replacements, 'navigation');\n};\n\nInstrumenter.prototype.instrumentNavigation = function() {\n  var chrome = this._window.chrome;\n  var chromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n  // See https://github.com/angular/angular.js/pull/13945/files\n  var hasPushState = !chromePackagedApp && this._window.history && this._window.history.pushState;\n  if (!hasPushState) {\n    return;\n  }\n  var self = this;\n  replace(this._window, 'onpopstate', function(orig) {\n    return function() {\n      var current = self._location.href;\n      self.handleUrlChange(self._lastHref, current);\n      if (orig) {\n        orig.apply(this, arguments);\n      }\n    };\n  }, this.replacements, 'navigation');\n\n  replace(this._window.history, 'pushState', function(orig) {\n    return function() {\n      var url = arguments.length > 2 ? arguments[2] : undefined;\n      if (url) {\n        self.handleUrlChange(self._lastHref, url + '');\n      }\n      return orig.apply(this, arguments);\n    };\n  }, this.replacements, 'navigation');\n};\n\nInstrumenter.prototype.handleUrlChange = function(from, to) {\n  var parsedHref = urlparser.parse(this._location.href);\n  var parsedTo = urlparser.parse(to);\n  var parsedFrom = urlparser.parse(from);\n  this._lastHref = to;\n  if (parsedHref.protocol === parsedTo.protocol && parsedHref.host === parsedTo.host) {\n    to = parsedTo.path + (parsedTo.hash || '');\n  }\n  if (parsedHref.protocol === parsedFrom.protocol && parsedHref.host === parsedFrom.host) {\n    from = parsedFrom.path + (parsedFrom.hash || '');\n  }\n  this.telemeter.captureNavigation(from, to);\n};\n\nInstrumenter.prototype.deinstrumentConnectivity = function() {\n  if (!('addEventListener' in this._window || 'body' in this._document)) {\n    return;\n  }\n  if (this._window.addEventListener) {\n    this.removeListeners('connectivity');\n  } else {\n    restore(this.replacements, 'connectivity');\n  }\n};\n\nInstrumenter.prototype.instrumentConnectivity = function() {\n  if (!('addEventListener' in this._window || 'body' in this._document)) {\n    return;\n  }\n  if (this._window.addEventListener) {\n    this.addListener('connectivity', this._window, 'online', undefined, function() {\n      this.telemeter.captureConnectivityChange('online');\n    }.bind(this), true);\n    this.addListener('connectivity', this._window, 'offline', undefined, function() {\n      this.telemeter.captureConnectivityChange('offline');\n    }.bind(this), true);\n  } else {\n    var self = this;\n    replace(this._document.body, 'ononline', function(orig) {\n      return function() {\n        self.telemeter.captureConnectivityChange('online');\n        if (orig) {\n          orig.apply(this, arguments);\n        }\n      }\n    }, this.replacements, 'connectivity');\n    replace(this._document.body, 'onoffline', function(orig) {\n      return function() {\n        self.telemeter.captureConnectivityChange('offline');\n        if (orig) {\n          orig.apply(this, arguments);\n        }\n      }\n    }, this.replacements, 'connectivity');\n  }\n};\n\nInstrumenter.prototype.addListener = function(section, obj, type, altType, handler, capture) {\n  if (obj.addEventListener) {\n    obj.addEventListener(type, handler, capture);\n    this.eventRemovers[section].push(function() {\n      obj.removeEventListener(type, handler, capture);\n    });\n  } else if (altType) {\n    obj.attachEvent(altType, handler);\n    this.eventRemovers[section].push(function() {\n      obj.detachEvent(altType, handler);\n    });\n  }\n};\n\nInstrumenter.prototype.removeListeners = function(section) {\n  var r;\n  while (this.eventRemovers[section].length) {\n    r = this.eventRemovers[section].shift();\n    r();\n  }\n};\n\nmodule.exports = Instrumenter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/telemetry.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nfunction getElementType(e) {\n  return (e.getAttribute('type') || '').toLowerCase();\n}\n\nfunction isDescribedElement(element, type, subtypes) {\n  if (element.tagName.toLowerCase() !== type.toLowerCase()) {\n    return false;\n  }\n  if (!subtypes) {\n    return true;\n  }\n  element = getElementType(element);\n  for (var i = 0; i < subtypes.length; i++) {\n    if (subtypes[i] === element) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction getElementFromEvent(evt, doc) {\n  if (evt.target) {\n    return evt.target;\n  }\n  if (doc && doc.elementFromPoint) {\n    return doc.elementFromPoint(evt.clientX, evt.clientY);\n  }\n  return undefined;\n}\n\nfunction treeToArray(elem) {\n  var MAX_HEIGHT = 5;\n  var out = [];\n  var nextDescription;\n  for (var height = 0; elem && height < MAX_HEIGHT; height++) {\n    nextDescription = describeElement(elem);\n    if (nextDescription.tagName === 'html') {\n      break;\n    }\n    out.unshift(nextDescription);\n    elem = elem.parentNode;\n  }\n  return out;\n}\n\nfunction elementArrayToString(a) {\n  var MAX_LENGTH = 80;\n  var separator = ' > ', separatorLength = separator.length;\n  var out = [], len = 0, nextStr, totalLength;\n\n  for (var i = a.length - 1; i >= 0; i--) {\n    nextStr = descriptionToString(a[i]);\n    totalLength = len + (out.length * separatorLength) + nextStr.length;\n    if (i < a.length - 1 && totalLength >= MAX_LENGTH + 3) {\n      out.unshift('...');\n      break;\n    }\n    out.unshift(nextStr);\n    len += nextStr.length;\n  }\n  return out.join(separator);\n}\n\nfunction descriptionToString(desc) {\n  if (!desc || !desc.tagName) {\n    return '';\n  }\n  var out = [desc.tagName];\n  if (desc.id) {\n    out.push('#' + desc.id);\n  }\n  if (desc.classes) {\n    out.push('.' + desc.classes.join('.'));\n  }\n  for (var i = 0; i < desc.attributes.length; i++) {\n    out.push('[' + desc.attributes[i].key + '=\"' + desc.attributes[i].value + '\"]');\n  }\n\n  return out.join('');\n}\n\n/**\n * Input: a dom element\n * Output: null if tagName is falsey or input is falsey, else\n *  {\n *    tagName: String,\n *    id: String | undefined,\n *    classes: [String] | undefined,\n *    attributes: [\n *      {\n *        key: OneOf(type, name, title, alt),\n *        value: String\n *      }\n *    ]\n *  }\n */\nfunction describeElement(elem) {\n  if (!elem || !elem.tagName) {\n    return null;\n  }\n  var out = {}, className, key, attr, i;\n  out.tagName = elem.tagName.toLowerCase();\n  if (elem.id) {\n    out.id = elem.id;\n  }\n  className = elem.className;\n  if (className && (typeof className === 'string')) {\n    out.classes = className.split(/\\s+/);\n  }\n  var attributes = ['type', 'name', 'title', 'alt'];\n  out.attributes = [];\n  for (i = 0; i < attributes.length; i++) {\n    key = attributes[i];\n    attr = elem.getAttribute(key);\n    if (attr) {\n      out.attributes.push({key: key, value: attr});\n    }\n  }\n  return out;\n}\n\nmodule.exports = {\n  describeElement: describeElement,\n  descriptionToString: descriptionToString,\n  elementArrayToString: elementArrayToString,\n  treeToArray: treeToArray,\n  getElementFromEvent: getElementFromEvent,\n  isDescribedElement: isDescribedElement,\n  getElementType: getElementType\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/browser/domUtility.js\n// module id = 26\n// module chunks = 0"],"sourceRoot":""}