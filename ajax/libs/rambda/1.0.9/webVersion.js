(function(c,d){typeof exports==='object'&&typeof module!=='undefined'?d(exports):typeof define==='function'&&define.amd?define(['exports'],d):d(c.R={});})(this,function(e){'use strict';function add(x,y){if(y===void 0){return g=>add(x,g);}return x+y;}function addIndex(h){return function(j,...rest){let k=0;const newFn=(...args)=>j.apply(null,[...args,k++]);return h.apply(null,[newFn,...rest]);};}function adjust(l,m,n){if(m===void 0){return(q,r)=>adjust(l,q,r);}else if(n===void 0){return s=>adjust(l,m,s);}const t=n.concat();return t.map((u,v)=>{if(v===m){return l(n[m]);}return u;});}function filterObject(w,z){const A={};for(const B in z){if(w(z[B],B)){A[B]=z[B];}}return A;}function filter(C,D){if(D===void 0){return E=>filter(C,E);}if(D.length===void 0){return filterObject(C,D);}let G=-1,H=0;const I=D.length,J=[];while(++G<I){const K=D[G];if(C(K)){J[H++]=K;}}return J;}function all(L,M){if(M===void 0){return N=>all(L,N);}return filter(L,M).length===M.length;}function any(O,P){if(P===void 0){return Q=>any(O,Q);}let R=0;while(R<P.length){if(O(P[R])){return!0;}R++;}return!1;}function allPass(S,x){if(arguments.length===1){return U=>allPass(S,U);}return!any(V=>!V(x),S);}function anyPass(W,x){if(arguments.length===1){return X=>anyPass(W,X);}return any(Y=>Y(x))(W);}function append(x,Z){if(Z===void 0){return a1=>append(x,a1);}if(typeof Z==='string'){return`${Z}${x}`;}const b1=Z.concat();b1.push(x);return b1;}function both(x,y){if(y===void 0){return c1=>both(x,c1);}return d1=>x(d1)&&y(d1);}function compose(...fns){return e1=>{const f1=fns.slice();while(f1.length>0){e1=f1.pop()(e1);}return e1;};}function concat(x,y){if(y===void 0){return g1=>concat(x,g1);}return typeof x==='string'?`${x}${y}`:[...x,...y];}function type(a){const h1=typeof a;if(a===null){return'Null';}else if(a===void 0){return'Undefined';}else if(h1==='boolean'){return'Boolean';}else if(h1==='number'){return'Number';}else if(h1==='string'){return'String';}else if(Array.isArray(a)){return'Array';}else if(a instanceof RegExp){return'RegExp';}const i1=a.toString();if(i1.startsWith('async')){return'Async';}else if(i1==='[object Promise]'){return'Promise';}else if(i1.includes('function')||i1.includes('=>')){return'Function';}return'Object';}function equals(a,b){if(arguments.length===1){return j1=>equals(a,j1);}if(a===b){return!0;}const k1=type(a);if(k1!==type(b)){return!1;}if(k1==='Array'){const l1=Array.from(a),m1=Array.from(b);if(l1.toString()!==m1.toString()){return!1;}let n1=!0;l1.forEach((o1,p1)=>{if(n1){if(o1!==m1[p1]&&!equals(o1,m1[p1])){n1=!1;}}});return n1;}if(k1==='Object'){const q1=Object.keys(a);if(q1.length!==Object.keys(b).length){return!1;}let r1=!0;q1.forEach(s1=>{if(r1){const t1=a[s1],u1=b[s1];if(t1!==u1&&!equals(t1,u1)){r1=!1;}}});return r1;}return!1;}function contains(x,v1){if(v1===void 0){return w1=>contains(x,w1);}let x1=-1,y1=!1;while(++x1<v1.length&&!y1){if(equals(v1[x1],x)){y1=!0;}}return y1;}function curry(f,a=[]){return(...p)=>(o=>o.length>=f.length?f(...o):curry(f,o))([...a,...p]);}var dec=x=>x-1;function defaultTo(z1,A1){if(arguments.length===1){return B1=>defaultTo(z1,B1);}return A1===void 0||A1===null||Number.isNaN(A1)===!0?z1:A1;}function divide(x,y){if(y===void 0){return C1=>divide(x,C1);}return x/y;}function drop(D1,x){if(x===void 0){return E1=>drop(D1,E1);}return x.slice(D1);}function dropLast(F1,x){if(x===void 0){return G1=>dropLast(F1,G1);}return x.slice(0,-F1);}function either(x,y){if(y===void 0){return H1=>either(x,H1);}return I1=>x(I1)||y(I1);}function endsWith(x,y){if(y===void 0){return J1=>endsWith(x,J1);}return y.endsWith(x);}var inc=x=>x+1;function find(fn,L1){if(L1===void 0){return M1=>find(fn,M1);}return L1.find(fn);}function findIndex(fn,O1){if(O1===void 0){return P1=>findIndex(fn,P1);}const Q1=O1.length;let R1=-1;while(++R1<Q1){if(fn(O1[R1])){return R1;}}return-1;}function flatten(S1,T1){T1=T1===void 0?[]:T1;for(let i=0;i<S1.length;i++){if(Array.isArray(S1[i])){flatten(S1[i],T1);}else{T1.push(S1[i]);}}return T1;}function flipExport(fn){return(...input)=>{if(input.length===1){return V1=>fn(V1,input[0]);}else if(input.length===2){return fn(input[1],input[0]);}return void 0;};}function flip(fn,...input){return flipExport(fn);}function tap(fn,x){if(x===void 0){return Y1=>tap(fn,Y1);}fn(x);return x;}function mapObject(fn,a2){const b2={};for(const c2 in a2){b2[c2]=fn(a2[c2],c2);}return b2;}function map(fn,e2){if(e2===void 0){return f2=>map(fn,f2);}if(e2.length===void 0){return mapObject(fn,e2);}let g2=-1;const h2=e2.length,i2=Array(h2);while(++g2<h2){i2[g2]=fn(e2[g2]);}return i2;}function forEach(fn,k2){if(k2===void 0){return l2=>forEach(fn,l2);}return map(tap(fn),k2);}function has(m2,n2){if(n2===void 0){return o2=>has(m2,o2);}return n2[m2]!==void 0;}function head(a){if(typeof a==='string'){return a[0]||'';}return a[0];}function ifElse(p2,q2,r2){if(q2===void 0){return(s2,t2)=>ifElse(p2,s2,t2);}else if(r2===void 0){return u2=>ifElse(p2,q2,u2);}return v2=>{const w2=typeof p2==='boolean'?p2:p2(v2);if(w2===!0){return q2(v2);}return r2(v2);};}function is(x2,x){if(x===void 0){return y2=>is(x2,y2);}return x instanceof x2||x.constructor===x2;}function isNil(x){return x===void 0||x===null;}function includes(x,y){if(y===void 0){return z2=>includes(x,z2);}return y.includes(x);}function indexOf(x,A2){if(A2===void 0){return B2=>indexOf(x,B2);}let C2=-1;const D2=A2.length;while(++C2<D2){if(A2[C2]===x){return C2;}}return-1;}function baseSlice(E2,F2,G2){let H2=-1,I2=E2.length;G2=G2>I2?I2:G2;if(G2<0){G2+=I2;}I2=F2>G2?0:G2-F2>>>0;F2>>>=0;const J2=Array(I2);while(++H2<I2){J2[H2]=E2[H2+F2];}return J2;}function init(a){if(typeof a==='string'){return a.slice(0,-1);}return a.length?baseSlice(a,0,-1):[];}function join(K2,L2){if(L2===void 0){return M2=>join(K2,M2);}return L2.join(K2);}function lastIndexOf(x,N2){if(N2===void 0){return O2=>lastIndexOf(x,O2);}let P2=-1;N2.map((Q2,R2)=>{if(equals(Q2,x)){P2=R2;}});return P2;}function last(a){if(typeof a==='string'){return a[a.length-1]||'';}return a[a.length-1];}function length(x){return x.length;}function match(S2,x){if(x===void 0){return T2=>match(S2,T2);}const U2=x.match(S2);return U2===null?[]:U2;}function merge(V2,W2){if(W2===void 0){return X2=>merge(V2,X2);}return Object.assign({},V2,W2);}function modulo(x,y){if(y===void 0){return Y2=>modulo(x,Y2);}return x%y;}function multiply(x,y){if(y===void 0){return Z2=>multiply(x,Z2);}return x*y;}function none(fn,b3){if(b3===void 0){return c3=>none(fn,b3);}return b3.filter(fn).length===0;}function omit(d3,e3){if(arguments.length===1){return f3=>omit(d3,f3);}if(e3===null||e3===void 0){return void 0;}const g3=typeof d3==='string'?d3=d3.split(','):d3,h3={};for(const i3 in e3){if(!g3.includes(i3)){h3[i3]=e3[i3];}}return h3;}function partialCurry(fn,k3={}){return l3=>{if(type(fn)==='Async'||type(fn)==='Promise'){return new Promise((m3,n3)=>{fn(merge(l3,k3)).then(m3).catch(n3);});}return fn(merge(l3,k3));};}function path(o3,p3){if(arguments.length===1){return q3=>path(o3,q3);}if(p3===null||p3===void 0){return void 0;}let r3=p3,s3=0;const t3=typeof o3==='string'?o3=o3.split('.'):o3;while(s3<t3.length){if(r3===null||r3===void 0){return void 0;}r3=r3[t3[s3]];s3++;}return r3;}function pathOr(u3,v3,w3){return defaultTo(u3,path(v3,w3));}var x3=curry(pathOr);function pick(y3,z3){if(arguments.length===1){return A3=>pick(y3,A3);}if(z3===null||z3===void 0){return void 0;}const B3=typeof y3==='string'?y3.split(','):y3,C3={};let D3=0;while(D3<B3.length){if(B3[D3]in z3){C3[B3[D3]]=z3[B3[D3]];}D3++;}return C3;}function pickAll(E3,F3){if(arguments.length===1){return G3=>pickAll(E3,G3);}if(F3===null||F3===void 0){return void 0;}const H3=typeof E3==='string'?E3.split(','):E3,I3={};let J3=0;while(J3<H3.length){if(H3[J3]in F3){I3[H3[J3]]=F3[H3[J3]];}else{I3[H3[J3]]=void 0;}J3++;}return I3;}function pipe(...fns){return compose(...fns.reverse());}function pluck(K3,L3){if(L3===void 0){return M3=>pluck(K3,M3);}const N3=[];map(O3=>{if(!(O3[K3]===void 0)){N3.push(O3[K3]);}},L3);return N3;}function prepend(x,P3){if(P3===void 0){return Q3=>prepend(x,Q3);}if(typeof P3==='string'){return`${x}${P3}`;}const R3=P3.concat();R3.unshift(x);return R3;}function prop(S3,T3){if(T3===void 0){return U3=>prop(S3,U3);}return T3[S3];}function propEq(V3,x,W3){if(x===void 0){return(X3,Y3)=>propEq(V3,X3,Y3);}else if(W3===void 0){return Z3=>propEq(V3,x,Z3);}return W3[V3]===x;}function range(a4,b4){if(b4===void 0){return c4=>range(a4,c4);}const d4=[];for(let i=a4;i<b4;i++){d4.push(i);}return d4;}function reduce(fn,f4,g4){if(f4===void 0){return(h4,i4)=>reduce(fn,h4,i4);}else if(g4===void 0){return j4=>reduce(fn,f4,j4);}return g4.reduce(fn,f4);}function reject(fn,l4){if(l4===void 0){return m4=>reject(fn,m4);}return filter(x=>!fn(x),l4);}function repeat(x,n4){if(n4===void 0){return o4=>repeat(x,o4);}const p4=Array(n4);return p4.fill(x);}function replace(q4,r4,s4){if(r4===void 0){return(t4,u4)=>replace(q4,t4,u4);}else if(s4===void 0){return v4=>replace(q4,r4,v4);}return s4.replace(q4,r4);}function reverse(w4){const x4=w4.concat();return x4.reverse();}function sort(fn,z4){if(z4===void 0){return A4=>sort(fn,A4);}const B4=z4.concat();return B4.sort(fn);}function sortBy(fn,D4){if(D4===void 0){return E4=>sortBy(fn,E4);}const F4=D4.concat();return F4.sort((a,b)=>{const G4=fn(a),H4=fn(b);return G4<H4?-1:G4>H4?1:0;});}function split(I4,J4){if(J4===void 0){return K4=>split(I4,K4);}return J4.split(I4);}function splitEvery(L4,x){if(x===void 0){return M4=>splitEvery(L4,M4);}const N4=L4>1?L4:1,O4=[];let P4=0;while(P4<x.length){O4.push(x.slice(P4,P4+=N4));}return O4;}function startsWith(x,y){if(y===void 0){return Q4=>startsWith(x,Q4);}return y.startsWith(x);}function subtract(x,y){if(y===void 0){return R4=>subtract(x,R4);}return x-y;}function tail(S4){return drop(1,S4);}function take(T4,x){if(x===void 0){return U4=>take(T4,U4);}if(typeof x==='string'){return x.slice(0,T4);}return baseSlice(x,0,T4);}function takeLast(V4,x){if(x===void 0){return W4=>takeLast(V4,W4);}const X4=x.length;let Y4=V4>X4?X4:V4;if(typeof x==='string'){return x.slice(X4-Y4);}Y4=X4-Y4;return baseSlice(x,Y4,X4);}function test(Z4,a5){if(a5===void 0){return b5=>test(Z4,b5);}return a5.search(Z4)!==-1;}function times(fn,d5){if(d5===void 0){return e5=>times(fn,e5);}return map(fn,range(0,d5));}function toLower(x){return x.toLowerCase();}function toUpper(x){return x.toUpperCase();}function toString(x){return x.toString();}function uniq(f5){let g5=-1;const h5=[];while(++g5<f5.length){const i5=f5[g5];if(!contains(i5,h5)){h5.push(i5);}}return h5;}function uniqWith(fn,k5){if(arguments.length===1){return l5=>uniqWith(fn,l5);}let m5=-1;const n5=[];while(++m5<k5.length){const o5=k5[m5],p5=any(q5=>fn(o5,q5),n5);if(!p5){n5.push(o5);}}return n5;}function update(r5,s5,t5){if(s5===void 0){return(u5,v5)=>update(r5,u5,v5);}else if(t5===void 0){return w5=>update(r5,s5,w5);}const x5=t5.concat();return x5.fill(s5,r5,r5+1);}function values(y5){const z5=[];for(const A5 in y5){z5.push(y5[A5]);}return z5;}function without(B5,C5){return reduce((D5,E5)=>!contains(E5,B5)?D5.concat(E5):D5,[],C5);}const always=x=>()=>x,complement=fn=>G5=>!fn(G5),F=()=>!1,identity=x=>x,not=x=>!x,T=()=>!0,trim=x=>x.trim();e.always=always;e.complement=complement;e.F=F;e.identity=identity;e.not=not;e.T=T;e.trim=trim;e.add=add;e.addIndex=addIndex;e.adjust=adjust;e.all=all;e.allPass=allPass;e.anyPass=anyPass;e.any=any;e.append=append;e.both=both;e.compose=compose;e.concat=concat;e.contains=contains;e.curry=curry;e.dec=dec;e.defaultTo=defaultTo;e.divide=divide;e.drop=drop;e.dropLast=dropLast;e.either=either;e.endsWith=endsWith;e.inc=inc;e.equals=equals;e.filter=filter;e.find=find;e.findIndex=findIndex;e.flatten=flatten;e.flip=flip;e.forEach=forEach;e.has=has;e.head=head;e.ifElse=ifElse;e.is=is;e.isNil=isNil;e.includes=includes;e.indexOf=indexOf;e.init=init;e.join=join;e.lastIndexOf=lastIndexOf;e.last=last;e.length=length;e.map=map;e.match=match;e.merge=merge;e.modulo=modulo;e.multiply=multiply;e.none=none;e.omit=omit;e.partialCurry=partialCurry;e.path=path;e.pathOr=x3;e.pick=pick;e.pickAll=pickAll;e.pipe=pipe;e.pluck=pluck;e.prepend=prepend;e.prop=prop;e.propEq=propEq;e.range=range;e.reduce=reduce;e.reject=reject;e.repeat=repeat;e.replace=replace;e.reverse=reverse;e.sort=sort;e.sortBy=sortBy;e.split=split;e.splitEvery=splitEvery;e.startsWith=startsWith;e.subtract=subtract;e.tap=tap;e.tail=tail;e.take=take;e.takeLast=takeLast;e.test=test;e.times=times;e.toLower=toLower;e.toUpper=toUpper;e.toString=toString;e.type=type;e.uniq=uniq;e.uniqWith=uniqWith;e.update=update;e.values=values;e.without=without;Object.defineProperty(e,'__esModule',{value:!0});});