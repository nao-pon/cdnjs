(function(c,d){typeof exports==='object'&&typeof module!=='undefined'?d(exports):typeof define==='function'&&define.amd?define(['exports'],d):d(c.R={});})(this,function(e){'use strict';function add(x,y){if(y===void 0){return g=>add(x,g);}return x+y;}function addIndex(h){return function(j,...rest){let k=0;const newFn=(...args)=>j.apply(null,[...args,k++]);return h.apply(null,[newFn,...rest]);};}function adjust(l,m,n){if(m===void 0){return(q,r)=>adjust(l,q,r);}else if(n===void 0){return s=>adjust(l,m,s);}const t=n.concat();return t.map((u,v)=>{if(v===m){return l(n[m]);}return u;});}function filterObject(w,z){const A={};for(const B in z){if(w(z[B],B)){A[B]=z[B];}}return A;}function filter(C,D){if(D===void 0){return E=>filter(C,E);}if(D.length===void 0){return filterObject(C,D);}let G=-1,H=0;const I=D.length,J=[];while(++G<I){const K=D[G];if(C(K)){J[H++]=K;}}return J;}function all(L,M){if(M===void 0){return N=>all(L,N);}return filter(L,M).length===M.length;}function any(O,P){if(P===void 0){return Q=>any(O,Q);}let R=0;while(R<P.length){if(O(P[R])){return!0;}R++;}return!1;}function allPass(S,x){if(arguments.length===1){return U=>allPass(S,U);}return!any(V=>!V(x),S);}function anyPass(W,x){if(arguments.length===1){return X=>anyPass(W,X);}return any(Y=>Y(x))(W);}function always(x){return()=>x;}function append(x,Z){if(Z===void 0){return a1=>append(x,a1);}if(typeof Z==='string'){return`${Z}${x}`;}const b1=Z.concat();b1.push(x);return b1;}function both(x,y){if(y===void 0){return c1=>both(x,c1);}return d1=>x(d1)&&y(d1);}function complement(fn){return f1=>!fn(f1);}function compose(...fns){return g1=>{const h1=fns.slice();while(h1.length>0){g1=h1.pop()(g1);}return g1;};}function concat(x,y){if(y===void 0){return i1=>concat(x,i1);}return typeof x==='string'?`${x}${y}`:[...x,...y];}function type(a){const j1=typeof a;if(a===null){return'Null';}else if(a===void 0){return'Undefined';}else if(j1==='boolean'){return'Boolean';}else if(j1==='number'){return'Number';}else if(j1==='string'){return'String';}else if(Array.isArray(a)){return'Array';}else if(a instanceof RegExp){return'RegExp';}const k1=a.toString();if(k1.startsWith('async')){return'Async';}else if(k1==='[object Promise]'){return'Promise';}else if(k1.includes('function')||k1.includes('=>')){return'Function';}return'Object';}function equals(a,b){if(arguments.length===1){return l1=>equals(a,l1);}if(a===b){return!0;}const m1=type(a);if(m1!==type(b)){return!1;}if(m1==='Array'){const n1=Array.from(a),o1=Array.from(b);if(n1.toString()!==o1.toString()){return!1;}let p1=!0;n1.forEach((q1,r1)=>{if(p1){if(q1!==o1[r1]&&!equals(q1,o1[r1])){p1=!1;}}});return p1;}if(m1==='Object'){const s1=Object.keys(a);if(s1.length!==Object.keys(b).length){return!1;}let t1=!0;s1.forEach(u1=>{if(t1){const v1=a[u1],w1=b[u1];if(v1!==w1&&!equals(v1,w1)){t1=!1;}}});return t1;}return!1;}function contains(x,x1){if(x1===void 0){return y1=>contains(x,y1);}let z1=-1,A1=!1;while(++z1<x1.length&&!A1){if(equals(x1[z1],x)){A1=!0;}}return A1;}function curry(f,a=[]){return(...p)=>(o=>o.length>=f.length?f(...o):curry(f,o))([...a,...p]);}var dec=x=>x-1;function defaultTo(B1,C1){if(arguments.length===1){return D1=>defaultTo(B1,D1);}return C1===void 0||C1===null||Number.isNaN(C1)===!0?B1:C1;}function omit(E1,F1){if(arguments.length===1){return G1=>omit(E1,G1);}if(F1===null||F1===void 0){return void 0;}const H1=typeof E1==='string'?E1=E1.split(','):E1,I1={};for(const J1 in F1){if(!H1.includes(J1)){I1[J1]=F1[J1];}}return I1;}function dissoc(K1,L1){if(arguments.length===1){return M1=>dissoc(K1,M1);}if(L1===null||L1===void 0){return void 0;}const N1={};for(const O1 in L1){if(O1!==`${K1}`){N1[O1]=L1[O1];}}return N1;}function divide(x,y){if(y===void 0){return P1=>divide(x,P1);}return x/y;}function drop(Q1,x){if(x===void 0){return R1=>drop(Q1,R1);}return x.slice(Q1);}function dropLast(S1,x){if(x===void 0){return T1=>dropLast(S1,T1);}return x.slice(0,-S1);}function either(x,y){if(y===void 0){return U1=>either(x,U1);}return V1=>x(V1)||y(V1);}function endsWith(x,y){if(y===void 0){return W1=>endsWith(x,W1);}return y.endsWith(x);}var inc=x=>x+1;function F(){return!1;}function find(fn,Y1){if(Y1===void 0){return Z1=>find(fn,Z1);}return Y1.find(fn);}function findIndex(fn,b2){if(b2===void 0){return c2=>findIndex(fn,c2);}const d2=b2.length;let e2=-1;while(++e2<d2){if(fn(b2[e2])){return e2;}}return-1;}function flatten(f2,g2){g2=g2===void 0?[]:g2;for(let i=0;i<f2.length;i++){if(Array.isArray(f2[i])){flatten(f2[i],g2);}else{g2.push(f2[i]);}}return g2;}function flipExport(fn){return(...input)=>{if(input.length===1){return i2=>fn(i2,input[0]);}else if(input.length===2){return fn(input[1],input[0]);}return void 0;};}function flip(fn,...input){return flipExport(fn);}function tap(fn,x){if(x===void 0){return l2=>tap(fn,l2);}fn(x);return x;}function mapObject(fn,n2){const o2={};for(const p2 in n2){o2[p2]=fn(n2[p2],p2);}return o2;}function map(fn,r2){if(r2===void 0){return s2=>map(fn,s2);}if(r2.length===void 0){return mapObject(fn,r2);}let t2=-1;const u2=r2.length,v2=Array(u2);while(++t2<u2){v2[t2]=fn(r2[t2]);}return v2;}function forEach(fn,x2){if(x2===void 0){return y2=>forEach(fn,y2);}return map(tap(fn),x2);}function has(z2,A2){if(A2===void 0){return B2=>has(z2,B2);}return A2[z2]!==void 0;}function head(a){if(typeof a==='string'){return a[0]||'';}return a[0];}function identity(x){return x;}function ifElse(C2,D2,E2){if(D2===void 0){return(F2,G2)=>ifElse(C2,F2,G2);}else if(E2===void 0){return H2=>ifElse(C2,D2,H2);}return I2=>{const J2=typeof C2==='boolean'?C2:C2(I2);if(J2===!0){return D2(I2);}return E2(I2);};}function is(K2,x){if(x===void 0){return L2=>is(K2,L2);}return x instanceof K2||x.constructor===K2;}function isNil(x){return x===void 0||x===null;}function includes(x,y){if(y===void 0){return M2=>includes(x,M2);}return y.includes(x);}function indexBy(fn,O2){if(O2===void 0){return P2=>indexBy(fn,P2);}const Q2={};for(let i=0;i<O2.length;i++){const R2=O2[i];Q2[fn(R2)]=R2;}return Q2;}function indexOf(x,S2){if(S2===void 0){return T2=>indexOf(x,T2);}let U2=-1;const V2=S2.length;while(++U2<V2){if(S2[U2]===x){return U2;}}return-1;}function baseSlice(W2,X2,Y2){let Z2=-1,a3=W2.length;Y2=Y2>a3?a3:Y2;if(Y2<0){Y2+=a3;}a3=X2>Y2?0:Y2-X2>>>0;X2>>>=0;const b3=Array(a3);while(++Z2<a3){b3[Z2]=W2[Z2+X2];}return b3;}function init(a){if(typeof a==='string'){return a.slice(0,-1);}return a.length?baseSlice(a,0,-1):[];}function join(c3,d3){if(d3===void 0){return e3=>join(c3,e3);}return d3.join(c3);}function lastIndexOf(x,f3){if(f3===void 0){return g3=>lastIndexOf(x,g3);}let h3=-1;f3.map((i3,j3)=>{if(equals(i3,x)){h3=j3;}});return h3;}function last(a){if(typeof a==='string'){return a[a.length-1]||'';}return a[a.length-1];}function length(x){return x.length;}function match(k3,x){if(x===void 0){return l3=>match(k3,l3);}const m3=x.match(k3);return m3===null?[]:m3;}function merge(n3,o3){if(o3===void 0){return p3=>merge(n3,p3);}return Object.assign({},n3,o3);}function modulo(x,y){if(y===void 0){return q3=>modulo(x,q3);}return x%y;}function multiply(x,y){if(y===void 0){return r3=>multiply(x,r3);}return x*y;}function none(fn,t3){if(t3===void 0){return u3=>none(fn,u3);}return t3.filter(fn).length===0;}function not(x){return!x;}function partialCurry(fn,w3={}){return x3=>{if(type(fn)==='Async'||type(fn)==='Promise'){return new Promise((y3,z3)=>{fn(merge(x3,w3)).then(y3).catch(z3);});}return fn(merge(x3,w3));};}function path(A3,B3){if(arguments.length===1){return C3=>path(A3,C3);}if(B3===null||B3===void 0){return void 0;}let D3=B3,E3=0;const F3=typeof A3==='string'?A3=A3.split('.'):A3;while(E3<F3.length){if(D3===null||D3===void 0){return void 0;}D3=D3[F3[E3]];E3++;}return D3;}function pathOr(G3,H3,I3){return defaultTo(G3,path(H3,I3));}var J3=curry(pathOr);function pick(K3,L3){if(arguments.length===1){return M3=>pick(K3,M3);}if(L3===null||L3===void 0){return void 0;}const N3=typeof K3==='string'?K3.split(','):K3,O3={};let P3=0;while(P3<N3.length){if(N3[P3]in L3){O3[N3[P3]]=L3[N3[P3]];}P3++;}return O3;}function pickAll(Q3,R3){if(arguments.length===1){return S3=>pickAll(Q3,S3);}if(R3===null||R3===void 0){return void 0;}const T3=typeof Q3==='string'?Q3.split(','):Q3,U3={};let V3=0;while(V3<T3.length){if(T3[V3]in R3){U3[T3[V3]]=R3[T3[V3]];}else{U3[T3[V3]]=void 0;}V3++;}return U3;}function pipe(...fns){return compose(...fns.reverse());}function pluck(W3,X3){if(X3===void 0){return Y3=>pluck(W3,Y3);}const Z3=[];map(a4=>{if(!(a4[W3]===void 0)){Z3.push(a4[W3]);}},X3);return Z3;}function prepend(x,b4){if(b4===void 0){return c4=>prepend(x,c4);}if(typeof b4==='string'){return`${x}${b4}`;}const d4=b4.concat();d4.unshift(x);return d4;}function prop(e4,f4){if(f4===void 0){return g4=>prop(e4,g4);}return f4[e4];}function propEq(h4,x,i4){if(x===void 0){return(j4,k4)=>propEq(h4,j4,k4);}else if(i4===void 0){return l4=>propEq(h4,x,l4);}return i4[h4]===x;}function range(m4,n4){if(n4===void 0){return o4=>range(m4,o4);}const p4=[];for(let i=m4;i<n4;i++){p4.push(i);}return p4;}function reduce(fn,r4,s4){if(r4===void 0){return(t4,u4)=>reduce(fn,t4,u4);}else if(s4===void 0){return v4=>reduce(fn,r4,v4);}return s4.reduce(fn,r4);}function reject(fn,x4){if(x4===void 0){return y4=>reject(fn,y4);}return filter(x=>!fn(x),x4);}function repeat(x,z4){if(z4===void 0){return A4=>repeat(x,A4);}const B4=Array(z4);return B4.fill(x);}function replace(C4,D4,E4){if(D4===void 0){return(F4,G4)=>replace(C4,F4,G4);}else if(E4===void 0){return H4=>replace(C4,D4,H4);}return E4.replace(C4,D4);}function reverse(I4){const J4=I4.concat();return J4.reverse();}function sort(fn,L4){if(L4===void 0){return M4=>sort(fn,M4);}const N4=L4.concat();return N4.sort(fn);}function sortBy(fn,P4){if(P4===void 0){return Q4=>sortBy(fn,Q4);}const R4=P4.concat();return R4.sort((a,b)=>{const S4=fn(a),T4=fn(b);return S4<T4?-1:S4>T4?1:0;});}function split(U4,V4){if(V4===void 0){return W4=>split(U4,W4);}return V4.split(U4);}function splitEvery(X4,x){if(x===void 0){return Y4=>splitEvery(X4,Y4);}const Z4=X4>1?X4:1,a5=[];let b5=0;while(b5<x.length){a5.push(x.slice(b5,b5+=Z4));}return a5;}function startsWith(x,y){if(y===void 0){return c5=>startsWith(x,c5);}return y.startsWith(x);}function subtract(x,y){if(y===void 0){return d5=>subtract(x,d5);}return x-y;}function T(){return!0;}function tail(e5){return drop(1,e5);}function take(f5,x){if(x===void 0){return g5=>take(f5,g5);}if(typeof x==='string'){return x.slice(0,f5);}return baseSlice(x,0,f5);}function takeLast(h5,x){if(x===void 0){return i5=>takeLast(h5,i5);}const j5=x.length;let k5=h5>j5?j5:h5;if(typeof x==='string'){return x.slice(j5-k5);}k5=j5-k5;return baseSlice(x,k5,j5);}function test(l5,m5){if(m5===void 0){return n5=>test(l5,n5);}return m5.search(l5)!==-1;}function times(fn,p5){if(p5===void 0){return q5=>times(fn,q5);}return map(fn,range(0,p5));}function toLower(x){return x.toLowerCase();}function toUpper(x){return x.toUpperCase();}function toString(x){return x.toString();}function trim(r5){return r5.trim();}function uniq(s5){let t5=-1;const u5=[];while(++t5<s5.length){const v5=s5[t5];if(!contains(v5,u5)){u5.push(v5);}}return u5;}function uniqWith(fn,x5){if(arguments.length===1){return y5=>uniqWith(fn,y5);}let z5=-1;const A5=[];while(++z5<x5.length){const B5=x5[z5],C5=any(D5=>fn(B5,D5),A5);if(!C5){A5.push(B5);}}return A5;}function update(E5,F5,G5){if(F5===void 0){return(H5,I5)=>update(E5,H5,I5);}else if(G5===void 0){return J5=>update(E5,F5,J5);}const K5=G5.concat();return K5.fill(F5,E5,E5+1);}function values(L5){const M5=[];for(const N5 in L5){M5.push(L5[N5]);}return M5;}function without(O5,P5){return reduce((Q5,R5)=>!contains(R5,O5)?Q5.concat(R5):Q5,[],P5);}e.add=add;e.addIndex=addIndex;e.adjust=adjust;e.all=all;e.allPass=allPass;e.anyPass=anyPass;e.always=always;e.any=any;e.append=append;e.both=both;e.complement=complement;e.compose=compose;e.concat=concat;e.contains=contains;e.curry=curry;e.dec=dec;e.defaultTo=defaultTo;e.dissoc=dissoc;e.divide=divide;e.drop=drop;e.dropLast=dropLast;e.either=either;e.endsWith=endsWith;e.inc=inc;e.equals=equals;e.F=F;e.filter=filter;e.find=find;e.findIndex=findIndex;e.flatten=flatten;e.flip=flip;e.forEach=forEach;e.has=has;e.head=head;e.identity=identity;e.ifElse=ifElse;e.is=is;e.isNil=isNil;e.includes=includes;e.indexBy=indexBy;e.indexOf=indexOf;e.init=init;e.join=join;e.lastIndexOf=lastIndexOf;e.last=last;e.length=length;e.map=map;e.match=match;e.merge=merge;e.modulo=modulo;e.multiply=multiply;e.none=none;e.not=not;e.omit=omit;e.partialCurry=partialCurry;e.path=path;e.pathOr=J3;e.pick=pick;e.pickAll=pickAll;e.pipe=pipe;e.pluck=pluck;e.prepend=prepend;e.prop=prop;e.propEq=propEq;e.range=range;e.reduce=reduce;e.reject=reject;e.repeat=repeat;e.replace=replace;e.reverse=reverse;e.sort=sort;e.sortBy=sortBy;e.split=split;e.splitEvery=splitEvery;e.startsWith=startsWith;e.subtract=subtract;e.T=T;e.tap=tap;e.tail=tail;e.take=take;e.takeLast=takeLast;e.test=test;e.times=times;e.toLower=toLower;e.toUpper=toUpper;e.toString=toString;e.trim=trim;e.type=type;e.uniq=uniq;e.uniqWith=uniqWith;e.update=update;e.values=values;e.without=without;Object.defineProperty(e,'__esModule',{value:!0});});