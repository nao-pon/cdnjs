{"version":3,"sources":["handler/legacy.js"],"names":["provide","path","Failure","handlerModule","isObject","settings","HandlerLegacy","demand","on","options","prototype","onPreRequest","dependency","dependencies","enqueue","apply","onPreProcess","process","boundResolve","result","dfd","this","probe","reject","bind","then","arguments","extends"],"mappings":";CAAC,WACG,aAkEAA,SAAS,OAAQ,kBAAmB,yBAA0B,8BAhE9D,SAAoBC,EAAMC,EAASC,EAAeC,GAC9C,IAAIC,KAwBJ,SAASC,KAoCT,OA1DAC,OACKC,GAAG,iBAAmBP,EAAM,SAASQ,GAClCJ,EAAWD,EAASK,GAAWA,OAsBvCH,EAAcI,WACVC,aAAc,SAASC,GACnB,IAAIC,EAAeR,EAASO,EAAWX,OAASI,EAASO,EAAWX,MAAMY,aAE1EV,EAAcQ,aAAaC,GAEvBC,IACAD,EAAWE,QAAUP,OAAOQ,MAAM,KAAMF,KAGhDG,aAAc,SAASJ,GACnB,IAAIC,EAAeR,EAASO,EAAWX,OAASI,EAASO,EAAWX,MAAMY,aAEtEA,GAA8C,kBAAvBD,EAAWE,UAClCF,EAAWE,QAAUP,OAAOQ,MAAM,KAAMF,KAGhDI,QAAS,SAASL,GACd,IAAIM,EArCZ,WACI,IAGIC,EAFAC,EADOC,KACID,IACXE,EAAQjB,EAFDgB,KAEepB,OAASI,EAFxBgB,KAEsCpB,MAAMqB,MAGvDnB,EAAcc,QALHI,MAOPC,IAAUH,EAASG,KACnBtB,QAAQ,WACJ,OAAOmB,IAGXC,EAAIG,OAAO,IAAIrB,EAAQ,gBAZhBmB,KAYsCpB,QAwBlBuB,KAAKZ,IAEL,IAAvBA,EAAWE,QACXI,IAEAN,EAAWE,QACNW,KACGP,EACA,WACIN,EAAWQ,IAAIG,OAAO,IAAIrB,EAAQ,kBAAmBU,EAAWX,KAAMyB,gBAOvF,IAAIpB,EAAcqB,QAAQxB,MAhEzC","file":"legacy.js","sourcesContent":["(function() {\n    'use strict';\n\n    function definition(path, Failure, handlerModule, isObject) {\n        var settings = {};\n\n        demand\n            .on('postConfigure:' + path, function(options) {\n                settings = isObject(options) ? options : {};\n            });\n\n        function resolve() {\n            var self = this,\n                dfd = self.dfd,\n                probe = settings[self.path] && settings[self.path].probe,\n                result;\n\n            handlerModule.process(self);\n\n            if (probe && (result = probe())) {\n                provide(function() {\n                    return result;\n                });\n            } else {\n                dfd.reject(new Failure('error probing', self.path));\n            }\n        }\n\n        function HandlerLegacy() {}\n\n        HandlerLegacy.prototype = {\n            onPreRequest: function(dependency) {\n                var dependencies = settings[dependency.path] && settings[dependency.path].dependencies;\n\n                handlerModule.onPreRequest(dependency);\n\n                if (dependencies) {\n                    dependency.enqueue = demand.apply(null, dependencies);\n                }\n            },\n            onPreProcess: function(dependency) {\n                var dependencies = settings[dependency.path] && settings[dependency.path].dependencies;\n\n                if (dependencies && typeof dependency.enqueue === 'boolean') {\n                    dependency.enqueue = demand.apply(null, dependencies);\n                }\n            },\n            process: function(dependency) {\n                var boundResolve = resolve.bind(dependency);\n\n                if (dependency.enqueue === true) {\n                    boundResolve();\n                } else {\n                    dependency.enqueue\n                        .then(\n                            boundResolve,\n                            function() {\n                                dependency.dfd.reject(new Failure('error resolving', dependency.path, arguments));\n                            }\n                        )\n                }\n            }\n        };\n\n        return new(HandlerLegacy.extends(handlerModule));\n    }\n\n    provide(['path', '/demand/failure', '/demand/handler/module', '/demand/validator/isObject'], definition);\n}());"]}