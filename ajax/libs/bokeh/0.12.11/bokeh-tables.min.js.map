{"version":3,"sources":["bokeh-tables.min.js","tree/models/widgets/tables/cell_editors.js","tree/models/widgets/tables/cell_formatters.js","tree/models/widgets/tables/data_table.js","tree/models/widgets/tables/index.js","tree/models/widgets/tables/main.js","tree/models/widgets/tables/table_column.js","tree/models/widgets/tables/table_widget.js","tree/models/widgets/widget.js","../../node_modules/jquery/dist/jquery.js","../../node_modules/slickgrid/lib/jquery.event.drag-2.3.0.js","../../node_modules/slickgrid/lib/jquery.event.drop-2.3.0.js","../../node_modules/slickgrid/plugins/slick.checkboxselectcolumn.js","../../node_modules/slickgrid/plugins/slick.rowselectionmodel.js","../../node_modules/slickgrid/slick.core.js","../../node_modules/slickgrid/slick.grid.js","../../node_modules/slickgrid/slick.jquery.js","../../node_modules/underscore.template/lib/index.js","../../node_modules/underscore.template/lib/underscore.template.js"],"names":["root","factory","this","Bokeh","define","modules","aliases","entry","register_plugin","Error","405","require","module","exports","Object","defineProperty","value","tslib_1","p","dom_1","object_1","dom_view_1","model_1","data_table_1","CellEditorView","_super","options","_this","call","extend","model","column","editor","args","__extends","prototype","initialize","render","container","appendChild","el","inputEl","renderEditor","disableNavigation","addEventListener","event","keyCode","Keys","Left","Right","Up","Down","PageUp","PageDown","stopImmediatePropagation","destroy","remove","focus","show","hide","position","getValue","setValue","val","serializeValue","isValueChanged","defaultValue","applyValue","item","state","grid","getData","setField","DTINDEX_NAME","field","loadValue","emptyValue","validateValue","result","validator","valid","msg","validate","DOMView","className","CellEditor","apply","arguments","Model","type","default_view","StringEditorView","select","input","StringEditor","completions","Array","TextEditorView","TextEditor","SelectEditorView","i","len","ref","length","option","SelectEditor","PercentEditorView","PercentEditor","CheckboxEditorView","checked","CheckboxEditor","IntEditorView","parseInt","isNaN","IntEditor","step","Number","NumberEditorView","parseFloat","NumberEditor","TimeEditorView","TimeEditor","DateEditorView","calendarOpen","Date","DateEditor","406","Numbro","compile_template","tz","types_1","CellFormatter","doFormat","row","cell","columnDef","dataContext","replace","StringFormatter","font_style","text","text_align","text_color","span","style","fontWeight","fontStyle","textAlign","color","outerHTML","FontStyle","TextAlign","Color","NumberFormatter","format","language","rounding","Math","round","floor","ceil","String","BooleanFormatter","class","icon","DateFormatter","getFormat","fmt","date","isString","HTMLTemplateFormatter","compiled_template","template","407","slickgrid_1","slick_rowselectionmodel_1","slick_checkboxselectcolumn_1","hittest","string_1","array_1","logging_1","table_widget_1","widget_1","DataProvider","source","view","data","index","indices","getLength","getItem","offset","j","keys","setItem","_update_source_inplace","getField","getItemMetadata","getRecords","results","push","sort","columns","cols","old_index","records","sortCol","sortAsc","slice","i1","i2","sign","value1","value2","_a","indexOf","properties","change","emit","attributes","DataTableView","in_selection_update","connect_signals","connect","updateGrid","streaming","patching","updateSelection","compute_indices","constructor","invalidate","cur_grid_range","min_index","permuted_indices","selected","selected_indices","x","setSelectedRows","getViewport","scroll_to_selection","any","top","bottom","max","min","scrollRowToTop","newIndexColumn","id","uniqueId","name","width","behavior","cannotTriggerInsert","resizable","selectable","sortable","cssClass","checkboxSelector","reorderable","toColumn","CheckboxSelectColumn","unshift","getColumnDefinition","row_headers","$","fn","_warned_not_reorderable","logger","warn","enableCellNavigation","enableColumnReorder","forceFitColumns","fit_columns","autoHeight","height","multiColumnSort","editable","autoEdit","default_width","Grid","onSort","subscribe","sortCols","setSelectionModel","RowSelectionModel","selectActiveRow","registerPlugin","onSelectedRowsChanged","create_hit_test_result","ref1","rows","WidgetView","DataTable","TableWidget","Bool","override","internal","408","__exportStar","table_column_1","TableColumn","409","Tables","base_1","register_models","410","cell_formatters_1","cell_editors_1","title","formatter","bind","defaultSortAsc","default_sort","Instance","411","cds_view_1","Widget","CDSView","412","layout_dom_1","_render_classes","LayoutDOMView","LayoutDOM","413","global","document","w","window","noGlobal","DOMEval","code","doc","script","createElement","head","parentNode","removeChild","isArrayLike","obj","jQuery","isWindow","nodeName","elem","toLowerCase","winnow","elements","qualifier","not","isFunction","grep","nodeType","risSimple","test","filter","sibling","cur","dir","createOptions","object","each","match","rnothtmlwhite","_","flag","Identity","v","Thrower","ex","adoptValue","resolve","reject","noValue","method","promise","done","fail","then","undefined","completed","removeEventListener","ready","Data","expando","uid","rbrace","JSON","parse","dataAttr","key","rmultiDash","getAttribute","e","dataUser","set","adjustCSS","prop","valueParts","tween","adjusted","scale","maxIterations","currentValue","css","initial","unit","cssNumber","initialInUnit","rcssNum","exec","start","end","getDefaultDisplay","temp","ownerDocument","display","defaultDisplayMap","body","showHide","values","dataPriv","get","isHiddenWithinTree","getAll","context","tag","ret","getElementsByTagName","querySelectorAll","merge","setGlobalEval","elems","refElements","l","buildFragment","scripts","selection","ignored","tmp","wrap","contains","fragment","createDocumentFragment","nodes","rhtml","rtagName","wrapMap","_default","innerHTML","htmlPrefilter","lastChild","childNodes","firstChild","textContent","createTextNode","inArray","rscriptType","returnTrue","returnFalse","safeActiveElement","activeElement","err","on","types","selector","one","origFn","off","guid","add","manipulationTarget","content","disableScript","restoreScript","rscriptTypeMasked","removeAttribute","cloneCopyEvent","src","dest","pdataOld","pdataCur","udataOld","udataCur","events","hasData","access","handle","fixInput","rcheckableType","domManip","collection","callback","concat","first","hasScripts","node","iNoClone","support","checkClone","rchecked","self","eq","html","map","clone","_evalUrl","rcleanScript","keepData","cleanData","curCSS","computed","minWidth","maxWidth","getStyles","getPropertyValue","pixelMarginRight","rnumnonpx","rmargin","addGetHookIf","conditionFn","hookFn","vendorPropName","emptyStyle","capName","toUpperCase","cssPrefixes","finalPropName","cssProps","setPositiveNumber","subtract","matches","augmentWidthOrHeight","extra","isBorderBox","styles","cssExpand","getWidthOrHeight","valueIsBorderBox","boxSizingReliable","Tween","easing","init","schedule","inProgress","hidden","requestAnimationFrame","setTimeout","fx","interval","tick","createFxNow","fxNow","now","genFx","includeWidth","which","attrs","opacity","createTween","animation","Animation","tweeners","defaultPrefilter","props","opts","toggle","hooks","oldfire","propTween","restoreDisplay","isBox","anim","orig","dataShow","queue","_queueHooks","unqueued","empty","fire","always","rfxtypes","isEmptyObject","overflow","overflowX","overflowY","propFilter","specialEasing","camelCase","isArray","cssHooks","expand","stopped","prefilters","deferred","Deferred","currentTime","remaining","startTime","duration","percent","tweens","run","notifyWith","resolveWith","originalProperties","originalOptions","stop","gotoEnd","rejectWith","proxy","progress","complete","timer","stripAndCollapse","tokens","join","getClass","buildParams","prefix","traditional","rbracket","addToPrefiltersOrTransports","structure","dataTypeExpression","func","dataType","dataTypes","inspectPrefiltersOrTransports","jqXHR","inspect","inspected","prefilterOrFactory","dataTypeOrTransport","seekingTransport","transports","ajaxExtend","target","deep","flatOptions","ajaxSettings","ajaxHandleResponses","s","responses","ct","finalDataType","firstDataType","contents","shift","mimeType","getResponseHeader","converters","ajaxConvert","response","isSuccess","conv2","current","conv","prev","responseFields","dataFilter","split","error","arr","getProto","getPrototypeOf","class2type","toString","hasOwn","hasOwnProperty","fnToString","ObjectFunctionString","version","rtrim","rmsPrefix","rdashAlpha","fcamelCase","all","letter","jquery","toArray","num","pushStack","prevObject","last","splice","copy","copyIsArray","isPlainObject","random","isReady","noop","isNumeric","proto","Ctor","globalEval","string","trim","makeArray","second","invert","callbackInverse","callbackExpect","arg","Symbol","iterator","Sizzle","seed","m","nid","groups","newSelector","newContext","preferredDoc","setDocument","documentIsHTML","rquickExpr","getElementById","getElementsByClassName","qsa","compilerCache","rbuggyQSA","rcssescape","fcssescape","setAttribute","tokenize","toSelector","rsibling","testContext","qsaError","createCache","cache","Expr","cacheLength","markFunction","assert","addHandle","handler","attrHandle","siblingCheck","a","b","diff","sourceIndex","nextSibling","createInputPseudo","createButtonPseudo","createDisabledPseudo","disabled","isDisabled","disabledAncestor","createPositionalPseudo","argument","matchIndexes","setFilters","addCombinator","matcher","combinator","base","skip","next","checkNonElements","doneName","xml","oldCache","uniqueCache","outerCache","newCache","dirruns","uniqueID","elementMatcher","matchers","multipleContexts","contexts","condense","unmatched","newUnmatched","mapped","setMatcher","preFilter","postFilter","postFinder","postSelector","preMap","postMap","preexisting","matcherIn","matcherOut","matcherFromTokens","checkContext","leadingRelative","relative","implicitRelative","matchContext","matchAnyContext","outermostContext","matcherFromGroupMatchers","elementMatchers","setMatchers","bySet","byElement","superMatcher","outermost","matchedCount","setMatched","contextBackup","find","dirrunsUnique","pop","uniqueSort","getText","isXML","compile","sortInput","hasDuplicate","docElem","rbuggyMatches","classCache","tokenCache","sortOrder","push_native","list","booleans","whitespace","identifier","pseudos","rwhitespace","RegExp","rcomma","rcombinators","rattributeQuotes","rpseudo","ridentifier","matchExpr","ID","CLASS","TAG","ATTR","PSEUDO","CHILD","bool","needsContext","rinputs","rheader","rnative","runescape","funescape","escaped","escapedWhitespace","high","fromCharCode","ch","asCodePoint","charCodeAt","unloadHandler","els","documentElement","hasCompare","subWindow","defaultView","attachEvent","createComment","getById","getElementsByName","attrId","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","adown","bup","compare","sortDetached","aup","ap","bp","expr","attr","specified","escape","sel","duplicates","detectDuplicates","sortStable","nodeValue","selectors","createPseudo",">"," ","+","~","excess","unquoted","nodeNameSelector","pattern","operator","check","what","simple","forward","ofType","nodeIndex","parent","useCache","pseudo","idx","matched","has","innerText","lang","elemLang","hash","location","hasFocus","href","tabIndex","enabled","selectedIndex","header","button","even","odd","lt","gt","radio","checkbox","file","password","image","submit","reset","filters","parseOnly","soFar","preFilters","cached","token","compiled","unique","isXMLDoc","escapeSelector","until","truncate","is","siblings","n","rneedsContext","rsingleTag","rootjQuery","parseHTML","rparentsprev","guaranteedUnique","children","targets","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","contentDocument","reverse","Callbacks","firing","memory","fired","locked","firingIndex","once","stopOnFalse","disable","lock","fireWith","tuples","catch","pipe","fns","newDefer","tuple","returned","notify","onFulfilled","onRejected","onProgress","depth","special","that","mightThrow","maxDepth","TypeError","process","exceptionHook","stackTrace","getStackHook","stateString","when","singleValue","resolveContexts","resolveValues","master","updateFunc","rerrorNames","stack","console","message","readyException","readyList","readyWait","wait","readyState","doScroll","chainable","emptyGet","raw","bulk","acceptData","owner","configurable","removeData","_data","_removeData","dequeue","startLength","setter","clearQueue","count","defer","pnum","swap","old","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","div","cloneNode","noCloneChecked","rkeyEvent","rmouseEvent","rtypenamespace","handleObjIn","eventHandle","t","handleObj","handlers","namespaces","origType","elemData","triggered","dispatch","delegateType","bindType","namespace","delegateCount","setup","mappedTypes","origCount","teardown","removeEvent","nativeEvent","handlerQueue","fix","delegateTarget","preDispatch","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","preventDefault","stopPropagation","postDispatch","matchedHandlers","matchedSelectors","addProp","hook","Event","enumerable","originalEvent","writable","load","noBubble","trigger","blur","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","char","charCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","mouseenter","mouseleave","pointerenter","pointerleave","related","rxhtmlTag","rnoInnerhtml","dataAndEvents","deepDataAndEvents","srcElements","destElements","inPage","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","original","insert","opener","getComputedStyle","computeStyleTests","cssText","divStyle","pixelPositionVal","reliableMarginLeftVal","marginLeft","boxSizingReliableVal","marginRight","pixelMarginRightVal","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","rdisplayswap","rcustomProp","cssShow","visibility","cssNormalTransform","letterSpacing","animationIterationCount","columnCount","fillOpacity","flexGrow","flexShrink","lineHeight","order","orphans","widows","zIndex","zoom","float","origName","isCustomProp","setProperty","isFinite","getClientRects","getBoundingClientRect","left","margin","padding","border","suffix","expanded","parts","propHooks","eased","pos","scrollTop","scrollLeft","linear","swing","cos","PI","rrun","*","tweener","prefilter","speed","opt","speeds","fadeTo","to","animate","optall","doAnimation","finish","stopQueue","timers","cssFn","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","time","timeout","clearTimeout","checkOn","optSelected","radioValue","boolHook","removeAttr","nType","attrHooks","attrNames","getter","lowercaseName","rfocusable","rclickable","removeProp","propFix","tabindex","for","addClass","classes","curValue","clazz","finalValue","removeClass","toggleClass","stateVal","classNames","hasClass","rreturn","valHooks","optionSet","rfocusMorph","onlyHandlers","bubbleType","ontype","eventPath","isTrigger","parentWindow","simulate","triggerHandler","hover","fnOver","fnOut","focusin","attaches","nonce","rquery","parseXML","DOMParser","parseFromString","rCRLF","rsubmitterTypes","rsubmittable","param","valueOrFunction","encodeURIComponent","serialize","serializeArray","r20","rhash","rantiCache","rheaders","rlocalProtocol","rnoContent","rprotocol","allTypes","originAnchor","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","json","* text","text html","text json","text xml","ajaxSetup","settings","ajaxPrefilter","ajaxTransport","ajax","status","nativeStatusText","headers","success","modified","statusText","timeoutTimer","transport","responseHeadersString","ifModified","cacheURL","callbackContext","statusCode","fireGlobals","globalEventContext","completeDeferred","responseHeaders","urlAnchor","uncached","requestHeaders","requestHeadersNames","strAbort","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","finalText","crossDomain","host","hasContent","beforeSend","send","getJSON","getScript","throws","wrapAll","firstElementChild","wrapInner","unwrap","visible","offsetWidth","offsetHeight","xhr","XMLHttpRequest","xhrSuccessStatus","0","1223","xhrSupported","cors","errorCallback","open","username","xhrFields","onload","onerror","onabort","onreadystatechange","responseType","responseText","binary","text script","charset","scriptCharset","evt","oldCallbacks","rjsonp","jsonp","jsonpCallback","originalSettings","callbackName","overwritten","responseContainer","jsonProp","createHTMLDocument","implementation","keepScripts","parsed","params","animated","setOffset","curPosition","curLeft","curCSSTop","curTop","curOffset","curCSSLeft","calculatePosition","curElem","using","rect","win","pageYOffset","clientTop","pageXOffset","clientLeft","offsetParent","parentOffset","scrollTo","Height","Width","","defaultExtra","funcName","unbind","delegate","undelegate","holdReady","hold","parseJSON","amd","_jQuery","_$","noConflict","414","drag","str","$event","$special","defaults","distance","drop","datakey","def","dontstart","textselect","detachEvent","touched","dd","propagates","mousedown","interactions","interaction","dragging","hijack","flatten","live","droppable","pow","getTime","ia","mode","cancelled","subject","element","update","startX","startY","deltaX","deltaY","originalX","originalY","available","member","unselectable","locate","$dispatch","draginit","dragstart","dragend","415","multi","Infinity","tolerance","anyactive","winner","$targets","tolerate","$elem","posi","outerHeight","outerWidth","right","modes","intersect","overlap","fit","middle","drp","drg","xy","dropinit","dropstart","dropend","416","_grid","_handler","handleSelectedRowsChanged","onClick","handleClick","onHeaderClick","handleHeaderClick","onKeyDown","handleKeyDown","unsubscribeAll","selectedRows","getSelectedRows","lookup","_selectedRowsLookup","invalidateRow","getDataLength","updateColumnHeader","_options","columnId","toolTip","getColumns","getEditorLock","isActive","commitCurrentEdit","toggleRowSelection","selectRows","rowArray","addRows","deSelectRows","removeRows","checkboxSelectionFormatter","Slick","EventHandler","_defaults","417","onActiveCellChanged","wrapHandler","handleActiveCellChange","_inHandler","rangesToRows","ranges","fromRow","toRow","rowsToRanges","lastCell","Range","getRowsRange","from","_ranges","setSelectedRanges","_self","onSelectedRangesChanged","getSelectedRanges","activeRow","getActiveCell","y","scrollRowIntoView","tempRanges","getCellFromEvent","canCellBeActive","getOptions","multiSelect","setActiveCell","o","418","EventData","unsubscribe","scope","fromCell","toCell","isSingleRow","isSingleCell","NonDataItem","__nonDataRow","Group","__group","level","collapsed","selectChecked","totals","groupingKey","GroupTotals","__groupTotals","group","initialized","EditorLock","activeEditController","editController","activate","cancelCurrentEdit","deactivate","equals","NonDataRow","GlobalEditorLock","BACKSPACE","DELETE","DOWN","END","ENTER","ESCAPE","ESC","HOME","INSERT","LEFT","PAGE_DOWN","PAGE_UP","RIGHT","TAB","UP","C","V","preClickClassName","419","SlickGrid","$container","cacheCssForHiddenInit","maxSupportedCssHeight","getMaxSupportedCssHeight","scrollbarDimensions","measureScrollbar","validateAndEnforceOptions","columnDefaults","defaultColumnWidth","columnsById","$focusSink","createPreHeaderPanel","$preHeaderPanelScroller","$preHeaderPanel","$preHeaderPanelSpacer","getCanvasWidth","showPreHeaderPanel","$headerScroller","$headers","getHeadersWidth","$headerRowScroller","$headerRow","$headerRowSpacer","$topPanelScroller","$topPanel","showTopPanel","showHeaderRow","$viewport","$canvas","createFooterRow","$footerRowScroller","$footerRow","$footerRowSpacer","showFooterRow","numberedMultiColumnSort","sortIndicatorCssClass","$focusSink2","explicitInitialization","finishInitialization","viewportW","measureCellPaddingAndBorder","disableSelection","enableTextSelectionOnCells","updateColumnCaches","createColumnHeaders","setupColumnSort","createCssRules","resizeCanvas","bindAncestorScrollEvents","handleScroll","handleHeaderContextMenu","handleHeaderMouseEnter","handleHeaderMouseLeave","handleHeaderRowScroll","handleFooterRowScroll","handlePreHeaderPanelScroll","handleDblClick","handleContextMenu","handleDragInit","handleDragStart","handleDrag","handleDragEnd","handleMouseEnter","handleMouseLeave","navigator","userAgent","handleMouseWheel","restoreCssFromHiddenInit","$hiddenParents","oldProps","plugin","plugins","unregisterPlugin","selectionModel","handleSelectedRangesChanged","getSelectionModel","getCanvasNode","$c","dim","clientWidth","clientHeight","getColumnTotalWidth","includeScrollbar","totalWidth","ii","headersWidth","availableWidth","viewportHasVScroll","rowWidth","fullWidthRows","updateCanvasWidth","forceColumnWidthsUpdate","oldCanvasWidth","canvasWidth","viewportHasHScroll","applyColumnWidths","$target","supportedHeight","testUpTo","getUID","getHeaderColumnWidthDiff","headerColumnWidthDiff","getScrollbarDimensions","scrollWidth","scrollHeight","$boundAncestors","handleActiveCellPositionChange","unbindAncestorScrollEvents","getColumnIndex","$header","onBeforeHeaderCellDestroy","onHeaderCellRendered","getHeaderRow","getFooterRow","getPreHeaderPanel","getHeaderRowColumn","getFooterRowColumn","$footer","onMouseEnter","onMouseLeave","onBeforeHeaderRowCellDestroy","onBeforeFooterRowCellDestroy","headerCssClass","headerRowCell","onHeaderRowCellRendered","footerRowCell","onFooterRowCellRendered","setSortColumns","sortColumns","setupColumnResize","setColumns","setupColumnReorder","$col","sortColumn","hadSortCol","tristateMultiColumnSort","containment","axis","cursor","helper","placeholder","ui","beforeStop","reorderedIds","reorderedColumns","onColumnsReordered","c","columnElements","minPageX","maxPageX","firstResizable","lastResizable","shrinkLeewayOnRight","stretchLeewayOnRight","previousWidth","absoluteColumnMinWidth","shrinkLeewayOnLeft","stretchLeewayOnLeft","actualMinWidth","d","applyColumnHeaderWidths","syncColumnCellResize","newWidth","rerenderOnResize","invalidateAllRows","onColumnsResized","getVBoxDelta","$el","delta","h","verArray","jQueryNewWidthBehaviour","headerColumnHeightDiff","r","cellWidthDiff","cellHeightDiff","$style","rowHeight","rules","topPanelHeight","preHeaderPanelHeight","headerRowHeight","footerRowHeight","styleSheet","getColumnCssRules","stylesheet","sheets","styleSheets","ownerNode","owningElement","columnCssRulesL","columnCssRulesR","columnIdx","cssRules","selectorText","substr","removeCssRules","onBeforeDestroy","editorLock","getEditController","autosizeColumns","prevTotal","widths","shrinkLeeway","total","availWidth","shrinkProportion","absMinWidth","shrinkSize","growProportion","growSize","currentWidth","reRender","rule","setSortColumn","ascending","numberCols","headerColumnEls","sortIndicatorEl","columnIndex","getSortColumns","k","canCellBeSelected","selectedCellCssClass","setCellCssStyles","columnPosLeft","columnPosRight","columnDefinitions","setOptions","suppressRender","makeActiveCellNormal","enableAddRow","leaveSpaceForNewRows","setData","newData","scrollToTop","updateRowCount","getDataLengthIncludingAddNew","pagingActive","pagingIsLastPage","getDataItem","getTopPanel","setTopPanelVisibility","setHeaderRowVisibility","setFooterRowVisibility","setPreHeaderPanelVisibility","getContainerNode","getRowTop","getRowFromPosition","viewportH","oldOffset","page","ph","cj","newScrollTop","range","getVisibleRange","cleanupRows","updateRowPositions","prevScrollTop","vScrollDir","lastRenderedScrollTop","onViewportChanged","defaultFormatter","getFormatter","rowMetadata","columnOverrides","formatterFactory","getEditor","columnMetadata","editorFactory","getDataItemValueForColumn","dataItemColumnValueExtractor","appendRowHtml","stringArray","dataLength","dataLoading","rowCss","addNewRowCssClass","metadata","cssClasses","colspan","columnData","leftPx","rightPx","appendCellHtml","cellCss","activeCell","cellCssClasses","formatterResult","addlCssClasses","onBeforeAppendCell","addClasses","rowsCache","cellRenderQueue","cellColSpans","rangeToKeep","removeRowFromCache","enableAsyncPostRenderCleanup","startPostProcessingCleanup","currentEditor","queuePostProcessedRowForCleanup","cacheEntry","postProcessedRow","rowIdx","postProcessgroupId","postProcessedCleanupQueue","actionType","groupId","cellNodesByColumnIdx","rowNode","queuePostProcessedCellForCleanup","cellnode","rowNodeFromLastMouseWheelEvent","zombieRowNodeFromLastMouseWheelEvent","zombieRowCacheFromLastMouseWheelEvent","zombieRowPostProcessedFromLastMouseWheelEvent","postProcessedRows","renderedRows","counter_rows_removed","invalidateRows","rl","applyFormatResultToCellNode","cellNode","suppressRemove","removeClasses","updateCell","getCellNode","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","getViewportHeight","numVisibleRows","lastRenderedScrollLeft","updatePagingStatusFromView","pagingInfo","pageSize","pageNum","totalPages","dataLengthIncludingAddNew","numberOfRows","oldViewportHasVScroll","r1","activeCellNode","resetActiveCell","oldH","oldScrollTopInRange","viewportTop","viewportLeft","getRenderedRange","buffer","minBuffer","previousSibling","cleanUpCells","totalCellsRemoved","cellsToRemove","cellToRemove","cleanUpAndRenderCells","cellsAdded","processedRows","totalCellsAdded","btm","processedRow","renderRows","needToReselectCell","counter_rows_rendered","startPostProcessing","enableAsyncPostRender","h_postrender","asyncPostProcessRows","asyncPostRenderDelay","h_postrenderCleanup","asyncPostProcessCleanupRows","asyncPostRenderCleanupDelay","postProcessFromRow","postProcessToRow","rendered","h_render","vScrollDist","abs","hScrollDist","prevScrollLeft","forceSyncScrolling","onScroll","processedStatus","asyncPostRender","asyncPostRenderCleanup","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","onCellCssStylesChanged","removeCellCssStyles","prevHash","getCellCssStyles","flashCell","$cell","toggleCellClass","times","cellFlashingCssClass","cellExists","retval","onDragInit","onDragStart","onDrag","onDragEnd","handled","navigatePrev","keyCaptureList","cancelEditAndSetFocus","navigatePageDown","navigatePageUp","navigateLeft","navigateRight","navigateUp","navigateDown","navigateNext","commitEditAndSetFocus","makeActiveCellEditable","setFocus","preClickModeOn","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseEnter","onHeaderMouseLeave","onHeaderContextMenu","getCellFromPoint","getCellFromNode","cls","getRowFromNode","getCellNodeBox","y1","y2","x1","x2","tabbingDirection","scrollCellIntoView","doPaging","getColspan","internalScrollColumnIntoView","scrollRight","scrollColumnIntoView","newCell","opt_editMode","suppressActiveCellChangedEvent","activePosX","showCellSelection","isCellPotentiallyEditable","h_editorLoader","asyncEditorLoading","asyncEditorLoadDelay","clearTextSelection","getSelection","removeAllRanges","onBeforeCellEditorDestroy","onBeforeEditCell","useEditor","suppressClearOnEdit","gridPosition","absBox","commitChanges","cancelChanges","preClick","serializedEditorValue","box","offsetTop","offsetLeft","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","getCellEditor","getActiveCellNode","rowAtTop","rowAtBottom","scrollPage","deltaRows","prevCell","prevActivePosX","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","gotoRight","posX","gotoLeft","firstFocusableCell","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","navigate","tabbingDirections","up","down","stepFunctions","stepFn","isAddNewRow","focusable","forceEdit","validationResults","editCommand","serializedValue","prevSerializedValue","execute","onCellChange","undo","editCommandHandler","newItem","onAddNewRow","onValidationError","preserveCopiedSelectionOnPaste","debug","alert","eval","slickGridVersion","editActiveCell","420","421","Template","UnderscoreTemplate","422","breaker","ArrayProto","ObjProto","nativeForEach","forEach","nativeKeys","nativeIsArray","path","entityMap","&","<","\"","'","entityRegexes","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n","\t"," "," ","escaper","variable","Function","models/widgets/tables/cell_editors","models/widgets/tables/cell_formatters","models/widgets/tables/data_table","models/widgets/tables/index","models/widgets/tables/main","models/widgets/tables/table_column","models/widgets/tables/table_widget","models/widgets/widget"],"mappings":"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","file":"bokeh-tables.min.js","sourcesContent":["(function(root, factory) {\n//  if(typeof exports === 'object' && typeof module === 'object')\n//    factory(require(\"Bokeh\"));\n//  else if(typeof define === 'function' && define.amd)\n//    define([\"Bokeh\"], factory);\n//  else if(typeof exports === 'object')\n//    factory(require(\"Bokeh\"));\n//  else\n    factory(root[\"Bokeh\"]);\n})(this, function(Bokeh) {\n  var define;\n  return (function(modules, aliases, entry) {\n    if (Bokeh != null) {\n      return Bokeh.register_plugin(modules, aliases, entry);\n    } else {\n      throw new Error(\"Cannot find Bokeh. You have to load it prior to loading plugins.\");\n    }\n  })\n({\n405: /* models/widgets/tables/cell_editors */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar p = require(15    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(30    /* core/util/object */);\nvar dom_view_1 = require(6    /* core/dom_view */);\nvar model_1 = require(50    /* ../../../model */);\nvar data_table_1 = require(407    /* ./data_table */);\nvar CellEditorView = function (_super) {\n    tslib_1.__extends(CellEditorView, _super);\n    function CellEditorView(options) {\n        var _this = _super.call(this, object_1.extend({ model: options.column.editor }, options)) || this;\n        _this.args = options;\n        return _this;\n    }\n    CellEditorView.prototype.initialize = function (options) {\n        _super.prototype.initialize.call(this, options);\n        return this.render();\n    };\n    CellEditorView.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.args.container.appendChild(this.el);\n        this.el.appendChild(this.inputEl);\n        this.renderEditor();\n        this.disableNavigation();\n        return this;\n    };\n    CellEditorView.prototype.renderEditor = function () {\n    };\n    CellEditorView.prototype.disableNavigation = function () {\n        return this.inputEl.addEventListener('keydown', function (event) {\n            switch (event.keyCode) {\n            case dom_1.Keys.Left:\n            case dom_1.Keys.Right:\n            case dom_1.Keys.Up:\n            case dom_1.Keys.Down:\n            case dom_1.Keys.PageUp:\n            case dom_1.Keys.PageDown:\n                return event.stopImmediatePropagation();\n            }\n        });\n    };\n    CellEditorView.prototype.destroy = function () {\n        return this.remove();\n    };\n    CellEditorView.prototype.focus = function () {\n        return this.inputEl.focus();\n    };\n    CellEditorView.prototype.show = function () {\n    };\n    CellEditorView.prototype.hide = function () {\n    };\n    CellEditorView.prototype.position = function () {\n    };\n    CellEditorView.prototype.getValue = function () {\n        return this.inputEl.value;\n    };\n    CellEditorView.prototype.setValue = function (val) {\n        return this.inputEl.value = val;\n    };\n    CellEditorView.prototype.serializeValue = function () {\n        return this.getValue();\n    };\n    CellEditorView.prototype.isValueChanged = function () {\n        return !(this.getValue() === '' && this.defaultValue == null) && this.getValue() !== this.defaultValue;\n    };\n    CellEditorView.prototype.applyValue = function (item, state) {\n        return this.args.grid.getData().setField(item[data_table_1.DTINDEX_NAME], this.args.column.field, state);\n    };\n    CellEditorView.prototype.loadValue = function (item) {\n        var value;\n        value = item[this.args.column.field];\n        this.defaultValue = value != null ? value : this.emptyValue;\n        return this.setValue(this.defaultValue);\n    };\n    CellEditorView.prototype.validateValue = function (value) {\n        var result;\n        if (this.args.column.validator) {\n            result = this.args.column.validator(value);\n            if (!result.valid) {\n                return result;\n            }\n        }\n        return {\n            valid: true,\n            msg: null\n        };\n    };\n    CellEditorView.prototype.validate = function () {\n        return this.validateValue(this.getValue());\n    };\n    return CellEditorView;\n}(dom_view_1.DOMView);\nexports.CellEditorView = CellEditorView;\n;\nCellEditorView.prototype.className = 'bk-cell-editor';\nCellEditorView.prototype.inputEl = null;\nCellEditorView.prototype.emptyValue = null;\nCellEditorView.prototype.defaultValue = null;\nvar CellEditor = function (_super) {\n    tslib_1.__extends(CellEditor, _super);\n    function CellEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CellEditor;\n}(model_1.Model);\nexports.CellEditor = CellEditor;\n;\nCellEditor.prototype.type = 'CellEditor';\nCellEditor.prototype.default_view = CellEditorView;\nvar StringEditorView = function (_super) {\n    tslib_1.__extends(StringEditorView, _super);\n    function StringEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StringEditorView.prototype.renderEditor = function () {\n        //completions = @model.completions\n        //if completions.length != 0\n        //  @inputEl.classList.add(\"bk-cell-editor-completion\")\n        //  $(@inputEl).autocomplete({source: completions})\n        //  $(@inputEl).autocomplete(\"widget\")\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    StringEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    return StringEditorView;\n}(CellEditorView);\nexports.StringEditorView = StringEditorView;\n;\nStringEditorView.prototype.emptyValue = '';\nStringEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar StringEditor = function (_super) {\n    tslib_1.__extends(StringEditor, _super);\n    function StringEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StringEditor;\n}(CellEditor);\nexports.StringEditor = StringEditor;\n;\nStringEditor.prototype.type = 'StringEditor';\nStringEditor.prototype.default_view = StringEditorView;\nStringEditor.define({\n    completions: [\n        p.Array,\n        []\n    ]\n});\nexports.TextEditorView = function (_super) {\n    tslib_1.__extends(TextEditorView, _super);\n    function TextEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TextEditorView;\n}(CellEditorView);\nvar TextEditor = function (_super) {\n    tslib_1.__extends(TextEditor, _super);\n    function TextEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TextEditor;\n}(CellEditor);\nexports.TextEditor = TextEditor;\n;\nTextEditor.prototype.type = 'TextEditor';\nTextEditor.prototype.default_view = exports.TextEditorView;\nvar SelectEditorView = function (_super) {\n    tslib_1.__extends(SelectEditorView, _super);\n    function SelectEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SelectEditorView.prototype.renderEditor = function () {\n        var i, len, ref;\n        ref = this.model.options;\n        for (i = 0, len = ref.length; i < len; i++) {\n            dom_1.option = ref[i];\n            this.inputEl.appendChild(dom_1.option({ value: dom_1.option }, dom_1.option));\n        }\n        return this.focus();\n    };\n    SelectEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        return this.inputEl.select();\n    };\n    return SelectEditorView;\n}(CellEditorView);\nexports.SelectEditorView = SelectEditorView;\n;\nSelectEditorView.prototype.inputEl = dom_1.select();\nvar SelectEditor = function (_super) {\n    tslib_1.__extends(SelectEditor, _super);\n    function SelectEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SelectEditor;\n}(CellEditor);\nexports.SelectEditor = SelectEditor;\n;\nSelectEditor.prototype.type = 'SelectEditor';\nSelectEditor.prototype.default_view = SelectEditorView;\nSelectEditor.define({\n    options: [\n        p.Array,\n        []\n    ]\n});\nexports.PercentEditorView = function (_super) {\n    tslib_1.__extends(PercentEditorView, _super);\n    function PercentEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PercentEditorView;\n}(CellEditorView);\nvar PercentEditor = function (_super) {\n    tslib_1.__extends(PercentEditor, _super);\n    function PercentEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PercentEditor;\n}(CellEditor);\nexports.PercentEditor = PercentEditor;\n;\nPercentEditor.prototype.type = 'PercentEditor';\nPercentEditor.prototype.default_view = exports.PercentEditorView;\nvar CheckboxEditorView = function (_super) {\n    tslib_1.__extends(CheckboxEditorView, _super);\n    function CheckboxEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CheckboxEditorView.prototype.renderEditor = function () {\n        return this.focus();\n    };\n    CheckboxEditorView.prototype.loadValue = function (item) {\n        this.defaultValue = !!item[this.args.column.field];\n        return this.inputEl.checked = this.defaultValue;\n    };\n    CheckboxEditorView.prototype.serializeValue = function () {\n        return this.inputEl.checked;\n    };\n    return CheckboxEditorView;\n}(CellEditorView);\nexports.CheckboxEditorView = CheckboxEditorView;\n;\nCheckboxEditorView.prototype.inputEl = dom_1.input({\n    type: 'checkbox',\n    value: 'true'\n});\nvar CheckboxEditor = function (_super) {\n    tslib_1.__extends(CheckboxEditor, _super);\n    function CheckboxEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CheckboxEditor;\n}(CellEditor);\nexports.CheckboxEditor = CheckboxEditor;\n;\nCheckboxEditor.prototype.type = 'CheckboxEditor';\nCheckboxEditor.prototype.default_view = CheckboxEditorView;\nvar IntEditorView = function (_super) {\n    tslib_1.__extends(IntEditorView, _super);\n    function IntEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IntEditorView.prototype.renderEditor = function () {\n        //$(@inputEl).spinner({step: @model.step})\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.remove = function () {\n        //$(@inputEl).spinner(\"destroy\")\n        return _super.prototype.remove.call(this);\n    };\n    IntEditorView.prototype.serializeValue = function () {\n        return parseInt(this.getValue(), 10) || 0;\n    };\n    IntEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid integer'\n            };\n        } else {\n            return _super.prototype.validateValue.call(this, value);\n        }\n    };\n    return IntEditorView;\n}(CellEditorView);\nexports.IntEditorView = IntEditorView;\n;\nIntEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar IntEditor = function (_super) {\n    tslib_1.__extends(IntEditor, _super);\n    function IntEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IntEditor;\n}(CellEditor);\nexports.IntEditor = IntEditor;\n;\nIntEditor.prototype.type = 'IntEditor';\nIntEditor.prototype.default_view = IntEditorView;\nIntEditor.define({\n    step: [\n        p.Number,\n        1\n    ]\n});\nvar NumberEditorView = function (_super) {\n    tslib_1.__extends(NumberEditorView, _super);\n    function NumberEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberEditorView.prototype.renderEditor = function () {\n        //$(@inputEl).spinner({step: @model.step})\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.remove = function () {\n        //$(@inputEl).spinner(\"destroy\")\n        return _super.prototype.remove.call(this);\n    };\n    NumberEditorView.prototype.serializeValue = function () {\n        return parseFloat(this.getValue()) || 0;\n    };\n    NumberEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid number'\n            };\n        } else {\n            return _super.prototype.validateValue.call(this, value);\n        }\n    };\n    return NumberEditorView;\n}(CellEditorView);\nexports.NumberEditorView = NumberEditorView;\n;\nNumberEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar NumberEditor = function (_super) {\n    tslib_1.__extends(NumberEditor, _super);\n    function NumberEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NumberEditor;\n}(CellEditor);\nexports.NumberEditor = NumberEditor;\n;\nNumberEditor.prototype.type = 'NumberEditor';\nNumberEditor.prototype.default_view = NumberEditorView;\nNumberEditor.define({\n    step: [\n        p.Number,\n        0.01\n    ]\n});\nexports.TimeEditorView = function (_super) {\n    tslib_1.__extends(TimeEditorView, _super);\n    function TimeEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TimeEditorView;\n}(CellEditorView);\nvar TimeEditor = function (_super) {\n    tslib_1.__extends(TimeEditor, _super);\n    function TimeEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TimeEditor;\n}(CellEditor);\nexports.TimeEditor = TimeEditor;\n;\nTimeEditor.prototype.type = 'TimeEditor';\nTimeEditor.prototype.default_view = exports.TimeEditorView;\nvar DateEditorView = function (_super) {\n    tslib_1.__extends(DateEditorView, _super);\n    function DateEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateEditorView.prototype.renderEditor = function () {\n        this.calendarOpen = false;\n        //@$datepicker = $(@inputEl).datepicker({\n        //  showOn: \"button\"\n        //  buttonImageOnly: true\n        //  beforeShow: () => @calendarOpen = true\n        //  onClose: () => @calendarOpen = false\n        //})\n        //@$datepicker.siblings(\".ui-datepicker-trigger\").css(\"vertical-align\": \"middle\")\n        //@$datepicker.width(@$datepicker.width() - (14 + 2*4 + 4)) # img width + margins + edge distance\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    DateEditorView.prototype.destroy = function () {\n        //$.datepicker.dpDiv.stop(true, true)\n        //@$datepicker.datepicker(\"hide\")\n        //@$datepicker.datepicker(\"destroy\")\n        return _super.prototype.destroy.call(this);\n    };\n    DateEditorView.prototype.show = function () {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.stop(true, true).show()\n        return _super.prototype.show.call(this);\n    };\n    DateEditorView.prototype.hide = function () {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.stop(true, true).hide()\n        return _super.prototype.hide.call(this);\n    };\n    DateEditorView.prototype.position = function (position) {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.css(top: position.top + 30, left: position.left)\n        return _super.prototype.position.call(this);\n    };\n    DateEditorView.prototype.getValue = function () {\n    };\n    //return @$datepicker.datepicker(\"getDate\").getTime()\n    DateEditorView.prototype.setValue = function (val) {\n    };\n    return DateEditorView;\n}(CellEditorView);\nexports.DateEditorView = DateEditorView;\n;\nDateEditorView.prototype.emptyValue = new Date();\nDateEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar DateEditor = function (_super) {\n    tslib_1.__extends(DateEditor, _super);\n    function DateEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DateEditor;\n}(CellEditor);\nexports.DateEditor = DateEditor;\n;\nDateEditor.prototype.type = 'DateEditor';\nDateEditor.prototype.default_view = DateEditorView;    \n},\n406: /* models/widgets/tables/cell_formatters */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar Numbro = require(332    /* numbro */);\nvar compile_template = require(421    /* underscore.template */);\nvar tz = require(363    /* timezone */);\nvar p = require(15    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(30    /* core/util/object */);\nvar types_1 = require(42    /* core/util/types */);\nvar model_1 = require(50    /* ../../../model */);\nexports.CellFormatter = function (_super) {\n    tslib_1.__extends(CellFormatter, _super);\n    function CellFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CellFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    };\n    return CellFormatter;\n}(model_1.Model);\nvar StringFormatter = function (_super) {\n    tslib_1.__extends(StringFormatter, _super);\n    function StringFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StringFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var font_style, text, text_align, text_color;\n        font_style = this.font_style;\n        text_align = this.text_align;\n        text_color = this.text_color;\n        text = dom_1.span({}, value == null ? '' : '' + value);\n        switch (font_style) {\n        case 'bold':\n            text.style.fontWeight = 'bold';\n            break;\n        case 'italic':\n            text.style.fontStyle = 'italic';\n        }\n        if (text_align != null) {\n            text.style.textAlign = text_align;\n        }\n        if (text_color != null) {\n            text.style.color = text_color;\n        }\n        text = text.outerHTML;\n        return text;\n    };\n    return StringFormatter;\n}(exports.CellFormatter);\nexports.StringFormatter = StringFormatter;\n;\nStringFormatter.prototype.type = 'StringFormatter';\nStringFormatter.define({\n    font_style: [\n        p.FontStyle,\n        'normal'\n    ],\n    text_align: [\n        p.TextAlign,\n        'left'\n    ],\n    text_color: [p.Color]\n});\nvar NumberFormatter = function (_super) {\n    tslib_1.__extends(NumberFormatter, _super);\n    function NumberFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var format, language, rounding;\n        format = this.format;\n        language = this.language;\n        rounding = function () {\n            switch (this.rounding) {\n            case 'round':\n            case 'nearest':\n                return Math.round;\n            case 'floor':\n            case 'rounddown':\n                return Math.floor;\n            case 'ceil':\n            case 'roundup':\n                return Math.ceil;\n            }\n        }.call(this);\n        value = Numbro.format(value, format, language, rounding);\n        return _super.prototype.doFormat.call(this, row, cell, value, columnDef, dataContext);\n    };\n    return NumberFormatter;\n}(StringFormatter);\nexports.NumberFormatter = NumberFormatter;\n;\nNumberFormatter.prototype.type = 'NumberFormatter';\nNumberFormatter.define({\n    format: [\n        p.String,\n        '0,0'    // TODO (bev)\n    ],\n    language: [\n        p.String,\n        'en'    // TODO (bev)\n    ],\n    rounding: [\n        p.String,\n        'round'    // TODO (bev)\n    ]\n});\nvar BooleanFormatter = function (_super) {\n    tslib_1.__extends(BooleanFormatter, _super);\n    function BooleanFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BooleanFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (!!value) {\n            return dom_1.i({ class: this.icon }).outerHTML;\n        } else {\n            return '';\n        }\n    };\n    return BooleanFormatter;\n}(exports.CellFormatter);\nexports.BooleanFormatter = BooleanFormatter;\n;\nBooleanFormatter.prototype.type = 'BooleanFormatter';\nBooleanFormatter.define({\n    icon: [\n        p.String,\n        'check'\n    ]\n});\nvar DateFormatter = function (_super) {\n    tslib_1.__extends(DateFormatter, _super);\n    function DateFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateFormatter.prototype.getFormat = function () {\n        var fmt;\n        // using definitions provided here: https://api.jqueryui.com/datepicker/\n        // except not implementing TICKS\n        fmt = function () {\n            switch (this.format) {\n            case 'ATOM':\n            case 'W3C':\n            case 'RFC-3339':\n            case 'ISO-8601':\n                return '%Y-%m-%d';\n            case 'COOKIE':\n                return '%a, %d %b %Y';\n            case 'RFC-850':\n                return '%A, %d-%b-%y';\n            case 'RFC-1123':\n            case 'RFC-2822':\n                return '%a, %e %b %Y';\n            case 'RSS':\n            case 'RFC-822':\n            case 'RFC-1036':\n                return '%a, %e %b %y';\n            case 'TIMESTAMP':\n                return null;\n            default:\n                return '__CUSTOM__';\n            }\n        }.call(this);\n        if (fmt === '__CUSTOM__') {\n            return this.format;\n        } else {\n            return fmt;\n        }\n    };\n    DateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var date;\n        value = types_1.isString(value) ? parseInt(value, 10) : value;\n        date = tz(value, this.getFormat());\n        return _super.prototype.doFormat.call(this, row, cell, date, columnDef, dataContext);\n    };\n    return DateFormatter;\n}(exports.CellFormatter);\nexports.DateFormatter = DateFormatter;\n;\nDateFormatter.prototype.type = 'DateFormatter';\nDateFormatter.define({\n    format: [\n        p.String,\n        'ISO-8601'\n    ]\n});\nvar HTMLTemplateFormatter = function (_super) {\n    tslib_1.__extends(HTMLTemplateFormatter, _super);\n    function HTMLTemplateFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HTMLTemplateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var compiled_template, template;\n        template = this.template;\n        if (value === null) {\n            return '';\n        } else {\n            dataContext = object_1.extend({}, dataContext, { value: value });\n            compiled_template = compile_template(template);\n            return compiled_template(dataContext);\n        }\n    };\n    return HTMLTemplateFormatter;\n}(exports.CellFormatter);\nexports.HTMLTemplateFormatter = HTMLTemplateFormatter;\n;\nHTMLTemplateFormatter.prototype.type = 'HTMLTemplateFormatter';\nHTMLTemplateFormatter.define({\n    template: [\n        p.String,\n        '<%= value %>'\n    ]\n});    \n},\n407: /* models/widgets/tables/data_table */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar slickgrid_1 = require(419    /* slickgrid */);\nvar slick_rowselectionmodel_1 = require(417    /* slickgrid/plugins/slick.rowselectionmodel */);\nvar slick_checkboxselectcolumn_1 = require(416    /* slickgrid/plugins/slick.checkboxselectcolumn */);\nvar hittest = require(9    /* core/hittest */);\nvar p = require(15    /* core/properties */);\nvar string_1 = require(37    /* core/util/string */);\nvar array_1 = require(22    /* core/util/array */);\nvar logging_1 = require(14    /* core/logging */);\nvar table_widget_1 = require(411    /* ./table_widget */);\nvar widget_1 = require(412    /* ../widget */);\nexports.DTINDEX_NAME = '__bkdt_internal_index__';\nexports.DataProvider = function () {\n    function DataProvider(source, view) {\n        this.source = source;\n        this.view = view;\n        if (exports.DTINDEX_NAME in this.source.data) {\n            throw new Error('special name ' + exports.DTINDEX_NAME + ' cannot be used as a data table column');\n        }\n        this.index = this.view.indices;\n    }\n    DataProvider.prototype.getLength = function () {\n        return this.index.length;\n    };\n    DataProvider.prototype.getItem = function (offset) {\n        var field, item, j, len, ref;\n        item = {};\n        ref = Object.keys(this.source.data);\n        for (j = 0, len = ref.length; j < len; j++) {\n            field = ref[j];\n            item[field] = this.source.data[field][this.index[offset]];\n        }\n        item[exports.DTINDEX_NAME] = this.index[offset];\n        return item;\n    };\n    DataProvider.prototype.setItem = function (offset, item) {\n        var field, value;\n        for (field in item) {\n            value = item[field];\n            // internal index is maintained independently, ignore\n            if (field !== exports.DTINDEX_NAME) {\n                this.source.data[field][this.index[offset]] = value;\n            }\n        }\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getField = function (offset, field) {\n        if (field === exports.DTINDEX_NAME) {\n            return this.index[offset];\n        }\n        return this.source.data[field][this.index[offset]];\n    };\n    DataProvider.prototype.setField = function (offset, field, value) {\n        // field assumed never to be internal index name (ctor would throw)\n        this.source.data[field][this.index[offset]] = value;\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getItemMetadata = function (index) {\n        return null;\n    };\n    DataProvider.prototype.getRecords = function () {\n        var i;\n        return function () {\n            var j, ref, results;\n            results = [];\n            for (i = j = 0, ref = this.getLength(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(this.getItem(i));\n            }\n            return results;\n        }.call(this);\n    };\n    DataProvider.prototype.sort = function (columns) {\n        var cols, column, old_index, records;\n        cols = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = columns.length; j < len; j++) {\n                column = columns[j];\n                results.push([\n                    column.sortCol.field,\n                    column.sortAsc ? 1 : -1\n                ]);\n            }\n            return results;\n        }();\n        if (cols.length === 0) {\n            cols = [[\n                    exports.DTINDEX_NAME,\n                    1\n                ]];\n        }\n        records = this.getRecords();\n        old_index = this.index.slice();\n        // TODO (bev) this sort is unstable, which is not great\n        return this.index.sort(function (i1, i2) {\n            var field, j, len, result, sign, value1, value2;\n            for (j = 0, len = cols.length; j < len; j++) {\n                _a = cols[j], field = _a[0], sign = _a[1];\n                value1 = records[old_index.indexOf(i1)][field];\n                value2 = records[old_index.indexOf(i2)][field];\n                result = value1 === value2 ? 0 : value1 > value2 ? sign : -sign;\n                if (result !== 0) {\n                    return result;\n                }\n            }\n            return 0;\n            var _a;\n        });\n    };\n    DataProvider.prototype._update_source_inplace = function () {\n        this.source.properties.data.change.emit(this, this.source.attributes['data']);\n    };\n    return DataProvider;\n}();\nvar DataTableView = function (_super) {\n    tslib_1.__extends(DataTableView, _super);\n    function DataTableView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataTableView.prototype.initialize = function (options) {\n        _super.prototype.initialize.call(this, options);\n        return this.in_selection_update = false;\n    };\n    DataTableView.prototype.connect_signals = function () {\n        var _this = this;\n        _super.prototype.connect_signals.call(this);\n        this.connect(this.model.change, function () {\n            return _this.render();\n        });\n        this.connect(this.model.source.properties.data.change, function () {\n            return _this.updateGrid();\n        });\n        this.connect(this.model.source.streaming, function () {\n            return _this.updateGrid();\n        });\n        this.connect(this.model.source.patching, function () {\n            return _this.updateGrid();\n        });\n        return this.connect(this.model.source.change, function () {\n            return _this.updateSelection();\n        });\n    };\n    DataTableView.prototype.updateGrid = function () {\n        // TODO (bev) This is to enure that CDSView indices are properly computed\n        // before passing to the DataProvider. This will result in extra calls to\n        // compute_indices. This \"over execution\" will be addressed in a more\n        // general look at events\n        this.model.view.compute_indices();\n        this.data.constructor(this.model.source, this.model.view);\n        this.grid.invalidate();\n        this.grid.render();\n        // This is only needed to call @_tell_document_about_change()\n        this.model.source.data = this.model.source.data;\n        return this.model.source.change.emit();\n    };\n    DataTableView.prototype.updateSelection = function () {\n        var cur_grid_range, min_index, permuted_indices, selected, selected_indices, x;\n        if (this.in_selection_update) {\n            return;\n        }\n        selected = this.model.source.selected;\n        selected_indices = selected['1d'].indices;\n        permuted_indices = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = selected_indices.length; j < len; j++) {\n                x = selected_indices[j];\n                results.push(this.data.index.indexOf(x));\n            }\n            return results;\n        }.call(this);\n        this.in_selection_update = true;\n        this.grid.setSelectedRows(permuted_indices);\n        this.in_selection_update = false;\n        // If the selection is not in the current slickgrid viewport, scroll the\n        // datatable to start at the row before the first selected row, so that\n        // the selection is immediately brought into view. We don't scroll when\n        // the selection is already in the viewport so that selecting from the\n        // datatable itself does not re-scroll.\n        cur_grid_range = this.grid.getViewport();\n        if (this.model.scroll_to_selection && !array_1.any(permuted_indices, function (i) {\n                return cur_grid_range.top <= i && i <= cur_grid_range.bottom;\n            })) {\n            min_index = Math.max(0, Math.min.apply(null, permuted_indices) - 1);\n            return this.grid.scrollRowToTop(min_index);\n        }\n    };\n    DataTableView.prototype.newIndexColumn = function () {\n        return {\n            id: string_1.uniqueId(),\n            name: '#',\n            field: exports.DTINDEX_NAME,\n            width: 40,\n            behavior: 'select',\n            cannotTriggerInsert: true,\n            resizable: false,\n            selectable: false,\n            sortable: true,\n            cssClass: 'bk-cell-index'\n        };\n    };\n    DataTableView.prototype.render = function () {\n        var _this = this;\n        var checkboxSelector, column, columns, options, ref, reorderable;\n        columns = function () {\n            var j, len, ref, results;\n            ref = this.model.columns;\n            results = [];\n            for (j = 0, len = ref.length; j < len; j++) {\n                column = ref[j];\n                results.push(column.toColumn());\n            }\n            return results;\n        }.call(this);\n        if (this.model.selectable === 'checkbox') {\n            checkboxSelector = new slick_checkboxselectcolumn_1.CheckboxSelectColumn({ cssClass: 'bk-cell-select' });\n            columns.unshift(checkboxSelector.getColumnDefinition());\n        }\n        if (this.model.row_headers) {\n            columns.unshift(this.newIndexColumn());\n        }\n        reorderable = this.model.reorderable;\n        if (reorderable && (typeof $ !== 'undefined' && $ !== null ? (ref = $.fn) != null ? ref.sortable : void 0 : void 0) == null) {\n            if (this._warned_not_reorderable == null) {\n                logging_1.logger.warn('jquery-ui is required to enable DataTable.reorderable');\n                this._warned_not_reorderable = true;\n            }\n            reorderable = false;\n        }\n        options = {\n            enableCellNavigation: this.model.selectable !== false,\n            enableColumnReorder: reorderable,\n            forceFitColumns: this.model.fit_columns,\n            autoHeight: this.model.height === 'auto',\n            multiColumnSort: this.model.sortable,\n            editable: this.model.editable,\n            autoEdit: false\n        };\n        if (this.model.width != null) {\n            this.el.style.width = this.model.width + 'px';\n        } else {\n            this.el.style.width = this.model.default_width + 'px';\n        }\n        if (this.model.height != null && this.model.height !== 'auto') {\n            this.el.style.height = this.model.height + 'px';\n        }\n        this.data = new exports.DataProvider(this.model.source, this.model.view);\n        this.grid = new slickgrid_1.Grid(this.el, this.data, columns, options);\n        this.grid.onSort.subscribe(function (event, args) {\n            columns = args.sortCols;\n            _this.data.sort(columns);\n            _this.grid.invalidate();\n            _this.updateSelection();\n            return _this.grid.render();\n        });\n        if (this.model.selectable !== false) {\n            this.grid.setSelectionModel(new slick_rowselectionmodel_1.RowSelectionModel({ selectActiveRow: checkboxSelector == null }));\n            if (checkboxSelector != null) {\n                this.grid.registerPlugin(checkboxSelector);\n            }\n            this.grid.onSelectedRowsChanged.subscribe(function (event, args) {\n                var i, selected;\n                if (_this.in_selection_update) {\n                    return;\n                }\n                selected = hittest.create_hit_test_result();\n                selected['1d'].indices = function () {\n                    var j, len, ref1, results;\n                    ref1 = args.rows;\n                    results = [];\n                    for (j = 0, len = ref1.length; j < len; j++) {\n                        i = ref1[j];\n                        results.push(this.data.index[i]);\n                    }\n                    return results;\n                }.call(_this);\n                return _this.model.source.selected = selected;\n            });\n            this.updateSelection();\n        }\n        return this;\n    };\n    return DataTableView;\n}(widget_1.WidgetView);\nexports.DataTableView = DataTableView;\n;\nDataTableView.prototype.className = 'bk-data-table';\nvar DataTable = function (_super) {\n    tslib_1.__extends(DataTable, _super);\n    function DataTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DataTable;\n}(table_widget_1.TableWidget);\nexports.DataTable = DataTable;\n;\nDataTable.prototype.type = 'DataTable';\nDataTable.prototype.default_view = DataTableView;\nDataTable.define({\n    columns: [\n        p.Array,\n        []\n    ],\n    fit_columns: [\n        p.Bool,\n        true\n    ],\n    sortable: [\n        p.Bool,\n        true\n    ],\n    reorderable: [\n        p.Bool,\n        true\n    ],\n    editable: [\n        p.Bool,\n        false\n    ],\n    selectable: [\n        p.Bool,\n        true\n    ],\n    row_headers: [\n        p.Bool,\n        true\n    ],\n    scroll_to_selection: [\n        p.Bool,\n        true\n    ]\n});\nDataTable.override({ height: 400 });\nDataTable.internal({\n    default_width: [\n        p.Number,\n        600\n    ]\n});    \n},\n408: /* models/widgets/tables/index */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\ntslib_1.__exportStar(require(405    /* ./cell_editors */), exports);\ntslib_1.__exportStar(require(406    /* ./cell_formatters */), exports);\nvar data_table_1 = require(407    /* ./data_table */);\nexports.DataTable = data_table_1.DataTable;\nvar table_column_1 = require(410    /* ./table_column */);\nexports.TableColumn = table_column_1.TableColumn;\nvar table_widget_1 = require(411    /* ./table_widget */);\nexports.TableWidget = table_widget_1.TableWidget;    \n},\n409: /* models/widgets/tables/main */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar Tables = require(408    /* ./index */);\nexports.Tables = Tables;\nvar base_1 = require(0    /* ../../../base */);\nbase_1.register_models(Tables);    \n},\n410: /* models/widgets/tables/table_column */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar cell_formatters_1 = require(406    /* ./cell_formatters */);\nvar cell_editors_1 = require(405    /* ./cell_editors */);\nvar p = require(15    /* core/properties */);\nvar string_1 = require(37    /* core/util/string */);\nvar model_1 = require(50    /* ../../../model */);\nvar TableColumn = function (_super) {\n    tslib_1.__extends(TableColumn, _super);\n    function TableColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TableColumn.prototype.toColumn = function () {\n        var ref;\n        return {\n            id: string_1.uniqueId(),\n            field: this.field,\n            name: this.title,\n            width: this.width,\n            formatter: (ref = this.formatter) != null ? ref.doFormat.bind(this.formatter) : void 0,\n            editor: this.editor.default_view,\n            sortable: this.sortable,\n            defaultSortAsc: this.default_sort === 'ascending'\n        };\n    };\n    return TableColumn;\n}(model_1.Model);\nexports.TableColumn = TableColumn;\n;\nTableColumn.prototype.type = 'TableColumn';\nTableColumn.prototype.default_view = null;\nTableColumn.define({\n    field: [p.String],\n    title: [p.String],\n    width: [\n        p.Number,\n        300\n    ],\n    formatter: [\n        p.Instance,\n        function () {\n            return new cell_formatters_1.StringFormatter();\n        }\n    ],\n    editor: [\n        p.Instance,\n        function () {\n            return new cell_editors_1.StringEditor();\n        }\n    ],\n    sortable: [\n        p.Bool,\n        true\n    ],\n    default_sort: [\n        p.String,\n        'ascending'\n    ]\n});    \n},\n411: /* models/widgets/tables/table_widget */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar widget_1 = require(412    /* ../widget */);\nvar cds_view_1 = require(172    /* ../../sources/cds_view */);\nvar p = require(15    /* core/properties */);\nvar TableWidget = function (_super) {\n    tslib_1.__extends(TableWidget, _super);\n    function TableWidget() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TableWidget.prototype.initialize = function (options) {\n        _super.prototype.initialize.call(this, options);\n        if (this.view.source == null) {\n            this.view.source = this.source;\n            return this.view.compute_indices();\n        }\n    };\n    return TableWidget;\n}(widget_1.Widget);\nexports.TableWidget = TableWidget;\n;\nTableWidget.prototype.type = 'TableWidget';\nTableWidget.define({\n    source: [p.Instance],\n    view: [\n        p.Instance,\n        function () {\n            return new cds_view_1.CDSView();\n        }\n    ]\n});    \n},\n412: /* models/widgets/widget */ function(require, module, exports) {\n'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar layout_dom_1 = require(139    /* ../layouts/layout_dom */);\nvar WidgetView = function (_super) {\n    tslib_1.__extends(WidgetView, _super);\n    function WidgetView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WidgetView.prototype.render = function () {\n        this._render_classes();\n        // XXX: because no super()\n        // LayoutDOMView sets up lots of helpful things, but\n        // it's render method is not suitable for widgets - who\n        // should provide their own.\n        if (this.model.height != null) {\n            this.el.style.height = this.model.height + 'px';\n        }\n        if (this.model.width != null) {\n            return this.el.style.width = this.model.width + 'px';\n        }\n    };\n    return WidgetView;\n}(layout_dom_1.LayoutDOMView);\nexports.WidgetView = WidgetView;\n;\nWidgetView.prototype.className = 'bk-widget';\nvar Widget = function (_super) {\n    tslib_1.__extends(Widget, _super);\n    function Widget() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Widget;\n}(layout_dom_1.LayoutDOM);\nexports.Widget = Widget;\n;\nWidget.prototype.type = 'Widget';\nWidget.prototype.default_view = WidgetView;    \n},\n413: /* jquery/dist/jquery */ function(require, module, exports) {\n/*!\n * jQuery JavaScript Library v3.2.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2017-03-20T18:59Z\n */\n(function (global, factory) {\n    'use strict';\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // For CommonJS and CommonJS-like environments where a proper `window`\n        // is present, execute the factory and get jQuery.\n        // For environments that do not have a `window` with a `document`\n        // (such as Node.js), expose a factory as module.exports.\n        // This accentuates the need for the creation of a real `window`.\n        // e.g. var jQuery = require(\"jquery\")(window);\n        // See ticket #14549 for more info.\n        module.exports = global.document ? factory(global, true) : function (w) {\n            if (!w.document) {\n                throw new Error('jQuery requires a window with a document');\n            }\n            return factory(w);\n        };\n    } else {\n        factory(global);\n    }    // Pass this if window is not defined yet\n}(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n    // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n    // enough that all such attempts are guarded in a try block.\n    'use strict';\n    var arr = [];\n    var document = window.document;\n    var getProto = Object.getPrototypeOf;\n    var slice = arr.slice;\n    var concat = arr.concat;\n    var push = arr.push;\n    var indexOf = arr.indexOf;\n    var class2type = {};\n    var toString = class2type.toString;\n    var hasOwn = class2type.hasOwnProperty;\n    var fnToString = hasOwn.toString;\n    var ObjectFunctionString = fnToString.call(Object);\n    var support = {};\n    function DOMEval(code, doc) {\n        doc = doc || document;\n        var script = doc.createElement('script');\n        script.text = code;\n        doc.head.appendChild(script).parentNode.removeChild(script);\n    }\n    /* global Symbol */\n    // Defining this global in .eslintrc.json would create a danger of using the global\n    // unguarded in another place, it seems safer to define global only for this module\n    var version = '3.2.1',\n        // Define a local copy of jQuery\n        jQuery = function (selector, context) {\n            // The jQuery object is actually just the init constructor 'enhanced'\n            // Need init if jQuery is called (just allow error to be thrown if not included)\n            return new jQuery.fn.init(selector, context);\n        },\n        // Support: Android <=4.0 only\n        // Make sure we trim BOM and NBSP\n        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n        // Matches dashed string for camelizing\n        rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g,\n        // Used by jQuery.camelCase as callback to replace()\n        fcamelCase = function (all, letter) {\n            return letter.toUpperCase();\n        };\n    jQuery.fn = jQuery.prototype = {\n        // The current version of jQuery being used\n        jquery: version,\n        constructor: jQuery,\n        // The default length of a jQuery object is 0\n        length: 0,\n        toArray: function () {\n            return slice.call(this);\n        },\n        // Get the Nth element in the matched element set OR\n        // Get the whole matched element set as a clean array\n        get: function (num) {\n            // Return all the elements in a clean array\n            if (num == null) {\n                return slice.call(this);\n            }\n            // Return just the one element from the set\n            return num < 0 ? this[num + this.length] : this[num];\n        },\n        // Take an array of elements and push it onto the stack\n        // (returning the new matched element set)\n        pushStack: function (elems) {\n            // Build a new jQuery matched element set\n            var ret = jQuery.merge(this.constructor(), elems);\n            // Add the old object onto the stack (as a reference)\n            ret.prevObject = this;\n            // Return the newly-formed element set\n            return ret;\n        },\n        // Execute a callback for every element in the matched set.\n        each: function (callback) {\n            return jQuery.each(this, callback);\n        },\n        map: function (callback) {\n            return this.pushStack(jQuery.map(this, function (elem, i) {\n                return callback.call(elem, i, elem);\n            }));\n        },\n        slice: function () {\n            return this.pushStack(slice.apply(this, arguments));\n        },\n        first: function () {\n            return this.eq(0);\n        },\n        last: function () {\n            return this.eq(-1);\n        },\n        eq: function (i) {\n            var len = this.length, j = +i + (i < 0 ? len : 0);\n            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n        },\n        end: function () {\n            return this.prevObject || this.constructor();\n        },\n        // For internal use only.\n        // Behaves like an Array's method, not like a jQuery method.\n        push: push,\n        sort: arr.sort,\n        splice: arr.splice\n    };\n    jQuery.extend = jQuery.fn.extend = function () {\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === 'boolean') {\n            deep = target;\n            // Skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== 'object' && !jQuery.isFunction(target)) {\n            target = {};\n        }\n        // Extend jQuery itself if only one argument is passed\n        if (i === length) {\n            target = this;\n            i--;\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) != null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && Array.isArray(src) ? src : [];\n                        } else {\n                            clone = src && jQuery.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = jQuery.extend(deep, clone, copy);    // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    jQuery.extend({\n        // Unique for each copy of jQuery on the page\n        expando: 'jQuery' + (version + Math.random()).replace(/\\D/g, ''),\n        // Assume jQuery is ready without the ready module\n        isReady: true,\n        error: function (msg) {\n            throw new Error(msg);\n        },\n        noop: function () {\n        },\n        isFunction: function (obj) {\n            return jQuery.type(obj) === 'function';\n        },\n        isWindow: function (obj) {\n            return obj != null && obj === obj.window;\n        },\n        isNumeric: function (obj) {\n            // As of jQuery 3.0, isNumeric is limited to\n            // strings and numbers (primitives or objects)\n            // that can be coerced to finite numbers (gh-2662)\n            var type = jQuery.type(obj);\n            return (type === 'number' || type === 'string') && // parseFloat NaNs numeric-cast false positives (\"\")\n            // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n            // subtraction forces infinities to NaN\n            !isNaN(obj - parseFloat(obj));\n        },\n        isPlainObject: function (obj) {\n            var proto, Ctor;\n            // Detect obvious negatives\n            // Use toString instead of jQuery.type to catch host objects\n            if (!obj || toString.call(obj) !== '[object Object]') {\n                return false;\n            }\n            proto = getProto(obj);\n            // Objects with no prototype (e.g., `Object.create( null )`) are plain\n            if (!proto) {\n                return true;\n            }\n            // Objects with prototype are plain iff they were constructed by a global Object function\n            Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n            return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;\n        },\n        isEmptyObject: function (obj) {\n            /* eslint-disable no-unused-vars */\n            // See https://github.com/eslint/eslint/issues/6125\n            var name;\n            for (name in obj) {\n                return false;\n            }\n            return true;\n        },\n        type: function (obj) {\n            if (obj == null) {\n                return obj + '';\n            }\n            // Support: Android <=2.3 only (functionish RegExp)\n            return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;\n        },\n        // Evaluates a script in a global context\n        globalEval: function (code) {\n            DOMEval(code);\n        },\n        // Convert dashed to camelCase; used by the css and data modules\n        // Support: IE <=9 - 11, Edge 12 - 13\n        // Microsoft forgot to hump their vendor prefix (#9572)\n        camelCase: function (string) {\n            return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);\n        },\n        each: function (obj, callback) {\n            var length, i = 0;\n            if (isArrayLike(obj)) {\n                length = obj.length;\n                for (; i < length; i++) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            } else {\n                for (i in obj) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            }\n            return obj;\n        },\n        // Support: Android <=4.0 only\n        trim: function (text) {\n            return text == null ? '' : (text + '').replace(rtrim, '');\n        },\n        // results is for internal usage only\n        makeArray: function (arr, results) {\n            var ret = results || [];\n            if (arr != null) {\n                if (isArrayLike(Object(arr))) {\n                    jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);\n                } else {\n                    push.call(ret, arr);\n                }\n            }\n            return ret;\n        },\n        inArray: function (elem, arr, i) {\n            return arr == null ? -1 : indexOf.call(arr, elem, i);\n        },\n        // Support: Android <=4.0 only, PhantomJS 1 only\n        // push.apply(_, arraylike) throws on ancient WebKit\n        merge: function (first, second) {\n            var len = +second.length, j = 0, i = first.length;\n            for (; j < len; j++) {\n                first[i++] = second[j];\n            }\n            first.length = i;\n            return first;\n        },\n        grep: function (elems, callback, invert) {\n            var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;\n            // Go through the array, only saving the items\n            // that pass the validator function\n            for (; i < length; i++) {\n                callbackInverse = !callback(elems[i], i);\n                if (callbackInverse !== callbackExpect) {\n                    matches.push(elems[i]);\n                }\n            }\n            return matches;\n        },\n        // arg is for internal usage only\n        map: function (elems, callback, arg) {\n            var length, value, i = 0, ret = [];\n            // Go through the array, translating each of the items to their new values\n            if (isArrayLike(elems)) {\n                length = elems.length;\n                for (; i < length; i++) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }    // Go through every key on the object,\n            } else {\n                for (i in elems) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }\n            }\n            // Flatten any nested arrays\n            return concat.apply([], ret);\n        },\n        // A global GUID counter for objects\n        guid: 1,\n        // Bind a function to a context, optionally partially applying any\n        // arguments.\n        proxy: function (fn, context) {\n            var tmp, args, proxy;\n            if (typeof context === 'string') {\n                tmp = fn[context];\n                context = fn;\n                fn = tmp;\n            }\n            // Quick check to determine if target is callable, in the spec\n            // this throws a TypeError, but we will just return undefined.\n            if (!jQuery.isFunction(fn)) {\n                return undefined;\n            }\n            // Simulated bind\n            args = slice.call(arguments, 2);\n            proxy = function () {\n                return fn.apply(context || this, args.concat(slice.call(arguments)));\n            };\n            // Set the guid of unique handler to the same of original handler, so it can be removed\n            proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n            return proxy;\n        },\n        now: Date.now,\n        // jQuery.support is not used in Core but other projects attach their\n        // properties to it so it needs to exist.\n        support: support\n    });\n    if (typeof Symbol === 'function') {\n        jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n    }\n    // Populate the class2type map\n    jQuery.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), function (i, name) {\n        class2type['[object ' + name + ']'] = name.toLowerCase();\n    });\n    function isArrayLike(obj) {\n        // Support: real iOS 8.2 only (not reproducible in simulator)\n        // `in` check used to prevent JIT error (gh-2145)\n        // hasOwn isn't used here due to false negatives\n        // regarding Nodelist length in IE\n        var length = !!obj && 'length' in obj && obj.length, type = jQuery.type(obj);\n        if (type === 'function' || jQuery.isWindow(obj)) {\n            return false;\n        }\n        return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;\n    }\n    var Sizzle = /*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n    function (window) {\n        var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate,\n            // Local document vars\n            setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains,\n            // Instance-specific data\n            expando = 'sizzle' + 1 * new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = function (a, b) {\n                if (a === b) {\n                    hasDuplicate = true;\n                }\n                return 0;\n            },\n            // Instance methods\n            hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice,\n            // Use a stripped-down indexOf as it's faster than native\n            // https://jsperf.com/thor-indexof-vs-for/5\n            indexOf = function (list, elem) {\n                var i = 0, len = list.length;\n                for (; i < len; i++) {\n                    if (list[i] === elem) {\n                        return i;\n                    }\n                }\n                return -1;\n            }, booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',\n            // Regular expressions\n            // http://www.w3.org/TR/css3-selectors/#whitespace\n            whitespace = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]',\n            // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n            identifier = '(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+',\n            // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n            attributes = '\\\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + // Operator (capture 2)\n            '*([*^$|!~]?=)' + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n            '*(?:\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\"|(' + identifier + '))|)' + whitespace + '*\\\\]', pseudos = ':(' + identifier + ')(?:\\\\((' + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n            // 1. quoted (capture 3; capture 4 or capture 5)\n            '(\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\")|' + // 2. simple (capture 6)\n            '((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|' + attributes + ')*)|' + // 3. anything else (capture 2)\n            '.*' + ')\\\\)|)',\n            // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n            rwhitespace = new RegExp(whitespace + '+', 'g'), rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)' + whitespace + '+$', 'g'), rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'), rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'), rattributeQuotes = new RegExp('=' + whitespace + '*([^\\\\]\\'\"]*?)' + whitespace + '*\\\\]', 'g'), rpseudo = new RegExp(pseudos), ridentifier = new RegExp('^' + identifier + '$'), matchExpr = {\n                'ID': new RegExp('^#(' + identifier + ')'),\n                'CLASS': new RegExp('^\\\\.(' + identifier + ')'),\n                'TAG': new RegExp('^(' + identifier + '|[*])'),\n                'ATTR': new RegExp('^' + attributes),\n                'PSEUDO': new RegExp('^' + pseudos),\n                'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(' + whitespace + '*(even|odd|(([+-]|)(\\\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\\\d+)|))' + whitespace + '*\\\\)|)', 'i'),\n                'bool': new RegExp('^(?:' + booleans + ')$', 'i'),\n                // For use in libraries implementing .is()\n                // We use this for POS matching in `select`\n                'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(' + whitespace + '*((?:-\\\\d)?\\\\d*)' + whitespace + '*\\\\)|)(?=[^-]|$)', 'i')\n            }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\\d$/i, rnative = /^[^{]+\\{\\s*\\[native \\w/,\n            // Easily-parseable/retrievable ID or TAG or CLASS selectors\n            rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/, rsibling = /[+~]/,\n            // CSS escapes\n            // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n            runescape = new RegExp('\\\\\\\\([\\\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'), funescape = function (_, escaped, escapedWhitespace) {\n                var high = '0x' + escaped - 65536;\n                // NaN means non-codepoint\n                // Support: Firefox<24\n                // Workaround erroneous numeric interpretation of +\"0x\"\n                return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n                String.fromCharCode(high + 65536) : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);\n            },\n            // CSS string/identifier serialization\n            // https://drafts.csswg.org/cssom/#common-serializing-idioms\n            rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g, fcssescape = function (ch, asCodePoint) {\n                if (asCodePoint) {\n                    // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n                    if (ch === '\\0') {\n                        return '\\uFFFD';\n                    }\n                    // Control characters and (dependent upon position) numbers get escaped as code points\n                    return ch.slice(0, -1) + '\\\\' + ch.charCodeAt(ch.length - 1).toString(16) + ' ';\n                }\n                // Other potentially-special ASCII characters get backslash-escaped\n                return '\\\\' + ch;\n            },\n            // Used for iframes\n            // See setDocument()\n            // Removing the function wrapper causes a \"Permission Denied\"\n            // error in IE\n            unloadHandler = function () {\n                setDocument();\n            }, disabledAncestor = addCombinator(function (elem) {\n                return elem.disabled === true && ('form' in elem || 'label' in elem);\n            }, {\n                dir: 'parentNode',\n                next: 'legend'\n            });\n        // Optimize for push.apply( _, NodeList )\n        try {\n            push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);\n            // Support: Android<4.0\n            // Detect silently failing push.apply\n            arr[preferredDoc.childNodes.length].nodeType;\n        } catch (e) {\n            push = {\n                apply: arr.length ? // Leverage slice if possible\n                function (target, els) {\n                    push_native.apply(target, slice.call(els));\n                } : // Support: IE<9\n                // Otherwise append directly\n                function (target, els) {\n                    var j = target.length, i = 0;\n                    // Can't trust NodeList.length\n                    while (target[j++] = els[i++]) {\n                    }\n                    target.length = j - 1;\n                }\n            };\n        }\n        function Sizzle(selector, context, results, seed) {\n            var m, i, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument,\n                // nodeType defaults to 9, since context defaults to document\n                nodeType = context ? context.nodeType : 9;\n            results = results || [];\n            // Return early from calls with invalid selector or context\n            if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n                return results;\n            }\n            // Try to shortcut find operations (as opposed to filters) in HTML documents\n            if (!seed) {\n                if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n                    setDocument(context);\n                }\n                context = context || document;\n                if (documentIsHTML) {\n                    // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n                    // (excepting DocumentFragment context, where the methods don't exist)\n                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n                        // ID selector\n                        if (m = match[1]) {\n                            // Document context\n                            if (nodeType === 9) {\n                                if (elem = context.getElementById(m)) {\n                                    // Support: IE, Opera, Webkit\n                                    // TODO: identify versions\n                                    // getElementById can match elements by name instead of ID\n                                    if (elem.id === m) {\n                                        results.push(elem);\n                                        return results;\n                                    }\n                                } else {\n                                    return results;\n                                }    // Element context\n                            } else {\n                                // Support: IE, Opera, Webkit\n                                // TODO: identify versions\n                                // getElementById can match elements by name instead of ID\n                                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                                    results.push(elem);\n                                    return results;\n                                }\n                            }    // Type selector\n                        } else if (match[2]) {\n                            push.apply(results, context.getElementsByTagName(selector));\n                            return results;    // Class selector\n                        } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n                            push.apply(results, context.getElementsByClassName(m));\n                            return results;\n                        }\n                    }\n                    // Take advantage of querySelectorAll\n                    if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n                        if (nodeType !== 1) {\n                            newContext = context;\n                            newSelector = selector;    // qSA looks outside Element context, which is not what we want\n                                                       // Thanks to Andrew Dupont for this workaround technique\n                                                       // Support: IE <=8\n                                                       // Exclude object elements\n                        } else if (context.nodeName.toLowerCase() !== 'object') {\n                            // Capture the context ID, setting it first if necessary\n                            if (nid = context.getAttribute('id')) {\n                                nid = nid.replace(rcssescape, fcssescape);\n                            } else {\n                                context.setAttribute('id', nid = expando);\n                            }\n                            // Prefix every selector in the list\n                            groups = tokenize(selector);\n                            i = groups.length;\n                            while (i--) {\n                                groups[i] = '#' + nid + ' ' + toSelector(groups[i]);\n                            }\n                            newSelector = groups.join(',');\n                            // Expand context for sibling selectors\n                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n                        }\n                        if (newSelector) {\n                            try {\n                                push.apply(results, newContext.querySelectorAll(newSelector));\n                                return results;\n                            } catch (qsaError) {\n                            } finally {\n                                if (nid === expando) {\n                                    context.removeAttribute('id');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // All others\n            return select(selector.replace(rtrim, '$1'), context, results, seed);\n        }\n        /**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\n        function createCache() {\n            var keys = [];\n            function cache(key, value) {\n                // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n                if (keys.push(key + ' ') > Expr.cacheLength) {\n                    // Only keep the most recent entries\n                    delete cache[keys.shift()];\n                }\n                return cache[key + ' '] = value;\n            }\n            return cache;\n        }\n        /**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\n        function markFunction(fn) {\n            fn[expando] = true;\n            return fn;\n        }\n        /**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\n        function assert(fn) {\n            var el = document.createElement('fieldset');\n            try {\n                return !!fn(el);\n            } catch (e) {\n                return false;\n            } finally {\n                // Remove from its parent by default\n                if (el.parentNode) {\n                    el.parentNode.removeChild(el);\n                }\n                // release memory in IE\n                el = null;\n            }\n        }\n        /**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\n        function addHandle(attrs, handler) {\n            var arr = attrs.split('|'), i = arr.length;\n            while (i--) {\n                Expr.attrHandle[arr[i]] = handler;\n            }\n        }\n        /**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\n        function siblingCheck(a, b) {\n            var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;\n            // Use IE sourceIndex if available on both nodes\n            if (diff) {\n                return diff;\n            }\n            // Check if b follows a\n            if (cur) {\n                while (cur = cur.nextSibling) {\n                    if (cur === b) {\n                        return -1;\n                    }\n                }\n            }\n            return a ? 1 : -1;\n        }\n        /**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\n        function createInputPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return name === 'input' && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\n        function createButtonPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return (name === 'input' || name === 'button') && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\n        function createDisabledPseudo(disabled) {\n            // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n            return function (elem) {\n                // Only certain elements can match :enabled or :disabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n                if ('form' in elem) {\n                    // Check for inherited disabledness on relevant non-disabled elements:\n                    // * listed form-associated elements in a disabled fieldset\n                    //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n                    // * option elements in a disabled optgroup\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n                    // All such elements have a \"form\" property.\n                    if (elem.parentNode && elem.disabled === false) {\n                        // Option elements defer to a parent optgroup if present\n                        if ('label' in elem) {\n                            if ('label' in elem.parentNode) {\n                                return elem.parentNode.disabled === disabled;\n                            } else {\n                                return elem.disabled === disabled;\n                            }\n                        }\n                        // Support: IE 6 - 11\n                        // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n                        return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n                        /* jshint -W018 */\n                        elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n                    }\n                    return elem.disabled === disabled;    // Try to winnow out elements that can't be disabled before trusting the disabled property.\n                                                          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n                                                          // even exist on them, let alone have a boolean value.\n                } else if ('label' in elem) {\n                    return elem.disabled === disabled;\n                }\n                // Remaining elements are neither :enabled nor :disabled\n                return false;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\n        function createPositionalPseudo(fn) {\n            return markFunction(function (argument) {\n                argument = +argument;\n                return markFunction(function (seed, matches) {\n                    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n                    // Match elements found at the specified indexes\n                    while (i--) {\n                        if (seed[j = matchIndexes[i]]) {\n                            seed[j] = !(matches[j] = seed[j]);\n                        }\n                    }\n                });\n            });\n        }\n        /**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\n        function testContext(context) {\n            return context && typeof context.getElementsByTagName !== 'undefined' && context;\n        }\n        // Expose support vars for convenience\n        support = Sizzle.support = {};\n        /**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\n        isXML = Sizzle.isXML = function (elem) {\n            // documentElement is verified for cases where it doesn't yet exist\n            // (such as loading iframes in IE - #4833)\n            var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n            return documentElement ? documentElement.nodeName !== 'HTML' : false;\n        };\n        /**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\n        setDocument = Sizzle.setDocument = function (node) {\n            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;\n            // Return early if doc is invalid or already selected\n            if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n                return document;\n            }\n            // Update global variables\n            document = doc;\n            docElem = document.documentElement;\n            documentIsHTML = !isXML(document);\n            // Support: IE 9-11, Edge\n            // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n            if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n                // Support: IE 11, Edge\n                if (subWindow.addEventListener) {\n                    subWindow.addEventListener('unload', unloadHandler, false);    // Support: IE 9 - 10 only\n                } else if (subWindow.attachEvent) {\n                    subWindow.attachEvent('onunload', unloadHandler);\n                }\n            }\n            /* Attributes\n\t---------------------------------------------------------------------- */\n            // Support: IE<8\n            // Verify that getAttribute really returns attributes and not properties\n            // (excepting IE8 booleans)\n            support.attributes = assert(function (el) {\n                el.className = 'i';\n                return !el.getAttribute('className');\n            });\n            /* getElement(s)By*\n\t---------------------------------------------------------------------- */\n            // Check if getElementsByTagName(\"*\") returns only elements\n            support.getElementsByTagName = assert(function (el) {\n                el.appendChild(document.createComment(''));\n                return !el.getElementsByTagName('*').length;\n            });\n            // Support: IE<9\n            support.getElementsByClassName = rnative.test(document.getElementsByClassName);\n            // Support: IE<10\n            // Check if getElementById returns elements by name\n            // The broken getElementById methods don't pick up programmatically-set names,\n            // so use a roundabout getElementsByName test\n            support.getById = assert(function (el) {\n                docElem.appendChild(el).id = expando;\n                return !document.getElementsByName || !document.getElementsByName(expando).length;\n            });\n            // ID filter and find\n            if (support.getById) {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        return elem.getAttribute('id') === attrId;\n                    };\n                };\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var elem = context.getElementById(id);\n                        return elem ? [elem] : [];\n                    }\n                };\n            } else {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');\n                        return node && node.value === attrId;\n                    };\n                };\n                // Support: IE 6 - 7 only\n                // getElementById is not reliable as a find shortcut\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var node, i, elems, elem = context.getElementById(id);\n                        if (elem) {\n                            // Verify the id attribute\n                            node = elem.getAttributeNode('id');\n                            if (node && node.value === id) {\n                                return [elem];\n                            }\n                            // Fall back on getElementsByName\n                            elems = context.getElementsByName(id);\n                            i = 0;\n                            while (elem = elems[i++]) {\n                                node = elem.getAttributeNode('id');\n                                if (node && node.value === id) {\n                                    return [elem];\n                                }\n                            }\n                        }\n                        return [];\n                    }\n                };\n            }\n            // Tag\n            Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {\n                if (typeof context.getElementsByTagName !== 'undefined') {\n                    return context.getElementsByTagName(tag);    // DocumentFragment nodes don't have gEBTN\n                } else if (support.qsa) {\n                    return context.querySelectorAll(tag);\n                }\n            } : function (tag, context) {\n                var elem, tmp = [], i = 0,\n                    // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n                    results = context.getElementsByTagName(tag);\n                // Filter out possible comments\n                if (tag === '*') {\n                    while (elem = results[i++]) {\n                        if (elem.nodeType === 1) {\n                            tmp.push(elem);\n                        }\n                    }\n                    return tmp;\n                }\n                return results;\n            };\n            // Class\n            Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {\n                if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {\n                    return context.getElementsByClassName(className);\n                }\n            };\n            /* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n            // QSA and matchesSelector support\n            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n            rbuggyMatches = [];\n            // qSa(:focus) reports false when true (Chrome 21)\n            // We allow this because of a bug in IE8/9 that throws an error\n            // whenever `document.activeElement` is accessed on an iframe\n            // So, we allow :focus to pass through QSA all the time to avoid the IE error\n            // See https://bugs.jquery.com/ticket/13378\n            rbuggyQSA = [];\n            if (support.qsa = rnative.test(document.querySelectorAll)) {\n                // Build QSA regex\n                // Regex strategy adopted from Diego Perini\n                assert(function (el) {\n                    // Select is set to empty string on purpose\n                    // This is to test IE's treatment of not explicitly\n                    // setting a boolean content attribute,\n                    // since its presence should be enough\n                    // https://bugs.jquery.com/ticket/12359\n                    docElem.appendChild(el).innerHTML = '<a id=\\'' + expando + '\\'></a>' + '<select id=\\'' + expando + '-\\r\\\\\\' msallowcapture=\\'\\'>' + '<option selected=\\'\\'></option></select>';\n                    // Support: IE8, Opera 11-12.16\n                    // Nothing should be selected when empty strings follow ^= or $= or *=\n                    // The test attribute must be unknown in Opera but \"safe\" for WinRT\n                    // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n                    if (el.querySelectorAll('[msallowcapture^=\\'\\']').length) {\n                        rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\\'\\'|\"\")');\n                    }\n                    // Support: IE8\n                    // Boolean attributes and \"value\" are not treated correctly\n                    if (!el.querySelectorAll('[selected]').length) {\n                        rbuggyQSA.push('\\\\[' + whitespace + '*(?:value|' + booleans + ')');\n                    }\n                    // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n                    if (!el.querySelectorAll('[id~=' + expando + '-]').length) {\n                        rbuggyQSA.push('~=');\n                    }\n                    // Webkit/Opera - :checked should return selected option elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    // IE8 throws error here and will not see later tests\n                    if (!el.querySelectorAll(':checked').length) {\n                        rbuggyQSA.push(':checked');\n                    }\n                    // Support: Safari 8+, iOS 8+\n                    // https://bugs.webkit.org/show_bug.cgi?id=136851\n                    // In-page `selector#id sibling-combinator selector` fails\n                    if (!el.querySelectorAll('a#' + expando + '+*').length) {\n                        rbuggyQSA.push('.#.+[+~]');\n                    }\n                });\n                assert(function (el) {\n                    el.innerHTML = '<a href=\\'\\' disabled=\\'disabled\\'></a>' + '<select disabled=\\'disabled\\'><option/></select>';\n                    // Support: Windows 8 Native Apps\n                    // The type and name attributes are restricted during .innerHTML assignment\n                    var input = document.createElement('input');\n                    input.setAttribute('type', 'hidden');\n                    el.appendChild(input).setAttribute('name', 'D');\n                    // Support: IE8\n                    // Enforce case-sensitivity of name attribute\n                    if (el.querySelectorAll('[name=d]').length) {\n                        rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');\n                    }\n                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n                    // IE8 throws error here and will not see later tests\n                    if (el.querySelectorAll(':enabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Support: IE9-11+\n                    // IE's :disabled selector does not pick up the children of disabled fieldsets\n                    docElem.appendChild(el).disabled = true;\n                    if (el.querySelectorAll(':disabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Opera 10-11 does not throw on post-comma invalid pseudos\n                    el.querySelectorAll('*,:x');\n                    rbuggyQSA.push(',.*:');\n                });\n            }\n            if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n                assert(function (el) {\n                    // Check to see if it's possible to do matchesSelector\n                    // on a disconnected node (IE 9)\n                    support.disconnectedMatch = matches.call(el, '*');\n                    // This should fail with an exception\n                    // Gecko does not error, returns false instead\n                    matches.call(el, '[s!=\\'\\']:x');\n                    rbuggyMatches.push('!=', pseudos);\n                });\n            }\n            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));\n            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));\n            /* Contains\n\t---------------------------------------------------------------------- */\n            hasCompare = rnative.test(docElem.compareDocumentPosition);\n            // Element contains another\n            // Purposefully self-exclusive\n            // As in, an element does not contain itself\n            contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;\n                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n            } : function (a, b) {\n                if (b) {\n                    while (b = b.parentNode) {\n                        if (b === a) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            };\n            /* Sorting\n\t---------------------------------------------------------------------- */\n            // Document order sorting\n            sortOrder = hasCompare ? function (a, b) {\n                // Flag for duplicate removal\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                // Sort on method existence if only one input has compareDocumentPosition\n                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n                if (compare) {\n                    return compare;\n                }\n                // Calculate position if both inputs belong to the same document\n                compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n                1;\n                // Disconnected nodes\n                if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n                    // Choose the first element that is related to our preferred document\n                    if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n                        return -1;\n                    }\n                    if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n                        return 1;\n                    }\n                    // Maintain original order\n                    return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n                }\n                return compare & 4 ? -1 : 1;\n            } : function (a, b) {\n                // Exit early if the nodes are identical\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];\n                // Parentless nodes are either documents or disconnected\n                if (!aup || !bup) {\n                    return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;    // If the nodes are siblings, we can do a quick check\n                } else if (aup === bup) {\n                    return siblingCheck(a, b);\n                }\n                // Otherwise we need full lists of their ancestors for comparison\n                cur = a;\n                while (cur = cur.parentNode) {\n                    ap.unshift(cur);\n                }\n                cur = b;\n                while (cur = cur.parentNode) {\n                    bp.unshift(cur);\n                }\n                // Walk down the tree looking for a discrepancy\n                while (ap[i] === bp[i]) {\n                    i++;\n                }\n                return i ? // Do a sibling check if the nodes have a common ancestor\n                siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n                ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n            };\n            return document;\n        };\n        Sizzle.matches = function (expr, elements) {\n            return Sizzle(expr, null, null, elements);\n        };\n        Sizzle.matchesSelector = function (elem, expr) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            // Make sure that attribute selectors are quoted\n            expr = expr.replace(rattributeQuotes, '=\\'$1\\']');\n            if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n                try {\n                    var ret = matches.call(elem, expr);\n                    // IE 9's matchesSelector returns false on disconnected nodes\n                    if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n                        // fragment in IE 9\n                        elem.document && elem.document.nodeType !== 11) {\n                        return ret;\n                    }\n                } catch (e) {\n                }\n            }\n            return Sizzle(expr, document, null, [elem]).length > 0;\n        };\n        Sizzle.contains = function (context, elem) {\n            // Set document vars if needed\n            if ((context.ownerDocument || context) !== document) {\n                setDocument(context);\n            }\n            return contains(context, elem);\n        };\n        Sizzle.attr = function (elem, name) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            var fn = Expr.attrHandle[name.toLowerCase()],\n                // Don't get fooled by Object.prototype properties (jQuery #13807)\n                val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n            return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        };\n        Sizzle.escape = function (sel) {\n            return (sel + '').replace(rcssescape, fcssescape);\n        };\n        Sizzle.error = function (msg) {\n            throw new Error('Syntax error, unrecognized expression: ' + msg);\n        };\n        /**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\n        Sizzle.uniqueSort = function (results) {\n            var elem, duplicates = [], j = 0, i = 0;\n            // Unless we *know* we can detect duplicates, assume their presence\n            hasDuplicate = !support.detectDuplicates;\n            sortInput = !support.sortStable && results.slice(0);\n            results.sort(sortOrder);\n            if (hasDuplicate) {\n                while (elem = results[i++]) {\n                    if (elem === results[i]) {\n                        j = duplicates.push(i);\n                    }\n                }\n                while (j--) {\n                    results.splice(duplicates[j], 1);\n                }\n            }\n            // Clear input after sorting to release objects\n            // See https://github.com/jquery/sizzle/pull/225\n            sortInput = null;\n            return results;\n        };\n        /**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\n        getText = Sizzle.getText = function (elem) {\n            var node, ret = '', i = 0, nodeType = elem.nodeType;\n            if (!nodeType) {\n                // If no nodeType, this is expected to be an array\n                while (node = elem[i++]) {\n                    // Do not traverse comment nodes\n                    ret += getText(node);\n                }\n            } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n                // Use textContent for elements\n                // innerText usage removed for consistency of new lines (jQuery #11153)\n                if (typeof elem.textContent === 'string') {\n                    return elem.textContent;\n                } else {\n                    // Traverse its children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        ret += getText(elem);\n                    }\n                }\n            } else if (nodeType === 3 || nodeType === 4) {\n                return elem.nodeValue;\n            }\n            // Do not include comment or processing instruction nodes\n            return ret;\n        };\n        Expr = Sizzle.selectors = {\n            // Can be adjusted by the user\n            cacheLength: 50,\n            createPseudo: markFunction,\n            match: matchExpr,\n            attrHandle: {},\n            find: {},\n            relative: {\n                '>': {\n                    dir: 'parentNode',\n                    first: true\n                },\n                ' ': { dir: 'parentNode' },\n                '+': {\n                    dir: 'previousSibling',\n                    first: true\n                },\n                '~': { dir: 'previousSibling' }\n            },\n            preFilter: {\n                'ATTR': function (match) {\n                    match[1] = match[1].replace(runescape, funescape);\n                    // Move the given value to match[3] whether quoted or unquoted\n                    match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);\n                    if (match[2] === '~=') {\n                        match[3] = ' ' + match[3] + ' ';\n                    }\n                    return match.slice(0, 4);\n                },\n                'CHILD': function (match) {\n                    /* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n                    match[1] = match[1].toLowerCase();\n                    if (match[1].slice(0, 3) === 'nth') {\n                        // nth-* requires argument\n                        if (!match[3]) {\n                            Sizzle.error(match[0]);\n                        }\n                        // numeric x and y parameters for Expr.filter.CHILD\n                        // remember that false/true cast respectively to 0/1\n                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));\n                        match[5] = +(match[7] + match[8] || match[3] === 'odd');    // other types prohibit arguments\n                    } else if (match[3]) {\n                        Sizzle.error(match[0]);\n                    }\n                    return match;\n                },\n                'PSEUDO': function (match) {\n                    var excess, unquoted = !match[6] && match[2];\n                    if (matchExpr['CHILD'].test(match[0])) {\n                        return null;\n                    }\n                    // Accept quoted arguments as-is\n                    if (match[3]) {\n                        match[2] = match[4] || match[5] || '';    // Strip excess characters from unquoted arguments\n                    } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {\n                        // excess is a negative index\n                        match[0] = match[0].slice(0, excess);\n                        match[2] = unquoted.slice(0, excess);\n                    }\n                    // Return only captures needed by the pseudo filter method (type and argument)\n                    return match.slice(0, 3);\n                }\n            },\n            filter: {\n                'TAG': function (nodeNameSelector) {\n                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n                    return nodeNameSelector === '*' ? function () {\n                        return true;\n                    } : function (elem) {\n                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n                    };\n                },\n                'CLASS': function (className) {\n                    var pattern = classCache[className + ' '];\n                    return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {\n                        return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');\n                    });\n                },\n                'ATTR': function (name, operator, check) {\n                    return function (elem) {\n                        var result = Sizzle.attr(elem, name);\n                        if (result == null) {\n                            return operator === '!=';\n                        }\n                        if (!operator) {\n                            return true;\n                        }\n                        result += '';\n                        return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;\n                    };\n                },\n                'CHILD': function (type, what, argument, first, last) {\n                    var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';\n                    return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n                    function (elem) {\n                        return !!elem.parentNode;\n                    } : function (elem, context, xml) {\n                        var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;\n                        if (parent) {\n                            // :(first|last|only)-(child|of-type)\n                            if (simple) {\n                                while (dir) {\n                                    node = elem;\n                                    while (node = node[dir]) {\n                                        if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                                            return false;\n                                        }\n                                    }\n                                    // Reverse direction for :only-* (if we haven't yet done so)\n                                    start = dir = type === 'only' && !start && 'nextSibling';\n                                }\n                                return true;\n                            }\n                            start = [forward ? parent.firstChild : parent.lastChild];\n                            // non-xml :nth-child(...) stores cache data on `parent`\n                            if (forward && useCache) {\n                                // Seek `elem` from a previously-cached index\n                                // ...in a gzip-friendly way\n                                node = parent;\n                                outerCache = node[expando] || (node[expando] = {});\n                                // Support: IE <9 only\n                                // Defend against cloned attroperties (jQuery gh-1709)\n                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                cache = uniqueCache[type] || [];\n                                nodeIndex = cache[0] === dirruns && cache[1];\n                                diff = nodeIndex && cache[2];\n                                node = nodeIndex && parent.childNodes[nodeIndex];\n                                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                    // When found, cache indexes on `parent` and break\n                                    if (node.nodeType === 1 && ++diff && node === elem) {\n                                        uniqueCache[type] = [\n                                            dirruns,\n                                            nodeIndex,\n                                            diff\n                                        ];\n                                        break;\n                                    }\n                                }\n                            } else {\n                                // Use previously-cached element index if available\n                                if (useCache) {\n                                    // ...in a gzip-friendly way\n                                    node = elem;\n                                    outerCache = node[expando] || (node[expando] = {});\n                                    // Support: IE <9 only\n                                    // Defend against cloned attroperties (jQuery gh-1709)\n                                    uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                    cache = uniqueCache[type] || [];\n                                    nodeIndex = cache[0] === dirruns && cache[1];\n                                    diff = nodeIndex;\n                                }\n                                // xml :nth-child(...)\n                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                                if (diff === false) {\n                                    // Use the same loop as above to seek `elem` from the start\n                                    while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                        if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                                            // Cache the index of each encountered element\n                                            if (useCache) {\n                                                outerCache = node[expando] || (node[expando] = {});\n                                                // Support: IE <9 only\n                                                // Defend against cloned attroperties (jQuery gh-1709)\n                                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                                uniqueCache[type] = [\n                                                    dirruns,\n                                                    diff\n                                                ];\n                                            }\n                                            if (node === elem) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            // Incorporate the offset, then check against cycle size\n                            diff -= last;\n                            return diff === first || diff % first === 0 && diff / first >= 0;\n                        }\n                    };\n                },\n                'PSEUDO': function (pseudo, argument) {\n                    // pseudo-class names are case-insensitive\n                    // http://www.w3.org/TR/selectors/#pseudo-classes\n                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n                    // Remember that setFilters inherits from pseudos\n                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);\n                    // The user may use createPseudo to indicate that\n                    // arguments are needed to create the filter function\n                    // just as Sizzle does\n                    if (fn[expando]) {\n                        return fn(argument);\n                    }\n                    // But maintain support for old signatures\n                    if (fn.length > 1) {\n                        args = [\n                            pseudo,\n                            pseudo,\n                            '',\n                            argument\n                        ];\n                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n                            var idx, matched = fn(seed, argument), i = matched.length;\n                            while (i--) {\n                                idx = indexOf(seed, matched[i]);\n                                seed[idx] = !(matches[idx] = matched[i]);\n                            }\n                        }) : function (elem) {\n                            return fn(elem, 0, args);\n                        };\n                    }\n                    return fn;\n                }\n            },\n            pseudos: {\n                // Potentially complex pseudos\n                'not': markFunction(function (selector) {\n                    // Trim the selector passed to compile\n                    // to avoid treating leading and trailing\n                    // spaces as combinators\n                    var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));\n                    return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n                        var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;\n                        // Match elements unmatched by `matcher`\n                        while (i--) {\n                            if (elem = unmatched[i]) {\n                                seed[i] = !(matches[i] = elem);\n                            }\n                        }\n                    }) : function (elem, context, xml) {\n                        input[0] = elem;\n                        matcher(input, null, xml, results);\n                        // Don't keep the element (issue #299)\n                        input[0] = null;\n                        return !results.pop();\n                    };\n                }),\n                'has': markFunction(function (selector) {\n                    return function (elem) {\n                        return Sizzle(selector, elem).length > 0;\n                    };\n                }),\n                'contains': markFunction(function (text) {\n                    text = text.replace(runescape, funescape);\n                    return function (elem) {\n                        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n                    };\n                }),\n                // \"Whether an element is represented by a :lang() selector\n                // is based solely on the element's language value\n                // being equal to the identifier C,\n                // or beginning with the identifier C immediately followed by \"-\".\n                // The matching of C against the element's language value is performed case-insensitively.\n                // The identifier C does not have to be a valid language name.\"\n                // http://www.w3.org/TR/selectors/#lang-pseudo\n                'lang': markFunction(function (lang) {\n                    // lang value must be a valid identifier\n                    if (!ridentifier.test(lang || '')) {\n                        Sizzle.error('unsupported lang: ' + lang);\n                    }\n                    lang = lang.replace(runescape, funescape).toLowerCase();\n                    return function (elem) {\n                        var elemLang;\n                        do {\n                            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {\n                                elemLang = elemLang.toLowerCase();\n                                return elemLang === lang || elemLang.indexOf(lang + '-') === 0;\n                            }\n                        } while ((elem = elem.parentNode) && elem.nodeType === 1);\n                        return false;\n                    };\n                }),\n                // Miscellaneous\n                'target': function (elem) {\n                    var hash = window.location && window.location.hash;\n                    return hash && hash.slice(1) === elem.id;\n                },\n                'root': function (elem) {\n                    return elem === docElem;\n                },\n                'focus': function (elem) {\n                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n                },\n                // Boolean properties\n                'enabled': createDisabledPseudo(false),\n                'disabled': createDisabledPseudo(true),\n                'checked': function (elem) {\n                    // In CSS3, :checked should return both checked and selected elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    var nodeName = elem.nodeName.toLowerCase();\n                    return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;\n                },\n                'selected': function (elem) {\n                    // Accessing this property makes selected-by-default\n                    // options in Safari work properly\n                    if (elem.parentNode) {\n                        elem.parentNode.selectedIndex;\n                    }\n                    return elem.selected === true;\n                },\n                // Contents\n                'empty': function (elem) {\n                    // http://www.w3.org/TR/selectors/#empty-pseudo\n                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n                    //   but not by others (comment: 8; processing instruction: 7; etc.)\n                    // nodeType < 6 works because attributes (2) do not appear as children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        if (elem.nodeType < 6) {\n                            return false;\n                        }\n                    }\n                    return true;\n                },\n                'parent': function (elem) {\n                    return !Expr.pseudos['empty'](elem);\n                },\n                // Element/input types\n                'header': function (elem) {\n                    return rheader.test(elem.nodeName);\n                },\n                'input': function (elem) {\n                    return rinputs.test(elem.nodeName);\n                },\n                'button': function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return name === 'input' && elem.type === 'button' || name === 'button';\n                },\n                'text': function (elem) {\n                    var attr;\n                    return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');\n                },\n                // Position-in-collection\n                'first': createPositionalPseudo(function () {\n                    return [0];\n                }),\n                'last': createPositionalPseudo(function (matchIndexes, length) {\n                    return [length - 1];\n                }),\n                'eq': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    return [argument < 0 ? argument + length : argument];\n                }),\n                'even': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 0;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'odd': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 1;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'lt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; --i >= 0;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'gt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; ++i < length;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                })\n            }\n        };\n        Expr.pseudos['nth'] = Expr.pseudos['eq'];\n        // Add button/input type pseudos\n        for (i in {\n                radio: true,\n                checkbox: true,\n                file: true,\n                password: true,\n                image: true\n            }) {\n            Expr.pseudos[i] = createInputPseudo(i);\n        }\n        for (i in {\n                submit: true,\n                reset: true\n            }) {\n            Expr.pseudos[i] = createButtonPseudo(i);\n        }\n        // Easy API for creating new setFilters\n        function setFilters() {\n        }\n        setFilters.prototype = Expr.filters = Expr.pseudos;\n        Expr.setFilters = new setFilters();\n        tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];\n            if (cached) {\n                return parseOnly ? 0 : cached.slice(0);\n            }\n            soFar = selector;\n            groups = [];\n            preFilters = Expr.preFilter;\n            while (soFar) {\n                // Comma and first run\n                if (!matched || (match = rcomma.exec(soFar))) {\n                    if (match) {\n                        // Don't consume trailing commas as valid\n                        soFar = soFar.slice(match[0].length) || soFar;\n                    }\n                    groups.push(tokens = []);\n                }\n                matched = false;\n                // Combinators\n                if (match = rcombinators.exec(soFar)) {\n                    matched = match.shift();\n                    tokens.push({\n                        value: matched,\n                        // Cast descendant combinators to space\n                        type: match[0].replace(rtrim, ' ')\n                    });\n                    soFar = soFar.slice(matched.length);\n                }\n                // Filters\n                for (type in Expr.filter) {\n                    if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n                        matched = match.shift();\n                        tokens.push({\n                            value: matched,\n                            type: type,\n                            matches: match\n                        });\n                        soFar = soFar.slice(matched.length);\n                    }\n                }\n                if (!matched) {\n                    break;\n                }\n            }\n            // Return the length of the invalid excess\n            // if we're just parsing\n            // Otherwise, throw an error or return tokens\n            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n            tokenCache(selector, groups).slice(0);\n        };\n        function toSelector(tokens) {\n            var i = 0, len = tokens.length, selector = '';\n            for (; i < len; i++) {\n                selector += tokens[i].value;\n            }\n            return selector;\n        }\n        function addCombinator(matcher, combinator, base) {\n            var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === 'parentNode', doneName = done++;\n            return combinator.first ? // Check against closest ancestor/preceding element\n            function (elem, context, xml) {\n                while (elem = elem[dir]) {\n                    if (elem.nodeType === 1 || checkNonElements) {\n                        return matcher(elem, context, xml);\n                    }\n                }\n                return false;\n            } : // Check against all ancestor/preceding elements\n            function (elem, context, xml) {\n                var oldCache, uniqueCache, outerCache, newCache = [\n                        dirruns,\n                        doneName\n                    ];\n                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n                if (xml) {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            if (matcher(elem, context, xml)) {\n                                return true;\n                            }\n                        }\n                    }\n                } else {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            outerCache = elem[expando] || (elem[expando] = {});\n                            // Support: IE <9 only\n                            // Defend against cloned attroperties (jQuery gh-1709)\n                            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n                            if (skip && skip === elem.nodeName.toLowerCase()) {\n                                elem = elem[dir] || elem;\n                            } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                                // Assign to newCache so results back-propagate to previous elements\n                                return newCache[2] = oldCache[2];\n                            } else {\n                                // Reuse newcache so results back-propagate to previous elements\n                                uniqueCache[key] = newCache;\n                                // A match means we're done; a fail means we have to keep checking\n                                if (newCache[2] = matcher(elem, context, xml)) {\n                                    return true;\n                                }\n                            }\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        function elementMatcher(matchers) {\n            return matchers.length > 1 ? function (elem, context, xml) {\n                var i = matchers.length;\n                while (i--) {\n                    if (!matchers[i](elem, context, xml)) {\n                        return false;\n                    }\n                }\n                return true;\n            } : matchers[0];\n        }\n        function multipleContexts(selector, contexts, results) {\n            var i = 0, len = contexts.length;\n            for (; i < len; i++) {\n                Sizzle(selector, contexts[i], results);\n            }\n            return results;\n        }\n        function condense(unmatched, map, filter, context, xml) {\n            var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;\n            for (; i < len; i++) {\n                if (elem = unmatched[i]) {\n                    if (!filter || filter(elem, context, xml)) {\n                        newUnmatched.push(elem);\n                        if (mapped) {\n                            map.push(i);\n                        }\n                    }\n                }\n            }\n            return newUnmatched;\n        }\n        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n            if (postFilter && !postFilter[expando]) {\n                postFilter = setMatcher(postFilter);\n            }\n            if (postFinder && !postFinder[expando]) {\n                postFinder = setMatcher(postFinder, postSelector);\n            }\n            return markFunction(function (seed, results, context, xml) {\n                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length,\n                    // Get initial elements from seed or context\n                    elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []),\n                    // Prefilter to get matcher input, preserving a map for seed-results synchronization\n                    matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n                    postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n                    [] : // ...otherwise use results directly\n                    results : matcherIn;\n                // Find primary matches\n                if (matcher) {\n                    matcher(matcherIn, matcherOut, context, xml);\n                }\n                // Apply postFilter\n                if (postFilter) {\n                    temp = condense(matcherOut, postMap);\n                    postFilter(temp, [], context, xml);\n                    // Un-match failing elements by moving them back to matcherIn\n                    i = temp.length;\n                    while (i--) {\n                        if (elem = temp[i]) {\n                            matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n                        }\n                    }\n                }\n                if (seed) {\n                    if (postFinder || preFilter) {\n                        if (postFinder) {\n                            // Get the final matcherOut by condensing this intermediate into postFinder contexts\n                            temp = [];\n                            i = matcherOut.length;\n                            while (i--) {\n                                if (elem = matcherOut[i]) {\n                                    // Restore matcherIn since elem is not yet a final match\n                                    temp.push(matcherIn[i] = elem);\n                                }\n                            }\n                            postFinder(null, matcherOut = [], temp, xml);\n                        }\n                        // Move matched elements from seed to results to keep them synchronized\n                        i = matcherOut.length;\n                        while (i--) {\n                            if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                                seed[temp] = !(results[temp] = elem);\n                            }\n                        }\n                    }    // Add elements to results, through postFinder if defined\n                } else {\n                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n                    if (postFinder) {\n                        postFinder(null, results, matcherOut, xml);\n                    } else {\n                        push.apply(results, matcherOut);\n                    }\n                }\n            });\n        }\n        function matcherFromTokens(tokens) {\n            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0,\n                // The foundational matcher ensures that elements are reachable from top-level context(s)\n                matchContext = addCombinator(function (elem) {\n                    return elem === checkContext;\n                }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {\n                    return indexOf(checkContext, elem) > -1;\n                }, implicitRelative, true), matchers = [function (elem, context, xml) {\n                        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n                        // Avoid hanging onto element (issue #299)\n                        checkContext = null;\n                        return ret;\n                    }];\n            for (; i < len; i++) {\n                if (matcher = Expr.relative[tokens[i].type]) {\n                    matchers = [addCombinator(elementMatcher(matchers), matcher)];\n                } else {\n                    matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n                    // Return special upon seeing a positional matcher\n                    if (matcher[expando]) {\n                        // Find the next relative operator (if any) for proper handling\n                        j = ++i;\n                        for (; j < len; j++) {\n                            if (Expr.relative[tokens[j].type]) {\n                                break;\n                            }\n                        }\n                        return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n                        tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n                    }\n                    matchers.push(matcher);\n                }\n            }\n            return elementMatcher(matchers);\n        }\n        function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, outermost) {\n                    var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext,\n                        // We must always have either seed elements or outermost context\n                        elems = seed || byElement && Expr.find['TAG']('*', outermost),\n                        // Use integer dirruns iff this is the outermost matcher\n                        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;\n                    if (outermost) {\n                        outermostContext = context === document || context || outermost;\n                    }\n                    // Add elements passing elementMatchers directly to results\n                    // Support: IE<9, Safari\n                    // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n                    for (; i !== len && (elem = elems[i]) != null; i++) {\n                        if (byElement && elem) {\n                            j = 0;\n                            if (!context && elem.ownerDocument !== document) {\n                                setDocument(elem);\n                                xml = !documentIsHTML;\n                            }\n                            while (matcher = elementMatchers[j++]) {\n                                if (matcher(elem, context || document, xml)) {\n                                    results.push(elem);\n                                    break;\n                                }\n                            }\n                            if (outermost) {\n                                dirruns = dirrunsUnique;\n                            }\n                        }\n                        // Track unmatched elements for set filters\n                        if (bySet) {\n                            // They will have gone through all possible matchers\n                            if (elem = !matcher && elem) {\n                                matchedCount--;\n                            }\n                            // Lengthen the array for every element, matched or not\n                            if (seed) {\n                                unmatched.push(elem);\n                            }\n                        }\n                    }\n                    // `i` is now the count of elements visited above, and adding it to `matchedCount`\n                    // makes the latter nonnegative.\n                    matchedCount += i;\n                    // Apply set filters to unmatched elements\n                    // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n                    // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n                    // no element matchers and no seed.\n                    // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n                    // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n                    // numerically zero.\n                    if (bySet && i !== matchedCount) {\n                        j = 0;\n                        while (matcher = setMatchers[j++]) {\n                            matcher(unmatched, setMatched, context, xml);\n                        }\n                        if (seed) {\n                            // Reintegrate element matches to eliminate the need for sorting\n                            if (matchedCount > 0) {\n                                while (i--) {\n                                    if (!(unmatched[i] || setMatched[i])) {\n                                        setMatched[i] = pop.call(results);\n                                    }\n                                }\n                            }\n                            // Discard index placeholder values to get only actual matches\n                            setMatched = condense(setMatched);\n                        }\n                        // Add matches to results\n                        push.apply(results, setMatched);\n                        // Seedless set matches succeeding multiple successful matchers stipulate sorting\n                        if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n                            Sizzle.uniqueSort(results);\n                        }\n                    }\n                    // Override manipulation of globals by nested matchers\n                    if (outermost) {\n                        dirruns = dirrunsUnique;\n                        outermostContext = contextBackup;\n                    }\n                    return unmatched;\n                };\n            return bySet ? markFunction(superMatcher) : superMatcher;\n        }\n        compile = Sizzle.compile = function (selector, match) {\n            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];\n            if (!cached) {\n                // Generate a function of recursive functions that can be used to check each element\n                if (!match) {\n                    match = tokenize(selector);\n                }\n                i = match.length;\n                while (i--) {\n                    cached = matcherFromTokens(match[i]);\n                    if (cached[expando]) {\n                        setMatchers.push(cached);\n                    } else {\n                        elementMatchers.push(cached);\n                    }\n                }\n                // Cache the compiled function\n                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n                // Save selector and tokenization\n                cached.selector = selector;\n            }\n            return cached;\n        };\n        /**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\n        select = Sizzle.select = function (selector, context, results, seed) {\n            var i, tokens, token, type, find, compiled = typeof selector === 'function' && selector, match = !seed && tokenize(selector = compiled.selector || selector);\n            results = results || [];\n            // Try to minimize operations if there is only one selector in the list and no seed\n            // (the latter of which guarantees us context)\n            if (match.length === 1) {\n                // Reduce context if the leading compound selector is an ID\n                tokens = match[0] = match[0].slice(0);\n                if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n                    context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];\n                    if (!context) {\n                        return results;    // Precompiled matchers will still verify ancestry, so step up a level\n                    } else if (compiled) {\n                        context = context.parentNode;\n                    }\n                    selector = selector.slice(tokens.shift().value.length);\n                }\n                // Fetch a seed set for right-to-left matching\n                i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;\n                while (i--) {\n                    token = tokens[i];\n                    // Abort if we hit a combinator\n                    if (Expr.relative[type = token.type]) {\n                        break;\n                    }\n                    if (find = Expr.find[type]) {\n                        // Search, expanding context for leading sibling combinators\n                        if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n                            // If seed is empty or no tokens remain, we can return early\n                            tokens.splice(i, 1);\n                            selector = seed.length && toSelector(tokens);\n                            if (!selector) {\n                                push.apply(results, seed);\n                                return results;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // Compile and execute a filtering function if one is not provided\n            // Provide `match` to avoid retokenization if we modified the selector above\n            (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n            return results;\n        };\n        // One-time assignments\n        // Sort stability\n        support.sortStable = expando.split('').sort(sortOrder).join('') === expando;\n        // Support: Chrome 14-35+\n        // Always assume duplicates if they aren't passed to the comparison function\n        support.detectDuplicates = !!hasDuplicate;\n        // Initialize against the default document\n        setDocument();\n        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n        // Detached nodes confoundingly follow *each other*\n        support.sortDetached = assert(function (el) {\n            // Should return 1, but returns 4 (following)\n            return el.compareDocumentPosition(document.createElement('fieldset')) & 1;\n        });\n        // Support: IE<8\n        // Prevent attribute/property \"interpolation\"\n        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n        if (!assert(function (el) {\n                el.innerHTML = '<a href=\\'#\\'></a>';\n                return el.firstChild.getAttribute('href') === '#';\n            })) {\n            addHandle('type|href|height|width', function (elem, name, isXML) {\n                if (!isXML) {\n                    return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);\n                }\n            });\n        }\n        // Support: IE<9\n        // Use defaultValue in place of getAttribute(\"value\")\n        if (!support.attributes || !assert(function (el) {\n                el.innerHTML = '<input/>';\n                el.firstChild.setAttribute('value', '');\n                return el.firstChild.getAttribute('value') === '';\n            })) {\n            addHandle('value', function (elem, name, isXML) {\n                if (!isXML && elem.nodeName.toLowerCase() === 'input') {\n                    return elem.defaultValue;\n                }\n            });\n        }\n        // Support: IE<9\n        // Use getAttributeNode to fetch booleans when getAttribute lies\n        if (!assert(function (el) {\n                return el.getAttribute('disabled') == null;\n            })) {\n            addHandle(booleans, function (elem, name, isXML) {\n                var val;\n                if (!isXML) {\n                    return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n                }\n            });\n        }\n        return Sizzle;\n    }(window);\n    jQuery.find = Sizzle;\n    jQuery.expr = Sizzle.selectors;\n    // Deprecated\n    jQuery.expr[':'] = jQuery.expr.pseudos;\n    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n    jQuery.text = Sizzle.getText;\n    jQuery.isXMLDoc = Sizzle.isXML;\n    jQuery.contains = Sizzle.contains;\n    jQuery.escapeSelector = Sizzle.escape;\n    var dir = function (elem, dir, until) {\n        var matched = [], truncate = until !== undefined;\n        while ((elem = elem[dir]) && elem.nodeType !== 9) {\n            if (elem.nodeType === 1) {\n                if (truncate && jQuery(elem).is(until)) {\n                    break;\n                }\n                matched.push(elem);\n            }\n        }\n        return matched;\n    };\n    var siblings = function (n, elem) {\n        var matched = [];\n        for (; n; n = n.nextSibling) {\n            if (n.nodeType === 1 && n !== elem) {\n                matched.push(n);\n            }\n        }\n        return matched;\n    };\n    var rneedsContext = jQuery.expr.match.needsContext;\n    function nodeName(elem, name) {\n        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n    }\n    ;\n    var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n    var risSimple = /^.[^:#\\[\\.,]*$/;\n    // Implement the identical functionality for filter and not\n    function winnow(elements, qualifier, not) {\n        if (jQuery.isFunction(qualifier)) {\n            return jQuery.grep(elements, function (elem, i) {\n                return !!qualifier.call(elem, i, elem) !== not;\n            });\n        }\n        // Single element\n        if (qualifier.nodeType) {\n            return jQuery.grep(elements, function (elem) {\n                return elem === qualifier !== not;\n            });\n        }\n        // Arraylike of elements (jQuery, arguments, Array)\n        if (typeof qualifier !== 'string') {\n            return jQuery.grep(elements, function (elem) {\n                return indexOf.call(qualifier, elem) > -1 !== not;\n            });\n        }\n        // Simple selector that can be filtered directly, removing non-Elements\n        if (risSimple.test(qualifier)) {\n            return jQuery.filter(qualifier, elements, not);\n        }\n        // Complex selector, compare the two sets, removing non-Elements\n        qualifier = jQuery.filter(qualifier, elements);\n        return jQuery.grep(elements, function (elem) {\n            return indexOf.call(qualifier, elem) > -1 !== not && elem.nodeType === 1;\n        });\n    }\n    jQuery.filter = function (expr, elems, not) {\n        var elem = elems[0];\n        if (not) {\n            expr = ':not(' + expr + ')';\n        }\n        if (elems.length === 1 && elem.nodeType === 1) {\n            return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n        }\n        return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n            return elem.nodeType === 1;\n        }));\n    };\n    jQuery.fn.extend({\n        find: function (selector) {\n            var i, ret, len = this.length, self = this;\n            if (typeof selector !== 'string') {\n                return this.pushStack(jQuery(selector).filter(function () {\n                    for (i = 0; i < len; i++) {\n                        if (jQuery.contains(self[i], this)) {\n                            return true;\n                        }\n                    }\n                }));\n            }\n            ret = this.pushStack([]);\n            for (i = 0; i < len; i++) {\n                jQuery.find(selector, self[i], ret);\n            }\n            return len > 1 ? jQuery.uniqueSort(ret) : ret;\n        },\n        filter: function (selector) {\n            return this.pushStack(winnow(this, selector || [], false));\n        },\n        not: function (selector) {\n            return this.pushStack(winnow(this, selector || [], true));\n        },\n        is: function (selector) {\n            return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n            // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n            typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n        }\n    });\n    // Initialize a jQuery object\n    // A central reference to the root jQuery(document)\n    var rootjQuery,\n        // A simple way to check for HTML strings\n        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n        // Strict HTML recognition (#11290: must start with <)\n        // Shortcut simple #id case for speed\n        rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/, init = jQuery.fn.init = function (selector, context, root) {\n            var match, elem;\n            // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n            if (!selector) {\n                return this;\n            }\n            // Method init() accepts an alternate rootjQuery\n            // so migrate can support jQuery.sub (gh-2101)\n            root = root || rootjQuery;\n            // Handle HTML strings\n            if (typeof selector === 'string') {\n                if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {\n                    // Assume that strings that start and end with <> are HTML and skip the regex check\n                    match = [\n                        null,\n                        selector,\n                        null\n                    ];\n                } else {\n                    match = rquickExpr.exec(selector);\n                }\n                // Match html or make sure no context is specified for #id\n                if (match && (match[1] || !context)) {\n                    // HANDLE: $(html) -> $(array)\n                    if (match[1]) {\n                        context = context instanceof jQuery ? context[0] : context;\n                        // Option to run scripts is true for back-compat\n                        // Intentionally let the error be thrown if parseHTML is not present\n                        jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n                        // HANDLE: $(html, props)\n                        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n                            for (match in context) {\n                                // Properties of context are called as methods if possible\n                                if (jQuery.isFunction(this[match])) {\n                                    this[match](context[match]);    // ...and otherwise set as attributes\n                                } else {\n                                    this.attr(match, context[match]);\n                                }\n                            }\n                        }\n                        return this;    // HANDLE: $(#id)\n                    } else {\n                        elem = document.getElementById(match[2]);\n                        if (elem) {\n                            // Inject the element directly into the jQuery object\n                            this[0] = elem;\n                            this.length = 1;\n                        }\n                        return this;\n                    }    // HANDLE: $(expr, $(...))\n                } else if (!context || context.jquery) {\n                    return (context || root).find(selector);    // HANDLE: $(expr, context)\n                                                                // (which is just equivalent to: $(context).find(expr)\n                } else {\n                    return this.constructor(context).find(selector);\n                }    // HANDLE: $(DOMElement)\n            } else if (selector.nodeType) {\n                this[0] = selector;\n                this.length = 1;\n                return this;    // HANDLE: $(function)\n                                // Shortcut for document ready\n            } else if (jQuery.isFunction(selector)) {\n                return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n                selector(jQuery);\n            }\n            return jQuery.makeArray(selector, this);\n        };\n    // Give the init function the jQuery prototype for later instantiation\n    init.prototype = jQuery.fn;\n    // Initialize central reference\n    rootjQuery = jQuery(document);\n    var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n        // Methods guaranteed to produce a unique set when starting from a unique set\n        guaranteedUnique = {\n            children: true,\n            contents: true,\n            next: true,\n            prev: true\n        };\n    jQuery.fn.extend({\n        has: function (target) {\n            var targets = jQuery(target, this), l = targets.length;\n            return this.filter(function () {\n                var i = 0;\n                for (; i < l; i++) {\n                    if (jQuery.contains(this, targets[i])) {\n                        return true;\n                    }\n                }\n            });\n        },\n        closest: function (selectors, context) {\n            var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== 'string' && jQuery(selectors);\n            // Positional selectors never match, since there's no _selection_ context\n            if (!rneedsContext.test(selectors)) {\n                for (; i < l; i++) {\n                    for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n                        // Always skip document fragments\n                        if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n                            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n                            matched.push(cur);\n                            break;\n                        }\n                    }\n                }\n            }\n            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n        },\n        // Determine the position of an element within the set\n        index: function (elem) {\n            // No argument, return index in parent\n            if (!elem) {\n                return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n            }\n            // Index in selector\n            if (typeof elem === 'string') {\n                return indexOf.call(jQuery(elem), this[0]);\n            }\n            // Locate the position of the desired element\n            return indexOf.call(this, // If it receives a jQuery object, the first element is used\n            elem.jquery ? elem[0] : elem);\n        },\n        add: function (selector, context) {\n            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n        },\n        addBack: function (selector) {\n            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n        }\n    });\n    function sibling(cur, dir) {\n        while ((cur = cur[dir]) && cur.nodeType !== 1) {\n        }\n        return cur;\n    }\n    jQuery.each({\n        parent: function (elem) {\n            var parent = elem.parentNode;\n            return parent && parent.nodeType !== 11 ? parent : null;\n        },\n        parents: function (elem) {\n            return dir(elem, 'parentNode');\n        },\n        parentsUntil: function (elem, i, until) {\n            return dir(elem, 'parentNode', until);\n        },\n        next: function (elem) {\n            return sibling(elem, 'nextSibling');\n        },\n        prev: function (elem) {\n            return sibling(elem, 'previousSibling');\n        },\n        nextAll: function (elem) {\n            return dir(elem, 'nextSibling');\n        },\n        prevAll: function (elem) {\n            return dir(elem, 'previousSibling');\n        },\n        nextUntil: function (elem, i, until) {\n            return dir(elem, 'nextSibling', until);\n        },\n        prevUntil: function (elem, i, until) {\n            return dir(elem, 'previousSibling', until);\n        },\n        siblings: function (elem) {\n            return siblings((elem.parentNode || {}).firstChild, elem);\n        },\n        children: function (elem) {\n            return siblings(elem.firstChild);\n        },\n        contents: function (elem) {\n            if (nodeName(elem, 'iframe')) {\n                return elem.contentDocument;\n            }\n            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n            // Treat the template element as a regular one in browsers that\n            // don't support it.\n            if (nodeName(elem, 'template')) {\n                elem = elem.content || elem;\n            }\n            return jQuery.merge([], elem.childNodes);\n        }\n    }, function (name, fn) {\n        jQuery.fn[name] = function (until, selector) {\n            var matched = jQuery.map(this, fn, until);\n            if (name.slice(-5) !== 'Until') {\n                selector = until;\n            }\n            if (selector && typeof selector === 'string') {\n                matched = jQuery.filter(selector, matched);\n            }\n            if (this.length > 1) {\n                // Remove duplicates\n                if (!guaranteedUnique[name]) {\n                    jQuery.uniqueSort(matched);\n                }\n                // Reverse order for parents* and prev-derivatives\n                if (rparentsprev.test(name)) {\n                    matched.reverse();\n                }\n            }\n            return this.pushStack(matched);\n        };\n    });\n    var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n    // Convert String-formatted options into Object-formatted ones\n    function createOptions(options) {\n        var object = {};\n        jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n            object[flag] = true;\n        });\n        return object;\n    }\n    /*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\n    jQuery.Callbacks = function (options) {\n        // Convert options from String-formatted to Object-formatted if needed\n        // (we check in cache first)\n        options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options);\n        var\n            // Flag to know if list is currently firing\n            firing,\n            // Last fire value for non-forgettable lists\n            memory,\n            // Flag to know if list was already fired\n            fired,\n            // Flag to prevent firing\n            locked,\n            // Actual callback list\n            list = [],\n            // Queue of execution data for repeatable lists\n            queue = [],\n            // Index of currently firing callback (modified by add/remove as needed)\n            firingIndex = -1,\n            // Fire callbacks\n            fire = function () {\n                // Enforce single-firing\n                locked = locked || options.once;\n                // Execute callbacks for all pending executions,\n                // respecting firingIndex overrides and runtime changes\n                fired = firing = true;\n                for (; queue.length; firingIndex = -1) {\n                    memory = queue.shift();\n                    while (++firingIndex < list.length) {\n                        // Run callback and check for early termination\n                        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n                            // Jump to end and forget the data so .add doesn't re-fire\n                            firingIndex = list.length;\n                            memory = false;\n                        }\n                    }\n                }\n                // Forget the data if we're done with it\n                if (!options.memory) {\n                    memory = false;\n                }\n                firing = false;\n                // Clean up if we're done firing for good\n                if (locked) {\n                    // Keep an empty list if we have data for future add calls\n                    if (memory) {\n                        list = [];    // Otherwise, this object is spent\n                    } else {\n                        list = '';\n                    }\n                }\n            },\n            // Actual Callbacks object\n            self = {\n                // Add a callback or a collection of callbacks to the list\n                add: function () {\n                    if (list) {\n                        // If we have memory from a past run, we should fire after adding\n                        if (memory && !firing) {\n                            firingIndex = list.length - 1;\n                            queue.push(memory);\n                        }\n                        (function add(args) {\n                            jQuery.each(args, function (_, arg) {\n                                if (jQuery.isFunction(arg)) {\n                                    if (!options.unique || !self.has(arg)) {\n                                        list.push(arg);\n                                    }\n                                } else if (arg && arg.length && jQuery.type(arg) !== 'string') {\n                                    // Inspect recursively\n                                    add(arg);\n                                }\n                            });\n                        }(arguments));\n                        if (memory && !firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Remove a callback from the list\n                remove: function () {\n                    jQuery.each(arguments, function (_, arg) {\n                        var index;\n                        while ((index = jQuery.inArray(arg, list, index)) > -1) {\n                            list.splice(index, 1);\n                            // Handle firing indexes\n                            if (index <= firingIndex) {\n                                firingIndex--;\n                            }\n                        }\n                    });\n                    return this;\n                },\n                // Check if a given callback is in the list.\n                // If no argument is given, return whether or not list has callbacks attached.\n                has: function (fn) {\n                    return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n                },\n                // Remove all callbacks from the list\n                empty: function () {\n                    if (list) {\n                        list = [];\n                    }\n                    return this;\n                },\n                // Disable .fire and .add\n                // Abort any current/pending executions\n                // Clear all callbacks and values\n                disable: function () {\n                    locked = queue = [];\n                    list = memory = '';\n                    return this;\n                },\n                disabled: function () {\n                    return !list;\n                },\n                // Disable .fire\n                // Also disable .add unless we have memory (since it would have no effect)\n                // Abort any pending executions\n                lock: function () {\n                    locked = queue = [];\n                    if (!memory && !firing) {\n                        list = memory = '';\n                    }\n                    return this;\n                },\n                locked: function () {\n                    return !!locked;\n                },\n                // Call all callbacks with the given context and arguments\n                fireWith: function (context, args) {\n                    if (!locked) {\n                        args = args || [];\n                        args = [\n                            context,\n                            args.slice ? args.slice() : args\n                        ];\n                        queue.push(args);\n                        if (!firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Call all the callbacks with the given arguments\n                fire: function () {\n                    self.fireWith(this, arguments);\n                    return this;\n                },\n                // To know if the callbacks have already been called at least once\n                fired: function () {\n                    return !!fired;\n                }\n            };\n        return self;\n    };\n    function Identity(v) {\n        return v;\n    }\n    function Thrower(ex) {\n        throw ex;\n    }\n    function adoptValue(value, resolve, reject, noValue) {\n        var method;\n        try {\n            // Check for promise aspect first to privilege synchronous behavior\n            if (value && jQuery.isFunction(method = value.promise)) {\n                method.call(value).done(resolve).fail(reject);    // Other thenables\n            } else if (value && jQuery.isFunction(method = value.then)) {\n                method.call(value, resolve, reject);    // Other non-thenables\n            } else {\n                // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n                // * false: [ value ].slice( 0 ) => resolve( value )\n                // * true: [ value ].slice( 1 ) => resolve()\n                resolve.apply(undefined, [value].slice(noValue));\n            }    // For Promises/A+, convert exceptions into rejections\n                 // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n                 // Deferred#then to conditionally suppress rejection.\n        } catch (value) {\n            // Support: Android 4.0 only\n            // Strict mode functions invoked without .call/.apply get global-object context\n            reject.apply(undefined, [value]);\n        }\n    }\n    jQuery.extend({\n        Deferred: function (func) {\n            var tuples = [\n                    // action, add listener, callbacks,\n                    // ... .then handlers, argument index, [final state]\n                    [\n                        'notify',\n                        'progress',\n                        jQuery.Callbacks('memory'),\n                        jQuery.Callbacks('memory'),\n                        2\n                    ],\n                    [\n                        'resolve',\n                        'done',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        0,\n                        'resolved'\n                    ],\n                    [\n                        'reject',\n                        'fail',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        1,\n                        'rejected'\n                    ]\n                ], state = 'pending', promise = {\n                    state: function () {\n                        return state;\n                    },\n                    always: function () {\n                        deferred.done(arguments).fail(arguments);\n                        return this;\n                    },\n                    'catch': function (fn) {\n                        return promise.then(null, fn);\n                    },\n                    // Keep pipe for back-compat\n                    pipe: function () {\n                        var fns = arguments;\n                        return jQuery.Deferred(function (newDefer) {\n                            jQuery.each(tuples, function (i, tuple) {\n                                // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n                                var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];\n                                // deferred.progress(function() { bind to newDefer or newDefer.notify })\n                                // deferred.done(function() { bind to newDefer or newDefer.resolve })\n                                // deferred.fail(function() { bind to newDefer or newDefer.reject })\n                                deferred[tuple[1]](function () {\n                                    var returned = fn && fn.apply(this, arguments);\n                                    if (returned && jQuery.isFunction(returned.promise)) {\n                                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                                    } else {\n                                        newDefer[tuple[0] + 'With'](this, fn ? [returned] : arguments);\n                                    }\n                                });\n                            });\n                            fns = null;\n                        }).promise();\n                    },\n                    then: function (onFulfilled, onRejected, onProgress) {\n                        var maxDepth = 0;\n                        function resolve(depth, deferred, handler, special) {\n                            return function () {\n                                var that = this, args = arguments, mightThrow = function () {\n                                        var returned, then;\n                                        // Support: Promises/A+ section 2.3.3.3.3\n                                        // https://promisesaplus.com/#point-59\n                                        // Ignore double-resolution attempts\n                                        if (depth < maxDepth) {\n                                            return;\n                                        }\n                                        returned = handler.apply(that, args);\n                                        // Support: Promises/A+ section 2.3.1\n                                        // https://promisesaplus.com/#point-48\n                                        if (returned === deferred.promise()) {\n                                            throw new TypeError('Thenable self-resolution');\n                                        }\n                                        // Support: Promises/A+ sections 2.3.3.1, 3.5\n                                        // https://promisesaplus.com/#point-54\n                                        // https://promisesaplus.com/#point-75\n                                        // Retrieve `then` only once\n                                        then = returned && (typeof returned === 'object' || typeof returned === 'function') && returned.then;\n                                        // Handle a returned thenable\n                                        if (jQuery.isFunction(then)) {\n                                            // Special processors (notify) just wait for resolution\n                                            if (special) {\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));    // Normal processors (resolve) also hook into progress\n                                            } else {\n                                                // ...and disregard older resolution values\n                                                maxDepth++;\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                                            }    // Handle all other returned values\n                                        } else {\n                                            // Only substitute handlers pass on context\n                                            // and multiple values (non-spec behavior)\n                                            if (handler !== Identity) {\n                                                that = undefined;\n                                                args = [returned];\n                                            }\n                                            // Process the value(s)\n                                            // Default process is resolve\n                                            (special || deferred.resolveWith)(that, args);\n                                        }\n                                    },\n                                    // Only normal processors (resolve) catch and reject exceptions\n                                    process = special ? mightThrow : function () {\n                                        try {\n                                            mightThrow();\n                                        } catch (e) {\n                                            if (jQuery.Deferred.exceptionHook) {\n                                                jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                                            }\n                                            // Support: Promises/A+ section 2.3.3.3.4.1\n                                            // https://promisesaplus.com/#point-61\n                                            // Ignore post-resolution exceptions\n                                            if (depth + 1 >= maxDepth) {\n                                                // Only substitute handlers pass on context\n                                                // and multiple values (non-spec behavior)\n                                                if (handler !== Thrower) {\n                                                    that = undefined;\n                                                    args = [e];\n                                                }\n                                                deferred.rejectWith(that, args);\n                                            }\n                                        }\n                                    };\n                                // Support: Promises/A+ section 2.3.3.3.1\n                                // https://promisesaplus.com/#point-57\n                                // Re-resolve promises immediately to dodge false rejection from\n                                // subsequent errors\n                                if (depth) {\n                                    process();\n                                } else {\n                                    // Call an optional hook to record the stack, in case of exception\n                                    // since it's otherwise lost when execution goes async\n                                    if (jQuery.Deferred.getStackHook) {\n                                        process.stackTrace = jQuery.Deferred.getStackHook();\n                                    }\n                                    window.setTimeout(process);\n                                }\n                            };\n                        }\n                        return jQuery.Deferred(function (newDefer) {\n                            // progress_handlers.add( ... )\n                            tuples[0][3].add(resolve(0, newDefer, jQuery.isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));\n                            // fulfilled_handlers.add( ... )\n                            tuples[1][3].add(resolve(0, newDefer, jQuery.isFunction(onFulfilled) ? onFulfilled : Identity));\n                            // rejected_handlers.add( ... )\n                            tuples[2][3].add(resolve(0, newDefer, jQuery.isFunction(onRejected) ? onRejected : Thrower));\n                        }).promise();\n                    },\n                    // Get a promise for this deferred\n                    // If obj is provided, the promise aspect is added to the object\n                    promise: function (obj) {\n                        return obj != null ? jQuery.extend(obj, promise) : promise;\n                    }\n                }, deferred = {};\n            // Add list-specific methods\n            jQuery.each(tuples, function (i, tuple) {\n                var list = tuple[2], stateString = tuple[5];\n                // promise.progress = list.add\n                // promise.done = list.add\n                // promise.fail = list.add\n                promise[tuple[1]] = list.add;\n                // Handle state\n                if (stateString) {\n                    list.add(function () {\n                        // state = \"resolved\" (i.e., fulfilled)\n                        // state = \"rejected\"\n                        state = stateString;\n                    }, // rejected_callbacks.disable\n                    // fulfilled_callbacks.disable\n                    tuples[3 - i][2].disable, // progress_callbacks.lock\n                    tuples[0][2].lock);\n                }\n                // progress_handlers.fire\n                // fulfilled_handlers.fire\n                // rejected_handlers.fire\n                list.add(tuple[3].fire);\n                // deferred.notify = function() { deferred.notifyWith(...) }\n                // deferred.resolve = function() { deferred.resolveWith(...) }\n                // deferred.reject = function() { deferred.rejectWith(...) }\n                deferred[tuple[0]] = function () {\n                    deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);\n                    return this;\n                };\n                // deferred.notifyWith = list.fireWith\n                // deferred.resolveWith = list.fireWith\n                // deferred.rejectWith = list.fireWith\n                deferred[tuple[0] + 'With'] = list.fireWith;\n            });\n            // Make the deferred a promise\n            promise.promise(deferred);\n            // Call given func if any\n            if (func) {\n                func.call(deferred, deferred);\n            }\n            // All done!\n            return deferred;\n        },\n        // Deferred helper\n        when: function (singleValue) {\n            var\n                // count of uncompleted subordinates\n                remaining = arguments.length,\n                // count of unprocessed arguments\n                i = remaining,\n                // subordinate fulfillment data\n                resolveContexts = Array(i), resolveValues = slice.call(arguments),\n                // the master Deferred\n                master = jQuery.Deferred(),\n                // subordinate callback factory\n                updateFunc = function (i) {\n                    return function (value) {\n                        resolveContexts[i] = this;\n                        resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n                        if (!--remaining) {\n                            master.resolveWith(resolveContexts, resolveValues);\n                        }\n                    };\n                };\n            // Single- and empty arguments are adopted like Promise.resolve\n            if (remaining <= 1) {\n                adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining);\n                // Use .then() to unwrap secondary thenables (cf. gh-3000)\n                if (master.state() === 'pending' || jQuery.isFunction(resolveValues[i] && resolveValues[i].then)) {\n                    return master.then();\n                }\n            }\n            // Multiple arguments are aggregated like Promise.all array elements\n            while (i--) {\n                adoptValue(resolveValues[i], updateFunc(i), master.reject);\n            }\n            return master.promise();\n        }\n    });\n    // These usually indicate a programmer mistake during development,\n    // warn about them ASAP rather than swallowing them by default.\n    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n    jQuery.Deferred.exceptionHook = function (error, stack) {\n        // Support: IE 8 - 9 only\n        // Console exists when dev tools are open, which can happen at any time\n        if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n            window.console.warn('jQuery.Deferred exception: ' + error.message, error.stack, stack);\n        }\n    };\n    jQuery.readyException = function (error) {\n        window.setTimeout(function () {\n            throw error;\n        });\n    };\n    // The deferred used on DOM ready\n    var readyList = jQuery.Deferred();\n    jQuery.fn.ready = function (fn) {\n        readyList.then(fn)    // Wrap jQuery.readyException in a function so that the lookup\n                              // happens at the time of error handling instead of callback\n                              // registration.\n.catch(function (error) {\n            jQuery.readyException(error);\n        });\n        return this;\n    };\n    jQuery.extend({\n        // Is the DOM ready to be used? Set to true once it occurs.\n        isReady: false,\n        // A counter to track how many items to wait for before\n        // the ready event fires. See #6781\n        readyWait: 1,\n        // Handle when the DOM is ready\n        ready: function (wait) {\n            // Abort if there are pending holds or we're already ready\n            if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n                return;\n            }\n            // Remember that the DOM is ready\n            jQuery.isReady = true;\n            // If a normal DOM Ready event fired, decrement, and wait if need be\n            if (wait !== true && --jQuery.readyWait > 0) {\n                return;\n            }\n            // If there are functions bound, to execute\n            readyList.resolveWith(document, [jQuery]);\n        }\n    });\n    jQuery.ready.then = readyList.then;\n    // The ready event handler and self cleanup method\n    function completed() {\n        document.removeEventListener('DOMContentLoaded', completed);\n        window.removeEventListener('load', completed);\n        jQuery.ready();\n    }\n    // Catch cases where $(document).ready() is called\n    // after the browser event has already occurred.\n    // Support: IE <=9 - 10 only\n    // Older IE sometimes signals \"interactive\" too soon\n    if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {\n        // Handle it asynchronously to allow scripts the opportunity to delay ready\n        window.setTimeout(jQuery.ready);\n    } else {\n        // Use the handy event callback\n        document.addEventListener('DOMContentLoaded', completed);\n        // A fallback to window.onload, that will always work\n        window.addEventListener('load', completed);\n    }\n    // Multifunctional method to get and set values of a collection\n    // The value/s can optionally be executed if it's a function\n    var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n        var i = 0, len = elems.length, bulk = key == null;\n        // Sets many values\n        if (jQuery.type(key) === 'object') {\n            chainable = true;\n            for (i in key) {\n                access(elems, fn, i, key[i], true, emptyGet, raw);\n            }    // Sets one value\n        } else if (value !== undefined) {\n            chainable = true;\n            if (!jQuery.isFunction(value)) {\n                raw = true;\n            }\n            if (bulk) {\n                // Bulk operations run against the entire set\n                if (raw) {\n                    fn.call(elems, value);\n                    fn = null;    // ...except when executing function values\n                } else {\n                    bulk = fn;\n                    fn = function (elem, key, value) {\n                        return bulk.call(jQuery(elem), value);\n                    };\n                }\n            }\n            if (fn) {\n                for (; i < len; i++) {\n                    fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n                }\n            }\n        }\n        if (chainable) {\n            return elems;\n        }\n        // Gets\n        if (bulk) {\n            return fn.call(elems);\n        }\n        return len ? fn(elems[0], key) : emptyGet;\n    };\n    var acceptData = function (owner) {\n        // Accepts only:\n        //  - Node\n        //    - Node.ELEMENT_NODE\n        //    - Node.DOCUMENT_NODE\n        //  - Object\n        //    - Any\n        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n    };\n    function Data() {\n        this.expando = jQuery.expando + Data.uid++;\n    }\n    Data.uid = 1;\n    Data.prototype = {\n        cache: function (owner) {\n            // Check if the owner object already has a cache\n            var value = owner[this.expando];\n            // If not, create one\n            if (!value) {\n                value = {};\n                // We can accept data for non-element nodes in modern browsers,\n                // but we should not, see #8335.\n                // Always return an empty object.\n                if (acceptData(owner)) {\n                    // If it is a node unlikely to be stringify-ed or looped over\n                    // use plain assignment\n                    if (owner.nodeType) {\n                        owner[this.expando] = value;    // Otherwise secure it in a non-enumerable property\n                                                        // configurable must be true to allow the property to be\n                                                        // deleted when data is removed\n                    } else {\n                        Object.defineProperty(owner, this.expando, {\n                            value: value,\n                            configurable: true\n                        });\n                    }\n                }\n            }\n            return value;\n        },\n        set: function (owner, data, value) {\n            var prop, cache = this.cache(owner);\n            // Handle: [ owner, key, value ] args\n            // Always use camelCase key (gh-2257)\n            if (typeof data === 'string') {\n                cache[jQuery.camelCase(data)] = value;    // Handle: [ owner, { properties } ] args\n            } else {\n                // Copy the properties one-by-one to the cache object\n                for (prop in data) {\n                    cache[jQuery.camelCase(prop)] = data[prop];\n                }\n            }\n            return cache;\n        },\n        get: function (owner, key) {\n            return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n            owner[this.expando] && owner[this.expando][jQuery.camelCase(key)];\n        },\n        access: function (owner, key, value) {\n            // In cases where either:\n            //\n            //   1. No key was specified\n            //   2. A string key was specified, but no value provided\n            //\n            // Take the \"read\" path and allow the get method to determine\n            // which value to return, respectively either:\n            //\n            //   1. The entire cache object\n            //   2. The data stored at the key\n            //\n            if (key === undefined || key && typeof key === 'string' && value === undefined) {\n                return this.get(owner, key);\n            }\n            // When the key is not a string, or both a key and value\n            // are specified, set or extend (existing objects) with either:\n            //\n            //   1. An object of properties\n            //   2. A key and value\n            //\n            this.set(owner, key, value);\n            // Since the \"set\" path can have two possible entry points\n            // return the expected data based on which path was taken[*]\n            return value !== undefined ? value : key;\n        },\n        remove: function (owner, key) {\n            var i, cache = owner[this.expando];\n            if (cache === undefined) {\n                return;\n            }\n            if (key !== undefined) {\n                // Support array or space separated string of keys\n                if (Array.isArray(key)) {\n                    // If key is an array of keys...\n                    // We always set camelCase keys, so remove that.\n                    key = key.map(jQuery.camelCase);\n                } else {\n                    key = jQuery.camelCase(key);\n                    // If a key with the spaces exists, use it.\n                    // Otherwise, create an array by matching non-whitespace\n                    key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n                }\n                i = key.length;\n                while (i--) {\n                    delete cache[key[i]];\n                }\n            }\n            // Remove the expando if there's no more data\n            if (key === undefined || jQuery.isEmptyObject(cache)) {\n                // Support: Chrome <=35 - 45\n                // Webkit & Blink performance suffers when deleting properties\n                // from DOM nodes, so set to undefined instead\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n                if (owner.nodeType) {\n                    owner[this.expando] = undefined;\n                } else {\n                    delete owner[this.expando];\n                }\n            }\n        },\n        hasData: function (owner) {\n            var cache = owner[this.expando];\n            return cache !== undefined && !jQuery.isEmptyObject(cache);\n        }\n    };\n    var dataPriv = new Data();\n    var dataUser = new Data();\n    //\tImplementation Summary\n    //\n    //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n    //\t2. Improve the module's maintainability by reducing the storage\n    //\t\tpaths to a single mechanism.\n    //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n    //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n    //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n    //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n    var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/, rmultiDash = /[A-Z]/g;\n    function getData(data) {\n        if (data === 'true') {\n            return true;\n        }\n        if (data === 'false') {\n            return false;\n        }\n        if (data === 'null') {\n            return null;\n        }\n        // Only convert to a number if it doesn't change the string\n        if (data === +data + '') {\n            return +data;\n        }\n        if (rbrace.test(data)) {\n            return JSON.parse(data);\n        }\n        return data;\n    }\n    function dataAttr(elem, key, data) {\n        var name;\n        // If nothing was found internally, try to fetch any\n        // data from the HTML5 data-* attribute\n        if (data === undefined && elem.nodeType === 1) {\n            name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase();\n            data = elem.getAttribute(name);\n            if (typeof data === 'string') {\n                try {\n                    data = getData(data);\n                } catch (e) {\n                }\n                // Make sure we set the data so it isn't changed later\n                dataUser.set(elem, key, data);\n            } else {\n                data = undefined;\n            }\n        }\n        return data;\n    }\n    jQuery.extend({\n        hasData: function (elem) {\n            return dataUser.hasData(elem) || dataPriv.hasData(elem);\n        },\n        data: function (elem, name, data) {\n            return dataUser.access(elem, name, data);\n        },\n        removeData: function (elem, name) {\n            dataUser.remove(elem, name);\n        },\n        // TODO: Now that all calls to _data and _removeData have been replaced\n        // with direct calls to dataPriv methods, these can be deprecated.\n        _data: function (elem, name, data) {\n            return dataPriv.access(elem, name, data);\n        },\n        _removeData: function (elem, name) {\n            dataPriv.remove(elem, name);\n        }\n    });\n    jQuery.fn.extend({\n        data: function (key, value) {\n            var i, name, data, elem = this[0], attrs = elem && elem.attributes;\n            // Gets all values\n            if (key === undefined) {\n                if (this.length) {\n                    data = dataUser.get(elem);\n                    if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {\n                        i = attrs.length;\n                        while (i--) {\n                            // Support: IE 11 only\n                            // The attrs elements can be null (#14894)\n                            if (attrs[i]) {\n                                name = attrs[i].name;\n                                if (name.indexOf('data-') === 0) {\n                                    name = jQuery.camelCase(name.slice(5));\n                                    dataAttr(elem, name, data[name]);\n                                }\n                            }\n                        }\n                        dataPriv.set(elem, 'hasDataAttrs', true);\n                    }\n                }\n                return data;\n            }\n            // Sets multiple values\n            if (typeof key === 'object') {\n                return this.each(function () {\n                    dataUser.set(this, key);\n                });\n            }\n            return access(this, function (value) {\n                var data;\n                // The calling jQuery object (element matches) is not empty\n                // (and therefore has an element appears at this[ 0 ]) and the\n                // `value` parameter was not undefined. An empty jQuery object\n                // will result in `undefined` for elem = this[ 0 ] which will\n                // throw an exception if an attempt to read a data cache is made.\n                if (elem && value === undefined) {\n                    // Attempt to get data from the cache\n                    // The key will always be camelCased in Data\n                    data = dataUser.get(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // Attempt to \"discover\" the data in\n                    // HTML5 custom data-* attrs\n                    data = dataAttr(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // We tried really hard, but the data doesn't exist.\n                    return;\n                }\n                // Set the data...\n                this.each(function () {\n                    // We always store the camelCased key\n                    dataUser.set(this, key, value);\n                });\n            }, null, value, arguments.length > 1, null, true);\n        },\n        removeData: function (key) {\n            return this.each(function () {\n                dataUser.remove(this, key);\n            });\n        }\n    });\n    jQuery.extend({\n        queue: function (elem, type, data) {\n            var queue;\n            if (elem) {\n                type = (type || 'fx') + 'queue';\n                queue = dataPriv.get(elem, type);\n                // Speed up dequeue by getting out quickly if this is just a lookup\n                if (data) {\n                    if (!queue || Array.isArray(data)) {\n                        queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n                    } else {\n                        queue.push(data);\n                    }\n                }\n                return queue || [];\n            }\n        },\n        dequeue: function (elem, type) {\n            type = type || 'fx';\n            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function () {\n                    jQuery.dequeue(elem, type);\n                };\n            // If the fx queue is dequeued, always remove the progress sentinel\n            if (fn === 'inprogress') {\n                fn = queue.shift();\n                startLength--;\n            }\n            if (fn) {\n                // Add a progress sentinel to prevent the fx queue from being\n                // automatically dequeued\n                if (type === 'fx') {\n                    queue.unshift('inprogress');\n                }\n                // Clear up the last queue stop function\n                delete hooks.stop;\n                fn.call(elem, next, hooks);\n            }\n            if (!startLength && hooks) {\n                hooks.empty.fire();\n            }\n        },\n        // Not public - generate a queueHooks object, or return the current one\n        _queueHooks: function (elem, type) {\n            var key = type + 'queueHooks';\n            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n                empty: jQuery.Callbacks('once memory').add(function () {\n                    dataPriv.remove(elem, [\n                        type + 'queue',\n                        key\n                    ]);\n                })\n            });\n        }\n    });\n    jQuery.fn.extend({\n        queue: function (type, data) {\n            var setter = 2;\n            if (typeof type !== 'string') {\n                data = type;\n                type = 'fx';\n                setter--;\n            }\n            if (arguments.length < setter) {\n                return jQuery.queue(this[0], type);\n            }\n            return data === undefined ? this : this.each(function () {\n                var queue = jQuery.queue(this, type, data);\n                // Ensure a hooks for this queue\n                jQuery._queueHooks(this, type);\n                if (type === 'fx' && queue[0] !== 'inprogress') {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        dequeue: function (type) {\n            return this.each(function () {\n                jQuery.dequeue(this, type);\n            });\n        },\n        clearQueue: function (type) {\n            return this.queue(type || 'fx', []);\n        },\n        // Get a promise resolved when queues of a certain type\n        // are emptied (fx is the type by default)\n        promise: function (type, obj) {\n            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {\n                    if (!--count) {\n                        defer.resolveWith(elements, [elements]);\n                    }\n                };\n            if (typeof type !== 'string') {\n                obj = type;\n                type = undefined;\n            }\n            type = type || 'fx';\n            while (i--) {\n                tmp = dataPriv.get(elements[i], type + 'queueHooks');\n                if (tmp && tmp.empty) {\n                    count++;\n                    tmp.empty.add(resolve);\n                }\n            }\n            resolve();\n            return defer.promise(obj);\n        }\n    });\n    var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n    var rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');\n    var cssExpand = [\n        'Top',\n        'Right',\n        'Bottom',\n        'Left'\n    ];\n    var isHiddenWithinTree = function (elem, el) {\n        // isHiddenWithinTree might be called from jQuery#filter function;\n        // in that case, element will be second argument\n        elem = el || elem;\n        // Inline style trumps all\n        return elem.style.display === 'none' || elem.style.display === '' && // Otherwise, check computed style\n        // Support: Firefox <=43 - 45\n        // Disconnected elements can have computed display: none, so first confirm that elem is\n        // in the document.\n        jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, 'display') === 'none';\n    };\n    var swap = function (elem, options, callback, args) {\n        var ret, name, old = {};\n        // Remember the old values, and insert the new ones\n        for (name in options) {\n            old[name] = elem.style[name];\n            elem.style[name] = options[name];\n        }\n        ret = callback.apply(elem, args || []);\n        // Revert the old values\n        for (name in options) {\n            elem.style[name] = old[name];\n        }\n        return ret;\n    };\n    function adjustCSS(elem, prop, valueParts, tween) {\n        var adjusted, scale = 1, maxIterations = 20, currentValue = tween ? function () {\n                return tween.cur();\n            } : function () {\n                return jQuery.css(elem, prop, '');\n            }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? '' : 'px'),\n            // Starting value computation is required for potential unit mismatches\n            initialInUnit = (jQuery.cssNumber[prop] || unit !== 'px' && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n        if (initialInUnit && initialInUnit[3] !== unit) {\n            // Trust units reported by jQuery.css\n            unit = unit || initialInUnit[3];\n            // Make sure we update the tween properties later on\n            valueParts = valueParts || [];\n            // Iteratively approximate from a nonzero starting point\n            initialInUnit = +initial || 1;\n            do {\n                // If previous iteration zeroed out, double until we get *something*.\n                // Use string for doubling so we don't accidentally see scale as unchanged below\n                scale = scale || '.5';\n                // Adjust and apply\n                initialInUnit = initialInUnit / scale;\n                jQuery.style(elem, prop, initialInUnit + unit);    // Update scale, tolerating zero or NaN from tween.cur()\n                                                                   // Break the loop if scale is unchanged or perfect, or if we've just had enough.\n            } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);\n        }\n        if (valueParts) {\n            initialInUnit = +initialInUnit || +initial || 0;\n            // Apply relative offset (+=/-=) if specified\n            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n            if (tween) {\n                tween.unit = unit;\n                tween.start = initialInUnit;\n                tween.end = adjusted;\n            }\n        }\n        return adjusted;\n    }\n    var defaultDisplayMap = {};\n    function getDefaultDisplay(elem) {\n        var temp, doc = elem.ownerDocument, nodeName = elem.nodeName, display = defaultDisplayMap[nodeName];\n        if (display) {\n            return display;\n        }\n        temp = doc.body.appendChild(doc.createElement(nodeName));\n        display = jQuery.css(temp, 'display');\n        temp.parentNode.removeChild(temp);\n        if (display === 'none') {\n            display = 'block';\n        }\n        defaultDisplayMap[nodeName] = display;\n        return display;\n    }\n    function showHide(elements, show) {\n        var display, elem, values = [], index = 0, length = elements.length;\n        // Determine new display value for elements that need to change\n        for (; index < length; index++) {\n            elem = elements[index];\n            if (!elem.style) {\n                continue;\n            }\n            display = elem.style.display;\n            if (show) {\n                // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n                // check is required in this first loop unless we have a nonempty display value (either\n                // inline or about-to-be-restored)\n                if (display === 'none') {\n                    values[index] = dataPriv.get(elem, 'display') || null;\n                    if (!values[index]) {\n                        elem.style.display = '';\n                    }\n                }\n                if (elem.style.display === '' && isHiddenWithinTree(elem)) {\n                    values[index] = getDefaultDisplay(elem);\n                }\n            } else {\n                if (display !== 'none') {\n                    values[index] = 'none';\n                    // Remember what we're overwriting\n                    dataPriv.set(elem, 'display', display);\n                }\n            }\n        }\n        // Set the display of the elements in a second loop to avoid constant reflow\n        for (index = 0; index < length; index++) {\n            if (values[index] != null) {\n                elements[index].style.display = values[index];\n            }\n        }\n        return elements;\n    }\n    jQuery.fn.extend({\n        show: function () {\n            return showHide(this, true);\n        },\n        hide: function () {\n            return showHide(this);\n        },\n        toggle: function (state) {\n            if (typeof state === 'boolean') {\n                return state ? this.show() : this.hide();\n            }\n            return this.each(function () {\n                if (isHiddenWithinTree(this)) {\n                    jQuery(this).show();\n                } else {\n                    jQuery(this).hide();\n                }\n            });\n        }\n    });\n    var rcheckableType = /^(?:checkbox|radio)$/i;\n    var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n    var rscriptType = /^$|\\/(?:java|ecma)script/i;\n    // We have to close these tags to support XHTML (#13200)\n    var wrapMap = {\n        // Support: IE <=9 only\n        option: [\n            1,\n            '<select multiple=\\'multiple\\'>',\n            '</select>'\n        ],\n        // XHTML parsers do not magically insert elements in the\n        // same way that tag soup parsers do. So we cannot shorten\n        // this by omitting <tbody> or other required elements.\n        thead: [\n            1,\n            '<table>',\n            '</table>'\n        ],\n        col: [\n            2,\n            '<table><colgroup>',\n            '</colgroup></table>'\n        ],\n        tr: [\n            2,\n            '<table><tbody>',\n            '</tbody></table>'\n        ],\n        td: [\n            3,\n            '<table><tbody><tr>',\n            '</tr></tbody></table>'\n        ],\n        _default: [\n            0,\n            '',\n            ''\n        ]\n    };\n    // Support: IE <=9 only\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n    function getAll(context, tag) {\n        // Support: IE <=9 - 11 only\n        // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n        var ret;\n        if (typeof context.getElementsByTagName !== 'undefined') {\n            ret = context.getElementsByTagName(tag || '*');\n        } else if (typeof context.querySelectorAll !== 'undefined') {\n            ret = context.querySelectorAll(tag || '*');\n        } else {\n            ret = [];\n        }\n        if (tag === undefined || tag && nodeName(context, tag)) {\n            return jQuery.merge([context], ret);\n        }\n        return ret;\n    }\n    // Mark scripts as having already been evaluated\n    function setGlobalEval(elems, refElements) {\n        var i = 0, l = elems.length;\n        for (; i < l; i++) {\n            dataPriv.set(elems[i], 'globalEval', !refElements || dataPriv.get(refElements[i], 'globalEval'));\n        }\n    }\n    var rhtml = /<|&#?\\w+;/;\n    function buildFragment(elems, context, scripts, selection, ignored) {\n        var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;\n        for (; i < l; i++) {\n            elem = elems[i];\n            if (elem || elem === 0) {\n                // Add nodes directly\n                if (jQuery.type(elem) === 'object') {\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, elem.nodeType ? [elem] : elem);    // Convert non-html into a text node\n                } else if (!rhtml.test(elem)) {\n                    nodes.push(context.createTextNode(elem));    // Convert html into DOM nodes\n                } else {\n                    tmp = tmp || fragment.appendChild(context.createElement('div'));\n                    // Deserialize a standard representation\n                    tag = (rtagName.exec(elem) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase();\n                    wrap = wrapMap[tag] || wrapMap._default;\n                    tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];\n                    // Descend through wrappers to the right content\n                    j = wrap[0];\n                    while (j--) {\n                        tmp = tmp.lastChild;\n                    }\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, tmp.childNodes);\n                    // Remember the top-level container\n                    tmp = fragment.firstChild;\n                    // Ensure the created nodes are orphaned (#12392)\n                    tmp.textContent = '';\n                }\n            }\n        }\n        // Remove wrapper from fragment\n        fragment.textContent = '';\n        i = 0;\n        while (elem = nodes[i++]) {\n            // Skip elements already in the context collection (trac-4087)\n            if (selection && jQuery.inArray(elem, selection) > -1) {\n                if (ignored) {\n                    ignored.push(elem);\n                }\n                continue;\n            }\n            contains = jQuery.contains(elem.ownerDocument, elem);\n            // Append to fragment\n            tmp = getAll(fragment.appendChild(elem), 'script');\n            // Preserve script evaluation history\n            if (contains) {\n                setGlobalEval(tmp);\n            }\n            // Capture executables\n            if (scripts) {\n                j = 0;\n                while (elem = tmp[j++]) {\n                    if (rscriptType.test(elem.type || '')) {\n                        scripts.push(elem);\n                    }\n                }\n            }\n        }\n        return fragment;\n    }\n    (function () {\n        var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement('div')), input = document.createElement('input');\n        // Support: Android 4.0 - 4.3 only\n        // Check state lost if the name is set (#11217)\n        // Support: Windows Web Apps (WWA)\n        // `name` and `type` must use .setAttribute for WWA (#14901)\n        input.setAttribute('type', 'radio');\n        input.setAttribute('checked', 'checked');\n        input.setAttribute('name', 't');\n        div.appendChild(input);\n        // Support: Android <=4.1 only\n        // Older WebKit doesn't clone checked state correctly in fragments\n        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n        // Support: IE <=11 only\n        // Make sure textarea (and checkbox) defaultValue is properly cloned\n        div.innerHTML = '<textarea>x</textarea>';\n        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n    }());\n    var documentElement = document.documentElement;\n    var rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n    function returnTrue() {\n        return true;\n    }\n    function returnFalse() {\n        return false;\n    }\n    // Support: IE <=9 only\n    // See #13393 for more info\n    function safeActiveElement() {\n        try {\n            return document.activeElement;\n        } catch (err) {\n        }\n    }\n    function on(elem, types, selector, data, fn, one) {\n        var origFn, type;\n        // Types can be a map of types/handlers\n        if (typeof types === 'object') {\n            // ( types-Object, selector, data )\n            if (typeof selector !== 'string') {\n                // ( types-Object, data )\n                data = data || selector;\n                selector = undefined;\n            }\n            for (type in types) {\n                on(elem, type, selector, data, types[type], one);\n            }\n            return elem;\n        }\n        if (data == null && fn == null) {\n            // ( types, fn )\n            fn = selector;\n            data = selector = undefined;\n        } else if (fn == null) {\n            if (typeof selector === 'string') {\n                // ( types, selector, fn )\n                fn = data;\n                data = undefined;\n            } else {\n                // ( types, data, fn )\n                fn = data;\n                data = selector;\n                selector = undefined;\n            }\n        }\n        if (fn === false) {\n            fn = returnFalse;\n        } else if (!fn) {\n            return elem;\n        }\n        if (one === 1) {\n            origFn = fn;\n            fn = function (event) {\n                // Can use an empty set, since event contains the info\n                jQuery().off(event);\n                return origFn.apply(this, arguments);\n            };\n            // Use same guid so caller can remove using origFn\n            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n        }\n        return elem.each(function () {\n            jQuery.event.add(this, types, fn, data, selector);\n        });\n    }\n    /*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\n    jQuery.event = {\n        global: {},\n        add: function (elem, types, handler, data, selector) {\n            var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);\n            // Don't attach events to noData or text/comment nodes (but allow plain objects)\n            if (!elemData) {\n                return;\n            }\n            // Caller can pass in an object of custom data in lieu of the handler\n            if (handler.handler) {\n                handleObjIn = handler;\n                handler = handleObjIn.handler;\n                selector = handleObjIn.selector;\n            }\n            // Ensure that invalid selectors throw exceptions at attach time\n            // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n            if (selector) {\n                jQuery.find.matchesSelector(documentElement, selector);\n            }\n            // Make sure that the handler has a unique ID, used to find/remove it later\n            if (!handler.guid) {\n                handler.guid = jQuery.guid++;\n            }\n            // Init the element's event structure and main handler, if this is the first\n            if (!(events = elemData.events)) {\n                events = elemData.events = {};\n            }\n            if (!(eventHandle = elemData.handle)) {\n                eventHandle = elemData.handle = function (e) {\n                    // Discard the second event of a jQuery.event.trigger() and\n                    // when an event is called after a page has unloaded\n                    return typeof jQuery !== 'undefined' && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n                };\n            }\n            // Handle multiple events separated by a space\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // There *must* be a type, no attaching namespace-only handlers\n                if (!type) {\n                    continue;\n                }\n                // If event changes its type, use the special event handlers for the changed type\n                special = jQuery.event.special[type] || {};\n                // If selector defined, determine special event api type, otherwise given type\n                type = (selector ? special.delegateType : special.bindType) || type;\n                // Update special based on newly reset type\n                special = jQuery.event.special[type] || {};\n                // handleObj is passed to all event handlers\n                handleObj = jQuery.extend({\n                    type: type,\n                    origType: origType,\n                    data: data,\n                    handler: handler,\n                    guid: handler.guid,\n                    selector: selector,\n                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n                    namespace: namespaces.join('.')\n                }, handleObjIn);\n                // Init the event handler queue if we're the first\n                if (!(handlers = events[type])) {\n                    handlers = events[type] = [];\n                    handlers.delegateCount = 0;\n                    // Only use addEventListener if the special events handler returns false\n                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n                        if (elem.addEventListener) {\n                            elem.addEventListener(type, eventHandle);\n                        }\n                    }\n                }\n                if (special.add) {\n                    special.add.call(elem, handleObj);\n                    if (!handleObj.handler.guid) {\n                        handleObj.handler.guid = handler.guid;\n                    }\n                }\n                // Add to the element's handler list, delegates in front\n                if (selector) {\n                    handlers.splice(handlers.delegateCount++, 0, handleObj);\n                } else {\n                    handlers.push(handleObj);\n                }\n                // Keep track of which events have ever been used, for event optimization\n                jQuery.event.global[type] = true;\n            }\n        },\n        // Detach an event or set of events from an element\n        remove: function (elem, types, handler, selector, mappedTypes) {\n            var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n            if (!elemData || !(events = elemData.events)) {\n                return;\n            }\n            // Once for each type.namespace in types; type may be omitted\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // Unbind all events (on this namespace, if provided) for the element\n                if (!type) {\n                    for (type in events) {\n                        jQuery.event.remove(elem, type + types[t], handler, selector, true);\n                    }\n                    continue;\n                }\n                special = jQuery.event.special[type] || {};\n                type = (selector ? special.delegateType : special.bindType) || type;\n                handlers = events[type] || [];\n                tmp = tmp[2] && new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)');\n                // Remove matching events\n                origCount = j = handlers.length;\n                while (j--) {\n                    handleObj = handlers[j];\n                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {\n                        handlers.splice(j, 1);\n                        if (handleObj.selector) {\n                            handlers.delegateCount--;\n                        }\n                        if (special.remove) {\n                            special.remove.call(elem, handleObj);\n                        }\n                    }\n                }\n                // Remove generic event handler if we removed something and no more handlers exist\n                // (avoids potential for endless recursion during removal of special event handlers)\n                if (origCount && !handlers.length) {\n                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n                        jQuery.removeEvent(elem, type, elemData.handle);\n                    }\n                    delete events[type];\n                }\n            }\n            // Remove data and the expando if it's no longer used\n            if (jQuery.isEmptyObject(events)) {\n                dataPriv.remove(elem, 'handle events');\n            }\n        },\n        dispatch: function (nativeEvent) {\n            // Make a writable jQuery.Event from the native event object\n            var event = jQuery.event.fix(nativeEvent);\n            var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), handlers = (dataPriv.get(this, 'events') || {})[event.type] || [], special = jQuery.event.special[event.type] || {};\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\n            args[0] = event;\n            for (i = 1; i < arguments.length; i++) {\n                args[i] = arguments[i];\n            }\n            event.delegateTarget = this;\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\n            if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n                return;\n            }\n            // Determine handlers\n            handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n            // Run delegates first; they may want to stop propagation beneath us\n            i = 0;\n            while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n                event.currentTarget = matched.elem;\n                j = 0;\n                while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n                    // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n                    // a subset or equal to those in the bound event (both can have no namespace).\n                    if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n                        event.handleObj = handleObj;\n                        event.data = handleObj.data;\n                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n                        if (ret !== undefined) {\n                            if ((event.result = ret) === false) {\n                                event.preventDefault();\n                                event.stopPropagation();\n                            }\n                        }\n                    }\n                }\n            }\n            // Call the postDispatch hook for the mapped type\n            if (special.postDispatch) {\n                special.postDispatch.call(this, event);\n            }\n            return event.result;\n        },\n        handlers: function (event, handlers) {\n            var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;\n            // Find delegate handlers\n            if (delegateCount && // Support: IE <=9\n                // Black-hole SVG <use> instance trees (trac-13180)\n                cur.nodeType && // Support: Firefox <=42\n                // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n                // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n                // Support: IE 11 only\n                // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n                !(event.type === 'click' && event.button >= 1)) {\n                for (; cur !== this; cur = cur.parentNode || this) {\n                    // Don't check non-elements (#13208)\n                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n                    if (cur.nodeType === 1 && !(event.type === 'click' && cur.disabled === true)) {\n                        matchedHandlers = [];\n                        matchedSelectors = {};\n                        for (i = 0; i < delegateCount; i++) {\n                            handleObj = handlers[i];\n                            // Don't conflict with Object.prototype properties (#13203)\n                            sel = handleObj.selector + ' ';\n                            if (matchedSelectors[sel] === undefined) {\n                                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n                            }\n                            if (matchedSelectors[sel]) {\n                                matchedHandlers.push(handleObj);\n                            }\n                        }\n                        if (matchedHandlers.length) {\n                            handlerQueue.push({\n                                elem: cur,\n                                handlers: matchedHandlers\n                            });\n                        }\n                    }\n                }\n            }\n            // Add the remaining (directly-bound) handlers\n            cur = this;\n            if (delegateCount < handlers.length) {\n                handlerQueue.push({\n                    elem: cur,\n                    handlers: handlers.slice(delegateCount)\n                });\n            }\n            return handlerQueue;\n        },\n        addProp: function (name, hook) {\n            Object.defineProperty(jQuery.Event.prototype, name, {\n                enumerable: true,\n                configurable: true,\n                get: jQuery.isFunction(hook) ? function () {\n                    if (this.originalEvent) {\n                        return hook(this.originalEvent);\n                    }\n                } : function () {\n                    if (this.originalEvent) {\n                        return this.originalEvent[name];\n                    }\n                },\n                set: function (value) {\n                    Object.defineProperty(this, name, {\n                        enumerable: true,\n                        configurable: true,\n                        writable: true,\n                        value: value\n                    });\n                }\n            });\n        },\n        fix: function (originalEvent) {\n            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n        },\n        special: {\n            load: {\n                // Prevent triggered image.load events from bubbling to window.load\n                noBubble: true\n            },\n            focus: {\n                // Fire native event if possible so blur/focus sequence is correct\n                trigger: function () {\n                    if (this !== safeActiveElement() && this.focus) {\n                        this.focus();\n                        return false;\n                    }\n                },\n                delegateType: 'focusin'\n            },\n            blur: {\n                trigger: function () {\n                    if (this === safeActiveElement() && this.blur) {\n                        this.blur();\n                        return false;\n                    }\n                },\n                delegateType: 'focusout'\n            },\n            click: {\n                // For checkbox, fire native event so checked state will be right\n                trigger: function () {\n                    if (this.type === 'checkbox' && this.click && nodeName(this, 'input')) {\n                        this.click();\n                        return false;\n                    }\n                },\n                // For cross-browser consistency, don't fire native .click() on links\n                _default: function (event) {\n                    return nodeName(event.target, 'a');\n                }\n            },\n            beforeunload: {\n                postDispatch: function (event) {\n                    // Support: Firefox 20+\n                    // Firefox doesn't alert if the returnValue field is not set.\n                    if (event.result !== undefined && event.originalEvent) {\n                        event.originalEvent.returnValue = event.result;\n                    }\n                }\n            }\n        }\n    };\n    jQuery.removeEvent = function (elem, type, handle) {\n        // This \"if\" is needed for plain objects\n        if (elem.removeEventListener) {\n            elem.removeEventListener(type, handle);\n        }\n    };\n    jQuery.Event = function (src, props) {\n        // Allow instantiation without the 'new' keyword\n        if (!(this instanceof jQuery.Event)) {\n            return new jQuery.Event(src, props);\n        }\n        // Event object\n        if (src && src.type) {\n            this.originalEvent = src;\n            this.type = src.type;\n            // Events bubbling up the document may have been marked as prevented\n            // by a handler lower down the tree; reflect the correct value.\n            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n            src.returnValue === false ? returnTrue : returnFalse;\n            // Create target properties\n            // Support: Safari <=6 - 7 only\n            // Target should not be a text node (#504, #13143)\n            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n            this.currentTarget = src.currentTarget;\n            this.relatedTarget = src.relatedTarget;    // Event type\n        } else {\n            this.type = src;\n        }\n        // Put explicitly provided properties onto the event object\n        if (props) {\n            jQuery.extend(this, props);\n        }\n        // Create a timestamp if incoming event doesn't have one\n        this.timeStamp = src && src.timeStamp || jQuery.now();\n        // Mark it as fixed\n        this[jQuery.expando] = true;\n    };\n    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n    // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    jQuery.Event.prototype = {\n        constructor: jQuery.Event,\n        isDefaultPrevented: returnFalse,\n        isPropagationStopped: returnFalse,\n        isImmediatePropagationStopped: returnFalse,\n        isSimulated: false,\n        preventDefault: function () {\n            var e = this.originalEvent;\n            this.isDefaultPrevented = returnTrue;\n            if (e && !this.isSimulated) {\n                e.preventDefault();\n            }\n        },\n        stopPropagation: function () {\n            var e = this.originalEvent;\n            this.isPropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopPropagation();\n            }\n        },\n        stopImmediatePropagation: function () {\n            var e = this.originalEvent;\n            this.isImmediatePropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopImmediatePropagation();\n            }\n            this.stopPropagation();\n        }\n    };\n    // Includes all common event props including KeyEvent and MouseEvent specific props\n    jQuery.each({\n        altKey: true,\n        bubbles: true,\n        cancelable: true,\n        changedTouches: true,\n        ctrlKey: true,\n        detail: true,\n        eventPhase: true,\n        metaKey: true,\n        pageX: true,\n        pageY: true,\n        shiftKey: true,\n        view: true,\n        'char': true,\n        charCode: true,\n        key: true,\n        keyCode: true,\n        button: true,\n        buttons: true,\n        clientX: true,\n        clientY: true,\n        offsetX: true,\n        offsetY: true,\n        pointerId: true,\n        pointerType: true,\n        screenX: true,\n        screenY: true,\n        targetTouches: true,\n        toElement: true,\n        touches: true,\n        which: function (event) {\n            var button = event.button;\n            // Add which for key events\n            if (event.which == null && rkeyEvent.test(event.type)) {\n                return event.charCode != null ? event.charCode : event.keyCode;\n            }\n            // Add which for click: 1 === left; 2 === middle; 3 === right\n            if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n                if (button & 1) {\n                    return 1;\n                }\n                if (button & 2) {\n                    return 3;\n                }\n                if (button & 4) {\n                    return 2;\n                }\n                return 0;\n            }\n            return event.which;\n        }\n    }, jQuery.event.addProp);\n    // Create mouseenter/leave events using mouseover/out and event-time checks\n    // so that event delegation works in jQuery.\n    // Do the same for pointerenter/pointerleave and pointerover/pointerout\n    //\n    // Support: Safari 7 only\n    // Safari sends mouseenter too often; see:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n    // for the description of the bug (it existed in older Chrome versions as well).\n    jQuery.each({\n        mouseenter: 'mouseover',\n        mouseleave: 'mouseout',\n        pointerenter: 'pointerover',\n        pointerleave: 'pointerout'\n    }, function (orig, fix) {\n        jQuery.event.special[orig] = {\n            delegateType: fix,\n            bindType: fix,\n            handle: function (event) {\n                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;\n                // For mouseenter/leave call the handler if related is outside the target.\n                // NB: No relatedTarget if the mouse left/entered the browser window\n                if (!related || related !== target && !jQuery.contains(target, related)) {\n                    event.type = handleObj.origType;\n                    ret = handleObj.handler.apply(this, arguments);\n                    event.type = fix;\n                }\n                return ret;\n            }\n        };\n    });\n    jQuery.fn.extend({\n        on: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn);\n        },\n        one: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn, 1);\n        },\n        off: function (types, selector, fn) {\n            var handleObj, type;\n            if (types && types.preventDefault && types.handleObj) {\n                // ( event )  dispatched jQuery.Event\n                handleObj = types.handleObj;\n                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n                return this;\n            }\n            if (typeof types === 'object') {\n                // ( types-object [, selector] )\n                for (type in types) {\n                    this.off(type, selector, types[type]);\n                }\n                return this;\n            }\n            if (selector === false || typeof selector === 'function') {\n                // ( types [, fn] )\n                fn = selector;\n                selector = undefined;\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            }\n            return this.each(function () {\n                jQuery.event.remove(this, types, fn, selector);\n            });\n        }\n    });\n    var\n        /* eslint-disable max-len */\n        // See https://github.com/eslint/eslint/issues/3229\n        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n        /* eslint-enable */\n        // Support: IE <=10 - 11, Edge 12 - 13\n        // In IE/Edge using regex groups here causes severe slowdowns.\n        // See https://connect.microsoft.com/IE/feedback/details/1736512/\n        rnoInnerhtml = /<script|<style|<link/i,\n        // checked=\"checked\" or checked\n        rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i, rscriptTypeMasked = /^true\\/(.*)/, rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n    // Prefer a tbody over its parent table for containing new rows\n    function manipulationTarget(elem, content) {\n        if (nodeName(elem, 'table') && nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')) {\n            return jQuery('>tbody', elem)[0] || elem;\n        }\n        return elem;\n    }\n    // Replace/restore the type attribute of script elements for safe DOM manipulation\n    function disableScript(elem) {\n        elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;\n        return elem;\n    }\n    function restoreScript(elem) {\n        var match = rscriptTypeMasked.exec(elem.type);\n        if (match) {\n            elem.type = match[1];\n        } else {\n            elem.removeAttribute('type');\n        }\n        return elem;\n    }\n    function cloneCopyEvent(src, dest) {\n        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n        if (dest.nodeType !== 1) {\n            return;\n        }\n        // 1. Copy private data: events, handlers, etc.\n        if (dataPriv.hasData(src)) {\n            pdataOld = dataPriv.access(src);\n            pdataCur = dataPriv.set(dest, pdataOld);\n            events = pdataOld.events;\n            if (events) {\n                delete pdataCur.handle;\n                pdataCur.events = {};\n                for (type in events) {\n                    for (i = 0, l = events[type].length; i < l; i++) {\n                        jQuery.event.add(dest, type, events[type][i]);\n                    }\n                }\n            }\n        }\n        // 2. Copy user data\n        if (dataUser.hasData(src)) {\n            udataOld = dataUser.access(src);\n            udataCur = jQuery.extend({}, udataOld);\n            dataUser.set(dest, udataCur);\n        }\n    }\n    // Fix IE bugs, see support tests\n    function fixInput(src, dest) {\n        var nodeName = dest.nodeName.toLowerCase();\n        // Fails to persist the checked state of a cloned checkbox or radio button.\n        if (nodeName === 'input' && rcheckableType.test(src.type)) {\n            dest.checked = src.checked;    // Fails to return the selected option to the default selected state when cloning options\n        } else if (nodeName === 'input' || nodeName === 'textarea') {\n            dest.defaultValue = src.defaultValue;\n        }\n    }\n    function domManip(collection, args, callback, ignored) {\n        // Flatten any nested arrays\n        args = concat.apply([], args);\n        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);\n        // We can't cloneNode fragments that contain checked, in WebKit\n        if (isFunction || l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value)) {\n            return collection.each(function (index) {\n                var self = collection.eq(index);\n                if (isFunction) {\n                    args[0] = value.call(this, index, self.html());\n                }\n                domManip(self, args, callback, ignored);\n            });\n        }\n        if (l) {\n            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n            first = fragment.firstChild;\n            if (fragment.childNodes.length === 1) {\n                fragment = first;\n            }\n            // Require either new content or an interest in ignored elements to invoke the callback\n            if (first || ignored) {\n                scripts = jQuery.map(getAll(fragment, 'script'), disableScript);\n                hasScripts = scripts.length;\n                // Use the original fragment for the last item\n                // instead of the first because it can end up\n                // being emptied incorrectly in certain situations (#8070).\n                for (; i < l; i++) {\n                    node = fragment;\n                    if (i !== iNoClone) {\n                        node = jQuery.clone(node, true, true);\n                        // Keep references to cloned scripts for later restoration\n                        if (hasScripts) {\n                            // Support: Android <=4.0 only, PhantomJS 1 only\n                            // push.apply(_, arraylike) throws on ancient WebKit\n                            jQuery.merge(scripts, getAll(node, 'script'));\n                        }\n                    }\n                    callback.call(collection[i], node, i);\n                }\n                if (hasScripts) {\n                    doc = scripts[scripts.length - 1].ownerDocument;\n                    // Reenable scripts\n                    jQuery.map(scripts, restoreScript);\n                    // Evaluate executable scripts on first document insertion\n                    for (i = 0; i < hasScripts; i++) {\n                        node = scripts[i];\n                        if (rscriptType.test(node.type || '') && !dataPriv.access(node, 'globalEval') && jQuery.contains(doc, node)) {\n                            if (node.src) {\n                                // Optional AJAX dependency, but won't run scripts if not present\n                                if (jQuery._evalUrl) {\n                                    jQuery._evalUrl(node.src);\n                                }\n                            } else {\n                                DOMEval(node.textContent.replace(rcleanScript, ''), doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return collection;\n    }\n    function remove(elem, selector, keepData) {\n        var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0;\n        for (; (node = nodes[i]) != null; i++) {\n            if (!keepData && node.nodeType === 1) {\n                jQuery.cleanData(getAll(node));\n            }\n            if (node.parentNode) {\n                if (keepData && jQuery.contains(node.ownerDocument, node)) {\n                    setGlobalEval(getAll(node, 'script'));\n                }\n                node.parentNode.removeChild(node);\n            }\n        }\n        return elem;\n    }\n    jQuery.extend({\n        htmlPrefilter: function (html) {\n            return html.replace(rxhtmlTag, '<$1></$2>');\n        },\n        clone: function (elem, dataAndEvents, deepDataAndEvents) {\n            var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = jQuery.contains(elem.ownerDocument, elem);\n            // Fix IE cloning issues\n            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n                // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n                destElements = getAll(clone);\n                srcElements = getAll(elem);\n                for (i = 0, l = srcElements.length; i < l; i++) {\n                    fixInput(srcElements[i], destElements[i]);\n                }\n            }\n            // Copy the events from the original to the clone\n            if (dataAndEvents) {\n                if (deepDataAndEvents) {\n                    srcElements = srcElements || getAll(elem);\n                    destElements = destElements || getAll(clone);\n                    for (i = 0, l = srcElements.length; i < l; i++) {\n                        cloneCopyEvent(srcElements[i], destElements[i]);\n                    }\n                } else {\n                    cloneCopyEvent(elem, clone);\n                }\n            }\n            // Preserve script evaluation history\n            destElements = getAll(clone, 'script');\n            if (destElements.length > 0) {\n                setGlobalEval(destElements, !inPage && getAll(elem, 'script'));\n            }\n            // Return the cloned set\n            return clone;\n        },\n        cleanData: function (elems) {\n            var data, elem, type, special = jQuery.event.special, i = 0;\n            for (; (elem = elems[i]) !== undefined; i++) {\n                if (acceptData(elem)) {\n                    if (data = elem[dataPriv.expando]) {\n                        if (data.events) {\n                            for (type in data.events) {\n                                if (special[type]) {\n                                    jQuery.event.remove(elem, type);    // This is a shortcut to avoid jQuery.event.remove's overhead\n                                } else {\n                                    jQuery.removeEvent(elem, type, data.handle);\n                                }\n                            }\n                        }\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataPriv.expando] = undefined;\n                    }\n                    if (elem[dataUser.expando]) {\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataUser.expando] = undefined;\n                    }\n                }\n            }\n        }\n    });\n    jQuery.fn.extend({\n        detach: function (selector) {\n            return remove(this, selector, true);\n        },\n        remove: function (selector) {\n            return remove(this, selector);\n        },\n        text: function (value) {\n            return access(this, function (value) {\n                return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                        this.textContent = value;\n                    }\n                });\n            }, null, value, arguments.length);\n        },\n        append: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.appendChild(elem);\n                }\n            });\n        },\n        prepend: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.insertBefore(elem, target.firstChild);\n                }\n            });\n        },\n        before: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this);\n                }\n            });\n        },\n        after: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this.nextSibling);\n                }\n            });\n        },\n        empty: function () {\n            var elem, i = 0;\n            for (; (elem = this[i]) != null; i++) {\n                if (elem.nodeType === 1) {\n                    // Prevent memory leaks\n                    jQuery.cleanData(getAll(elem, false));\n                    // Remove any remaining nodes\n                    elem.textContent = '';\n                }\n            }\n            return this;\n        },\n        clone: function (dataAndEvents, deepDataAndEvents) {\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n            return this.map(function () {\n                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n            });\n        },\n        html: function (value) {\n            return access(this, function (value) {\n                var elem = this[0] || {}, i = 0, l = this.length;\n                if (value === undefined && elem.nodeType === 1) {\n                    return elem.innerHTML;\n                }\n                // See if we can take a shortcut and just use innerHTML\n                if (typeof value === 'string' && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase()]) {\n                    value = jQuery.htmlPrefilter(value);\n                    try {\n                        for (; i < l; i++) {\n                            elem = this[i] || {};\n                            // Remove element nodes and prevent memory leaks\n                            if (elem.nodeType === 1) {\n                                jQuery.cleanData(getAll(elem, false));\n                                elem.innerHTML = value;\n                            }\n                        }\n                        elem = 0;    // If using innerHTML throws an exception, use the fallback method\n                    } catch (e) {\n                    }\n                }\n                if (elem) {\n                    this.empty().append(value);\n                }\n            }, null, value, arguments.length);\n        },\n        replaceWith: function () {\n            var ignored = [];\n            // Make the changes, replacing each non-ignored context element with the new content\n            return domManip(this, arguments, function (elem) {\n                var parent = this.parentNode;\n                if (jQuery.inArray(this, ignored) < 0) {\n                    jQuery.cleanData(getAll(this));\n                    if (parent) {\n                        parent.replaceChild(elem, this);\n                    }\n                }    // Force callback invocation\n            }, ignored);\n        }\n    });\n    jQuery.each({\n        appendTo: 'append',\n        prependTo: 'prepend',\n        insertBefore: 'before',\n        insertAfter: 'after',\n        replaceAll: 'replaceWith'\n    }, function (name, original) {\n        jQuery.fn[name] = function (selector) {\n            var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n            for (; i <= last; i++) {\n                elems = i === last ? this : this.clone(true);\n                jQuery(insert[i])[original](elems);\n                // Support: Android <=4.0 only, PhantomJS 1 only\n                // .get() because push.apply(_, arraylike) throws on ancient WebKit\n                push.apply(ret, elems.get());\n            }\n            return this.pushStack(ret);\n        };\n    });\n    var rmargin = /^margin/;\n    var rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');\n    var getStyles = function (elem) {\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        var view = elem.ownerDocument.defaultView;\n        if (!view || !view.opener) {\n            view = window;\n        }\n        return view.getComputedStyle(elem);\n    };\n    (function () {\n        // Executing both pixelPosition & boxSizingReliable tests require only one layout\n        // so they're executed at the same time to save the second computation.\n        function computeStyleTests() {\n            // This is a singleton, we need to execute it only once\n            if (!div) {\n                return;\n            }\n            div.style.cssText = 'box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';\n            div.innerHTML = '';\n            documentElement.appendChild(container);\n            var divStyle = window.getComputedStyle(div);\n            pixelPositionVal = divStyle.top !== '1%';\n            // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n            reliableMarginLeftVal = divStyle.marginLeft === '2px';\n            boxSizingReliableVal = divStyle.width === '4px';\n            // Support: Android 4.0 - 4.3 only\n            // Some styles come back with percentage values, even though they shouldn't\n            div.style.marginRight = '50%';\n            pixelMarginRightVal = divStyle.marginRight === '4px';\n            documentElement.removeChild(container);\n            // Nullify the div so it wouldn't be stored in the memory and\n            // it will also be a sign that checks already performed\n            div = null;\n        }\n        var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container = document.createElement('div'), div = document.createElement('div');\n        // Finish early in limited (non-browser) environments\n        if (!div.style) {\n            return;\n        }\n        // Support: IE <=9 - 11 only\n        // Style of cloned element affects source element cloned (#8908)\n        div.style.backgroundClip = 'content-box';\n        div.cloneNode(true).style.backgroundClip = '';\n        support.clearCloneStyle = div.style.backgroundClip === 'content-box';\n        container.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';\n        container.appendChild(div);\n        jQuery.extend(support, {\n            pixelPosition: function () {\n                computeStyleTests();\n                return pixelPositionVal;\n            },\n            boxSizingReliable: function () {\n                computeStyleTests();\n                return boxSizingReliableVal;\n            },\n            pixelMarginRight: function () {\n                computeStyleTests();\n                return pixelMarginRightVal;\n            },\n            reliableMarginLeft: function () {\n                computeStyleTests();\n                return reliableMarginLeftVal;\n            }\n        });\n    }());\n    function curCSS(elem, name, computed) {\n        var width, minWidth, maxWidth, ret,\n            // Support: Firefox 51+\n            // Retrieving style before computed somehow\n            // fixes an issue with getting wrong values\n            // on detached elements\n            style = elem.style;\n        computed = computed || getStyles(elem);\n        // getPropertyValue is needed for:\n        //   .css('filter') (IE 9 only, #12537)\n        //   .css('--customProperty) (#3144)\n        if (computed) {\n            ret = computed.getPropertyValue(name) || computed[name];\n            if (ret === '' && !jQuery.contains(elem.ownerDocument, elem)) {\n                ret = jQuery.style(elem, name);\n            }\n            // A tribute to the \"awesome hack by Dean Edwards\"\n            // Android Browser returns percentage for some values,\n            // but width seems to be reliably pixels.\n            // This is against the CSSOM draft spec:\n            // https://drafts.csswg.org/cssom/#resolved-values\n            if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {\n                // Remember the original values\n                width = style.width;\n                minWidth = style.minWidth;\n                maxWidth = style.maxWidth;\n                // Put in the new values to get a computed value out\n                style.minWidth = style.maxWidth = style.width = ret;\n                ret = computed.width;\n                // Revert the changed values\n                style.width = width;\n                style.minWidth = minWidth;\n                style.maxWidth = maxWidth;\n            }\n        }\n        return ret !== undefined ? // Support: IE <=9 - 11 only\n        // IE returns zIndex value as an integer.\n        ret + '' : ret;\n    }\n    function addGetHookIf(conditionFn, hookFn) {\n        // Define the hook, we'll check on the first run if it's really needed.\n        return {\n            get: function () {\n                if (conditionFn()) {\n                    // Hook not needed (or it's not possible to use it due\n                    // to missing dependency), remove it.\n                    delete this.get;\n                    return;\n                }\n                // Hook needed; redefine it so that the support test is not executed again.\n                return (this.get = hookFn).apply(this, arguments);\n            }\n        };\n    }\n    var\n        // Swappable if display is none or starts with table\n        // except \"table\", \"table-cell\", or \"table-caption\"\n        // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n        rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = {\n            position: 'absolute',\n            visibility: 'hidden',\n            display: 'block'\n        }, cssNormalTransform = {\n            letterSpacing: '0',\n            fontWeight: '400'\n        }, cssPrefixes = [\n            'Webkit',\n            'Moz',\n            'ms'\n        ], emptyStyle = document.createElement('div').style;\n    // Return a css property mapped to a potentially vendor prefixed property\n    function vendorPropName(name) {\n        // Shortcut for names that are not vendor prefixed\n        if (name in emptyStyle) {\n            return name;\n        }\n        // Check for vendor prefixed names\n        var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;\n        while (i--) {\n            name = cssPrefixes[i] + capName;\n            if (name in emptyStyle) {\n                return name;\n            }\n        }\n    }\n    // Return a property mapped along what jQuery.cssProps suggests or to\n    // a vendor prefixed property.\n    function finalPropName(name) {\n        var ret = jQuery.cssProps[name];\n        if (!ret) {\n            ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n        }\n        return ret;\n    }\n    function setPositiveNumber(elem, value, subtract) {\n        // Any relative (+/-) values have already been\n        // normalized at this point\n        var matches = rcssNum.exec(value);\n        return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px') : value;\n    }\n    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n        var i, val = 0;\n        // If we already have the right measurement, avoid augmentation\n        if (extra === (isBorderBox ? 'border' : 'content')) {\n            i = 4;    // Otherwise initialize for horizontal or vertical properties\n        } else {\n            i = name === 'width' ? 1 : 0;\n        }\n        for (; i < 4; i += 2) {\n            // Both box models exclude margin, so add it if we want it\n            if (extra === 'margin') {\n                val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n            }\n            if (isBorderBox) {\n                // border-box includes padding, so remove it if we want content\n                if (extra === 'content') {\n                    val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                }\n                // At this point, extra isn't border nor margin, so remove border\n                if (extra !== 'margin') {\n                    val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            } else {\n                // At this point, extra isn't content, so add padding\n                val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                // At this point, extra isn't content nor padding, so add border\n                if (extra !== 'padding') {\n                    val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            }\n        }\n        return val;\n    }\n    function getWidthOrHeight(elem, name, extra) {\n        // Start with computed style\n        var valueIsBorderBox, styles = getStyles(elem), val = curCSS(elem, name, styles), isBorderBox = jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n        // Check for style in case a browser which returns unreliable values\n        // for getComputedStyle silently falls back to the reliable elem.style\n        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);\n        // Fall back to offsetWidth/Height when value is \"auto\"\n        // This happens for inline elements with no explicit setting (gh-3571)\n        if (val === 'auto') {\n            val = elem['offset' + name[0].toUpperCase() + name.slice(1)];\n        }\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n        // Use the active box-sizing model to add/subtract irrelevant styles\n        return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';\n    }\n    jQuery.extend({\n        // Add in style property hooks for overriding the default\n        // behavior of getting and setting a style property\n        cssHooks: {\n            opacity: {\n                get: function (elem, computed) {\n                    if (computed) {\n                        // We should always get a number back from opacity\n                        var ret = curCSS(elem, 'opacity');\n                        return ret === '' ? '1' : ret;\n                    }\n                }\n            }\n        },\n        // Don't automatically add \"px\" to these possibly-unitless properties\n        cssNumber: {\n            'animationIterationCount': true,\n            'columnCount': true,\n            'fillOpacity': true,\n            'flexGrow': true,\n            'flexShrink': true,\n            'fontWeight': true,\n            'lineHeight': true,\n            'opacity': true,\n            'order': true,\n            'orphans': true,\n            'widows': true,\n            'zIndex': true,\n            'zoom': true\n        },\n        // Add in properties whose names you wish to fix before\n        // setting or getting the value\n        cssProps: { 'float': 'cssFloat' },\n        // Get and set the style property on a DOM Node\n        style: function (elem, name, value, extra) {\n            // Don't set styles on text and comment nodes\n            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n                return;\n            }\n            // Make sure that we're working with the right name\n            var ret, type, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;\n            // Make sure that we're working with the right name. We don't\n            // want to query the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Gets hook for the prefixed version, then unprefixed version\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // Check if we're setting a value\n            if (value !== undefined) {\n                type = typeof value;\n                // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n                if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {\n                    value = adjustCSS(elem, name, ret);\n                    // Fixes bug #9237\n                    type = 'number';\n                }\n                // Make sure that null and NaN values aren't set (#7116)\n                if (value == null || value !== value) {\n                    return;\n                }\n                // If a number was passed in, add the unit (except for certain CSS properties)\n                if (type === 'number') {\n                    value += ret && ret[3] || (jQuery.cssNumber[origName] ? '' : 'px');\n                }\n                // background-* props affect original clone's values\n                if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {\n                    style[name] = 'inherit';\n                }\n                // If a hook was provided, use that value, otherwise just set the specified value\n                if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n                    if (isCustomProp) {\n                        style.setProperty(name, value);\n                    } else {\n                        style[name] = value;\n                    }\n                }\n            } else {\n                // If a hook was provided get the non-computed value from there\n                if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n                    return ret;\n                }\n                // Otherwise just get the value from the style object\n                return style[name];\n            }\n        },\n        css: function (elem, name, extra, styles) {\n            var val, num, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name);\n            // Make sure that we're working with the right name. We don't\n            // want to modify the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Try prefixed name followed by the unprefixed name\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // If a hook was provided get the computed value from there\n            if (hooks && 'get' in hooks) {\n                val = hooks.get(elem, true, extra);\n            }\n            // Otherwise, if a way to get the computed value exists, use that\n            if (val === undefined) {\n                val = curCSS(elem, name, styles);\n            }\n            // Convert \"normal\" to computed value\n            if (val === 'normal' && name in cssNormalTransform) {\n                val = cssNormalTransform[name];\n            }\n            // Make numeric if forced or a qualifier was provided and val looks numeric\n            if (extra === '' || extra) {\n                num = parseFloat(val);\n                return extra === true || isFinite(num) ? num || 0 : val;\n            }\n            return val;\n        }\n    });\n    jQuery.each([\n        'height',\n        'width'\n    ], function (i, name) {\n        jQuery.cssHooks[name] = {\n            get: function (elem, computed, extra) {\n                if (computed) {\n                    // Certain elements can have dimension info if we invisibly show them\n                    // but it must have a current display style that would benefit\n                    return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n                        return getWidthOrHeight(elem, name, extra);\n                    }) : getWidthOrHeight(elem, name, extra);\n                }\n            },\n            set: function (elem, value, extra) {\n                var matches, styles = extra && getStyles(elem), subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);\n                // Convert to pixels if value adjustment is needed\n                if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {\n                    elem.style[name] = value;\n                    value = jQuery.css(elem, name);\n                }\n                return setPositiveNumber(elem, value, subtract);\n            }\n        };\n    });\n    jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n        if (computed) {\n            return (parseFloat(curCSS(elem, 'marginLeft')) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function () {\n                return elem.getBoundingClientRect().left;\n            })) + 'px';\n        }\n    });\n    // These hooks are used by animate to expand properties\n    jQuery.each({\n        margin: '',\n        padding: '',\n        border: 'Width'\n    }, function (prefix, suffix) {\n        jQuery.cssHooks[prefix + suffix] = {\n            expand: function (value) {\n                var i = 0, expanded = {},\n                    // Assumes a single number if not a string\n                    parts = typeof value === 'string' ? value.split(' ') : [value];\n                for (; i < 4; i++) {\n                    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n                }\n                return expanded;\n            }\n        };\n        if (!rmargin.test(prefix)) {\n            jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n        }\n    });\n    jQuery.fn.extend({\n        css: function (name, value) {\n            return access(this, function (elem, name, value) {\n                var styles, len, map = {}, i = 0;\n                if (Array.isArray(name)) {\n                    styles = getStyles(elem);\n                    len = name.length;\n                    for (; i < len; i++) {\n                        map[name[i]] = jQuery.css(elem, name[i], false, styles);\n                    }\n                    return map;\n                }\n                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n            }, name, value, arguments.length > 1);\n        }\n    });\n    function Tween(elem, options, prop, end, easing) {\n        return new Tween.prototype.init(elem, options, prop, end, easing);\n    }\n    jQuery.Tween = Tween;\n    Tween.prototype = {\n        constructor: Tween,\n        init: function (elem, options, prop, end, easing, unit) {\n            this.elem = elem;\n            this.prop = prop;\n            this.easing = easing || jQuery.easing._default;\n            this.options = options;\n            this.start = this.now = this.cur();\n            this.end = end;\n            this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');\n        },\n        cur: function () {\n            var hooks = Tween.propHooks[this.prop];\n            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n        },\n        run: function (percent) {\n            var eased, hooks = Tween.propHooks[this.prop];\n            if (this.options.duration) {\n                this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n            } else {\n                this.pos = eased = percent;\n            }\n            this.now = (this.end - this.start) * eased + this.start;\n            if (this.options.step) {\n                this.options.step.call(this.elem, this.now, this);\n            }\n            if (hooks && hooks.set) {\n                hooks.set(this);\n            } else {\n                Tween.propHooks._default.set(this);\n            }\n            return this;\n        }\n    };\n    Tween.prototype.init.prototype = Tween.prototype;\n    Tween.propHooks = {\n        _default: {\n            get: function (tween) {\n                var result;\n                // Use a property on the element directly when it is not a DOM element,\n                // or when there is no matching style property that exists.\n                if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n                    return tween.elem[tween.prop];\n                }\n                // Passing an empty string as a 3rd parameter to .css will automatically\n                // attempt a parseFloat and fallback to a string if the parse fails.\n                // Simple values such as \"10px\" are parsed to Float;\n                // complex values such as \"rotate(1rad)\" are returned as-is.\n                result = jQuery.css(tween.elem, tween.prop, '');\n                // Empty strings, null, undefined and \"auto\" are converted to 0.\n                return !result || result === 'auto' ? 0 : result;\n            },\n            set: function (tween) {\n                // Use step hook for back compat.\n                // Use cssHook if its there.\n                // Use .style if available and use plain properties where available.\n                if (jQuery.fx.step[tween.prop]) {\n                    jQuery.fx.step[tween.prop](tween);\n                } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n                } else {\n                    tween.elem[tween.prop] = tween.now;\n                }\n            }\n        }\n    };\n    // Support: IE <=9 only\n    // Panic based approach to setting things on disconnected nodes\n    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n        set: function (tween) {\n            if (tween.elem.nodeType && tween.elem.parentNode) {\n                tween.elem[tween.prop] = tween.now;\n            }\n        }\n    };\n    jQuery.easing = {\n        linear: function (p) {\n            return p;\n        },\n        swing: function (p) {\n            return 0.5 - Math.cos(p * Math.PI) / 2;\n        },\n        _default: 'swing'\n    };\n    jQuery.fx = Tween.prototype.init;\n    // Back compat <1.8 extension point\n    jQuery.fx.step = {};\n    var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;\n    function schedule() {\n        if (inProgress) {\n            if (document.hidden === false && window.requestAnimationFrame) {\n                window.requestAnimationFrame(schedule);\n            } else {\n                window.setTimeout(schedule, jQuery.fx.interval);\n            }\n            jQuery.fx.tick();\n        }\n    }\n    // Animations created synchronously will run synchronously\n    function createFxNow() {\n        window.setTimeout(function () {\n            fxNow = undefined;\n        });\n        return fxNow = jQuery.now();\n    }\n    // Generate parameters to create a standard animation\n    function genFx(type, includeWidth) {\n        var which, i = 0, attrs = { height: type };\n        // If we include width, step value is 1 to do all cssExpand values,\n        // otherwise step value is 2 to skip over Left and Right\n        includeWidth = includeWidth ? 1 : 0;\n        for (; i < 4; i += 2 - includeWidth) {\n            which = cssExpand[i];\n            attrs['margin' + which] = attrs['padding' + which] = type;\n        }\n        if (includeWidth) {\n            attrs.opacity = attrs.width = type;\n        }\n        return attrs;\n    }\n    function createTween(value, prop, animation) {\n        var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']), index = 0, length = collection.length;\n        for (; index < length; index++) {\n            if (tween = collection[index].call(animation, prop, value)) {\n                // We're done with this property\n                return tween;\n            }\n        }\n    }\n    function defaultPrefilter(elem, props, opts) {\n        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = 'width' in props || 'height' in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, 'fxshow');\n        // Queue-skipping animations hijack the fx hooks\n        if (!opts.queue) {\n            hooks = jQuery._queueHooks(elem, 'fx');\n            if (hooks.unqueued == null) {\n                hooks.unqueued = 0;\n                oldfire = hooks.empty.fire;\n                hooks.empty.fire = function () {\n                    if (!hooks.unqueued) {\n                        oldfire();\n                    }\n                };\n            }\n            hooks.unqueued++;\n            anim.always(function () {\n                // Ensure the complete handler is called before this completes\n                anim.always(function () {\n                    hooks.unqueued--;\n                    if (!jQuery.queue(elem, 'fx').length) {\n                        hooks.empty.fire();\n                    }\n                });\n            });\n        }\n        // Detect show/hide animations\n        for (prop in props) {\n            value = props[prop];\n            if (rfxtypes.test(value)) {\n                delete props[prop];\n                toggle = toggle || value === 'toggle';\n                if (value === (hidden ? 'hide' : 'show')) {\n                    // Pretend to be hidden if this is a \"show\" and\n                    // there is still data from a stopped show/hide\n                    if (value === 'show' && dataShow && dataShow[prop] !== undefined) {\n                        hidden = true;    // Ignore all other no-op show/hide data\n                    } else {\n                        continue;\n                    }\n                }\n                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n            }\n        }\n        // Bail out if this is a no-op like .hide().hide()\n        propTween = !jQuery.isEmptyObject(props);\n        if (!propTween && jQuery.isEmptyObject(orig)) {\n            return;\n        }\n        // Restrict \"overflow\" and \"display\" styles during box animations\n        if (isBox && elem.nodeType === 1) {\n            // Support: IE <=9 - 11, Edge 12 - 13\n            // Record all 3 overflow attributes because IE does not infer the shorthand\n            // from identically-valued overflowX and overflowY\n            opts.overflow = [\n                style.overflow,\n                style.overflowX,\n                style.overflowY\n            ];\n            // Identify a display type, preferring old show/hide data over the CSS cascade\n            restoreDisplay = dataShow && dataShow.display;\n            if (restoreDisplay == null) {\n                restoreDisplay = dataPriv.get(elem, 'display');\n            }\n            display = jQuery.css(elem, 'display');\n            if (display === 'none') {\n                if (restoreDisplay) {\n                    display = restoreDisplay;\n                } else {\n                    // Get nonempty value(s) by temporarily forcing visibility\n                    showHide([elem], true);\n                    restoreDisplay = elem.style.display || restoreDisplay;\n                    display = jQuery.css(elem, 'display');\n                    showHide([elem]);\n                }\n            }\n            // Animate inline elements as inline-block\n            if (display === 'inline' || display === 'inline-block' && restoreDisplay != null) {\n                if (jQuery.css(elem, 'float') === 'none') {\n                    // Restore the original display value at the end of pure show/hide animations\n                    if (!propTween) {\n                        anim.done(function () {\n                            style.display = restoreDisplay;\n                        });\n                        if (restoreDisplay == null) {\n                            display = style.display;\n                            restoreDisplay = display === 'none' ? '' : display;\n                        }\n                    }\n                    style.display = 'inline-block';\n                }\n            }\n        }\n        if (opts.overflow) {\n            style.overflow = 'hidden';\n            anim.always(function () {\n                style.overflow = opts.overflow[0];\n                style.overflowX = opts.overflow[1];\n                style.overflowY = opts.overflow[2];\n            });\n        }\n        // Implement show/hide animations\n        propTween = false;\n        for (prop in orig) {\n            // General show/hide setup for this element animation\n            if (!propTween) {\n                if (dataShow) {\n                    if ('hidden' in dataShow) {\n                        hidden = dataShow.hidden;\n                    }\n                } else {\n                    dataShow = dataPriv.access(elem, 'fxshow', { display: restoreDisplay });\n                }\n                // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n                if (toggle) {\n                    dataShow.hidden = !hidden;\n                }\n                // Show elements before animating them\n                if (hidden) {\n                    showHide([elem], true);\n                }\n                /* eslint-disable no-loop-func */\n                anim.done(function () {\n                    /* eslint-enable no-loop-func */\n                    // The final step of a \"hide\" animation is actually hiding the element\n                    if (!hidden) {\n                        showHide([elem]);\n                    }\n                    dataPriv.remove(elem, 'fxshow');\n                    for (prop in orig) {\n                        jQuery.style(elem, prop, orig[prop]);\n                    }\n                });\n            }\n            // Per-property setup\n            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n            if (!(prop in dataShow)) {\n                dataShow[prop] = propTween.start;\n                if (hidden) {\n                    propTween.end = propTween.start;\n                    propTween.start = 0;\n                }\n            }\n        }\n    }\n    function propFilter(props, specialEasing) {\n        var index, name, easing, value, hooks;\n        // camelCase, specialEasing and expand cssHook pass\n        for (index in props) {\n            name = jQuery.camelCase(index);\n            easing = specialEasing[name];\n            value = props[index];\n            if (Array.isArray(value)) {\n                easing = value[1];\n                value = props[index] = value[0];\n            }\n            if (index !== name) {\n                props[name] = value;\n                delete props[index];\n            }\n            hooks = jQuery.cssHooks[name];\n            if (hooks && 'expand' in hooks) {\n                value = hooks.expand(value);\n                delete props[name];\n                // Not quite $.extend, this won't overwrite existing keys.\n                // Reusing 'index' because we have the correct \"name\"\n                for (index in value) {\n                    if (!(index in props)) {\n                        props[index] = value[index];\n                        specialEasing[index] = easing;\n                    }\n                }\n            } else {\n                specialEasing[name] = easing;\n            }\n        }\n    }\n    function Animation(elem, properties, options) {\n        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function () {\n                // Don't match elem in the :animated selector\n                delete tick.elem;\n            }), tick = function () {\n                if (stopped) {\n                    return false;\n                }\n                var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n                    // Support: Android 2.3 only\n                    // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n                    temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;\n                for (; index < length; index++) {\n                    animation.tweens[index].run(percent);\n                }\n                deferred.notifyWith(elem, [\n                    animation,\n                    percent,\n                    remaining\n                ]);\n                // If there's more to do, yield\n                if (percent < 1 && length) {\n                    return remaining;\n                }\n                // If this was an empty animation, synthesize a final progress notification\n                if (!length) {\n                    deferred.notifyWith(elem, [\n                        animation,\n                        1,\n                        0\n                    ]);\n                }\n                // Resolve the animation and report its conclusion\n                deferred.resolveWith(elem, [animation]);\n                return false;\n            }, animation = deferred.promise({\n                elem: elem,\n                props: jQuery.extend({}, properties),\n                opts: jQuery.extend(true, {\n                    specialEasing: {},\n                    easing: jQuery.easing._default\n                }, options),\n                originalProperties: properties,\n                originalOptions: options,\n                startTime: fxNow || createFxNow(),\n                duration: options.duration,\n                tweens: [],\n                createTween: function (prop, end) {\n                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n                    animation.tweens.push(tween);\n                    return tween;\n                },\n                stop: function (gotoEnd) {\n                    var index = 0,\n                        // If we are going to the end, we want to run all the tweens\n                        // otherwise we skip this part\n                        length = gotoEnd ? animation.tweens.length : 0;\n                    if (stopped) {\n                        return this;\n                    }\n                    stopped = true;\n                    for (; index < length; index++) {\n                        animation.tweens[index].run(1);\n                    }\n                    // Resolve when we played the last frame; otherwise, reject\n                    if (gotoEnd) {\n                        deferred.notifyWith(elem, [\n                            animation,\n                            1,\n                            0\n                        ]);\n                        deferred.resolveWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    } else {\n                        deferred.rejectWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    }\n                    return this;\n                }\n            }), props = animation.props;\n        propFilter(props, animation.opts.specialEasing);\n        for (; index < length; index++) {\n            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n            if (result) {\n                if (jQuery.isFunction(result.stop)) {\n                    jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);\n                }\n                return result;\n            }\n        }\n        jQuery.map(props, createTween, animation);\n        if (jQuery.isFunction(animation.opts.start)) {\n            animation.opts.start.call(elem, animation);\n        }\n        // Attach callbacks from options\n        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n        jQuery.fx.timer(jQuery.extend(tick, {\n            elem: elem,\n            anim: animation,\n            queue: animation.opts.queue\n        }));\n        return animation;\n    }\n    jQuery.Animation = jQuery.extend(Animation, {\n        tweeners: {\n            '*': [function (prop, value) {\n                    var tween = this.createTween(prop, value);\n                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n                    return tween;\n                }]\n        },\n        tweener: function (props, callback) {\n            if (jQuery.isFunction(props)) {\n                callback = props;\n                props = ['*'];\n            } else {\n                props = props.match(rnothtmlwhite);\n            }\n            var prop, index = 0, length = props.length;\n            for (; index < length; index++) {\n                prop = props[index];\n                Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n                Animation.tweeners[prop].unshift(callback);\n            }\n        },\n        prefilters: [defaultPrefilter],\n        prefilter: function (callback, prepend) {\n            if (prepend) {\n                Animation.prefilters.unshift(callback);\n            } else {\n                Animation.prefilters.push(callback);\n            }\n        }\n    });\n    jQuery.speed = function (speed, easing, fn) {\n        var opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {\n            complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n            duration: speed,\n            easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n        };\n        // Go to the end state if fx are off\n        if (jQuery.fx.off) {\n            opt.duration = 0;\n        } else {\n            if (typeof opt.duration !== 'number') {\n                if (opt.duration in jQuery.fx.speeds) {\n                    opt.duration = jQuery.fx.speeds[opt.duration];\n                } else {\n                    opt.duration = jQuery.fx.speeds._default;\n                }\n            }\n        }\n        // Normalize opt.queue - true/undefined/null -> \"fx\"\n        if (opt.queue == null || opt.queue === true) {\n            opt.queue = 'fx';\n        }\n        // Queueing\n        opt.old = opt.complete;\n        opt.complete = function () {\n            if (jQuery.isFunction(opt.old)) {\n                opt.old.call(this);\n            }\n            if (opt.queue) {\n                jQuery.dequeue(this, opt.queue);\n            }\n        };\n        return opt;\n    };\n    jQuery.fn.extend({\n        fadeTo: function (speed, to, easing, callback) {\n            // Show any hidden elements after setting opacity to 0\n            return this.filter(isHiddenWithinTree).css('opacity', 0).show()    // Animate to the value specified\n.end().animate({ opacity: to }, speed, easing, callback);\n        },\n        animate: function (prop, speed, easing, callback) {\n            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function () {\n                    // Operate on a copy of prop so per-property easing won't be lost\n                    var anim = Animation(this, jQuery.extend({}, prop), optall);\n                    // Empty animations, or finishing resolves immediately\n                    if (empty || dataPriv.get(this, 'finish')) {\n                        anim.stop(true);\n                    }\n                };\n            doAnimation.finish = doAnimation;\n            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n        },\n        stop: function (type, clearQueue, gotoEnd) {\n            var stopQueue = function (hooks) {\n                var stop = hooks.stop;\n                delete hooks.stop;\n                stop(gotoEnd);\n            };\n            if (typeof type !== 'string') {\n                gotoEnd = clearQueue;\n                clearQueue = type;\n                type = undefined;\n            }\n            if (clearQueue && type !== false) {\n                this.queue(type || 'fx', []);\n            }\n            return this.each(function () {\n                var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = dataPriv.get(this);\n                if (index) {\n                    if (data[index] && data[index].stop) {\n                        stopQueue(data[index]);\n                    }\n                } else {\n                    for (index in data) {\n                        if (data[index] && data[index].stop && rrun.test(index)) {\n                            stopQueue(data[index]);\n                        }\n                    }\n                }\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n                        timers[index].anim.stop(gotoEnd);\n                        dequeue = false;\n                        timers.splice(index, 1);\n                    }\n                }\n                // Start the next in the queue if the last step wasn't forced.\n                // Timers currently will call their complete callbacks, which\n                // will dequeue but only if they were gotoEnd.\n                if (dequeue || !gotoEnd) {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        finish: function (type) {\n            if (type !== false) {\n                type = type || 'fx';\n            }\n            return this.each(function () {\n                var index, data = dataPriv.get(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;\n                // Enable finishing flag on private data\n                data.finish = true;\n                // Empty the queue first\n                jQuery.queue(this, type, []);\n                if (hooks && hooks.stop) {\n                    hooks.stop.call(this, true);\n                }\n                // Look for any active animations, and finish them\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && timers[index].queue === type) {\n                        timers[index].anim.stop(true);\n                        timers.splice(index, 1);\n                    }\n                }\n                // Look for any animations in the old queue and finish them\n                for (index = 0; index < length; index++) {\n                    if (queue[index] && queue[index].finish) {\n                        queue[index].finish.call(this);\n                    }\n                }\n                // Turn off finishing flag\n                delete data.finish;\n            });\n        }\n    });\n    jQuery.each([\n        'toggle',\n        'show',\n        'hide'\n    ], function (i, name) {\n        var cssFn = jQuery.fn[name];\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n        };\n    });\n    // Generate shortcuts for custom animations\n    jQuery.each({\n        slideDown: genFx('show'),\n        slideUp: genFx('hide'),\n        slideToggle: genFx('toggle'),\n        fadeIn: { opacity: 'show' },\n        fadeOut: { opacity: 'hide' },\n        fadeToggle: { opacity: 'toggle' }\n    }, function (name, props) {\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return this.animate(props, speed, easing, callback);\n        };\n    });\n    jQuery.timers = [];\n    jQuery.fx.tick = function () {\n        var timer, i = 0, timers = jQuery.timers;\n        fxNow = jQuery.now();\n        for (; i < timers.length; i++) {\n            timer = timers[i];\n            // Run the timer and safely remove it when done (allowing for external removal)\n            if (!timer() && timers[i] === timer) {\n                timers.splice(i--, 1);\n            }\n        }\n        if (!timers.length) {\n            jQuery.fx.stop();\n        }\n        fxNow = undefined;\n    };\n    jQuery.fx.timer = function (timer) {\n        jQuery.timers.push(timer);\n        jQuery.fx.start();\n    };\n    jQuery.fx.interval = 13;\n    jQuery.fx.start = function () {\n        if (inProgress) {\n            return;\n        }\n        inProgress = true;\n        schedule();\n    };\n    jQuery.fx.stop = function () {\n        inProgress = null;\n    };\n    jQuery.fx.speeds = {\n        slow: 600,\n        fast: 200,\n        // Default speed\n        _default: 400\n    };\n    // Based off of the plugin by Clint Helfers, with permission.\n    // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n    jQuery.fn.delay = function (time, type) {\n        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n        type = type || 'fx';\n        return this.queue(type, function (next, hooks) {\n            var timeout = window.setTimeout(next, time);\n            hooks.stop = function () {\n                window.clearTimeout(timeout);\n            };\n        });\n    };\n    (function () {\n        var input = document.createElement('input'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));\n        input.type = 'checkbox';\n        // Support: Android <=4.3 only\n        // Default value for a checkbox should be \"on\"\n        support.checkOn = input.value !== '';\n        // Support: IE <=11 only\n        // Must access selectedIndex to make default options select\n        support.optSelected = opt.selected;\n        // Support: IE <=11 only\n        // An input loses its value after becoming a radio\n        input = document.createElement('input');\n        input.value = 't';\n        input.type = 'radio';\n        support.radioValue = input.value === 't';\n    }());\n    var boolHook, attrHandle = jQuery.expr.attrHandle;\n    jQuery.fn.extend({\n        attr: function (name, value) {\n            return access(this, jQuery.attr, name, value, arguments.length > 1);\n        },\n        removeAttr: function (name) {\n            return this.each(function () {\n                jQuery.removeAttr(this, name);\n            });\n        }\n    });\n    jQuery.extend({\n        attr: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set attributes on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            // Fallback to prop when attributes are not supported\n            if (typeof elem.getAttribute === 'undefined') {\n                return jQuery.prop(elem, name, value);\n            }\n            // Attribute hooks are determined by the lowercase version\n            // Grab necessary hook if one is defined\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n            }\n            if (value !== undefined) {\n                if (value === null) {\n                    jQuery.removeAttr(elem, name);\n                    return;\n                }\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                elem.setAttribute(name, value + '');\n                return value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            ret = jQuery.find.attr(elem, name);\n            // Non-existent attributes return null, we normalize to undefined\n            return ret == null ? undefined : ret;\n        },\n        attrHooks: {\n            type: {\n                set: function (elem, value) {\n                    if (!support.radioValue && value === 'radio' && nodeName(elem, 'input')) {\n                        var val = elem.value;\n                        elem.setAttribute('type', value);\n                        if (val) {\n                            elem.value = val;\n                        }\n                        return value;\n                    }\n                }\n            }\n        },\n        removeAttr: function (elem, value) {\n            var name, i = 0,\n                // Attribute names can contain non-HTML whitespace characters\n                // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n                attrNames = value && value.match(rnothtmlwhite);\n            if (attrNames && elem.nodeType === 1) {\n                while (name = attrNames[i++]) {\n                    elem.removeAttribute(name);\n                }\n            }\n        }\n    });\n    // Hooks for boolean attributes\n    boolHook = {\n        set: function (elem, value, name) {\n            if (value === false) {\n                // Remove boolean attributes when set to false\n                jQuery.removeAttr(elem, name);\n            } else {\n                elem.setAttribute(name, name);\n            }\n            return name;\n        }\n    };\n    jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n        var getter = attrHandle[name] || jQuery.find.attr;\n        attrHandle[name] = function (elem, name, isXML) {\n            var ret, handle, lowercaseName = name.toLowerCase();\n            if (!isXML) {\n                // Avoid an infinite loop by temporarily removing this function from the getter\n                handle = attrHandle[lowercaseName];\n                attrHandle[lowercaseName] = ret;\n                ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n                attrHandle[lowercaseName] = handle;\n            }\n            return ret;\n        };\n    });\n    var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;\n    jQuery.fn.extend({\n        prop: function (name, value) {\n            return access(this, jQuery.prop, name, value, arguments.length > 1);\n        },\n        removeProp: function (name) {\n            return this.each(function () {\n                delete this[jQuery.propFix[name] || name];\n            });\n        }\n    });\n    jQuery.extend({\n        prop: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set properties on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                // Fix name and attach hooks\n                name = jQuery.propFix[name] || name;\n                hooks = jQuery.propHooks[name];\n            }\n            if (value !== undefined) {\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                return elem[name] = value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            return elem[name];\n        },\n        propHooks: {\n            tabIndex: {\n                get: function (elem) {\n                    // Support: IE <=9 - 11 only\n                    // elem.tabIndex doesn't always return the\n                    // correct value when it hasn't been explicitly set\n                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n                    // Use proper attribute retrieval(#12072)\n                    var tabindex = jQuery.find.attr(elem, 'tabindex');\n                    if (tabindex) {\n                        return parseInt(tabindex, 10);\n                    }\n                    if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n                        return 0;\n                    }\n                    return -1;\n                }\n            }\n        },\n        propFix: {\n            'for': 'htmlFor',\n            'class': 'className'\n        }\n    });\n    // Support: IE <=11 only\n    // Accessing the selectedIndex property\n    // forces the browser to respect setting selected\n    // on the option\n    // The getter ensures a default option is selected\n    // when in an optgroup\n    // eslint rule \"no-unused-expressions\" is disabled for this code\n    // since it considers such accessions noop\n    if (!support.optSelected) {\n        jQuery.propHooks.selected = {\n            get: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent && parent.parentNode) {\n                    parent.parentNode.selectedIndex;\n                }\n                return null;\n            },\n            set: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent) {\n                    parent.selectedIndex;\n                    if (parent.parentNode) {\n                        parent.parentNode.selectedIndex;\n                    }\n                }\n            }\n        };\n    }\n    jQuery.each([\n        'tabIndex',\n        'readOnly',\n        'maxLength',\n        'cellSpacing',\n        'cellPadding',\n        'rowSpan',\n        'colSpan',\n        'useMap',\n        'frameBorder',\n        'contentEditable'\n    ], function () {\n        jQuery.propFix[this.toLowerCase()] = this;\n    });\n    // Strip and collapse whitespace according to HTML spec\n    // https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n    function stripAndCollapse(value) {\n        var tokens = value.match(rnothtmlwhite) || [];\n        return tokens.join(' ');\n    }\n    function getClass(elem) {\n        return elem.getAttribute && elem.getAttribute('class') || '';\n    }\n    jQuery.fn.extend({\n        addClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).addClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            if (cur.indexOf(' ' + clazz + ' ') < 0) {\n                                cur += clazz + ' ';\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).removeClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (!arguments.length) {\n                return this.attr('class', '');\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    // This expression is here for better compressibility (see addClass)\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            // Remove *all* instances\n                            while (cur.indexOf(' ' + clazz + ' ') > -1) {\n                                cur = cur.replace(' ' + clazz + ' ', ' ');\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        toggleClass: function (value, stateVal) {\n            var type = typeof value;\n            if (typeof stateVal === 'boolean' && type === 'string') {\n                return stateVal ? this.addClass(value) : this.removeClass(value);\n            }\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n                });\n            }\n            return this.each(function () {\n                var className, i, self, classNames;\n                if (type === 'string') {\n                    // Toggle individual class names\n                    i = 0;\n                    self = jQuery(this);\n                    classNames = value.match(rnothtmlwhite) || [];\n                    while (className = classNames[i++]) {\n                        // Check each className given, space separated list\n                        if (self.hasClass(className)) {\n                            self.removeClass(className);\n                        } else {\n                            self.addClass(className);\n                        }\n                    }    // Toggle whole class name\n                } else if (value === undefined || type === 'boolean') {\n                    className = getClass(this);\n                    if (className) {\n                        // Store className if set\n                        dataPriv.set(this, '__className__', className);\n                    }\n                    // If the element has a class name or if we're passed `false`,\n                    // then remove the whole classname (if there was one, the above saved it).\n                    // Otherwise bring back whatever was previously saved (if anything),\n                    // falling back to the empty string if nothing was stored.\n                    if (this.setAttribute) {\n                        this.setAttribute('class', className || value === false ? '' : dataPriv.get(this, '__className__') || '');\n                    }\n                }\n            });\n        },\n        hasClass: function (selector) {\n            var className, elem, i = 0;\n            className = ' ' + selector + ' ';\n            while (elem = this[i++]) {\n                if (elem.nodeType === 1 && (' ' + stripAndCollapse(getClass(elem)) + ' ').indexOf(className) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n    var rreturn = /\\r/g;\n    jQuery.fn.extend({\n        val: function (value) {\n            var hooks, ret, isFunction, elem = this[0];\n            if (!arguments.length) {\n                if (elem) {\n                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n                    if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {\n                        return ret;\n                    }\n                    ret = elem.value;\n                    // Handle most common string cases\n                    if (typeof ret === 'string') {\n                        return ret.replace(rreturn, '');\n                    }\n                    // Handle cases where value is null/undef or number\n                    return ret == null ? '' : ret;\n                }\n                return;\n            }\n            isFunction = jQuery.isFunction(value);\n            return this.each(function (i) {\n                var val;\n                if (this.nodeType !== 1) {\n                    return;\n                }\n                if (isFunction) {\n                    val = value.call(this, i, jQuery(this).val());\n                } else {\n                    val = value;\n                }\n                // Treat null/undefined as \"\"; convert numbers to string\n                if (val == null) {\n                    val = '';\n                } else if (typeof val === 'number') {\n                    val += '';\n                } else if (Array.isArray(val)) {\n                    val = jQuery.map(val, function (value) {\n                        return value == null ? '' : value + '';\n                    });\n                }\n                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n                // If set returns undefined, fall back to normal setting\n                if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {\n                    this.value = val;\n                }\n            });\n        }\n    });\n    jQuery.extend({\n        valHooks: {\n            option: {\n                get: function (elem) {\n                    var val = jQuery.find.attr(elem, 'value');\n                    return val != null ? val : // Support: IE <=10 - 11 only\n                    // option.text throws exceptions (#14686, #14858)\n                    // Strip and collapse whitespace\n                    // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n                    stripAndCollapse(jQuery.text(elem));\n                }\n            },\n            select: {\n                get: function (elem) {\n                    var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === 'select-one', values = one ? null : [], max = one ? index + 1 : options.length;\n                    if (index < 0) {\n                        i = max;\n                    } else {\n                        i = one ? index : 0;\n                    }\n                    // Loop through all the selected options\n                    for (; i < max; i++) {\n                        option = options[i];\n                        // Support: IE <=9 only\n                        // IE8-9 doesn't update selected after form reset (#2551)\n                        if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n                            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, 'optgroup'))) {\n                            // Get the specific value for the option\n                            value = jQuery(option).val();\n                            // We don't need an array for one selects\n                            if (one) {\n                                return value;\n                            }\n                            // Multi-Selects return an array\n                            values.push(value);\n                        }\n                    }\n                    return values;\n                },\n                set: function (elem, value) {\n                    var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;\n                    while (i--) {\n                        option = options[i];\n                        /* eslint-disable no-cond-assign */\n                        if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n                            optionSet = true;\n                        }    /* eslint-enable no-cond-assign */\n                    }\n                    // Force browsers to behave consistently when non-matching value is set\n                    if (!optionSet) {\n                        elem.selectedIndex = -1;\n                    }\n                    return values;\n                }\n            }\n        }\n    });\n    // Radios and checkboxes getter/setter\n    jQuery.each([\n        'radio',\n        'checkbox'\n    ], function () {\n        jQuery.valHooks[this] = {\n            set: function (elem, value) {\n                if (Array.isArray(value)) {\n                    return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n                }\n            }\n        };\n        if (!support.checkOn) {\n            jQuery.valHooks[this].get = function (elem) {\n                return elem.getAttribute('value') === null ? 'on' : elem.value;\n            };\n        }\n    });\n    // Return jQuery for attributes-only inclusion\n    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n    jQuery.extend(jQuery.event, {\n        trigger: function (event, data, elem, onlyHandlers) {\n            var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document], type = hasOwn.call(event, 'type') ? event.type : event, namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];\n            cur = tmp = elem = elem || document;\n            // Don't do events on text and comment nodes\n            if (elem.nodeType === 3 || elem.nodeType === 8) {\n                return;\n            }\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\n            if (rfocusMorph.test(type + jQuery.event.triggered)) {\n                return;\n            }\n            if (type.indexOf('.') > -1) {\n                // Namespaced trigger; create a regexp to match event type in handle()\n                namespaces = type.split('.');\n                type = namespaces.shift();\n                namespaces.sort();\n            }\n            ontype = type.indexOf(':') < 0 && 'on' + type;\n            // Caller can pass in a jQuery.Event object, Object, or just an event type string\n            event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);\n            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n            event.isTrigger = onlyHandlers ? 2 : 3;\n            event.namespace = namespaces.join('.');\n            event.rnamespace = event.namespace ? new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)') : null;\n            // Clean up the event in case it is being reused\n            event.result = undefined;\n            if (!event.target) {\n                event.target = elem;\n            }\n            // Clone any incoming data and prepend the event, creating the handler arg list\n            data = data == null ? [event] : jQuery.makeArray(data, [event]);\n            // Allow special events to draw outside the lines\n            special = jQuery.event.special[type] || {};\n            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n                return;\n            }\n            // Determine event propagation path in advance, per W3C events spec (#9951)\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n                bubbleType = special.delegateType || type;\n                if (!rfocusMorph.test(bubbleType + type)) {\n                    cur = cur.parentNode;\n                }\n                for (; cur; cur = cur.parentNode) {\n                    eventPath.push(cur);\n                    tmp = cur;\n                }\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\n                if (tmp === (elem.ownerDocument || document)) {\n                    eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n                }\n            }\n            // Fire handlers on the event path\n            i = 0;\n            while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n                event.type = i > 1 ? bubbleType : special.bindType || type;\n                // jQuery handler\n                handle = (dataPriv.get(cur, 'events') || {})[event.type] && dataPriv.get(cur, 'handle');\n                if (handle) {\n                    handle.apply(cur, data);\n                }\n                // Native handler\n                handle = ontype && cur[ontype];\n                if (handle && handle.apply && acceptData(cur)) {\n                    event.result = handle.apply(cur, data);\n                    if (event.result === false) {\n                        event.preventDefault();\n                    }\n                }\n            }\n            event.type = type;\n            // If nobody prevented the default action, do it now\n            if (!onlyHandlers && !event.isDefaultPrevented()) {\n                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n                    // Call a native DOM method on the target with the same name as the event.\n                    // Don't do default actions on window, that's where global variables be (#6170)\n                    if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n                        // Don't re-trigger an onFOO event when we call its FOO() method\n                        tmp = elem[ontype];\n                        if (tmp) {\n                            elem[ontype] = null;\n                        }\n                        // Prevent re-triggering of the same event, since we already bubbled it above\n                        jQuery.event.triggered = type;\n                        elem[type]();\n                        jQuery.event.triggered = undefined;\n                        if (tmp) {\n                            elem[ontype] = tmp;\n                        }\n                    }\n                }\n            }\n            return event.result;\n        },\n        // Piggyback on a donor event to simulate a different one\n        // Used only for `focus(in | out)` events\n        simulate: function (type, elem, event) {\n            var e = jQuery.extend(new jQuery.Event(), event, {\n                type: type,\n                isSimulated: true\n            });\n            jQuery.event.trigger(e, null, elem);\n        }\n    });\n    jQuery.fn.extend({\n        trigger: function (type, data) {\n            return this.each(function () {\n                jQuery.event.trigger(type, data, this);\n            });\n        },\n        triggerHandler: function (type, data) {\n            var elem = this[0];\n            if (elem) {\n                return jQuery.event.trigger(type, data, elem, true);\n            }\n        }\n    });\n    jQuery.each(('blur focus focusin focusout resize scroll click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup contextmenu').split(' '), function (i, name) {\n        // Handle event binding\n        jQuery.fn[name] = function (data, fn) {\n            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n        };\n    });\n    jQuery.fn.extend({\n        hover: function (fnOver, fnOut) {\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n        }\n    });\n    support.focusin = 'onfocusin' in window;\n    // Support: Firefox <=44\n    // Firefox doesn't have focus(in | out) events\n    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n    //\n    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n    // focus(in | out) events fire after focus & blur events,\n    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n    if (!support.focusin) {\n        jQuery.each({\n            focus: 'focusin',\n            blur: 'focusout'\n        }, function (orig, fix) {\n            // Attach a single capturing handler on the document while someone wants focusin/focusout\n            var handler = function (event) {\n                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n            };\n            jQuery.event.special[fix] = {\n                setup: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix);\n                    if (!attaches) {\n                        doc.addEventListener(orig, handler, true);\n                    }\n                    dataPriv.access(doc, fix, (attaches || 0) + 1);\n                },\n                teardown: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix) - 1;\n                    if (!attaches) {\n                        doc.removeEventListener(orig, handler, true);\n                        dataPriv.remove(doc, fix);\n                    } else {\n                        dataPriv.access(doc, fix, attaches);\n                    }\n                }\n            };\n        });\n    }\n    var location = window.location;\n    var nonce = jQuery.now();\n    var rquery = /\\?/;\n    // Cross-browser xml parsing\n    jQuery.parseXML = function (data) {\n        var xml;\n        if (!data || typeof data !== 'string') {\n            return null;\n        }\n        // Support: IE 9 - 11 only\n        // IE throws on parseFromString with invalid input.\n        try {\n            xml = new window.DOMParser().parseFromString(data, 'text/xml');\n        } catch (e) {\n            xml = undefined;\n        }\n        if (!xml || xml.getElementsByTagName('parsererror').length) {\n            jQuery.error('Invalid XML: ' + data);\n        }\n        return xml;\n    };\n    var rbracket = /\\[\\]$/, rCRLF = /\\r?\\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;\n    function buildParams(prefix, obj, traditional, add) {\n        var name;\n        if (Array.isArray(obj)) {\n            // Serialize array item.\n            jQuery.each(obj, function (i, v) {\n                if (traditional || rbracket.test(prefix)) {\n                    // Treat each array item as a scalar.\n                    add(prefix, v);\n                } else {\n                    // Item is non-scalar (array or object), encode its numeric index.\n                    buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add);\n                }\n            });\n        } else if (!traditional && jQuery.type(obj) === 'object') {\n            // Serialize object item.\n            for (name in obj) {\n                buildParams(prefix + '[' + name + ']', obj[name], traditional, add);\n            }\n        } else {\n            // Serialize scalar item.\n            add(prefix, obj);\n        }\n    }\n    // Serialize an array of form elements or a set of\n    // key/values into a query string\n    jQuery.param = function (a, traditional) {\n        var prefix, s = [], add = function (key, valueOrFunction) {\n                // If value is a function, invoke it and use its return value\n                var value = jQuery.isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n                s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value == null ? '' : value);\n            };\n        // If an array was passed in, assume that it is an array of form elements.\n        if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n            // Serialize the form elements\n            jQuery.each(a, function () {\n                add(this.name, this.value);\n            });\n        } else {\n            // If traditional, encode the \"old\" way (the way 1.3.2 or older\n            // did it), otherwise encode params recursively.\n            for (prefix in a) {\n                buildParams(prefix, a[prefix], traditional, add);\n            }\n        }\n        // Return the resulting serialization\n        return s.join('&');\n    };\n    jQuery.fn.extend({\n        serialize: function () {\n            return jQuery.param(this.serializeArray());\n        },\n        serializeArray: function () {\n            return this.map(function () {\n                // Can add propHook for \"elements\" to filter or add form elements\n                var elements = jQuery.prop(this, 'elements');\n                return elements ? jQuery.makeArray(elements) : this;\n            }).filter(function () {\n                var type = this.type;\n                // Use .is( \":disabled\" ) so that fieldset[disabled] works\n                return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n            }).map(function (i, elem) {\n                var val = jQuery(this).val();\n                if (val == null) {\n                    return null;\n                }\n                if (Array.isArray(val)) {\n                    return jQuery.map(val, function (val) {\n                        return {\n                            name: elem.name,\n                            value: val.replace(rCRLF, '\\r\\n')\n                        };\n                    });\n                }\n                return {\n                    name: elem.name,\n                    value: val.replace(rCRLF, '\\r\\n')\n                };\n            }).get();\n        }\n    });\n    var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n        // #7653, #8125, #8152: local protocol detection\n        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\\/\\//,\n        /* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n        prefilters = {},\n        /* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n        transports = {},\n        // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n        allTypes = '*/'.concat('*'),\n        // Anchor tag for parsing the document origin\n        originAnchor = document.createElement('a');\n    originAnchor.href = location.href;\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n    function addToPrefiltersOrTransports(structure) {\n        // dataTypeExpression is optional and defaults to \"*\"\n        return function (dataTypeExpression, func) {\n            if (typeof dataTypeExpression !== 'string') {\n                func = dataTypeExpression;\n                dataTypeExpression = '*';\n            }\n            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n            if (jQuery.isFunction(func)) {\n                // For each dataType in the dataTypeExpression\n                while (dataType = dataTypes[i++]) {\n                    // Prepend if requested\n                    if (dataType[0] === '+') {\n                        dataType = dataType.slice(1) || '*';\n                        (structure[dataType] = structure[dataType] || []).unshift(func);    // Otherwise append\n                    } else {\n                        (structure[dataType] = structure[dataType] || []).push(func);\n                    }\n                }\n            }\n        };\n    }\n    // Base inspection function for prefilters and transports\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n        var inspected = {}, seekingTransport = structure === transports;\n        function inspect(dataType) {\n            var selected;\n            inspected[dataType] = true;\n            jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n                if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {\n                    options.dataTypes.unshift(dataTypeOrTransport);\n                    inspect(dataTypeOrTransport);\n                    return false;\n                } else if (seekingTransport) {\n                    return !(selected = dataTypeOrTransport);\n                }\n            });\n            return selected;\n        }\n        return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');\n    }\n    // A special extend for ajax options\n    // that takes \"flat\" options (not to be deep extended)\n    // Fixes #9887\n    function ajaxExtend(target, src) {\n        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};\n        for (key in src) {\n            if (src[key] !== undefined) {\n                (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n            }\n        }\n        if (deep) {\n            jQuery.extend(true, target, deep);\n        }\n        return target;\n    }\n    /* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\n    function ajaxHandleResponses(s, jqXHR, responses) {\n        var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;\n        // Remove auto dataType and get content-type in the process\n        while (dataTypes[0] === '*') {\n            dataTypes.shift();\n            if (ct === undefined) {\n                ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');\n            }\n        }\n        // Check if we're dealing with a known content-type\n        if (ct) {\n            for (type in contents) {\n                if (contents[type] && contents[type].test(ct)) {\n                    dataTypes.unshift(type);\n                    break;\n                }\n            }\n        }\n        // Check to see if we have a response for the expected dataType\n        if (dataTypes[0] in responses) {\n            finalDataType = dataTypes[0];\n        } else {\n            // Try convertible dataTypes\n            for (type in responses) {\n                if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {\n                    finalDataType = type;\n                    break;\n                }\n                if (!firstDataType) {\n                    firstDataType = type;\n                }\n            }\n            // Or just use first one\n            finalDataType = finalDataType || firstDataType;\n        }\n        // If we found a dataType\n        // We add the dataType to the list if needed\n        // and return the corresponding response\n        if (finalDataType) {\n            if (finalDataType !== dataTypes[0]) {\n                dataTypes.unshift(finalDataType);\n            }\n            return responses[finalDataType];\n        }\n    }\n    /* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\n    function ajaxConvert(s, response, jqXHR, isSuccess) {\n        var conv2, current, conv, tmp, prev, converters = {},\n            // Work with a copy of dataTypes in case we need to modify it for conversion\n            dataTypes = s.dataTypes.slice();\n        // Create converters map with lowercased keys\n        if (dataTypes[1]) {\n            for (conv in s.converters) {\n                converters[conv.toLowerCase()] = s.converters[conv];\n            }\n        }\n        current = dataTypes.shift();\n        // Convert to each sequential dataType\n        while (current) {\n            if (s.responseFields[current]) {\n                jqXHR[s.responseFields[current]] = response;\n            }\n            // Apply the dataFilter if provided\n            if (!prev && isSuccess && s.dataFilter) {\n                response = s.dataFilter(response, s.dataType);\n            }\n            prev = current;\n            current = dataTypes.shift();\n            if (current) {\n                // There's only work to do if current dataType is non-auto\n                if (current === '*') {\n                    current = prev;    // Convert response if prev dataType is non-auto and differs from current\n                } else if (prev !== '*' && prev !== current) {\n                    // Seek a direct converter\n                    conv = converters[prev + ' ' + current] || converters['* ' + current];\n                    // If none found, seek a pair\n                    if (!conv) {\n                        for (conv2 in converters) {\n                            // If conv2 outputs current\n                            tmp = conv2.split(' ');\n                            if (tmp[1] === current) {\n                                // If prev can be converted to accepted input\n                                conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];\n                                if (conv) {\n                                    // Condense equivalence converters\n                                    if (conv === true) {\n                                        conv = converters[conv2];    // Otherwise, insert the intermediate dataType\n                                    } else if (converters[conv2] !== true) {\n                                        current = tmp[0];\n                                        dataTypes.unshift(tmp[1]);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    // Apply converter (if not an equivalence)\n                    if (conv !== true) {\n                        // Unless errors are allowed to bubble, catch and return them\n                        if (conv && s.throws) {\n                            response = conv(response);\n                        } else {\n                            try {\n                                response = conv(response);\n                            } catch (e) {\n                                return {\n                                    state: 'parsererror',\n                                    error: conv ? e : 'No conversion from ' + prev + ' to ' + current\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            state: 'success',\n            data: response\n        };\n    }\n    jQuery.extend({\n        // Counter for holding the number of active queries\n        active: 0,\n        // Last-Modified header cache for next request\n        lastModified: {},\n        etag: {},\n        ajaxSettings: {\n            url: location.href,\n            type: 'GET',\n            isLocal: rlocalProtocol.test(location.protocol),\n            global: true,\n            processData: true,\n            async: true,\n            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n            /*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n            accepts: {\n                '*': allTypes,\n                text: 'text/plain',\n                html: 'text/html',\n                xml: 'application/xml, text/xml',\n                json: 'application/json, text/javascript'\n            },\n            contents: {\n                xml: /\\bxml\\b/,\n                html: /\\bhtml/,\n                json: /\\bjson\\b/\n            },\n            responseFields: {\n                xml: 'responseXML',\n                text: 'responseText',\n                json: 'responseJSON'\n            },\n            // Data converters\n            // Keys separate source (or catchall \"*\") and destination types with a single space\n            converters: {\n                // Convert anything to text\n                '* text': String,\n                // Text to html (true = no transformation)\n                'text html': true,\n                // Evaluate text as a json expression\n                'text json': JSON.parse,\n                // Parse text as xml\n                'text xml': jQuery.parseXML\n            },\n            // For options that shouldn't be deep extended:\n            // you can add your own custom options here if\n            // and when you create one that shouldn't be\n            // deep extended (see ajaxExtend)\n            flatOptions: {\n                url: true,\n                context: true\n            }\n        },\n        // Creates a full fledged settings object into target\n        // with both ajaxSettings and settings fields.\n        // If target is omitted, writes into ajaxSettings.\n        ajaxSetup: function (target, settings) {\n            return settings ? // Building a settings object\n            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n            ajaxExtend(jQuery.ajaxSettings, target);\n        },\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n        ajaxTransport: addToPrefiltersOrTransports(transports),\n        // Main method\n        ajax: function (url, options) {\n            // If url is an object, simulate pre-1.5 signature\n            if (typeof url === 'object') {\n                options = url;\n                url = undefined;\n            }\n            // Force options to be an object\n            options = options || {};\n            var transport,\n                // URL without anti-cache param\n                cacheURL,\n                // Response headers\n                responseHeadersString, responseHeaders,\n                // timeout handle\n                timeoutTimer,\n                // Url cleanup var\n                urlAnchor,\n                // Request state (becomes false upon send and true upon completion)\n                completed,\n                // To know if global events are to be dispatched\n                fireGlobals,\n                // Loop variable\n                i,\n                // uncached part of the url\n                uncached,\n                // Create the final options object\n                s = jQuery.ajaxSetup({}, options),\n                // Callbacks context\n                callbackContext = s.context || s,\n                // Context for global events is callbackContext if it is a DOM node or jQuery collection\n                globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n                // Deferreds\n                deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks('once memory'),\n                // Status-dependent callbacks\n                statusCode = s.statusCode || {},\n                // Headers (they are sent all at once)\n                requestHeaders = {}, requestHeadersNames = {},\n                // Default abort message\n                strAbort = 'canceled',\n                // Fake xhr\n                jqXHR = {\n                    readyState: 0,\n                    // Builds headers hashtable if needed\n                    getResponseHeader: function (key) {\n                        var match;\n                        if (completed) {\n                            if (!responseHeaders) {\n                                responseHeaders = {};\n                                while (match = rheaders.exec(responseHeadersString)) {\n                                    responseHeaders[match[1].toLowerCase()] = match[2];\n                                }\n                            }\n                            match = responseHeaders[key.toLowerCase()];\n                        }\n                        return match == null ? null : match;\n                    },\n                    // Raw string\n                    getAllResponseHeaders: function () {\n                        return completed ? responseHeadersString : null;\n                    },\n                    // Caches the header\n                    setRequestHeader: function (name, value) {\n                        if (completed == null) {\n                            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n                            requestHeaders[name] = value;\n                        }\n                        return this;\n                    },\n                    // Overrides response content-type header\n                    overrideMimeType: function (type) {\n                        if (completed == null) {\n                            s.mimeType = type;\n                        }\n                        return this;\n                    },\n                    // Status-dependent callbacks\n                    statusCode: function (map) {\n                        var code;\n                        if (map) {\n                            if (completed) {\n                                // Execute the appropriate callbacks\n                                jqXHR.always(map[jqXHR.status]);\n                            } else {\n                                // Lazy-add the new callbacks in a way that preserves old ones\n                                for (code in map) {\n                                    statusCode[code] = [\n                                        statusCode[code],\n                                        map[code]\n                                    ];\n                                }\n                            }\n                        }\n                        return this;\n                    },\n                    // Cancel the request\n                    abort: function (statusText) {\n                        var finalText = statusText || strAbort;\n                        if (transport) {\n                            transport.abort(finalText);\n                        }\n                        done(0, finalText);\n                        return this;\n                    }\n                };\n            // Attach deferreds\n            deferred.promise(jqXHR);\n            // Add protocol if not provided (prefilters might expect it)\n            // Handle falsy url in the settings object (#10093: consistency with old signature)\n            // We also use the url parameter if available\n            s.url = ((url || s.url || location.href) + '').replace(rprotocol, location.protocol + '//');\n            // Alias method option to type as per ticket #12004\n            s.type = options.method || options.type || s.method || s.type;\n            // Extract dataTypes list\n            s.dataTypes = (s.dataType || '*').toLowerCase().match(rnothtmlwhite) || [''];\n            // A cross-domain request is in order when the origin doesn't match the current origin.\n            if (s.crossDomain == null) {\n                urlAnchor = document.createElement('a');\n                // Support: IE <=8 - 11, Edge 12 - 13\n                // IE throws exception on accessing the href property if url is malformed,\n                // e.g. http://example.com:80x/\n                try {\n                    urlAnchor.href = s.url;\n                    // Support: IE <=8 - 11 only\n                    // Anchor's host property isn't correctly set when s.url is relative\n                    urlAnchor.href = urlAnchor.href;\n                    s.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;\n                } catch (e) {\n                    // If there is an error parsing the URL, assume it is crossDomain,\n                    // it can be rejected by the transport if it is invalid\n                    s.crossDomain = true;\n                }\n            }\n            // Convert data if not already a string\n            if (s.data && s.processData && typeof s.data !== 'string') {\n                s.data = jQuery.param(s.data, s.traditional);\n            }\n            // Apply prefilters\n            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n            // If request was aborted inside a prefilter, stop there\n            if (completed) {\n                return jqXHR;\n            }\n            // We can fire global events as of now if asked to\n            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n            fireGlobals = jQuery.event && s.global;\n            // Watch for a new set of requests\n            if (fireGlobals && jQuery.active++ === 0) {\n                jQuery.event.trigger('ajaxStart');\n            }\n            // Uppercase the type\n            s.type = s.type.toUpperCase();\n            // Determine if request has content\n            s.hasContent = !rnoContent.test(s.type);\n            // Save the URL in case we're toying with the If-Modified-Since\n            // and/or If-None-Match header later on\n            // Remove hash to simplify url manipulation\n            cacheURL = s.url.replace(rhash, '');\n            // More options handling for requests with no content\n            if (!s.hasContent) {\n                // Remember the hash so we can put it back\n                uncached = s.url.slice(cacheURL.length);\n                // If data is available, append data to url\n                if (s.data) {\n                    cacheURL += (rquery.test(cacheURL) ? '&' : '?') + s.data;\n                    // #9682: remove data so that it's not used in an eventual retry\n                    delete s.data;\n                }\n                // Add or update anti-cache param if needed\n                if (s.cache === false) {\n                    cacheURL = cacheURL.replace(rantiCache, '$1');\n                    uncached = (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++ + uncached;\n                }\n                // Put hash and anti-cache on the URL that will be requested (gh-1732)\n                s.url = cacheURL + uncached;    // Change '%20' to '+' if this is encoded form body content (gh-2658)\n            } else if (s.data && s.processData && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0) {\n                s.data = s.data.replace(r20, '+');\n            }\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n            if (s.ifModified) {\n                if (jQuery.lastModified[cacheURL]) {\n                    jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);\n                }\n                if (jQuery.etag[cacheURL]) {\n                    jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);\n                }\n            }\n            // Set the correct header, if data is being sent\n            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n                jqXHR.setRequestHeader('Content-Type', s.contentType);\n            }\n            // Set the Accepts header for the server, depending on the dataType\n            jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);\n            // Check for headers option\n            for (i in s.headers) {\n                jqXHR.setRequestHeader(i, s.headers[i]);\n            }\n            // Allow custom headers/mimetypes and early abort\n            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n                // Abort if not done already and return\n                return jqXHR.abort();\n            }\n            // Aborting is no longer a cancellation\n            strAbort = 'abort';\n            // Install callbacks on deferreds\n            completeDeferred.add(s.complete);\n            jqXHR.done(s.success);\n            jqXHR.fail(s.error);\n            // Get transport\n            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n            // If no transport, we auto-abort\n            if (!transport) {\n                done(-1, 'No Transport');\n            } else {\n                jqXHR.readyState = 1;\n                // Send global event\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxSend', [\n                        jqXHR,\n                        s\n                    ]);\n                }\n                // If request was aborted inside ajaxSend, stop there\n                if (completed) {\n                    return jqXHR;\n                }\n                // Timeout\n                if (s.async && s.timeout > 0) {\n                    timeoutTimer = window.setTimeout(function () {\n                        jqXHR.abort('timeout');\n                    }, s.timeout);\n                }\n                try {\n                    completed = false;\n                    transport.send(requestHeaders, done);\n                } catch (e) {\n                    // Rethrow post-completion exceptions\n                    if (completed) {\n                        throw e;\n                    }\n                    // Propagate others as results\n                    done(-1, e);\n                }\n            }\n            // Callback for when everything is done\n            function done(status, nativeStatusText, responses, headers) {\n                var isSuccess, success, error, response, modified, statusText = nativeStatusText;\n                // Ignore repeat invocations\n                if (completed) {\n                    return;\n                }\n                completed = true;\n                // Clear timeout if it exists\n                if (timeoutTimer) {\n                    window.clearTimeout(timeoutTimer);\n                }\n                // Dereference transport for early garbage collection\n                // (no matter how long the jqXHR object will be used)\n                transport = undefined;\n                // Cache response headers\n                responseHeadersString = headers || '';\n                // Set readyState\n                jqXHR.readyState = status > 0 ? 4 : 0;\n                // Determine if successful\n                isSuccess = status >= 200 && status < 300 || status === 304;\n                // Get response data\n                if (responses) {\n                    response = ajaxHandleResponses(s, jqXHR, responses);\n                }\n                // Convert no matter what (that way responseXXX fields are always set)\n                response = ajaxConvert(s, response, jqXHR, isSuccess);\n                // If successful, handle type chaining\n                if (isSuccess) {\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n                    if (s.ifModified) {\n                        modified = jqXHR.getResponseHeader('Last-Modified');\n                        if (modified) {\n                            jQuery.lastModified[cacheURL] = modified;\n                        }\n                        modified = jqXHR.getResponseHeader('etag');\n                        if (modified) {\n                            jQuery.etag[cacheURL] = modified;\n                        }\n                    }\n                    // if no content\n                    if (status === 204 || s.type === 'HEAD') {\n                        statusText = 'nocontent';    // if not modified\n                    } else if (status === 304) {\n                        statusText = 'notmodified';    // If we have data, let's convert it\n                    } else {\n                        statusText = response.state;\n                        success = response.data;\n                        error = response.error;\n                        isSuccess = !error;\n                    }\n                } else {\n                    // Extract error from statusText and normalize for non-aborts\n                    error = statusText;\n                    if (status || !statusText) {\n                        statusText = 'error';\n                        if (status < 0) {\n                            status = 0;\n                        }\n                    }\n                }\n                // Set data for the fake xhr object\n                jqXHR.status = status;\n                jqXHR.statusText = (nativeStatusText || statusText) + '';\n                // Success/Error\n                if (isSuccess) {\n                    deferred.resolveWith(callbackContext, [\n                        success,\n                        statusText,\n                        jqXHR\n                    ]);\n                } else {\n                    deferred.rejectWith(callbackContext, [\n                        jqXHR,\n                        statusText,\n                        error\n                    ]);\n                }\n                // Status-dependent callbacks\n                jqXHR.statusCode(statusCode);\n                statusCode = undefined;\n                if (fireGlobals) {\n                    globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [\n                        jqXHR,\n                        s,\n                        isSuccess ? success : error\n                    ]);\n                }\n                // Complete\n                completeDeferred.fireWith(callbackContext, [\n                    jqXHR,\n                    statusText\n                ]);\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxComplete', [\n                        jqXHR,\n                        s\n                    ]);\n                    // Handle the global AJAX counter\n                    if (!--jQuery.active) {\n                        jQuery.event.trigger('ajaxStop');\n                    }\n                }\n            }\n            return jqXHR;\n        },\n        getJSON: function (url, data, callback) {\n            return jQuery.get(url, data, callback, 'json');\n        },\n        getScript: function (url, callback) {\n            return jQuery.get(url, undefined, callback, 'script');\n        }\n    });\n    jQuery.each([\n        'get',\n        'post'\n    ], function (i, method) {\n        jQuery[method] = function (url, data, callback, type) {\n            // Shift arguments if data argument was omitted\n            if (jQuery.isFunction(data)) {\n                type = type || callback;\n                callback = data;\n                data = undefined;\n            }\n            // The url can be an options object (which then must have .url)\n            return jQuery.ajax(jQuery.extend({\n                url: url,\n                type: method,\n                dataType: type,\n                data: data,\n                success: callback\n            }, jQuery.isPlainObject(url) && url));\n        };\n    });\n    jQuery._evalUrl = function (url) {\n        return jQuery.ajax({\n            url: url,\n            // Make this explicit, since user can override this through ajaxSetup (#11264)\n            type: 'GET',\n            dataType: 'script',\n            cache: true,\n            async: false,\n            global: false,\n            'throws': true\n        });\n    };\n    jQuery.fn.extend({\n        wrapAll: function (html) {\n            var wrap;\n            if (this[0]) {\n                if (jQuery.isFunction(html)) {\n                    html = html.call(this[0]);\n                }\n                // The elements to wrap the target around\n                wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n                if (this[0].parentNode) {\n                    wrap.insertBefore(this[0]);\n                }\n                wrap.map(function () {\n                    var elem = this;\n                    while (elem.firstElementChild) {\n                        elem = elem.firstElementChild;\n                    }\n                    return elem;\n                }).append(this);\n            }\n            return this;\n        },\n        wrapInner: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapInner(html.call(this, i));\n                });\n            }\n            return this.each(function () {\n                var self = jQuery(this), contents = self.contents();\n                if (contents.length) {\n                    contents.wrapAll(html);\n                } else {\n                    self.append(html);\n                }\n            });\n        },\n        wrap: function (html) {\n            var isFunction = jQuery.isFunction(html);\n            return this.each(function (i) {\n                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n            });\n        },\n        unwrap: function (selector) {\n            this.parent(selector).not('body').each(function () {\n                jQuery(this).replaceWith(this.childNodes);\n            });\n            return this;\n        }\n    });\n    jQuery.expr.pseudos.hidden = function (elem) {\n        return !jQuery.expr.pseudos.visible(elem);\n    };\n    jQuery.expr.pseudos.visible = function (elem) {\n        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    };\n    jQuery.ajaxSettings.xhr = function () {\n        try {\n            return new window.XMLHttpRequest();\n        } catch (e) {\n        }\n    };\n    var xhrSuccessStatus = {\n            // File protocol always yields status code 0, assume 200\n            0: 200,\n            // Support: IE <=9 only\n            // #1450: sometimes IE returns 1223 when it should be 204\n            1223: 204\n        }, xhrSupported = jQuery.ajaxSettings.xhr();\n    support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;\n    support.ajax = xhrSupported = !!xhrSupported;\n    jQuery.ajaxTransport(function (options) {\n        var callback, errorCallback;\n        // Cross domain only allowed if supported through XMLHttpRequest\n        if (support.cors || xhrSupported && !options.crossDomain) {\n            return {\n                send: function (headers, complete) {\n                    var i, xhr = options.xhr();\n                    xhr.open(options.type, options.url, options.async, options.username, options.password);\n                    // Apply custom fields if provided\n                    if (options.xhrFields) {\n                        for (i in options.xhrFields) {\n                            xhr[i] = options.xhrFields[i];\n                        }\n                    }\n                    // Override mime type if needed\n                    if (options.mimeType && xhr.overrideMimeType) {\n                        xhr.overrideMimeType(options.mimeType);\n                    }\n                    // X-Requested-With header\n                    // For cross-domain requests, seeing as conditions for a preflight are\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\n                    // For same-domain requests, won't change header if already provided.\n                    if (!options.crossDomain && !headers['X-Requested-With']) {\n                        headers['X-Requested-With'] = 'XMLHttpRequest';\n                    }\n                    // Set headers\n                    for (i in headers) {\n                        xhr.setRequestHeader(i, headers[i]);\n                    }\n                    // Callback\n                    callback = function (type) {\n                        return function () {\n                            if (callback) {\n                                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n                                if (type === 'abort') {\n                                    xhr.abort();\n                                } else if (type === 'error') {\n                                    // Support: IE <=9 only\n                                    // On a manual native abort, IE9 throws\n                                    // errors on any property access that is not readyState\n                                    if (typeof xhr.status !== 'number') {\n                                        complete(0, 'error');\n                                    } else {\n                                        complete(// File: protocol always yields status 0; see #8605, #14207\n                                        xhr.status, xhr.statusText);\n                                    }\n                                } else {\n                                    complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                                    // IE9 has no XHR2 but throws on binary (trac-11426)\n                                    // For XHR2 non-text, let the caller handle it (gh-2498)\n                                    (xhr.responseType || 'text') !== 'text' || typeof xhr.responseText !== 'string' ? { binary: xhr.response } : { text: xhr.responseText }, xhr.getAllResponseHeaders());\n                                }\n                            }\n                        };\n                    };\n                    // Listen to events\n                    xhr.onload = callback();\n                    errorCallback = xhr.onerror = callback('error');\n                    // Support: IE 9 only\n                    // Use onreadystatechange to replace onabort\n                    // to handle uncaught aborts\n                    if (xhr.onabort !== undefined) {\n                        xhr.onabort = errorCallback;\n                    } else {\n                        xhr.onreadystatechange = function () {\n                            // Check readyState before timeout as it changes\n                            if (xhr.readyState === 4) {\n                                // Allow onerror to be called first,\n                                // but that will not handle a native abort\n                                // Also, save errorCallback to a variable\n                                // as xhr.onerror cannot be accessed\n                                window.setTimeout(function () {\n                                    if (callback) {\n                                        errorCallback();\n                                    }\n                                });\n                            }\n                        };\n                    }\n                    // Create the abort callback\n                    callback = callback('abort');\n                    try {\n                        // Do send the request (this may raise an exception)\n                        xhr.send(options.hasContent && options.data || null);\n                    } catch (e) {\n                        // #14683: Only rethrow if this hasn't been notified as an error yet\n                        if (callback) {\n                            throw e;\n                        }\n                    }\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n    jQuery.ajaxPrefilter(function (s) {\n        if (s.crossDomain) {\n            s.contents.script = false;\n        }\n    });\n    // Install script dataType\n    jQuery.ajaxSetup({\n        accepts: { script: 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript' },\n        contents: { script: /\\b(?:java|ecma)script\\b/ },\n        converters: {\n            'text script': function (text) {\n                jQuery.globalEval(text);\n                return text;\n            }\n        }\n    });\n    // Handle cache's special case and crossDomain\n    jQuery.ajaxPrefilter('script', function (s) {\n        if (s.cache === undefined) {\n            s.cache = false;\n        }\n        if (s.crossDomain) {\n            s.type = 'GET';\n        }\n    });\n    // Bind script tag hack transport\n    jQuery.ajaxTransport('script', function (s) {\n        // This transport only deals with cross domain requests\n        if (s.crossDomain) {\n            var script, callback;\n            return {\n                send: function (_, complete) {\n                    script = jQuery('<script>').prop({\n                        charset: s.scriptCharset,\n                        src: s.url\n                    }).on('load error', callback = function (evt) {\n                        script.remove();\n                        callback = null;\n                        if (evt) {\n                            complete(evt.type === 'error' ? 404 : 200, evt.type);\n                        }\n                    });\n                    // Use native DOM manipulation to avoid our domManip AJAX trickery\n                    document.head.appendChild(script[0]);\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    var oldCallbacks = [], rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n    // Default jsonp settings\n    jQuery.ajaxSetup({\n        jsonp: 'callback',\n        jsonpCallback: function () {\n            var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++;\n            this[callback] = true;\n            return callback;\n        }\n    });\n    // Detect, normalize options and install callbacks for jsonp requests\n    jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {\n        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && rjsonp.test(s.data) && 'data');\n        // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n        if (jsonProp || s.dataTypes[0] === 'jsonp') {\n            // Get callback name, remembering preexisting value associated with it\n            callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n            // Insert callback into url or form data\n            if (jsonProp) {\n                s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);\n            } else if (s.jsonp !== false) {\n                s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;\n            }\n            // Use data converter to retrieve json after script execution\n            s.converters['script json'] = function () {\n                if (!responseContainer) {\n                    jQuery.error(callbackName + ' was not called');\n                }\n                return responseContainer[0];\n            };\n            // Force json dataType\n            s.dataTypes[0] = 'json';\n            // Install callback\n            overwritten = window[callbackName];\n            window[callbackName] = function () {\n                responseContainer = arguments;\n            };\n            // Clean-up function (fires after converters)\n            jqXHR.always(function () {\n                // If previous value didn't exist - remove it\n                if (overwritten === undefined) {\n                    jQuery(window).removeProp(callbackName);    // Otherwise restore preexisting value\n                } else {\n                    window[callbackName] = overwritten;\n                }\n                // Save back as free\n                if (s[callbackName]) {\n                    // Make sure that re-using the options doesn't screw things around\n                    s.jsonpCallback = originalSettings.jsonpCallback;\n                    // Save the callback name for future use\n                    oldCallbacks.push(callbackName);\n                }\n                // Call if it was a function and we have a response\n                if (responseContainer && jQuery.isFunction(overwritten)) {\n                    overwritten(responseContainer[0]);\n                }\n                responseContainer = overwritten = undefined;\n            });\n            // Delegate to script\n            return 'script';\n        }\n    });\n    // Support: Safari 8 only\n    // In Safari 8 documents created via document.implementation.createHTMLDocument\n    // collapse sibling forms: the second one becomes a child of the first one.\n    // Because of that, this security measure has to be disabled in Safari 8.\n    // https://bugs.webkit.org/show_bug.cgi?id=137337\n    support.createHTMLDocument = function () {\n        var body = document.implementation.createHTMLDocument('').body;\n        body.innerHTML = '<form></form><form></form>';\n        return body.childNodes.length === 2;\n    }();\n    // Argument \"data\" should be string of html\n    // context (optional): If specified, the fragment will be created in this context,\n    // defaults to document\n    // keepScripts (optional): If true, will include scripts passed in the html string\n    jQuery.parseHTML = function (data, context, keepScripts) {\n        if (typeof data !== 'string') {\n            return [];\n        }\n        if (typeof context === 'boolean') {\n            keepScripts = context;\n            context = false;\n        }\n        var base, parsed, scripts;\n        if (!context) {\n            // Stop scripts or inline event handlers from being executed immediately\n            // by using document.implementation\n            if (support.createHTMLDocument) {\n                context = document.implementation.createHTMLDocument('');\n                // Set the base href for the created document\n                // so any parsed elements with URLs\n                // are based on the document's URL (gh-2965)\n                base = context.createElement('base');\n                base.href = document.location.href;\n                context.head.appendChild(base);\n            } else {\n                context = document;\n            }\n        }\n        parsed = rsingleTag.exec(data);\n        scripts = !keepScripts && [];\n        // Single tag\n        if (parsed) {\n            return [context.createElement(parsed[1])];\n        }\n        parsed = buildFragment([data], context, scripts);\n        if (scripts && scripts.length) {\n            jQuery(scripts).remove();\n        }\n        return jQuery.merge([], parsed.childNodes);\n    };\n    /**\n * Load a url into a page\n */\n    jQuery.fn.load = function (url, params, callback) {\n        var selector, type, response, self = this, off = url.indexOf(' ');\n        if (off > -1) {\n            selector = stripAndCollapse(url.slice(off));\n            url = url.slice(0, off);\n        }\n        // If it's a function\n        if (jQuery.isFunction(params)) {\n            // We assume that it's the callback\n            callback = params;\n            params = undefined;    // Otherwise, build a param string\n        } else if (params && typeof params === 'object') {\n            type = 'POST';\n        }\n        // If we have elements to modify, make the request\n        if (self.length > 0) {\n            jQuery.ajax({\n                url: url,\n                // If \"type\" variable is undefined, then \"GET\" method will be used.\n                // Make value of this field explicit since\n                // user can override it through ajaxSetup method\n                type: type || 'GET',\n                dataType: 'html',\n                data: params\n            }).done(function (responseText) {\n                // Save response for use in complete callback\n                response = arguments;\n                self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n                // Exclude scripts to avoid IE 'Permission Denied' errors\n                jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n                responseText);    // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n                                  // but they are ignored because response was set above.\n                                  // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n            }).always(callback && function (jqXHR, status) {\n                self.each(function () {\n                    callback.apply(this, response || [\n                        jqXHR.responseText,\n                        status,\n                        jqXHR\n                    ]);\n                });\n            });\n        }\n        return this;\n    };\n    // Attach a bunch of functions for handling common AJAX events\n    jQuery.each([\n        'ajaxStart',\n        'ajaxStop',\n        'ajaxComplete',\n        'ajaxError',\n        'ajaxSuccess',\n        'ajaxSend'\n    ], function (i, type) {\n        jQuery.fn[type] = function (fn) {\n            return this.on(type, fn);\n        };\n    });\n    jQuery.expr.pseudos.animated = function (elem) {\n        return jQuery.grep(jQuery.timers, function (fn) {\n            return elem === fn.elem;\n        }).length;\n    };\n    jQuery.offset = {\n        setOffset: function (elem, options, i) {\n            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, 'position'), curElem = jQuery(elem), props = {};\n            // Set position first, in-case top/left are set even on static elem\n            if (position === 'static') {\n                elem.style.position = 'relative';\n            }\n            curOffset = curElem.offset();\n            curCSSTop = jQuery.css(elem, 'top');\n            curCSSLeft = jQuery.css(elem, 'left');\n            calculatePosition = (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n            // Need to be able to calculate position if either\n            // top or left is auto and position is either absolute or fixed\n            if (calculatePosition) {\n                curPosition = curElem.position();\n                curTop = curPosition.top;\n                curLeft = curPosition.left;\n            } else {\n                curTop = parseFloat(curCSSTop) || 0;\n                curLeft = parseFloat(curCSSLeft) || 0;\n            }\n            if (jQuery.isFunction(options)) {\n                // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n                options = options.call(elem, i, jQuery.extend({}, curOffset));\n            }\n            if (options.top != null) {\n                props.top = options.top - curOffset.top + curTop;\n            }\n            if (options.left != null) {\n                props.left = options.left - curOffset.left + curLeft;\n            }\n            if ('using' in options) {\n                options.using.call(elem, props);\n            } else {\n                curElem.css(props);\n            }\n        }\n    };\n    jQuery.fn.extend({\n        offset: function (options) {\n            // Preserve chaining for setter\n            if (arguments.length) {\n                return options === undefined ? this : this.each(function (i) {\n                    jQuery.offset.setOffset(this, options, i);\n                });\n            }\n            var doc, docElem, rect, win, elem = this[0];\n            if (!elem) {\n                return;\n            }\n            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n            // Support: IE <=11 only\n            // Running getBoundingClientRect on a\n            // disconnected node in IE throws an error\n            if (!elem.getClientRects().length) {\n                return {\n                    top: 0,\n                    left: 0\n                };\n            }\n            rect = elem.getBoundingClientRect();\n            doc = elem.ownerDocument;\n            docElem = doc.documentElement;\n            win = doc.defaultView;\n            return {\n                top: rect.top + win.pageYOffset - docElem.clientTop,\n                left: rect.left + win.pageXOffset - docElem.clientLeft\n            };\n        },\n        position: function () {\n            if (!this[0]) {\n                return;\n            }\n            var offsetParent, offset, elem = this[0], parentOffset = {\n                    top: 0,\n                    left: 0\n                };\n            // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n            // because it is its only offset parent\n            if (jQuery.css(elem, 'position') === 'fixed') {\n                // Assume getBoundingClientRect is there when computed position is fixed\n                offset = elem.getBoundingClientRect();\n            } else {\n                // Get *real* offsetParent\n                offsetParent = this.offsetParent();\n                // Get correct offsets\n                offset = this.offset();\n                if (!nodeName(offsetParent[0], 'html')) {\n                    parentOffset = offsetParent.offset();\n                }\n                // Add offsetParent borders\n                parentOffset = {\n                    top: parentOffset.top + jQuery.css(offsetParent[0], 'borderTopWidth', true),\n                    left: parentOffset.left + jQuery.css(offsetParent[0], 'borderLeftWidth', true)\n                };\n            }\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),\n                left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)\n            };\n        },\n        // This method will return documentElement in the following cases:\n        // 1) For the element inside the iframe without offsetParent, this method will return\n        //    documentElement of the parent window\n        // 2) For the hidden or detached element\n        // 3) For body or html element, i.e. in case of the html node - it will return itself\n        //\n        // but those exceptions were never presented as a real life use-cases\n        // and might be considered as more preferable results.\n        //\n        // This logic, however, is not guaranteed and can change at any point in the future\n        offsetParent: function () {\n            return this.map(function () {\n                var offsetParent = this.offsetParent;\n                while (offsetParent && jQuery.css(offsetParent, 'position') === 'static') {\n                    offsetParent = offsetParent.offsetParent;\n                }\n                return offsetParent || documentElement;\n            });\n        }\n    });\n    // Create scrollLeft and scrollTop methods\n    jQuery.each({\n        scrollLeft: 'pageXOffset',\n        scrollTop: 'pageYOffset'\n    }, function (method, prop) {\n        var top = 'pageYOffset' === prop;\n        jQuery.fn[method] = function (val) {\n            return access(this, function (elem, method, val) {\n                // Coalesce documents and windows\n                var win;\n                if (jQuery.isWindow(elem)) {\n                    win = elem;\n                } else if (elem.nodeType === 9) {\n                    win = elem.defaultView;\n                }\n                if (val === undefined) {\n                    return win ? win[prop] : elem[method];\n                }\n                if (win) {\n                    win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n                } else {\n                    elem[method] = val;\n                }\n            }, method, val, arguments.length);\n        };\n    });\n    // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n    // Add the top/left cssHooks using jQuery.fn.position\n    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n    // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n    // getComputedStyle returns percent when specified for top/left/bottom/right;\n    // rather than make the css module depend on the offset module, just check for it here\n    jQuery.each([\n        'top',\n        'left'\n    ], function (i, prop) {\n        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n            if (computed) {\n                computed = curCSS(elem, prop);\n                // If curCSS returns percentage, fallback to offset\n                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;\n            }\n        });\n    });\n    // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n    jQuery.each({\n        Height: 'height',\n        Width: 'width'\n    }, function (name, type) {\n        jQuery.each({\n            padding: 'inner' + name,\n            content: type,\n            '': 'outer' + name\n        }, function (defaultExtra, funcName) {\n            // Margin is only for outerHeight, outerWidth\n            jQuery.fn[funcName] = function (margin, value) {\n                var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');\n                return access(this, function (elem, type, value) {\n                    var doc;\n                    if (jQuery.isWindow(elem)) {\n                        // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n                        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];\n                    }\n                    // Get document width or height\n                    if (elem.nodeType === 9) {\n                        doc = elem.documentElement;\n                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n                        // whichever is greatest\n                        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);\n                    }\n                    return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n                    jQuery.css(elem, type, extra) : // Set width or height on the element\n                    jQuery.style(elem, type, value, extra);\n                }, type, chainable ? margin : undefined, chainable);\n            };\n        });\n    });\n    jQuery.fn.extend({\n        bind: function (types, data, fn) {\n            return this.on(types, null, data, fn);\n        },\n        unbind: function (types, fn) {\n            return this.off(types, null, fn);\n        },\n        delegate: function (selector, types, data, fn) {\n            return this.on(types, selector, data, fn);\n        },\n        undelegate: function (selector, types, fn) {\n            // ( namespace ) or ( selector, types [, fn] )\n            return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);\n        }\n    });\n    jQuery.holdReady = function (hold) {\n        if (hold) {\n            jQuery.readyWait++;\n        } else {\n            jQuery.ready(true);\n        }\n    };\n    jQuery.isArray = Array.isArray;\n    jQuery.parseJSON = JSON.parse;\n    jQuery.nodeName = nodeName;\n    // Register as a named AMD module, since jQuery can be concatenated with other\n    // files that may use define, but not via a proper concatenation script that\n    // understands anonymous AMD modules. A named AMD is safest and most robust\n    // way to register. Lowercase jquery is used because AMD module names are\n    // derived from file names, and jQuery is normally delivered in a lowercase\n    // file name. Do this after creating the global so that if an AMD module wants\n    // to call noConflict to hide this version of jQuery, it will work.\n    // Note that for maximum portability, libraries that are not jQuery should\n    // declare themselves as anonymous modules, and avoid setting a global if an\n    // AMD loader is present. jQuery is a special case. For more information, see\n    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n    if (typeof define === 'function' && define.amd) {\n        define('jquery', [], function () {\n            return jQuery;\n        });\n    }\n    var\n        // Map over jQuery in case of overwrite\n        _jQuery = window.jQuery,\n        // Map over the $ in case of overwrite\n        _$ = window.$;\n    jQuery.noConflict = function (deep) {\n        if (window.$ === jQuery) {\n            window.$ = _$;\n        }\n        if (deep && window.jQuery === jQuery) {\n            window.jQuery = _jQuery;\n        }\n        return jQuery;\n    };\n    // Expose jQuery and $ identifiers, even in AMD\n    // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n    // and CommonJS for browser emulators (#13566)\n    if (!noGlobal) {\n        window.jQuery = window.$ = jQuery;\n    }\n    return jQuery;\n}));},\n414: /* slickgrid/lib/jquery.event.drag-2.3.0 */ function(require, module, exports) {\n/*!\n * jquery.event.drag - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(420    /* ../slick.jquery */);\n// add the jquery instance method\n$.fn.drag = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drag') !== 0)\n        type = 'drag' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drag special event\n    drag = $special.drag = {\n        // these are the default settings\n        defaults: {\n            which: 1,\n            // mouse button pressed to start drag sequence\n            distance: 0,\n            // distance dragged before dragstart\n            not: ':input',\n            // selector to suppress dragging on target elements\n            handle: null,\n            // selector to match handle target elements\n            relative: false,\n            // true to use \"position\", false to use \"offset\"\n            drop: true,\n            // false to suppress drop events, true or selector to allow\n            click: false    // false to suppress click events after dragend (no proxy)\n        },\n        // the key name for stored drag data\n        datakey: 'dragdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drag.datakey),\n                // read any passed options\n                opts = obj.data || {};\n            // count another realted event\n            data.related += 1;\n            // extend data options bound with this event\n            // don't iterate \"opts\" in case it is a node\n            $.each(drag.defaults, function (key, def) {\n                if (opts[key] !== undefined)\n                    data[key] = opts[key];\n            });\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drag.datakey).related -= 1;\n        },\n        // configure interaction, capture settings\n        setup: function () {\n            // check for related events\n            if ($.data(this, drag.datakey))\n                return;\n            // initialize the drag data with copied defaults\n            var data = $.extend({ related: 0 }, drag.defaults);\n            // store the interaction data\n            $.data(this, drag.datakey, data);\n            // bind the mousedown event, which starts drag interactions\n            $event.add(this, 'touchstart mousedown', drag.init, data);\n            // prevent image dragging in IE...\n            if (this.attachEvent)\n                this.attachEvent('ondragstart', drag.dontstart);\n        },\n        // destroy configured interaction\n        teardown: function () {\n            var data = $.data(this, drag.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drag.datakey);\n            // remove the mousedown event\n            $event.remove(this, 'touchstart mousedown', drag.init);\n            // enable text selection\n            drag.textselect(true);\n            // un-prevent image dragging in IE...\n            if (this.detachEvent)\n                this.detachEvent('ondragstart', drag.dontstart);\n        },\n        // initialize the interaction\n        init: function (event) {\n            // sorry, only one touch at a time\n            if (drag.touched)\n                return;\n            // the drag/drop interaction data\n            var dd = event.data, results;\n            // check the which directive\n            if (event.which != 0 && dd.which > 0 && event.which != dd.which)\n                return;\n            // check for suppressed selector\n            if ($(event.target).is(dd.not))\n                return;\n            // check for handle selector\n            if (dd.handle && !$(event.target).closest(dd.handle, event.currentTarget).length)\n                return;\n            drag.touched = event.type == 'touchstart' ? this : null;\n            dd.propagates = 1;\n            dd.mousedown = this;\n            dd.interactions = [drag.interaction(this, dd)];\n            dd.target = event.target;\n            dd.pageX = event.pageX;\n            dd.pageY = event.pageY;\n            dd.dragging = null;\n            // handle draginit event...\n            results = drag.hijack(event, 'draginit', dd);\n            // early cancel\n            if (!dd.propagates)\n                return;\n            // flatten the result set\n            results = drag.flatten(results);\n            // insert new interaction elements\n            if (results && results.length) {\n                dd.interactions = [];\n                $.each(results, function () {\n                    dd.interactions.push(drag.interaction(this, dd));\n                });\n            }\n            // remember how many interactions are propagating\n            dd.propagates = dd.interactions.length;\n            // locate and init the drop targets\n            if (dd.drop !== false && $special.drop)\n                $special.drop.handler(event, dd);\n            // disable text selection\n            drag.textselect(false);\n            // bind additional events...\n            if (drag.touched)\n                $event.add(drag.touched, 'touchmove touchend', drag.handler, dd);\n            else\n                $event.add(document, 'mousemove mouseup', drag.handler, dd);\n            // helps prevent text selection or scrolling\n            if (!drag.touched || dd.live)\n                return false;\n        },\n        // returns an interaction object\n        interaction: function (elem, dd) {\n            var offset = elem && elem.ownerDocument ? $(elem)[dd.relative ? 'position' : 'offset']() || {\n                top: 0,\n                left: 0\n            } : {\n                top: 0,\n                left: 0\n            };\n            return {\n                drag: elem,\n                callback: new drag.callback(),\n                droppable: [],\n                offset: offset\n            };\n        },\n        // handle drag-releatd DOM events\n        handler: function (event) {\n            // read the data before hijacking anything\n            var dd = event.data;\n            // handle various events\n            switch (event.type) {\n            // mousemove, check distance, start dragging\n            case !dd.dragging && 'touchmove':\n                event.preventDefault();\n            case !dd.dragging && 'mousemove':\n                //  drag tolerance, x² + y² = distance²\n                if (Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) < Math.pow(dd.distance, 2))\n                    break;\n                // distance tolerance not reached\n                event.target = dd.target;\n                // force target from \"mousedown\" event (fix distance issue)\n                drag.hijack(event, 'dragstart', dd);\n                // trigger \"dragstart\"\n                if (dd.propagates)\n                    // \"dragstart\" not rejected\n                    dd.dragging = true;\n            // activate interaction\n            // mousemove, dragging\n            case 'touchmove':\n                event.preventDefault();\n            case 'mousemove':\n                if (dd.dragging) {\n                    // trigger \"drag\"\n                    drag.hijack(event, 'drag', dd);\n                    if (dd.propagates) {\n                        // manage drop events\n                        if (dd.drop !== false && $special.drop)\n                            $special.drop.handler(event, dd);\n                        // \"dropstart\", \"dropend\"\n                        break;    // \"drag\" not rejected, stop\n                    }\n                    event.type = 'mouseup';    // helps \"drop\" handler behave\n                }\n            // mouseup, stop dragging\n            case 'touchend':\n            case 'mouseup':\n            default:\n                if (drag.touched)\n                    $event.remove(drag.touched, 'touchmove touchend', drag.handler);    // remove touch events\n                else\n                    $event.remove(document, 'mousemove mouseup', drag.handler);\n                // remove page events\n                if (dd.dragging) {\n                    if (dd.drop !== false && $special.drop)\n                        $special.drop.handler(event, dd);\n                    // \"drop\"\n                    drag.hijack(event, 'dragend', dd);    // trigger \"dragend\"\n                }\n                drag.textselect(true);\n                // enable text selection\n                // if suppressing click events...\n                if (dd.click === false && dd.dragging)\n                    $.data(dd.mousedown, 'suppress.click', new Date().getTime() + 5);\n                dd.dragging = drag.touched = false;\n                // deactivate element\n                break;\n            }\n        },\n        // re-use event object for custom events\n        hijack: function (event, type, dd, x, elem) {\n            // not configured\n            if (!dd)\n                return;\n            // remember the original event and type\n            var orig = {\n                    event: event.originalEvent,\n                    type: event.type\n                },\n                // is the event drag related or drog related?\n                mode = type.indexOf('drop') ? 'drag' : 'drop',\n                // iteration vars\n                result, i = x || 0, ia, $elems, callback, len = !isNaN(x) ? x : dd.interactions.length;\n            // modify the event type\n            event.type = type;\n            // protects originalEvent from side-effects\n            var noop = function () {\n            };\n            event.originalEvent = new $.Event(orig.event, {\n                preventDefault: noop,\n                stopPropagation: noop,\n                stopImmediatePropagation: noop\n            });\n            // initialize the results\n            dd.results = [];\n            // handle each interacted element\n            do\n                if (ia = dd.interactions[i]) {\n                    // validate the interaction\n                    if (type !== 'dragend' && ia.cancelled)\n                        continue;\n                    // set the dragdrop properties on the event object\n                    callback = drag.properties(event, dd, ia);\n                    // prepare for more results\n                    ia.results = [];\n                    // handle each element\n                    $(elem || ia[mode] || dd.droppable).each(function (p, subject) {\n                        // identify drag or drop targets individually\n                        callback.target = subject;\n                        // force propagtion of the custom event\n                        event.isPropagationStopped = function () {\n                            return false;\n                        };\n                        // handle the event\n                        result = subject ? $event.dispatch.call(subject, event, callback) : null;\n                        // stop the drag interaction for this element\n                        if (result === false) {\n                            if (mode == 'drag') {\n                                ia.cancelled = true;\n                                dd.propagates -= 1;\n                            }\n                            if (type == 'drop') {\n                                ia[mode][p] = null;\n                            }\n                        }    // assign any dropinit elements\n                        else if (type == 'dropinit')\n                            ia.droppable.push(drag.element(result) || subject);\n                        // accept a returned proxy element\n                        if (type == 'dragstart')\n                            ia.proxy = $(drag.element(result) || ia.drag)[0];\n                        // remember this result\n                        ia.results.push(result);\n                        // forget the event result, for recycling\n                        delete event.result;\n                        // break on cancelled handler\n                        if (type !== 'dropinit')\n                            return result;\n                    });\n                    // flatten the results\n                    dd.results[i] = drag.flatten(ia.results);\n                    // accept a set of valid drop targets\n                    if (type == 'dropinit')\n                        ia.droppable = drag.flatten(ia.droppable);\n                    // locate drop targets\n                    if (type == 'dragstart' && !ia.cancelled)\n                        callback.update();\n                }\n            while (++i < len);\n            // restore the original event & type\n            event.type = orig.type;\n            event.originalEvent = orig.event;\n            // return all handler results\n            return drag.flatten(dd.results);\n        },\n        // extend the callback object with drag/drop properties...\n        properties: function (event, dd, ia) {\n            var obj = ia.callback;\n            // elements\n            obj.drag = ia.drag;\n            obj.proxy = ia.proxy || ia.drag;\n            // starting mouse position\n            obj.startX = dd.pageX;\n            obj.startY = dd.pageY;\n            // current distance dragged\n            obj.deltaX = event.pageX - dd.pageX;\n            obj.deltaY = event.pageY - dd.pageY;\n            // original element position\n            obj.originalX = ia.offset.left;\n            obj.originalY = ia.offset.top;\n            // adjusted element position\n            obj.offsetX = obj.originalX + obj.deltaX;\n            obj.offsetY = obj.originalY + obj.deltaY;\n            // assign the drop targets information\n            obj.drop = drag.flatten((ia.drop || []).slice());\n            obj.available = drag.flatten((ia.droppable || []).slice());\n            return obj;\n        },\n        // determine is the argument is an element or jquery instance\n        element: function (arg) {\n            if (arg && (arg.jquery || arg.nodeType == 1))\n                return arg;\n        },\n        // flatten nested jquery objects and arrays into a single dimension array\n        flatten: function (arr) {\n            return $.map(arr, function (member) {\n                return member && member.jquery ? $.makeArray(member) : member && member.length ? drag.flatten(member) : member;\n            });\n        },\n        // toggles text selection attributes ON (true) or OFF (false)\n        textselect: function (bool) {\n            $(document)[bool ? 'off' : 'on']('selectstart', drag.dontstart).css('MozUserSelect', bool ? '' : 'none');\n            // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n            document.unselectable = bool ? 'off' : 'on';\n        },\n        // suppress \"selectstart\" and \"ondragstart\" events\n        dontstart: function () {\n            return false;\n        },\n        // a callback instance contructor\n        callback: function () {\n        }\n    };\n// callback methods\ndrag.callback.prototype = {\n    update: function () {\n        if ($special.drop && this.available.length)\n            $.each(this.available, function (i) {\n                $special.drop.locate(this, i);\n            });\n    }\n};\n// patch $.event.$dispatch to allow suppressing clicks\nvar $dispatch = $event.dispatch;\n$event.dispatch = function (event) {\n    if ($.data(this, 'suppress.' + event.type) - new Date().getTime() > 0) {\n        $.removeData(this, 'suppress.' + event.type);\n        return;\n    }\n    return $dispatch.apply(this, arguments);\n};\n// share the same special event configuration with related events...\n$special.draginit = $special.dragstart = $special.dragend = drag;},\n415: /* slickgrid/lib/jquery.event.drop-2.3.0 */ function(require, module, exports) {\n/*!\n * jquery.event.drop - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(420    /* ../slick.jquery */);\n// Events: drop, dropstart, dropend\n// add the jquery instance method\n$.fn.drop = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drop') !== 0)\n        type = 'drop' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// DROP MANAGEMENT UTILITY\n// returns filtered drop target elements, caches their positions\n$.drop = function (opts) {\n    opts = opts || {};\n    // safely set new options...\n    drop.multi = opts.multi === true ? Infinity : opts.multi === false ? 1 : !isNaN(opts.multi) ? opts.multi : drop.multi;\n    drop.delay = opts.delay || drop.delay;\n    drop.tolerance = $.isFunction(opts.tolerance) ? opts.tolerance : opts.tolerance === null ? null : drop.tolerance;\n    drop.mode = opts.mode || drop.mode || 'intersect';\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drop special event\n    drop = $.event.special.drop = {\n        // these are the default settings\n        multi: 1,\n        // allow multiple drop winners per dragged element\n        delay: 20,\n        // async timeout delay\n        mode: 'overlap',\n        // drop tolerance mode\n        // internal cache\n        targets: [],\n        // the key name for stored drop data\n        datakey: 'dropdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drop.datakey);\n            // count another realted event\n            data.related += 1;\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drop.datakey).related -= 1;\n        },\n        // configure the interactions\n        setup: function () {\n            // check for related events\n            if ($.data(this, drop.datakey))\n                return;\n            // initialize the drop element data\n            var data = {\n                related: 0,\n                active: [],\n                anyactive: 0,\n                winner: 0,\n                location: {}\n            };\n            // store the drop data on the element\n            $.data(this, drop.datakey, data);\n            // store the drop target in internal cache\n            drop.targets.push(this);\n        },\n        // destroy the configure interaction\n        teardown: function () {\n            var data = $.data(this, drop.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drop.datakey);\n            // reference the targeted element\n            var element = this;\n            // remove from the internal cache\n            drop.targets = $.grep(drop.targets, function (target) {\n                return target !== element;\n            });\n        },\n        // shared event handler\n        handler: function (event, dd) {\n            // local vars\n            var results, $targets;\n            // make sure the right data is available\n            if (!dd)\n                return;\n            // handle various events\n            switch (event.type) {\n            // draginit, from $.event.special.drag\n            case 'mousedown':\n            // DROPINIT >>\n            case 'touchstart':\n                // DROPINIT >>\n                // collect and assign the drop targets\n                $targets = $(drop.targets);\n                if (typeof dd.drop == 'string')\n                    $targets = $targets.filter(dd.drop);\n                // reset drop data winner properties\n                $targets.each(function () {\n                    var data = $.data(this, drop.datakey);\n                    data.active = [];\n                    data.anyactive = 0;\n                    data.winner = 0;\n                });\n                // set available target elements\n                dd.droppable = $targets;\n                // activate drop targets for the initial element being dragged\n                $special.drag.hijack(event, 'dropinit', dd);\n                break;\n            // drag, from $.event.special.drag\n            case 'mousemove':\n            // TOLERATE >>\n            case 'touchmove':\n                // TOLERATE >>\n                drop.event = event;\n                // store the mousemove event\n                if (!drop.timer)\n                    // monitor drop targets\n                    drop.tolerate(dd);\n                break;\n            // dragend, from $.event.special.drag\n            case 'mouseup':\n            // DROP >> DROPEND >>\n            case 'touchend':\n                // DROP >> DROPEND >>\n                drop.timer = clearTimeout(drop.timer);\n                // delete timer\n                if (dd.propagates) {\n                    $special.drag.hijack(event, 'drop', dd);\n                    $special.drag.hijack(event, 'dropend', dd);\n                }\n                break;\n            }\n        },\n        // returns the location positions of an element\n        locate: function (elem, index) {\n            var data = $.data(elem, drop.datakey), $elem = $(elem), posi = $elem.offset() || {}, height = $elem.outerHeight(), width = $elem.outerWidth(), location = {\n                    elem: elem,\n                    width: width,\n                    height: height,\n                    top: posi.top,\n                    left: posi.left,\n                    right: posi.left + width,\n                    bottom: posi.top + height\n                };\n            // drag elements might not have dropdata\n            if (data) {\n                data.location = location;\n                data.index = index;\n                data.elem = elem;\n            }\n            return location;\n        },\n        // test the location positions of an element against another OR an X,Y coord\n        contains: function (target, test) {\n            // target { location } contains test [x,y] or { location }\n            return (test[0] || test.left) >= target.left && (test[0] || test.right) <= target.right && (test[1] || test.top) >= target.top && (test[1] || test.bottom) <= target.bottom;\n        },\n        // stored tolerance modes\n        modes: {\n            // fn scope: \"$.event.special.drop\" object\n            // target with mouse wins, else target with most overlap wins\n            'intersect': function (event, proxy, target) {\n                return this.contains(target, [\n                    event.pageX,\n                    event.pageY\n                ]) ? // check cursor\n                1000000000 : this.modes.overlap.apply(this, arguments);    // check overlap\n            },\n            // target with most overlap wins\n            'overlap': function (event, proxy, target) {\n                // calculate the area of overlap...\n                return Math.max(0, Math.min(target.bottom, proxy.bottom) - Math.max(target.top, proxy.top)) * Math.max(0, Math.min(target.right, proxy.right) - Math.max(target.left, proxy.left));\n            },\n            // proxy is completely contained within target bounds\n            'fit': function (event, proxy, target) {\n                return this.contains(target, proxy) ? 1 : 0;\n            },\n            // center of the proxy is contained within target bounds\n            'middle': function (event, proxy, target) {\n                return this.contains(target, [\n                    proxy.left + proxy.width * 0.5,\n                    proxy.top + proxy.height * 0.5\n                ]) ? 1 : 0;\n            }\n        },\n        // sort drop target cache by by winner (dsc), then index (asc)\n        sort: function (a, b) {\n            return b.winner - a.winner || a.index - b.index;\n        },\n        // async, recursive tolerance execution\n        tolerate: function (dd) {\n            // declare local refs\n            var i, drp, drg, data, arr, len, elem,\n                // interaction iteration variables\n                x = 0, ia, end = dd.interactions.length,\n                // determine the mouse coords\n                xy = [\n                    drop.event.pageX,\n                    drop.event.pageY\n                ],\n                // custom or stored tolerance fn\n                tolerance = drop.tolerance || drop.modes[drop.mode];\n            // go through each passed interaction...\n            do\n                if (ia = dd.interactions[x]) {\n                    // check valid interaction\n                    if (!ia)\n                        return;\n                    // initialize or clear the drop data\n                    ia.drop = [];\n                    // holds the drop elements\n                    arr = [];\n                    len = ia.droppable.length;\n                    // determine the proxy location, if needed\n                    if (tolerance)\n                        drg = drop.locate(ia.proxy);\n                    // reset the loop\n                    i = 0;\n                    // loop each stored drop target\n                    do\n                        if (elem = ia.droppable[i]) {\n                            data = $.data(elem, drop.datakey);\n                            drp = data.location;\n                            if (!drp)\n                                continue;\n                            // find a winner: tolerance function is defined, call it\n                            data.winner = tolerance ? tolerance.call(drop, drop.event, drg, drp)    // mouse position is always the fallback\n : drop.contains(drp, xy) ? 1 : 0;\n                            arr.push(data);\n                        }\n                    while (++i < len);\n                    // loop\n                    // sort the drop targets\n                    arr.sort(drop.sort);\n                    // reset the loop\n                    i = 0;\n                    // loop through all of the targets again\n                    do\n                        if (data = arr[i]) {\n                            // winners...\n                            if (data.winner && ia.drop.length < drop.multi) {\n                                // new winner... dropstart\n                                if (!data.active[x] && !data.anyactive) {\n                                    // check to make sure that this is not prevented\n                                    if ($special.drag.hijack(drop.event, 'dropstart', dd, x, data.elem)[0] !== false) {\n                                        data.active[x] = 1;\n                                        data.anyactive += 1;\n                                    }    // if false, it is not a winner\n                                    else\n                                        data.winner = 0;\n                                }\n                                // if it is still a winner\n                                if (data.winner)\n                                    ia.drop.push(data.elem);\n                            }    // losers...\n                            else if (data.active[x] && data.anyactive == 1) {\n                                // former winner... dropend\n                                $special.drag.hijack(drop.event, 'dropend', dd, x, data.elem);\n                                data.active[x] = 0;\n                                data.anyactive -= 1;\n                            }\n                        }\n                    while (++i < len);    // loop\n                }\n            while (++x < end);\n            // loop\n            // check if the mouse is still moving or is idle\n            if (drop.last && xy[0] == drop.last.pageX && xy[1] == drop.last.pageY)\n                delete drop.timer;    // idle, don't recurse\n            else\n                // recurse\n                drop.timer = setTimeout(function () {\n                    drop.tolerate(dd);\n                }, drop.delay);\n            // remember event, to compare idleness\n            drop.last = drop.event;\n        }\n    };\n// share the same special event configuration with related events...\n$special.dropinit = $special.dropstart = $special.dropend = drop;},\n416: /* slickgrid/plugins/slick.checkboxselectcolumn */ function(require, module, exports) {\n'use strict';\nvar $ = require(420    /* ../slick.jquery */);\nvar Slick = require(418    /* ../slick.core */);\nfunction CheckboxSelectColumn(options) {\n    var _grid;\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _selectedRowsLookup = {};\n    var _defaults = {\n        columnId: '_checkbox_selector',\n        cssClass: null,\n        toolTip: 'Select/Deselect All',\n        width: 30\n    };\n    var _options = $.extend(true, {}, _defaults, options);\n    function init(grid) {\n        _grid = grid;\n        _handler.subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged).subscribe(_grid.onClick, handleClick).subscribe(_grid.onHeaderClick, handleHeaderClick).subscribe(_grid.onKeyDown, handleKeyDown);\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function handleSelectedRowsChanged(e, args) {\n        var selectedRows = _grid.getSelectedRows();\n        var lookup = {}, row, i;\n        for (i = 0; i < selectedRows.length; i++) {\n            row = selectedRows[i];\n            lookup[row] = true;\n            if (lookup[row] !== _selectedRowsLookup[row]) {\n                _grid.invalidateRow(row);\n                delete _selectedRowsLookup[row];\n            }\n        }\n        for (i in _selectedRowsLookup) {\n            _grid.invalidateRow(i);\n        }\n        _selectedRowsLookup = lookup;\n        _grid.render();\n        if (selectedRows.length && selectedRows.length == _grid.getDataLength()) {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\' checked=\\'checked\\'>', _options.toolTip);\n        } else {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\'>', _options.toolTip);\n        }\n    }\n    function handleKeyDown(e, args) {\n        if (e.which == 32) {\n            if (_grid.getColumns()[args.cell].id === _options.columnId) {\n                // if editing, try to commit\n                if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()) {\n                    toggleRowSelection(args.row);\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n    }\n    function handleClick(e, args) {\n        // clicking on a row select checkbox\n        if (_grid.getColumns()[args.cell].id === _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            toggleRowSelection(args.row);\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function toggleRowSelection(row) {\n        if (_selectedRowsLookup[row]) {\n            _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n                return n != row;\n            }));\n        } else {\n            _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n        }\n    }\n    function selectRows(rowArray) {\n        var i, l = rowArray.length, addRows = [];\n        for (i = 0; i < l; i++) {\n            if (!_selectedRowsLookup[rowArray[i]]) {\n                addRows[addRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows(_grid.getSelectedRows().concat(addRows));\n    }\n    function deSelectRows(rowArray) {\n        var i, l = rowArray.length, removeRows = [];\n        for (i = 0; i < l; i++) {\n            if (_selectedRowsLookup[rowArray[i]]) {\n                removeRows[removeRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n            return removeRows.indexOf(n) < 0;\n        }));\n    }\n    function handleHeaderClick(e, args) {\n        if (args.column.id == _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            if ($(e.target).is(':checked')) {\n                var rows = [];\n                for (var i = 0; i < _grid.getDataLength(); i++) {\n                    rows.push(i);\n                }\n                _grid.setSelectedRows(rows);\n            } else {\n                _grid.setSelectedRows([]);\n            }\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function getColumnDefinition() {\n        return {\n            id: _options.columnId,\n            name: '<input type=\\'checkbox\\'>',\n            toolTip: _options.toolTip,\n            field: 'sel',\n            width: _options.width,\n            resizable: false,\n            sortable: false,\n            cssClass: _options.cssClass,\n            formatter: checkboxSelectionFormatter\n        };\n    }\n    function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext) {\n        if (dataContext) {\n            return _selectedRowsLookup[row] ? '<input type=\\'checkbox\\' checked=\\'checked\\'>' : '<input type=\\'checkbox\\'>';\n        }\n        return null;\n    }\n    $.extend(this, {\n        'init': init,\n        'destroy': destroy,\n        'deSelectRows': deSelectRows,\n        'selectRows': selectRows,\n        'getColumnDefinition': getColumnDefinition\n    });\n}\nmodule.exports = { 'CheckboxSelectColumn': CheckboxSelectColumn };},\n417: /* slickgrid/plugins/slick.rowselectionmodel */ function(require, module, exports) {\n'use strict';\nvar $ = require(420    /* ../slick.jquery */);\nvar Slick = require(418    /* ../slick.core */);\nfunction RowSelectionModel(options) {\n    var _grid;\n    var _ranges = [];\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _inHandler;\n    var _options;\n    var _defaults = { selectActiveRow: true };\n    function init(grid) {\n        _options = $.extend(true, {}, _defaults, options);\n        _grid = grid;\n        _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange));\n        _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown));\n        _handler.subscribe(_grid.onClick, wrapHandler(handleClick));\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function wrapHandler(handler) {\n        return function () {\n            if (!_inHandler) {\n                _inHandler = true;\n                handler.apply(this, arguments);\n                _inHandler = false;\n            }\n        };\n    }\n    function rangesToRows(ranges) {\n        var rows = [];\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                rows.push(j);\n            }\n        }\n        return rows;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = _grid.getColumns().length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getRowsRange(from, to) {\n        var i, rows = [];\n        for (i = from; i <= to; i++) {\n            rows.push(i);\n        }\n        for (i = to; i < from; i++) {\n            rows.push(i);\n        }\n        return rows;\n    }\n    function getSelectedRows() {\n        return rangesToRows(_ranges);\n    }\n    function setSelectedRows(rows) {\n        setSelectedRanges(rowsToRanges(rows));\n    }\n    function setSelectedRanges(ranges) {\n        // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n        if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n            return;\n        }\n        _ranges = ranges;\n        _self.onSelectedRangesChanged.notify(_ranges);\n    }\n    function getSelectedRanges() {\n        return _ranges;\n    }\n    function handleActiveCellChange(e, data) {\n        if (_options.selectActiveRow && data.row != null) {\n            setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n        }\n    }\n    function handleKeyDown(e) {\n        var activeRow = _grid.getActiveCell();\n        if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)) {\n            var selectedRows = getSelectedRows();\n            selectedRows.sort(function (x, y) {\n                return x - y;\n            });\n            if (!selectedRows.length) {\n                selectedRows = [activeRow.row];\n            }\n            var top = selectedRows[0];\n            var bottom = selectedRows[selectedRows.length - 1];\n            var active;\n            if (e.which == 40) {\n                active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n            } else {\n                active = activeRow.row < bottom ? --bottom : --top;\n            }\n            if (active >= 0 && active < _grid.getDataLength()) {\n                _grid.scrollRowIntoView(active);\n                var tempRanges = rowsToRanges(getRowsRange(top, bottom));\n                setSelectedRanges(tempRanges);\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    function handleClick(e) {\n        var cell = _grid.getCellFromEvent(e);\n        if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n            return false;\n        }\n        if (!_grid.getOptions().multiSelect || !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n            return false;\n        }\n        var selection = rangesToRows(_ranges);\n        var idx = $.inArray(cell.row, selection);\n        if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n            selection.push(cell.row);\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n            selection = $.grep(selection, function (o, i) {\n                return o !== cell.row;\n            });\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (selection.length && e.shiftKey) {\n            var last = selection.pop();\n            var from = Math.min(cell.row, last);\n            var to = Math.max(cell.row, last);\n            selection = [];\n            for (var i = from; i <= to; i++) {\n                if (i !== last) {\n                    selection.push(i);\n                }\n            }\n            selection.push(last);\n            _grid.setActiveCell(cell.row, cell.cell);\n        }\n        var tempRanges = rowsToRanges(selection);\n        setSelectedRanges(tempRanges);\n        e.stopImmediatePropagation();\n        return true;\n    }\n    $.extend(this, {\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getSelectedRanges': getSelectedRanges,\n        'setSelectedRanges': setSelectedRanges,\n        'init': init,\n        'destroy': destroy,\n        'onSelectedRangesChanged': new Slick.Event()\n    });\n}\nmodule.exports = { 'RowSelectionModel': RowSelectionModel };},\n418: /* slickgrid/slick.core */ function(require, module, exports) {\n'use strict';\n/***\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\n/***\n   * An event object for passing data to event handlers and letting them control propagation.\n   * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n   * @class EventData\n   * @constructor\n   */\nfunction EventData() {\n    var isPropagationStopped = false;\n    var isImmediatePropagationStopped = false;\n    /***\n     * Stops event from propagating up the DOM tree.\n     * @method stopPropagation\n     */\n    this.stopPropagation = function () {\n        isPropagationStopped = true;\n    };\n    /***\n     * Returns whether stopPropagation was called on this event object.\n     * @method isPropagationStopped\n     * @return {Boolean}\n     */\n    this.isPropagationStopped = function () {\n        return isPropagationStopped;\n    };\n    /***\n     * Prevents the rest of the handlers from being executed.\n     * @method stopImmediatePropagation\n     */\n    this.stopImmediatePropagation = function () {\n        isImmediatePropagationStopped = true;\n    };\n    /***\n     * Returns whether stopImmediatePropagation was called on this event object.\\\n     * @method isImmediatePropagationStopped\n     * @return {Boolean}\n     */\n    this.isImmediatePropagationStopped = function () {\n        return isImmediatePropagationStopped;\n    };\n}\n/***\n   * A simple publisher-subscriber implementation.\n   * @class Event\n   * @constructor\n   */\nfunction Event() {\n    var handlers = [];\n    /***\n     * Adds an event handler to be called when the event is fired.\n     * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n     * object the event was fired with.<p>\n     * @method subscribe\n     * @param fn {Function} Event handler.\n     */\n    this.subscribe = function (fn) {\n        handlers.push(fn);\n    };\n    /***\n     * Removes an event handler added with <code>subscribe(fn)</code>.\n     * @method unsubscribe\n     * @param fn {Function} Event handler to be removed.\n     */\n    this.unsubscribe = function (fn) {\n        for (var i = handlers.length - 1; i >= 0; i--) {\n            if (handlers[i] === fn) {\n                handlers.splice(i, 1);\n            }\n        }\n    };\n    /***\n     * Fires an event notifying all subscribers.\n     * @method notify\n     * @param args {Object} Additional data object to be passed to all handlers.\n     * @param e {EventData}\n     *      Optional.\n     *      An <code>EventData</code> object to be passed to all handlers.\n     *      For DOM events, an existing W3C/jQuery event object can be passed in.\n     * @param scope {Object}\n     *      Optional.\n     *      The scope (\"this\") within which the handler will be executed.\n     *      If not specified, the scope will be set to the <code>Event</code> instance.\n     */\n    this.notify = function (args, e, scope) {\n        e = e || new EventData();\n        scope = scope || this;\n        var returnValue;\n        for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\n            returnValue = handlers[i].call(scope, e, args);\n        }\n        return returnValue;\n    };\n}\nfunction EventHandler() {\n    var handlers = [];\n    this.subscribe = function (event, handler) {\n        handlers.push({\n            event: event,\n            handler: handler\n        });\n        event.subscribe(handler);\n        return this;    // allow chaining\n    };\n    this.unsubscribe = function (event, handler) {\n        var i = handlers.length;\n        while (i--) {\n            if (handlers[i].event === event && handlers[i].handler === handler) {\n                handlers.splice(i, 1);\n                event.unsubscribe(handler);\n                return;\n            }\n        }\n        return this;    // allow chaining\n    };\n    this.unsubscribeAll = function () {\n        var i = handlers.length;\n        while (i--) {\n            handlers[i].event.unsubscribe(handlers[i].handler);\n        }\n        handlers = [];\n        return this;    // allow chaining\n    };\n}\n/***\n   * A structure containing a range of cells.\n   * @class Range\n   * @constructor\n   * @param fromRow {Integer} Starting row.\n   * @param fromCell {Integer} Starting cell.\n   * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n   * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n   */\nfunction Range(fromRow, fromCell, toRow, toCell) {\n    if (toRow === undefined && toCell === undefined) {\n        toRow = fromRow;\n        toCell = fromCell;\n    }\n    /***\n     * @property fromRow\n     * @type {Integer}\n     */\n    this.fromRow = Math.min(fromRow, toRow);\n    /***\n     * @property fromCell\n     * @type {Integer}\n     */\n    this.fromCell = Math.min(fromCell, toCell);\n    /***\n     * @property toRow\n     * @type {Integer}\n     */\n    this.toRow = Math.max(fromRow, toRow);\n    /***\n     * @property toCell\n     * @type {Integer}\n     */\n    this.toCell = Math.max(fromCell, toCell);\n    /***\n     * Returns whether a range represents a single row.\n     * @method isSingleRow\n     * @return {Boolean}\n     */\n    this.isSingleRow = function () {\n        return this.fromRow == this.toRow;\n    };\n    /***\n     * Returns whether a range represents a single cell.\n     * @method isSingleCell\n     * @return {Boolean}\n     */\n    this.isSingleCell = function () {\n        return this.fromRow == this.toRow && this.fromCell == this.toCell;\n    };\n    /***\n     * Returns whether a range contains a given cell.\n     * @method contains\n     * @param row {Integer}\n     * @param cell {Integer}\n     * @return {Boolean}\n     */\n    this.contains = function (row, cell) {\n        return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n    };\n    /***\n     * Returns a readable representation of a range.\n     * @method toString\n     * @return {String}\n     */\n    this.toString = function () {\n        if (this.isSingleCell()) {\n            return '(' + this.fromRow + ':' + this.fromCell + ')';\n        } else {\n            return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n        }\n    };\n}\n/***\n   * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n   * @class NonDataItem\n   * @constructor\n   */\nfunction NonDataItem() {\n    this.__nonDataRow = true;\n}\n/***\n   * Information about a group of rows.\n   * @class Group\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction Group() {\n    this.__group = true;\n    /**\n     * Grouping level, starting with 0.\n     * @property level\n     * @type {Number}\n     */\n    this.level = 0;\n    /***\n     * Number of rows in the group.\n     * @property count\n     * @type {Integer}\n     */\n    this.count = 0;\n    /***\n     * Grouping value.\n     * @property value\n     * @type {Object}\n     */\n    this.value = null;\n    /***\n     * Formatted display value of the group.\n     * @property title\n     * @type {String}\n     */\n    this.title = null;\n    /***\n     * Whether a group is collapsed.\n     * @property collapsed\n     * @type {Boolean}\n     */\n    this.collapsed = false;\n    /***\n     * Whether a group selection checkbox is checked.\n     * @property selectChecked\n     * @type {Boolean}\n     */\n    this.selectChecked = false;\n    /***\n     * GroupTotals, if any.\n     * @property totals\n     * @type {GroupTotals}\n     */\n    this.totals = null;\n    /**\n     * Rows that are part of the group.\n     * @property rows\n     * @type {Array}\n     */\n    this.rows = [];\n    /**\n     * Sub-groups that are part of the group.\n     * @property groups\n     * @type {Array}\n     */\n    this.groups = null;\n    /**\n     * A unique key used to identify the group.  This key can be used in calls to DataView\n     * collapseGroup() or expandGroup().\n     * @property groupingKey\n     * @type {Object}\n     */\n    this.groupingKey = null;\n}\nGroup.prototype = new NonDataItem();\n/***\n   * Compares two Group instances.\n   * @method equals\n   * @return {Boolean}\n   * @param group {Group} Group instance to compare to.\n   */\nGroup.prototype.equals = function (group) {\n    return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n/***\n   * Information about group totals.\n   * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n   * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n   * formatters during the display.\n   * @class GroupTotals\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction GroupTotals() {\n    this.__groupTotals = true;\n    /***\n     * Parent Group.\n     * @param group\n     * @type {Group}\n     */\n    this.group = null;\n    /***\n     * Whether the totals have been fully initialized / calculated.\n     * Will be set to false for lazy-calculated group totals.\n     * @param initialized\n     * @type {Boolean}\n     */\n    this.initialized = false;\n}\nGroupTotals.prototype = new NonDataItem();\n/***\n   * A locking helper to track the active edit controller and ensure that only a single controller\n   * can be active at a time.  This prevents a whole class of state and validation synchronization\n   * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n   * and attempt a commit or cancel before proceeding.\n   * @class EditorLock\n   * @constructor\n   */\nfunction EditorLock() {\n    var activeEditController = null;\n    /***\n     * Returns true if a specified edit controller is active (has the edit lock).\n     * If the parameter is not specified, returns true if any edit controller is active.\n     * @method isActive\n     * @param editController {EditController}\n     * @return {Boolean}\n     */\n    this.isActive = function (editController) {\n        return editController ? activeEditController === editController : activeEditController !== null;\n    };\n    /***\n     * Sets the specified edit controller as the active edit controller (acquire edit lock).\n     * If another edit controller is already active, and exception will be throw new Error(.\n     * @method activate\n     * @param editController {EditController} edit controller acquiring the lock\n     */\n    this.activate = function (editController) {\n        if (editController === activeEditController) {\n            // already activated?\n            return;\n        }\n        if (activeEditController !== null) {\n            throw new Error('SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController');\n        }\n        if (!editController.commitCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()');\n        }\n        if (!editController.cancelCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()');\n        }\n        activeEditController = editController;\n    };\n    /***\n     * Unsets the specified edit controller as the active edit controller (release edit lock).\n     * If the specified edit controller is not the active one, an exception will be throw new Error(.\n     * @method deactivate\n     * @param editController {EditController} edit controller releasing the lock\n     */\n    this.deactivate = function (editController) {\n        if (activeEditController !== editController) {\n            throw new Error('SlickGrid.EditorLock.deactivate: specified editController is not the currently active one');\n        }\n        activeEditController = null;\n    };\n    /***\n     * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n     * controller and returns whether the commit attempt was successful (commit may fail due to validation\n     * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n     * and false otherwise.  If no edit controller is active, returns true.\n     * @method commitCurrentEdit\n     * @return {Boolean}\n     */\n    this.commitCurrentEdit = function () {\n        return activeEditController ? activeEditController.commitCurrentEdit() : true;\n    };\n    /***\n     * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n     * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n     * active, returns true.\n     * @method cancelCurrentEdit\n     * @return {Boolean}\n     */\n    this.cancelCurrentEdit = function cancelCurrentEdit() {\n        return activeEditController ? activeEditController.cancelCurrentEdit() : true;\n    };\n}\nmodule.exports = {\n    'Event': Event,\n    'EventData': EventData,\n    'EventHandler': EventHandler,\n    'Range': Range,\n    'NonDataRow': NonDataItem,\n    'Group': Group,\n    'GroupTotals': GroupTotals,\n    'EditorLock': EditorLock,\n    /***\n     * A global singleton editor lock.\n     * @class GlobalEditorLock\n     * @static\n     * @constructor\n     */\n    'GlobalEditorLock': new EditorLock(),\n    'keyCode': {\n        BACKSPACE: 8,\n        DELETE: 46,\n        DOWN: 40,\n        END: 35,\n        ENTER: 13,\n        ESCAPE: 27,\n        ESC: 27,\n        HOME: 36,\n        INSERT: 45,\n        LEFT: 37,\n        PAGE_DOWN: 34,\n        PAGE_UP: 33,\n        RIGHT: 39,\n        TAB: 9,\n        UP: 38,\n        C: 67,\n        V: 86\n    },\n    'preClickClassName': 'slick-edit-preclick'\n};},\n419: /* slickgrid/slick.grid */ function(require, module, exports) {\n'use strict';\n/**\r\n * @license\r\n * (c) 2009-2016 Michael Leibman\r\n * michael{dot}leibman{at}gmail{dot}com\r\n * http://github.com/mleibman/slickgrid\r\n *\r\n * Distributed under MIT license.\r\n * All rights reserved.\r\n *\r\n * SlickGrid v2.3\r\n *\r\n * NOTES:\r\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\r\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\r\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\r\n *     and do proper cleanup.\r\n */\nvar $ = require(420    /* ./slick.jquery */);\nvar Slick = require(418    /* ./slick.core */);\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight;\n// browser's breaking point\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n/**\r\n   * Creates a new instance of the grid.\r\n   * @class SlickGrid\r\n   * @constructor\r\n   * @param {Node}              container   Container node to create the grid in.\r\n   * @param {Array,Object}      data        An array of objects for databinding.\r\n   * @param {Array}             columns     An array of column definitions.\r\n   * @param {Object}            options     Grid options.\r\n   **/\nfunction SlickGrid(container, data, columns, options) {\n    if (!$.fn.drag) {\n        require(414    /* ./lib/jquery.event.drag-2.3.0 */);\n    }\n    if (!$.fn.drop) {\n        require(415    /* ./lib/jquery.event.drop-2.3.0 */);\n    }\n    // settings\n    var defaults = {\n        explicitInitialization: false,\n        rowHeight: 25,\n        defaultColumnWidth: 80,\n        enableAddRow: false,\n        leaveSpaceForNewRows: false,\n        editable: false,\n        autoEdit: true,\n        enableCellNavigation: true,\n        enableColumnReorder: true,\n        asyncEditorLoading: false,\n        asyncEditorLoadDelay: 100,\n        forceFitColumns: false,\n        enableAsyncPostRender: false,\n        asyncPostRenderDelay: 50,\n        enableAsyncPostRenderCleanup: false,\n        asyncPostRenderCleanupDelay: 40,\n        autoHeight: false,\n        editorLock: Slick.GlobalEditorLock,\n        showHeaderRow: false,\n        headerRowHeight: 25,\n        createFooterRow: false,\n        showFooterRow: false,\n        footerRowHeight: 25,\n        createPreHeaderPanel: false,\n        showPreHeaderPanel: false,\n        preHeaderPanelHeight: 25,\n        showTopPanel: false,\n        topPanelHeight: 25,\n        formatterFactory: null,\n        editorFactory: null,\n        cellFlashingCssClass: 'flashing',\n        selectedCellCssClass: 'selected',\n        multiSelect: true,\n        enableTextSelectionOnCells: false,\n        dataItemColumnValueExtractor: null,\n        fullWidthRows: false,\n        multiColumnSort: false,\n        numberedMultiColumnSort: false,\n        tristateMultiColumnSort: false,\n        defaultFormatter: defaultFormatter,\n        forceSyncScrolling: false,\n        addNewRowCssClass: 'new-row',\n        preserveCopiedSelectionOnPaste: false,\n        showCellSelection: true\n    };\n    var columnDefaults = {\n        name: '',\n        resizable: true,\n        sortable: false,\n        minWidth: 30,\n        rerenderOnResize: false,\n        headerCssClass: null,\n        defaultSortAsc: true,\n        focusable: true,\n        selectable: true\n    };\n    // scroller\n    var th;\n    // virtual height\n    var h;\n    // real scrollable height\n    var ph;\n    // page height\n    var n;\n    // number of pages\n    var cj;\n    // \"jumpiness\" coefficient\n    var page = 0;\n    // current page\n    var offset = 0;\n    // current page offset\n    var vScrollDir = 1;\n    // private\n    var initialized = false;\n    var $container;\n    var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n    var self = this;\n    var $focusSink, $focusSink2;\n    var $headerScroller;\n    var $headers;\n    var $headerRow, $headerRowScroller, $headerRowSpacer;\n    var $footerRow, $footerRowScroller, $footerRowSpacer;\n    var $preHeaderPanel, $preHeaderPanelScroller, $preHeaderPanelSpacer;\n    var $topPanelScroller;\n    var $topPanel;\n    var $viewport;\n    var $canvas;\n    var $style;\n    var $boundAncestors;\n    var stylesheet, columnCssRulesL, columnCssRulesR;\n    var viewportH, viewportW;\n    var canvasWidth;\n    var viewportHasHScroll, viewportHasVScroll;\n    var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0,\n        // border+padding\n        cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\n    var absoluteColumnMinWidth;\n    var sortIndicatorCssClass = 'slick-sort-indicator';\n    var tabbingDirection = 1;\n    var activePosX;\n    var activeRow, activeCell;\n    var activeCellNode = null;\n    var currentEditor = null;\n    var serializedEditorValue;\n    var editController;\n    var rowsCache = {};\n    var renderedRows = 0;\n    var numVisibleRows;\n    var prevScrollTop = 0;\n    var scrollTop = 0;\n    var lastRenderedScrollTop = 0;\n    var lastRenderedScrollLeft = 0;\n    var prevScrollLeft = 0;\n    var scrollLeft = 0;\n    var selectionModel;\n    var selectedRows = [];\n    var plugins = [];\n    var cellCssClasses = {};\n    var columnsById = {};\n    var sortColumns = [];\n    var columnPosLeft = [];\n    var columnPosRight = [];\n    var pagingActive = false;\n    var pagingIsLastPage = false;\n    // async call handles\n    var h_editorLoader = null;\n    var h_render = null;\n    var h_postrender = null;\n    var h_postrenderCleanup = null;\n    var postProcessedRows = {};\n    var postProcessToRow = null;\n    var postProcessFromRow = null;\n    var postProcessedCleanupQueue = [];\n    var postProcessgroupId = 0;\n    // perf counters\n    var counter_rows_rendered = 0;\n    var counter_rows_removed = 0;\n    // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n    // See http://crbug.com/312427.\n    var rowNodeFromLastMouseWheelEvent;\n    // this node must not be deleted while inertial scrolling\n    var zombieRowNodeFromLastMouseWheelEvent;\n    // node that was hidden instead of getting deleted\n    var zombieRowCacheFromLastMouseWheelEvent;\n    // row cache for above node\n    var zombieRowPostProcessedFromLastMouseWheelEvent;\n    // post processing references for above node\n    // store css attributes if display:none is active in container or parent\n    var cssShow = {\n        position: 'absolute',\n        visibility: 'hidden',\n        display: 'block'\n    };\n    var $hiddenParents;\n    var oldProps = [];\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Initialization\n    function init() {\n        if (container instanceof $) {\n            $container = container;\n        } else {\n            $container = $(container);\n        }\n        if ($container.length < 1) {\n            throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n        }\n        cacheCssForHiddenInit();\n        // calculate these only once and share between grid instances\n        maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n        scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n        options = $.extend({}, defaults, options);\n        validateAndEnforceOptions();\n        columnDefaults.width = options.defaultColumnWidth;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        // validate loaded JavaScript modules against requested options\n        if (options.enableColumnReorder && !$.fn.sortable) {\n            throw new Error('SlickGrid\\'s \\'enableColumnReorder = true\\' option requires jquery-ui.sortable module to be loaded');\n        }\n        editController = {\n            'commitCurrentEdit': commitCurrentEdit,\n            'cancelCurrentEdit': cancelCurrentEdit\n        };\n        $container.empty().css('overflow', 'hidden').css('outline', 0).addClass(uid).addClass('ui-widget');\n        // set up a positioning container if needed\n        if (!/relative|absolute|fixed/.test($container.css('position'))) {\n            $container.css('position', 'relative');\n        }\n        $focusSink = $('<div tabIndex=\\'0\\' hideFocus style=\\'position:fixed;width:0;height:0;top:0;left:0;outline:0;\\'></div>').appendTo($container);\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelScroller = $('<div class=\\'slick-preheader-panel ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $preHeaderPanel = $('<div />').appendTo($preHeaderPanelScroller);\n            $preHeaderPanelSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($preHeaderPanelScroller);\n            if (!options.showPreHeaderPanel) {\n                $preHeaderPanelScroller.hide();\n            }\n        }\n        $headerScroller = $('<div class=\\'slick-header ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headers = $('<div class=\\'slick-header-columns\\' style=\\'left:-1000px\\' />').appendTo($headerScroller);\n        $headers.width(getHeadersWidth());\n        $headerRowScroller = $('<div class=\\'slick-headerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headerRow = $('<div class=\\'slick-headerrow-columns\\' />').appendTo($headerRowScroller);\n        $headerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScroller);\n        $topPanelScroller = $('<div class=\\'slick-top-panel-scroller ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $topPanel = $('<div class=\\'slick-top-panel\\' style=\\'width:10000px\\' />').appendTo($topPanelScroller);\n        if (!options.showTopPanel) {\n            $topPanelScroller.hide();\n        }\n        if (!options.showHeaderRow) {\n            $headerRowScroller.hide();\n        }\n        $viewport = $('<div class=\\'slick-viewport\\' style=\\'width:100%;overflow:auto;outline:0;position:relative;;\\'>').appendTo($container);\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        $canvas = $('<div class=\\'grid-canvas\\' />').appendTo($viewport);\n        if (options.createFooterRow) {\n            $footerRowScroller = $('<div class=\\'slick-footerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $footerRow = $('<div class=\\'slick-footerrow-columns\\' />').appendTo($footerRowScroller);\n            $footerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScroller);\n            if (!options.showFooterRow) {\n                $footerRowScroller.hide();\n            }\n        }\n        if (options.numberedMultiColumnSort) {\n            sortIndicatorCssClass = 'slick-sort-indicator-numbered';\n        }\n        $focusSink2 = $focusSink.clone().appendTo($container);\n        if (!options.explicitInitialization) {\n            finishInitialization();\n        }\n    }\n    function finishInitialization() {\n        if (!initialized) {\n            initialized = true;\n            viewportW = parseFloat($.css($container[0], 'width', true));\n            // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n            // calculate the diff so we can set consistent sizes\n            measureCellPaddingAndBorder();\n            // for usability reasons, all text selection in SlickGrid is disabled\n            // with the exception of input and textarea elements (selection must\n            // be enabled there so that editors work as expected); note that\n            // selection in grid cells (grid body) is already unavailable in\n            // all browsers except IE\n            disableSelection($headers);\n            // disable all text selection in header (including input and textarea)\n            if (!options.enableTextSelectionOnCells) {\n                // disable text selection in grid cells except in input and textarea elements\n                // (this is IE-specific, because selectstart event will only fire in IE)\n                $viewport.on('selectstart.ui', function (event) {\n                    return $(event.target).is('input,textarea');\n                });\n            }\n            updateColumnCaches();\n            createColumnHeaders();\n            setupColumnSort();\n            createCssRules();\n            resizeCanvas();\n            bindAncestorScrollEvents();\n            $container.on('resize.slickgrid', resizeCanvas);\n            $viewport    //.on(\"click\", handleClick)\n.on('scroll', handleScroll);\n            $headerScroller.on('contextmenu', handleHeaderContextMenu).on('click', handleHeaderClick).on('mouseenter', '.slick-header-column', handleHeaderMouseEnter).on('mouseleave', '.slick-header-column', handleHeaderMouseLeave);\n            $headerRowScroller.on('scroll', handleHeaderRowScroll);\n            if (options.createFooterRow) {\n                $footerRowScroller.on('scroll', handleFooterRowScroll);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller.on('scroll', handlePreHeaderPanelScroll);\n            }\n            $focusSink.add($focusSink2).on('keydown', handleKeyDown);\n            $canvas.on('keydown', handleKeyDown).on('click', handleClick).on('dblclick', handleDblClick).on('contextmenu', handleContextMenu).on('draginit', handleDragInit).on('dragstart', { distance: 3 }, handleDragStart).on('drag', handleDrag).on('dragend', handleDragEnd).on('mouseenter', '.slick-cell', handleMouseEnter).on('mouseleave', '.slick-cell', handleMouseLeave);\n            // Work around http://crbug.com/312427.\n            if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n                $canvas.on('mousewheel', handleMouseWheel);\n            }\n            restoreCssFromHiddenInit();\n        }\n    }\n    function cacheCssForHiddenInit() {\n        // handle display:none on container or container parents\n        $hiddenParents = $container.parents().addBack().not(':visible');\n        $hiddenParents.each(function () {\n            var old = {};\n            for (var name in cssShow) {\n                old[name] = this.style[name];\n                this.style[name] = cssShow[name];\n            }\n            oldProps.push(old);\n        });\n    }\n    function restoreCssFromHiddenInit() {\n        // finish handle display:none on container or container parents\n        // - put values back the way they were\n        $hiddenParents.each(function (i) {\n            var old = oldProps[i];\n            for (var name in cssShow) {\n                this.style[name] = old[name];\n            }\n        });\n    }\n    function registerPlugin(plugin) {\n        plugins.unshift(plugin);\n        plugin.init(self);\n    }\n    function unregisterPlugin(plugin) {\n        for (var i = plugins.length; i >= 0; i--) {\n            if (plugins[i] === plugin) {\n                if (plugins[i].destroy) {\n                    plugins[i].destroy();\n                }\n                plugins.splice(i, 1);\n                break;\n            }\n        }\n    }\n    function setSelectionModel(model) {\n        if (selectionModel) {\n            selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n            if (selectionModel.destroy) {\n                selectionModel.destroy();\n            }\n        }\n        selectionModel = model;\n        if (selectionModel) {\n            selectionModel.init(self);\n            selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n        }\n    }\n    function getSelectionModel() {\n        return selectionModel;\n    }\n    function getCanvasNode() {\n        return $canvas[0];\n    }\n    function measureScrollbar() {\n        var $c = $('<div style=\\'position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;\\'></div>').appendTo('body');\n        var dim = {\n            width: $c.width() - $c[0].clientWidth,\n            height: $c.height() - $c[0].clientHeight\n        };\n        $c.remove();\n        return dim;\n    }\n    function getColumnTotalWidth(includeScrollbar) {\n        var totalWidth = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            var width = columns[i].width;\n            totalWidth += width;\n        }\n        if (includeScrollbar) {\n            totalWidth += scrollbarDimensions.width;\n        }\n        return totalWidth;\n    }\n    function getHeadersWidth() {\n        var headersWidth = getColumnTotalWidth(true);\n        return Math.max(headersWidth, viewportW) + 1000;\n    }\n    function getCanvasWidth() {\n        var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        var rowWidth = 0;\n        var i = columns.length;\n        while (i--) {\n            rowWidth += columns[i].width;\n        }\n        return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n    }\n    function updateCanvasWidth(forceColumnWidthsUpdate) {\n        var oldCanvasWidth = canvasWidth;\n        canvasWidth = getCanvasWidth();\n        if (canvasWidth != oldCanvasWidth) {\n            $canvas.width(canvasWidth);\n            $headerRow.width(canvasWidth);\n            if (options.createFooterRow) {\n                $footerRow.width(canvasWidth);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanel.width(canvasWidth);\n            }\n            $headers.width(getHeadersWidth());\n            viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        }\n        var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n        $headerRowSpacer.width(w);\n        if (options.createFooterRow) {\n            $footerRowSpacer.width(w);\n        }\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelSpacer.width(w);\n        }\n        if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n            applyColumnWidths();\n        }\n    }\n    function disableSelection($target) {\n        if ($target && $target.jquery) {\n            $target.attr('unselectable', 'on').css('MozUserSelect', 'none').on('selectstart.ui', function () {\n                return false;\n            });    // from jquery:ui.core.js 1.7.2\n        }\n    }\n    function getMaxSupportedCssHeight() {\n        var supportedHeight = 1000000;\n        // FF reports the height back but still renders blank after ~6M px\n        var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n        var div = $('<div style=\\'display:none\\' />').appendTo(document.body);\n        while (true) {\n            var test = supportedHeight * 2;\n            div.css('height', test);\n            if (test > testUpTo || div.height() !== test) {\n                break;\n            } else {\n                supportedHeight = test;\n            }\n        }\n        div.remove();\n        return supportedHeight;\n    }\n    function getUID() {\n        return uid;\n    }\n    function getHeaderColumnWidthDiff() {\n        return headerColumnWidthDiff;\n    }\n    function getScrollbarDimensions() {\n        return scrollbarDimensions;\n    }\n    // TODO:  this is static.  need to handle page mutation.\n    function bindAncestorScrollEvents() {\n        var elem = $canvas[0];\n        while ((elem = elem.parentNode) != document.body && elem != null) {\n            // bind to scroll containers only\n            if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n                var $elem = $(elem);\n                if (!$boundAncestors) {\n                    $boundAncestors = $elem;\n                } else {\n                    $boundAncestors = $boundAncestors.add($elem);\n                }\n                $elem.on('scroll.' + uid, handleActiveCellPositionChange);\n            }\n        }\n    }\n    function unbindAncestorScrollEvents() {\n        if (!$boundAncestors) {\n            return;\n        }\n        $boundAncestors.off('scroll.' + uid);\n        $boundAncestors = null;\n    }\n    function updateColumnHeader(columnId, title, toolTip) {\n        if (!initialized) {\n            return;\n        }\n        var idx = getColumnIndex(columnId);\n        if (idx == null) {\n            return;\n        }\n        var columnDef = columns[idx];\n        var $header = $headers.children().eq(idx);\n        if ($header) {\n            if (title !== undefined) {\n                columns[idx].name = title;\n            }\n            if (toolTip !== undefined) {\n                columns[idx].toolTip = toolTip;\n            }\n            trigger(self.onBeforeHeaderCellDestroy, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n            $header.attr('title', toolTip || '').children().eq(0).html(title);\n            trigger(self.onHeaderCellRendered, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n        }\n    }\n    function getHeaderRow() {\n        return $headerRow[0];\n    }\n    function getFooterRow() {\n        return $footerRow[0];\n    }\n    function getPreHeaderPanel() {\n        return $preHeaderPanel[0];\n    }\n    function getHeaderRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $header = $headerRow.children().eq(idx);\n        return $header && $header[0];\n    }\n    function getFooterRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $footer = $footerRow.children().eq(idx);\n        return $footer && $footer[0];\n    }\n    function createColumnHeaders() {\n        function onMouseEnter() {\n            $(this).addClass('ui-state-hover');\n        }\n        function onMouseLeave() {\n            $(this).removeClass('ui-state-hover');\n        }\n        $headers.find('.slick-header-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headers.empty();\n        $headers.width(getHeadersWidth());\n        $headerRow.find('.slick-headerrow-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderRowCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headerRow.empty();\n        if (options.createFooterRow) {\n            $footerRow.find('.slick-footerrow-column').each(function () {\n                var columnDef = $(this).data('column');\n                if (columnDef) {\n                    trigger(self.onBeforeFooterRowCellDestroy, {\n                        'node': this,\n                        'column': columnDef\n                    });\n                }\n            });\n            $footerRow.empty();\n        }\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i];\n            var header = $('<div class=\\'ui-state-default slick-header-column\\' />').html('<span class=\\'slick-column-name\\'>' + m.name + '</span>').width(m.width - headerColumnWidthDiff).attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').appendTo($headers);\n            if (options.enableColumnReorder || m.sortable) {\n                header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n            }\n            if (m.sortable) {\n                header.addClass('slick-header-sortable');\n                header.append('<span class=\\'' + sortIndicatorCssClass + '\\' />');\n            }\n            trigger(self.onHeaderCellRendered, {\n                'node': header[0],\n                'column': m,\n                'grid': self\n            });\n            if (options.showHeaderRow) {\n                var headerRowCell = $('<div class=\\'ui-state-default slick-headerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($headerRow);\n                trigger(self.onHeaderRowCellRendered, {\n                    'node': headerRowCell[0],\n                    'column': m,\n                    'grid': self\n                });\n            }\n            if (options.createFooterRow && options.showFooterRow) {\n                var footerRowCell = $('<div class=\\'ui-state-default slick-footerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($footerRow);\n                trigger(self.onFooterRowCellRendered, {\n                    'node': footerRowCell[0],\n                    'column': m\n                });\n            }\n        }\n        setSortColumns(sortColumns);\n        setupColumnResize();\n        if (options.enableColumnReorder) {\n            if (typeof options.enableColumnReorder == 'function') {\n                options.enableColumnReorder(self, $headers, headerColumnWidthDiff, setColumns, setupColumnResize, columns, getColumnIndex, uid, trigger);\n            } else {\n                setupColumnReorder();\n            }\n        }\n    }\n    function setupColumnSort() {\n        $headers.click(function (e) {\n            // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n            e.metaKey = e.metaKey || e.ctrlKey;\n            if ($(e.target).hasClass('slick-resizable-handle')) {\n                return;\n            }\n            var $col = $(e.target).closest('.slick-header-column');\n            if (!$col.length) {\n                return;\n            }\n            var column = $col.data('column');\n            if (column.sortable) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return;\n                }\n                var sortColumn = null;\n                var i = 0;\n                for (; i < sortColumns.length; i++) {\n                    if (sortColumns[i].columnId == column.id) {\n                        sortColumn = sortColumns[i];\n                        sortColumn.sortAsc = !sortColumn.sortAsc;\n                        break;\n                    }\n                }\n                var hadSortCol = !!sortColumn;\n                if (options.tristateMultiColumnSort) {\n                    if (!sortColumn) {\n                        sortColumn = {\n                            columnId: column.id,\n                            sortAsc: column.defaultSortAsc\n                        };\n                    }\n                    if (hadSortCol && sortColumn.sortAsc) {\n                        // three state: remove sort rather than go back to ASC\n                        sortColumns.splice(i, 1);\n                        sortColumn = null;\n                    }\n                    if (!options.multiColumnSort) {\n                        sortColumns = [];\n                    }\n                    if (sortColumn && (!hadSortCol || !options.multiColumnSort)) {\n                        sortColumns.push(sortColumn);\n                    }\n                } else {\n                    // legacy behaviour\n                    if (e.metaKey && options.multiColumnSort) {\n                        if (sortColumn) {\n                            sortColumns.splice(i, 1);\n                        }\n                    } else {\n                        if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n                            sortColumns = [];\n                        }\n                        if (!sortColumn) {\n                            sortColumn = {\n                                columnId: column.id,\n                                sortAsc: column.defaultSortAsc\n                            };\n                            sortColumns.push(sortColumn);\n                        } else if (sortColumns.length == 0) {\n                            sortColumns.push(sortColumn);\n                        }\n                    }\n                }\n                setSortColumns(sortColumns);\n                if (sortColumns.length > 0) {\n                    if (!options.multiColumnSort) {\n                        trigger(self.onSort, {\n                            multiColumnSort: false,\n                            sortCol: column,\n                            sortAsc: sortColumns[0].sortAsc,\n                            grid: self\n                        }, e);\n                    } else {\n                        trigger(self.onSort, {\n                            multiColumnSort: true,\n                            sortCols: $.map(sortColumns, function (col) {\n                                return {\n                                    sortCol: columns[getColumnIndex(col.columnId)],\n                                    sortAsc: col.sortAsc\n                                };\n                            }),\n                            grid: self\n                        }, e);\n                    }\n                }\n            }\n        });\n    }\n    function setupColumnReorder() {\n        $headers.filter(':ui-sortable').sortable('destroy');\n        $headers.sortable({\n            containment: 'parent',\n            distance: 3,\n            axis: 'x',\n            cursor: 'default',\n            tolerance: 'intersection',\n            helper: 'clone',\n            placeholder: 'slick-sortable-placeholder ui-state-default slick-header-column',\n            start: function (e, ui) {\n                ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff);\n                $(ui.helper).addClass('slick-header-column-active');\n            },\n            beforeStop: function (e, ui) {\n                $(ui.helper).removeClass('slick-header-column-active');\n            },\n            stop: function (e) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    $(this).sortable('cancel');\n                    return;\n                }\n                var reorderedIds = $headers.sortable('toArray');\n                var reorderedColumns = [];\n                for (var i = 0; i < reorderedIds.length; i++) {\n                    reorderedColumns.push(columns[getColumnIndex(reorderedIds[i].replace(uid, ''))]);\n                }\n                setColumns(reorderedColumns);\n                trigger(self.onColumnsReordered, { grid: self });\n                e.stopPropagation();\n                setupColumnResize();\n            }\n        });\n    }\n    function setupColumnResize() {\n        var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n        columnElements = $headers.children();\n        columnElements.find('.slick-resizable-handle').remove();\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (columns[i].resizable) {\n                if (firstResizable === undefined) {\n                    firstResizable = i;\n                }\n                lastResizable = i;\n            }\n        });\n        if (firstResizable === undefined) {\n            return;\n        }\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n                return;\n            }\n            $col = $(e);\n            $('<div class=\\'slick-resizable-handle\\' />').appendTo(e).on('dragstart', function (e, dd) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return false;\n                }\n                pageX = e.pageX;\n                $(this).parent().addClass('slick-header-column-active');\n                var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\n                // lock each column's width option to current width\n                columnElements.each(function (i, e) {\n                    if (i >= columns.length) {\n                        return;\n                    }\n                    columns[i].previousWidth = $(e).outerWidth();\n                });\n                if (options.forceFitColumns) {\n                    shrinkLeewayOnRight = 0;\n                    stretchLeewayOnRight = 0;\n                    // colums on right affect maxPageX/minPageX\n                    for (j = i + 1; j < columns.length; j++) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (stretchLeewayOnRight !== null) {\n                                if (c.maxWidth) {\n                                    stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                                } else {\n                                    stretchLeewayOnRight = null;\n                                }\n                            }\n                            shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                        }\n                    }\n                }\n                var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\n                for (j = 0; j <= i; j++) {\n                    // columns on left only affect minPageX\n                    c = columns[j];\n                    if (c.resizable) {\n                        if (stretchLeewayOnLeft !== null) {\n                            if (c.maxWidth) {\n                                stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n                            } else {\n                                stretchLeewayOnLeft = null;\n                            }\n                        }\n                        shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                    }\n                }\n                if (shrinkLeewayOnRight === null) {\n                    shrinkLeewayOnRight = 100000;\n                }\n                if (shrinkLeewayOnLeft === null) {\n                    shrinkLeewayOnLeft = 100000;\n                }\n                if (stretchLeewayOnRight === null) {\n                    stretchLeewayOnRight = 100000;\n                }\n                if (stretchLeewayOnLeft === null) {\n                    stretchLeewayOnLeft = 100000;\n                }\n                maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n                minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n            }).on('drag', function (e, dd) {\n                var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x;\n                if (d < 0) {\n                    // shrink column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                            if (x && c.previousWidth + x < actualMinWidth) {\n                                x += c.previousWidth - actualMinWidth;\n                                c.width = actualMinWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                    x -= c.maxWidth - c.previousWidth;\n                                    c.width = c.maxWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    // stretch column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                x -= c.maxWidth - c.previousWidth;\n                                c.width = c.maxWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                                if (x && c.previousWidth + x < actualMinWidth) {\n                                    x += c.previousWidth - actualMinWidth;\n                                    c.width = actualMinWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n                applyColumnHeaderWidths();\n                if (options.syncColumnCellResize) {\n                    applyColumnWidths();\n                }\n            }).on('dragend', function (e, dd) {\n                var newWidth;\n                $(this).parent().removeClass('slick-header-column-active');\n                for (j = 0; j < columns.length; j++) {\n                    c = columns[j];\n                    newWidth = $(columnElements[j]).outerWidth();\n                    if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n                        invalidateAllRows();\n                    }\n                }\n                updateCanvasWidth(true);\n                render();\n                trigger(self.onColumnsResized, { grid: self });\n            });\n        });\n    }\n    function getVBoxDelta($el) {\n        var p = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        var delta = 0;\n        $.each(p, function (n, val) {\n            delta += parseFloat($el.css(val)) || 0;\n        });\n        return delta;\n    }\n    function measureCellPaddingAndBorder() {\n        var el;\n        var h = [\n            'borderLeftWidth',\n            'borderRightWidth',\n            'paddingLeft',\n            'paddingRight'\n        ];\n        var v = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n        // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n        // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n        var verArray = $.fn.jquery.split('.');\n        jQueryNewWidthBehaviour = verArray[0] == 1 && verArray[1] >= 8 || verArray[0] >= 2;\n        el = $('<div class=\\'ui-state-default slick-header-column\\' style=\\'visibility:hidden\\'>-</div>').appendTo($headers);\n        headerColumnWidthDiff = headerColumnHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        el.remove();\n        var r = $('<div class=\\'slick-row\\' />').appendTo($canvas);\n        el = $('<div class=\\'slick-cell\\' id=\\'\\' style=\\'visibility:hidden\\'>-</div>').appendTo(r);\n        cellWidthDiff = cellHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                cellWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                cellHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        r.remove();\n        absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n    }\n    function createCssRules() {\n        $style = $('<style type=\\'text/css\\' rel=\\'stylesheet\\' />').appendTo($('head'));\n        var rowHeight = options.rowHeight - cellHeightDiff;\n        var rules = [\n            '.' + uid + ' .slick-header-column { left: 1000px; }',\n            '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }',\n            '.' + uid + ' .slick-preheader-panel { height:' + options.preHeaderPanelHeight + 'px; }',\n            '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }',\n            '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }',\n            '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n            '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'\n        ];\n        for (var i = 0; i < columns.length; i++) {\n            rules.push('.' + uid + ' .l' + i + ' { }');\n            rules.push('.' + uid + ' .r' + i + ' { }');\n        }\n        if ($style[0].styleSheet) {\n            // IE\n            $style[0].styleSheet.cssText = rules.join(' ');\n        } else {\n            $style[0].appendChild(document.createTextNode(rules.join(' ')));\n        }\n    }\n    function getColumnCssRules(idx) {\n        var i;\n        if (!stylesheet) {\n            var sheets = document.styleSheets;\n            for (i = 0; i < sheets.length; i++) {\n                if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n                    stylesheet = sheets[i];\n                    break;\n                }\n            }\n            if (!stylesheet) {\n                throw new Error('Cannot find stylesheet.');\n            }\n            // find and cache column CSS rules\n            columnCssRulesL = [];\n            columnCssRulesR = [];\n            var cssRules = stylesheet.cssRules || stylesheet.rules;\n            var matches, columnIdx;\n            for (i = 0; i < cssRules.length; i++) {\n                var selector = cssRules[i].selectorText;\n                if (matches = /\\.l\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesL[columnIdx] = cssRules[i];\n                } else if (matches = /\\.r\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesR[columnIdx] = cssRules[i];\n                }\n            }\n        }\n        return {\n            'left': columnCssRulesL[idx],\n            'right': columnCssRulesR[idx]\n        };\n    }\n    function removeCssRules() {\n        $style.remove();\n        stylesheet = null;\n    }\n    function destroy() {\n        getEditorLock().cancelCurrentEdit();\n        trigger(self.onBeforeDestroy, { grid: self });\n        var i = plugins.length;\n        while (i--) {\n            unregisterPlugin(plugins[i]);\n        }\n        if (options.enableColumnReorder) {\n            $headers.filter(':ui-sortable').sortable('destroy');\n        }\n        unbindAncestorScrollEvents();\n        $container.off('.slickgrid');\n        removeCssRules();\n        $canvas.off('draginit dragstart dragend drag');\n        $container.empty().removeClass(uid);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n    function trigger(evt, args, e) {\n        e = e || new Slick.EventData();\n        args = args || {};\n        args.grid = self;\n        return evt.notify(args, e, self);\n    }\n    function getEditorLock() {\n        return options.editorLock;\n    }\n    function getEditController() {\n        return editController;\n    }\n    function getColumnIndex(id) {\n        return columnsById[id];\n    }\n    function autosizeColumns() {\n        var i, c, widths = [], shrinkLeeway = 0, total = 0, prevTotal, availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        for (i = 0; i < columns.length; i++) {\n            c = columns[i];\n            widths.push(c.width);\n            total += c.width;\n            if (c.resizable) {\n                shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n            }\n        }\n        // shrink\n        prevTotal = total;\n        while (total > availWidth && shrinkLeeway) {\n            var shrinkProportion = (total - availWidth) / shrinkLeeway;\n            for (i = 0; i < columns.length && total > availWidth; i++) {\n                c = columns[i];\n                var width = widths[i];\n                if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n                    continue;\n                }\n                var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n                var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n                shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n                total -= shrinkSize;\n                shrinkLeeway -= shrinkSize;\n                widths[i] -= shrinkSize;\n            }\n            if (prevTotal <= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        // grow\n        prevTotal = total;\n        while (total < availWidth) {\n            var growProportion = availWidth / total;\n            for (i = 0; i < columns.length && total < availWidth; i++) {\n                c = columns[i];\n                var currentWidth = widths[i];\n                var growSize;\n                if (!c.resizable || c.maxWidth <= currentWidth) {\n                    growSize = 0;\n                } else {\n                    growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n                }\n                total += growSize;\n                widths[i] += total <= availWidth ? growSize : 0;\n            }\n            if (prevTotal >= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        var reRender = false;\n        for (i = 0; i < columns.length; i++) {\n            if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n                reRender = true;\n            }\n            columns[i].width = widths[i];\n        }\n        applyColumnHeaderWidths();\n        updateCanvasWidth(true);\n        if (reRender) {\n            invalidateAllRows();\n            render();\n        }\n    }\n    function applyColumnHeaderWidths() {\n        if (!initialized) {\n            return;\n        }\n        var h;\n        for (var i = 0, headers = $headers.children(), ii = columns.length; i < ii; i++) {\n            h = $(headers[i]);\n            if (jQueryNewWidthBehaviour) {\n                if (h.outerWidth() !== columns[i].width) {\n                    h.outerWidth(columns[i].width);\n                }\n            } else {\n                if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n                    h.width(columns[i].width - headerColumnWidthDiff);\n                }\n            }\n        }\n        updateColumnCaches();\n    }\n    function applyColumnWidths() {\n        var x = 0, w, rule;\n        for (var i = 0; i < columns.length; i++) {\n            w = columns[i].width;\n            rule = getColumnCssRules(i);\n            rule.left.style.left = x + 'px';\n            rule.right.style.right = canvasWidth - x - w + 'px';\n            x += columns[i].width;\n        }\n    }\n    function setSortColumn(columnId, ascending) {\n        setSortColumns([{\n                columnId: columnId,\n                sortAsc: ascending\n            }]);\n    }\n    function setSortColumns(cols) {\n        sortColumns = cols;\n        var numberCols = options.numberedMultiColumnSort && sortColumns.length > 1;\n        var headerColumnEls = $headers.children();\n        var sortIndicatorEl = headerColumnEls.removeClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n        if (numberCols) {\n            sortIndicatorEl.text('');\n        }\n        $.each(sortColumns, function (i, col) {\n            if (col.sortAsc == null) {\n                col.sortAsc = true;\n            }\n            var columnIndex = getColumnIndex(col.columnId);\n            if (columnIndex != null) {\n                sortIndicatorEl = headerColumnEls.eq(columnIndex).addClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n                if (numberCols) {\n                    sortIndicatorEl.text(i + 1);\n                }\n            }\n        });\n    }\n    function getSortColumns() {\n        return sortColumns;\n    }\n    function handleSelectedRangesChanged(e, ranges) {\n        selectedRows = [];\n        var hash = {};\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {\n                    // prevent duplicates\n                    selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (canCellBeSelected(j, k)) {\n                        hash[j][columns[k].id] = options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n        setCellCssStyles(options.selectedCellCssClass, hash);\n        trigger(self.onSelectedRowsChanged, {\n            rows: getSelectedRows(),\n            grid: self\n        }, e);\n    }\n    function getColumns() {\n        return columns;\n    }\n    function updateColumnCaches() {\n        // Pre-calculate cell boundaries.\n        columnPosLeft = [];\n        columnPosRight = [];\n        var x = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            columnPosLeft[i] = x;\n            columnPosRight[i] = x + columns[i].width;\n            x += columns[i].width;\n        }\n    }\n    function setColumns(columnDefinitions) {\n        columns = columnDefinitions;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        updateColumnCaches();\n        if (initialized) {\n            invalidateAllRows();\n            createColumnHeaders();\n            removeCssRules();\n            createCssRules();\n            resizeCanvas();\n            applyColumnWidths();\n            handleScroll();\n        }\n    }\n    function getOptions() {\n        return options;\n    }\n    function setOptions(args, suppressRender) {\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        makeActiveCellNormal();\n        if (options.enableAddRow !== args.enableAddRow) {\n            invalidateRow(getDataLength());\n        }\n        options = $.extend(options, args);\n        validateAndEnforceOptions();\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        if (!suppressRender) {\n            render();\n        }\n    }\n    function validateAndEnforceOptions() {\n        if (options.autoHeight) {\n            options.leaveSpaceForNewRows = false;\n        }\n    }\n    function setData(newData, scrollToTop) {\n        data = newData;\n        invalidateAllRows();\n        updateRowCount();\n        if (scrollToTop) {\n            scrollTo(0);\n        }\n    }\n    function getData() {\n        return data;\n    }\n    function getDataLength() {\n        if (data.getLength) {\n            return data.getLength();\n        } else {\n            return data.length;\n        }\n    }\n    function getDataLengthIncludingAddNew() {\n        return getDataLength() + (!options.enableAddRow ? 0 : !pagingActive || pagingIsLastPage ? 1 : 0);\n    }\n    function getDataItem(i) {\n        if (data.getItem) {\n            return data.getItem(i);\n        } else {\n            return data[i];\n        }\n    }\n    function getTopPanel() {\n        return $topPanel[0];\n    }\n    function setTopPanelVisibility(visible) {\n        if (options.showTopPanel != visible) {\n            options.showTopPanel = visible;\n            if (visible) {\n                $topPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $topPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setHeaderRowVisibility(visible) {\n        if (options.showHeaderRow != visible) {\n            options.showHeaderRow = visible;\n            if (visible) {\n                $headerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $headerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setFooterRowVisibility(visible) {\n        if (options.showFooterRow != visible) {\n            options.showFooterRow = visible;\n            if (visible) {\n                $footerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $footerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setPreHeaderPanelVisibility(visible) {\n        if (options.showPreHeaderPanel != visible) {\n            options.showPreHeaderPanel = visible;\n            if (visible) {\n                $preHeaderPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $preHeaderPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function getContainerNode() {\n        return $container.get(0);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n    function getRowTop(row) {\n        return options.rowHeight * row - offset;\n    }\n    function getRowFromPosition(y) {\n        return Math.floor((y + offset) / options.rowHeight);\n    }\n    function scrollTo(y) {\n        y = Math.max(y, 0);\n        y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n        var oldOffset = offset;\n        page = Math.min(n - 1, Math.floor(y / ph));\n        offset = Math.round(page * cj);\n        var newScrollTop = y - offset;\n        if (offset != oldOffset) {\n            var range = getVisibleRange(newScrollTop);\n            cleanupRows(range);\n            updateRowPositions();\n        }\n        if (prevScrollTop != newScrollTop) {\n            vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n            $viewport[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n            trigger(self.onViewportChanged, { grid: self });\n        }\n    }\n    function defaultFormatter(row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    }\n    function getFormatter(row, column) {\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        // look up by id, then index\n        var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n        return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n    }\n    function getEditor(row, cell) {\n        var column = columns[cell];\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n            return columnMetadata[column.id].editor;\n        }\n        if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n            return columnMetadata[cell].editor;\n        }\n        return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n    }\n    function getDataItemValueForColumn(item, columnDef) {\n        if (options.dataItemColumnValueExtractor) {\n            return options.dataItemColumnValueExtractor(item, columnDef);\n        }\n        return item[columnDef.field];\n    }\n    function appendRowHtml(stringArray, row, range, dataLength) {\n        var d = getDataItem(row);\n        var dataLoading = row < dataLength && !d;\n        var rowCss = 'slick-row' + (dataLoading ? ' loading' : '') + (row === activeRow ? ' active' : '') + (row % 2 == 1 ? ' odd' : ' even');\n        if (!d) {\n            rowCss += ' ' + options.addNewRowCssClass;\n        }\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (metadata && metadata.cssClasses) {\n            rowCss += ' ' + metadata.cssClasses;\n        }\n        stringArray.push('<div class=\\'ui-widget-content ' + rowCss + '\\' style=\\'top:' + getRowTop(row) + 'px\\'>');\n        var colspan, m;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            m = columns[i];\n            colspan = 1;\n            if (metadata && metadata.columns) {\n                var columnData = metadata.columns[m.id] || metadata.columns[i];\n                colspan = columnData && columnData.colspan || 1;\n                if (colspan === '*') {\n                    colspan = ii - i;\n                }\n            }\n            // Do not render cells outside of the viewport.\n            if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                if (columnPosLeft[i] > range.rightPx) {\n                    // All columns to the right are outside the range.\n                    break;\n                }\n                appendCellHtml(stringArray, row, i, colspan, d);\n            }\n            if (colspan > 1) {\n                i += colspan - 1;\n            }\n        }\n        stringArray.push('</div>');\n    }\n    function appendCellHtml(stringArray, row, cell, colspan, item) {\n        // stringArray: stringBuilder containing the HTML parts\n        // row, cell: row and column index\n        // colspan: HTML colspan\n        // item: grid data for row\n        var m = columns[cell];\n        var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? ' ' + m.cssClass : '');\n        if (row === activeRow && cell === activeCell) {\n            cellCss += ' active';\n        }\n        // TODO:  merge them together in the setter\n        for (var key in cellCssClasses) {\n            if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n                cellCss += ' ' + cellCssClasses[key][row][m.id];\n            }\n        }\n        var value = null;\n        if (item) {\n            value = getDataItemValueForColumn(item, m);\n        }\n        var formatterResult = getFormatter(row, m)(row, cell, value, m, item);\n        // get addl css class names from object type formatter return and from string type return of onBeforeAppendCell\n        var addlCssClasses = trigger(self.onBeforeAppendCell, {\n            row: row,\n            cell: cell,\n            grid: self,\n            value: value,\n            dataContext: item\n        }) || '';\n        addlCssClasses += formatterResult.addClasses ? (addlCssClasses ? ' ' : '') + formatterResult.addClasses : '';\n        stringArray.push('<div class=\\'' + cellCss + (addlCssClasses ? ' ' + addlCssClasses : '') + '\\'>');\n        // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n        if (item) {\n            stringArray.push(typeof formatterResult !== 'object' ? formatterResult : formatterResult.text);\n        }\n        stringArray.push('</div>');\n        rowsCache[row].cellRenderQueue.push(cell);\n        rowsCache[row].cellColSpans[cell] = colspan;\n    }\n    function cleanupRows(rangeToKeep) {\n        for (var i in rowsCache) {\n            if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidate() {\n        updateRowCount();\n        invalidateAllRows();\n        render();\n    }\n    function invalidateAllRows() {\n        if (currentEditor) {\n            makeActiveCellNormal();\n        }\n        for (var row in rowsCache) {\n            removeRowFromCache(row);\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n        postProcessgroupId++;\n        // store and detach node for later async cleanup\n        for (var columnIdx in postProcessedRow) {\n            if (postProcessedRow.hasOwnProperty(columnIdx)) {\n                postProcessedCleanupQueue.push({\n                    actionType: 'C',\n                    groupId: postProcessgroupId,\n                    node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n                    columnIdx: columnIdx | 0,\n                    rowIdx: rowIdx\n                });\n            }\n        }\n        postProcessedCleanupQueue.push({\n            actionType: 'R',\n            groupId: postProcessgroupId,\n            node: cacheEntry.rowNode\n        });\n        $(cacheEntry.rowNode).detach();\n    }\n    function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n        postProcessedCleanupQueue.push({\n            actionType: 'C',\n            groupId: postProcessgroupId,\n            node: cellnode,\n            columnIdx: columnIdx,\n            rowIdx: rowIdx\n        });\n        $(cellnode).detach();\n    }\n    function removeRowFromCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n            cacheEntry.rowNode.style.display = 'none';\n            zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n            zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n            zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];    // ignore post processing cleanup in this case - it will be dealt with later\n        } else {\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n                queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n            } else {\n                $canvas[0].removeChild(cacheEntry.rowNode);\n            }\n        }\n        delete rowsCache[row];\n        delete postProcessedRows[row];\n        renderedRows--;\n        counter_rows_removed++;\n    }\n    function invalidateRows(rows) {\n        var i, rl;\n        if (!rows || !rows.length) {\n            return;\n        }\n        vScrollDir = 0;\n        rl = rows.length;\n        for (i = 0; i < rl; i++) {\n            if (currentEditor && activeRow === rows[i]) {\n                makeActiveCellNormal();\n            }\n            if (rowsCache[rows[i]]) {\n                removeRowFromCache(rows[i]);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidateRow(row) {\n        invalidateRows([row]);\n    }\n    function applyFormatResultToCellNode(formatterResult, cellNode, suppressRemove) {\n        if (typeof formatterResult !== 'object') {\n            cellNode.innerHTML = formatterResult;\n            return;\n        }\n        cellNode.innerHTML = formatterResult.text;\n        if (formatterResult.removeClasses && !suppressRemove) {\n            cellNode.removeClass(formatterResult.removeClasses);\n        }\n        if (formatterResult.addClasses) {\n            cellNode.addClass(formatterResult.addClasses);\n        }\n    }\n    function updateCell(row, cell) {\n        var cellNode = getCellNode(row, cell);\n        if (!cellNode) {\n            return;\n        }\n        var m = columns[cell], d = getDataItem(row);\n        if (currentEditor && activeRow === row && activeCell === cell) {\n            currentEditor.loadValue(d);\n        } else {\n            var formatterResult = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n            applyFormatResultToCellNode(formatterResult, cellNode);\n            invalidatePostProcessingResults(row);\n        }\n    }\n    function updateRow(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        ensureCellNodesInRowsCache(row);\n        var formatterResult, d = getDataItem(row);\n        for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                continue;\n            }\n            columnIdx = columnIdx | 0;\n            var m = columns[columnIdx], node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n            if (row === activeRow && columnIdx === activeCell && currentEditor) {\n                currentEditor.loadValue(d);\n            } else if (d) {\n                formatterResult = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n                applyFormatResultToCellNode(formatterResult, node);\n            } else {\n                node.innerHTML = '';\n            }\n        }\n        invalidatePostProcessingResults(row);\n    }\n    function getViewportHeight() {\n        return parseFloat($.css($container[0], 'height', true)) - parseFloat($.css($container[0], 'paddingTop', true)) - parseFloat($.css($container[0], 'paddingBottom', true)) - parseFloat($.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) - (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) - (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) - (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0) - (options.createPreHeaderPanel && options.showPreHeaderPanel ? options.preHeaderPanelHeight + getVBoxDelta($preHeaderPanelScroller) : 0);\n    }\n    function resizeCanvas() {\n        if (!initialized) {\n            return;\n        }\n        if (options.autoHeight) {\n            viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n        } else {\n            viewportH = getViewportHeight();\n        }\n        numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n        viewportW = parseFloat($.css($container[0], 'width', true));\n        if (!options.autoHeight) {\n            $viewport.height(viewportH);\n        }\n        if (options.forceFitColumns) {\n            autosizeColumns();\n        }\n        updateRowCount();\n        handleScroll();\n        // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n        lastRenderedScrollLeft = -1;\n        render();\n    }\n    function updatePagingStatusFromView(pagingInfo) {\n        pagingActive = pagingInfo.pageSize !== 0;\n        pagingIsLastPage = pagingInfo.pageNum == pagingInfo.totalPages - 1;\n    }\n    function updateRowCount() {\n        if (!initialized) {\n            return;\n        }\n        var dataLength = getDataLength();\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n        var oldViewportHasVScroll = viewportHasVScroll;\n        // with autoHeight, we do not need to accommodate the vertical scroll bar\n        viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > viewportH;\n        viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        makeActiveCellNormal();\n        // remove the rows that are now outside of the data range\n        // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n        var r1 = dataLength - 1;\n        for (var i in rowsCache) {\n            if (i > r1) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n        if (activeCellNode && activeRow > r1) {\n            resetActiveCell();\n        }\n        var oldH = h;\n        th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n        if (th < maxSupportedCssHeight) {\n            // just one page\n            h = ph = th;\n            n = 1;\n            cj = 0;\n        } else {\n            // break into pages\n            h = maxSupportedCssHeight;\n            ph = h / 100;\n            n = Math.floor(th / ph);\n            cj = (th - h) / (n - 1);\n        }\n        if (h !== oldH) {\n            $canvas.css('height', h);\n            scrollTop = $viewport[0].scrollTop;\n        }\n        var oldScrollTopInRange = scrollTop + offset <= th - viewportH;\n        if (th == 0 || scrollTop == 0) {\n            page = offset = 0;\n        } else if (oldScrollTopInRange) {\n            // maintain virtual position\n            scrollTo(scrollTop + offset);\n        } else {\n            // scroll to bottom\n            scrollTo(th - viewportH);\n        }\n        if (h != oldH && options.autoHeight) {\n            resizeCanvas();\n        }\n        if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n            autosizeColumns();\n        }\n        updateCanvasWidth(false);\n    }\n    function getVisibleRange(viewportTop, viewportLeft) {\n        if (viewportTop == null) {\n            viewportTop = scrollTop;\n        }\n        if (viewportLeft == null) {\n            viewportLeft = scrollLeft;\n        }\n        return {\n            top: getRowFromPosition(viewportTop),\n            bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n            leftPx: viewportLeft,\n            rightPx: viewportLeft + viewportW\n        };\n    }\n    function getRenderedRange(viewportTop, viewportLeft) {\n        var range = getVisibleRange(viewportTop, viewportLeft);\n        var buffer = Math.round(viewportH / options.rowHeight);\n        var minBuffer = 3;\n        if (vScrollDir == -1) {\n            range.top -= buffer;\n            range.bottom += minBuffer;\n        } else if (vScrollDir == 1) {\n            range.top -= minBuffer;\n            range.bottom += buffer;\n        } else {\n            range.top -= minBuffer;\n            range.bottom += minBuffer;\n        }\n        range.top = Math.max(0, range.top);\n        range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n        range.leftPx -= viewportW;\n        range.rightPx += viewportW;\n        range.leftPx = Math.max(0, range.leftPx);\n        range.rightPx = Math.min(canvasWidth, range.rightPx);\n        return range;\n    }\n    function ensureCellNodesInRowsCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (cacheEntry) {\n            if (cacheEntry.cellRenderQueue.length) {\n                var lastChild = cacheEntry.rowNode.lastChild;\n                while (cacheEntry.cellRenderQueue.length) {\n                    var columnIdx = cacheEntry.cellRenderQueue.pop();\n                    cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n                    lastChild = lastChild.previousSibling;\n                }\n            }\n        }\n    }\n    function cleanUpCells(range, row) {\n        var totalCellsRemoved = 0;\n        var cacheEntry = rowsCache[row];\n        // Remove cells outside the range.\n        var cellsToRemove = [];\n        for (var i in cacheEntry.cellNodesByColumnIdx) {\n            // I really hate it when people mess with Array.prototype.\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n                continue;\n            }\n            // This is a string, so it needs to be cast back to a number.\n            i = i | 0;\n            var colspan = cacheEntry.cellColSpans[i];\n            if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n                if (!(row == activeRow && i == activeCell)) {\n                    cellsToRemove.push(i);\n                }\n            }\n        }\n        var cellToRemove, node;\n        postProcessgroupId++;\n        while ((cellToRemove = cellsToRemove.pop()) != null) {\n            node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n                queuePostProcessedCellForCleanup(node, cellToRemove, row);\n            } else {\n                cacheEntry.rowNode.removeChild(node);\n            }\n            delete cacheEntry.cellColSpans[cellToRemove];\n            delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (postProcessedRows[row]) {\n                delete postProcessedRows[row][cellToRemove];\n            }\n            totalCellsRemoved++;\n        }\n    }\n    function cleanUpAndRenderCells(range) {\n        var cacheEntry;\n        var stringArray = [];\n        var processedRows = [];\n        var cellsAdded;\n        var totalCellsAdded = 0;\n        var colspan;\n        for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n            cacheEntry = rowsCache[row];\n            if (!cacheEntry) {\n                continue;\n            }\n            // cellRenderQueue populated in renderRows() needs to be cleared first\n            ensureCellNodesInRowsCache(row);\n            cleanUpCells(range, row);\n            // Render missing cells.\n            cellsAdded = 0;\n            var metadata = data.getItemMetadata && data.getItemMetadata(row);\n            metadata = metadata && metadata.columns;\n            var d = getDataItem(row);\n            // TODO:  shorten this loop (index? heuristics? binary search?)\n            for (var i = 0, ii = columns.length; i < ii; i++) {\n                // Cells to the right are outside the range.\n                if (columnPosLeft[i] > range.rightPx) {\n                    break;\n                }\n                // Already rendered.\n                if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n                    i += colspan > 1 ? colspan - 1 : 0;\n                    continue;\n                }\n                colspan = 1;\n                if (metadata) {\n                    var columnData = metadata[columns[i].id] || metadata[i];\n                    colspan = columnData && columnData.colspan || 1;\n                    if (colspan === '*') {\n                        colspan = ii - i;\n                    }\n                }\n                if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                    appendCellHtml(stringArray, row, i, colspan, d);\n                    cellsAdded++;\n                }\n                i += colspan > 1 ? colspan - 1 : 0;\n            }\n            if (cellsAdded) {\n                totalCellsAdded += cellsAdded;\n                processedRows.push(row);\n            }\n        }\n        if (!stringArray.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        var processedRow;\n        var node;\n        while ((processedRow = processedRows.pop()) != null) {\n            cacheEntry = rowsCache[processedRow];\n            var columnIdx;\n            while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n                node = x.lastChild;\n                cacheEntry.rowNode.appendChild(node);\n                cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n            }\n        }\n    }\n    function renderRows(range) {\n        var parentNode = $canvas[0], stringArray = [], rows = [], needToReselectCell = false, dataLength = getDataLength();\n        for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n            if (rowsCache[i]) {\n                continue;\n            }\n            renderedRows++;\n            rows.push(i);\n            // Create an entry right away so that appendRowHtml() can\n            // start populatating it.\n            rowsCache[i] = {\n                'rowNode': null,\n                // ColSpans of rendered cells (by column idx).\n                // Can also be used for checking whether a cell has been rendered.\n                'cellColSpans': [],\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n                'cellNodesByColumnIdx': [],\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n                // end of the row.\n                'cellRenderQueue': []\n            };\n            appendRowHtml(stringArray, i, range, dataLength);\n            if (activeCellNode && activeRow === i) {\n                needToReselectCell = true;\n            }\n            counter_rows_rendered++;\n        }\n        if (!rows.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        for (var i = 0, ii = rows.length; i < ii; i++) {\n            rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n        }\n        if (needToReselectCell) {\n            activeCellNode = getCellNode(activeRow, activeCell);\n        }\n    }\n    function startPostProcessing() {\n        if (!options.enableAsyncPostRender) {\n            return;\n        }\n        clearTimeout(h_postrender);\n        h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n    }\n    function startPostProcessingCleanup() {\n        if (!options.enableAsyncPostRenderCleanup) {\n            return;\n        }\n        clearTimeout(h_postrenderCleanup);\n        h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n    function invalidatePostProcessingResults(row) {\n        // change status of columns to be re-rendered\n        for (var columnIdx in postProcessedRows[row]) {\n            if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n                postProcessedRows[row][columnIdx] = 'C';\n            }\n        }\n        postProcessFromRow = Math.min(postProcessFromRow, row);\n        postProcessToRow = Math.max(postProcessToRow, row);\n        startPostProcessing();\n    }\n    function updateRowPositions() {\n        for (var row in rowsCache) {\n            rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n        }\n    }\n    function render() {\n        if (!initialized) {\n            return;\n        }\n        var visible = getVisibleRange();\n        var rendered = getRenderedRange();\n        // remove rows no longer in the viewport\n        cleanupRows(rendered);\n        // add new rows & missing cells in existing rows\n        if (lastRenderedScrollLeft != scrollLeft) {\n            cleanUpAndRenderCells(rendered);\n        }\n        // render missing rows\n        renderRows(rendered);\n        postProcessFromRow = visible.top;\n        postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n        startPostProcessing();\n        lastRenderedScrollTop = scrollTop;\n        lastRenderedScrollLeft = scrollLeft;\n        h_render = null;\n    }\n    function handleHeaderRowScroll() {\n        var scrollLeft = $headerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleFooterRowScroll() {\n        var scrollLeft = $footerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handlePreHeaderPanelScroll() {\n        var scrollLeft = $preHeaderPanelScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleScroll() {\n        scrollTop = $viewport[0].scrollTop;\n        scrollLeft = $viewport[0].scrollLeft;\n        var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n        var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n        if (hScrollDist) {\n            prevScrollLeft = scrollLeft;\n            $headerScroller[0].scrollLeft = scrollLeft;\n            $topPanelScroller[0].scrollLeft = scrollLeft;\n            $headerRowScroller[0].scrollLeft = scrollLeft;\n            if (options.createFooterRow) {\n                $footerRowScroller[0].scrollLeft = scrollLeft;\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller[0].scrollLeft = scrollLeft;\n            }\n        }\n        if (vScrollDist) {\n            vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n            prevScrollTop = scrollTop;\n            // switch virtual pages if needed\n            if (vScrollDist < viewportH) {\n                scrollTo(scrollTop + offset);\n            } else {\n                var oldOffset = offset;\n                if (h == viewportH) {\n                    page = 0;\n                } else {\n                    page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n                }\n                offset = Math.round(page * cj);\n                if (oldOffset != offset) {\n                    invalidateAllRows();\n                }\n            }\n        }\n        if (hScrollDist || vScrollDist) {\n            if (h_render) {\n                clearTimeout(h_render);\n            }\n            if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n                if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n                    render();\n                } else {\n                    h_render = setTimeout(render, 50);\n                }\n                trigger(self.onViewportChanged, { grid: self });\n            }\n        }\n        trigger(self.onScroll, {\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            grid: self\n        });\n    }\n    function asyncPostProcessRows() {\n        var dataLength = getDataLength();\n        while (postProcessFromRow <= postProcessToRow) {\n            var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n            var cacheEntry = rowsCache[row];\n            if (!cacheEntry || row >= dataLength) {\n                continue;\n            }\n            if (!postProcessedRows[row]) {\n                postProcessedRows[row] = {};\n            }\n            ensureCellNodesInRowsCache(row);\n            for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n                if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                    continue;\n                }\n                columnIdx = columnIdx | 0;\n                var m = columns[columnIdx];\n                var processedStatus = postProcessedRows[row][columnIdx];\n                // C=cleanup and re-render, R=rendered\n                if (m.asyncPostRender && processedStatus !== 'R') {\n                    var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n                    if (node) {\n                        m.asyncPostRender(node, row, getDataItem(row), m, processedStatus === 'C');\n                    }\n                    postProcessedRows[row][columnIdx] = 'R';\n                }\n            }\n            h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n            return;\n        }\n    }\n    function asyncPostProcessCleanupRows() {\n        if (postProcessedCleanupQueue.length > 0) {\n            var groupId = postProcessedCleanupQueue[0].groupId;\n            // loop through all queue members with this groupID\n            while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n                var entry = postProcessedCleanupQueue.shift();\n                if (entry.actionType == 'R') {\n                    $(entry.node).remove();\n                }\n                if (entry.actionType == 'C') {\n                    var column = columns[entry.columnIdx];\n                    if (column.asyncPostRenderCleanup && entry.node) {\n                        // cleanup must also remove element\n                        column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n                    }\n                }\n            }\n            // call this function again after the specified delay\n            h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n        }\n    }\n    function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n        var node, columnId, addedRowHash, removedRowHash;\n        for (var row in rowsCache) {\n            removedRowHash = removedHash && removedHash[row];\n            addedRowHash = addedHash && addedHash[row];\n            if (removedRowHash) {\n                for (columnId in removedRowHash) {\n                    if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).removeClass(removedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n            if (addedRowHash) {\n                for (columnId in addedRowHash) {\n                    if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).addClass(addedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function addCellCssStyles(key, hash) {\n        if (cellCssClasses[key]) {\n            throw new Error('addCellCssStyles: cell CSS hash with key \\'' + key + '\\' already exists.');\n        }\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, null);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function removeCellCssStyles(key) {\n        if (!cellCssClasses[key]) {\n            return;\n        }\n        updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n        delete cellCssClasses[key];\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': null,\n            'grid': self\n        });\n    }\n    function setCellCssStyles(key, hash) {\n        var prevHash = cellCssClasses[key];\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, prevHash);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function getCellCssStyles(key) {\n        return cellCssClasses[key];\n    }\n    function flashCell(row, cell, speed) {\n        speed = speed || 100;\n        if (rowsCache[row]) {\n            var $cell = $(getCellNode(row, cell));\n            var toggleCellClass = function (times) {\n                if (!times) {\n                    return;\n                }\n                setTimeout(function () {\n                    $cell.queue(function () {\n                        $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n                        toggleCellClass(times - 1);\n                    });\n                }, speed);\n            };\n            toggleCellClass(4);\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n    function handleMouseWheel(e) {\n        var rowNode = $(e.target).closest('.slick-row')[0];\n        if (rowNode != rowNodeFromLastMouseWheelEvent) {\n            if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n                if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n                    queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent, zombieRowPostProcessedFromLastMouseWheelEvent);\n                } else {\n                    $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n                }\n                zombieRowNodeFromLastMouseWheelEvent = null;\n                zombieRowCacheFromLastMouseWheelEvent = null;\n                zombieRowPostProcessedFromLastMouseWheelEvent = null;\n                if (options.enableAsyncPostRenderCleanup) {\n                    startPostProcessingCleanup();\n                }\n            }\n            rowNodeFromLastMouseWheelEvent = rowNode;\n        }\n    }\n    function handleDragInit(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragInit, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n        // cancel out of it\n        return false;\n    }\n    function handleDragStart(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragStart, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        return false;\n    }\n    function handleDrag(e, dd) {\n        return trigger(self.onDrag, dd, e);\n    }\n    function handleDragEnd(e, dd) {\n        trigger(self.onDragEnd, dd, e);\n    }\n    function handleKeyDown(e) {\n        trigger(self.onKeyDown, {\n            row: activeRow,\n            cell: activeCell,\n            grid: self\n        }, e);\n        var handled = e.isImmediatePropagationStopped();\n        var keyCode = Slick.keyCode;\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n                // editor may specify an array of keys to bubble\n                if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n                    if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n                        return;\n                    }\n                }\n                if (e.which == keyCode.ESCAPE) {\n                    if (!getEditorLock().isActive()) {\n                        return;    // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n                    }\n                    cancelEditAndSetFocus();\n                } else if (e.which == keyCode.PAGE_DOWN) {\n                    navigatePageDown();\n                    handled = true;\n                } else if (e.which == keyCode.PAGE_UP) {\n                    navigatePageUp();\n                    handled = true;\n                } else if (e.which == keyCode.LEFT) {\n                    handled = navigateLeft();\n                } else if (e.which == keyCode.RIGHT) {\n                    handled = navigateRight();\n                } else if (e.which == keyCode.UP) {\n                    handled = navigateUp();\n                } else if (e.which == keyCode.DOWN) {\n                    handled = navigateDown();\n                } else if (e.which == keyCode.TAB) {\n                    handled = navigateNext();\n                } else if (e.which == keyCode.ENTER) {\n                    if (options.editable) {\n                        if (currentEditor) {\n                            // adding new row\n                            if (activeRow === getDataLength()) {\n                                navigateDown();\n                            } else {\n                                commitEditAndSetFocus();\n                            }\n                        } else {\n                            if (getEditorLock().commitCurrentEdit()) {\n                                makeActiveCellEditable();\n                            }\n                        }\n                    }\n                    handled = true;\n                }\n            } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n                handled = navigatePrev();\n            }\n        }\n        if (handled) {\n            // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n                e.originalEvent.keyCode = 0;    // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n            } // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n            // (hitting control key only, nothing else), \"Shift\" (maybe others)\n            catch (error) {\n            }\n        }\n    }\n    function handleClick(e) {\n        if (!currentEditor) {\n            // if this click resulted in some cell child node getting focus,\n            // don't steal it back - keyboard events will still bubble up\n            // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n            if (e.target != document.activeElement || $(e.target).hasClass('slick-cell')) {\n                setFocus();\n            }\n        }\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n        if (canCellBeActive(cell.row, cell.cell)) {\n            if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n                scrollRowIntoView(cell.row, false);\n                var preClickModeOn = e.target && e.target.className === Slick.preClickClassName;\n                setActiveCellInternal(getCellNode(cell.row, cell.cell), null, preClickModeOn);\n            }\n        }\n    }\n    function handleContextMenu(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if ($cell.length === 0) {\n            return;\n        }\n        // are we editing this cell?\n        if (activeCellNode === $cell[0] && currentEditor !== null) {\n            return;\n        }\n        trigger(self.onContextMenu, { grid: self }, e);\n    }\n    function handleDblClick(e) {\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onDblClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        if (options.editable) {\n            gotoCell(cell.row, cell.cell, true);\n        }\n    }\n    function handleHeaderMouseEnter(e) {\n        trigger(self.onHeaderMouseEnter, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderMouseLeave(e) {\n        trigger(self.onHeaderMouseLeave, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderContextMenu(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        trigger(self.onHeaderContextMenu, {\n            column: column,\n            grid: self\n        }, e);\n    }\n    function handleHeaderClick(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        if (column) {\n            trigger(self.onHeaderClick, {\n                column: column,\n                grid: self\n            }, e);\n        }\n    }\n    function handleMouseEnter(e) {\n        trigger(self.onMouseEnter, { grid: self }, e);\n    }\n    function handleMouseLeave(e) {\n        trigger(self.onMouseLeave, { grid: self }, e);\n    }\n    function cellExists(row, cell) {\n        return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n    }\n    function getCellFromPoint(x, y) {\n        var row = getRowFromPosition(y);\n        var cell = 0;\n        var w = 0;\n        for (var i = 0; i < columns.length && w < x; i++) {\n            w += columns[i].width;\n            cell++;\n        }\n        if (cell < 0) {\n            cell = 0;\n        }\n        return {\n            row: row,\n            cell: cell - 1\n        };\n    }\n    function getCellFromNode(cellNode) {\n        // read column number from .l<columnNumber> CSS class\n        var cls = /l\\d+/.exec(cellNode.className);\n        if (!cls) {\n            throw new Error('getCellFromNode: cannot get cell - ' + cellNode.className);\n        }\n        return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n    }\n    function getRowFromNode(rowNode) {\n        for (var row in rowsCache) {\n            if (rowsCache[row].rowNode === rowNode) {\n                return row | 0;\n            }\n        }\n        return null;\n    }\n    function getCellFromEvent(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if (!$cell.length) {\n            return null;\n        }\n        var row = getRowFromNode($cell[0].parentNode);\n        var cell = getCellFromNode($cell[0]);\n        if (row == null || cell == null) {\n            return null;\n        } else {\n            return {\n                'row': row,\n                'cell': cell\n            };\n        }\n    }\n    function getCellNodeBox(row, cell) {\n        if (!cellExists(row, cell)) {\n            return null;\n        }\n        var y1 = getRowTop(row);\n        var y2 = y1 + options.rowHeight - 1;\n        var x1 = 0;\n        for (var i = 0; i < cell; i++) {\n            x1 += columns[i].width;\n        }\n        var x2 = x1 + columns[cell].width;\n        return {\n            top: y1,\n            left: x1,\n            bottom: y2,\n            right: x2\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n    function resetActiveCell() {\n        setActiveCellInternal(null, false);\n    }\n    function setFocus() {\n        if (tabbingDirection == -1) {\n            $focusSink[0].focus();\n        } else {\n            $focusSink2[0].focus();\n        }\n    }\n    function scrollCellIntoView(row, cell, doPaging) {\n        scrollRowIntoView(row, doPaging);\n        var colspan = getColspan(row, cell);\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n    }\n    function internalScrollColumnIntoView(left, right) {\n        var scrollRight = scrollLeft + viewportW;\n        if (left < scrollLeft) {\n            $viewport.scrollLeft(left);\n            handleScroll();\n            render();\n        } else if (right > scrollRight) {\n            $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n            handleScroll();\n            render();\n        }\n    }\n    function scrollColumnIntoView(cell) {\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell]);\n    }\n    function setActiveCellInternal(newCell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (activeCellNode !== null) {\n            makeActiveCellNormal();\n            $(activeCellNode).removeClass('active');\n            if (rowsCache[activeRow]) {\n                $(rowsCache[activeRow].rowNode).removeClass('active');\n            }\n        }\n        var activeCellChanged = activeCellNode !== newCell;\n        activeCellNode = newCell;\n        if (activeCellNode != null) {\n            activeRow = getRowFromNode(activeCellNode.parentNode);\n            activeCell = activePosX = getCellFromNode(activeCellNode);\n            if (opt_editMode == null) {\n                opt_editMode = activeRow == getDataLength() || options.autoEdit;\n            }\n            if (options.showCellSelection) {\n                $(activeCellNode).addClass('active');\n                $(rowsCache[activeRow].rowNode).addClass('active');\n            }\n            if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n                clearTimeout(h_editorLoader);\n                if (options.asyncEditorLoading) {\n                    h_editorLoader = setTimeout(function () {\n                        makeActiveCellEditable(undefined, preClickModeOn);\n                    }, options.asyncEditorLoadDelay);\n                } else {\n                    makeActiveCellEditable(undefined, preClickModeOn);\n                }\n            }\n        } else {\n            activeRow = activeCell = null;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if (activeCellChanged) {\n        if (!suppressActiveCellChangedEvent) {\n            trigger(self.onActiveCellChanged, getActiveCell());\n        }    //}\n    }\n    function clearTextSelection() {\n        if (document.selection && document.selection.empty) {\n            try {\n                //IE fails here if selected element is not in dom\n                document.selection.empty();\n            } catch (e) {\n            }\n        } else if (window.getSelection) {\n            var sel = window.getSelection();\n            if (sel && sel.removeAllRanges) {\n                sel.removeAllRanges();\n            }\n        }\n    }\n    function isCellPotentiallyEditable(row, cell) {\n        var dataLength = getDataLength();\n        // is the data for this row loaded?\n        if (row < dataLength && !getDataItem(row)) {\n            return false;\n        }\n        // are we in the Add New row?  can we create new from this cell?\n        if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n            return false;\n        }\n        // does this cell have an editor?\n        if (!getEditor(row, cell)) {\n            return false;\n        }\n        return true;\n    }\n    function makeActiveCellNormal() {\n        if (!currentEditor) {\n            return;\n        }\n        trigger(self.onBeforeCellEditorDestroy, {\n            editor: currentEditor,\n            grid: self\n        });\n        currentEditor.destroy();\n        currentEditor = null;\n        if (activeCellNode) {\n            var d = getDataItem(activeRow);\n            $(activeCellNode).removeClass('editable invalid');\n            if (d) {\n                var column = columns[activeCell];\n                var formatter = getFormatter(activeRow, column);\n                var formatterResult = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n                applyFormatResultToCellNode(formatterResult, activeCellNode);\n                invalidatePostProcessingResults(activeRow);\n            }\n        }\n        // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n        // IE can't set focus to anything else correctly\n        if (navigator.userAgent.toLowerCase().match(/msie/)) {\n            clearTextSelection();\n        }\n        getEditorLock().deactivate(editController);\n    }\n    function makeActiveCellEditable(editor, preClickModeOn) {\n        if (!activeCellNode) {\n            return;\n        }\n        if (!options.editable) {\n            throw new Error('Grid : makeActiveCellEditable : should never get called when options.editable is false');\n        }\n        // cancel pending async call if there is one\n        clearTimeout(h_editorLoader);\n        if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n            return;\n        }\n        var columnDef = columns[activeCell];\n        var item = getDataItem(activeRow);\n        if (trigger(self.onBeforeEditCell, {\n                row: activeRow,\n                cell: activeCell,\n                item: item,\n                column: columnDef,\n                grid: self\n            }) === false) {\n            setFocus();\n            return;\n        }\n        getEditorLock().activate(editController);\n        $(activeCellNode).addClass('editable');\n        var useEditor = editor || getEditor(activeRow, activeCell);\n        // don't clear the cell if a custom editor is passed through\n        if (!editor && !useEditor.suppressClearOnEdit) {\n            activeCellNode.innerHTML = '';\n        }\n        currentEditor = new useEditor({\n            grid: self,\n            gridPosition: absBox($container[0]),\n            position: absBox(activeCellNode),\n            container: activeCellNode,\n            column: columnDef,\n            item: item || {},\n            commitChanges: commitEditAndSetFocus,\n            cancelChanges: cancelEditAndSetFocus\n        });\n        if (item) {\n            currentEditor.loadValue(item);\n            if (preClickModeOn && currentEditor.preClick) {\n                currentEditor.preClick();\n            }\n        }\n        serializedEditorValue = currentEditor.serializeValue();\n        if (currentEditor.position) {\n            handleActiveCellPositionChange();\n        }\n    }\n    function commitEditAndSetFocus() {\n        // if the commit fails, it would do so due to a validation error\n        // if so, do not steal the focus from the editor\n        if (getEditorLock().commitCurrentEdit()) {\n            setFocus();\n            if (options.autoEdit) {\n                navigateDown();\n            }\n        }\n    }\n    function cancelEditAndSetFocus() {\n        if (getEditorLock().cancelCurrentEdit()) {\n            setFocus();\n        }\n    }\n    function absBox(elem) {\n        var box = {\n            top: elem.offsetTop,\n            left: elem.offsetLeft,\n            bottom: 0,\n            right: 0,\n            width: $(elem).outerWidth(),\n            height: $(elem).outerHeight(),\n            visible: true\n        };\n        box.bottom = box.top + box.height;\n        box.right = box.left + box.width;\n        // walk up the tree\n        var offsetParent = elem.offsetParent;\n        while ((elem = elem.parentNode) != document.body) {\n            if (elem == null)\n                break;\n            if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css('overflowY') != 'visible') {\n                box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n            }\n            if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css('overflowX') != 'visible') {\n                box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n            }\n            box.left -= elem.scrollLeft;\n            box.top -= elem.scrollTop;\n            if (elem === offsetParent) {\n                box.left += elem.offsetLeft;\n                box.top += elem.offsetTop;\n                offsetParent = elem.offsetParent;\n            }\n            box.bottom = box.top + box.height;\n            box.right = box.left + box.width;\n        }\n        return box;\n    }\n    function getActiveCellPosition() {\n        return absBox(activeCellNode);\n    }\n    function getGridPosition() {\n        return absBox($container[0]);\n    }\n    function handleActiveCellPositionChange() {\n        if (!activeCellNode) {\n            return;\n        }\n        trigger(self.onActiveCellPositionChanged, { grid: self });\n        if (currentEditor) {\n            var cellBox = getActiveCellPosition();\n            if (currentEditor.show && currentEditor.hide) {\n                if (!cellBox.visible) {\n                    currentEditor.hide();\n                } else {\n                    currentEditor.show();\n                }\n            }\n            if (currentEditor.position) {\n                currentEditor.position(cellBox);\n            }\n        }\n    }\n    function getCellEditor() {\n        return currentEditor;\n    }\n    function getActiveCell() {\n        if (!activeCellNode) {\n            return null;\n        } else {\n            return {\n                row: activeRow,\n                cell: activeCell,\n                grid: self\n            };\n        }\n    }\n    function getActiveCellNode() {\n        return activeCellNode;\n    }\n    function scrollRowIntoView(row, doPaging) {\n        var rowAtTop = row * options.rowHeight;\n        var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n        // need to page down?\n        if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n            scrollTo(doPaging ? rowAtTop : rowAtBottom);\n            render();\n        }    // or page up?\n        else if (row * options.rowHeight < scrollTop + offset) {\n            scrollTo(doPaging ? rowAtBottom : rowAtTop);\n            render();\n        }\n    }\n    function scrollRowToTop(row) {\n        scrollTo(row * options.rowHeight);\n        render();\n    }\n    function scrollPage(dir) {\n        var deltaRows = dir * numVisibleRows;\n        scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n        render();\n        if (options.enableCellNavigation && activeRow != null) {\n            var row = activeRow + deltaRows;\n            var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n            if (row >= dataLengthIncludingAddNew) {\n                row = dataLengthIncludingAddNew - 1;\n            }\n            if (row < 0) {\n                row = 0;\n            }\n            var cell = 0, prevCell = null;\n            var prevActivePosX = activePosX;\n            while (cell <= activePosX) {\n                if (canCellBeActive(row, cell)) {\n                    prevCell = cell;\n                }\n                cell += getColspan(row, cell);\n            }\n            if (prevCell !== null) {\n                setActiveCellInternal(getCellNode(row, prevCell));\n                activePosX = prevActivePosX;\n            } else {\n                resetActiveCell();\n            }\n        }\n    }\n    function navigatePageDown() {\n        scrollPage(1);\n    }\n    function navigatePageUp() {\n        scrollPage(-1);\n    }\n    function getColspan(row, cell) {\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (!metadata || !metadata.columns) {\n            return 1;\n        }\n        var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n        var colspan = columnData && columnData.colspan;\n        if (colspan === '*') {\n            colspan = columns.length - cell;\n        } else {\n            colspan = colspan || 1;\n        }\n        return colspan;\n    }\n    function findFirstFocusableCell(row) {\n        var cell = 0;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                return cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return null;\n    }\n    function findLastFocusableCell(row) {\n        var cell = 0;\n        var lastFocusableCell = null;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                lastFocusableCell = cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return lastFocusableCell;\n    }\n    function gotoRight(row, cell, posX) {\n        if (cell >= columns.length) {\n            return null;\n        }\n        do {\n            cell += getColspan(row, cell);\n        } while (cell < columns.length && !canCellBeActive(row, cell));\n        if (cell < columns.length) {\n            return {\n                'row': row,\n                'cell': cell,\n                'posX': cell\n            };\n        }\n        return null;\n    }\n    function gotoLeft(row, cell, posX) {\n        if (cell <= 0) {\n            return null;\n        }\n        var firstFocusableCell = findFirstFocusableCell(row);\n        if (firstFocusableCell === null || firstFocusableCell >= cell) {\n            return null;\n        }\n        var prev = {\n            'row': row,\n            'cell': firstFocusableCell,\n            'posX': firstFocusableCell\n        };\n        var pos;\n        while (true) {\n            pos = gotoRight(prev.row, prev.cell, prev.posX);\n            if (!pos) {\n                return null;\n            }\n            if (pos.cell >= cell) {\n                return prev;\n            }\n            prev = pos;\n        }\n    }\n    function gotoDown(row, cell, posX) {\n        var prevCell;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        while (true) {\n            if (++row >= dataLengthIncludingAddNew) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoUp(row, cell, posX) {\n        var prevCell;\n        while (true) {\n            if (--row < 0) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoNext(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = cell = posX = 0;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos = gotoRight(row, cell, posX);\n        if (pos) {\n            return pos;\n        }\n        var firstFocusableCell = null;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        // if at last row, cycle through columns rather than get stuck in the last one\n        if (row === dataLengthIncludingAddNew - 1) {\n            row--;\n        }\n        while (++row < dataLengthIncludingAddNew) {\n            firstFocusableCell = findFirstFocusableCell(row);\n            if (firstFocusableCell !== null) {\n                return {\n                    'row': row,\n                    'cell': firstFocusableCell,\n                    'posX': firstFocusableCell\n                };\n            }\n        }\n        return null;\n    }\n    function gotoPrev(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = getDataLengthIncludingAddNew() - 1;\n            cell = posX = columns.length - 1;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos;\n        var lastSelectableCell;\n        while (!pos) {\n            pos = gotoLeft(row, cell, posX);\n            if (pos) {\n                break;\n            }\n            if (--row < 0) {\n                return null;\n            }\n            cell = 0;\n            lastSelectableCell = findLastFocusableCell(row);\n            if (lastSelectableCell !== null) {\n                pos = {\n                    'row': row,\n                    'cell': lastSelectableCell,\n                    'posX': lastSelectableCell\n                };\n            }\n        }\n        return pos;\n    }\n    function navigateRight() {\n        return navigate('right');\n    }\n    function navigateLeft() {\n        return navigate('left');\n    }\n    function navigateDown() {\n        return navigate('down');\n    }\n    function navigateUp() {\n        return navigate('up');\n    }\n    function navigateNext() {\n        return navigate('next');\n    }\n    function navigatePrev() {\n        return navigate('prev');\n    }\n    /**\r\n     * @param {string} dir Navigation direction.\r\n     * @return {boolean} Whether navigation resulted in a change of active cell.\r\n     */\n    function navigate(dir) {\n        if (!options.enableCellNavigation) {\n            return false;\n        }\n        if (!activeCellNode && dir != 'prev' && dir != 'next') {\n            return false;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return true;\n        }\n        setFocus();\n        var tabbingDirections = {\n            'up': -1,\n            'down': 1,\n            'left': -1,\n            'right': 1,\n            'prev': -1,\n            'next': 1\n        };\n        tabbingDirection = tabbingDirections[dir];\n        var stepFunctions = {\n            'up': gotoUp,\n            'down': gotoDown,\n            'left': gotoLeft,\n            'right': gotoRight,\n            'prev': gotoPrev,\n            'next': gotoNext\n        };\n        var stepFn = stepFunctions[dir];\n        var pos = stepFn(activeRow, activeCell, activePosX);\n        if (pos) {\n            var isAddNewRow = pos.row == getDataLength();\n            scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n            setActiveCellInternal(getCellNode(pos.row, pos.cell));\n            activePosX = pos.posX;\n            return true;\n        } else {\n            setActiveCellInternal(getCellNode(activeRow, activeCell));\n            return false;\n        }\n    }\n    function getCellNode(row, cell) {\n        if (rowsCache[row]) {\n            ensureCellNodesInRowsCache(row);\n            return rowsCache[row].cellNodesByColumnIdx[cell];\n        }\n        return null;\n    }\n    function setActiveCell(row, cell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (!initialized) {\n            return;\n        }\n        if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return;\n        }\n        if (!options.enableCellNavigation) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        setActiveCellInternal(getCellNode(row, cell), opt_editMode, preClickModeOn, suppressActiveCellChangedEvent);\n    }\n    function canCellBeActive(row, cell) {\n        if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n            return rowMetadata.focusable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean') {\n            return columnMetadata[columns[cell].id].focusable;\n        }\n        if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean') {\n            return columnMetadata[cell].focusable;\n        }\n        return columns[cell].focusable;\n    }\n    function canCellBeSelected(row, cell) {\n        if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n            return rowMetadata.selectable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n        if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n            return columnMetadata.selectable;\n        }\n        return columns[cell].selectable;\n    }\n    function gotoCell(row, cell, forceEdit) {\n        if (!initialized) {\n            return;\n        }\n        if (!canCellBeActive(row, cell)) {\n            return;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        var newCell = getCellNode(row, cell);\n        // if selecting the 'add new' row, start editing right away\n        setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n        // if no editor was created, set the focus back on the grid\n        if (!currentEditor) {\n            setFocus();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n    function commitCurrentEdit() {\n        var item = getDataItem(activeRow);\n        var column = columns[activeCell];\n        if (currentEditor) {\n            if (currentEditor.isValueChanged()) {\n                var validationResults = currentEditor.validate();\n                if (validationResults.valid) {\n                    if (activeRow < getDataLength()) {\n                        var editCommand = {\n                            row: activeRow,\n                            cell: activeCell,\n                            editor: currentEditor,\n                            serializedValue: currentEditor.serializeValue(),\n                            prevSerializedValue: serializedEditorValue,\n                            execute: function () {\n                                this.editor.applyValue(item, this.serializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            },\n                            undo: function () {\n                                this.editor.applyValue(item, this.prevSerializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            }\n                        };\n                        if (options.editCommandHandler) {\n                            makeActiveCellNormal();\n                            options.editCommandHandler(item, column, editCommand);\n                        } else {\n                            editCommand.execute();\n                            makeActiveCellNormal();\n                        }\n                    } else {\n                        var newItem = {};\n                        currentEditor.applyValue(newItem, currentEditor.serializeValue());\n                        makeActiveCellNormal();\n                        trigger(self.onAddNewRow, {\n                            item: newItem,\n                            column: column,\n                            grid: self\n                        });\n                    }\n                    // check whether the lock has been re-acquired by event handlers\n                    return !getEditorLock().isActive();\n                } else {\n                    // Re-add the CSS class to trigger transitions, if any.\n                    $(activeCellNode).removeClass('invalid');\n                    $(activeCellNode).width();\n                    // force layout\n                    $(activeCellNode).addClass('invalid');\n                    trigger(self.onValidationError, {\n                        editor: currentEditor,\n                        cellNode: activeCellNode,\n                        validationResults: validationResults,\n                        row: activeRow,\n                        cell: activeCell,\n                        column: column,\n                        grid: self\n                    });\n                    currentEditor.focus();\n                    return false;\n                }\n            }\n            makeActiveCellNormal();\n        }\n        return true;\n    }\n    function cancelCurrentEdit() {\n        makeActiveCellNormal();\n        return true;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = columns.length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getSelectedRows() {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        return selectedRows;\n    }\n    function setSelectedRows(rows) {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        selectionModel.setSelectedRanges(rowsToRanges(rows));\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Debug\n    this.debug = function () {\n        var s = '';\n        s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n        s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n        s += '\\n' + 'renderedRows:  ' + renderedRows;\n        s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n        s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n        s += '\\n' + 'n(umber of pages):  ' + n;\n        s += '\\n' + '(current) page:  ' + page;\n        s += '\\n' + 'page height (ph):  ' + ph;\n        s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n        alert(s);\n    };\n    // a debug helper to be able to access private members\n    this.eval = function (expr) {\n        return eval(expr);\n    };\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Public API\n    $.extend(this, {\n        'slickGridVersion': '2.3.4',\n        // Events\n        'onScroll': new Slick.Event(),\n        'onSort': new Slick.Event(),\n        'onHeaderMouseEnter': new Slick.Event(),\n        'onHeaderMouseLeave': new Slick.Event(),\n        'onHeaderContextMenu': new Slick.Event(),\n        'onHeaderClick': new Slick.Event(),\n        'onHeaderCellRendered': new Slick.Event(),\n        'onBeforeHeaderCellDestroy': new Slick.Event(),\n        'onHeaderRowCellRendered': new Slick.Event(),\n        'onFooterRowCellRendered': new Slick.Event(),\n        'onBeforeHeaderRowCellDestroy': new Slick.Event(),\n        'onBeforeFooterRowCellDestroy': new Slick.Event(),\n        'onMouseEnter': new Slick.Event(),\n        'onMouseLeave': new Slick.Event(),\n        'onClick': new Slick.Event(),\n        'onDblClick': new Slick.Event(),\n        'onContextMenu': new Slick.Event(),\n        'onKeyDown': new Slick.Event(),\n        'onAddNewRow': new Slick.Event(),\n        'onBeforeAppendCell': new Slick.Event(),\n        'onValidationError': new Slick.Event(),\n        'onViewportChanged': new Slick.Event(),\n        'onColumnsReordered': new Slick.Event(),\n        'onColumnsResized': new Slick.Event(),\n        'onCellChange': new Slick.Event(),\n        'onBeforeEditCell': new Slick.Event(),\n        'onBeforeCellEditorDestroy': new Slick.Event(),\n        'onBeforeDestroy': new Slick.Event(),\n        'onActiveCellChanged': new Slick.Event(),\n        'onActiveCellPositionChanged': new Slick.Event(),\n        'onDragInit': new Slick.Event(),\n        'onDragStart': new Slick.Event(),\n        'onDrag': new Slick.Event(),\n        'onDragEnd': new Slick.Event(),\n        'onSelectedRowsChanged': new Slick.Event(),\n        'onCellCssStylesChanged': new Slick.Event(),\n        // Methods\n        'registerPlugin': registerPlugin,\n        'unregisterPlugin': unregisterPlugin,\n        'getColumns': getColumns,\n        'setColumns': setColumns,\n        'getColumnIndex': getColumnIndex,\n        'updateColumnHeader': updateColumnHeader,\n        'setSortColumn': setSortColumn,\n        'setSortColumns': setSortColumns,\n        'getSortColumns': getSortColumns,\n        'autosizeColumns': autosizeColumns,\n        'getOptions': getOptions,\n        'setOptions': setOptions,\n        'getData': getData,\n        'getDataLength': getDataLength,\n        'getDataItem': getDataItem,\n        'setData': setData,\n        'getSelectionModel': getSelectionModel,\n        'setSelectionModel': setSelectionModel,\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getContainerNode': getContainerNode,\n        'updatePagingStatusFromView': updatePagingStatusFromView,\n        'render': render,\n        'invalidate': invalidate,\n        'invalidateRow': invalidateRow,\n        'invalidateRows': invalidateRows,\n        'invalidateAllRows': invalidateAllRows,\n        'updateCell': updateCell,\n        'updateRow': updateRow,\n        'getViewport': getVisibleRange,\n        'getRenderedRange': getRenderedRange,\n        'resizeCanvas': resizeCanvas,\n        'updateRowCount': updateRowCount,\n        'scrollRowIntoView': scrollRowIntoView,\n        'scrollRowToTop': scrollRowToTop,\n        'scrollCellIntoView': scrollCellIntoView,\n        'scrollColumnIntoView': scrollColumnIntoView,\n        'getCanvasNode': getCanvasNode,\n        'getUID': getUID,\n        'getHeaderColumnWidthDiff': getHeaderColumnWidthDiff,\n        'getScrollbarDimensions': getScrollbarDimensions,\n        'getHeadersWidth': getHeadersWidth,\n        'getCanvasWidth': getCanvasWidth,\n        'focus': setFocus,\n        'getCellFromPoint': getCellFromPoint,\n        'getCellFromEvent': getCellFromEvent,\n        'getActiveCell': getActiveCell,\n        'setActiveCell': setActiveCell,\n        'getActiveCellNode': getActiveCellNode,\n        'getActiveCellPosition': getActiveCellPosition,\n        'resetActiveCell': resetActiveCell,\n        'editActiveCell': makeActiveCellEditable,\n        'getCellEditor': getCellEditor,\n        'getCellNode': getCellNode,\n        'getCellNodeBox': getCellNodeBox,\n        'canCellBeSelected': canCellBeSelected,\n        'canCellBeActive': canCellBeActive,\n        'navigatePrev': navigatePrev,\n        'navigateNext': navigateNext,\n        'navigateUp': navigateUp,\n        'navigateDown': navigateDown,\n        'navigateLeft': navigateLeft,\n        'navigateRight': navigateRight,\n        'navigatePageUp': navigatePageUp,\n        'navigatePageDown': navigatePageDown,\n        'gotoCell': gotoCell,\n        'getTopPanel': getTopPanel,\n        'setTopPanelVisibility': setTopPanelVisibility,\n        'getPreHeaderPanel': getPreHeaderPanel,\n        'setPreHeaderPanelVisibility': setPreHeaderPanelVisibility,\n        'setHeaderRowVisibility': setHeaderRowVisibility,\n        'getHeaderRow': getHeaderRow,\n        'getHeaderRowColumn': getHeaderRowColumn,\n        'setFooterRowVisibility': setFooterRowVisibility,\n        'getFooterRow': getFooterRow,\n        'getFooterRowColumn': getFooterRowColumn,\n        'getGridPosition': getGridPosition,\n        'flashCell': flashCell,\n        'addCellCssStyles': addCellCssStyles,\n        'setCellCssStyles': setCellCssStyles,\n        'removeCellCssStyles': removeCellCssStyles,\n        'getCellCssStyles': getCellCssStyles,\n        'init': finishInitialization,\n        'destroy': destroy,\n        // IEditor implementation\n        'getEditorLock': getEditorLock,\n        'getEditController': getEditController\n    });\n    init();\n}\nmodule.exports = { Grid: SlickGrid };},\n420: /* slickgrid/slick.jquery */ function(require, module, exports) {\nmodule.exports = typeof $ !== 'undefined' ? $ : require(413    /* jquery */);},\n421: /* underscore.template/lib/index */ function(require, module, exports) {\n'use strict';\nvar _ = require(422    /* ./underscore.template */);\nvar UnderscoreTemplate = _.template;\nfunction Template(text, data, settings) {\n    return UnderscoreTemplate(text, data, settings);\n}\nTemplate._ = _;\nmodule.exports = Template;\n// If we're in the browser,\n// define it if we're using AMD, otherwise leak a global.\nif (typeof define === 'function' && define.amd) {\n    define(function () {\n        return Template;\n    });\n} else if (typeof window !== 'undefined' || typeof navigator !== 'undefined') {\n    window.UnderscoreTemplate = Template;\n}},\n422: /* underscore.template/lib/underscore.template */ function(require, module, exports) {\n'use strict';\n//     Underscore.js 1.5.2\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n// Establish the object that gets returned to break out of a loop iteration.\nvar breaker = {};\n// Save bytes in the minified (but not gzipped) version:\nvar ArrayProto = Array.prototype, ObjProto = Object.prototype;\n// Create quick reference variables for speed access to core prototypes.\nvar slice = ArrayProto.slice, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty;\n// All **ECMAScript 5** native function implementations that we hope to use\n// are declared here.\nvar nativeForEach = ArrayProto.forEach, nativeKeys = Object.keys, nativeIsArray = Array.isArray;\n// Create a safe reference to the Underscore object for use below.\nvar _ = function () {\n};\n// Collection Functions\n// --------------------\n// The cornerstone, an `each` implementation, aka `forEach`.\n// Handles objects with the built-in `forEach`, arrays, and raw objects.\n// Delegates to **ECMAScript 5**'s native `forEach` if available.\nvar each = _.each = _.forEach = function (obj, iterator, context) {\n    if (obj == null)\n        return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n        for (var i = 0, length = obj.length; i < length; i++) {\n            if (iterator.call(context, obj[i], i, obj) === breaker)\n                return;\n        }\n    } else {\n        var keys = _.keys(obj);\n        for (var i = 0, length = keys.length; i < length; i++) {\n            if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)\n                return;\n        }\n    }\n};\n// Object Functions\n// ----------------\n// Retrieve the names of an object's properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`\n_.keys = nativeKeys || function (obj) {\n    if (obj !== Object(obj))\n        throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj)\n        if (_.has(obj, key))\n            keys.push(key);\n    return keys;\n};\n// Fill in a given object with default properties.\n_.defaults = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n        if (source) {\n            for (var prop in source) {\n                if (obj[prop] === void 0)\n                    obj[prop] = source[prop];\n            }\n        }\n    });\n    return obj;\n};\n// Is a given value an array?\n// Delegates to ECMA5's native Array.isArray\n_.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n};\n// Shortcut function for checking if an object has a given property directly\n// on itself (in other words, not on a prototype).\n_.has = function (obj, path) {\n    if (!_.isArray(path)) {\n        return obj != null && hasOwnProperty.call(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n        var key = path[i];\n        if (obj == null || !hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n        obj = obj[key];\n    }\n    return !!length;\n};\n// List of HTML entities for escaping.\nvar entityMap = {\n    escape: {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        '\\'': '&#x27;'\n    }\n};\n// Regexes containing the keys and values listed immediately above.\nvar entityRegexes = { escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g') };\n// Functions for escaping and unescaping strings to/from HTML interpolation.\n_.each(['escape'], function (method) {\n    _[method] = function (string) {\n        if (string == null)\n            return '';\n        return ('' + string).replace(entityRegexes[method], function (match) {\n            return entityMap[method][match];\n        });\n    };\n});\n// By default, Underscore uses ERB-style template delimiters, change the\n// following template settings to use alternative delimiters.\n_.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n};\n// When customizing `templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n    '\\'': '\\'',\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n};\nvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n_.template = function (text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n        (settings.escape || noMatch).source,\n        (settings.interpolate || noMatch).source,\n        (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = '__p+=\\'';\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n        source += text.slice(index, offset).replace(escaper, function (match) {\n            return '\\\\' + escapes[match];\n        });\n        if (escape) {\n            source += '\\'+\\n((__t=(' + escape + '))==null?\\'\\':_.escape(__t))+\\n\\'';\n        }\n        if (interpolate) {\n            source += '\\'+\\n((__t=(' + interpolate + '))==null?\\'\\':__t)+\\n\\'';\n        }\n        if (evaluate) {\n            source += '\\';\\n' + evaluate + '\\n__p+=\\'';\n        }\n        index = offset + match.length;\n        return match;\n    });\n    source += '\\';\\n';\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable)\n        source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = 'var __t,__p=\\'\\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\\'\\');};\\n' + source + 'return __p;\\n';\n    try {\n        render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n        e.source = source;\n        throw e;\n    }\n    if (data)\n        return render(data, _);\n    var template = function (data) {\n        return render.call(this, data, _);\n    };\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n    return template;\n};\nmodule.exports = _;}\n}, {\"models/widgets/tables/cell_editors\":405,\"models/widgets/tables/cell_formatters\":406,\"models/widgets/tables/data_table\":407,\"models/widgets/tables/index\":408,\"models/widgets/tables/main\":409,\"models/widgets/tables/table_column\":410,\"models/widgets/tables/table_widget\":411,\"models/widgets/widget\":412}, 409);\n})\n\n\n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar p = require(15    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(30    /* core/util/object */);\nvar dom_view_1 = require(6    /* core/dom_view */);\nvar model_1 = require(50    /* ../../../model */);\nvar data_table_1 = require(407    /* ./data_table */);\nvar CellEditorView = function (_super) {\n    tslib_1.__extends(CellEditorView, _super);\n    function CellEditorView(options) {\n        var _this = _super.call(this, object_1.extend({ model: options.column.editor }, options)) || this;\n        _this.args = options;\n        return _this;\n    }\n    CellEditorView.prototype.initialize = function (options) {\n        _super.prototype.initialize.call(this, options);\n        return this.render();\n    };\n    CellEditorView.prototype.render = function () {\n        _super.prototype.render.call(this);\n        this.args.container.appendChild(this.el);\n        this.el.appendChild(this.inputEl);\n        this.renderEditor();\n        this.disableNavigation();\n        return this;\n    };\n    CellEditorView.prototype.renderEditor = function () {\n    };\n    CellEditorView.prototype.disableNavigation = function () {\n        return this.inputEl.addEventListener('keydown', function (event) {\n            switch (event.keyCode) {\n            case dom_1.Keys.Left:\n            case dom_1.Keys.Right:\n            case dom_1.Keys.Up:\n            case dom_1.Keys.Down:\n            case dom_1.Keys.PageUp:\n            case dom_1.Keys.PageDown:\n                return event.stopImmediatePropagation();\n            }\n        });\n    };\n    CellEditorView.prototype.destroy = function () {\n        return this.remove();\n    };\n    CellEditorView.prototype.focus = function () {\n        return this.inputEl.focus();\n    };\n    CellEditorView.prototype.show = function () {\n    };\n    CellEditorView.prototype.hide = function () {\n    };\n    CellEditorView.prototype.position = function () {\n    };\n    CellEditorView.prototype.getValue = function () {\n        return this.inputEl.value;\n    };\n    CellEditorView.prototype.setValue = function (val) {\n        return this.inputEl.value = val;\n    };\n    CellEditorView.prototype.serializeValue = function () {\n        return this.getValue();\n    };\n    CellEditorView.prototype.isValueChanged = function () {\n        return !(this.getValue() === '' && this.defaultValue == null) && this.getValue() !== this.defaultValue;\n    };\n    CellEditorView.prototype.applyValue = function (item, state) {\n        return this.args.grid.getData().setField(item[data_table_1.DTINDEX_NAME], this.args.column.field, state);\n    };\n    CellEditorView.prototype.loadValue = function (item) {\n        var value;\n        value = item[this.args.column.field];\n        this.defaultValue = value != null ? value : this.emptyValue;\n        return this.setValue(this.defaultValue);\n    };\n    CellEditorView.prototype.validateValue = function (value) {\n        var result;\n        if (this.args.column.validator) {\n            result = this.args.column.validator(value);\n            if (!result.valid) {\n                return result;\n            }\n        }\n        return {\n            valid: true,\n            msg: null\n        };\n    };\n    CellEditorView.prototype.validate = function () {\n        return this.validateValue(this.getValue());\n    };\n    return CellEditorView;\n}(dom_view_1.DOMView);\nexports.CellEditorView = CellEditorView;\n;\nCellEditorView.prototype.className = 'bk-cell-editor';\nCellEditorView.prototype.inputEl = null;\nCellEditorView.prototype.emptyValue = null;\nCellEditorView.prototype.defaultValue = null;\nvar CellEditor = function (_super) {\n    tslib_1.__extends(CellEditor, _super);\n    function CellEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CellEditor;\n}(model_1.Model);\nexports.CellEditor = CellEditor;\n;\nCellEditor.prototype.type = 'CellEditor';\nCellEditor.prototype.default_view = CellEditorView;\nvar StringEditorView = function (_super) {\n    tslib_1.__extends(StringEditorView, _super);\n    function StringEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StringEditorView.prototype.renderEditor = function () {\n        //completions = @model.completions\n        //if completions.length != 0\n        //  @inputEl.classList.add(\"bk-cell-editor-completion\")\n        //  $(@inputEl).autocomplete({source: completions})\n        //  $(@inputEl).autocomplete(\"widget\")\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    StringEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    return StringEditorView;\n}(CellEditorView);\nexports.StringEditorView = StringEditorView;\n;\nStringEditorView.prototype.emptyValue = '';\nStringEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar StringEditor = function (_super) {\n    tslib_1.__extends(StringEditor, _super);\n    function StringEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return StringEditor;\n}(CellEditor);\nexports.StringEditor = StringEditor;\n;\nStringEditor.prototype.type = 'StringEditor';\nStringEditor.prototype.default_view = StringEditorView;\nStringEditor.define({\n    completions: [\n        p.Array,\n        []\n    ]\n});\nexports.TextEditorView = function (_super) {\n    tslib_1.__extends(TextEditorView, _super);\n    function TextEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TextEditorView;\n}(CellEditorView);\nvar TextEditor = function (_super) {\n    tslib_1.__extends(TextEditor, _super);\n    function TextEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TextEditor;\n}(CellEditor);\nexports.TextEditor = TextEditor;\n;\nTextEditor.prototype.type = 'TextEditor';\nTextEditor.prototype.default_view = exports.TextEditorView;\nvar SelectEditorView = function (_super) {\n    tslib_1.__extends(SelectEditorView, _super);\n    function SelectEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SelectEditorView.prototype.renderEditor = function () {\n        var i, len, ref;\n        ref = this.model.options;\n        for (i = 0, len = ref.length; i < len; i++) {\n            dom_1.option = ref[i];\n            this.inputEl.appendChild(dom_1.option({ value: dom_1.option }, dom_1.option));\n        }\n        return this.focus();\n    };\n    SelectEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        return this.inputEl.select();\n    };\n    return SelectEditorView;\n}(CellEditorView);\nexports.SelectEditorView = SelectEditorView;\n;\nSelectEditorView.prototype.inputEl = dom_1.select();\nvar SelectEditor = function (_super) {\n    tslib_1.__extends(SelectEditor, _super);\n    function SelectEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return SelectEditor;\n}(CellEditor);\nexports.SelectEditor = SelectEditor;\n;\nSelectEditor.prototype.type = 'SelectEditor';\nSelectEditor.prototype.default_view = SelectEditorView;\nSelectEditor.define({\n    options: [\n        p.Array,\n        []\n    ]\n});\nexports.PercentEditorView = function (_super) {\n    tslib_1.__extends(PercentEditorView, _super);\n    function PercentEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PercentEditorView;\n}(CellEditorView);\nvar PercentEditor = function (_super) {\n    tslib_1.__extends(PercentEditor, _super);\n    function PercentEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return PercentEditor;\n}(CellEditor);\nexports.PercentEditor = PercentEditor;\n;\nPercentEditor.prototype.type = 'PercentEditor';\nPercentEditor.prototype.default_view = exports.PercentEditorView;\nvar CheckboxEditorView = function (_super) {\n    tslib_1.__extends(CheckboxEditorView, _super);\n    function CheckboxEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CheckboxEditorView.prototype.renderEditor = function () {\n        return this.focus();\n    };\n    CheckboxEditorView.prototype.loadValue = function (item) {\n        this.defaultValue = !!item[this.args.column.field];\n        return this.inputEl.checked = this.defaultValue;\n    };\n    CheckboxEditorView.prototype.serializeValue = function () {\n        return this.inputEl.checked;\n    };\n    return CheckboxEditorView;\n}(CellEditorView);\nexports.CheckboxEditorView = CheckboxEditorView;\n;\nCheckboxEditorView.prototype.inputEl = dom_1.input({\n    type: 'checkbox',\n    value: 'true'\n});\nvar CheckboxEditor = function (_super) {\n    tslib_1.__extends(CheckboxEditor, _super);\n    function CheckboxEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CheckboxEditor;\n}(CellEditor);\nexports.CheckboxEditor = CheckboxEditor;\n;\nCheckboxEditor.prototype.type = 'CheckboxEditor';\nCheckboxEditor.prototype.default_view = CheckboxEditorView;\nvar IntEditorView = function (_super) {\n    tslib_1.__extends(IntEditorView, _super);\n    function IntEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IntEditorView.prototype.renderEditor = function () {\n        //$(@inputEl).spinner({step: @model.step})\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.remove = function () {\n        //$(@inputEl).spinner(\"destroy\")\n        return _super.prototype.remove.call(this);\n    };\n    IntEditorView.prototype.serializeValue = function () {\n        return parseInt(this.getValue(), 10) || 0;\n    };\n    IntEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    IntEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid integer'\n            };\n        } else {\n            return _super.prototype.validateValue.call(this, value);\n        }\n    };\n    return IntEditorView;\n}(CellEditorView);\nexports.IntEditorView = IntEditorView;\n;\nIntEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar IntEditor = function (_super) {\n    tslib_1.__extends(IntEditor, _super);\n    function IntEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return IntEditor;\n}(CellEditor);\nexports.IntEditor = IntEditor;\n;\nIntEditor.prototype.type = 'IntEditor';\nIntEditor.prototype.default_view = IntEditorView;\nIntEditor.define({\n    step: [\n        p.Number,\n        1\n    ]\n});\nvar NumberEditorView = function (_super) {\n    tslib_1.__extends(NumberEditorView, _super);\n    function NumberEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberEditorView.prototype.renderEditor = function () {\n        //$(@inputEl).spinner({step: @model.step})\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.remove = function () {\n        //$(@inputEl).spinner(\"destroy\")\n        return _super.prototype.remove.call(this);\n    };\n    NumberEditorView.prototype.serializeValue = function () {\n        return parseFloat(this.getValue()) || 0;\n    };\n    NumberEditorView.prototype.loadValue = function (item) {\n        _super.prototype.loadValue.call(this, item);\n        this.inputEl.defaultValue = this.defaultValue;\n        return this.inputEl.select();\n    };\n    NumberEditorView.prototype.validateValue = function (value) {\n        if (isNaN(value)) {\n            return {\n                valid: false,\n                msg: 'Please enter a valid number'\n            };\n        } else {\n            return _super.prototype.validateValue.call(this, value);\n        }\n    };\n    return NumberEditorView;\n}(CellEditorView);\nexports.NumberEditorView = NumberEditorView;\n;\nNumberEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar NumberEditor = function (_super) {\n    tslib_1.__extends(NumberEditor, _super);\n    function NumberEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return NumberEditor;\n}(CellEditor);\nexports.NumberEditor = NumberEditor;\n;\nNumberEditor.prototype.type = 'NumberEditor';\nNumberEditor.prototype.default_view = NumberEditorView;\nNumberEditor.define({\n    step: [\n        p.Number,\n        0.01\n    ]\n});\nexports.TimeEditorView = function (_super) {\n    tslib_1.__extends(TimeEditorView, _super);\n    function TimeEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TimeEditorView;\n}(CellEditorView);\nvar TimeEditor = function (_super) {\n    tslib_1.__extends(TimeEditor, _super);\n    function TimeEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return TimeEditor;\n}(CellEditor);\nexports.TimeEditor = TimeEditor;\n;\nTimeEditor.prototype.type = 'TimeEditor';\nTimeEditor.prototype.default_view = exports.TimeEditorView;\nvar DateEditorView = function (_super) {\n    tslib_1.__extends(DateEditorView, _super);\n    function DateEditorView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateEditorView.prototype.renderEditor = function () {\n        this.calendarOpen = false;\n        //@$datepicker = $(@inputEl).datepicker({\n        //  showOn: \"button\"\n        //  buttonImageOnly: true\n        //  beforeShow: () => @calendarOpen = true\n        //  onClose: () => @calendarOpen = false\n        //})\n        //@$datepicker.siblings(\".ui-datepicker-trigger\").css(\"vertical-align\": \"middle\")\n        //@$datepicker.width(@$datepicker.width() - (14 + 2*4 + 4)) # img width + margins + edge distance\n        this.inputEl.focus();\n        return this.inputEl.select();\n    };\n    DateEditorView.prototype.destroy = function () {\n        //$.datepicker.dpDiv.stop(true, true)\n        //@$datepicker.datepicker(\"hide\")\n        //@$datepicker.datepicker(\"destroy\")\n        return _super.prototype.destroy.call(this);\n    };\n    DateEditorView.prototype.show = function () {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.stop(true, true).show()\n        return _super.prototype.show.call(this);\n    };\n    DateEditorView.prototype.hide = function () {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.stop(true, true).hide()\n        return _super.prototype.hide.call(this);\n    };\n    DateEditorView.prototype.position = function (position) {\n        //if @calendarOpen\n        //  $.datepicker.dpDiv.css(top: position.top + 30, left: position.left)\n        return _super.prototype.position.call(this);\n    };\n    DateEditorView.prototype.getValue = function () {\n    };\n    //return @$datepicker.datepicker(\"getDate\").getTime()\n    DateEditorView.prototype.setValue = function (val) {\n    };\n    return DateEditorView;\n}(CellEditorView);\nexports.DateEditorView = DateEditorView;\n;\nDateEditorView.prototype.emptyValue = new Date();\nDateEditorView.prototype.inputEl = dom_1.input({ type: 'text' });\nvar DateEditor = function (_super) {\n    tslib_1.__extends(DateEditor, _super);\n    function DateEditor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DateEditor;\n}(CellEditor);\nexports.DateEditor = DateEditor;\n;\nDateEditor.prototype.type = 'DateEditor';\nDateEditor.prototype.default_view = DateEditorView;    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar Numbro = require(332    /* numbro */);\nvar compile_template = require(421    /* underscore.template */);\nvar tz = require(363    /* timezone */);\nvar p = require(15    /* core/properties */);\nvar dom_1 = require(5    /* core/dom */);\nvar object_1 = require(30    /* core/util/object */);\nvar types_1 = require(42    /* core/util/types */);\nvar model_1 = require(50    /* ../../../model */);\nexports.CellFormatter = function (_super) {\n    tslib_1.__extends(CellFormatter, _super);\n    function CellFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CellFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    };\n    return CellFormatter;\n}(model_1.Model);\nvar StringFormatter = function (_super) {\n    tslib_1.__extends(StringFormatter, _super);\n    function StringFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    StringFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var font_style, text, text_align, text_color;\n        font_style = this.font_style;\n        text_align = this.text_align;\n        text_color = this.text_color;\n        text = dom_1.span({}, value == null ? '' : '' + value);\n        switch (font_style) {\n        case 'bold':\n            text.style.fontWeight = 'bold';\n            break;\n        case 'italic':\n            text.style.fontStyle = 'italic';\n        }\n        if (text_align != null) {\n            text.style.textAlign = text_align;\n        }\n        if (text_color != null) {\n            text.style.color = text_color;\n        }\n        text = text.outerHTML;\n        return text;\n    };\n    return StringFormatter;\n}(exports.CellFormatter);\nexports.StringFormatter = StringFormatter;\n;\nStringFormatter.prototype.type = 'StringFormatter';\nStringFormatter.define({\n    font_style: [\n        p.FontStyle,\n        'normal'\n    ],\n    text_align: [\n        p.TextAlign,\n        'left'\n    ],\n    text_color: [p.Color]\n});\nvar NumberFormatter = function (_super) {\n    tslib_1.__extends(NumberFormatter, _super);\n    function NumberFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NumberFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var format, language, rounding;\n        format = this.format;\n        language = this.language;\n        rounding = function () {\n            switch (this.rounding) {\n            case 'round':\n            case 'nearest':\n                return Math.round;\n            case 'floor':\n            case 'rounddown':\n                return Math.floor;\n            case 'ceil':\n            case 'roundup':\n                return Math.ceil;\n            }\n        }.call(this);\n        value = Numbro.format(value, format, language, rounding);\n        return _super.prototype.doFormat.call(this, row, cell, value, columnDef, dataContext);\n    };\n    return NumberFormatter;\n}(StringFormatter);\nexports.NumberFormatter = NumberFormatter;\n;\nNumberFormatter.prototype.type = 'NumberFormatter';\nNumberFormatter.define({\n    format: [\n        p.String,\n        '0,0'    // TODO (bev)\n    ],\n    language: [\n        p.String,\n        'en'    // TODO (bev)\n    ],\n    rounding: [\n        p.String,\n        'round'    // TODO (bev)\n    ]\n});\nvar BooleanFormatter = function (_super) {\n    tslib_1.__extends(BooleanFormatter, _super);\n    function BooleanFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BooleanFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        if (!!value) {\n            return dom_1.i({ class: this.icon }).outerHTML;\n        } else {\n            return '';\n        }\n    };\n    return BooleanFormatter;\n}(exports.CellFormatter);\nexports.BooleanFormatter = BooleanFormatter;\n;\nBooleanFormatter.prototype.type = 'BooleanFormatter';\nBooleanFormatter.define({\n    icon: [\n        p.String,\n        'check'\n    ]\n});\nvar DateFormatter = function (_super) {\n    tslib_1.__extends(DateFormatter, _super);\n    function DateFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DateFormatter.prototype.getFormat = function () {\n        var fmt;\n        // using definitions provided here: https://api.jqueryui.com/datepicker/\n        // except not implementing TICKS\n        fmt = function () {\n            switch (this.format) {\n            case 'ATOM':\n            case 'W3C':\n            case 'RFC-3339':\n            case 'ISO-8601':\n                return '%Y-%m-%d';\n            case 'COOKIE':\n                return '%a, %d %b %Y';\n            case 'RFC-850':\n                return '%A, %d-%b-%y';\n            case 'RFC-1123':\n            case 'RFC-2822':\n                return '%a, %e %b %Y';\n            case 'RSS':\n            case 'RFC-822':\n            case 'RFC-1036':\n                return '%a, %e %b %y';\n            case 'TIMESTAMP':\n                return null;\n            default:\n                return '__CUSTOM__';\n            }\n        }.call(this);\n        if (fmt === '__CUSTOM__') {\n            return this.format;\n        } else {\n            return fmt;\n        }\n    };\n    DateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var date;\n        value = types_1.isString(value) ? parseInt(value, 10) : value;\n        date = tz(value, this.getFormat());\n        return _super.prototype.doFormat.call(this, row, cell, date, columnDef, dataContext);\n    };\n    return DateFormatter;\n}(exports.CellFormatter);\nexports.DateFormatter = DateFormatter;\n;\nDateFormatter.prototype.type = 'DateFormatter';\nDateFormatter.define({\n    format: [\n        p.String,\n        'ISO-8601'\n    ]\n});\nvar HTMLTemplateFormatter = function (_super) {\n    tslib_1.__extends(HTMLTemplateFormatter, _super);\n    function HTMLTemplateFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HTMLTemplateFormatter.prototype.doFormat = function (row, cell, value, columnDef, dataContext) {\n        var compiled_template, template;\n        template = this.template;\n        if (value === null) {\n            return '';\n        } else {\n            dataContext = object_1.extend({}, dataContext, { value: value });\n            compiled_template = compile_template(template);\n            return compiled_template(dataContext);\n        }\n    };\n    return HTMLTemplateFormatter;\n}(exports.CellFormatter);\nexports.HTMLTemplateFormatter = HTMLTemplateFormatter;\n;\nHTMLTemplateFormatter.prototype.type = 'HTMLTemplateFormatter';\nHTMLTemplateFormatter.define({\n    template: [\n        p.String,\n        '<%= value %>'\n    ]\n});    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar slickgrid_1 = require(419    /* slickgrid */);\nvar slick_rowselectionmodel_1 = require(417    /* slickgrid/plugins/slick.rowselectionmodel */);\nvar slick_checkboxselectcolumn_1 = require(416    /* slickgrid/plugins/slick.checkboxselectcolumn */);\nvar hittest = require(9    /* core/hittest */);\nvar p = require(15    /* core/properties */);\nvar string_1 = require(37    /* core/util/string */);\nvar array_1 = require(22    /* core/util/array */);\nvar logging_1 = require(14    /* core/logging */);\nvar table_widget_1 = require(411    /* ./table_widget */);\nvar widget_1 = require(412    /* ../widget */);\nexports.DTINDEX_NAME = '__bkdt_internal_index__';\nexports.DataProvider = function () {\n    function DataProvider(source, view) {\n        this.source = source;\n        this.view = view;\n        if (exports.DTINDEX_NAME in this.source.data) {\n            throw new Error('special name ' + exports.DTINDEX_NAME + ' cannot be used as a data table column');\n        }\n        this.index = this.view.indices;\n    }\n    DataProvider.prototype.getLength = function () {\n        return this.index.length;\n    };\n    DataProvider.prototype.getItem = function (offset) {\n        var field, item, j, len, ref;\n        item = {};\n        ref = Object.keys(this.source.data);\n        for (j = 0, len = ref.length; j < len; j++) {\n            field = ref[j];\n            item[field] = this.source.data[field][this.index[offset]];\n        }\n        item[exports.DTINDEX_NAME] = this.index[offset];\n        return item;\n    };\n    DataProvider.prototype.setItem = function (offset, item) {\n        var field, value;\n        for (field in item) {\n            value = item[field];\n            // internal index is maintained independently, ignore\n            if (field !== exports.DTINDEX_NAME) {\n                this.source.data[field][this.index[offset]] = value;\n            }\n        }\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getField = function (offset, field) {\n        if (field === exports.DTINDEX_NAME) {\n            return this.index[offset];\n        }\n        return this.source.data[field][this.index[offset]];\n    };\n    DataProvider.prototype.setField = function (offset, field, value) {\n        // field assumed never to be internal index name (ctor would throw)\n        this.source.data[field][this.index[offset]] = value;\n        this._update_source_inplace();\n        return null;\n    };\n    DataProvider.prototype.getItemMetadata = function (index) {\n        return null;\n    };\n    DataProvider.prototype.getRecords = function () {\n        var i;\n        return function () {\n            var j, ref, results;\n            results = [];\n            for (i = j = 0, ref = this.getLength(); 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n                results.push(this.getItem(i));\n            }\n            return results;\n        }.call(this);\n    };\n    DataProvider.prototype.sort = function (columns) {\n        var cols, column, old_index, records;\n        cols = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = columns.length; j < len; j++) {\n                column = columns[j];\n                results.push([\n                    column.sortCol.field,\n                    column.sortAsc ? 1 : -1\n                ]);\n            }\n            return results;\n        }();\n        if (cols.length === 0) {\n            cols = [[\n                    exports.DTINDEX_NAME,\n                    1\n                ]];\n        }\n        records = this.getRecords();\n        old_index = this.index.slice();\n        // TODO (bev) this sort is unstable, which is not great\n        return this.index.sort(function (i1, i2) {\n            var field, j, len, result, sign, value1, value2;\n            for (j = 0, len = cols.length; j < len; j++) {\n                _a = cols[j], field = _a[0], sign = _a[1];\n                value1 = records[old_index.indexOf(i1)][field];\n                value2 = records[old_index.indexOf(i2)][field];\n                result = value1 === value2 ? 0 : value1 > value2 ? sign : -sign;\n                if (result !== 0) {\n                    return result;\n                }\n            }\n            return 0;\n            var _a;\n        });\n    };\n    DataProvider.prototype._update_source_inplace = function () {\n        this.source.properties.data.change.emit(this, this.source.attributes['data']);\n    };\n    return DataProvider;\n}();\nvar DataTableView = function (_super) {\n    tslib_1.__extends(DataTableView, _super);\n    function DataTableView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataTableView.prototype.initialize = function (options) {\n        _super.prototype.initialize.call(this, options);\n        return this.in_selection_update = false;\n    };\n    DataTableView.prototype.connect_signals = function () {\n        var _this = this;\n        _super.prototype.connect_signals.call(this);\n        this.connect(this.model.change, function () {\n            return _this.render();\n        });\n        this.connect(this.model.source.properties.data.change, function () {\n            return _this.updateGrid();\n        });\n        this.connect(this.model.source.streaming, function () {\n            return _this.updateGrid();\n        });\n        this.connect(this.model.source.patching, function () {\n            return _this.updateGrid();\n        });\n        return this.connect(this.model.source.change, function () {\n            return _this.updateSelection();\n        });\n    };\n    DataTableView.prototype.updateGrid = function () {\n        // TODO (bev) This is to enure that CDSView indices are properly computed\n        // before passing to the DataProvider. This will result in extra calls to\n        // compute_indices. This \"over execution\" will be addressed in a more\n        // general look at events\n        this.model.view.compute_indices();\n        this.data.constructor(this.model.source, this.model.view);\n        this.grid.invalidate();\n        this.grid.render();\n        // This is only needed to call @_tell_document_about_change()\n        this.model.source.data = this.model.source.data;\n        return this.model.source.change.emit();\n    };\n    DataTableView.prototype.updateSelection = function () {\n        var cur_grid_range, min_index, permuted_indices, selected, selected_indices, x;\n        if (this.in_selection_update) {\n            return;\n        }\n        selected = this.model.source.selected;\n        selected_indices = selected['1d'].indices;\n        permuted_indices = function () {\n            var j, len, results;\n            results = [];\n            for (j = 0, len = selected_indices.length; j < len; j++) {\n                x = selected_indices[j];\n                results.push(this.data.index.indexOf(x));\n            }\n            return results;\n        }.call(this);\n        this.in_selection_update = true;\n        this.grid.setSelectedRows(permuted_indices);\n        this.in_selection_update = false;\n        // If the selection is not in the current slickgrid viewport, scroll the\n        // datatable to start at the row before the first selected row, so that\n        // the selection is immediately brought into view. We don't scroll when\n        // the selection is already in the viewport so that selecting from the\n        // datatable itself does not re-scroll.\n        cur_grid_range = this.grid.getViewport();\n        if (this.model.scroll_to_selection && !array_1.any(permuted_indices, function (i) {\n                return cur_grid_range.top <= i && i <= cur_grid_range.bottom;\n            })) {\n            min_index = Math.max(0, Math.min.apply(null, permuted_indices) - 1);\n            return this.grid.scrollRowToTop(min_index);\n        }\n    };\n    DataTableView.prototype.newIndexColumn = function () {\n        return {\n            id: string_1.uniqueId(),\n            name: '#',\n            field: exports.DTINDEX_NAME,\n            width: 40,\n            behavior: 'select',\n            cannotTriggerInsert: true,\n            resizable: false,\n            selectable: false,\n            sortable: true,\n            cssClass: 'bk-cell-index'\n        };\n    };\n    DataTableView.prototype.render = function () {\n        var _this = this;\n        var checkboxSelector, column, columns, options, ref, reorderable;\n        columns = function () {\n            var j, len, ref, results;\n            ref = this.model.columns;\n            results = [];\n            for (j = 0, len = ref.length; j < len; j++) {\n                column = ref[j];\n                results.push(column.toColumn());\n            }\n            return results;\n        }.call(this);\n        if (this.model.selectable === 'checkbox') {\n            checkboxSelector = new slick_checkboxselectcolumn_1.CheckboxSelectColumn({ cssClass: 'bk-cell-select' });\n            columns.unshift(checkboxSelector.getColumnDefinition());\n        }\n        if (this.model.row_headers) {\n            columns.unshift(this.newIndexColumn());\n        }\n        reorderable = this.model.reorderable;\n        if (reorderable && (typeof $ !== 'undefined' && $ !== null ? (ref = $.fn) != null ? ref.sortable : void 0 : void 0) == null) {\n            if (this._warned_not_reorderable == null) {\n                logging_1.logger.warn('jquery-ui is required to enable DataTable.reorderable');\n                this._warned_not_reorderable = true;\n            }\n            reorderable = false;\n        }\n        options = {\n            enableCellNavigation: this.model.selectable !== false,\n            enableColumnReorder: reorderable,\n            forceFitColumns: this.model.fit_columns,\n            autoHeight: this.model.height === 'auto',\n            multiColumnSort: this.model.sortable,\n            editable: this.model.editable,\n            autoEdit: false\n        };\n        if (this.model.width != null) {\n            this.el.style.width = this.model.width + 'px';\n        } else {\n            this.el.style.width = this.model.default_width + 'px';\n        }\n        if (this.model.height != null && this.model.height !== 'auto') {\n            this.el.style.height = this.model.height + 'px';\n        }\n        this.data = new exports.DataProvider(this.model.source, this.model.view);\n        this.grid = new slickgrid_1.Grid(this.el, this.data, columns, options);\n        this.grid.onSort.subscribe(function (event, args) {\n            columns = args.sortCols;\n            _this.data.sort(columns);\n            _this.grid.invalidate();\n            _this.updateSelection();\n            return _this.grid.render();\n        });\n        if (this.model.selectable !== false) {\n            this.grid.setSelectionModel(new slick_rowselectionmodel_1.RowSelectionModel({ selectActiveRow: checkboxSelector == null }));\n            if (checkboxSelector != null) {\n                this.grid.registerPlugin(checkboxSelector);\n            }\n            this.grid.onSelectedRowsChanged.subscribe(function (event, args) {\n                var i, selected;\n                if (_this.in_selection_update) {\n                    return;\n                }\n                selected = hittest.create_hit_test_result();\n                selected['1d'].indices = function () {\n                    var j, len, ref1, results;\n                    ref1 = args.rows;\n                    results = [];\n                    for (j = 0, len = ref1.length; j < len; j++) {\n                        i = ref1[j];\n                        results.push(this.data.index[i]);\n                    }\n                    return results;\n                }.call(_this);\n                return _this.model.source.selected = selected;\n            });\n            this.updateSelection();\n        }\n        return this;\n    };\n    return DataTableView;\n}(widget_1.WidgetView);\nexports.DataTableView = DataTableView;\n;\nDataTableView.prototype.className = 'bk-data-table';\nvar DataTable = function (_super) {\n    tslib_1.__extends(DataTable, _super);\n    function DataTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return DataTable;\n}(table_widget_1.TableWidget);\nexports.DataTable = DataTable;\n;\nDataTable.prototype.type = 'DataTable';\nDataTable.prototype.default_view = DataTableView;\nDataTable.define({\n    columns: [\n        p.Array,\n        []\n    ],\n    fit_columns: [\n        p.Bool,\n        true\n    ],\n    sortable: [\n        p.Bool,\n        true\n    ],\n    reorderable: [\n        p.Bool,\n        true\n    ],\n    editable: [\n        p.Bool,\n        false\n    ],\n    selectable: [\n        p.Bool,\n        true\n    ],\n    row_headers: [\n        p.Bool,\n        true\n    ],\n    scroll_to_selection: [\n        p.Bool,\n        true\n    ]\n});\nDataTable.override({ height: 400 });\nDataTable.internal({\n    default_width: [\n        p.Number,\n        600\n    ]\n});    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\ntslib_1.__exportStar(require(405    /* ./cell_editors */), exports);\ntslib_1.__exportStar(require(406    /* ./cell_formatters */), exports);\nvar data_table_1 = require(407    /* ./data_table */);\nexports.DataTable = data_table_1.DataTable;\nvar table_column_1 = require(410    /* ./table_column */);\nexports.TableColumn = table_column_1.TableColumn;\nvar table_widget_1 = require(411    /* ./table_widget */);\nexports.TableWidget = table_widget_1.TableWidget;    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar Tables = require(408    /* ./index */);\nexports.Tables = Tables;\nvar base_1 = require(0    /* ../../../base */);\nbase_1.register_models(Tables);    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar cell_formatters_1 = require(406    /* ./cell_formatters */);\nvar cell_editors_1 = require(405    /* ./cell_editors */);\nvar p = require(15    /* core/properties */);\nvar string_1 = require(37    /* core/util/string */);\nvar model_1 = require(50    /* ../../../model */);\nvar TableColumn = function (_super) {\n    tslib_1.__extends(TableColumn, _super);\n    function TableColumn() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TableColumn.prototype.toColumn = function () {\n        var ref;\n        return {\n            id: string_1.uniqueId(),\n            field: this.field,\n            name: this.title,\n            width: this.width,\n            formatter: (ref = this.formatter) != null ? ref.doFormat.bind(this.formatter) : void 0,\n            editor: this.editor.default_view,\n            sortable: this.sortable,\n            defaultSortAsc: this.default_sort === 'ascending'\n        };\n    };\n    return TableColumn;\n}(model_1.Model);\nexports.TableColumn = TableColumn;\n;\nTableColumn.prototype.type = 'TableColumn';\nTableColumn.prototype.default_view = null;\nTableColumn.define({\n    field: [p.String],\n    title: [p.String],\n    width: [\n        p.Number,\n        300\n    ],\n    formatter: [\n        p.Instance,\n        function () {\n            return new cell_formatters_1.StringFormatter();\n        }\n    ],\n    editor: [\n        p.Instance,\n        function () {\n            return new cell_editors_1.StringEditor();\n        }\n    ],\n    sortable: [\n        p.Bool,\n        true\n    ],\n    default_sort: [\n        p.String,\n        'ascending'\n    ]\n});    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar widget_1 = require(412    /* ../widget */);\nvar cds_view_1 = require(172    /* ../../sources/cds_view */);\nvar p = require(15    /* core/properties */);\nvar TableWidget = function (_super) {\n    tslib_1.__extends(TableWidget, _super);\n    function TableWidget() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TableWidget.prototype.initialize = function (options) {\n        _super.prototype.initialize.call(this, options);\n        if (this.view.source == null) {\n            this.view.source = this.source;\n            return this.view.compute_indices();\n        }\n    };\n    return TableWidget;\n}(widget_1.Widget);\nexports.TableWidget = TableWidget;\n;\nTableWidget.prototype.type = 'TableWidget';\nTableWidget.define({\n    source: [p.Instance],\n    view: [\n        p.Instance,\n        function () {\n            return new cds_view_1.CDSView();\n        }\n    ]\n});    \n","'use strict';\nObject.defineProperty(exports, '__esModule', { value: true });\nvar tslib_1 = require(364    /* tslib */);\nvar layout_dom_1 = require(139    /* ../layouts/layout_dom */);\nvar WidgetView = function (_super) {\n    tslib_1.__extends(WidgetView, _super);\n    function WidgetView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WidgetView.prototype.render = function () {\n        this._render_classes();\n        // XXX: because no super()\n        // LayoutDOMView sets up lots of helpful things, but\n        // it's render method is not suitable for widgets - who\n        // should provide their own.\n        if (this.model.height != null) {\n            this.el.style.height = this.model.height + 'px';\n        }\n        if (this.model.width != null) {\n            return this.el.style.width = this.model.width + 'px';\n        }\n    };\n    return WidgetView;\n}(layout_dom_1.LayoutDOMView);\nexports.WidgetView = WidgetView;\n;\nWidgetView.prototype.className = 'bk-widget';\nvar Widget = function (_super) {\n    tslib_1.__extends(Widget, _super);\n    function Widget() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Widget;\n}(layout_dom_1.LayoutDOM);\nexports.Widget = Widget;\n;\nWidget.prototype.type = 'Widget';\nWidget.prototype.default_view = WidgetView;    \n","/*!\n * jQuery JavaScript Library v3.2.1\n * https://jquery.com/\n *\n * Includes Sizzle.js\n * https://sizzlejs.com/\n *\n * Copyright JS Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2017-03-20T18:59Z\n */\n(function (global, factory) {\n    'use strict';\n    if (typeof module === 'object' && typeof module.exports === 'object') {\n        // For CommonJS and CommonJS-like environments where a proper `window`\n        // is present, execute the factory and get jQuery.\n        // For environments that do not have a `window` with a `document`\n        // (such as Node.js), expose a factory as module.exports.\n        // This accentuates the need for the creation of a real `window`.\n        // e.g. var jQuery = require(\"jquery\")(window);\n        // See ticket #14549 for more info.\n        module.exports = global.document ? factory(global, true) : function (w) {\n            if (!w.document) {\n                throw new Error('jQuery requires a window with a document');\n            }\n            return factory(w);\n        };\n    } else {\n        factory(global);\n    }    // Pass this if window is not defined yet\n}(typeof window !== 'undefined' ? window : this, function (window, noGlobal) {\n    // Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\n    // throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\n    // arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\n    // enough that all such attempts are guarded in a try block.\n    'use strict';\n    var arr = [];\n    var document = window.document;\n    var getProto = Object.getPrototypeOf;\n    var slice = arr.slice;\n    var concat = arr.concat;\n    var push = arr.push;\n    var indexOf = arr.indexOf;\n    var class2type = {};\n    var toString = class2type.toString;\n    var hasOwn = class2type.hasOwnProperty;\n    var fnToString = hasOwn.toString;\n    var ObjectFunctionString = fnToString.call(Object);\n    var support = {};\n    function DOMEval(code, doc) {\n        doc = doc || document;\n        var script = doc.createElement('script');\n        script.text = code;\n        doc.head.appendChild(script).parentNode.removeChild(script);\n    }\n    /* global Symbol */\n    // Defining this global in .eslintrc.json would create a danger of using the global\n    // unguarded in another place, it seems safer to define global only for this module\n    var version = '3.2.1',\n        // Define a local copy of jQuery\n        jQuery = function (selector, context) {\n            // The jQuery object is actually just the init constructor 'enhanced'\n            // Need init if jQuery is called (just allow error to be thrown if not included)\n            return new jQuery.fn.init(selector, context);\n        },\n        // Support: Android <=4.0 only\n        // Make sure we trim BOM and NBSP\n        rtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n        // Matches dashed string for camelizing\n        rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g,\n        // Used by jQuery.camelCase as callback to replace()\n        fcamelCase = function (all, letter) {\n            return letter.toUpperCase();\n        };\n    jQuery.fn = jQuery.prototype = {\n        // The current version of jQuery being used\n        jquery: version,\n        constructor: jQuery,\n        // The default length of a jQuery object is 0\n        length: 0,\n        toArray: function () {\n            return slice.call(this);\n        },\n        // Get the Nth element in the matched element set OR\n        // Get the whole matched element set as a clean array\n        get: function (num) {\n            // Return all the elements in a clean array\n            if (num == null) {\n                return slice.call(this);\n            }\n            // Return just the one element from the set\n            return num < 0 ? this[num + this.length] : this[num];\n        },\n        // Take an array of elements and push it onto the stack\n        // (returning the new matched element set)\n        pushStack: function (elems) {\n            // Build a new jQuery matched element set\n            var ret = jQuery.merge(this.constructor(), elems);\n            // Add the old object onto the stack (as a reference)\n            ret.prevObject = this;\n            // Return the newly-formed element set\n            return ret;\n        },\n        // Execute a callback for every element in the matched set.\n        each: function (callback) {\n            return jQuery.each(this, callback);\n        },\n        map: function (callback) {\n            return this.pushStack(jQuery.map(this, function (elem, i) {\n                return callback.call(elem, i, elem);\n            }));\n        },\n        slice: function () {\n            return this.pushStack(slice.apply(this, arguments));\n        },\n        first: function () {\n            return this.eq(0);\n        },\n        last: function () {\n            return this.eq(-1);\n        },\n        eq: function (i) {\n            var len = this.length, j = +i + (i < 0 ? len : 0);\n            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\n        },\n        end: function () {\n            return this.prevObject || this.constructor();\n        },\n        // For internal use only.\n        // Behaves like an Array's method, not like a jQuery method.\n        push: push,\n        sort: arr.sort,\n        splice: arr.splice\n    };\n    jQuery.extend = jQuery.fn.extend = function () {\n        var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = false;\n        // Handle a deep copy situation\n        if (typeof target === 'boolean') {\n            deep = target;\n            // Skip the boolean and the target\n            target = arguments[i] || {};\n            i++;\n        }\n        // Handle case when target is a string or something (possible in deep copy)\n        if (typeof target !== 'object' && !jQuery.isFunction(target)) {\n            target = {};\n        }\n        // Extend jQuery itself if only one argument is passed\n        if (i === length) {\n            target = this;\n            i--;\n        }\n        for (; i < length; i++) {\n            // Only deal with non-null/undefined values\n            if ((options = arguments[i]) != null) {\n                // Extend the base object\n                for (name in options) {\n                    src = target[name];\n                    copy = options[name];\n                    // Prevent never-ending loop\n                    if (target === copy) {\n                        continue;\n                    }\n                    // Recurse if we're merging plain objects or arrays\n                    if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy)))) {\n                        if (copyIsArray) {\n                            copyIsArray = false;\n                            clone = src && Array.isArray(src) ? src : [];\n                        } else {\n                            clone = src && jQuery.isPlainObject(src) ? src : {};\n                        }\n                        // Never move original objects, clone them\n                        target[name] = jQuery.extend(deep, clone, copy);    // Don't bring in undefined values\n                    } else if (copy !== undefined) {\n                        target[name] = copy;\n                    }\n                }\n            }\n        }\n        // Return the modified object\n        return target;\n    };\n    jQuery.extend({\n        // Unique for each copy of jQuery on the page\n        expando: 'jQuery' + (version + Math.random()).replace(/\\D/g, ''),\n        // Assume jQuery is ready without the ready module\n        isReady: true,\n        error: function (msg) {\n            throw new Error(msg);\n        },\n        noop: function () {\n        },\n        isFunction: function (obj) {\n            return jQuery.type(obj) === 'function';\n        },\n        isWindow: function (obj) {\n            return obj != null && obj === obj.window;\n        },\n        isNumeric: function (obj) {\n            // As of jQuery 3.0, isNumeric is limited to\n            // strings and numbers (primitives or objects)\n            // that can be coerced to finite numbers (gh-2662)\n            var type = jQuery.type(obj);\n            return (type === 'number' || type === 'string') && // parseFloat NaNs numeric-cast false positives (\"\")\n            // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n            // subtraction forces infinities to NaN\n            !isNaN(obj - parseFloat(obj));\n        },\n        isPlainObject: function (obj) {\n            var proto, Ctor;\n            // Detect obvious negatives\n            // Use toString instead of jQuery.type to catch host objects\n            if (!obj || toString.call(obj) !== '[object Object]') {\n                return false;\n            }\n            proto = getProto(obj);\n            // Objects with no prototype (e.g., `Object.create( null )`) are plain\n            if (!proto) {\n                return true;\n            }\n            // Objects with prototype are plain iff they were constructed by a global Object function\n            Ctor = hasOwn.call(proto, 'constructor') && proto.constructor;\n            return typeof Ctor === 'function' && fnToString.call(Ctor) === ObjectFunctionString;\n        },\n        isEmptyObject: function (obj) {\n            /* eslint-disable no-unused-vars */\n            // See https://github.com/eslint/eslint/issues/6125\n            var name;\n            for (name in obj) {\n                return false;\n            }\n            return true;\n        },\n        type: function (obj) {\n            if (obj == null) {\n                return obj + '';\n            }\n            // Support: Android <=2.3 only (functionish RegExp)\n            return typeof obj === 'object' || typeof obj === 'function' ? class2type[toString.call(obj)] || 'object' : typeof obj;\n        },\n        // Evaluates a script in a global context\n        globalEval: function (code) {\n            DOMEval(code);\n        },\n        // Convert dashed to camelCase; used by the css and data modules\n        // Support: IE <=9 - 11, Edge 12 - 13\n        // Microsoft forgot to hump their vendor prefix (#9572)\n        camelCase: function (string) {\n            return string.replace(rmsPrefix, 'ms-').replace(rdashAlpha, fcamelCase);\n        },\n        each: function (obj, callback) {\n            var length, i = 0;\n            if (isArrayLike(obj)) {\n                length = obj.length;\n                for (; i < length; i++) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            } else {\n                for (i in obj) {\n                    if (callback.call(obj[i], i, obj[i]) === false) {\n                        break;\n                    }\n                }\n            }\n            return obj;\n        },\n        // Support: Android <=4.0 only\n        trim: function (text) {\n            return text == null ? '' : (text + '').replace(rtrim, '');\n        },\n        // results is for internal usage only\n        makeArray: function (arr, results) {\n            var ret = results || [];\n            if (arr != null) {\n                if (isArrayLike(Object(arr))) {\n                    jQuery.merge(ret, typeof arr === 'string' ? [arr] : arr);\n                } else {\n                    push.call(ret, arr);\n                }\n            }\n            return ret;\n        },\n        inArray: function (elem, arr, i) {\n            return arr == null ? -1 : indexOf.call(arr, elem, i);\n        },\n        // Support: Android <=4.0 only, PhantomJS 1 only\n        // push.apply(_, arraylike) throws on ancient WebKit\n        merge: function (first, second) {\n            var len = +second.length, j = 0, i = first.length;\n            for (; j < len; j++) {\n                first[i++] = second[j];\n            }\n            first.length = i;\n            return first;\n        },\n        grep: function (elems, callback, invert) {\n            var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = !invert;\n            // Go through the array, only saving the items\n            // that pass the validator function\n            for (; i < length; i++) {\n                callbackInverse = !callback(elems[i], i);\n                if (callbackInverse !== callbackExpect) {\n                    matches.push(elems[i]);\n                }\n            }\n            return matches;\n        },\n        // arg is for internal usage only\n        map: function (elems, callback, arg) {\n            var length, value, i = 0, ret = [];\n            // Go through the array, translating each of the items to their new values\n            if (isArrayLike(elems)) {\n                length = elems.length;\n                for (; i < length; i++) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }    // Go through every key on the object,\n            } else {\n                for (i in elems) {\n                    value = callback(elems[i], i, arg);\n                    if (value != null) {\n                        ret.push(value);\n                    }\n                }\n            }\n            // Flatten any nested arrays\n            return concat.apply([], ret);\n        },\n        // A global GUID counter for objects\n        guid: 1,\n        // Bind a function to a context, optionally partially applying any\n        // arguments.\n        proxy: function (fn, context) {\n            var tmp, args, proxy;\n            if (typeof context === 'string') {\n                tmp = fn[context];\n                context = fn;\n                fn = tmp;\n            }\n            // Quick check to determine if target is callable, in the spec\n            // this throws a TypeError, but we will just return undefined.\n            if (!jQuery.isFunction(fn)) {\n                return undefined;\n            }\n            // Simulated bind\n            args = slice.call(arguments, 2);\n            proxy = function () {\n                return fn.apply(context || this, args.concat(slice.call(arguments)));\n            };\n            // Set the guid of unique handler to the same of original handler, so it can be removed\n            proxy.guid = fn.guid = fn.guid || jQuery.guid++;\n            return proxy;\n        },\n        now: Date.now,\n        // jQuery.support is not used in Core but other projects attach their\n        // properties to it so it needs to exist.\n        support: support\n    });\n    if (typeof Symbol === 'function') {\n        jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];\n    }\n    // Populate the class2type map\n    jQuery.each('Boolean Number String Function Array Date RegExp Object Error Symbol'.split(' '), function (i, name) {\n        class2type['[object ' + name + ']'] = name.toLowerCase();\n    });\n    function isArrayLike(obj) {\n        // Support: real iOS 8.2 only (not reproducible in simulator)\n        // `in` check used to prevent JIT error (gh-2145)\n        // hasOwn isn't used here due to false negatives\n        // regarding Nodelist length in IE\n        var length = !!obj && 'length' in obj && obj.length, type = jQuery.type(obj);\n        if (type === 'function' || jQuery.isWindow(obj)) {\n            return false;\n        }\n        return type === 'array' || length === 0 || typeof length === 'number' && length > 0 && length - 1 in obj;\n    }\n    var Sizzle = /*!\n * Sizzle CSS Selector Engine v2.3.3\n * https://sizzlejs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2016-08-08\n */\n    function (window) {\n        var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate,\n            // Local document vars\n            setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains,\n            // Instance-specific data\n            expando = 'sizzle' + 1 * new Date(), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = function (a, b) {\n                if (a === b) {\n                    hasDuplicate = true;\n                }\n                return 0;\n            },\n            // Instance methods\n            hasOwn = {}.hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice,\n            // Use a stripped-down indexOf as it's faster than native\n            // https://jsperf.com/thor-indexof-vs-for/5\n            indexOf = function (list, elem) {\n                var i = 0, len = list.length;\n                for (; i < len; i++) {\n                    if (list[i] === elem) {\n                        return i;\n                    }\n                }\n                return -1;\n            }, booleans = 'checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped',\n            // Regular expressions\n            // http://www.w3.org/TR/css3-selectors/#whitespace\n            whitespace = '[\\\\x20\\\\t\\\\r\\\\n\\\\f]',\n            // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n            identifier = '(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+',\n            // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n            attributes = '\\\\[' + whitespace + '*(' + identifier + ')(?:' + whitespace + // Operator (capture 2)\n            '*([*^$|!~]?=)' + whitespace + // \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n            '*(?:\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\"|(' + identifier + '))|)' + whitespace + '*\\\\]', pseudos = ':(' + identifier + ')(?:\\\\((' + // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n            // 1. quoted (capture 3; capture 4 or capture 5)\n            '(\\'((?:\\\\\\\\.|[^\\\\\\\\\\'])*)\\'|\"((?:\\\\\\\\.|[^\\\\\\\\\"])*)\")|' + // 2. simple (capture 6)\n            '((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|' + attributes + ')*)|' + // 3. anything else (capture 2)\n            '.*' + ')\\\\)|)',\n            // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n            rwhitespace = new RegExp(whitespace + '+', 'g'), rtrim = new RegExp('^' + whitespace + '+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)' + whitespace + '+$', 'g'), rcomma = new RegExp('^' + whitespace + '*,' + whitespace + '*'), rcombinators = new RegExp('^' + whitespace + '*([>+~]|' + whitespace + ')' + whitespace + '*'), rattributeQuotes = new RegExp('=' + whitespace + '*([^\\\\]\\'\"]*?)' + whitespace + '*\\\\]', 'g'), rpseudo = new RegExp(pseudos), ridentifier = new RegExp('^' + identifier + '$'), matchExpr = {\n                'ID': new RegExp('^#(' + identifier + ')'),\n                'CLASS': new RegExp('^\\\\.(' + identifier + ')'),\n                'TAG': new RegExp('^(' + identifier + '|[*])'),\n                'ATTR': new RegExp('^' + attributes),\n                'PSEUDO': new RegExp('^' + pseudos),\n                'CHILD': new RegExp('^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(' + whitespace + '*(even|odd|(([+-]|)(\\\\d*)n|)' + whitespace + '*(?:([+-]|)' + whitespace + '*(\\\\d+)|))' + whitespace + '*\\\\)|)', 'i'),\n                'bool': new RegExp('^(?:' + booleans + ')$', 'i'),\n                // For use in libraries implementing .is()\n                // We use this for POS matching in `select`\n                'needsContext': new RegExp('^' + whitespace + '*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(' + whitespace + '*((?:-\\\\d)?\\\\d*)' + whitespace + '*\\\\)|)(?=[^-]|$)', 'i')\n            }, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\\d$/i, rnative = /^[^{]+\\{\\s*\\[native \\w/,\n            // Easily-parseable/retrievable ID or TAG or CLASS selectors\n            rquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/, rsibling = /[+~]/,\n            // CSS escapes\n            // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n            runescape = new RegExp('\\\\\\\\([\\\\da-f]{1,6}' + whitespace + '?|(' + whitespace + ')|.)', 'ig'), funescape = function (_, escaped, escapedWhitespace) {\n                var high = '0x' + escaped - 65536;\n                // NaN means non-codepoint\n                // Support: Firefox<24\n                // Workaround erroneous numeric interpretation of +\"0x\"\n                return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n                String.fromCharCode(high + 65536) : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode(high >> 10 | 55296, high & 1023 | 56320);\n            },\n            // CSS string/identifier serialization\n            // https://drafts.csswg.org/cssom/#common-serializing-idioms\n            rcssescape = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g, fcssescape = function (ch, asCodePoint) {\n                if (asCodePoint) {\n                    // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\n                    if (ch === '\\0') {\n                        return '\\uFFFD';\n                    }\n                    // Control characters and (dependent upon position) numbers get escaped as code points\n                    return ch.slice(0, -1) + '\\\\' + ch.charCodeAt(ch.length - 1).toString(16) + ' ';\n                }\n                // Other potentially-special ASCII characters get backslash-escaped\n                return '\\\\' + ch;\n            },\n            // Used for iframes\n            // See setDocument()\n            // Removing the function wrapper causes a \"Permission Denied\"\n            // error in IE\n            unloadHandler = function () {\n                setDocument();\n            }, disabledAncestor = addCombinator(function (elem) {\n                return elem.disabled === true && ('form' in elem || 'label' in elem);\n            }, {\n                dir: 'parentNode',\n                next: 'legend'\n            });\n        // Optimize for push.apply( _, NodeList )\n        try {\n            push.apply(arr = slice.call(preferredDoc.childNodes), preferredDoc.childNodes);\n            // Support: Android<4.0\n            // Detect silently failing push.apply\n            arr[preferredDoc.childNodes.length].nodeType;\n        } catch (e) {\n            push = {\n                apply: arr.length ? // Leverage slice if possible\n                function (target, els) {\n                    push_native.apply(target, slice.call(els));\n                } : // Support: IE<9\n                // Otherwise append directly\n                function (target, els) {\n                    var j = target.length, i = 0;\n                    // Can't trust NodeList.length\n                    while (target[j++] = els[i++]) {\n                    }\n                    target.length = j - 1;\n                }\n            };\n        }\n        function Sizzle(selector, context, results, seed) {\n            var m, i, elem, nid, match, groups, newSelector, newContext = context && context.ownerDocument,\n                // nodeType defaults to 9, since context defaults to document\n                nodeType = context ? context.nodeType : 9;\n            results = results || [];\n            // Return early from calls with invalid selector or context\n            if (typeof selector !== 'string' || !selector || nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\n                return results;\n            }\n            // Try to shortcut find operations (as opposed to filters) in HTML documents\n            if (!seed) {\n                if ((context ? context.ownerDocument || context : preferredDoc) !== document) {\n                    setDocument(context);\n                }\n                context = context || document;\n                if (documentIsHTML) {\n                    // If the selector is sufficiently simple, try using a \"get*By*\" DOM method\n                    // (excepting DocumentFragment context, where the methods don't exist)\n                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\n                        // ID selector\n                        if (m = match[1]) {\n                            // Document context\n                            if (nodeType === 9) {\n                                if (elem = context.getElementById(m)) {\n                                    // Support: IE, Opera, Webkit\n                                    // TODO: identify versions\n                                    // getElementById can match elements by name instead of ID\n                                    if (elem.id === m) {\n                                        results.push(elem);\n                                        return results;\n                                    }\n                                } else {\n                                    return results;\n                                }    // Element context\n                            } else {\n                                // Support: IE, Opera, Webkit\n                                // TODO: identify versions\n                                // getElementById can match elements by name instead of ID\n                                if (newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && elem.id === m) {\n                                    results.push(elem);\n                                    return results;\n                                }\n                            }    // Type selector\n                        } else if (match[2]) {\n                            push.apply(results, context.getElementsByTagName(selector));\n                            return results;    // Class selector\n                        } else if ((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName) {\n                            push.apply(results, context.getElementsByClassName(m));\n                            return results;\n                        }\n                    }\n                    // Take advantage of querySelectorAll\n                    if (support.qsa && !compilerCache[selector + ' '] && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\n                        if (nodeType !== 1) {\n                            newContext = context;\n                            newSelector = selector;    // qSA looks outside Element context, which is not what we want\n                                                       // Thanks to Andrew Dupont for this workaround technique\n                                                       // Support: IE <=8\n                                                       // Exclude object elements\n                        } else if (context.nodeName.toLowerCase() !== 'object') {\n                            // Capture the context ID, setting it first if necessary\n                            if (nid = context.getAttribute('id')) {\n                                nid = nid.replace(rcssescape, fcssescape);\n                            } else {\n                                context.setAttribute('id', nid = expando);\n                            }\n                            // Prefix every selector in the list\n                            groups = tokenize(selector);\n                            i = groups.length;\n                            while (i--) {\n                                groups[i] = '#' + nid + ' ' + toSelector(groups[i]);\n                            }\n                            newSelector = groups.join(',');\n                            // Expand context for sibling selectors\n                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\n                        }\n                        if (newSelector) {\n                            try {\n                                push.apply(results, newContext.querySelectorAll(newSelector));\n                                return results;\n                            } catch (qsaError) {\n                            } finally {\n                                if (nid === expando) {\n                                    context.removeAttribute('id');\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            // All others\n            return select(selector.replace(rtrim, '$1'), context, results, seed);\n        }\n        /**\n * Create key-value caches of limited size\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\n        function createCache() {\n            var keys = [];\n            function cache(key, value) {\n                // Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n                if (keys.push(key + ' ') > Expr.cacheLength) {\n                    // Only keep the most recent entries\n                    delete cache[keys.shift()];\n                }\n                return cache[key + ' '] = value;\n            }\n            return cache;\n        }\n        /**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\n        function markFunction(fn) {\n            fn[expando] = true;\n            return fn;\n        }\n        /**\n * Support testing using an element\n * @param {Function} fn Passed the created element and returns a boolean result\n */\n        function assert(fn) {\n            var el = document.createElement('fieldset');\n            try {\n                return !!fn(el);\n            } catch (e) {\n                return false;\n            } finally {\n                // Remove from its parent by default\n                if (el.parentNode) {\n                    el.parentNode.removeChild(el);\n                }\n                // release memory in IE\n                el = null;\n            }\n        }\n        /**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\n        function addHandle(attrs, handler) {\n            var arr = attrs.split('|'), i = arr.length;\n            while (i--) {\n                Expr.attrHandle[arr[i]] = handler;\n            }\n        }\n        /**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\n        function siblingCheck(a, b) {\n            var cur = b && a, diff = cur && a.nodeType === 1 && b.nodeType === 1 && a.sourceIndex - b.sourceIndex;\n            // Use IE sourceIndex if available on both nodes\n            if (diff) {\n                return diff;\n            }\n            // Check if b follows a\n            if (cur) {\n                while (cur = cur.nextSibling) {\n                    if (cur === b) {\n                        return -1;\n                    }\n                }\n            }\n            return a ? 1 : -1;\n        }\n        /**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\n        function createInputPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return name === 'input' && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\n        function createButtonPseudo(type) {\n            return function (elem) {\n                var name = elem.nodeName.toLowerCase();\n                return (name === 'input' || name === 'button') && elem.type === type;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for :enabled/:disabled\n * @param {Boolean} disabled true for :disabled; false for :enabled\n */\n        function createDisabledPseudo(disabled) {\n            // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\n            return function (elem) {\n                // Only certain elements can match :enabled or :disabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\n                // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\n                if ('form' in elem) {\n                    // Check for inherited disabledness on relevant non-disabled elements:\n                    // * listed form-associated elements in a disabled fieldset\n                    //   https://html.spec.whatwg.org/multipage/forms.html#category-listed\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\n                    // * option elements in a disabled optgroup\n                    //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\n                    // All such elements have a \"form\" property.\n                    if (elem.parentNode && elem.disabled === false) {\n                        // Option elements defer to a parent optgroup if present\n                        if ('label' in elem) {\n                            if ('label' in elem.parentNode) {\n                                return elem.parentNode.disabled === disabled;\n                            } else {\n                                return elem.disabled === disabled;\n                            }\n                        }\n                        // Support: IE 6 - 11\n                        // Use the isDisabled shortcut property to check for disabled fieldset ancestors\n                        return elem.isDisabled === disabled || // Where there is no isDisabled, check manually\n                        /* jshint -W018 */\n                        elem.isDisabled !== !disabled && disabledAncestor(elem) === disabled;\n                    }\n                    return elem.disabled === disabled;    // Try to winnow out elements that can't be disabled before trusting the disabled property.\n                                                          // Some victims get caught in our net (label, legend, menu, track), but it shouldn't\n                                                          // even exist on them, let alone have a boolean value.\n                } else if ('label' in elem) {\n                    return elem.disabled === disabled;\n                }\n                // Remaining elements are neither :enabled nor :disabled\n                return false;\n            };\n        }\n        /**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\n        function createPositionalPseudo(fn) {\n            return markFunction(function (argument) {\n                argument = +argument;\n                return markFunction(function (seed, matches) {\n                    var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;\n                    // Match elements found at the specified indexes\n                    while (i--) {\n                        if (seed[j = matchIndexes[i]]) {\n                            seed[j] = !(matches[j] = seed[j]);\n                        }\n                    }\n                });\n            });\n        }\n        /**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\n        function testContext(context) {\n            return context && typeof context.getElementsByTagName !== 'undefined' && context;\n        }\n        // Expose support vars for convenience\n        support = Sizzle.support = {};\n        /**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\n        isXML = Sizzle.isXML = function (elem) {\n            // documentElement is verified for cases where it doesn't yet exist\n            // (such as loading iframes in IE - #4833)\n            var documentElement = elem && (elem.ownerDocument || elem).documentElement;\n            return documentElement ? documentElement.nodeName !== 'HTML' : false;\n        };\n        /**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\n        setDocument = Sizzle.setDocument = function (node) {\n            var hasCompare, subWindow, doc = node ? node.ownerDocument || node : preferredDoc;\n            // Return early if doc is invalid or already selected\n            if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\n                return document;\n            }\n            // Update global variables\n            document = doc;\n            docElem = document.documentElement;\n            documentIsHTML = !isXML(document);\n            // Support: IE 9-11, Edge\n            // Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\n            if (preferredDoc !== document && (subWindow = document.defaultView) && subWindow.top !== subWindow) {\n                // Support: IE 11, Edge\n                if (subWindow.addEventListener) {\n                    subWindow.addEventListener('unload', unloadHandler, false);    // Support: IE 9 - 10 only\n                } else if (subWindow.attachEvent) {\n                    subWindow.attachEvent('onunload', unloadHandler);\n                }\n            }\n            /* Attributes\n\t---------------------------------------------------------------------- */\n            // Support: IE<8\n            // Verify that getAttribute really returns attributes and not properties\n            // (excepting IE8 booleans)\n            support.attributes = assert(function (el) {\n                el.className = 'i';\n                return !el.getAttribute('className');\n            });\n            /* getElement(s)By*\n\t---------------------------------------------------------------------- */\n            // Check if getElementsByTagName(\"*\") returns only elements\n            support.getElementsByTagName = assert(function (el) {\n                el.appendChild(document.createComment(''));\n                return !el.getElementsByTagName('*').length;\n            });\n            // Support: IE<9\n            support.getElementsByClassName = rnative.test(document.getElementsByClassName);\n            // Support: IE<10\n            // Check if getElementById returns elements by name\n            // The broken getElementById methods don't pick up programmatically-set names,\n            // so use a roundabout getElementsByName test\n            support.getById = assert(function (el) {\n                docElem.appendChild(el).id = expando;\n                return !document.getElementsByName || !document.getElementsByName(expando).length;\n            });\n            // ID filter and find\n            if (support.getById) {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        return elem.getAttribute('id') === attrId;\n                    };\n                };\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var elem = context.getElementById(id);\n                        return elem ? [elem] : [];\n                    }\n                };\n            } else {\n                Expr.filter['ID'] = function (id) {\n                    var attrId = id.replace(runescape, funescape);\n                    return function (elem) {\n                        var node = typeof elem.getAttributeNode !== 'undefined' && elem.getAttributeNode('id');\n                        return node && node.value === attrId;\n                    };\n                };\n                // Support: IE 6 - 7 only\n                // getElementById is not reliable as a find shortcut\n                Expr.find['ID'] = function (id, context) {\n                    if (typeof context.getElementById !== 'undefined' && documentIsHTML) {\n                        var node, i, elems, elem = context.getElementById(id);\n                        if (elem) {\n                            // Verify the id attribute\n                            node = elem.getAttributeNode('id');\n                            if (node && node.value === id) {\n                                return [elem];\n                            }\n                            // Fall back on getElementsByName\n                            elems = context.getElementsByName(id);\n                            i = 0;\n                            while (elem = elems[i++]) {\n                                node = elem.getAttributeNode('id');\n                                if (node && node.value === id) {\n                                    return [elem];\n                                }\n                            }\n                        }\n                        return [];\n                    }\n                };\n            }\n            // Tag\n            Expr.find['TAG'] = support.getElementsByTagName ? function (tag, context) {\n                if (typeof context.getElementsByTagName !== 'undefined') {\n                    return context.getElementsByTagName(tag);    // DocumentFragment nodes don't have gEBTN\n                } else if (support.qsa) {\n                    return context.querySelectorAll(tag);\n                }\n            } : function (tag, context) {\n                var elem, tmp = [], i = 0,\n                    // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\n                    results = context.getElementsByTagName(tag);\n                // Filter out possible comments\n                if (tag === '*') {\n                    while (elem = results[i++]) {\n                        if (elem.nodeType === 1) {\n                            tmp.push(elem);\n                        }\n                    }\n                    return tmp;\n                }\n                return results;\n            };\n            // Class\n            Expr.find['CLASS'] = support.getElementsByClassName && function (className, context) {\n                if (typeof context.getElementsByClassName !== 'undefined' && documentIsHTML) {\n                    return context.getElementsByClassName(className);\n                }\n            };\n            /* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n            // QSA and matchesSelector support\n            // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n            rbuggyMatches = [];\n            // qSa(:focus) reports false when true (Chrome 21)\n            // We allow this because of a bug in IE8/9 that throws an error\n            // whenever `document.activeElement` is accessed on an iframe\n            // So, we allow :focus to pass through QSA all the time to avoid the IE error\n            // See https://bugs.jquery.com/ticket/13378\n            rbuggyQSA = [];\n            if (support.qsa = rnative.test(document.querySelectorAll)) {\n                // Build QSA regex\n                // Regex strategy adopted from Diego Perini\n                assert(function (el) {\n                    // Select is set to empty string on purpose\n                    // This is to test IE's treatment of not explicitly\n                    // setting a boolean content attribute,\n                    // since its presence should be enough\n                    // https://bugs.jquery.com/ticket/12359\n                    docElem.appendChild(el).innerHTML = '<a id=\\'' + expando + '\\'></a>' + '<select id=\\'' + expando + '-\\r\\\\\\' msallowcapture=\\'\\'>' + '<option selected=\\'\\'></option></select>';\n                    // Support: IE8, Opera 11-12.16\n                    // Nothing should be selected when empty strings follow ^= or $= or *=\n                    // The test attribute must be unknown in Opera but \"safe\" for WinRT\n                    // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n                    if (el.querySelectorAll('[msallowcapture^=\\'\\']').length) {\n                        rbuggyQSA.push('[*^$]=' + whitespace + '*(?:\\'\\'|\"\")');\n                    }\n                    // Support: IE8\n                    // Boolean attributes and \"value\" are not treated correctly\n                    if (!el.querySelectorAll('[selected]').length) {\n                        rbuggyQSA.push('\\\\[' + whitespace + '*(?:value|' + booleans + ')');\n                    }\n                    // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\n                    if (!el.querySelectorAll('[id~=' + expando + '-]').length) {\n                        rbuggyQSA.push('~=');\n                    }\n                    // Webkit/Opera - :checked should return selected option elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    // IE8 throws error here and will not see later tests\n                    if (!el.querySelectorAll(':checked').length) {\n                        rbuggyQSA.push(':checked');\n                    }\n                    // Support: Safari 8+, iOS 8+\n                    // https://bugs.webkit.org/show_bug.cgi?id=136851\n                    // In-page `selector#id sibling-combinator selector` fails\n                    if (!el.querySelectorAll('a#' + expando + '+*').length) {\n                        rbuggyQSA.push('.#.+[+~]');\n                    }\n                });\n                assert(function (el) {\n                    el.innerHTML = '<a href=\\'\\' disabled=\\'disabled\\'></a>' + '<select disabled=\\'disabled\\'><option/></select>';\n                    // Support: Windows 8 Native Apps\n                    // The type and name attributes are restricted during .innerHTML assignment\n                    var input = document.createElement('input');\n                    input.setAttribute('type', 'hidden');\n                    el.appendChild(input).setAttribute('name', 'D');\n                    // Support: IE8\n                    // Enforce case-sensitivity of name attribute\n                    if (el.querySelectorAll('[name=d]').length) {\n                        rbuggyQSA.push('name' + whitespace + '*[*^$|!~]?=');\n                    }\n                    // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n                    // IE8 throws error here and will not see later tests\n                    if (el.querySelectorAll(':enabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Support: IE9-11+\n                    // IE's :disabled selector does not pick up the children of disabled fieldsets\n                    docElem.appendChild(el).disabled = true;\n                    if (el.querySelectorAll(':disabled').length !== 2) {\n                        rbuggyQSA.push(':enabled', ':disabled');\n                    }\n                    // Opera 10-11 does not throw on post-comma invalid pseudos\n                    el.querySelectorAll('*,:x');\n                    rbuggyQSA.push(',.*:');\n                });\n            }\n            if (support.matchesSelector = rnative.test(matches = docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) {\n                assert(function (el) {\n                    // Check to see if it's possible to do matchesSelector\n                    // on a disconnected node (IE 9)\n                    support.disconnectedMatch = matches.call(el, '*');\n                    // This should fail with an exception\n                    // Gecko does not error, returns false instead\n                    matches.call(el, '[s!=\\'\\']:x');\n                    rbuggyMatches.push('!=', pseudos);\n                });\n            }\n            rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join('|'));\n            rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join('|'));\n            /* Contains\n\t---------------------------------------------------------------------- */\n            hasCompare = rnative.test(docElem.compareDocumentPosition);\n            // Element contains another\n            // Purposefully self-exclusive\n            // As in, an element does not contain itself\n            contains = hasCompare || rnative.test(docElem.contains) ? function (a, b) {\n                var adown = a.nodeType === 9 ? a.documentElement : a, bup = b && b.parentNode;\n                return a === bup || !!(bup && bup.nodeType === 1 && (adown.contains ? adown.contains(bup) : a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16));\n            } : function (a, b) {\n                if (b) {\n                    while (b = b.parentNode) {\n                        if (b === a) {\n                            return true;\n                        }\n                    }\n                }\n                return false;\n            };\n            /* Sorting\n\t---------------------------------------------------------------------- */\n            // Document order sorting\n            sortOrder = hasCompare ? function (a, b) {\n                // Flag for duplicate removal\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                // Sort on method existence if only one input has compareDocumentPosition\n                var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n                if (compare) {\n                    return compare;\n                }\n                // Calculate position if both inputs belong to the same document\n                compare = (a.ownerDocument || a) === (b.ownerDocument || b) ? a.compareDocumentPosition(b) : // Otherwise we know they are disconnected\n                1;\n                // Disconnected nodes\n                if (compare & 1 || !support.sortDetached && b.compareDocumentPosition(a) === compare) {\n                    // Choose the first element that is related to our preferred document\n                    if (a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\n                        return -1;\n                    }\n                    if (b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\n                        return 1;\n                    }\n                    // Maintain original order\n                    return sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;\n                }\n                return compare & 4 ? -1 : 1;\n            } : function (a, b) {\n                // Exit early if the nodes are identical\n                if (a === b) {\n                    hasDuplicate = true;\n                    return 0;\n                }\n                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];\n                // Parentless nodes are either documents or disconnected\n                if (!aup || !bup) {\n                    return a === document ? -1 : b === document ? 1 : aup ? -1 : bup ? 1 : sortInput ? indexOf(sortInput, a) - indexOf(sortInput, b) : 0;    // If the nodes are siblings, we can do a quick check\n                } else if (aup === bup) {\n                    return siblingCheck(a, b);\n                }\n                // Otherwise we need full lists of their ancestors for comparison\n                cur = a;\n                while (cur = cur.parentNode) {\n                    ap.unshift(cur);\n                }\n                cur = b;\n                while (cur = cur.parentNode) {\n                    bp.unshift(cur);\n                }\n                // Walk down the tree looking for a discrepancy\n                while (ap[i] === bp[i]) {\n                    i++;\n                }\n                return i ? // Do a sibling check if the nodes have a common ancestor\n                siblingCheck(ap[i], bp[i]) : // Otherwise nodes in our document sort first\n                ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;\n            };\n            return document;\n        };\n        Sizzle.matches = function (expr, elements) {\n            return Sizzle(expr, null, null, elements);\n        };\n        Sizzle.matchesSelector = function (elem, expr) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            // Make sure that attribute selectors are quoted\n            expr = expr.replace(rattributeQuotes, '=\\'$1\\']');\n            if (support.matchesSelector && documentIsHTML && !compilerCache[expr + ' '] && (!rbuggyMatches || !rbuggyMatches.test(expr)) && (!rbuggyQSA || !rbuggyQSA.test(expr))) {\n                try {\n                    var ret = matches.call(elem, expr);\n                    // IE 9's matchesSelector returns false on disconnected nodes\n                    if (ret || support.disconnectedMatch || // As well, disconnected nodes are said to be in a document\n                        // fragment in IE 9\n                        elem.document && elem.document.nodeType !== 11) {\n                        return ret;\n                    }\n                } catch (e) {\n                }\n            }\n            return Sizzle(expr, document, null, [elem]).length > 0;\n        };\n        Sizzle.contains = function (context, elem) {\n            // Set document vars if needed\n            if ((context.ownerDocument || context) !== document) {\n                setDocument(context);\n            }\n            return contains(context, elem);\n        };\n        Sizzle.attr = function (elem, name) {\n            // Set document vars if needed\n            if ((elem.ownerDocument || elem) !== document) {\n                setDocument(elem);\n            }\n            var fn = Expr.attrHandle[name.toLowerCase()],\n                // Don't get fooled by Object.prototype properties (jQuery #13807)\n                val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ? fn(elem, name, !documentIsHTML) : undefined;\n            return val !== undefined ? val : support.attributes || !documentIsHTML ? elem.getAttribute(name) : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n        };\n        Sizzle.escape = function (sel) {\n            return (sel + '').replace(rcssescape, fcssescape);\n        };\n        Sizzle.error = function (msg) {\n            throw new Error('Syntax error, unrecognized expression: ' + msg);\n        };\n        /**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\n        Sizzle.uniqueSort = function (results) {\n            var elem, duplicates = [], j = 0, i = 0;\n            // Unless we *know* we can detect duplicates, assume their presence\n            hasDuplicate = !support.detectDuplicates;\n            sortInput = !support.sortStable && results.slice(0);\n            results.sort(sortOrder);\n            if (hasDuplicate) {\n                while (elem = results[i++]) {\n                    if (elem === results[i]) {\n                        j = duplicates.push(i);\n                    }\n                }\n                while (j--) {\n                    results.splice(duplicates[j], 1);\n                }\n            }\n            // Clear input after sorting to release objects\n            // See https://github.com/jquery/sizzle/pull/225\n            sortInput = null;\n            return results;\n        };\n        /**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\n        getText = Sizzle.getText = function (elem) {\n            var node, ret = '', i = 0, nodeType = elem.nodeType;\n            if (!nodeType) {\n                // If no nodeType, this is expected to be an array\n                while (node = elem[i++]) {\n                    // Do not traverse comment nodes\n                    ret += getText(node);\n                }\n            } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\n                // Use textContent for elements\n                // innerText usage removed for consistency of new lines (jQuery #11153)\n                if (typeof elem.textContent === 'string') {\n                    return elem.textContent;\n                } else {\n                    // Traverse its children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        ret += getText(elem);\n                    }\n                }\n            } else if (nodeType === 3 || nodeType === 4) {\n                return elem.nodeValue;\n            }\n            // Do not include comment or processing instruction nodes\n            return ret;\n        };\n        Expr = Sizzle.selectors = {\n            // Can be adjusted by the user\n            cacheLength: 50,\n            createPseudo: markFunction,\n            match: matchExpr,\n            attrHandle: {},\n            find: {},\n            relative: {\n                '>': {\n                    dir: 'parentNode',\n                    first: true\n                },\n                ' ': { dir: 'parentNode' },\n                '+': {\n                    dir: 'previousSibling',\n                    first: true\n                },\n                '~': { dir: 'previousSibling' }\n            },\n            preFilter: {\n                'ATTR': function (match) {\n                    match[1] = match[1].replace(runescape, funescape);\n                    // Move the given value to match[3] whether quoted or unquoted\n                    match[3] = (match[3] || match[4] || match[5] || '').replace(runescape, funescape);\n                    if (match[2] === '~=') {\n                        match[3] = ' ' + match[3] + ' ';\n                    }\n                    return match.slice(0, 4);\n                },\n                'CHILD': function (match) {\n                    /* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n                    match[1] = match[1].toLowerCase();\n                    if (match[1].slice(0, 3) === 'nth') {\n                        // nth-* requires argument\n                        if (!match[3]) {\n                            Sizzle.error(match[0]);\n                        }\n                        // numeric x and y parameters for Expr.filter.CHILD\n                        // remember that false/true cast respectively to 0/1\n                        match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * (match[3] === 'even' || match[3] === 'odd'));\n                        match[5] = +(match[7] + match[8] || match[3] === 'odd');    // other types prohibit arguments\n                    } else if (match[3]) {\n                        Sizzle.error(match[0]);\n                    }\n                    return match;\n                },\n                'PSEUDO': function (match) {\n                    var excess, unquoted = !match[6] && match[2];\n                    if (matchExpr['CHILD'].test(match[0])) {\n                        return null;\n                    }\n                    // Accept quoted arguments as-is\n                    if (match[3]) {\n                        match[2] = match[4] || match[5] || '';    // Strip excess characters from unquoted arguments\n                    } else if (unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = unquoted.indexOf(')', unquoted.length - excess) - unquoted.length)) {\n                        // excess is a negative index\n                        match[0] = match[0].slice(0, excess);\n                        match[2] = unquoted.slice(0, excess);\n                    }\n                    // Return only captures needed by the pseudo filter method (type and argument)\n                    return match.slice(0, 3);\n                }\n            },\n            filter: {\n                'TAG': function (nodeNameSelector) {\n                    var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\n                    return nodeNameSelector === '*' ? function () {\n                        return true;\n                    } : function (elem) {\n                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n                    };\n                },\n                'CLASS': function (className) {\n                    var pattern = classCache[className + ' '];\n                    return pattern || (pattern = new RegExp('(^|' + whitespace + ')' + className + '(' + whitespace + '|$)')) && classCache(className, function (elem) {\n                        return pattern.test(typeof elem.className === 'string' && elem.className || typeof elem.getAttribute !== 'undefined' && elem.getAttribute('class') || '');\n                    });\n                },\n                'ATTR': function (name, operator, check) {\n                    return function (elem) {\n                        var result = Sizzle.attr(elem, name);\n                        if (result == null) {\n                            return operator === '!=';\n                        }\n                        if (!operator) {\n                            return true;\n                        }\n                        result += '';\n                        return operator === '=' ? result === check : operator === '!=' ? result !== check : operator === '^=' ? check && result.indexOf(check) === 0 : operator === '*=' ? check && result.indexOf(check) > -1 : operator === '$=' ? check && result.slice(-check.length) === check : operator === '~=' ? (' ' + result.replace(rwhitespace, ' ') + ' ').indexOf(check) > -1 : operator === '|=' ? result === check || result.slice(0, check.length + 1) === check + '-' : false;\n                    };\n                },\n                'CHILD': function (type, what, argument, first, last) {\n                    var simple = type.slice(0, 3) !== 'nth', forward = type.slice(-4) !== 'last', ofType = what === 'of-type';\n                    return first === 1 && last === 0 ? // Shortcut for :nth-*(n)\n                    function (elem) {\n                        return !!elem.parentNode;\n                    } : function (elem, context, xml) {\n                        var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = simple !== forward ? 'nextSibling' : 'previousSibling', parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType, diff = false;\n                        if (parent) {\n                            // :(first|last|only)-(child|of-type)\n                            if (simple) {\n                                while (dir) {\n                                    node = elem;\n                                    while (node = node[dir]) {\n                                        if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\n                                            return false;\n                                        }\n                                    }\n                                    // Reverse direction for :only-* (if we haven't yet done so)\n                                    start = dir = type === 'only' && !start && 'nextSibling';\n                                }\n                                return true;\n                            }\n                            start = [forward ? parent.firstChild : parent.lastChild];\n                            // non-xml :nth-child(...) stores cache data on `parent`\n                            if (forward && useCache) {\n                                // Seek `elem` from a previously-cached index\n                                // ...in a gzip-friendly way\n                                node = parent;\n                                outerCache = node[expando] || (node[expando] = {});\n                                // Support: IE <9 only\n                                // Defend against cloned attroperties (jQuery gh-1709)\n                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                cache = uniqueCache[type] || [];\n                                nodeIndex = cache[0] === dirruns && cache[1];\n                                diff = nodeIndex && cache[2];\n                                node = nodeIndex && parent.childNodes[nodeIndex];\n                                while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                    // When found, cache indexes on `parent` and break\n                                    if (node.nodeType === 1 && ++diff && node === elem) {\n                                        uniqueCache[type] = [\n                                            dirruns,\n                                            nodeIndex,\n                                            diff\n                                        ];\n                                        break;\n                                    }\n                                }\n                            } else {\n                                // Use previously-cached element index if available\n                                if (useCache) {\n                                    // ...in a gzip-friendly way\n                                    node = elem;\n                                    outerCache = node[expando] || (node[expando] = {});\n                                    // Support: IE <9 only\n                                    // Defend against cloned attroperties (jQuery gh-1709)\n                                    uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                    cache = uniqueCache[type] || [];\n                                    nodeIndex = cache[0] === dirruns && cache[1];\n                                    diff = nodeIndex;\n                                }\n                                // xml :nth-child(...)\n                                // or :nth-last-child(...) or :nth(-last)?-of-type(...)\n                                if (diff === false) {\n                                    // Use the same loop as above to seek `elem` from the start\n                                    while (node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) {\n                                        if ((ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) && ++diff) {\n                                            // Cache the index of each encountered element\n                                            if (useCache) {\n                                                outerCache = node[expando] || (node[expando] = {});\n                                                // Support: IE <9 only\n                                                // Defend against cloned attroperties (jQuery gh-1709)\n                                                uniqueCache = outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {});\n                                                uniqueCache[type] = [\n                                                    dirruns,\n                                                    diff\n                                                ];\n                                            }\n                                            if (node === elem) {\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            // Incorporate the offset, then check against cycle size\n                            diff -= last;\n                            return diff === first || diff % first === 0 && diff / first >= 0;\n                        }\n                    };\n                },\n                'PSEUDO': function (pseudo, argument) {\n                    // pseudo-class names are case-insensitive\n                    // http://www.w3.org/TR/selectors/#pseudo-classes\n                    // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n                    // Remember that setFilters inherits from pseudos\n                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error('unsupported pseudo: ' + pseudo);\n                    // The user may use createPseudo to indicate that\n                    // arguments are needed to create the filter function\n                    // just as Sizzle does\n                    if (fn[expando]) {\n                        return fn(argument);\n                    }\n                    // But maintain support for old signatures\n                    if (fn.length > 1) {\n                        args = [\n                            pseudo,\n                            pseudo,\n                            '',\n                            argument\n                        ];\n                        return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function (seed, matches) {\n                            var idx, matched = fn(seed, argument), i = matched.length;\n                            while (i--) {\n                                idx = indexOf(seed, matched[i]);\n                                seed[idx] = !(matches[idx] = matched[i]);\n                            }\n                        }) : function (elem) {\n                            return fn(elem, 0, args);\n                        };\n                    }\n                    return fn;\n                }\n            },\n            pseudos: {\n                // Potentially complex pseudos\n                'not': markFunction(function (selector) {\n                    // Trim the selector passed to compile\n                    // to avoid treating leading and trailing\n                    // spaces as combinators\n                    var input = [], results = [], matcher = compile(selector.replace(rtrim, '$1'));\n                    return matcher[expando] ? markFunction(function (seed, matches, context, xml) {\n                        var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;\n                        // Match elements unmatched by `matcher`\n                        while (i--) {\n                            if (elem = unmatched[i]) {\n                                seed[i] = !(matches[i] = elem);\n                            }\n                        }\n                    }) : function (elem, context, xml) {\n                        input[0] = elem;\n                        matcher(input, null, xml, results);\n                        // Don't keep the element (issue #299)\n                        input[0] = null;\n                        return !results.pop();\n                    };\n                }),\n                'has': markFunction(function (selector) {\n                    return function (elem) {\n                        return Sizzle(selector, elem).length > 0;\n                    };\n                }),\n                'contains': markFunction(function (text) {\n                    text = text.replace(runescape, funescape);\n                    return function (elem) {\n                        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;\n                    };\n                }),\n                // \"Whether an element is represented by a :lang() selector\n                // is based solely on the element's language value\n                // being equal to the identifier C,\n                // or beginning with the identifier C immediately followed by \"-\".\n                // The matching of C against the element's language value is performed case-insensitively.\n                // The identifier C does not have to be a valid language name.\"\n                // http://www.w3.org/TR/selectors/#lang-pseudo\n                'lang': markFunction(function (lang) {\n                    // lang value must be a valid identifier\n                    if (!ridentifier.test(lang || '')) {\n                        Sizzle.error('unsupported lang: ' + lang);\n                    }\n                    lang = lang.replace(runescape, funescape).toLowerCase();\n                    return function (elem) {\n                        var elemLang;\n                        do {\n                            if (elemLang = documentIsHTML ? elem.lang : elem.getAttribute('xml:lang') || elem.getAttribute('lang')) {\n                                elemLang = elemLang.toLowerCase();\n                                return elemLang === lang || elemLang.indexOf(lang + '-') === 0;\n                            }\n                        } while ((elem = elem.parentNode) && elem.nodeType === 1);\n                        return false;\n                    };\n                }),\n                // Miscellaneous\n                'target': function (elem) {\n                    var hash = window.location && window.location.hash;\n                    return hash && hash.slice(1) === elem.id;\n                },\n                'root': function (elem) {\n                    return elem === docElem;\n                },\n                'focus': function (elem) {\n                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n                },\n                // Boolean properties\n                'enabled': createDisabledPseudo(false),\n                'disabled': createDisabledPseudo(true),\n                'checked': function (elem) {\n                    // In CSS3, :checked should return both checked and selected elements\n                    // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n                    var nodeName = elem.nodeName.toLowerCase();\n                    return nodeName === 'input' && !!elem.checked || nodeName === 'option' && !!elem.selected;\n                },\n                'selected': function (elem) {\n                    // Accessing this property makes selected-by-default\n                    // options in Safari work properly\n                    if (elem.parentNode) {\n                        elem.parentNode.selectedIndex;\n                    }\n                    return elem.selected === true;\n                },\n                // Contents\n                'empty': function (elem) {\n                    // http://www.w3.org/TR/selectors/#empty-pseudo\n                    // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n                    //   but not by others (comment: 8; processing instruction: 7; etc.)\n                    // nodeType < 6 works because attributes (2) do not appear as children\n                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\n                        if (elem.nodeType < 6) {\n                            return false;\n                        }\n                    }\n                    return true;\n                },\n                'parent': function (elem) {\n                    return !Expr.pseudos['empty'](elem);\n                },\n                // Element/input types\n                'header': function (elem) {\n                    return rheader.test(elem.nodeName);\n                },\n                'input': function (elem) {\n                    return rinputs.test(elem.nodeName);\n                },\n                'button': function (elem) {\n                    var name = elem.nodeName.toLowerCase();\n                    return name === 'input' && elem.type === 'button' || name === 'button';\n                },\n                'text': function (elem) {\n                    var attr;\n                    return elem.nodeName.toLowerCase() === 'input' && elem.type === 'text' && ((attr = elem.getAttribute('type')) == null || attr.toLowerCase() === 'text');\n                },\n                // Position-in-collection\n                'first': createPositionalPseudo(function () {\n                    return [0];\n                }),\n                'last': createPositionalPseudo(function (matchIndexes, length) {\n                    return [length - 1];\n                }),\n                'eq': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    return [argument < 0 ? argument + length : argument];\n                }),\n                'even': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 0;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'odd': createPositionalPseudo(function (matchIndexes, length) {\n                    var i = 1;\n                    for (; i < length; i += 2) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'lt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; --i >= 0;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                }),\n                'gt': createPositionalPseudo(function (matchIndexes, length, argument) {\n                    var i = argument < 0 ? argument + length : argument;\n                    for (; ++i < length;) {\n                        matchIndexes.push(i);\n                    }\n                    return matchIndexes;\n                })\n            }\n        };\n        Expr.pseudos['nth'] = Expr.pseudos['eq'];\n        // Add button/input type pseudos\n        for (i in {\n                radio: true,\n                checkbox: true,\n                file: true,\n                password: true,\n                image: true\n            }) {\n            Expr.pseudos[i] = createInputPseudo(i);\n        }\n        for (i in {\n                submit: true,\n                reset: true\n            }) {\n            Expr.pseudos[i] = createButtonPseudo(i);\n        }\n        // Easy API for creating new setFilters\n        function setFilters() {\n        }\n        setFilters.prototype = Expr.filters = Expr.pseudos;\n        Expr.setFilters = new setFilters();\n        tokenize = Sizzle.tokenize = function (selector, parseOnly) {\n            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + ' '];\n            if (cached) {\n                return parseOnly ? 0 : cached.slice(0);\n            }\n            soFar = selector;\n            groups = [];\n            preFilters = Expr.preFilter;\n            while (soFar) {\n                // Comma and first run\n                if (!matched || (match = rcomma.exec(soFar))) {\n                    if (match) {\n                        // Don't consume trailing commas as valid\n                        soFar = soFar.slice(match[0].length) || soFar;\n                    }\n                    groups.push(tokens = []);\n                }\n                matched = false;\n                // Combinators\n                if (match = rcombinators.exec(soFar)) {\n                    matched = match.shift();\n                    tokens.push({\n                        value: matched,\n                        // Cast descendant combinators to space\n                        type: match[0].replace(rtrim, ' ')\n                    });\n                    soFar = soFar.slice(matched.length);\n                }\n                // Filters\n                for (type in Expr.filter) {\n                    if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] || (match = preFilters[type](match)))) {\n                        matched = match.shift();\n                        tokens.push({\n                            value: matched,\n                            type: type,\n                            matches: match\n                        });\n                        soFar = soFar.slice(matched.length);\n                    }\n                }\n                if (!matched) {\n                    break;\n                }\n            }\n            // Return the length of the invalid excess\n            // if we're just parsing\n            // Otherwise, throw an error or return tokens\n            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : // Cache the tokens\n            tokenCache(selector, groups).slice(0);\n        };\n        function toSelector(tokens) {\n            var i = 0, len = tokens.length, selector = '';\n            for (; i < len; i++) {\n                selector += tokens[i].value;\n            }\n            return selector;\n        }\n        function addCombinator(matcher, combinator, base) {\n            var dir = combinator.dir, skip = combinator.next, key = skip || dir, checkNonElements = base && key === 'parentNode', doneName = done++;\n            return combinator.first ? // Check against closest ancestor/preceding element\n            function (elem, context, xml) {\n                while (elem = elem[dir]) {\n                    if (elem.nodeType === 1 || checkNonElements) {\n                        return matcher(elem, context, xml);\n                    }\n                }\n                return false;\n            } : // Check against all ancestor/preceding elements\n            function (elem, context, xml) {\n                var oldCache, uniqueCache, outerCache, newCache = [\n                        dirruns,\n                        doneName\n                    ];\n                // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\n                if (xml) {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            if (matcher(elem, context, xml)) {\n                                return true;\n                            }\n                        }\n                    }\n                } else {\n                    while (elem = elem[dir]) {\n                        if (elem.nodeType === 1 || checkNonElements) {\n                            outerCache = elem[expando] || (elem[expando] = {});\n                            // Support: IE <9 only\n                            // Defend against cloned attroperties (jQuery gh-1709)\n                            uniqueCache = outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {});\n                            if (skip && skip === elem.nodeName.toLowerCase()) {\n                                elem = elem[dir] || elem;\n                            } else if ((oldCache = uniqueCache[key]) && oldCache[0] === dirruns && oldCache[1] === doneName) {\n                                // Assign to newCache so results back-propagate to previous elements\n                                return newCache[2] = oldCache[2];\n                            } else {\n                                // Reuse newcache so results back-propagate to previous elements\n                                uniqueCache[key] = newCache;\n                                // A match means we're done; a fail means we have to keep checking\n                                if (newCache[2] = matcher(elem, context, xml)) {\n                                    return true;\n                                }\n                            }\n                        }\n                    }\n                }\n                return false;\n            };\n        }\n        function elementMatcher(matchers) {\n            return matchers.length > 1 ? function (elem, context, xml) {\n                var i = matchers.length;\n                while (i--) {\n                    if (!matchers[i](elem, context, xml)) {\n                        return false;\n                    }\n                }\n                return true;\n            } : matchers[0];\n        }\n        function multipleContexts(selector, contexts, results) {\n            var i = 0, len = contexts.length;\n            for (; i < len; i++) {\n                Sizzle(selector, contexts[i], results);\n            }\n            return results;\n        }\n        function condense(unmatched, map, filter, context, xml) {\n            var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = map != null;\n            for (; i < len; i++) {\n                if (elem = unmatched[i]) {\n                    if (!filter || filter(elem, context, xml)) {\n                        newUnmatched.push(elem);\n                        if (mapped) {\n                            map.push(i);\n                        }\n                    }\n                }\n            }\n            return newUnmatched;\n        }\n        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\n            if (postFilter && !postFilter[expando]) {\n                postFilter = setMatcher(postFilter);\n            }\n            if (postFinder && !postFinder[expando]) {\n                postFinder = setMatcher(postFinder, postSelector);\n            }\n            return markFunction(function (seed, results, context, xml) {\n                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length,\n                    // Get initial elements from seed or context\n                    elems = seed || multipleContexts(selector || '*', context.nodeType ? [context] : context, []),\n                    // Prefilter to get matcher input, preserving a map for seed-results synchronization\n                    matcherIn = preFilter && (seed || !selector) ? condense(elems, preMap, preFilter, context, xml) : elems, matcherOut = matcher ? // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n                    postFinder || (seed ? preFilter : preexisting || postFilter) ? // ...intermediate processing is necessary\n                    [] : // ...otherwise use results directly\n                    results : matcherIn;\n                // Find primary matches\n                if (matcher) {\n                    matcher(matcherIn, matcherOut, context, xml);\n                }\n                // Apply postFilter\n                if (postFilter) {\n                    temp = condense(matcherOut, postMap);\n                    postFilter(temp, [], context, xml);\n                    // Un-match failing elements by moving them back to matcherIn\n                    i = temp.length;\n                    while (i--) {\n                        if (elem = temp[i]) {\n                            matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\n                        }\n                    }\n                }\n                if (seed) {\n                    if (postFinder || preFilter) {\n                        if (postFinder) {\n                            // Get the final matcherOut by condensing this intermediate into postFinder contexts\n                            temp = [];\n                            i = matcherOut.length;\n                            while (i--) {\n                                if (elem = matcherOut[i]) {\n                                    // Restore matcherIn since elem is not yet a final match\n                                    temp.push(matcherIn[i] = elem);\n                                }\n                            }\n                            postFinder(null, matcherOut = [], temp, xml);\n                        }\n                        // Move matched elements from seed to results to keep them synchronized\n                        i = matcherOut.length;\n                        while (i--) {\n                            if ((elem = matcherOut[i]) && (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\n                                seed[temp] = !(results[temp] = elem);\n                            }\n                        }\n                    }    // Add elements to results, through postFinder if defined\n                } else {\n                    matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut);\n                    if (postFinder) {\n                        postFinder(null, results, matcherOut, xml);\n                    } else {\n                        push.apply(results, matcherOut);\n                    }\n                }\n            });\n        }\n        function matcherFromTokens(tokens) {\n            var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[' '], i = leadingRelative ? 1 : 0,\n                // The foundational matcher ensures that elements are reachable from top-level context(s)\n                matchContext = addCombinator(function (elem) {\n                    return elem === checkContext;\n                }, implicitRelative, true), matchAnyContext = addCombinator(function (elem) {\n                    return indexOf(checkContext, elem) > -1;\n                }, implicitRelative, true), matchers = [function (elem, context, xml) {\n                        var ret = !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));\n                        // Avoid hanging onto element (issue #299)\n                        checkContext = null;\n                        return ret;\n                    }];\n            for (; i < len; i++) {\n                if (matcher = Expr.relative[tokens[i].type]) {\n                    matchers = [addCombinator(elementMatcher(matchers), matcher)];\n                } else {\n                    matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\n                    // Return special upon seeing a positional matcher\n                    if (matcher[expando]) {\n                        // Find the next relative operator (if any) for proper handling\n                        j = ++i;\n                        for (; j < len; j++) {\n                            if (Expr.relative[tokens[j].type]) {\n                                break;\n                            }\n                        }\n                        return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n                        tokens.slice(0, i - 1).concat({ value: tokens[i - 2].type === ' ' ? '*' : '' })).replace(rtrim, '$1'), matcher, i < j && matcherFromTokens(tokens.slice(i, j)), j < len && matcherFromTokens(tokens = tokens.slice(j)), j < len && toSelector(tokens));\n                    }\n                    matchers.push(matcher);\n                }\n            }\n            return elementMatcher(matchers);\n        }\n        function matcherFromGroupMatchers(elementMatchers, setMatchers) {\n            var bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function (seed, context, xml, results, outermost) {\n                    var elem, j, matcher, matchedCount = 0, i = '0', unmatched = seed && [], setMatched = [], contextBackup = outermostContext,\n                        // We must always have either seed elements or outermost context\n                        elems = seed || byElement && Expr.find['TAG']('*', outermost),\n                        // Use integer dirruns iff this is the outermost matcher\n                        dirrunsUnique = dirruns += contextBackup == null ? 1 : Math.random() || 0.1, len = elems.length;\n                    if (outermost) {\n                        outermostContext = context === document || context || outermost;\n                    }\n                    // Add elements passing elementMatchers directly to results\n                    // Support: IE<9, Safari\n                    // Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n                    for (; i !== len && (elem = elems[i]) != null; i++) {\n                        if (byElement && elem) {\n                            j = 0;\n                            if (!context && elem.ownerDocument !== document) {\n                                setDocument(elem);\n                                xml = !documentIsHTML;\n                            }\n                            while (matcher = elementMatchers[j++]) {\n                                if (matcher(elem, context || document, xml)) {\n                                    results.push(elem);\n                                    break;\n                                }\n                            }\n                            if (outermost) {\n                                dirruns = dirrunsUnique;\n                            }\n                        }\n                        // Track unmatched elements for set filters\n                        if (bySet) {\n                            // They will have gone through all possible matchers\n                            if (elem = !matcher && elem) {\n                                matchedCount--;\n                            }\n                            // Lengthen the array for every element, matched or not\n                            if (seed) {\n                                unmatched.push(elem);\n                            }\n                        }\n                    }\n                    // `i` is now the count of elements visited above, and adding it to `matchedCount`\n                    // makes the latter nonnegative.\n                    matchedCount += i;\n                    // Apply set filters to unmatched elements\n                    // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\n                    // equals `i`), unless we didn't visit _any_ elements in the above loop because we have\n                    // no element matchers and no seed.\n                    // Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\n                    // case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\n                    // numerically zero.\n                    if (bySet && i !== matchedCount) {\n                        j = 0;\n                        while (matcher = setMatchers[j++]) {\n                            matcher(unmatched, setMatched, context, xml);\n                        }\n                        if (seed) {\n                            // Reintegrate element matches to eliminate the need for sorting\n                            if (matchedCount > 0) {\n                                while (i--) {\n                                    if (!(unmatched[i] || setMatched[i])) {\n                                        setMatched[i] = pop.call(results);\n                                    }\n                                }\n                            }\n                            // Discard index placeholder values to get only actual matches\n                            setMatched = condense(setMatched);\n                        }\n                        // Add matches to results\n                        push.apply(results, setMatched);\n                        // Seedless set matches succeeding multiple successful matchers stipulate sorting\n                        if (outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1) {\n                            Sizzle.uniqueSort(results);\n                        }\n                    }\n                    // Override manipulation of globals by nested matchers\n                    if (outermost) {\n                        dirruns = dirrunsUnique;\n                        outermostContext = contextBackup;\n                    }\n                    return unmatched;\n                };\n            return bySet ? markFunction(superMatcher) : superMatcher;\n        }\n        compile = Sizzle.compile = function (selector, match) {\n            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + ' '];\n            if (!cached) {\n                // Generate a function of recursive functions that can be used to check each element\n                if (!match) {\n                    match = tokenize(selector);\n                }\n                i = match.length;\n                while (i--) {\n                    cached = matcherFromTokens(match[i]);\n                    if (cached[expando]) {\n                        setMatchers.push(cached);\n                    } else {\n                        elementMatchers.push(cached);\n                    }\n                }\n                // Cache the compiled function\n                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\n                // Save selector and tokenization\n                cached.selector = selector;\n            }\n            return cached;\n        };\n        /**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\n        select = Sizzle.select = function (selector, context, results, seed) {\n            var i, tokens, token, type, find, compiled = typeof selector === 'function' && selector, match = !seed && tokenize(selector = compiled.selector || selector);\n            results = results || [];\n            // Try to minimize operations if there is only one selector in the list and no seed\n            // (the latter of which guarantees us context)\n            if (match.length === 1) {\n                // Reduce context if the leading compound selector is an ID\n                tokens = match[0] = match[0].slice(0);\n                if (tokens.length > 2 && (token = tokens[0]).type === 'ID' && context.nodeType === 9 && documentIsHTML && Expr.relative[tokens[1].type]) {\n                    context = (Expr.find['ID'](token.matches[0].replace(runescape, funescape), context) || [])[0];\n                    if (!context) {\n                        return results;    // Precompiled matchers will still verify ancestry, so step up a level\n                    } else if (compiled) {\n                        context = context.parentNode;\n                    }\n                    selector = selector.slice(tokens.shift().value.length);\n                }\n                // Fetch a seed set for right-to-left matching\n                i = matchExpr['needsContext'].test(selector) ? 0 : tokens.length;\n                while (i--) {\n                    token = tokens[i];\n                    // Abort if we hit a combinator\n                    if (Expr.relative[type = token.type]) {\n                        break;\n                    }\n                    if (find = Expr.find[type]) {\n                        // Search, expanding context for leading sibling combinators\n                        if (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && testContext(context.parentNode) || context)) {\n                            // If seed is empty or no tokens remain, we can return early\n                            tokens.splice(i, 1);\n                            selector = seed.length && toSelector(tokens);\n                            if (!selector) {\n                                push.apply(results, seed);\n                                return results;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // Compile and execute a filtering function if one is not provided\n            // Provide `match` to avoid retokenization if we modified the selector above\n            (compiled || compile(selector, match))(seed, context, !documentIsHTML, results, !context || rsibling.test(selector) && testContext(context.parentNode) || context);\n            return results;\n        };\n        // One-time assignments\n        // Sort stability\n        support.sortStable = expando.split('').sort(sortOrder).join('') === expando;\n        // Support: Chrome 14-35+\n        // Always assume duplicates if they aren't passed to the comparison function\n        support.detectDuplicates = !!hasDuplicate;\n        // Initialize against the default document\n        setDocument();\n        // Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n        // Detached nodes confoundingly follow *each other*\n        support.sortDetached = assert(function (el) {\n            // Should return 1, but returns 4 (following)\n            return el.compareDocumentPosition(document.createElement('fieldset')) & 1;\n        });\n        // Support: IE<8\n        // Prevent attribute/property \"interpolation\"\n        // https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\n        if (!assert(function (el) {\n                el.innerHTML = '<a href=\\'#\\'></a>';\n                return el.firstChild.getAttribute('href') === '#';\n            })) {\n            addHandle('type|href|height|width', function (elem, name, isXML) {\n                if (!isXML) {\n                    return elem.getAttribute(name, name.toLowerCase() === 'type' ? 1 : 2);\n                }\n            });\n        }\n        // Support: IE<9\n        // Use defaultValue in place of getAttribute(\"value\")\n        if (!support.attributes || !assert(function (el) {\n                el.innerHTML = '<input/>';\n                el.firstChild.setAttribute('value', '');\n                return el.firstChild.getAttribute('value') === '';\n            })) {\n            addHandle('value', function (elem, name, isXML) {\n                if (!isXML && elem.nodeName.toLowerCase() === 'input') {\n                    return elem.defaultValue;\n                }\n            });\n        }\n        // Support: IE<9\n        // Use getAttributeNode to fetch booleans when getAttribute lies\n        if (!assert(function (el) {\n                return el.getAttribute('disabled') == null;\n            })) {\n            addHandle(booleans, function (elem, name, isXML) {\n                var val;\n                if (!isXML) {\n                    return elem[name] === true ? name.toLowerCase() : (val = elem.getAttributeNode(name)) && val.specified ? val.value : null;\n                }\n            });\n        }\n        return Sizzle;\n    }(window);\n    jQuery.find = Sizzle;\n    jQuery.expr = Sizzle.selectors;\n    // Deprecated\n    jQuery.expr[':'] = jQuery.expr.pseudos;\n    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\n    jQuery.text = Sizzle.getText;\n    jQuery.isXMLDoc = Sizzle.isXML;\n    jQuery.contains = Sizzle.contains;\n    jQuery.escapeSelector = Sizzle.escape;\n    var dir = function (elem, dir, until) {\n        var matched = [], truncate = until !== undefined;\n        while ((elem = elem[dir]) && elem.nodeType !== 9) {\n            if (elem.nodeType === 1) {\n                if (truncate && jQuery(elem).is(until)) {\n                    break;\n                }\n                matched.push(elem);\n            }\n        }\n        return matched;\n    };\n    var siblings = function (n, elem) {\n        var matched = [];\n        for (; n; n = n.nextSibling) {\n            if (n.nodeType === 1 && n !== elem) {\n                matched.push(n);\n            }\n        }\n        return matched;\n    };\n    var rneedsContext = jQuery.expr.match.needsContext;\n    function nodeName(elem, name) {\n        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n    }\n    ;\n    var rsingleTag = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n    var risSimple = /^.[^:#\\[\\.,]*$/;\n    // Implement the identical functionality for filter and not\n    function winnow(elements, qualifier, not) {\n        if (jQuery.isFunction(qualifier)) {\n            return jQuery.grep(elements, function (elem, i) {\n                return !!qualifier.call(elem, i, elem) !== not;\n            });\n        }\n        // Single element\n        if (qualifier.nodeType) {\n            return jQuery.grep(elements, function (elem) {\n                return elem === qualifier !== not;\n            });\n        }\n        // Arraylike of elements (jQuery, arguments, Array)\n        if (typeof qualifier !== 'string') {\n            return jQuery.grep(elements, function (elem) {\n                return indexOf.call(qualifier, elem) > -1 !== not;\n            });\n        }\n        // Simple selector that can be filtered directly, removing non-Elements\n        if (risSimple.test(qualifier)) {\n            return jQuery.filter(qualifier, elements, not);\n        }\n        // Complex selector, compare the two sets, removing non-Elements\n        qualifier = jQuery.filter(qualifier, elements);\n        return jQuery.grep(elements, function (elem) {\n            return indexOf.call(qualifier, elem) > -1 !== not && elem.nodeType === 1;\n        });\n    }\n    jQuery.filter = function (expr, elems, not) {\n        var elem = elems[0];\n        if (not) {\n            expr = ':not(' + expr + ')';\n        }\n        if (elems.length === 1 && elem.nodeType === 1) {\n            return jQuery.find.matchesSelector(elem, expr) ? [elem] : [];\n        }\n        return jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\n            return elem.nodeType === 1;\n        }));\n    };\n    jQuery.fn.extend({\n        find: function (selector) {\n            var i, ret, len = this.length, self = this;\n            if (typeof selector !== 'string') {\n                return this.pushStack(jQuery(selector).filter(function () {\n                    for (i = 0; i < len; i++) {\n                        if (jQuery.contains(self[i], this)) {\n                            return true;\n                        }\n                    }\n                }));\n            }\n            ret = this.pushStack([]);\n            for (i = 0; i < len; i++) {\n                jQuery.find(selector, self[i], ret);\n            }\n            return len > 1 ? jQuery.uniqueSort(ret) : ret;\n        },\n        filter: function (selector) {\n            return this.pushStack(winnow(this, selector || [], false));\n        },\n        not: function (selector) {\n            return this.pushStack(winnow(this, selector || [], true));\n        },\n        is: function (selector) {\n            return !!winnow(this, // If this is a positional/relative selector, check membership in the returned set\n            // so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n            typeof selector === 'string' && rneedsContext.test(selector) ? jQuery(selector) : selector || [], false).length;\n        }\n    });\n    // Initialize a jQuery object\n    // A central reference to the root jQuery(document)\n    var rootjQuery,\n        // A simple way to check for HTML strings\n        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n        // Strict HTML recognition (#11290: must start with <)\n        // Shortcut simple #id case for speed\n        rquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/, init = jQuery.fn.init = function (selector, context, root) {\n            var match, elem;\n            // HANDLE: $(\"\"), $(null), $(undefined), $(false)\n            if (!selector) {\n                return this;\n            }\n            // Method init() accepts an alternate rootjQuery\n            // so migrate can support jQuery.sub (gh-2101)\n            root = root || rootjQuery;\n            // Handle HTML strings\n            if (typeof selector === 'string') {\n                if (selector[0] === '<' && selector[selector.length - 1] === '>' && selector.length >= 3) {\n                    // Assume that strings that start and end with <> are HTML and skip the regex check\n                    match = [\n                        null,\n                        selector,\n                        null\n                    ];\n                } else {\n                    match = rquickExpr.exec(selector);\n                }\n                // Match html or make sure no context is specified for #id\n                if (match && (match[1] || !context)) {\n                    // HANDLE: $(html) -> $(array)\n                    if (match[1]) {\n                        context = context instanceof jQuery ? context[0] : context;\n                        // Option to run scripts is true for back-compat\n                        // Intentionally let the error be thrown if parseHTML is not present\n                        jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, true));\n                        // HANDLE: $(html, props)\n                        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\n                            for (match in context) {\n                                // Properties of context are called as methods if possible\n                                if (jQuery.isFunction(this[match])) {\n                                    this[match](context[match]);    // ...and otherwise set as attributes\n                                } else {\n                                    this.attr(match, context[match]);\n                                }\n                            }\n                        }\n                        return this;    // HANDLE: $(#id)\n                    } else {\n                        elem = document.getElementById(match[2]);\n                        if (elem) {\n                            // Inject the element directly into the jQuery object\n                            this[0] = elem;\n                            this.length = 1;\n                        }\n                        return this;\n                    }    // HANDLE: $(expr, $(...))\n                } else if (!context || context.jquery) {\n                    return (context || root).find(selector);    // HANDLE: $(expr, context)\n                                                                // (which is just equivalent to: $(context).find(expr)\n                } else {\n                    return this.constructor(context).find(selector);\n                }    // HANDLE: $(DOMElement)\n            } else if (selector.nodeType) {\n                this[0] = selector;\n                this.length = 1;\n                return this;    // HANDLE: $(function)\n                                // Shortcut for document ready\n            } else if (jQuery.isFunction(selector)) {\n                return root.ready !== undefined ? root.ready(selector) : // Execute immediately if ready is not present\n                selector(jQuery);\n            }\n            return jQuery.makeArray(selector, this);\n        };\n    // Give the init function the jQuery prototype for later instantiation\n    init.prototype = jQuery.fn;\n    // Initialize central reference\n    rootjQuery = jQuery(document);\n    var rparentsprev = /^(?:parents|prev(?:Until|All))/,\n        // Methods guaranteed to produce a unique set when starting from a unique set\n        guaranteedUnique = {\n            children: true,\n            contents: true,\n            next: true,\n            prev: true\n        };\n    jQuery.fn.extend({\n        has: function (target) {\n            var targets = jQuery(target, this), l = targets.length;\n            return this.filter(function () {\n                var i = 0;\n                for (; i < l; i++) {\n                    if (jQuery.contains(this, targets[i])) {\n                        return true;\n                    }\n                }\n            });\n        },\n        closest: function (selectors, context) {\n            var cur, i = 0, l = this.length, matched = [], targets = typeof selectors !== 'string' && jQuery(selectors);\n            // Positional selectors never match, since there's no _selection_ context\n            if (!rneedsContext.test(selectors)) {\n                for (; i < l; i++) {\n                    for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\n                        // Always skip document fragments\n                        if (cur.nodeType < 11 && (targets ? targets.index(cur) > -1 : // Don't pass non-elements to Sizzle\n                            cur.nodeType === 1 && jQuery.find.matchesSelector(cur, selectors))) {\n                            matched.push(cur);\n                            break;\n                        }\n                    }\n                }\n            }\n            return this.pushStack(matched.length > 1 ? jQuery.uniqueSort(matched) : matched);\n        },\n        // Determine the position of an element within the set\n        index: function (elem) {\n            // No argument, return index in parent\n            if (!elem) {\n                return this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n            }\n            // Index in selector\n            if (typeof elem === 'string') {\n                return indexOf.call(jQuery(elem), this[0]);\n            }\n            // Locate the position of the desired element\n            return indexOf.call(this, // If it receives a jQuery object, the first element is used\n            elem.jquery ? elem[0] : elem);\n        },\n        add: function (selector, context) {\n            return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));\n        },\n        addBack: function (selector) {\n            return this.add(selector == null ? this.prevObject : this.prevObject.filter(selector));\n        }\n    });\n    function sibling(cur, dir) {\n        while ((cur = cur[dir]) && cur.nodeType !== 1) {\n        }\n        return cur;\n    }\n    jQuery.each({\n        parent: function (elem) {\n            var parent = elem.parentNode;\n            return parent && parent.nodeType !== 11 ? parent : null;\n        },\n        parents: function (elem) {\n            return dir(elem, 'parentNode');\n        },\n        parentsUntil: function (elem, i, until) {\n            return dir(elem, 'parentNode', until);\n        },\n        next: function (elem) {\n            return sibling(elem, 'nextSibling');\n        },\n        prev: function (elem) {\n            return sibling(elem, 'previousSibling');\n        },\n        nextAll: function (elem) {\n            return dir(elem, 'nextSibling');\n        },\n        prevAll: function (elem) {\n            return dir(elem, 'previousSibling');\n        },\n        nextUntil: function (elem, i, until) {\n            return dir(elem, 'nextSibling', until);\n        },\n        prevUntil: function (elem, i, until) {\n            return dir(elem, 'previousSibling', until);\n        },\n        siblings: function (elem) {\n            return siblings((elem.parentNode || {}).firstChild, elem);\n        },\n        children: function (elem) {\n            return siblings(elem.firstChild);\n        },\n        contents: function (elem) {\n            if (nodeName(elem, 'iframe')) {\n                return elem.contentDocument;\n            }\n            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\n            // Treat the template element as a regular one in browsers that\n            // don't support it.\n            if (nodeName(elem, 'template')) {\n                elem = elem.content || elem;\n            }\n            return jQuery.merge([], elem.childNodes);\n        }\n    }, function (name, fn) {\n        jQuery.fn[name] = function (until, selector) {\n            var matched = jQuery.map(this, fn, until);\n            if (name.slice(-5) !== 'Until') {\n                selector = until;\n            }\n            if (selector && typeof selector === 'string') {\n                matched = jQuery.filter(selector, matched);\n            }\n            if (this.length > 1) {\n                // Remove duplicates\n                if (!guaranteedUnique[name]) {\n                    jQuery.uniqueSort(matched);\n                }\n                // Reverse order for parents* and prev-derivatives\n                if (rparentsprev.test(name)) {\n                    matched.reverse();\n                }\n            }\n            return this.pushStack(matched);\n        };\n    });\n    var rnothtmlwhite = /[^\\x20\\t\\r\\n\\f]+/g;\n    // Convert String-formatted options into Object-formatted ones\n    function createOptions(options) {\n        var object = {};\n        jQuery.each(options.match(rnothtmlwhite) || [], function (_, flag) {\n            object[flag] = true;\n        });\n        return object;\n    }\n    /*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\n    jQuery.Callbacks = function (options) {\n        // Convert options from String-formatted to Object-formatted if needed\n        // (we check in cache first)\n        options = typeof options === 'string' ? createOptions(options) : jQuery.extend({}, options);\n        var\n            // Flag to know if list is currently firing\n            firing,\n            // Last fire value for non-forgettable lists\n            memory,\n            // Flag to know if list was already fired\n            fired,\n            // Flag to prevent firing\n            locked,\n            // Actual callback list\n            list = [],\n            // Queue of execution data for repeatable lists\n            queue = [],\n            // Index of currently firing callback (modified by add/remove as needed)\n            firingIndex = -1,\n            // Fire callbacks\n            fire = function () {\n                // Enforce single-firing\n                locked = locked || options.once;\n                // Execute callbacks for all pending executions,\n                // respecting firingIndex overrides and runtime changes\n                fired = firing = true;\n                for (; queue.length; firingIndex = -1) {\n                    memory = queue.shift();\n                    while (++firingIndex < list.length) {\n                        // Run callback and check for early termination\n                        if (list[firingIndex].apply(memory[0], memory[1]) === false && options.stopOnFalse) {\n                            // Jump to end and forget the data so .add doesn't re-fire\n                            firingIndex = list.length;\n                            memory = false;\n                        }\n                    }\n                }\n                // Forget the data if we're done with it\n                if (!options.memory) {\n                    memory = false;\n                }\n                firing = false;\n                // Clean up if we're done firing for good\n                if (locked) {\n                    // Keep an empty list if we have data for future add calls\n                    if (memory) {\n                        list = [];    // Otherwise, this object is spent\n                    } else {\n                        list = '';\n                    }\n                }\n            },\n            // Actual Callbacks object\n            self = {\n                // Add a callback or a collection of callbacks to the list\n                add: function () {\n                    if (list) {\n                        // If we have memory from a past run, we should fire after adding\n                        if (memory && !firing) {\n                            firingIndex = list.length - 1;\n                            queue.push(memory);\n                        }\n                        (function add(args) {\n                            jQuery.each(args, function (_, arg) {\n                                if (jQuery.isFunction(arg)) {\n                                    if (!options.unique || !self.has(arg)) {\n                                        list.push(arg);\n                                    }\n                                } else if (arg && arg.length && jQuery.type(arg) !== 'string') {\n                                    // Inspect recursively\n                                    add(arg);\n                                }\n                            });\n                        }(arguments));\n                        if (memory && !firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Remove a callback from the list\n                remove: function () {\n                    jQuery.each(arguments, function (_, arg) {\n                        var index;\n                        while ((index = jQuery.inArray(arg, list, index)) > -1) {\n                            list.splice(index, 1);\n                            // Handle firing indexes\n                            if (index <= firingIndex) {\n                                firingIndex--;\n                            }\n                        }\n                    });\n                    return this;\n                },\n                // Check if a given callback is in the list.\n                // If no argument is given, return whether or not list has callbacks attached.\n                has: function (fn) {\n                    return fn ? jQuery.inArray(fn, list) > -1 : list.length > 0;\n                },\n                // Remove all callbacks from the list\n                empty: function () {\n                    if (list) {\n                        list = [];\n                    }\n                    return this;\n                },\n                // Disable .fire and .add\n                // Abort any current/pending executions\n                // Clear all callbacks and values\n                disable: function () {\n                    locked = queue = [];\n                    list = memory = '';\n                    return this;\n                },\n                disabled: function () {\n                    return !list;\n                },\n                // Disable .fire\n                // Also disable .add unless we have memory (since it would have no effect)\n                // Abort any pending executions\n                lock: function () {\n                    locked = queue = [];\n                    if (!memory && !firing) {\n                        list = memory = '';\n                    }\n                    return this;\n                },\n                locked: function () {\n                    return !!locked;\n                },\n                // Call all callbacks with the given context and arguments\n                fireWith: function (context, args) {\n                    if (!locked) {\n                        args = args || [];\n                        args = [\n                            context,\n                            args.slice ? args.slice() : args\n                        ];\n                        queue.push(args);\n                        if (!firing) {\n                            fire();\n                        }\n                    }\n                    return this;\n                },\n                // Call all the callbacks with the given arguments\n                fire: function () {\n                    self.fireWith(this, arguments);\n                    return this;\n                },\n                // To know if the callbacks have already been called at least once\n                fired: function () {\n                    return !!fired;\n                }\n            };\n        return self;\n    };\n    function Identity(v) {\n        return v;\n    }\n    function Thrower(ex) {\n        throw ex;\n    }\n    function adoptValue(value, resolve, reject, noValue) {\n        var method;\n        try {\n            // Check for promise aspect first to privilege synchronous behavior\n            if (value && jQuery.isFunction(method = value.promise)) {\n                method.call(value).done(resolve).fail(reject);    // Other thenables\n            } else if (value && jQuery.isFunction(method = value.then)) {\n                method.call(value, resolve, reject);    // Other non-thenables\n            } else {\n                // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\n                // * false: [ value ].slice( 0 ) => resolve( value )\n                // * true: [ value ].slice( 1 ) => resolve()\n                resolve.apply(undefined, [value].slice(noValue));\n            }    // For Promises/A+, convert exceptions into rejections\n                 // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\n                 // Deferred#then to conditionally suppress rejection.\n        } catch (value) {\n            // Support: Android 4.0 only\n            // Strict mode functions invoked without .call/.apply get global-object context\n            reject.apply(undefined, [value]);\n        }\n    }\n    jQuery.extend({\n        Deferred: function (func) {\n            var tuples = [\n                    // action, add listener, callbacks,\n                    // ... .then handlers, argument index, [final state]\n                    [\n                        'notify',\n                        'progress',\n                        jQuery.Callbacks('memory'),\n                        jQuery.Callbacks('memory'),\n                        2\n                    ],\n                    [\n                        'resolve',\n                        'done',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        0,\n                        'resolved'\n                    ],\n                    [\n                        'reject',\n                        'fail',\n                        jQuery.Callbacks('once memory'),\n                        jQuery.Callbacks('once memory'),\n                        1,\n                        'rejected'\n                    ]\n                ], state = 'pending', promise = {\n                    state: function () {\n                        return state;\n                    },\n                    always: function () {\n                        deferred.done(arguments).fail(arguments);\n                        return this;\n                    },\n                    'catch': function (fn) {\n                        return promise.then(null, fn);\n                    },\n                    // Keep pipe for back-compat\n                    pipe: function () {\n                        var fns = arguments;\n                        return jQuery.Deferred(function (newDefer) {\n                            jQuery.each(tuples, function (i, tuple) {\n                                // Map tuples (progress, done, fail) to arguments (done, fail, progress)\n                                var fn = jQuery.isFunction(fns[tuple[4]]) && fns[tuple[4]];\n                                // deferred.progress(function() { bind to newDefer or newDefer.notify })\n                                // deferred.done(function() { bind to newDefer or newDefer.resolve })\n                                // deferred.fail(function() { bind to newDefer or newDefer.reject })\n                                deferred[tuple[1]](function () {\n                                    var returned = fn && fn.apply(this, arguments);\n                                    if (returned && jQuery.isFunction(returned.promise)) {\n                                        returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);\n                                    } else {\n                                        newDefer[tuple[0] + 'With'](this, fn ? [returned] : arguments);\n                                    }\n                                });\n                            });\n                            fns = null;\n                        }).promise();\n                    },\n                    then: function (onFulfilled, onRejected, onProgress) {\n                        var maxDepth = 0;\n                        function resolve(depth, deferred, handler, special) {\n                            return function () {\n                                var that = this, args = arguments, mightThrow = function () {\n                                        var returned, then;\n                                        // Support: Promises/A+ section 2.3.3.3.3\n                                        // https://promisesaplus.com/#point-59\n                                        // Ignore double-resolution attempts\n                                        if (depth < maxDepth) {\n                                            return;\n                                        }\n                                        returned = handler.apply(that, args);\n                                        // Support: Promises/A+ section 2.3.1\n                                        // https://promisesaplus.com/#point-48\n                                        if (returned === deferred.promise()) {\n                                            throw new TypeError('Thenable self-resolution');\n                                        }\n                                        // Support: Promises/A+ sections 2.3.3.1, 3.5\n                                        // https://promisesaplus.com/#point-54\n                                        // https://promisesaplus.com/#point-75\n                                        // Retrieve `then` only once\n                                        then = returned && (typeof returned === 'object' || typeof returned === 'function') && returned.then;\n                                        // Handle a returned thenable\n                                        if (jQuery.isFunction(then)) {\n                                            // Special processors (notify) just wait for resolution\n                                            if (special) {\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));    // Normal processors (resolve) also hook into progress\n                                            } else {\n                                                // ...and disregard older resolution values\n                                                maxDepth++;\n                                                then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));\n                                            }    // Handle all other returned values\n                                        } else {\n                                            // Only substitute handlers pass on context\n                                            // and multiple values (non-spec behavior)\n                                            if (handler !== Identity) {\n                                                that = undefined;\n                                                args = [returned];\n                                            }\n                                            // Process the value(s)\n                                            // Default process is resolve\n                                            (special || deferred.resolveWith)(that, args);\n                                        }\n                                    },\n                                    // Only normal processors (resolve) catch and reject exceptions\n                                    process = special ? mightThrow : function () {\n                                        try {\n                                            mightThrow();\n                                        } catch (e) {\n                                            if (jQuery.Deferred.exceptionHook) {\n                                                jQuery.Deferred.exceptionHook(e, process.stackTrace);\n                                            }\n                                            // Support: Promises/A+ section 2.3.3.3.4.1\n                                            // https://promisesaplus.com/#point-61\n                                            // Ignore post-resolution exceptions\n                                            if (depth + 1 >= maxDepth) {\n                                                // Only substitute handlers pass on context\n                                                // and multiple values (non-spec behavior)\n                                                if (handler !== Thrower) {\n                                                    that = undefined;\n                                                    args = [e];\n                                                }\n                                                deferred.rejectWith(that, args);\n                                            }\n                                        }\n                                    };\n                                // Support: Promises/A+ section 2.3.3.3.1\n                                // https://promisesaplus.com/#point-57\n                                // Re-resolve promises immediately to dodge false rejection from\n                                // subsequent errors\n                                if (depth) {\n                                    process();\n                                } else {\n                                    // Call an optional hook to record the stack, in case of exception\n                                    // since it's otherwise lost when execution goes async\n                                    if (jQuery.Deferred.getStackHook) {\n                                        process.stackTrace = jQuery.Deferred.getStackHook();\n                                    }\n                                    window.setTimeout(process);\n                                }\n                            };\n                        }\n                        return jQuery.Deferred(function (newDefer) {\n                            // progress_handlers.add( ... )\n                            tuples[0][3].add(resolve(0, newDefer, jQuery.isFunction(onProgress) ? onProgress : Identity, newDefer.notifyWith));\n                            // fulfilled_handlers.add( ... )\n                            tuples[1][3].add(resolve(0, newDefer, jQuery.isFunction(onFulfilled) ? onFulfilled : Identity));\n                            // rejected_handlers.add( ... )\n                            tuples[2][3].add(resolve(0, newDefer, jQuery.isFunction(onRejected) ? onRejected : Thrower));\n                        }).promise();\n                    },\n                    // Get a promise for this deferred\n                    // If obj is provided, the promise aspect is added to the object\n                    promise: function (obj) {\n                        return obj != null ? jQuery.extend(obj, promise) : promise;\n                    }\n                }, deferred = {};\n            // Add list-specific methods\n            jQuery.each(tuples, function (i, tuple) {\n                var list = tuple[2], stateString = tuple[5];\n                // promise.progress = list.add\n                // promise.done = list.add\n                // promise.fail = list.add\n                promise[tuple[1]] = list.add;\n                // Handle state\n                if (stateString) {\n                    list.add(function () {\n                        // state = \"resolved\" (i.e., fulfilled)\n                        // state = \"rejected\"\n                        state = stateString;\n                    }, // rejected_callbacks.disable\n                    // fulfilled_callbacks.disable\n                    tuples[3 - i][2].disable, // progress_callbacks.lock\n                    tuples[0][2].lock);\n                }\n                // progress_handlers.fire\n                // fulfilled_handlers.fire\n                // rejected_handlers.fire\n                list.add(tuple[3].fire);\n                // deferred.notify = function() { deferred.notifyWith(...) }\n                // deferred.resolve = function() { deferred.resolveWith(...) }\n                // deferred.reject = function() { deferred.rejectWith(...) }\n                deferred[tuple[0]] = function () {\n                    deferred[tuple[0] + 'With'](this === deferred ? undefined : this, arguments);\n                    return this;\n                };\n                // deferred.notifyWith = list.fireWith\n                // deferred.resolveWith = list.fireWith\n                // deferred.rejectWith = list.fireWith\n                deferred[tuple[0] + 'With'] = list.fireWith;\n            });\n            // Make the deferred a promise\n            promise.promise(deferred);\n            // Call given func if any\n            if (func) {\n                func.call(deferred, deferred);\n            }\n            // All done!\n            return deferred;\n        },\n        // Deferred helper\n        when: function (singleValue) {\n            var\n                // count of uncompleted subordinates\n                remaining = arguments.length,\n                // count of unprocessed arguments\n                i = remaining,\n                // subordinate fulfillment data\n                resolveContexts = Array(i), resolveValues = slice.call(arguments),\n                // the master Deferred\n                master = jQuery.Deferred(),\n                // subordinate callback factory\n                updateFunc = function (i) {\n                    return function (value) {\n                        resolveContexts[i] = this;\n                        resolveValues[i] = arguments.length > 1 ? slice.call(arguments) : value;\n                        if (!--remaining) {\n                            master.resolveWith(resolveContexts, resolveValues);\n                        }\n                    };\n                };\n            // Single- and empty arguments are adopted like Promise.resolve\n            if (remaining <= 1) {\n                adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, !remaining);\n                // Use .then() to unwrap secondary thenables (cf. gh-3000)\n                if (master.state() === 'pending' || jQuery.isFunction(resolveValues[i] && resolveValues[i].then)) {\n                    return master.then();\n                }\n            }\n            // Multiple arguments are aggregated like Promise.all array elements\n            while (i--) {\n                adoptValue(resolveValues[i], updateFunc(i), master.reject);\n            }\n            return master.promise();\n        }\n    });\n    // These usually indicate a programmer mistake during development,\n    // warn about them ASAP rather than swallowing them by default.\n    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n    jQuery.Deferred.exceptionHook = function (error, stack) {\n        // Support: IE 8 - 9 only\n        // Console exists when dev tools are open, which can happen at any time\n        if (window.console && window.console.warn && error && rerrorNames.test(error.name)) {\n            window.console.warn('jQuery.Deferred exception: ' + error.message, error.stack, stack);\n        }\n    };\n    jQuery.readyException = function (error) {\n        window.setTimeout(function () {\n            throw error;\n        });\n    };\n    // The deferred used on DOM ready\n    var readyList = jQuery.Deferred();\n    jQuery.fn.ready = function (fn) {\n        readyList.then(fn)    // Wrap jQuery.readyException in a function so that the lookup\n                              // happens at the time of error handling instead of callback\n                              // registration.\n.catch(function (error) {\n            jQuery.readyException(error);\n        });\n        return this;\n    };\n    jQuery.extend({\n        // Is the DOM ready to be used? Set to true once it occurs.\n        isReady: false,\n        // A counter to track how many items to wait for before\n        // the ready event fires. See #6781\n        readyWait: 1,\n        // Handle when the DOM is ready\n        ready: function (wait) {\n            // Abort if there are pending holds or we're already ready\n            if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\n                return;\n            }\n            // Remember that the DOM is ready\n            jQuery.isReady = true;\n            // If a normal DOM Ready event fired, decrement, and wait if need be\n            if (wait !== true && --jQuery.readyWait > 0) {\n                return;\n            }\n            // If there are functions bound, to execute\n            readyList.resolveWith(document, [jQuery]);\n        }\n    });\n    jQuery.ready.then = readyList.then;\n    // The ready event handler and self cleanup method\n    function completed() {\n        document.removeEventListener('DOMContentLoaded', completed);\n        window.removeEventListener('load', completed);\n        jQuery.ready();\n    }\n    // Catch cases where $(document).ready() is called\n    // after the browser event has already occurred.\n    // Support: IE <=9 - 10 only\n    // Older IE sometimes signals \"interactive\" too soon\n    if (document.readyState === 'complete' || document.readyState !== 'loading' && !document.documentElement.doScroll) {\n        // Handle it asynchronously to allow scripts the opportunity to delay ready\n        window.setTimeout(jQuery.ready);\n    } else {\n        // Use the handy event callback\n        document.addEventListener('DOMContentLoaded', completed);\n        // A fallback to window.onload, that will always work\n        window.addEventListener('load', completed);\n    }\n    // Multifunctional method to get and set values of a collection\n    // The value/s can optionally be executed if it's a function\n    var access = function (elems, fn, key, value, chainable, emptyGet, raw) {\n        var i = 0, len = elems.length, bulk = key == null;\n        // Sets many values\n        if (jQuery.type(key) === 'object') {\n            chainable = true;\n            for (i in key) {\n                access(elems, fn, i, key[i], true, emptyGet, raw);\n            }    // Sets one value\n        } else if (value !== undefined) {\n            chainable = true;\n            if (!jQuery.isFunction(value)) {\n                raw = true;\n            }\n            if (bulk) {\n                // Bulk operations run against the entire set\n                if (raw) {\n                    fn.call(elems, value);\n                    fn = null;    // ...except when executing function values\n                } else {\n                    bulk = fn;\n                    fn = function (elem, key, value) {\n                        return bulk.call(jQuery(elem), value);\n                    };\n                }\n            }\n            if (fn) {\n                for (; i < len; i++) {\n                    fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\n                }\n            }\n        }\n        if (chainable) {\n            return elems;\n        }\n        // Gets\n        if (bulk) {\n            return fn.call(elems);\n        }\n        return len ? fn(elems[0], key) : emptyGet;\n    };\n    var acceptData = function (owner) {\n        // Accepts only:\n        //  - Node\n        //    - Node.ELEMENT_NODE\n        //    - Node.DOCUMENT_NODE\n        //  - Object\n        //    - Any\n        return owner.nodeType === 1 || owner.nodeType === 9 || !+owner.nodeType;\n    };\n    function Data() {\n        this.expando = jQuery.expando + Data.uid++;\n    }\n    Data.uid = 1;\n    Data.prototype = {\n        cache: function (owner) {\n            // Check if the owner object already has a cache\n            var value = owner[this.expando];\n            // If not, create one\n            if (!value) {\n                value = {};\n                // We can accept data for non-element nodes in modern browsers,\n                // but we should not, see #8335.\n                // Always return an empty object.\n                if (acceptData(owner)) {\n                    // If it is a node unlikely to be stringify-ed or looped over\n                    // use plain assignment\n                    if (owner.nodeType) {\n                        owner[this.expando] = value;    // Otherwise secure it in a non-enumerable property\n                                                        // configurable must be true to allow the property to be\n                                                        // deleted when data is removed\n                    } else {\n                        Object.defineProperty(owner, this.expando, {\n                            value: value,\n                            configurable: true\n                        });\n                    }\n                }\n            }\n            return value;\n        },\n        set: function (owner, data, value) {\n            var prop, cache = this.cache(owner);\n            // Handle: [ owner, key, value ] args\n            // Always use camelCase key (gh-2257)\n            if (typeof data === 'string') {\n                cache[jQuery.camelCase(data)] = value;    // Handle: [ owner, { properties } ] args\n            } else {\n                // Copy the properties one-by-one to the cache object\n                for (prop in data) {\n                    cache[jQuery.camelCase(prop)] = data[prop];\n                }\n            }\n            return cache;\n        },\n        get: function (owner, key) {\n            return key === undefined ? this.cache(owner) : // Always use camelCase key (gh-2257)\n            owner[this.expando] && owner[this.expando][jQuery.camelCase(key)];\n        },\n        access: function (owner, key, value) {\n            // In cases where either:\n            //\n            //   1. No key was specified\n            //   2. A string key was specified, but no value provided\n            //\n            // Take the \"read\" path and allow the get method to determine\n            // which value to return, respectively either:\n            //\n            //   1. The entire cache object\n            //   2. The data stored at the key\n            //\n            if (key === undefined || key && typeof key === 'string' && value === undefined) {\n                return this.get(owner, key);\n            }\n            // When the key is not a string, or both a key and value\n            // are specified, set or extend (existing objects) with either:\n            //\n            //   1. An object of properties\n            //   2. A key and value\n            //\n            this.set(owner, key, value);\n            // Since the \"set\" path can have two possible entry points\n            // return the expected data based on which path was taken[*]\n            return value !== undefined ? value : key;\n        },\n        remove: function (owner, key) {\n            var i, cache = owner[this.expando];\n            if (cache === undefined) {\n                return;\n            }\n            if (key !== undefined) {\n                // Support array or space separated string of keys\n                if (Array.isArray(key)) {\n                    // If key is an array of keys...\n                    // We always set camelCase keys, so remove that.\n                    key = key.map(jQuery.camelCase);\n                } else {\n                    key = jQuery.camelCase(key);\n                    // If a key with the spaces exists, use it.\n                    // Otherwise, create an array by matching non-whitespace\n                    key = key in cache ? [key] : key.match(rnothtmlwhite) || [];\n                }\n                i = key.length;\n                while (i--) {\n                    delete cache[key[i]];\n                }\n            }\n            // Remove the expando if there's no more data\n            if (key === undefined || jQuery.isEmptyObject(cache)) {\n                // Support: Chrome <=35 - 45\n                // Webkit & Blink performance suffers when deleting properties\n                // from DOM nodes, so set to undefined instead\n                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\n                if (owner.nodeType) {\n                    owner[this.expando] = undefined;\n                } else {\n                    delete owner[this.expando];\n                }\n            }\n        },\n        hasData: function (owner) {\n            var cache = owner[this.expando];\n            return cache !== undefined && !jQuery.isEmptyObject(cache);\n        }\n    };\n    var dataPriv = new Data();\n    var dataUser = new Data();\n    //\tImplementation Summary\n    //\n    //\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n    //\t2. Improve the module's maintainability by reducing the storage\n    //\t\tpaths to a single mechanism.\n    //\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n    //\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n    //\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n    //\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n    var rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/, rmultiDash = /[A-Z]/g;\n    function getData(data) {\n        if (data === 'true') {\n            return true;\n        }\n        if (data === 'false') {\n            return false;\n        }\n        if (data === 'null') {\n            return null;\n        }\n        // Only convert to a number if it doesn't change the string\n        if (data === +data + '') {\n            return +data;\n        }\n        if (rbrace.test(data)) {\n            return JSON.parse(data);\n        }\n        return data;\n    }\n    function dataAttr(elem, key, data) {\n        var name;\n        // If nothing was found internally, try to fetch any\n        // data from the HTML5 data-* attribute\n        if (data === undefined && elem.nodeType === 1) {\n            name = 'data-' + key.replace(rmultiDash, '-$&').toLowerCase();\n            data = elem.getAttribute(name);\n            if (typeof data === 'string') {\n                try {\n                    data = getData(data);\n                } catch (e) {\n                }\n                // Make sure we set the data so it isn't changed later\n                dataUser.set(elem, key, data);\n            } else {\n                data = undefined;\n            }\n        }\n        return data;\n    }\n    jQuery.extend({\n        hasData: function (elem) {\n            return dataUser.hasData(elem) || dataPriv.hasData(elem);\n        },\n        data: function (elem, name, data) {\n            return dataUser.access(elem, name, data);\n        },\n        removeData: function (elem, name) {\n            dataUser.remove(elem, name);\n        },\n        // TODO: Now that all calls to _data and _removeData have been replaced\n        // with direct calls to dataPriv methods, these can be deprecated.\n        _data: function (elem, name, data) {\n            return dataPriv.access(elem, name, data);\n        },\n        _removeData: function (elem, name) {\n            dataPriv.remove(elem, name);\n        }\n    });\n    jQuery.fn.extend({\n        data: function (key, value) {\n            var i, name, data, elem = this[0], attrs = elem && elem.attributes;\n            // Gets all values\n            if (key === undefined) {\n                if (this.length) {\n                    data = dataUser.get(elem);\n                    if (elem.nodeType === 1 && !dataPriv.get(elem, 'hasDataAttrs')) {\n                        i = attrs.length;\n                        while (i--) {\n                            // Support: IE 11 only\n                            // The attrs elements can be null (#14894)\n                            if (attrs[i]) {\n                                name = attrs[i].name;\n                                if (name.indexOf('data-') === 0) {\n                                    name = jQuery.camelCase(name.slice(5));\n                                    dataAttr(elem, name, data[name]);\n                                }\n                            }\n                        }\n                        dataPriv.set(elem, 'hasDataAttrs', true);\n                    }\n                }\n                return data;\n            }\n            // Sets multiple values\n            if (typeof key === 'object') {\n                return this.each(function () {\n                    dataUser.set(this, key);\n                });\n            }\n            return access(this, function (value) {\n                var data;\n                // The calling jQuery object (element matches) is not empty\n                // (and therefore has an element appears at this[ 0 ]) and the\n                // `value` parameter was not undefined. An empty jQuery object\n                // will result in `undefined` for elem = this[ 0 ] which will\n                // throw an exception if an attempt to read a data cache is made.\n                if (elem && value === undefined) {\n                    // Attempt to get data from the cache\n                    // The key will always be camelCased in Data\n                    data = dataUser.get(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // Attempt to \"discover\" the data in\n                    // HTML5 custom data-* attrs\n                    data = dataAttr(elem, key);\n                    if (data !== undefined) {\n                        return data;\n                    }\n                    // We tried really hard, but the data doesn't exist.\n                    return;\n                }\n                // Set the data...\n                this.each(function () {\n                    // We always store the camelCased key\n                    dataUser.set(this, key, value);\n                });\n            }, null, value, arguments.length > 1, null, true);\n        },\n        removeData: function (key) {\n            return this.each(function () {\n                dataUser.remove(this, key);\n            });\n        }\n    });\n    jQuery.extend({\n        queue: function (elem, type, data) {\n            var queue;\n            if (elem) {\n                type = (type || 'fx') + 'queue';\n                queue = dataPriv.get(elem, type);\n                // Speed up dequeue by getting out quickly if this is just a lookup\n                if (data) {\n                    if (!queue || Array.isArray(data)) {\n                        queue = dataPriv.access(elem, type, jQuery.makeArray(data));\n                    } else {\n                        queue.push(data);\n                    }\n                }\n                return queue || [];\n            }\n        },\n        dequeue: function (elem, type) {\n            type = type || 'fx';\n            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function () {\n                    jQuery.dequeue(elem, type);\n                };\n            // If the fx queue is dequeued, always remove the progress sentinel\n            if (fn === 'inprogress') {\n                fn = queue.shift();\n                startLength--;\n            }\n            if (fn) {\n                // Add a progress sentinel to prevent the fx queue from being\n                // automatically dequeued\n                if (type === 'fx') {\n                    queue.unshift('inprogress');\n                }\n                // Clear up the last queue stop function\n                delete hooks.stop;\n                fn.call(elem, next, hooks);\n            }\n            if (!startLength && hooks) {\n                hooks.empty.fire();\n            }\n        },\n        // Not public - generate a queueHooks object, or return the current one\n        _queueHooks: function (elem, type) {\n            var key = type + 'queueHooks';\n            return dataPriv.get(elem, key) || dataPriv.access(elem, key, {\n                empty: jQuery.Callbacks('once memory').add(function () {\n                    dataPriv.remove(elem, [\n                        type + 'queue',\n                        key\n                    ]);\n                })\n            });\n        }\n    });\n    jQuery.fn.extend({\n        queue: function (type, data) {\n            var setter = 2;\n            if (typeof type !== 'string') {\n                data = type;\n                type = 'fx';\n                setter--;\n            }\n            if (arguments.length < setter) {\n                return jQuery.queue(this[0], type);\n            }\n            return data === undefined ? this : this.each(function () {\n                var queue = jQuery.queue(this, type, data);\n                // Ensure a hooks for this queue\n                jQuery._queueHooks(this, type);\n                if (type === 'fx' && queue[0] !== 'inprogress') {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        dequeue: function (type) {\n            return this.each(function () {\n                jQuery.dequeue(this, type);\n            });\n        },\n        clearQueue: function (type) {\n            return this.queue(type || 'fx', []);\n        },\n        // Get a promise resolved when queues of a certain type\n        // are emptied (fx is the type by default)\n        promise: function (type, obj) {\n            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function () {\n                    if (!--count) {\n                        defer.resolveWith(elements, [elements]);\n                    }\n                };\n            if (typeof type !== 'string') {\n                obj = type;\n                type = undefined;\n            }\n            type = type || 'fx';\n            while (i--) {\n                tmp = dataPriv.get(elements[i], type + 'queueHooks');\n                if (tmp && tmp.empty) {\n                    count++;\n                    tmp.empty.add(resolve);\n                }\n            }\n            resolve();\n            return defer.promise(obj);\n        }\n    });\n    var pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\n    var rcssNum = new RegExp('^(?:([+-])=|)(' + pnum + ')([a-z%]*)$', 'i');\n    var cssExpand = [\n        'Top',\n        'Right',\n        'Bottom',\n        'Left'\n    ];\n    var isHiddenWithinTree = function (elem, el) {\n        // isHiddenWithinTree might be called from jQuery#filter function;\n        // in that case, element will be second argument\n        elem = el || elem;\n        // Inline style trumps all\n        return elem.style.display === 'none' || elem.style.display === '' && // Otherwise, check computed style\n        // Support: Firefox <=43 - 45\n        // Disconnected elements can have computed display: none, so first confirm that elem is\n        // in the document.\n        jQuery.contains(elem.ownerDocument, elem) && jQuery.css(elem, 'display') === 'none';\n    };\n    var swap = function (elem, options, callback, args) {\n        var ret, name, old = {};\n        // Remember the old values, and insert the new ones\n        for (name in options) {\n            old[name] = elem.style[name];\n            elem.style[name] = options[name];\n        }\n        ret = callback.apply(elem, args || []);\n        // Revert the old values\n        for (name in options) {\n            elem.style[name] = old[name];\n        }\n        return ret;\n    };\n    function adjustCSS(elem, prop, valueParts, tween) {\n        var adjusted, scale = 1, maxIterations = 20, currentValue = tween ? function () {\n                return tween.cur();\n            } : function () {\n                return jQuery.css(elem, prop, '');\n            }, initial = currentValue(), unit = valueParts && valueParts[3] || (jQuery.cssNumber[prop] ? '' : 'px'),\n            // Starting value computation is required for potential unit mismatches\n            initialInUnit = (jQuery.cssNumber[prop] || unit !== 'px' && +initial) && rcssNum.exec(jQuery.css(elem, prop));\n        if (initialInUnit && initialInUnit[3] !== unit) {\n            // Trust units reported by jQuery.css\n            unit = unit || initialInUnit[3];\n            // Make sure we update the tween properties later on\n            valueParts = valueParts || [];\n            // Iteratively approximate from a nonzero starting point\n            initialInUnit = +initial || 1;\n            do {\n                // If previous iteration zeroed out, double until we get *something*.\n                // Use string for doubling so we don't accidentally see scale as unchanged below\n                scale = scale || '.5';\n                // Adjust and apply\n                initialInUnit = initialInUnit / scale;\n                jQuery.style(elem, prop, initialInUnit + unit);    // Update scale, tolerating zero or NaN from tween.cur()\n                                                                   // Break the loop if scale is unchanged or perfect, or if we've just had enough.\n            } while (scale !== (scale = currentValue() / initial) && scale !== 1 && --maxIterations);\n        }\n        if (valueParts) {\n            initialInUnit = +initialInUnit || +initial || 0;\n            // Apply relative offset (+=/-=) if specified\n            adjusted = valueParts[1] ? initialInUnit + (valueParts[1] + 1) * valueParts[2] : +valueParts[2];\n            if (tween) {\n                tween.unit = unit;\n                tween.start = initialInUnit;\n                tween.end = adjusted;\n            }\n        }\n        return adjusted;\n    }\n    var defaultDisplayMap = {};\n    function getDefaultDisplay(elem) {\n        var temp, doc = elem.ownerDocument, nodeName = elem.nodeName, display = defaultDisplayMap[nodeName];\n        if (display) {\n            return display;\n        }\n        temp = doc.body.appendChild(doc.createElement(nodeName));\n        display = jQuery.css(temp, 'display');\n        temp.parentNode.removeChild(temp);\n        if (display === 'none') {\n            display = 'block';\n        }\n        defaultDisplayMap[nodeName] = display;\n        return display;\n    }\n    function showHide(elements, show) {\n        var display, elem, values = [], index = 0, length = elements.length;\n        // Determine new display value for elements that need to change\n        for (; index < length; index++) {\n            elem = elements[index];\n            if (!elem.style) {\n                continue;\n            }\n            display = elem.style.display;\n            if (show) {\n                // Since we force visibility upon cascade-hidden elements, an immediate (and slow)\n                // check is required in this first loop unless we have a nonempty display value (either\n                // inline or about-to-be-restored)\n                if (display === 'none') {\n                    values[index] = dataPriv.get(elem, 'display') || null;\n                    if (!values[index]) {\n                        elem.style.display = '';\n                    }\n                }\n                if (elem.style.display === '' && isHiddenWithinTree(elem)) {\n                    values[index] = getDefaultDisplay(elem);\n                }\n            } else {\n                if (display !== 'none') {\n                    values[index] = 'none';\n                    // Remember what we're overwriting\n                    dataPriv.set(elem, 'display', display);\n                }\n            }\n        }\n        // Set the display of the elements in a second loop to avoid constant reflow\n        for (index = 0; index < length; index++) {\n            if (values[index] != null) {\n                elements[index].style.display = values[index];\n            }\n        }\n        return elements;\n    }\n    jQuery.fn.extend({\n        show: function () {\n            return showHide(this, true);\n        },\n        hide: function () {\n            return showHide(this);\n        },\n        toggle: function (state) {\n            if (typeof state === 'boolean') {\n                return state ? this.show() : this.hide();\n            }\n            return this.each(function () {\n                if (isHiddenWithinTree(this)) {\n                    jQuery(this).show();\n                } else {\n                    jQuery(this).hide();\n                }\n            });\n        }\n    });\n    var rcheckableType = /^(?:checkbox|radio)$/i;\n    var rtagName = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]+)/i;\n    var rscriptType = /^$|\\/(?:java|ecma)script/i;\n    // We have to close these tags to support XHTML (#13200)\n    var wrapMap = {\n        // Support: IE <=9 only\n        option: [\n            1,\n            '<select multiple=\\'multiple\\'>',\n            '</select>'\n        ],\n        // XHTML parsers do not magically insert elements in the\n        // same way that tag soup parsers do. So we cannot shorten\n        // this by omitting <tbody> or other required elements.\n        thead: [\n            1,\n            '<table>',\n            '</table>'\n        ],\n        col: [\n            2,\n            '<table><colgroup>',\n            '</colgroup></table>'\n        ],\n        tr: [\n            2,\n            '<table><tbody>',\n            '</tbody></table>'\n        ],\n        td: [\n            3,\n            '<table><tbody><tr>',\n            '</tr></tbody></table>'\n        ],\n        _default: [\n            0,\n            '',\n            ''\n        ]\n    };\n    // Support: IE <=9 only\n    wrapMap.optgroup = wrapMap.option;\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\n    wrapMap.th = wrapMap.td;\n    function getAll(context, tag) {\n        // Support: IE <=9 - 11 only\n        // Use typeof to avoid zero-argument method invocation on host objects (#15151)\n        var ret;\n        if (typeof context.getElementsByTagName !== 'undefined') {\n            ret = context.getElementsByTagName(tag || '*');\n        } else if (typeof context.querySelectorAll !== 'undefined') {\n            ret = context.querySelectorAll(tag || '*');\n        } else {\n            ret = [];\n        }\n        if (tag === undefined || tag && nodeName(context, tag)) {\n            return jQuery.merge([context], ret);\n        }\n        return ret;\n    }\n    // Mark scripts as having already been evaluated\n    function setGlobalEval(elems, refElements) {\n        var i = 0, l = elems.length;\n        for (; i < l; i++) {\n            dataPriv.set(elems[i], 'globalEval', !refElements || dataPriv.get(refElements[i], 'globalEval'));\n        }\n    }\n    var rhtml = /<|&#?\\w+;/;\n    function buildFragment(elems, context, scripts, selection, ignored) {\n        var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;\n        for (; i < l; i++) {\n            elem = elems[i];\n            if (elem || elem === 0) {\n                // Add nodes directly\n                if (jQuery.type(elem) === 'object') {\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, elem.nodeType ? [elem] : elem);    // Convert non-html into a text node\n                } else if (!rhtml.test(elem)) {\n                    nodes.push(context.createTextNode(elem));    // Convert html into DOM nodes\n                } else {\n                    tmp = tmp || fragment.appendChild(context.createElement('div'));\n                    // Deserialize a standard representation\n                    tag = (rtagName.exec(elem) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase();\n                    wrap = wrapMap[tag] || wrapMap._default;\n                    tmp.innerHTML = wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2];\n                    // Descend through wrappers to the right content\n                    j = wrap[0];\n                    while (j--) {\n                        tmp = tmp.lastChild;\n                    }\n                    // Support: Android <=4.0 only, PhantomJS 1 only\n                    // push.apply(_, arraylike) throws on ancient WebKit\n                    jQuery.merge(nodes, tmp.childNodes);\n                    // Remember the top-level container\n                    tmp = fragment.firstChild;\n                    // Ensure the created nodes are orphaned (#12392)\n                    tmp.textContent = '';\n                }\n            }\n        }\n        // Remove wrapper from fragment\n        fragment.textContent = '';\n        i = 0;\n        while (elem = nodes[i++]) {\n            // Skip elements already in the context collection (trac-4087)\n            if (selection && jQuery.inArray(elem, selection) > -1) {\n                if (ignored) {\n                    ignored.push(elem);\n                }\n                continue;\n            }\n            contains = jQuery.contains(elem.ownerDocument, elem);\n            // Append to fragment\n            tmp = getAll(fragment.appendChild(elem), 'script');\n            // Preserve script evaluation history\n            if (contains) {\n                setGlobalEval(tmp);\n            }\n            // Capture executables\n            if (scripts) {\n                j = 0;\n                while (elem = tmp[j++]) {\n                    if (rscriptType.test(elem.type || '')) {\n                        scripts.push(elem);\n                    }\n                }\n            }\n        }\n        return fragment;\n    }\n    (function () {\n        var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement('div')), input = document.createElement('input');\n        // Support: Android 4.0 - 4.3 only\n        // Check state lost if the name is set (#11217)\n        // Support: Windows Web Apps (WWA)\n        // `name` and `type` must use .setAttribute for WWA (#14901)\n        input.setAttribute('type', 'radio');\n        input.setAttribute('checked', 'checked');\n        input.setAttribute('name', 't');\n        div.appendChild(input);\n        // Support: Android <=4.1 only\n        // Older WebKit doesn't clone checked state correctly in fragments\n        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\n        // Support: IE <=11 only\n        // Make sure textarea (and checkbox) defaultValue is properly cloned\n        div.innerHTML = '<textarea>x</textarea>';\n        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\n    }());\n    var documentElement = document.documentElement;\n    var rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, rtypenamespace = /^([^.]*)(?:\\.(.+)|)/;\n    function returnTrue() {\n        return true;\n    }\n    function returnFalse() {\n        return false;\n    }\n    // Support: IE <=9 only\n    // See #13393 for more info\n    function safeActiveElement() {\n        try {\n            return document.activeElement;\n        } catch (err) {\n        }\n    }\n    function on(elem, types, selector, data, fn, one) {\n        var origFn, type;\n        // Types can be a map of types/handlers\n        if (typeof types === 'object') {\n            // ( types-Object, selector, data )\n            if (typeof selector !== 'string') {\n                // ( types-Object, data )\n                data = data || selector;\n                selector = undefined;\n            }\n            for (type in types) {\n                on(elem, type, selector, data, types[type], one);\n            }\n            return elem;\n        }\n        if (data == null && fn == null) {\n            // ( types, fn )\n            fn = selector;\n            data = selector = undefined;\n        } else if (fn == null) {\n            if (typeof selector === 'string') {\n                // ( types, selector, fn )\n                fn = data;\n                data = undefined;\n            } else {\n                // ( types, data, fn )\n                fn = data;\n                data = selector;\n                selector = undefined;\n            }\n        }\n        if (fn === false) {\n            fn = returnFalse;\n        } else if (!fn) {\n            return elem;\n        }\n        if (one === 1) {\n            origFn = fn;\n            fn = function (event) {\n                // Can use an empty set, since event contains the info\n                jQuery().off(event);\n                return origFn.apply(this, arguments);\n            };\n            // Use same guid so caller can remove using origFn\n            fn.guid = origFn.guid || (origFn.guid = jQuery.guid++);\n        }\n        return elem.each(function () {\n            jQuery.event.add(this, types, fn, data, selector);\n        });\n    }\n    /*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\n    jQuery.event = {\n        global: {},\n        add: function (elem, types, handler, data, selector) {\n            var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);\n            // Don't attach events to noData or text/comment nodes (but allow plain objects)\n            if (!elemData) {\n                return;\n            }\n            // Caller can pass in an object of custom data in lieu of the handler\n            if (handler.handler) {\n                handleObjIn = handler;\n                handler = handleObjIn.handler;\n                selector = handleObjIn.selector;\n            }\n            // Ensure that invalid selectors throw exceptions at attach time\n            // Evaluate against documentElement in case elem is a non-element node (e.g., document)\n            if (selector) {\n                jQuery.find.matchesSelector(documentElement, selector);\n            }\n            // Make sure that the handler has a unique ID, used to find/remove it later\n            if (!handler.guid) {\n                handler.guid = jQuery.guid++;\n            }\n            // Init the element's event structure and main handler, if this is the first\n            if (!(events = elemData.events)) {\n                events = elemData.events = {};\n            }\n            if (!(eventHandle = elemData.handle)) {\n                eventHandle = elemData.handle = function (e) {\n                    // Discard the second event of a jQuery.event.trigger() and\n                    // when an event is called after a page has unloaded\n                    return typeof jQuery !== 'undefined' && jQuery.event.triggered !== e.type ? jQuery.event.dispatch.apply(elem, arguments) : undefined;\n                };\n            }\n            // Handle multiple events separated by a space\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // There *must* be a type, no attaching namespace-only handlers\n                if (!type) {\n                    continue;\n                }\n                // If event changes its type, use the special event handlers for the changed type\n                special = jQuery.event.special[type] || {};\n                // If selector defined, determine special event api type, otherwise given type\n                type = (selector ? special.delegateType : special.bindType) || type;\n                // Update special based on newly reset type\n                special = jQuery.event.special[type] || {};\n                // handleObj is passed to all event handlers\n                handleObj = jQuery.extend({\n                    type: type,\n                    origType: origType,\n                    data: data,\n                    handler: handler,\n                    guid: handler.guid,\n                    selector: selector,\n                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),\n                    namespace: namespaces.join('.')\n                }, handleObjIn);\n                // Init the event handler queue if we're the first\n                if (!(handlers = events[type])) {\n                    handlers = events[type] = [];\n                    handlers.delegateCount = 0;\n                    // Only use addEventListener if the special events handler returns false\n                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\n                        if (elem.addEventListener) {\n                            elem.addEventListener(type, eventHandle);\n                        }\n                    }\n                }\n                if (special.add) {\n                    special.add.call(elem, handleObj);\n                    if (!handleObj.handler.guid) {\n                        handleObj.handler.guid = handler.guid;\n                    }\n                }\n                // Add to the element's handler list, delegates in front\n                if (selector) {\n                    handlers.splice(handlers.delegateCount++, 0, handleObj);\n                } else {\n                    handlers.push(handleObj);\n                }\n                // Keep track of which events have ever been used, for event optimization\n                jQuery.event.global[type] = true;\n            }\n        },\n        // Detach an event or set of events from an element\n        remove: function (elem, types, handler, selector, mappedTypes) {\n            var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.hasData(elem) && dataPriv.get(elem);\n            if (!elemData || !(events = elemData.events)) {\n                return;\n            }\n            // Once for each type.namespace in types; type may be omitted\n            types = (types || '').match(rnothtmlwhite) || [''];\n            t = types.length;\n            while (t--) {\n                tmp = rtypenamespace.exec(types[t]) || [];\n                type = origType = tmp[1];\n                namespaces = (tmp[2] || '').split('.').sort();\n                // Unbind all events (on this namespace, if provided) for the element\n                if (!type) {\n                    for (type in events) {\n                        jQuery.event.remove(elem, type + types[t], handler, selector, true);\n                    }\n                    continue;\n                }\n                special = jQuery.event.special[type] || {};\n                type = (selector ? special.delegateType : special.bindType) || type;\n                handlers = events[type] || [];\n                tmp = tmp[2] && new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)');\n                // Remove matching events\n                origCount = j = handlers.length;\n                while (j--) {\n                    handleObj = handlers[j];\n                    if ((mappedTypes || origType === handleObj.origType) && (!handler || handler.guid === handleObj.guid) && (!tmp || tmp.test(handleObj.namespace)) && (!selector || selector === handleObj.selector || selector === '**' && handleObj.selector)) {\n                        handlers.splice(j, 1);\n                        if (handleObj.selector) {\n                            handlers.delegateCount--;\n                        }\n                        if (special.remove) {\n                            special.remove.call(elem, handleObj);\n                        }\n                    }\n                }\n                // Remove generic event handler if we removed something and no more handlers exist\n                // (avoids potential for endless recursion during removal of special event handlers)\n                if (origCount && !handlers.length) {\n                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\n                        jQuery.removeEvent(elem, type, elemData.handle);\n                    }\n                    delete events[type];\n                }\n            }\n            // Remove data and the expando if it's no longer used\n            if (jQuery.isEmptyObject(events)) {\n                dataPriv.remove(elem, 'handle events');\n            }\n        },\n        dispatch: function (nativeEvent) {\n            // Make a writable jQuery.Event from the native event object\n            var event = jQuery.event.fix(nativeEvent);\n            var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), handlers = (dataPriv.get(this, 'events') || {})[event.type] || [], special = jQuery.event.special[event.type] || {};\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\n            args[0] = event;\n            for (i = 1; i < arguments.length; i++) {\n                args[i] = arguments[i];\n            }\n            event.delegateTarget = this;\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\n            if (special.preDispatch && special.preDispatch.call(this, event) === false) {\n                return;\n            }\n            // Determine handlers\n            handlerQueue = jQuery.event.handlers.call(this, event, handlers);\n            // Run delegates first; they may want to stop propagation beneath us\n            i = 0;\n            while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\n                event.currentTarget = matched.elem;\n                j = 0;\n                while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\n                    // Triggered event must either 1) have no namespace, or 2) have namespace(s)\n                    // a subset or equal to those in the bound event (both can have no namespace).\n                    if (!event.rnamespace || event.rnamespace.test(handleObj.namespace)) {\n                        event.handleObj = handleObj;\n                        event.data = handleObj.data;\n                        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);\n                        if (ret !== undefined) {\n                            if ((event.result = ret) === false) {\n                                event.preventDefault();\n                                event.stopPropagation();\n                            }\n                        }\n                    }\n                }\n            }\n            // Call the postDispatch hook for the mapped type\n            if (special.postDispatch) {\n                special.postDispatch.call(this, event);\n            }\n            return event.result;\n        },\n        handlers: function (event, handlers) {\n            var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;\n            // Find delegate handlers\n            if (delegateCount && // Support: IE <=9\n                // Black-hole SVG <use> instance trees (trac-13180)\n                cur.nodeType && // Support: Firefox <=42\n                // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\n                // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\n                // Support: IE 11 only\n                // ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\n                !(event.type === 'click' && event.button >= 1)) {\n                for (; cur !== this; cur = cur.parentNode || this) {\n                    // Don't check non-elements (#13208)\n                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n                    if (cur.nodeType === 1 && !(event.type === 'click' && cur.disabled === true)) {\n                        matchedHandlers = [];\n                        matchedSelectors = {};\n                        for (i = 0; i < delegateCount; i++) {\n                            handleObj = handlers[i];\n                            // Don't conflict with Object.prototype properties (#13203)\n                            sel = handleObj.selector + ' ';\n                            if (matchedSelectors[sel] === undefined) {\n                                matchedSelectors[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) > -1 : jQuery.find(sel, this, null, [cur]).length;\n                            }\n                            if (matchedSelectors[sel]) {\n                                matchedHandlers.push(handleObj);\n                            }\n                        }\n                        if (matchedHandlers.length) {\n                            handlerQueue.push({\n                                elem: cur,\n                                handlers: matchedHandlers\n                            });\n                        }\n                    }\n                }\n            }\n            // Add the remaining (directly-bound) handlers\n            cur = this;\n            if (delegateCount < handlers.length) {\n                handlerQueue.push({\n                    elem: cur,\n                    handlers: handlers.slice(delegateCount)\n                });\n            }\n            return handlerQueue;\n        },\n        addProp: function (name, hook) {\n            Object.defineProperty(jQuery.Event.prototype, name, {\n                enumerable: true,\n                configurable: true,\n                get: jQuery.isFunction(hook) ? function () {\n                    if (this.originalEvent) {\n                        return hook(this.originalEvent);\n                    }\n                } : function () {\n                    if (this.originalEvent) {\n                        return this.originalEvent[name];\n                    }\n                },\n                set: function (value) {\n                    Object.defineProperty(this, name, {\n                        enumerable: true,\n                        configurable: true,\n                        writable: true,\n                        value: value\n                    });\n                }\n            });\n        },\n        fix: function (originalEvent) {\n            return originalEvent[jQuery.expando] ? originalEvent : new jQuery.Event(originalEvent);\n        },\n        special: {\n            load: {\n                // Prevent triggered image.load events from bubbling to window.load\n                noBubble: true\n            },\n            focus: {\n                // Fire native event if possible so blur/focus sequence is correct\n                trigger: function () {\n                    if (this !== safeActiveElement() && this.focus) {\n                        this.focus();\n                        return false;\n                    }\n                },\n                delegateType: 'focusin'\n            },\n            blur: {\n                trigger: function () {\n                    if (this === safeActiveElement() && this.blur) {\n                        this.blur();\n                        return false;\n                    }\n                },\n                delegateType: 'focusout'\n            },\n            click: {\n                // For checkbox, fire native event so checked state will be right\n                trigger: function () {\n                    if (this.type === 'checkbox' && this.click && nodeName(this, 'input')) {\n                        this.click();\n                        return false;\n                    }\n                },\n                // For cross-browser consistency, don't fire native .click() on links\n                _default: function (event) {\n                    return nodeName(event.target, 'a');\n                }\n            },\n            beforeunload: {\n                postDispatch: function (event) {\n                    // Support: Firefox 20+\n                    // Firefox doesn't alert if the returnValue field is not set.\n                    if (event.result !== undefined && event.originalEvent) {\n                        event.originalEvent.returnValue = event.result;\n                    }\n                }\n            }\n        }\n    };\n    jQuery.removeEvent = function (elem, type, handle) {\n        // This \"if\" is needed for plain objects\n        if (elem.removeEventListener) {\n            elem.removeEventListener(type, handle);\n        }\n    };\n    jQuery.Event = function (src, props) {\n        // Allow instantiation without the 'new' keyword\n        if (!(this instanceof jQuery.Event)) {\n            return new jQuery.Event(src, props);\n        }\n        // Event object\n        if (src && src.type) {\n            this.originalEvent = src;\n            this.type = src.type;\n            // Events bubbling up the document may have been marked as prevented\n            // by a handler lower down the tree; reflect the correct value.\n            this.isDefaultPrevented = src.defaultPrevented || src.defaultPrevented === undefined && // Support: Android <=2.3 only\n            src.returnValue === false ? returnTrue : returnFalse;\n            // Create target properties\n            // Support: Safari <=6 - 7 only\n            // Target should not be a text node (#504, #13143)\n            this.target = src.target && src.target.nodeType === 3 ? src.target.parentNode : src.target;\n            this.currentTarget = src.currentTarget;\n            this.relatedTarget = src.relatedTarget;    // Event type\n        } else {\n            this.type = src;\n        }\n        // Put explicitly provided properties onto the event object\n        if (props) {\n            jQuery.extend(this, props);\n        }\n        // Create a timestamp if incoming event doesn't have one\n        this.timeStamp = src && src.timeStamp || jQuery.now();\n        // Mark it as fixed\n        this[jQuery.expando] = true;\n    };\n    // jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n    // https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\n    jQuery.Event.prototype = {\n        constructor: jQuery.Event,\n        isDefaultPrevented: returnFalse,\n        isPropagationStopped: returnFalse,\n        isImmediatePropagationStopped: returnFalse,\n        isSimulated: false,\n        preventDefault: function () {\n            var e = this.originalEvent;\n            this.isDefaultPrevented = returnTrue;\n            if (e && !this.isSimulated) {\n                e.preventDefault();\n            }\n        },\n        stopPropagation: function () {\n            var e = this.originalEvent;\n            this.isPropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopPropagation();\n            }\n        },\n        stopImmediatePropagation: function () {\n            var e = this.originalEvent;\n            this.isImmediatePropagationStopped = returnTrue;\n            if (e && !this.isSimulated) {\n                e.stopImmediatePropagation();\n            }\n            this.stopPropagation();\n        }\n    };\n    // Includes all common event props including KeyEvent and MouseEvent specific props\n    jQuery.each({\n        altKey: true,\n        bubbles: true,\n        cancelable: true,\n        changedTouches: true,\n        ctrlKey: true,\n        detail: true,\n        eventPhase: true,\n        metaKey: true,\n        pageX: true,\n        pageY: true,\n        shiftKey: true,\n        view: true,\n        'char': true,\n        charCode: true,\n        key: true,\n        keyCode: true,\n        button: true,\n        buttons: true,\n        clientX: true,\n        clientY: true,\n        offsetX: true,\n        offsetY: true,\n        pointerId: true,\n        pointerType: true,\n        screenX: true,\n        screenY: true,\n        targetTouches: true,\n        toElement: true,\n        touches: true,\n        which: function (event) {\n            var button = event.button;\n            // Add which for key events\n            if (event.which == null && rkeyEvent.test(event.type)) {\n                return event.charCode != null ? event.charCode : event.keyCode;\n            }\n            // Add which for click: 1 === left; 2 === middle; 3 === right\n            if (!event.which && button !== undefined && rmouseEvent.test(event.type)) {\n                if (button & 1) {\n                    return 1;\n                }\n                if (button & 2) {\n                    return 3;\n                }\n                if (button & 4) {\n                    return 2;\n                }\n                return 0;\n            }\n            return event.which;\n        }\n    }, jQuery.event.addProp);\n    // Create mouseenter/leave events using mouseover/out and event-time checks\n    // so that event delegation works in jQuery.\n    // Do the same for pointerenter/pointerleave and pointerover/pointerout\n    //\n    // Support: Safari 7 only\n    // Safari sends mouseenter too often; see:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=470258\n    // for the description of the bug (it existed in older Chrome versions as well).\n    jQuery.each({\n        mouseenter: 'mouseover',\n        mouseleave: 'mouseout',\n        pointerenter: 'pointerover',\n        pointerleave: 'pointerout'\n    }, function (orig, fix) {\n        jQuery.event.special[orig] = {\n            delegateType: fix,\n            bindType: fix,\n            handle: function (event) {\n                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;\n                // For mouseenter/leave call the handler if related is outside the target.\n                // NB: No relatedTarget if the mouse left/entered the browser window\n                if (!related || related !== target && !jQuery.contains(target, related)) {\n                    event.type = handleObj.origType;\n                    ret = handleObj.handler.apply(this, arguments);\n                    event.type = fix;\n                }\n                return ret;\n            }\n        };\n    });\n    jQuery.fn.extend({\n        on: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn);\n        },\n        one: function (types, selector, data, fn) {\n            return on(this, types, selector, data, fn, 1);\n        },\n        off: function (types, selector, fn) {\n            var handleObj, type;\n            if (types && types.preventDefault && types.handleObj) {\n                // ( event )  dispatched jQuery.Event\n                handleObj = types.handleObj;\n                jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + '.' + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler);\n                return this;\n            }\n            if (typeof types === 'object') {\n                // ( types-object [, selector] )\n                for (type in types) {\n                    this.off(type, selector, types[type]);\n                }\n                return this;\n            }\n            if (selector === false || typeof selector === 'function') {\n                // ( types [, fn] )\n                fn = selector;\n                selector = undefined;\n            }\n            if (fn === false) {\n                fn = returnFalse;\n            }\n            return this.each(function () {\n                jQuery.event.remove(this, types, fn, selector);\n            });\n        }\n    });\n    var\n        /* eslint-disable max-len */\n        // See https://github.com/eslint/eslint/issues/3229\n        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n        /* eslint-enable */\n        // Support: IE <=10 - 11, Edge 12 - 13\n        // In IE/Edge using regex groups here causes severe slowdowns.\n        // See https://connect.microsoft.com/IE/feedback/details/1736512/\n        rnoInnerhtml = /<script|<style|<link/i,\n        // checked=\"checked\" or checked\n        rchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i, rscriptTypeMasked = /^true\\/(.*)/, rcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n    // Prefer a tbody over its parent table for containing new rows\n    function manipulationTarget(elem, content) {\n        if (nodeName(elem, 'table') && nodeName(content.nodeType !== 11 ? content : content.firstChild, 'tr')) {\n            return jQuery('>tbody', elem)[0] || elem;\n        }\n        return elem;\n    }\n    // Replace/restore the type attribute of script elements for safe DOM manipulation\n    function disableScript(elem) {\n        elem.type = (elem.getAttribute('type') !== null) + '/' + elem.type;\n        return elem;\n    }\n    function restoreScript(elem) {\n        var match = rscriptTypeMasked.exec(elem.type);\n        if (match) {\n            elem.type = match[1];\n        } else {\n            elem.removeAttribute('type');\n        }\n        return elem;\n    }\n    function cloneCopyEvent(src, dest) {\n        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n        if (dest.nodeType !== 1) {\n            return;\n        }\n        // 1. Copy private data: events, handlers, etc.\n        if (dataPriv.hasData(src)) {\n            pdataOld = dataPriv.access(src);\n            pdataCur = dataPriv.set(dest, pdataOld);\n            events = pdataOld.events;\n            if (events) {\n                delete pdataCur.handle;\n                pdataCur.events = {};\n                for (type in events) {\n                    for (i = 0, l = events[type].length; i < l; i++) {\n                        jQuery.event.add(dest, type, events[type][i]);\n                    }\n                }\n            }\n        }\n        // 2. Copy user data\n        if (dataUser.hasData(src)) {\n            udataOld = dataUser.access(src);\n            udataCur = jQuery.extend({}, udataOld);\n            dataUser.set(dest, udataCur);\n        }\n    }\n    // Fix IE bugs, see support tests\n    function fixInput(src, dest) {\n        var nodeName = dest.nodeName.toLowerCase();\n        // Fails to persist the checked state of a cloned checkbox or radio button.\n        if (nodeName === 'input' && rcheckableType.test(src.type)) {\n            dest.checked = src.checked;    // Fails to return the selected option to the default selected state when cloning options\n        } else if (nodeName === 'input' || nodeName === 'textarea') {\n            dest.defaultValue = src.defaultValue;\n        }\n    }\n    function domManip(collection, args, callback, ignored) {\n        // Flatten any nested arrays\n        args = concat.apply([], args);\n        var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);\n        // We can't cloneNode fragments that contain checked, in WebKit\n        if (isFunction || l > 1 && typeof value === 'string' && !support.checkClone && rchecked.test(value)) {\n            return collection.each(function (index) {\n                var self = collection.eq(index);\n                if (isFunction) {\n                    args[0] = value.call(this, index, self.html());\n                }\n                domManip(self, args, callback, ignored);\n            });\n        }\n        if (l) {\n            fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);\n            first = fragment.firstChild;\n            if (fragment.childNodes.length === 1) {\n                fragment = first;\n            }\n            // Require either new content or an interest in ignored elements to invoke the callback\n            if (first || ignored) {\n                scripts = jQuery.map(getAll(fragment, 'script'), disableScript);\n                hasScripts = scripts.length;\n                // Use the original fragment for the last item\n                // instead of the first because it can end up\n                // being emptied incorrectly in certain situations (#8070).\n                for (; i < l; i++) {\n                    node = fragment;\n                    if (i !== iNoClone) {\n                        node = jQuery.clone(node, true, true);\n                        // Keep references to cloned scripts for later restoration\n                        if (hasScripts) {\n                            // Support: Android <=4.0 only, PhantomJS 1 only\n                            // push.apply(_, arraylike) throws on ancient WebKit\n                            jQuery.merge(scripts, getAll(node, 'script'));\n                        }\n                    }\n                    callback.call(collection[i], node, i);\n                }\n                if (hasScripts) {\n                    doc = scripts[scripts.length - 1].ownerDocument;\n                    // Reenable scripts\n                    jQuery.map(scripts, restoreScript);\n                    // Evaluate executable scripts on first document insertion\n                    for (i = 0; i < hasScripts; i++) {\n                        node = scripts[i];\n                        if (rscriptType.test(node.type || '') && !dataPriv.access(node, 'globalEval') && jQuery.contains(doc, node)) {\n                            if (node.src) {\n                                // Optional AJAX dependency, but won't run scripts if not present\n                                if (jQuery._evalUrl) {\n                                    jQuery._evalUrl(node.src);\n                                }\n                            } else {\n                                DOMEval(node.textContent.replace(rcleanScript, ''), doc);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return collection;\n    }\n    function remove(elem, selector, keepData) {\n        var node, nodes = selector ? jQuery.filter(selector, elem) : elem, i = 0;\n        for (; (node = nodes[i]) != null; i++) {\n            if (!keepData && node.nodeType === 1) {\n                jQuery.cleanData(getAll(node));\n            }\n            if (node.parentNode) {\n                if (keepData && jQuery.contains(node.ownerDocument, node)) {\n                    setGlobalEval(getAll(node, 'script'));\n                }\n                node.parentNode.removeChild(node);\n            }\n        }\n        return elem;\n    }\n    jQuery.extend({\n        htmlPrefilter: function (html) {\n            return html.replace(rxhtmlTag, '<$1></$2>');\n        },\n        clone: function (elem, dataAndEvents, deepDataAndEvents) {\n            var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = jQuery.contains(elem.ownerDocument, elem);\n            // Fix IE cloning issues\n            if (!support.noCloneChecked && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {\n                // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\n                destElements = getAll(clone);\n                srcElements = getAll(elem);\n                for (i = 0, l = srcElements.length; i < l; i++) {\n                    fixInput(srcElements[i], destElements[i]);\n                }\n            }\n            // Copy the events from the original to the clone\n            if (dataAndEvents) {\n                if (deepDataAndEvents) {\n                    srcElements = srcElements || getAll(elem);\n                    destElements = destElements || getAll(clone);\n                    for (i = 0, l = srcElements.length; i < l; i++) {\n                        cloneCopyEvent(srcElements[i], destElements[i]);\n                    }\n                } else {\n                    cloneCopyEvent(elem, clone);\n                }\n            }\n            // Preserve script evaluation history\n            destElements = getAll(clone, 'script');\n            if (destElements.length > 0) {\n                setGlobalEval(destElements, !inPage && getAll(elem, 'script'));\n            }\n            // Return the cloned set\n            return clone;\n        },\n        cleanData: function (elems) {\n            var data, elem, type, special = jQuery.event.special, i = 0;\n            for (; (elem = elems[i]) !== undefined; i++) {\n                if (acceptData(elem)) {\n                    if (data = elem[dataPriv.expando]) {\n                        if (data.events) {\n                            for (type in data.events) {\n                                if (special[type]) {\n                                    jQuery.event.remove(elem, type);    // This is a shortcut to avoid jQuery.event.remove's overhead\n                                } else {\n                                    jQuery.removeEvent(elem, type, data.handle);\n                                }\n                            }\n                        }\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataPriv.expando] = undefined;\n                    }\n                    if (elem[dataUser.expando]) {\n                        // Support: Chrome <=35 - 45+\n                        // Assign undefined instead of using delete, see Data#remove\n                        elem[dataUser.expando] = undefined;\n                    }\n                }\n            }\n        }\n    });\n    jQuery.fn.extend({\n        detach: function (selector) {\n            return remove(this, selector, true);\n        },\n        remove: function (selector) {\n            return remove(this, selector);\n        },\n        text: function (value) {\n            return access(this, function (value) {\n                return value === undefined ? jQuery.text(this) : this.empty().each(function () {\n                    if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                        this.textContent = value;\n                    }\n                });\n            }, null, value, arguments.length);\n        },\n        append: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.appendChild(elem);\n                }\n            });\n        },\n        prepend: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\n                    var target = manipulationTarget(this, elem);\n                    target.insertBefore(elem, target.firstChild);\n                }\n            });\n        },\n        before: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this);\n                }\n            });\n        },\n        after: function () {\n            return domManip(this, arguments, function (elem) {\n                if (this.parentNode) {\n                    this.parentNode.insertBefore(elem, this.nextSibling);\n                }\n            });\n        },\n        empty: function () {\n            var elem, i = 0;\n            for (; (elem = this[i]) != null; i++) {\n                if (elem.nodeType === 1) {\n                    // Prevent memory leaks\n                    jQuery.cleanData(getAll(elem, false));\n                    // Remove any remaining nodes\n                    elem.textContent = '';\n                }\n            }\n            return this;\n        },\n        clone: function (dataAndEvents, deepDataAndEvents) {\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n            return this.map(function () {\n                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\n            });\n        },\n        html: function (value) {\n            return access(this, function (value) {\n                var elem = this[0] || {}, i = 0, l = this.length;\n                if (value === undefined && elem.nodeType === 1) {\n                    return elem.innerHTML;\n                }\n                // See if we can take a shortcut and just use innerHTML\n                if (typeof value === 'string' && !rnoInnerhtml.test(value) && !wrapMap[(rtagName.exec(value) || [\n                        '',\n                        ''\n                    ])[1].toLowerCase()]) {\n                    value = jQuery.htmlPrefilter(value);\n                    try {\n                        for (; i < l; i++) {\n                            elem = this[i] || {};\n                            // Remove element nodes and prevent memory leaks\n                            if (elem.nodeType === 1) {\n                                jQuery.cleanData(getAll(elem, false));\n                                elem.innerHTML = value;\n                            }\n                        }\n                        elem = 0;    // If using innerHTML throws an exception, use the fallback method\n                    } catch (e) {\n                    }\n                }\n                if (elem) {\n                    this.empty().append(value);\n                }\n            }, null, value, arguments.length);\n        },\n        replaceWith: function () {\n            var ignored = [];\n            // Make the changes, replacing each non-ignored context element with the new content\n            return domManip(this, arguments, function (elem) {\n                var parent = this.parentNode;\n                if (jQuery.inArray(this, ignored) < 0) {\n                    jQuery.cleanData(getAll(this));\n                    if (parent) {\n                        parent.replaceChild(elem, this);\n                    }\n                }    // Force callback invocation\n            }, ignored);\n        }\n    });\n    jQuery.each({\n        appendTo: 'append',\n        prependTo: 'prepend',\n        insertBefore: 'before',\n        insertAfter: 'after',\n        replaceAll: 'replaceWith'\n    }, function (name, original) {\n        jQuery.fn[name] = function (selector) {\n            var elems, ret = [], insert = jQuery(selector), last = insert.length - 1, i = 0;\n            for (; i <= last; i++) {\n                elems = i === last ? this : this.clone(true);\n                jQuery(insert[i])[original](elems);\n                // Support: Android <=4.0 only, PhantomJS 1 only\n                // .get() because push.apply(_, arraylike) throws on ancient WebKit\n                push.apply(ret, elems.get());\n            }\n            return this.pushStack(ret);\n        };\n    });\n    var rmargin = /^margin/;\n    var rnumnonpx = new RegExp('^(' + pnum + ')(?!px)[a-z%]+$', 'i');\n    var getStyles = function (elem) {\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\n        // IE throws on elements created in popups\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\n        var view = elem.ownerDocument.defaultView;\n        if (!view || !view.opener) {\n            view = window;\n        }\n        return view.getComputedStyle(elem);\n    };\n    (function () {\n        // Executing both pixelPosition & boxSizingReliable tests require only one layout\n        // so they're executed at the same time to save the second computation.\n        function computeStyleTests() {\n            // This is a singleton, we need to execute it only once\n            if (!div) {\n                return;\n            }\n            div.style.cssText = 'box-sizing:border-box;' + 'position:relative;display:block;' + 'margin:auto;border:1px;padding:1px;' + 'top:1%;width:50%';\n            div.innerHTML = '';\n            documentElement.appendChild(container);\n            var divStyle = window.getComputedStyle(div);\n            pixelPositionVal = divStyle.top !== '1%';\n            // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\n            reliableMarginLeftVal = divStyle.marginLeft === '2px';\n            boxSizingReliableVal = divStyle.width === '4px';\n            // Support: Android 4.0 - 4.3 only\n            // Some styles come back with percentage values, even though they shouldn't\n            div.style.marginRight = '50%';\n            pixelMarginRightVal = divStyle.marginRight === '4px';\n            documentElement.removeChild(container);\n            // Nullify the div so it wouldn't be stored in the memory and\n            // it will also be a sign that checks already performed\n            div = null;\n        }\n        var pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal, container = document.createElement('div'), div = document.createElement('div');\n        // Finish early in limited (non-browser) environments\n        if (!div.style) {\n            return;\n        }\n        // Support: IE <=9 - 11 only\n        // Style of cloned element affects source element cloned (#8908)\n        div.style.backgroundClip = 'content-box';\n        div.cloneNode(true).style.backgroundClip = '';\n        support.clearCloneStyle = div.style.backgroundClip === 'content-box';\n        container.style.cssText = 'border:0;width:8px;height:0;top:0;left:-9999px;' + 'padding:0;margin-top:1px;position:absolute';\n        container.appendChild(div);\n        jQuery.extend(support, {\n            pixelPosition: function () {\n                computeStyleTests();\n                return pixelPositionVal;\n            },\n            boxSizingReliable: function () {\n                computeStyleTests();\n                return boxSizingReliableVal;\n            },\n            pixelMarginRight: function () {\n                computeStyleTests();\n                return pixelMarginRightVal;\n            },\n            reliableMarginLeft: function () {\n                computeStyleTests();\n                return reliableMarginLeftVal;\n            }\n        });\n    }());\n    function curCSS(elem, name, computed) {\n        var width, minWidth, maxWidth, ret,\n            // Support: Firefox 51+\n            // Retrieving style before computed somehow\n            // fixes an issue with getting wrong values\n            // on detached elements\n            style = elem.style;\n        computed = computed || getStyles(elem);\n        // getPropertyValue is needed for:\n        //   .css('filter') (IE 9 only, #12537)\n        //   .css('--customProperty) (#3144)\n        if (computed) {\n            ret = computed.getPropertyValue(name) || computed[name];\n            if (ret === '' && !jQuery.contains(elem.ownerDocument, elem)) {\n                ret = jQuery.style(elem, name);\n            }\n            // A tribute to the \"awesome hack by Dean Edwards\"\n            // Android Browser returns percentage for some values,\n            // but width seems to be reliably pixels.\n            // This is against the CSSOM draft spec:\n            // https://drafts.csswg.org/cssom/#resolved-values\n            if (!support.pixelMarginRight() && rnumnonpx.test(ret) && rmargin.test(name)) {\n                // Remember the original values\n                width = style.width;\n                minWidth = style.minWidth;\n                maxWidth = style.maxWidth;\n                // Put in the new values to get a computed value out\n                style.minWidth = style.maxWidth = style.width = ret;\n                ret = computed.width;\n                // Revert the changed values\n                style.width = width;\n                style.minWidth = minWidth;\n                style.maxWidth = maxWidth;\n            }\n        }\n        return ret !== undefined ? // Support: IE <=9 - 11 only\n        // IE returns zIndex value as an integer.\n        ret + '' : ret;\n    }\n    function addGetHookIf(conditionFn, hookFn) {\n        // Define the hook, we'll check on the first run if it's really needed.\n        return {\n            get: function () {\n                if (conditionFn()) {\n                    // Hook not needed (or it's not possible to use it due\n                    // to missing dependency), remove it.\n                    delete this.get;\n                    return;\n                }\n                // Hook needed; redefine it so that the support test is not executed again.\n                return (this.get = hookFn).apply(this, arguments);\n            }\n        };\n    }\n    var\n        // Swappable if display is none or starts with table\n        // except \"table\", \"table-cell\", or \"table-caption\"\n        // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n        rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = {\n            position: 'absolute',\n            visibility: 'hidden',\n            display: 'block'\n        }, cssNormalTransform = {\n            letterSpacing: '0',\n            fontWeight: '400'\n        }, cssPrefixes = [\n            'Webkit',\n            'Moz',\n            'ms'\n        ], emptyStyle = document.createElement('div').style;\n    // Return a css property mapped to a potentially vendor prefixed property\n    function vendorPropName(name) {\n        // Shortcut for names that are not vendor prefixed\n        if (name in emptyStyle) {\n            return name;\n        }\n        // Check for vendor prefixed names\n        var capName = name[0].toUpperCase() + name.slice(1), i = cssPrefixes.length;\n        while (i--) {\n            name = cssPrefixes[i] + capName;\n            if (name in emptyStyle) {\n                return name;\n            }\n        }\n    }\n    // Return a property mapped along what jQuery.cssProps suggests or to\n    // a vendor prefixed property.\n    function finalPropName(name) {\n        var ret = jQuery.cssProps[name];\n        if (!ret) {\n            ret = jQuery.cssProps[name] = vendorPropName(name) || name;\n        }\n        return ret;\n    }\n    function setPositiveNumber(elem, value, subtract) {\n        // Any relative (+/-) values have already been\n        // normalized at this point\n        var matches = rcssNum.exec(value);\n        return matches ? // Guard against undefined \"subtract\", e.g., when used as in cssHooks\n        Math.max(0, matches[2] - (subtract || 0)) + (matches[3] || 'px') : value;\n    }\n    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n        var i, val = 0;\n        // If we already have the right measurement, avoid augmentation\n        if (extra === (isBorderBox ? 'border' : 'content')) {\n            i = 4;    // Otherwise initialize for horizontal or vertical properties\n        } else {\n            i = name === 'width' ? 1 : 0;\n        }\n        for (; i < 4; i += 2) {\n            // Both box models exclude margin, so add it if we want it\n            if (extra === 'margin') {\n                val += jQuery.css(elem, extra + cssExpand[i], true, styles);\n            }\n            if (isBorderBox) {\n                // border-box includes padding, so remove it if we want content\n                if (extra === 'content') {\n                    val -= jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                }\n                // At this point, extra isn't border nor margin, so remove border\n                if (extra !== 'margin') {\n                    val -= jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            } else {\n                // At this point, extra isn't content, so add padding\n                val += jQuery.css(elem, 'padding' + cssExpand[i], true, styles);\n                // At this point, extra isn't content nor padding, so add border\n                if (extra !== 'padding') {\n                    val += jQuery.css(elem, 'border' + cssExpand[i] + 'Width', true, styles);\n                }\n            }\n        }\n        return val;\n    }\n    function getWidthOrHeight(elem, name, extra) {\n        // Start with computed style\n        var valueIsBorderBox, styles = getStyles(elem), val = curCSS(elem, name, styles), isBorderBox = jQuery.css(elem, 'boxSizing', false, styles) === 'border-box';\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n        // Check for style in case a browser which returns unreliable values\n        // for getComputedStyle silently falls back to the reliable elem.style\n        valueIsBorderBox = isBorderBox && (support.boxSizingReliable() || val === elem.style[name]);\n        // Fall back to offsetWidth/Height when value is \"auto\"\n        // This happens for inline elements with no explicit setting (gh-3571)\n        if (val === 'auto') {\n            val = elem['offset' + name[0].toUpperCase() + name.slice(1)];\n        }\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n        // Use the active box-sizing model to add/subtract irrelevant styles\n        return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? 'border' : 'content'), valueIsBorderBox, styles) + 'px';\n    }\n    jQuery.extend({\n        // Add in style property hooks for overriding the default\n        // behavior of getting and setting a style property\n        cssHooks: {\n            opacity: {\n                get: function (elem, computed) {\n                    if (computed) {\n                        // We should always get a number back from opacity\n                        var ret = curCSS(elem, 'opacity');\n                        return ret === '' ? '1' : ret;\n                    }\n                }\n            }\n        },\n        // Don't automatically add \"px\" to these possibly-unitless properties\n        cssNumber: {\n            'animationIterationCount': true,\n            'columnCount': true,\n            'fillOpacity': true,\n            'flexGrow': true,\n            'flexShrink': true,\n            'fontWeight': true,\n            'lineHeight': true,\n            'opacity': true,\n            'order': true,\n            'orphans': true,\n            'widows': true,\n            'zIndex': true,\n            'zoom': true\n        },\n        // Add in properties whose names you wish to fix before\n        // setting or getting the value\n        cssProps: { 'float': 'cssFloat' },\n        // Get and set the style property on a DOM Node\n        style: function (elem, name, value, extra) {\n            // Don't set styles on text and comment nodes\n            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\n                return;\n            }\n            // Make sure that we're working with the right name\n            var ret, type, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;\n            // Make sure that we're working with the right name. We don't\n            // want to query the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Gets hook for the prefixed version, then unprefixed version\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // Check if we're setting a value\n            if (value !== undefined) {\n                type = typeof value;\n                // Convert \"+=\" or \"-=\" to relative numbers (#7345)\n                if (type === 'string' && (ret = rcssNum.exec(value)) && ret[1]) {\n                    value = adjustCSS(elem, name, ret);\n                    // Fixes bug #9237\n                    type = 'number';\n                }\n                // Make sure that null and NaN values aren't set (#7116)\n                if (value == null || value !== value) {\n                    return;\n                }\n                // If a number was passed in, add the unit (except for certain CSS properties)\n                if (type === 'number') {\n                    value += ret && ret[3] || (jQuery.cssNumber[origName] ? '' : 'px');\n                }\n                // background-* props affect original clone's values\n                if (!support.clearCloneStyle && value === '' && name.indexOf('background') === 0) {\n                    style[name] = 'inherit';\n                }\n                // If a hook was provided, use that value, otherwise just set the specified value\n                if (!hooks || !('set' in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\n                    if (isCustomProp) {\n                        style.setProperty(name, value);\n                    } else {\n                        style[name] = value;\n                    }\n                }\n            } else {\n                // If a hook was provided get the non-computed value from there\n                if (hooks && 'get' in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\n                    return ret;\n                }\n                // Otherwise just get the value from the style object\n                return style[name];\n            }\n        },\n        css: function (elem, name, extra, styles) {\n            var val, num, hooks, origName = jQuery.camelCase(name), isCustomProp = rcustomProp.test(name);\n            // Make sure that we're working with the right name. We don't\n            // want to modify the value if it is a CSS custom property\n            // since they are user-defined.\n            if (!isCustomProp) {\n                name = finalPropName(origName);\n            }\n            // Try prefixed name followed by the unprefixed name\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\n            // If a hook was provided get the computed value from there\n            if (hooks && 'get' in hooks) {\n                val = hooks.get(elem, true, extra);\n            }\n            // Otherwise, if a way to get the computed value exists, use that\n            if (val === undefined) {\n                val = curCSS(elem, name, styles);\n            }\n            // Convert \"normal\" to computed value\n            if (val === 'normal' && name in cssNormalTransform) {\n                val = cssNormalTransform[name];\n            }\n            // Make numeric if forced or a qualifier was provided and val looks numeric\n            if (extra === '' || extra) {\n                num = parseFloat(val);\n                return extra === true || isFinite(num) ? num || 0 : val;\n            }\n            return val;\n        }\n    });\n    jQuery.each([\n        'height',\n        'width'\n    ], function (i, name) {\n        jQuery.cssHooks[name] = {\n            get: function (elem, computed, extra) {\n                if (computed) {\n                    // Certain elements can have dimension info if we invisibly show them\n                    // but it must have a current display style that would benefit\n                    return rdisplayswap.test(jQuery.css(elem, 'display')) && (!elem.getClientRects().length || !elem.getBoundingClientRect().width) ? swap(elem, cssShow, function () {\n                        return getWidthOrHeight(elem, name, extra);\n                    }) : getWidthOrHeight(elem, name, extra);\n                }\n            },\n            set: function (elem, value, extra) {\n                var matches, styles = extra && getStyles(elem), subtract = extra && augmentWidthOrHeight(elem, name, extra, jQuery.css(elem, 'boxSizing', false, styles) === 'border-box', styles);\n                // Convert to pixels if value adjustment is needed\n                if (subtract && (matches = rcssNum.exec(value)) && (matches[3] || 'px') !== 'px') {\n                    elem.style[name] = value;\n                    value = jQuery.css(elem, name);\n                }\n                return setPositiveNumber(elem, value, subtract);\n            }\n        };\n    });\n    jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, function (elem, computed) {\n        if (computed) {\n            return (parseFloat(curCSS(elem, 'marginLeft')) || elem.getBoundingClientRect().left - swap(elem, { marginLeft: 0 }, function () {\n                return elem.getBoundingClientRect().left;\n            })) + 'px';\n        }\n    });\n    // These hooks are used by animate to expand properties\n    jQuery.each({\n        margin: '',\n        padding: '',\n        border: 'Width'\n    }, function (prefix, suffix) {\n        jQuery.cssHooks[prefix + suffix] = {\n            expand: function (value) {\n                var i = 0, expanded = {},\n                    // Assumes a single number if not a string\n                    parts = typeof value === 'string' ? value.split(' ') : [value];\n                for (; i < 4; i++) {\n                    expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];\n                }\n                return expanded;\n            }\n        };\n        if (!rmargin.test(prefix)) {\n            jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\n        }\n    });\n    jQuery.fn.extend({\n        css: function (name, value) {\n            return access(this, function (elem, name, value) {\n                var styles, len, map = {}, i = 0;\n                if (Array.isArray(name)) {\n                    styles = getStyles(elem);\n                    len = name.length;\n                    for (; i < len; i++) {\n                        map[name[i]] = jQuery.css(elem, name[i], false, styles);\n                    }\n                    return map;\n                }\n                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);\n            }, name, value, arguments.length > 1);\n        }\n    });\n    function Tween(elem, options, prop, end, easing) {\n        return new Tween.prototype.init(elem, options, prop, end, easing);\n    }\n    jQuery.Tween = Tween;\n    Tween.prototype = {\n        constructor: Tween,\n        init: function (elem, options, prop, end, easing, unit) {\n            this.elem = elem;\n            this.prop = prop;\n            this.easing = easing || jQuery.easing._default;\n            this.options = options;\n            this.start = this.now = this.cur();\n            this.end = end;\n            this.unit = unit || (jQuery.cssNumber[prop] ? '' : 'px');\n        },\n        cur: function () {\n            var hooks = Tween.propHooks[this.prop];\n            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);\n        },\n        run: function (percent) {\n            var eased, hooks = Tween.propHooks[this.prop];\n            if (this.options.duration) {\n                this.pos = eased = jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration);\n            } else {\n                this.pos = eased = percent;\n            }\n            this.now = (this.end - this.start) * eased + this.start;\n            if (this.options.step) {\n                this.options.step.call(this.elem, this.now, this);\n            }\n            if (hooks && hooks.set) {\n                hooks.set(this);\n            } else {\n                Tween.propHooks._default.set(this);\n            }\n            return this;\n        }\n    };\n    Tween.prototype.init.prototype = Tween.prototype;\n    Tween.propHooks = {\n        _default: {\n            get: function (tween) {\n                var result;\n                // Use a property on the element directly when it is not a DOM element,\n                // or when there is no matching style property that exists.\n                if (tween.elem.nodeType !== 1 || tween.elem[tween.prop] != null && tween.elem.style[tween.prop] == null) {\n                    return tween.elem[tween.prop];\n                }\n                // Passing an empty string as a 3rd parameter to .css will automatically\n                // attempt a parseFloat and fallback to a string if the parse fails.\n                // Simple values such as \"10px\" are parsed to Float;\n                // complex values such as \"rotate(1rad)\" are returned as-is.\n                result = jQuery.css(tween.elem, tween.prop, '');\n                // Empty strings, null, undefined and \"auto\" are converted to 0.\n                return !result || result === 'auto' ? 0 : result;\n            },\n            set: function (tween) {\n                // Use step hook for back compat.\n                // Use cssHook if its there.\n                // Use .style if available and use plain properties where available.\n                if (jQuery.fx.step[tween.prop]) {\n                    jQuery.fx.step[tween.prop](tween);\n                } else if (tween.elem.nodeType === 1 && (tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop])) {\n                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\n                } else {\n                    tween.elem[tween.prop] = tween.now;\n                }\n            }\n        }\n    };\n    // Support: IE <=9 only\n    // Panic based approach to setting things on disconnected nodes\n    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n        set: function (tween) {\n            if (tween.elem.nodeType && tween.elem.parentNode) {\n                tween.elem[tween.prop] = tween.now;\n            }\n        }\n    };\n    jQuery.easing = {\n        linear: function (p) {\n            return p;\n        },\n        swing: function (p) {\n            return 0.5 - Math.cos(p * Math.PI) / 2;\n        },\n        _default: 'swing'\n    };\n    jQuery.fx = Tween.prototype.init;\n    // Back compat <1.8 extension point\n    jQuery.fx.step = {};\n    var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;\n    function schedule() {\n        if (inProgress) {\n            if (document.hidden === false && window.requestAnimationFrame) {\n                window.requestAnimationFrame(schedule);\n            } else {\n                window.setTimeout(schedule, jQuery.fx.interval);\n            }\n            jQuery.fx.tick();\n        }\n    }\n    // Animations created synchronously will run synchronously\n    function createFxNow() {\n        window.setTimeout(function () {\n            fxNow = undefined;\n        });\n        return fxNow = jQuery.now();\n    }\n    // Generate parameters to create a standard animation\n    function genFx(type, includeWidth) {\n        var which, i = 0, attrs = { height: type };\n        // If we include width, step value is 1 to do all cssExpand values,\n        // otherwise step value is 2 to skip over Left and Right\n        includeWidth = includeWidth ? 1 : 0;\n        for (; i < 4; i += 2 - includeWidth) {\n            which = cssExpand[i];\n            attrs['margin' + which] = attrs['padding' + which] = type;\n        }\n        if (includeWidth) {\n            attrs.opacity = attrs.width = type;\n        }\n        return attrs;\n    }\n    function createTween(value, prop, animation) {\n        var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners['*']), index = 0, length = collection.length;\n        for (; index < length; index++) {\n            if (tween = collection[index].call(animation, prop, value)) {\n                // We're done with this property\n                return tween;\n            }\n        }\n    }\n    function defaultPrefilter(elem, props, opts) {\n        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = 'width' in props || 'height' in props, anim = this, orig = {}, style = elem.style, hidden = elem.nodeType && isHiddenWithinTree(elem), dataShow = dataPriv.get(elem, 'fxshow');\n        // Queue-skipping animations hijack the fx hooks\n        if (!opts.queue) {\n            hooks = jQuery._queueHooks(elem, 'fx');\n            if (hooks.unqueued == null) {\n                hooks.unqueued = 0;\n                oldfire = hooks.empty.fire;\n                hooks.empty.fire = function () {\n                    if (!hooks.unqueued) {\n                        oldfire();\n                    }\n                };\n            }\n            hooks.unqueued++;\n            anim.always(function () {\n                // Ensure the complete handler is called before this completes\n                anim.always(function () {\n                    hooks.unqueued--;\n                    if (!jQuery.queue(elem, 'fx').length) {\n                        hooks.empty.fire();\n                    }\n                });\n            });\n        }\n        // Detect show/hide animations\n        for (prop in props) {\n            value = props[prop];\n            if (rfxtypes.test(value)) {\n                delete props[prop];\n                toggle = toggle || value === 'toggle';\n                if (value === (hidden ? 'hide' : 'show')) {\n                    // Pretend to be hidden if this is a \"show\" and\n                    // there is still data from a stopped show/hide\n                    if (value === 'show' && dataShow && dataShow[prop] !== undefined) {\n                        hidden = true;    // Ignore all other no-op show/hide data\n                    } else {\n                        continue;\n                    }\n                }\n                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\n            }\n        }\n        // Bail out if this is a no-op like .hide().hide()\n        propTween = !jQuery.isEmptyObject(props);\n        if (!propTween && jQuery.isEmptyObject(orig)) {\n            return;\n        }\n        // Restrict \"overflow\" and \"display\" styles during box animations\n        if (isBox && elem.nodeType === 1) {\n            // Support: IE <=9 - 11, Edge 12 - 13\n            // Record all 3 overflow attributes because IE does not infer the shorthand\n            // from identically-valued overflowX and overflowY\n            opts.overflow = [\n                style.overflow,\n                style.overflowX,\n                style.overflowY\n            ];\n            // Identify a display type, preferring old show/hide data over the CSS cascade\n            restoreDisplay = dataShow && dataShow.display;\n            if (restoreDisplay == null) {\n                restoreDisplay = dataPriv.get(elem, 'display');\n            }\n            display = jQuery.css(elem, 'display');\n            if (display === 'none') {\n                if (restoreDisplay) {\n                    display = restoreDisplay;\n                } else {\n                    // Get nonempty value(s) by temporarily forcing visibility\n                    showHide([elem], true);\n                    restoreDisplay = elem.style.display || restoreDisplay;\n                    display = jQuery.css(elem, 'display');\n                    showHide([elem]);\n                }\n            }\n            // Animate inline elements as inline-block\n            if (display === 'inline' || display === 'inline-block' && restoreDisplay != null) {\n                if (jQuery.css(elem, 'float') === 'none') {\n                    // Restore the original display value at the end of pure show/hide animations\n                    if (!propTween) {\n                        anim.done(function () {\n                            style.display = restoreDisplay;\n                        });\n                        if (restoreDisplay == null) {\n                            display = style.display;\n                            restoreDisplay = display === 'none' ? '' : display;\n                        }\n                    }\n                    style.display = 'inline-block';\n                }\n            }\n        }\n        if (opts.overflow) {\n            style.overflow = 'hidden';\n            anim.always(function () {\n                style.overflow = opts.overflow[0];\n                style.overflowX = opts.overflow[1];\n                style.overflowY = opts.overflow[2];\n            });\n        }\n        // Implement show/hide animations\n        propTween = false;\n        for (prop in orig) {\n            // General show/hide setup for this element animation\n            if (!propTween) {\n                if (dataShow) {\n                    if ('hidden' in dataShow) {\n                        hidden = dataShow.hidden;\n                    }\n                } else {\n                    dataShow = dataPriv.access(elem, 'fxshow', { display: restoreDisplay });\n                }\n                // Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\n                if (toggle) {\n                    dataShow.hidden = !hidden;\n                }\n                // Show elements before animating them\n                if (hidden) {\n                    showHide([elem], true);\n                }\n                /* eslint-disable no-loop-func */\n                anim.done(function () {\n                    /* eslint-enable no-loop-func */\n                    // The final step of a \"hide\" animation is actually hiding the element\n                    if (!hidden) {\n                        showHide([elem]);\n                    }\n                    dataPriv.remove(elem, 'fxshow');\n                    for (prop in orig) {\n                        jQuery.style(elem, prop, orig[prop]);\n                    }\n                });\n            }\n            // Per-property setup\n            propTween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\n            if (!(prop in dataShow)) {\n                dataShow[prop] = propTween.start;\n                if (hidden) {\n                    propTween.end = propTween.start;\n                    propTween.start = 0;\n                }\n            }\n        }\n    }\n    function propFilter(props, specialEasing) {\n        var index, name, easing, value, hooks;\n        // camelCase, specialEasing and expand cssHook pass\n        for (index in props) {\n            name = jQuery.camelCase(index);\n            easing = specialEasing[name];\n            value = props[index];\n            if (Array.isArray(value)) {\n                easing = value[1];\n                value = props[index] = value[0];\n            }\n            if (index !== name) {\n                props[name] = value;\n                delete props[index];\n            }\n            hooks = jQuery.cssHooks[name];\n            if (hooks && 'expand' in hooks) {\n                value = hooks.expand(value);\n                delete props[name];\n                // Not quite $.extend, this won't overwrite existing keys.\n                // Reusing 'index' because we have the correct \"name\"\n                for (index in value) {\n                    if (!(index in props)) {\n                        props[index] = value[index];\n                        specialEasing[index] = easing;\n                    }\n                }\n            } else {\n                specialEasing[name] = easing;\n            }\n        }\n    }\n    function Animation(elem, properties, options) {\n        var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always(function () {\n                // Don't match elem in the :animated selector\n                delete tick.elem;\n            }), tick = function () {\n                if (stopped) {\n                    return false;\n                }\n                var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\n                    // Support: Android 2.3 only\n                    // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\n                    temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length;\n                for (; index < length; index++) {\n                    animation.tweens[index].run(percent);\n                }\n                deferred.notifyWith(elem, [\n                    animation,\n                    percent,\n                    remaining\n                ]);\n                // If there's more to do, yield\n                if (percent < 1 && length) {\n                    return remaining;\n                }\n                // If this was an empty animation, synthesize a final progress notification\n                if (!length) {\n                    deferred.notifyWith(elem, [\n                        animation,\n                        1,\n                        0\n                    ]);\n                }\n                // Resolve the animation and report its conclusion\n                deferred.resolveWith(elem, [animation]);\n                return false;\n            }, animation = deferred.promise({\n                elem: elem,\n                props: jQuery.extend({}, properties),\n                opts: jQuery.extend(true, {\n                    specialEasing: {},\n                    easing: jQuery.easing._default\n                }, options),\n                originalProperties: properties,\n                originalOptions: options,\n                startTime: fxNow || createFxNow(),\n                duration: options.duration,\n                tweens: [],\n                createTween: function (prop, end) {\n                    var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);\n                    animation.tweens.push(tween);\n                    return tween;\n                },\n                stop: function (gotoEnd) {\n                    var index = 0,\n                        // If we are going to the end, we want to run all the tweens\n                        // otherwise we skip this part\n                        length = gotoEnd ? animation.tweens.length : 0;\n                    if (stopped) {\n                        return this;\n                    }\n                    stopped = true;\n                    for (; index < length; index++) {\n                        animation.tweens[index].run(1);\n                    }\n                    // Resolve when we played the last frame; otherwise, reject\n                    if (gotoEnd) {\n                        deferred.notifyWith(elem, [\n                            animation,\n                            1,\n                            0\n                        ]);\n                        deferred.resolveWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    } else {\n                        deferred.rejectWith(elem, [\n                            animation,\n                            gotoEnd\n                        ]);\n                    }\n                    return this;\n                }\n            }), props = animation.props;\n        propFilter(props, animation.opts.specialEasing);\n        for (; index < length; index++) {\n            result = Animation.prefilters[index].call(animation, elem, props, animation.opts);\n            if (result) {\n                if (jQuery.isFunction(result.stop)) {\n                    jQuery._queueHooks(animation.elem, animation.opts.queue).stop = jQuery.proxy(result.stop, result);\n                }\n                return result;\n            }\n        }\n        jQuery.map(props, createTween, animation);\n        if (jQuery.isFunction(animation.opts.start)) {\n            animation.opts.start.call(elem, animation);\n        }\n        // Attach callbacks from options\n        animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);\n        jQuery.fx.timer(jQuery.extend(tick, {\n            elem: elem,\n            anim: animation,\n            queue: animation.opts.queue\n        }));\n        return animation;\n    }\n    jQuery.Animation = jQuery.extend(Animation, {\n        tweeners: {\n            '*': [function (prop, value) {\n                    var tween = this.createTween(prop, value);\n                    adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);\n                    return tween;\n                }]\n        },\n        tweener: function (props, callback) {\n            if (jQuery.isFunction(props)) {\n                callback = props;\n                props = ['*'];\n            } else {\n                props = props.match(rnothtmlwhite);\n            }\n            var prop, index = 0, length = props.length;\n            for (; index < length; index++) {\n                prop = props[index];\n                Animation.tweeners[prop] = Animation.tweeners[prop] || [];\n                Animation.tweeners[prop].unshift(callback);\n            }\n        },\n        prefilters: [defaultPrefilter],\n        prefilter: function (callback, prepend) {\n            if (prepend) {\n                Animation.prefilters.unshift(callback);\n            } else {\n                Animation.prefilters.push(callback);\n            }\n        }\n    });\n    jQuery.speed = function (speed, easing, fn) {\n        var opt = speed && typeof speed === 'object' ? jQuery.extend({}, speed) : {\n            complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,\n            duration: speed,\n            easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\n        };\n        // Go to the end state if fx are off\n        if (jQuery.fx.off) {\n            opt.duration = 0;\n        } else {\n            if (typeof opt.duration !== 'number') {\n                if (opt.duration in jQuery.fx.speeds) {\n                    opt.duration = jQuery.fx.speeds[opt.duration];\n                } else {\n                    opt.duration = jQuery.fx.speeds._default;\n                }\n            }\n        }\n        // Normalize opt.queue - true/undefined/null -> \"fx\"\n        if (opt.queue == null || opt.queue === true) {\n            opt.queue = 'fx';\n        }\n        // Queueing\n        opt.old = opt.complete;\n        opt.complete = function () {\n            if (jQuery.isFunction(opt.old)) {\n                opt.old.call(this);\n            }\n            if (opt.queue) {\n                jQuery.dequeue(this, opt.queue);\n            }\n        };\n        return opt;\n    };\n    jQuery.fn.extend({\n        fadeTo: function (speed, to, easing, callback) {\n            // Show any hidden elements after setting opacity to 0\n            return this.filter(isHiddenWithinTree).css('opacity', 0).show()    // Animate to the value specified\n.end().animate({ opacity: to }, speed, easing, callback);\n        },\n        animate: function (prop, speed, easing, callback) {\n            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function () {\n                    // Operate on a copy of prop so per-property easing won't be lost\n                    var anim = Animation(this, jQuery.extend({}, prop), optall);\n                    // Empty animations, or finishing resolves immediately\n                    if (empty || dataPriv.get(this, 'finish')) {\n                        anim.stop(true);\n                    }\n                };\n            doAnimation.finish = doAnimation;\n            return empty || optall.queue === false ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);\n        },\n        stop: function (type, clearQueue, gotoEnd) {\n            var stopQueue = function (hooks) {\n                var stop = hooks.stop;\n                delete hooks.stop;\n                stop(gotoEnd);\n            };\n            if (typeof type !== 'string') {\n                gotoEnd = clearQueue;\n                clearQueue = type;\n                type = undefined;\n            }\n            if (clearQueue && type !== false) {\n                this.queue(type || 'fx', []);\n            }\n            return this.each(function () {\n                var dequeue = true, index = type != null && type + 'queueHooks', timers = jQuery.timers, data = dataPriv.get(this);\n                if (index) {\n                    if (data[index] && data[index].stop) {\n                        stopQueue(data[index]);\n                    }\n                } else {\n                    for (index in data) {\n                        if (data[index] && data[index].stop && rrun.test(index)) {\n                            stopQueue(data[index]);\n                        }\n                    }\n                }\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\n                        timers[index].anim.stop(gotoEnd);\n                        dequeue = false;\n                        timers.splice(index, 1);\n                    }\n                }\n                // Start the next in the queue if the last step wasn't forced.\n                // Timers currently will call their complete callbacks, which\n                // will dequeue but only if they were gotoEnd.\n                if (dequeue || !gotoEnd) {\n                    jQuery.dequeue(this, type);\n                }\n            });\n        },\n        finish: function (type) {\n            if (type !== false) {\n                type = type || 'fx';\n            }\n            return this.each(function () {\n                var index, data = dataPriv.get(this), queue = data[type + 'queue'], hooks = data[type + 'queueHooks'], timers = jQuery.timers, length = queue ? queue.length : 0;\n                // Enable finishing flag on private data\n                data.finish = true;\n                // Empty the queue first\n                jQuery.queue(this, type, []);\n                if (hooks && hooks.stop) {\n                    hooks.stop.call(this, true);\n                }\n                // Look for any active animations, and finish them\n                for (index = timers.length; index--;) {\n                    if (timers[index].elem === this && timers[index].queue === type) {\n                        timers[index].anim.stop(true);\n                        timers.splice(index, 1);\n                    }\n                }\n                // Look for any animations in the old queue and finish them\n                for (index = 0; index < length; index++) {\n                    if (queue[index] && queue[index].finish) {\n                        queue[index].finish.call(this);\n                    }\n                }\n                // Turn off finishing flag\n                delete data.finish;\n            });\n        }\n    });\n    jQuery.each([\n        'toggle',\n        'show',\n        'hide'\n    ], function (i, name) {\n        var cssFn = jQuery.fn[name];\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return speed == null || typeof speed === 'boolean' ? cssFn.apply(this, arguments) : this.animate(genFx(name, true), speed, easing, callback);\n        };\n    });\n    // Generate shortcuts for custom animations\n    jQuery.each({\n        slideDown: genFx('show'),\n        slideUp: genFx('hide'),\n        slideToggle: genFx('toggle'),\n        fadeIn: { opacity: 'show' },\n        fadeOut: { opacity: 'hide' },\n        fadeToggle: { opacity: 'toggle' }\n    }, function (name, props) {\n        jQuery.fn[name] = function (speed, easing, callback) {\n            return this.animate(props, speed, easing, callback);\n        };\n    });\n    jQuery.timers = [];\n    jQuery.fx.tick = function () {\n        var timer, i = 0, timers = jQuery.timers;\n        fxNow = jQuery.now();\n        for (; i < timers.length; i++) {\n            timer = timers[i];\n            // Run the timer and safely remove it when done (allowing for external removal)\n            if (!timer() && timers[i] === timer) {\n                timers.splice(i--, 1);\n            }\n        }\n        if (!timers.length) {\n            jQuery.fx.stop();\n        }\n        fxNow = undefined;\n    };\n    jQuery.fx.timer = function (timer) {\n        jQuery.timers.push(timer);\n        jQuery.fx.start();\n    };\n    jQuery.fx.interval = 13;\n    jQuery.fx.start = function () {\n        if (inProgress) {\n            return;\n        }\n        inProgress = true;\n        schedule();\n    };\n    jQuery.fx.stop = function () {\n        inProgress = null;\n    };\n    jQuery.fx.speeds = {\n        slow: 600,\n        fast: 200,\n        // Default speed\n        _default: 400\n    };\n    // Based off of the plugin by Clint Helfers, with permission.\n    // https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\n    jQuery.fn.delay = function (time, type) {\n        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\n        type = type || 'fx';\n        return this.queue(type, function (next, hooks) {\n            var timeout = window.setTimeout(next, time);\n            hooks.stop = function () {\n                window.clearTimeout(timeout);\n            };\n        });\n    };\n    (function () {\n        var input = document.createElement('input'), select = document.createElement('select'), opt = select.appendChild(document.createElement('option'));\n        input.type = 'checkbox';\n        // Support: Android <=4.3 only\n        // Default value for a checkbox should be \"on\"\n        support.checkOn = input.value !== '';\n        // Support: IE <=11 only\n        // Must access selectedIndex to make default options select\n        support.optSelected = opt.selected;\n        // Support: IE <=11 only\n        // An input loses its value after becoming a radio\n        input = document.createElement('input');\n        input.value = 't';\n        input.type = 'radio';\n        support.radioValue = input.value === 't';\n    }());\n    var boolHook, attrHandle = jQuery.expr.attrHandle;\n    jQuery.fn.extend({\n        attr: function (name, value) {\n            return access(this, jQuery.attr, name, value, arguments.length > 1);\n        },\n        removeAttr: function (name) {\n            return this.each(function () {\n                jQuery.removeAttr(this, name);\n            });\n        }\n    });\n    jQuery.extend({\n        attr: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set attributes on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            // Fallback to prop when attributes are not supported\n            if (typeof elem.getAttribute === 'undefined') {\n                return jQuery.prop(elem, name, value);\n            }\n            // Attribute hooks are determined by the lowercase version\n            // Grab necessary hook if one is defined\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                hooks = jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name) ? boolHook : undefined);\n            }\n            if (value !== undefined) {\n                if (value === null) {\n                    jQuery.removeAttr(elem, name);\n                    return;\n                }\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                elem.setAttribute(name, value + '');\n                return value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            ret = jQuery.find.attr(elem, name);\n            // Non-existent attributes return null, we normalize to undefined\n            return ret == null ? undefined : ret;\n        },\n        attrHooks: {\n            type: {\n                set: function (elem, value) {\n                    if (!support.radioValue && value === 'radio' && nodeName(elem, 'input')) {\n                        var val = elem.value;\n                        elem.setAttribute('type', value);\n                        if (val) {\n                            elem.value = val;\n                        }\n                        return value;\n                    }\n                }\n            }\n        },\n        removeAttr: function (elem, value) {\n            var name, i = 0,\n                // Attribute names can contain non-HTML whitespace characters\n                // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n                attrNames = value && value.match(rnothtmlwhite);\n            if (attrNames && elem.nodeType === 1) {\n                while (name = attrNames[i++]) {\n                    elem.removeAttribute(name);\n                }\n            }\n        }\n    });\n    // Hooks for boolean attributes\n    boolHook = {\n        set: function (elem, value, name) {\n            if (value === false) {\n                // Remove boolean attributes when set to false\n                jQuery.removeAttr(elem, name);\n            } else {\n                elem.setAttribute(name, name);\n            }\n            return name;\n        }\n    };\n    jQuery.each(jQuery.expr.match.bool.source.match(/\\w+/g), function (i, name) {\n        var getter = attrHandle[name] || jQuery.find.attr;\n        attrHandle[name] = function (elem, name, isXML) {\n            var ret, handle, lowercaseName = name.toLowerCase();\n            if (!isXML) {\n                // Avoid an infinite loop by temporarily removing this function from the getter\n                handle = attrHandle[lowercaseName];\n                attrHandle[lowercaseName] = ret;\n                ret = getter(elem, name, isXML) != null ? lowercaseName : null;\n                attrHandle[lowercaseName] = handle;\n            }\n            return ret;\n        };\n    });\n    var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;\n    jQuery.fn.extend({\n        prop: function (name, value) {\n            return access(this, jQuery.prop, name, value, arguments.length > 1);\n        },\n        removeProp: function (name) {\n            return this.each(function () {\n                delete this[jQuery.propFix[name] || name];\n            });\n        }\n    });\n    jQuery.extend({\n        prop: function (elem, name, value) {\n            var ret, hooks, nType = elem.nodeType;\n            // Don't get/set properties on text, comment and attribute nodes\n            if (nType === 3 || nType === 8 || nType === 2) {\n                return;\n            }\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\n                // Fix name and attach hooks\n                name = jQuery.propFix[name] || name;\n                hooks = jQuery.propHooks[name];\n            }\n            if (value !== undefined) {\n                if (hooks && 'set' in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\n                    return ret;\n                }\n                return elem[name] = value;\n            }\n            if (hooks && 'get' in hooks && (ret = hooks.get(elem, name)) !== null) {\n                return ret;\n            }\n            return elem[name];\n        },\n        propHooks: {\n            tabIndex: {\n                get: function (elem) {\n                    // Support: IE <=9 - 11 only\n                    // elem.tabIndex doesn't always return the\n                    // correct value when it hasn't been explicitly set\n                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\n                    // Use proper attribute retrieval(#12072)\n                    var tabindex = jQuery.find.attr(elem, 'tabindex');\n                    if (tabindex) {\n                        return parseInt(tabindex, 10);\n                    }\n                    if (rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href) {\n                        return 0;\n                    }\n                    return -1;\n                }\n            }\n        },\n        propFix: {\n            'for': 'htmlFor',\n            'class': 'className'\n        }\n    });\n    // Support: IE <=11 only\n    // Accessing the selectedIndex property\n    // forces the browser to respect setting selected\n    // on the option\n    // The getter ensures a default option is selected\n    // when in an optgroup\n    // eslint rule \"no-unused-expressions\" is disabled for this code\n    // since it considers such accessions noop\n    if (!support.optSelected) {\n        jQuery.propHooks.selected = {\n            get: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent && parent.parentNode) {\n                    parent.parentNode.selectedIndex;\n                }\n                return null;\n            },\n            set: function (elem) {\n                /* eslint no-unused-expressions: \"off\" */\n                var parent = elem.parentNode;\n                if (parent) {\n                    parent.selectedIndex;\n                    if (parent.parentNode) {\n                        parent.parentNode.selectedIndex;\n                    }\n                }\n            }\n        };\n    }\n    jQuery.each([\n        'tabIndex',\n        'readOnly',\n        'maxLength',\n        'cellSpacing',\n        'cellPadding',\n        'rowSpan',\n        'colSpan',\n        'useMap',\n        'frameBorder',\n        'contentEditable'\n    ], function () {\n        jQuery.propFix[this.toLowerCase()] = this;\n    });\n    // Strip and collapse whitespace according to HTML spec\n    // https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\n    function stripAndCollapse(value) {\n        var tokens = value.match(rnothtmlwhite) || [];\n        return tokens.join(' ');\n    }\n    function getClass(elem) {\n        return elem.getAttribute && elem.getAttribute('class') || '';\n    }\n    jQuery.fn.extend({\n        addClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).addClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            if (cur.indexOf(' ' + clazz + ' ') < 0) {\n                                cur += clazz + ' ';\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        removeClass: function (value) {\n            var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;\n            if (jQuery.isFunction(value)) {\n                return this.each(function (j) {\n                    jQuery(this).removeClass(value.call(this, j, getClass(this)));\n                });\n            }\n            if (!arguments.length) {\n                return this.attr('class', '');\n            }\n            if (typeof value === 'string' && value) {\n                classes = value.match(rnothtmlwhite) || [];\n                while (elem = this[i++]) {\n                    curValue = getClass(elem);\n                    // This expression is here for better compressibility (see addClass)\n                    cur = elem.nodeType === 1 && ' ' + stripAndCollapse(curValue) + ' ';\n                    if (cur) {\n                        j = 0;\n                        while (clazz = classes[j++]) {\n                            // Remove *all* instances\n                            while (cur.indexOf(' ' + clazz + ' ') > -1) {\n                                cur = cur.replace(' ' + clazz + ' ', ' ');\n                            }\n                        }\n                        // Only assign if different to avoid unneeded rendering.\n                        finalValue = stripAndCollapse(cur);\n                        if (curValue !== finalValue) {\n                            elem.setAttribute('class', finalValue);\n                        }\n                    }\n                }\n            }\n            return this;\n        },\n        toggleClass: function (value, stateVal) {\n            var type = typeof value;\n            if (typeof stateVal === 'boolean' && type === 'string') {\n                return stateVal ? this.addClass(value) : this.removeClass(value);\n            }\n            if (jQuery.isFunction(value)) {\n                return this.each(function (i) {\n                    jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);\n                });\n            }\n            return this.each(function () {\n                var className, i, self, classNames;\n                if (type === 'string') {\n                    // Toggle individual class names\n                    i = 0;\n                    self = jQuery(this);\n                    classNames = value.match(rnothtmlwhite) || [];\n                    while (className = classNames[i++]) {\n                        // Check each className given, space separated list\n                        if (self.hasClass(className)) {\n                            self.removeClass(className);\n                        } else {\n                            self.addClass(className);\n                        }\n                    }    // Toggle whole class name\n                } else if (value === undefined || type === 'boolean') {\n                    className = getClass(this);\n                    if (className) {\n                        // Store className if set\n                        dataPriv.set(this, '__className__', className);\n                    }\n                    // If the element has a class name or if we're passed `false`,\n                    // then remove the whole classname (if there was one, the above saved it).\n                    // Otherwise bring back whatever was previously saved (if anything),\n                    // falling back to the empty string if nothing was stored.\n                    if (this.setAttribute) {\n                        this.setAttribute('class', className || value === false ? '' : dataPriv.get(this, '__className__') || '');\n                    }\n                }\n            });\n        },\n        hasClass: function (selector) {\n            var className, elem, i = 0;\n            className = ' ' + selector + ' ';\n            while (elem = this[i++]) {\n                if (elem.nodeType === 1 && (' ' + stripAndCollapse(getClass(elem)) + ' ').indexOf(className) > -1) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    });\n    var rreturn = /\\r/g;\n    jQuery.fn.extend({\n        val: function (value) {\n            var hooks, ret, isFunction, elem = this[0];\n            if (!arguments.length) {\n                if (elem) {\n                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\n                    if (hooks && 'get' in hooks && (ret = hooks.get(elem, 'value')) !== undefined) {\n                        return ret;\n                    }\n                    ret = elem.value;\n                    // Handle most common string cases\n                    if (typeof ret === 'string') {\n                        return ret.replace(rreturn, '');\n                    }\n                    // Handle cases where value is null/undef or number\n                    return ret == null ? '' : ret;\n                }\n                return;\n            }\n            isFunction = jQuery.isFunction(value);\n            return this.each(function (i) {\n                var val;\n                if (this.nodeType !== 1) {\n                    return;\n                }\n                if (isFunction) {\n                    val = value.call(this, i, jQuery(this).val());\n                } else {\n                    val = value;\n                }\n                // Treat null/undefined as \"\"; convert numbers to string\n                if (val == null) {\n                    val = '';\n                } else if (typeof val === 'number') {\n                    val += '';\n                } else if (Array.isArray(val)) {\n                    val = jQuery.map(val, function (value) {\n                        return value == null ? '' : value + '';\n                    });\n                }\n                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\n                // If set returns undefined, fall back to normal setting\n                if (!hooks || !('set' in hooks) || hooks.set(this, val, 'value') === undefined) {\n                    this.value = val;\n                }\n            });\n        }\n    });\n    jQuery.extend({\n        valHooks: {\n            option: {\n                get: function (elem) {\n                    var val = jQuery.find.attr(elem, 'value');\n                    return val != null ? val : // Support: IE <=10 - 11 only\n                    // option.text throws exceptions (#14686, #14858)\n                    // Strip and collapse whitespace\n                    // https://html.spec.whatwg.org/#strip-and-collapse-whitespace\n                    stripAndCollapse(jQuery.text(elem));\n                }\n            },\n            select: {\n                get: function (elem) {\n                    var value, option, i, options = elem.options, index = elem.selectedIndex, one = elem.type === 'select-one', values = one ? null : [], max = one ? index + 1 : options.length;\n                    if (index < 0) {\n                        i = max;\n                    } else {\n                        i = one ? index : 0;\n                    }\n                    // Loop through all the selected options\n                    for (; i < max; i++) {\n                        option = options[i];\n                        // Support: IE <=9 only\n                        // IE8-9 doesn't update selected after form reset (#2551)\n                        if ((option.selected || i === index) && // Don't return options that are disabled or in a disabled optgroup\n                            !option.disabled && (!option.parentNode.disabled || !nodeName(option.parentNode, 'optgroup'))) {\n                            // Get the specific value for the option\n                            value = jQuery(option).val();\n                            // We don't need an array for one selects\n                            if (one) {\n                                return value;\n                            }\n                            // Multi-Selects return an array\n                            values.push(value);\n                        }\n                    }\n                    return values;\n                },\n                set: function (elem, value) {\n                    var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;\n                    while (i--) {\n                        option = options[i];\n                        /* eslint-disable no-cond-assign */\n                        if (option.selected = jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1) {\n                            optionSet = true;\n                        }    /* eslint-enable no-cond-assign */\n                    }\n                    // Force browsers to behave consistently when non-matching value is set\n                    if (!optionSet) {\n                        elem.selectedIndex = -1;\n                    }\n                    return values;\n                }\n            }\n        }\n    });\n    // Radios and checkboxes getter/setter\n    jQuery.each([\n        'radio',\n        'checkbox'\n    ], function () {\n        jQuery.valHooks[this] = {\n            set: function (elem, value) {\n                if (Array.isArray(value)) {\n                    return elem.checked = jQuery.inArray(jQuery(elem).val(), value) > -1;\n                }\n            }\n        };\n        if (!support.checkOn) {\n            jQuery.valHooks[this].get = function (elem) {\n                return elem.getAttribute('value') === null ? 'on' : elem.value;\n            };\n        }\n    });\n    // Return jQuery for attributes-only inclusion\n    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\n    jQuery.extend(jQuery.event, {\n        trigger: function (event, data, elem, onlyHandlers) {\n            var i, cur, tmp, bubbleType, ontype, handle, special, eventPath = [elem || document], type = hasOwn.call(event, 'type') ? event.type : event, namespaces = hasOwn.call(event, 'namespace') ? event.namespace.split('.') : [];\n            cur = tmp = elem = elem || document;\n            // Don't do events on text and comment nodes\n            if (elem.nodeType === 3 || elem.nodeType === 8) {\n                return;\n            }\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\n            if (rfocusMorph.test(type + jQuery.event.triggered)) {\n                return;\n            }\n            if (type.indexOf('.') > -1) {\n                // Namespaced trigger; create a regexp to match event type in handle()\n                namespaces = type.split('.');\n                type = namespaces.shift();\n                namespaces.sort();\n            }\n            ontype = type.indexOf(':') < 0 && 'on' + type;\n            // Caller can pass in a jQuery.Event object, Object, or just an event type string\n            event = event[jQuery.expando] ? event : new jQuery.Event(type, typeof event === 'object' && event);\n            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n            event.isTrigger = onlyHandlers ? 2 : 3;\n            event.namespace = namespaces.join('.');\n            event.rnamespace = event.namespace ? new RegExp('(^|\\\\.)' + namespaces.join('\\\\.(?:.*\\\\.|)') + '(\\\\.|$)') : null;\n            // Clean up the event in case it is being reused\n            event.result = undefined;\n            if (!event.target) {\n                event.target = elem;\n            }\n            // Clone any incoming data and prepend the event, creating the handler arg list\n            data = data == null ? [event] : jQuery.makeArray(data, [event]);\n            // Allow special events to draw outside the lines\n            special = jQuery.event.special[type] || {};\n            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\n                return;\n            }\n            // Determine event propagation path in advance, per W3C events spec (#9951)\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\n                bubbleType = special.delegateType || type;\n                if (!rfocusMorph.test(bubbleType + type)) {\n                    cur = cur.parentNode;\n                }\n                for (; cur; cur = cur.parentNode) {\n                    eventPath.push(cur);\n                    tmp = cur;\n                }\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\n                if (tmp === (elem.ownerDocument || document)) {\n                    eventPath.push(tmp.defaultView || tmp.parentWindow || window);\n                }\n            }\n            // Fire handlers on the event path\n            i = 0;\n            while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\n                event.type = i > 1 ? bubbleType : special.bindType || type;\n                // jQuery handler\n                handle = (dataPriv.get(cur, 'events') || {})[event.type] && dataPriv.get(cur, 'handle');\n                if (handle) {\n                    handle.apply(cur, data);\n                }\n                // Native handler\n                handle = ontype && cur[ontype];\n                if (handle && handle.apply && acceptData(cur)) {\n                    event.result = handle.apply(cur, data);\n                    if (event.result === false) {\n                        event.preventDefault();\n                    }\n                }\n            }\n            event.type = type;\n            // If nobody prevented the default action, do it now\n            if (!onlyHandlers && !event.isDefaultPrevented()) {\n                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) && acceptData(elem)) {\n                    // Call a native DOM method on the target with the same name as the event.\n                    // Don't do default actions on window, that's where global variables be (#6170)\n                    if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\n                        // Don't re-trigger an onFOO event when we call its FOO() method\n                        tmp = elem[ontype];\n                        if (tmp) {\n                            elem[ontype] = null;\n                        }\n                        // Prevent re-triggering of the same event, since we already bubbled it above\n                        jQuery.event.triggered = type;\n                        elem[type]();\n                        jQuery.event.triggered = undefined;\n                        if (tmp) {\n                            elem[ontype] = tmp;\n                        }\n                    }\n                }\n            }\n            return event.result;\n        },\n        // Piggyback on a donor event to simulate a different one\n        // Used only for `focus(in | out)` events\n        simulate: function (type, elem, event) {\n            var e = jQuery.extend(new jQuery.Event(), event, {\n                type: type,\n                isSimulated: true\n            });\n            jQuery.event.trigger(e, null, elem);\n        }\n    });\n    jQuery.fn.extend({\n        trigger: function (type, data) {\n            return this.each(function () {\n                jQuery.event.trigger(type, data, this);\n            });\n        },\n        triggerHandler: function (type, data) {\n            var elem = this[0];\n            if (elem) {\n                return jQuery.event.trigger(type, data, elem, true);\n            }\n        }\n    });\n    jQuery.each(('blur focus focusin focusout resize scroll click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select submit keydown keypress keyup contextmenu').split(' '), function (i, name) {\n        // Handle event binding\n        jQuery.fn[name] = function (data, fn) {\n            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);\n        };\n    });\n    jQuery.fn.extend({\n        hover: function (fnOver, fnOut) {\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\n        }\n    });\n    support.focusin = 'onfocusin' in window;\n    // Support: Firefox <=44\n    // Firefox doesn't have focus(in | out) events\n    // Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\n    //\n    // Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\n    // focus(in | out) events fire after focus & blur events,\n    // which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\n    // Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\n    if (!support.focusin) {\n        jQuery.each({\n            focus: 'focusin',\n            blur: 'focusout'\n        }, function (orig, fix) {\n            // Attach a single capturing handler on the document while someone wants focusin/focusout\n            var handler = function (event) {\n                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));\n            };\n            jQuery.event.special[fix] = {\n                setup: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix);\n                    if (!attaches) {\n                        doc.addEventListener(orig, handler, true);\n                    }\n                    dataPriv.access(doc, fix, (attaches || 0) + 1);\n                },\n                teardown: function () {\n                    var doc = this.ownerDocument || this, attaches = dataPriv.access(doc, fix) - 1;\n                    if (!attaches) {\n                        doc.removeEventListener(orig, handler, true);\n                        dataPriv.remove(doc, fix);\n                    } else {\n                        dataPriv.access(doc, fix, attaches);\n                    }\n                }\n            };\n        });\n    }\n    var location = window.location;\n    var nonce = jQuery.now();\n    var rquery = /\\?/;\n    // Cross-browser xml parsing\n    jQuery.parseXML = function (data) {\n        var xml;\n        if (!data || typeof data !== 'string') {\n            return null;\n        }\n        // Support: IE 9 - 11 only\n        // IE throws on parseFromString with invalid input.\n        try {\n            xml = new window.DOMParser().parseFromString(data, 'text/xml');\n        } catch (e) {\n            xml = undefined;\n        }\n        if (!xml || xml.getElementsByTagName('parsererror').length) {\n            jQuery.error('Invalid XML: ' + data);\n        }\n        return xml;\n    };\n    var rbracket = /\\[\\]$/, rCRLF = /\\r?\\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;\n    function buildParams(prefix, obj, traditional, add) {\n        var name;\n        if (Array.isArray(obj)) {\n            // Serialize array item.\n            jQuery.each(obj, function (i, v) {\n                if (traditional || rbracket.test(prefix)) {\n                    // Treat each array item as a scalar.\n                    add(prefix, v);\n                } else {\n                    // Item is non-scalar (array or object), encode its numeric index.\n                    buildParams(prefix + '[' + (typeof v === 'object' && v != null ? i : '') + ']', v, traditional, add);\n                }\n            });\n        } else if (!traditional && jQuery.type(obj) === 'object') {\n            // Serialize object item.\n            for (name in obj) {\n                buildParams(prefix + '[' + name + ']', obj[name], traditional, add);\n            }\n        } else {\n            // Serialize scalar item.\n            add(prefix, obj);\n        }\n    }\n    // Serialize an array of form elements or a set of\n    // key/values into a query string\n    jQuery.param = function (a, traditional) {\n        var prefix, s = [], add = function (key, valueOrFunction) {\n                // If value is a function, invoke it and use its return value\n                var value = jQuery.isFunction(valueOrFunction) ? valueOrFunction() : valueOrFunction;\n                s[s.length] = encodeURIComponent(key) + '=' + encodeURIComponent(value == null ? '' : value);\n            };\n        // If an array was passed in, assume that it is an array of form elements.\n        if (Array.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) {\n            // Serialize the form elements\n            jQuery.each(a, function () {\n                add(this.name, this.value);\n            });\n        } else {\n            // If traditional, encode the \"old\" way (the way 1.3.2 or older\n            // did it), otherwise encode params recursively.\n            for (prefix in a) {\n                buildParams(prefix, a[prefix], traditional, add);\n            }\n        }\n        // Return the resulting serialization\n        return s.join('&');\n    };\n    jQuery.fn.extend({\n        serialize: function () {\n            return jQuery.param(this.serializeArray());\n        },\n        serializeArray: function () {\n            return this.map(function () {\n                // Can add propHook for \"elements\" to filter or add form elements\n                var elements = jQuery.prop(this, 'elements');\n                return elements ? jQuery.makeArray(elements) : this;\n            }).filter(function () {\n                var type = this.type;\n                // Use .is( \":disabled\" ) so that fieldset[disabled] works\n                return this.name && !jQuery(this).is(':disabled') && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !rcheckableType.test(type));\n            }).map(function (i, elem) {\n                var val = jQuery(this).val();\n                if (val == null) {\n                    return null;\n                }\n                if (Array.isArray(val)) {\n                    return jQuery.map(val, function (val) {\n                        return {\n                            name: elem.name,\n                            value: val.replace(rCRLF, '\\r\\n')\n                        };\n                    });\n                }\n                return {\n                    name: elem.name,\n                    value: val.replace(rCRLF, '\\r\\n')\n                };\n            }).get();\n        }\n    });\n    var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n        // #7653, #8125, #8152: local protocol detection\n        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\\/\\//,\n        /* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n        prefilters = {},\n        /* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n        transports = {},\n        // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n        allTypes = '*/'.concat('*'),\n        // Anchor tag for parsing the document origin\n        originAnchor = document.createElement('a');\n    originAnchor.href = location.href;\n    // Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\n    function addToPrefiltersOrTransports(structure) {\n        // dataTypeExpression is optional and defaults to \"*\"\n        return function (dataTypeExpression, func) {\n            if (typeof dataTypeExpression !== 'string') {\n                func = dataTypeExpression;\n                dataTypeExpression = '*';\n            }\n            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(rnothtmlwhite) || [];\n            if (jQuery.isFunction(func)) {\n                // For each dataType in the dataTypeExpression\n                while (dataType = dataTypes[i++]) {\n                    // Prepend if requested\n                    if (dataType[0] === '+') {\n                        dataType = dataType.slice(1) || '*';\n                        (structure[dataType] = structure[dataType] || []).unshift(func);    // Otherwise append\n                    } else {\n                        (structure[dataType] = structure[dataType] || []).push(func);\n                    }\n                }\n            }\n        };\n    }\n    // Base inspection function for prefilters and transports\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\n        var inspected = {}, seekingTransport = structure === transports;\n        function inspect(dataType) {\n            var selected;\n            inspected[dataType] = true;\n            jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\n                if (typeof dataTypeOrTransport === 'string' && !seekingTransport && !inspected[dataTypeOrTransport]) {\n                    options.dataTypes.unshift(dataTypeOrTransport);\n                    inspect(dataTypeOrTransport);\n                    return false;\n                } else if (seekingTransport) {\n                    return !(selected = dataTypeOrTransport);\n                }\n            });\n            return selected;\n        }\n        return inspect(options.dataTypes[0]) || !inspected['*'] && inspect('*');\n    }\n    // A special extend for ajax options\n    // that takes \"flat\" options (not to be deep extended)\n    // Fixes #9887\n    function ajaxExtend(target, src) {\n        var key, deep, flatOptions = jQuery.ajaxSettings.flatOptions || {};\n        for (key in src) {\n            if (src[key] !== undefined) {\n                (flatOptions[key] ? target : deep || (deep = {}))[key] = src[key];\n            }\n        }\n        if (deep) {\n            jQuery.extend(true, target, deep);\n        }\n        return target;\n    }\n    /* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\n    function ajaxHandleResponses(s, jqXHR, responses) {\n        var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;\n        // Remove auto dataType and get content-type in the process\n        while (dataTypes[0] === '*') {\n            dataTypes.shift();\n            if (ct === undefined) {\n                ct = s.mimeType || jqXHR.getResponseHeader('Content-Type');\n            }\n        }\n        // Check if we're dealing with a known content-type\n        if (ct) {\n            for (type in contents) {\n                if (contents[type] && contents[type].test(ct)) {\n                    dataTypes.unshift(type);\n                    break;\n                }\n            }\n        }\n        // Check to see if we have a response for the expected dataType\n        if (dataTypes[0] in responses) {\n            finalDataType = dataTypes[0];\n        } else {\n            // Try convertible dataTypes\n            for (type in responses) {\n                if (!dataTypes[0] || s.converters[type + ' ' + dataTypes[0]]) {\n                    finalDataType = type;\n                    break;\n                }\n                if (!firstDataType) {\n                    firstDataType = type;\n                }\n            }\n            // Or just use first one\n            finalDataType = finalDataType || firstDataType;\n        }\n        // If we found a dataType\n        // We add the dataType to the list if needed\n        // and return the corresponding response\n        if (finalDataType) {\n            if (finalDataType !== dataTypes[0]) {\n                dataTypes.unshift(finalDataType);\n            }\n            return responses[finalDataType];\n        }\n    }\n    /* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\n    function ajaxConvert(s, response, jqXHR, isSuccess) {\n        var conv2, current, conv, tmp, prev, converters = {},\n            // Work with a copy of dataTypes in case we need to modify it for conversion\n            dataTypes = s.dataTypes.slice();\n        // Create converters map with lowercased keys\n        if (dataTypes[1]) {\n            for (conv in s.converters) {\n                converters[conv.toLowerCase()] = s.converters[conv];\n            }\n        }\n        current = dataTypes.shift();\n        // Convert to each sequential dataType\n        while (current) {\n            if (s.responseFields[current]) {\n                jqXHR[s.responseFields[current]] = response;\n            }\n            // Apply the dataFilter if provided\n            if (!prev && isSuccess && s.dataFilter) {\n                response = s.dataFilter(response, s.dataType);\n            }\n            prev = current;\n            current = dataTypes.shift();\n            if (current) {\n                // There's only work to do if current dataType is non-auto\n                if (current === '*') {\n                    current = prev;    // Convert response if prev dataType is non-auto and differs from current\n                } else if (prev !== '*' && prev !== current) {\n                    // Seek a direct converter\n                    conv = converters[prev + ' ' + current] || converters['* ' + current];\n                    // If none found, seek a pair\n                    if (!conv) {\n                        for (conv2 in converters) {\n                            // If conv2 outputs current\n                            tmp = conv2.split(' ');\n                            if (tmp[1] === current) {\n                                // If prev can be converted to accepted input\n                                conv = converters[prev + ' ' + tmp[0]] || converters['* ' + tmp[0]];\n                                if (conv) {\n                                    // Condense equivalence converters\n                                    if (conv === true) {\n                                        conv = converters[conv2];    // Otherwise, insert the intermediate dataType\n                                    } else if (converters[conv2] !== true) {\n                                        current = tmp[0];\n                                        dataTypes.unshift(tmp[1]);\n                                    }\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    // Apply converter (if not an equivalence)\n                    if (conv !== true) {\n                        // Unless errors are allowed to bubble, catch and return them\n                        if (conv && s.throws) {\n                            response = conv(response);\n                        } else {\n                            try {\n                                response = conv(response);\n                            } catch (e) {\n                                return {\n                                    state: 'parsererror',\n                                    error: conv ? e : 'No conversion from ' + prev + ' to ' + current\n                                };\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            state: 'success',\n            data: response\n        };\n    }\n    jQuery.extend({\n        // Counter for holding the number of active queries\n        active: 0,\n        // Last-Modified header cache for next request\n        lastModified: {},\n        etag: {},\n        ajaxSettings: {\n            url: location.href,\n            type: 'GET',\n            isLocal: rlocalProtocol.test(location.protocol),\n            global: true,\n            processData: true,\n            async: true,\n            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',\n            /*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n            accepts: {\n                '*': allTypes,\n                text: 'text/plain',\n                html: 'text/html',\n                xml: 'application/xml, text/xml',\n                json: 'application/json, text/javascript'\n            },\n            contents: {\n                xml: /\\bxml\\b/,\n                html: /\\bhtml/,\n                json: /\\bjson\\b/\n            },\n            responseFields: {\n                xml: 'responseXML',\n                text: 'responseText',\n                json: 'responseJSON'\n            },\n            // Data converters\n            // Keys separate source (or catchall \"*\") and destination types with a single space\n            converters: {\n                // Convert anything to text\n                '* text': String,\n                // Text to html (true = no transformation)\n                'text html': true,\n                // Evaluate text as a json expression\n                'text json': JSON.parse,\n                // Parse text as xml\n                'text xml': jQuery.parseXML\n            },\n            // For options that shouldn't be deep extended:\n            // you can add your own custom options here if\n            // and when you create one that shouldn't be\n            // deep extended (see ajaxExtend)\n            flatOptions: {\n                url: true,\n                context: true\n            }\n        },\n        // Creates a full fledged settings object into target\n        // with both ajaxSettings and settings fields.\n        // If target is omitted, writes into ajaxSettings.\n        ajaxSetup: function (target, settings) {\n            return settings ? // Building a settings object\n            ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : // Extending ajaxSettings\n            ajaxExtend(jQuery.ajaxSettings, target);\n        },\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\n        ajaxTransport: addToPrefiltersOrTransports(transports),\n        // Main method\n        ajax: function (url, options) {\n            // If url is an object, simulate pre-1.5 signature\n            if (typeof url === 'object') {\n                options = url;\n                url = undefined;\n            }\n            // Force options to be an object\n            options = options || {};\n            var transport,\n                // URL without anti-cache param\n                cacheURL,\n                // Response headers\n                responseHeadersString, responseHeaders,\n                // timeout handle\n                timeoutTimer,\n                // Url cleanup var\n                urlAnchor,\n                // Request state (becomes false upon send and true upon completion)\n                completed,\n                // To know if global events are to be dispatched\n                fireGlobals,\n                // Loop variable\n                i,\n                // uncached part of the url\n                uncached,\n                // Create the final options object\n                s = jQuery.ajaxSetup({}, options),\n                // Callbacks context\n                callbackContext = s.context || s,\n                // Context for global events is callbackContext if it is a DOM node or jQuery collection\n                globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event,\n                // Deferreds\n                deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks('once memory'),\n                // Status-dependent callbacks\n                statusCode = s.statusCode || {},\n                // Headers (they are sent all at once)\n                requestHeaders = {}, requestHeadersNames = {},\n                // Default abort message\n                strAbort = 'canceled',\n                // Fake xhr\n                jqXHR = {\n                    readyState: 0,\n                    // Builds headers hashtable if needed\n                    getResponseHeader: function (key) {\n                        var match;\n                        if (completed) {\n                            if (!responseHeaders) {\n                                responseHeaders = {};\n                                while (match = rheaders.exec(responseHeadersString)) {\n                                    responseHeaders[match[1].toLowerCase()] = match[2];\n                                }\n                            }\n                            match = responseHeaders[key.toLowerCase()];\n                        }\n                        return match == null ? null : match;\n                    },\n                    // Raw string\n                    getAllResponseHeaders: function () {\n                        return completed ? responseHeadersString : null;\n                    },\n                    // Caches the header\n                    setRequestHeader: function (name, value) {\n                        if (completed == null) {\n                            name = requestHeadersNames[name.toLowerCase()] = requestHeadersNames[name.toLowerCase()] || name;\n                            requestHeaders[name] = value;\n                        }\n                        return this;\n                    },\n                    // Overrides response content-type header\n                    overrideMimeType: function (type) {\n                        if (completed == null) {\n                            s.mimeType = type;\n                        }\n                        return this;\n                    },\n                    // Status-dependent callbacks\n                    statusCode: function (map) {\n                        var code;\n                        if (map) {\n                            if (completed) {\n                                // Execute the appropriate callbacks\n                                jqXHR.always(map[jqXHR.status]);\n                            } else {\n                                // Lazy-add the new callbacks in a way that preserves old ones\n                                for (code in map) {\n                                    statusCode[code] = [\n                                        statusCode[code],\n                                        map[code]\n                                    ];\n                                }\n                            }\n                        }\n                        return this;\n                    },\n                    // Cancel the request\n                    abort: function (statusText) {\n                        var finalText = statusText || strAbort;\n                        if (transport) {\n                            transport.abort(finalText);\n                        }\n                        done(0, finalText);\n                        return this;\n                    }\n                };\n            // Attach deferreds\n            deferred.promise(jqXHR);\n            // Add protocol if not provided (prefilters might expect it)\n            // Handle falsy url in the settings object (#10093: consistency with old signature)\n            // We also use the url parameter if available\n            s.url = ((url || s.url || location.href) + '').replace(rprotocol, location.protocol + '//');\n            // Alias method option to type as per ticket #12004\n            s.type = options.method || options.type || s.method || s.type;\n            // Extract dataTypes list\n            s.dataTypes = (s.dataType || '*').toLowerCase().match(rnothtmlwhite) || [''];\n            // A cross-domain request is in order when the origin doesn't match the current origin.\n            if (s.crossDomain == null) {\n                urlAnchor = document.createElement('a');\n                // Support: IE <=8 - 11, Edge 12 - 13\n                // IE throws exception on accessing the href property if url is malformed,\n                // e.g. http://example.com:80x/\n                try {\n                    urlAnchor.href = s.url;\n                    // Support: IE <=8 - 11 only\n                    // Anchor's host property isn't correctly set when s.url is relative\n                    urlAnchor.href = urlAnchor.href;\n                    s.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;\n                } catch (e) {\n                    // If there is an error parsing the URL, assume it is crossDomain,\n                    // it can be rejected by the transport if it is invalid\n                    s.crossDomain = true;\n                }\n            }\n            // Convert data if not already a string\n            if (s.data && s.processData && typeof s.data !== 'string') {\n                s.data = jQuery.param(s.data, s.traditional);\n            }\n            // Apply prefilters\n            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\n            // If request was aborted inside a prefilter, stop there\n            if (completed) {\n                return jqXHR;\n            }\n            // We can fire global events as of now if asked to\n            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\n            fireGlobals = jQuery.event && s.global;\n            // Watch for a new set of requests\n            if (fireGlobals && jQuery.active++ === 0) {\n                jQuery.event.trigger('ajaxStart');\n            }\n            // Uppercase the type\n            s.type = s.type.toUpperCase();\n            // Determine if request has content\n            s.hasContent = !rnoContent.test(s.type);\n            // Save the URL in case we're toying with the If-Modified-Since\n            // and/or If-None-Match header later on\n            // Remove hash to simplify url manipulation\n            cacheURL = s.url.replace(rhash, '');\n            // More options handling for requests with no content\n            if (!s.hasContent) {\n                // Remember the hash so we can put it back\n                uncached = s.url.slice(cacheURL.length);\n                // If data is available, append data to url\n                if (s.data) {\n                    cacheURL += (rquery.test(cacheURL) ? '&' : '?') + s.data;\n                    // #9682: remove data so that it's not used in an eventual retry\n                    delete s.data;\n                }\n                // Add or update anti-cache param if needed\n                if (s.cache === false) {\n                    cacheURL = cacheURL.replace(rantiCache, '$1');\n                    uncached = (rquery.test(cacheURL) ? '&' : '?') + '_=' + nonce++ + uncached;\n                }\n                // Put hash and anti-cache on the URL that will be requested (gh-1732)\n                s.url = cacheURL + uncached;    // Change '%20' to '+' if this is encoded form body content (gh-2658)\n            } else if (s.data && s.processData && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0) {\n                s.data = s.data.replace(r20, '+');\n            }\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n            if (s.ifModified) {\n                if (jQuery.lastModified[cacheURL]) {\n                    jqXHR.setRequestHeader('If-Modified-Since', jQuery.lastModified[cacheURL]);\n                }\n                if (jQuery.etag[cacheURL]) {\n                    jqXHR.setRequestHeader('If-None-Match', jQuery.etag[cacheURL]);\n                }\n            }\n            // Set the correct header, if data is being sent\n            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\n                jqXHR.setRequestHeader('Content-Type', s.contentType);\n            }\n            // Set the Accepts header for the server, depending on the dataType\n            jqXHR.setRequestHeader('Accept', s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== '*' ? ', ' + allTypes + '; q=0.01' : '') : s.accepts['*']);\n            // Check for headers option\n            for (i in s.headers) {\n                jqXHR.setRequestHeader(i, s.headers[i]);\n            }\n            // Allow custom headers/mimetypes and early abort\n            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || completed)) {\n                // Abort if not done already and return\n                return jqXHR.abort();\n            }\n            // Aborting is no longer a cancellation\n            strAbort = 'abort';\n            // Install callbacks on deferreds\n            completeDeferred.add(s.complete);\n            jqXHR.done(s.success);\n            jqXHR.fail(s.error);\n            // Get transport\n            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\n            // If no transport, we auto-abort\n            if (!transport) {\n                done(-1, 'No Transport');\n            } else {\n                jqXHR.readyState = 1;\n                // Send global event\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxSend', [\n                        jqXHR,\n                        s\n                    ]);\n                }\n                // If request was aborted inside ajaxSend, stop there\n                if (completed) {\n                    return jqXHR;\n                }\n                // Timeout\n                if (s.async && s.timeout > 0) {\n                    timeoutTimer = window.setTimeout(function () {\n                        jqXHR.abort('timeout');\n                    }, s.timeout);\n                }\n                try {\n                    completed = false;\n                    transport.send(requestHeaders, done);\n                } catch (e) {\n                    // Rethrow post-completion exceptions\n                    if (completed) {\n                        throw e;\n                    }\n                    // Propagate others as results\n                    done(-1, e);\n                }\n            }\n            // Callback for when everything is done\n            function done(status, nativeStatusText, responses, headers) {\n                var isSuccess, success, error, response, modified, statusText = nativeStatusText;\n                // Ignore repeat invocations\n                if (completed) {\n                    return;\n                }\n                completed = true;\n                // Clear timeout if it exists\n                if (timeoutTimer) {\n                    window.clearTimeout(timeoutTimer);\n                }\n                // Dereference transport for early garbage collection\n                // (no matter how long the jqXHR object will be used)\n                transport = undefined;\n                // Cache response headers\n                responseHeadersString = headers || '';\n                // Set readyState\n                jqXHR.readyState = status > 0 ? 4 : 0;\n                // Determine if successful\n                isSuccess = status >= 200 && status < 300 || status === 304;\n                // Get response data\n                if (responses) {\n                    response = ajaxHandleResponses(s, jqXHR, responses);\n                }\n                // Convert no matter what (that way responseXXX fields are always set)\n                response = ajaxConvert(s, response, jqXHR, isSuccess);\n                // If successful, handle type chaining\n                if (isSuccess) {\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n                    if (s.ifModified) {\n                        modified = jqXHR.getResponseHeader('Last-Modified');\n                        if (modified) {\n                            jQuery.lastModified[cacheURL] = modified;\n                        }\n                        modified = jqXHR.getResponseHeader('etag');\n                        if (modified) {\n                            jQuery.etag[cacheURL] = modified;\n                        }\n                    }\n                    // if no content\n                    if (status === 204 || s.type === 'HEAD') {\n                        statusText = 'nocontent';    // if not modified\n                    } else if (status === 304) {\n                        statusText = 'notmodified';    // If we have data, let's convert it\n                    } else {\n                        statusText = response.state;\n                        success = response.data;\n                        error = response.error;\n                        isSuccess = !error;\n                    }\n                } else {\n                    // Extract error from statusText and normalize for non-aborts\n                    error = statusText;\n                    if (status || !statusText) {\n                        statusText = 'error';\n                        if (status < 0) {\n                            status = 0;\n                        }\n                    }\n                }\n                // Set data for the fake xhr object\n                jqXHR.status = status;\n                jqXHR.statusText = (nativeStatusText || statusText) + '';\n                // Success/Error\n                if (isSuccess) {\n                    deferred.resolveWith(callbackContext, [\n                        success,\n                        statusText,\n                        jqXHR\n                    ]);\n                } else {\n                    deferred.rejectWith(callbackContext, [\n                        jqXHR,\n                        statusText,\n                        error\n                    ]);\n                }\n                // Status-dependent callbacks\n                jqXHR.statusCode(statusCode);\n                statusCode = undefined;\n                if (fireGlobals) {\n                    globalEventContext.trigger(isSuccess ? 'ajaxSuccess' : 'ajaxError', [\n                        jqXHR,\n                        s,\n                        isSuccess ? success : error\n                    ]);\n                }\n                // Complete\n                completeDeferred.fireWith(callbackContext, [\n                    jqXHR,\n                    statusText\n                ]);\n                if (fireGlobals) {\n                    globalEventContext.trigger('ajaxComplete', [\n                        jqXHR,\n                        s\n                    ]);\n                    // Handle the global AJAX counter\n                    if (!--jQuery.active) {\n                        jQuery.event.trigger('ajaxStop');\n                    }\n                }\n            }\n            return jqXHR;\n        },\n        getJSON: function (url, data, callback) {\n            return jQuery.get(url, data, callback, 'json');\n        },\n        getScript: function (url, callback) {\n            return jQuery.get(url, undefined, callback, 'script');\n        }\n    });\n    jQuery.each([\n        'get',\n        'post'\n    ], function (i, method) {\n        jQuery[method] = function (url, data, callback, type) {\n            // Shift arguments if data argument was omitted\n            if (jQuery.isFunction(data)) {\n                type = type || callback;\n                callback = data;\n                data = undefined;\n            }\n            // The url can be an options object (which then must have .url)\n            return jQuery.ajax(jQuery.extend({\n                url: url,\n                type: method,\n                dataType: type,\n                data: data,\n                success: callback\n            }, jQuery.isPlainObject(url) && url));\n        };\n    });\n    jQuery._evalUrl = function (url) {\n        return jQuery.ajax({\n            url: url,\n            // Make this explicit, since user can override this through ajaxSetup (#11264)\n            type: 'GET',\n            dataType: 'script',\n            cache: true,\n            async: false,\n            global: false,\n            'throws': true\n        });\n    };\n    jQuery.fn.extend({\n        wrapAll: function (html) {\n            var wrap;\n            if (this[0]) {\n                if (jQuery.isFunction(html)) {\n                    html = html.call(this[0]);\n                }\n                // The elements to wrap the target around\n                wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\n                if (this[0].parentNode) {\n                    wrap.insertBefore(this[0]);\n                }\n                wrap.map(function () {\n                    var elem = this;\n                    while (elem.firstElementChild) {\n                        elem = elem.firstElementChild;\n                    }\n                    return elem;\n                }).append(this);\n            }\n            return this;\n        },\n        wrapInner: function (html) {\n            if (jQuery.isFunction(html)) {\n                return this.each(function (i) {\n                    jQuery(this).wrapInner(html.call(this, i));\n                });\n            }\n            return this.each(function () {\n                var self = jQuery(this), contents = self.contents();\n                if (contents.length) {\n                    contents.wrapAll(html);\n                } else {\n                    self.append(html);\n                }\n            });\n        },\n        wrap: function (html) {\n            var isFunction = jQuery.isFunction(html);\n            return this.each(function (i) {\n                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\n            });\n        },\n        unwrap: function (selector) {\n            this.parent(selector).not('body').each(function () {\n                jQuery(this).replaceWith(this.childNodes);\n            });\n            return this;\n        }\n    });\n    jQuery.expr.pseudos.hidden = function (elem) {\n        return !jQuery.expr.pseudos.visible(elem);\n    };\n    jQuery.expr.pseudos.visible = function (elem) {\n        return !!(elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length);\n    };\n    jQuery.ajaxSettings.xhr = function () {\n        try {\n            return new window.XMLHttpRequest();\n        } catch (e) {\n        }\n    };\n    var xhrSuccessStatus = {\n            // File protocol always yields status code 0, assume 200\n            0: 200,\n            // Support: IE <=9 only\n            // #1450: sometimes IE returns 1223 when it should be 204\n            1223: 204\n        }, xhrSupported = jQuery.ajaxSettings.xhr();\n    support.cors = !!xhrSupported && 'withCredentials' in xhrSupported;\n    support.ajax = xhrSupported = !!xhrSupported;\n    jQuery.ajaxTransport(function (options) {\n        var callback, errorCallback;\n        // Cross domain only allowed if supported through XMLHttpRequest\n        if (support.cors || xhrSupported && !options.crossDomain) {\n            return {\n                send: function (headers, complete) {\n                    var i, xhr = options.xhr();\n                    xhr.open(options.type, options.url, options.async, options.username, options.password);\n                    // Apply custom fields if provided\n                    if (options.xhrFields) {\n                        for (i in options.xhrFields) {\n                            xhr[i] = options.xhrFields[i];\n                        }\n                    }\n                    // Override mime type if needed\n                    if (options.mimeType && xhr.overrideMimeType) {\n                        xhr.overrideMimeType(options.mimeType);\n                    }\n                    // X-Requested-With header\n                    // For cross-domain requests, seeing as conditions for a preflight are\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\n                    // For same-domain requests, won't change header if already provided.\n                    if (!options.crossDomain && !headers['X-Requested-With']) {\n                        headers['X-Requested-With'] = 'XMLHttpRequest';\n                    }\n                    // Set headers\n                    for (i in headers) {\n                        xhr.setRequestHeader(i, headers[i]);\n                    }\n                    // Callback\n                    callback = function (type) {\n                        return function () {\n                            if (callback) {\n                                callback = errorCallback = xhr.onload = xhr.onerror = xhr.onabort = xhr.onreadystatechange = null;\n                                if (type === 'abort') {\n                                    xhr.abort();\n                                } else if (type === 'error') {\n                                    // Support: IE <=9 only\n                                    // On a manual native abort, IE9 throws\n                                    // errors on any property access that is not readyState\n                                    if (typeof xhr.status !== 'number') {\n                                        complete(0, 'error');\n                                    } else {\n                                        complete(// File: protocol always yields status 0; see #8605, #14207\n                                        xhr.status, xhr.statusText);\n                                    }\n                                } else {\n                                    complete(xhrSuccessStatus[xhr.status] || xhr.status, xhr.statusText, // Support: IE <=9 only\n                                    // IE9 has no XHR2 but throws on binary (trac-11426)\n                                    // For XHR2 non-text, let the caller handle it (gh-2498)\n                                    (xhr.responseType || 'text') !== 'text' || typeof xhr.responseText !== 'string' ? { binary: xhr.response } : { text: xhr.responseText }, xhr.getAllResponseHeaders());\n                                }\n                            }\n                        };\n                    };\n                    // Listen to events\n                    xhr.onload = callback();\n                    errorCallback = xhr.onerror = callback('error');\n                    // Support: IE 9 only\n                    // Use onreadystatechange to replace onabort\n                    // to handle uncaught aborts\n                    if (xhr.onabort !== undefined) {\n                        xhr.onabort = errorCallback;\n                    } else {\n                        xhr.onreadystatechange = function () {\n                            // Check readyState before timeout as it changes\n                            if (xhr.readyState === 4) {\n                                // Allow onerror to be called first,\n                                // but that will not handle a native abort\n                                // Also, save errorCallback to a variable\n                                // as xhr.onerror cannot be accessed\n                                window.setTimeout(function () {\n                                    if (callback) {\n                                        errorCallback();\n                                    }\n                                });\n                            }\n                        };\n                    }\n                    // Create the abort callback\n                    callback = callback('abort');\n                    try {\n                        // Do send the request (this may raise an exception)\n                        xhr.send(options.hasContent && options.data || null);\n                    } catch (e) {\n                        // #14683: Only rethrow if this hasn't been notified as an error yet\n                        if (callback) {\n                            throw e;\n                        }\n                    }\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    // Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\n    jQuery.ajaxPrefilter(function (s) {\n        if (s.crossDomain) {\n            s.contents.script = false;\n        }\n    });\n    // Install script dataType\n    jQuery.ajaxSetup({\n        accepts: { script: 'text/javascript, application/javascript, ' + 'application/ecmascript, application/x-ecmascript' },\n        contents: { script: /\\b(?:java|ecma)script\\b/ },\n        converters: {\n            'text script': function (text) {\n                jQuery.globalEval(text);\n                return text;\n            }\n        }\n    });\n    // Handle cache's special case and crossDomain\n    jQuery.ajaxPrefilter('script', function (s) {\n        if (s.cache === undefined) {\n            s.cache = false;\n        }\n        if (s.crossDomain) {\n            s.type = 'GET';\n        }\n    });\n    // Bind script tag hack transport\n    jQuery.ajaxTransport('script', function (s) {\n        // This transport only deals with cross domain requests\n        if (s.crossDomain) {\n            var script, callback;\n            return {\n                send: function (_, complete) {\n                    script = jQuery('<script>').prop({\n                        charset: s.scriptCharset,\n                        src: s.url\n                    }).on('load error', callback = function (evt) {\n                        script.remove();\n                        callback = null;\n                        if (evt) {\n                            complete(evt.type === 'error' ? 404 : 200, evt.type);\n                        }\n                    });\n                    // Use native DOM manipulation to avoid our domManip AJAX trickery\n                    document.head.appendChild(script[0]);\n                },\n                abort: function () {\n                    if (callback) {\n                        callback();\n                    }\n                }\n            };\n        }\n    });\n    var oldCallbacks = [], rjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n    // Default jsonp settings\n    jQuery.ajaxSetup({\n        jsonp: 'callback',\n        jsonpCallback: function () {\n            var callback = oldCallbacks.pop() || jQuery.expando + '_' + nonce++;\n            this[callback] = true;\n            return callback;\n        }\n    });\n    // Detect, normalize options and install callbacks for jsonp requests\n    jQuery.ajaxPrefilter('json jsonp', function (s, originalSettings, jqXHR) {\n        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== false && (rjsonp.test(s.url) ? 'url' : typeof s.data === 'string' && (s.contentType || '').indexOf('application/x-www-form-urlencoded') === 0 && rjsonp.test(s.data) && 'data');\n        // Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n        if (jsonProp || s.dataTypes[0] === 'jsonp') {\n            // Get callback name, remembering preexisting value associated with it\n            callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback;\n            // Insert callback into url or form data\n            if (jsonProp) {\n                s[jsonProp] = s[jsonProp].replace(rjsonp, '$1' + callbackName);\n            } else if (s.jsonp !== false) {\n                s.url += (rquery.test(s.url) ? '&' : '?') + s.jsonp + '=' + callbackName;\n            }\n            // Use data converter to retrieve json after script execution\n            s.converters['script json'] = function () {\n                if (!responseContainer) {\n                    jQuery.error(callbackName + ' was not called');\n                }\n                return responseContainer[0];\n            };\n            // Force json dataType\n            s.dataTypes[0] = 'json';\n            // Install callback\n            overwritten = window[callbackName];\n            window[callbackName] = function () {\n                responseContainer = arguments;\n            };\n            // Clean-up function (fires after converters)\n            jqXHR.always(function () {\n                // If previous value didn't exist - remove it\n                if (overwritten === undefined) {\n                    jQuery(window).removeProp(callbackName);    // Otherwise restore preexisting value\n                } else {\n                    window[callbackName] = overwritten;\n                }\n                // Save back as free\n                if (s[callbackName]) {\n                    // Make sure that re-using the options doesn't screw things around\n                    s.jsonpCallback = originalSettings.jsonpCallback;\n                    // Save the callback name for future use\n                    oldCallbacks.push(callbackName);\n                }\n                // Call if it was a function and we have a response\n                if (responseContainer && jQuery.isFunction(overwritten)) {\n                    overwritten(responseContainer[0]);\n                }\n                responseContainer = overwritten = undefined;\n            });\n            // Delegate to script\n            return 'script';\n        }\n    });\n    // Support: Safari 8 only\n    // In Safari 8 documents created via document.implementation.createHTMLDocument\n    // collapse sibling forms: the second one becomes a child of the first one.\n    // Because of that, this security measure has to be disabled in Safari 8.\n    // https://bugs.webkit.org/show_bug.cgi?id=137337\n    support.createHTMLDocument = function () {\n        var body = document.implementation.createHTMLDocument('').body;\n        body.innerHTML = '<form></form><form></form>';\n        return body.childNodes.length === 2;\n    }();\n    // Argument \"data\" should be string of html\n    // context (optional): If specified, the fragment will be created in this context,\n    // defaults to document\n    // keepScripts (optional): If true, will include scripts passed in the html string\n    jQuery.parseHTML = function (data, context, keepScripts) {\n        if (typeof data !== 'string') {\n            return [];\n        }\n        if (typeof context === 'boolean') {\n            keepScripts = context;\n            context = false;\n        }\n        var base, parsed, scripts;\n        if (!context) {\n            // Stop scripts or inline event handlers from being executed immediately\n            // by using document.implementation\n            if (support.createHTMLDocument) {\n                context = document.implementation.createHTMLDocument('');\n                // Set the base href for the created document\n                // so any parsed elements with URLs\n                // are based on the document's URL (gh-2965)\n                base = context.createElement('base');\n                base.href = document.location.href;\n                context.head.appendChild(base);\n            } else {\n                context = document;\n            }\n        }\n        parsed = rsingleTag.exec(data);\n        scripts = !keepScripts && [];\n        // Single tag\n        if (parsed) {\n            return [context.createElement(parsed[1])];\n        }\n        parsed = buildFragment([data], context, scripts);\n        if (scripts && scripts.length) {\n            jQuery(scripts).remove();\n        }\n        return jQuery.merge([], parsed.childNodes);\n    };\n    /**\n * Load a url into a page\n */\n    jQuery.fn.load = function (url, params, callback) {\n        var selector, type, response, self = this, off = url.indexOf(' ');\n        if (off > -1) {\n            selector = stripAndCollapse(url.slice(off));\n            url = url.slice(0, off);\n        }\n        // If it's a function\n        if (jQuery.isFunction(params)) {\n            // We assume that it's the callback\n            callback = params;\n            params = undefined;    // Otherwise, build a param string\n        } else if (params && typeof params === 'object') {\n            type = 'POST';\n        }\n        // If we have elements to modify, make the request\n        if (self.length > 0) {\n            jQuery.ajax({\n                url: url,\n                // If \"type\" variable is undefined, then \"GET\" method will be used.\n                // Make value of this field explicit since\n                // user can override it through ajaxSetup method\n                type: type || 'GET',\n                dataType: 'html',\n                data: params\n            }).done(function (responseText) {\n                // Save response for use in complete callback\n                response = arguments;\n                self.html(selector ? // If a selector was specified, locate the right elements in a dummy div\n                // Exclude scripts to avoid IE 'Permission Denied' errors\n                jQuery('<div>').append(jQuery.parseHTML(responseText)).find(selector) : // Otherwise use the full result\n                responseText);    // If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\n                                  // but they are ignored because response was set above.\n                                  // If it fails, this function gets \"jqXHR\", \"status\", \"error\"\n            }).always(callback && function (jqXHR, status) {\n                self.each(function () {\n                    callback.apply(this, response || [\n                        jqXHR.responseText,\n                        status,\n                        jqXHR\n                    ]);\n                });\n            });\n        }\n        return this;\n    };\n    // Attach a bunch of functions for handling common AJAX events\n    jQuery.each([\n        'ajaxStart',\n        'ajaxStop',\n        'ajaxComplete',\n        'ajaxError',\n        'ajaxSuccess',\n        'ajaxSend'\n    ], function (i, type) {\n        jQuery.fn[type] = function (fn) {\n            return this.on(type, fn);\n        };\n    });\n    jQuery.expr.pseudos.animated = function (elem) {\n        return jQuery.grep(jQuery.timers, function (fn) {\n            return elem === fn.elem;\n        }).length;\n    };\n    jQuery.offset = {\n        setOffset: function (elem, options, i) {\n            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, 'position'), curElem = jQuery(elem), props = {};\n            // Set position first, in-case top/left are set even on static elem\n            if (position === 'static') {\n                elem.style.position = 'relative';\n            }\n            curOffset = curElem.offset();\n            curCSSTop = jQuery.css(elem, 'top');\n            curCSSLeft = jQuery.css(elem, 'left');\n            calculatePosition = (position === 'absolute' || position === 'fixed') && (curCSSTop + curCSSLeft).indexOf('auto') > -1;\n            // Need to be able to calculate position if either\n            // top or left is auto and position is either absolute or fixed\n            if (calculatePosition) {\n                curPosition = curElem.position();\n                curTop = curPosition.top;\n                curLeft = curPosition.left;\n            } else {\n                curTop = parseFloat(curCSSTop) || 0;\n                curLeft = parseFloat(curCSSLeft) || 0;\n            }\n            if (jQuery.isFunction(options)) {\n                // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\n                options = options.call(elem, i, jQuery.extend({}, curOffset));\n            }\n            if (options.top != null) {\n                props.top = options.top - curOffset.top + curTop;\n            }\n            if (options.left != null) {\n                props.left = options.left - curOffset.left + curLeft;\n            }\n            if ('using' in options) {\n                options.using.call(elem, props);\n            } else {\n                curElem.css(props);\n            }\n        }\n    };\n    jQuery.fn.extend({\n        offset: function (options) {\n            // Preserve chaining for setter\n            if (arguments.length) {\n                return options === undefined ? this : this.each(function (i) {\n                    jQuery.offset.setOffset(this, options, i);\n                });\n            }\n            var doc, docElem, rect, win, elem = this[0];\n            if (!elem) {\n                return;\n            }\n            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)\n            // Support: IE <=11 only\n            // Running getBoundingClientRect on a\n            // disconnected node in IE throws an error\n            if (!elem.getClientRects().length) {\n                return {\n                    top: 0,\n                    left: 0\n                };\n            }\n            rect = elem.getBoundingClientRect();\n            doc = elem.ownerDocument;\n            docElem = doc.documentElement;\n            win = doc.defaultView;\n            return {\n                top: rect.top + win.pageYOffset - docElem.clientTop,\n                left: rect.left + win.pageXOffset - docElem.clientLeft\n            };\n        },\n        position: function () {\n            if (!this[0]) {\n                return;\n            }\n            var offsetParent, offset, elem = this[0], parentOffset = {\n                    top: 0,\n                    left: 0\n                };\n            // Fixed elements are offset from window (parentOffset = {top:0, left: 0},\n            // because it is its only offset parent\n            if (jQuery.css(elem, 'position') === 'fixed') {\n                // Assume getBoundingClientRect is there when computed position is fixed\n                offset = elem.getBoundingClientRect();\n            } else {\n                // Get *real* offsetParent\n                offsetParent = this.offsetParent();\n                // Get correct offsets\n                offset = this.offset();\n                if (!nodeName(offsetParent[0], 'html')) {\n                    parentOffset = offsetParent.offset();\n                }\n                // Add offsetParent borders\n                parentOffset = {\n                    top: parentOffset.top + jQuery.css(offsetParent[0], 'borderTopWidth', true),\n                    left: parentOffset.left + jQuery.css(offsetParent[0], 'borderLeftWidth', true)\n                };\n            }\n            // Subtract parent offsets and element margins\n            return {\n                top: offset.top - parentOffset.top - jQuery.css(elem, 'marginTop', true),\n                left: offset.left - parentOffset.left - jQuery.css(elem, 'marginLeft', true)\n            };\n        },\n        // This method will return documentElement in the following cases:\n        // 1) For the element inside the iframe without offsetParent, this method will return\n        //    documentElement of the parent window\n        // 2) For the hidden or detached element\n        // 3) For body or html element, i.e. in case of the html node - it will return itself\n        //\n        // but those exceptions were never presented as a real life use-cases\n        // and might be considered as more preferable results.\n        //\n        // This logic, however, is not guaranteed and can change at any point in the future\n        offsetParent: function () {\n            return this.map(function () {\n                var offsetParent = this.offsetParent;\n                while (offsetParent && jQuery.css(offsetParent, 'position') === 'static') {\n                    offsetParent = offsetParent.offsetParent;\n                }\n                return offsetParent || documentElement;\n            });\n        }\n    });\n    // Create scrollLeft and scrollTop methods\n    jQuery.each({\n        scrollLeft: 'pageXOffset',\n        scrollTop: 'pageYOffset'\n    }, function (method, prop) {\n        var top = 'pageYOffset' === prop;\n        jQuery.fn[method] = function (val) {\n            return access(this, function (elem, method, val) {\n                // Coalesce documents and windows\n                var win;\n                if (jQuery.isWindow(elem)) {\n                    win = elem;\n                } else if (elem.nodeType === 9) {\n                    win = elem.defaultView;\n                }\n                if (val === undefined) {\n                    return win ? win[prop] : elem[method];\n                }\n                if (win) {\n                    win.scrollTo(!top ? val : win.pageXOffset, top ? val : win.pageYOffset);\n                } else {\n                    elem[method] = val;\n                }\n            }, method, val, arguments.length);\n        };\n    });\n    // Support: Safari <=7 - 9.1, Chrome <=37 - 49\n    // Add the top/left cssHooks using jQuery.fn.position\n    // Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n    // Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\n    // getComputedStyle returns percent when specified for top/left/bottom/right;\n    // rather than make the css module depend on the offset module, just check for it here\n    jQuery.each([\n        'top',\n        'left'\n    ], function (i, prop) {\n        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, function (elem, computed) {\n            if (computed) {\n                computed = curCSS(elem, prop);\n                // If curCSS returns percentage, fallback to offset\n                return rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + 'px' : computed;\n            }\n        });\n    });\n    // Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\n    jQuery.each({\n        Height: 'height',\n        Width: 'width'\n    }, function (name, type) {\n        jQuery.each({\n            padding: 'inner' + name,\n            content: type,\n            '': 'outer' + name\n        }, function (defaultExtra, funcName) {\n            // Margin is only for outerHeight, outerWidth\n            jQuery.fn[funcName] = function (margin, value) {\n                var chainable = arguments.length && (defaultExtra || typeof margin !== 'boolean'), extra = defaultExtra || (margin === true || value === true ? 'margin' : 'border');\n                return access(this, function (elem, type, value) {\n                    var doc;\n                    if (jQuery.isWindow(elem)) {\n                        // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\n                        return funcName.indexOf('outer') === 0 ? elem['inner' + name] : elem.document.documentElement['client' + name];\n                    }\n                    // Get document width or height\n                    if (elem.nodeType === 9) {\n                        doc = elem.documentElement;\n                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n                        // whichever is greatest\n                        return Math.max(elem.body['scroll' + name], doc['scroll' + name], elem.body['offset' + name], doc['offset' + name], doc['client' + name]);\n                    }\n                    return value === undefined ? // Get width or height on the element, requesting but not forcing parseFloat\n                    jQuery.css(elem, type, extra) : // Set width or height on the element\n                    jQuery.style(elem, type, value, extra);\n                }, type, chainable ? margin : undefined, chainable);\n            };\n        });\n    });\n    jQuery.fn.extend({\n        bind: function (types, data, fn) {\n            return this.on(types, null, data, fn);\n        },\n        unbind: function (types, fn) {\n            return this.off(types, null, fn);\n        },\n        delegate: function (selector, types, data, fn) {\n            return this.on(types, selector, data, fn);\n        },\n        undelegate: function (selector, types, fn) {\n            // ( namespace ) or ( selector, types [, fn] )\n            return arguments.length === 1 ? this.off(selector, '**') : this.off(types, selector || '**', fn);\n        }\n    });\n    jQuery.holdReady = function (hold) {\n        if (hold) {\n            jQuery.readyWait++;\n        } else {\n            jQuery.ready(true);\n        }\n    };\n    jQuery.isArray = Array.isArray;\n    jQuery.parseJSON = JSON.parse;\n    jQuery.nodeName = nodeName;\n    // Register as a named AMD module, since jQuery can be concatenated with other\n    // files that may use define, but not via a proper concatenation script that\n    // understands anonymous AMD modules. A named AMD is safest and most robust\n    // way to register. Lowercase jquery is used because AMD module names are\n    // derived from file names, and jQuery is normally delivered in a lowercase\n    // file name. Do this after creating the global so that if an AMD module wants\n    // to call noConflict to hide this version of jQuery, it will work.\n    // Note that for maximum portability, libraries that are not jQuery should\n    // declare themselves as anonymous modules, and avoid setting a global if an\n    // AMD loader is present. jQuery is a special case. For more information, see\n    // https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n    if (typeof define === 'function' && define.amd) {\n        define('jquery', [], function () {\n            return jQuery;\n        });\n    }\n    var\n        // Map over jQuery in case of overwrite\n        _jQuery = window.jQuery,\n        // Map over the $ in case of overwrite\n        _$ = window.$;\n    jQuery.noConflict = function (deep) {\n        if (window.$ === jQuery) {\n            window.$ = _$;\n        }\n        if (deep && window.jQuery === jQuery) {\n            window.jQuery = _jQuery;\n        }\n        return jQuery;\n    };\n    // Expose jQuery and $ identifiers, even in AMD\n    // (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n    // and CommonJS for browser emulators (#13566)\n    if (!noGlobal) {\n        window.jQuery = window.$ = jQuery;\n    }\n    return jQuery;\n}));","/*!\n * jquery.event.drag - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(420    /* ../slick.jquery */);\n// add the jquery instance method\n$.fn.drag = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drag') !== 0)\n        type = 'drag' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drag special event\n    drag = $special.drag = {\n        // these are the default settings\n        defaults: {\n            which: 1,\n            // mouse button pressed to start drag sequence\n            distance: 0,\n            // distance dragged before dragstart\n            not: ':input',\n            // selector to suppress dragging on target elements\n            handle: null,\n            // selector to match handle target elements\n            relative: false,\n            // true to use \"position\", false to use \"offset\"\n            drop: true,\n            // false to suppress drop events, true or selector to allow\n            click: false    // false to suppress click events after dragend (no proxy)\n        },\n        // the key name for stored drag data\n        datakey: 'dragdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drag.datakey),\n                // read any passed options\n                opts = obj.data || {};\n            // count another realted event\n            data.related += 1;\n            // extend data options bound with this event\n            // don't iterate \"opts\" in case it is a node\n            $.each(drag.defaults, function (key, def) {\n                if (opts[key] !== undefined)\n                    data[key] = opts[key];\n            });\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drag.datakey).related -= 1;\n        },\n        // configure interaction, capture settings\n        setup: function () {\n            // check for related events\n            if ($.data(this, drag.datakey))\n                return;\n            // initialize the drag data with copied defaults\n            var data = $.extend({ related: 0 }, drag.defaults);\n            // store the interaction data\n            $.data(this, drag.datakey, data);\n            // bind the mousedown event, which starts drag interactions\n            $event.add(this, 'touchstart mousedown', drag.init, data);\n            // prevent image dragging in IE...\n            if (this.attachEvent)\n                this.attachEvent('ondragstart', drag.dontstart);\n        },\n        // destroy configured interaction\n        teardown: function () {\n            var data = $.data(this, drag.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drag.datakey);\n            // remove the mousedown event\n            $event.remove(this, 'touchstart mousedown', drag.init);\n            // enable text selection\n            drag.textselect(true);\n            // un-prevent image dragging in IE...\n            if (this.detachEvent)\n                this.detachEvent('ondragstart', drag.dontstart);\n        },\n        // initialize the interaction\n        init: function (event) {\n            // sorry, only one touch at a time\n            if (drag.touched)\n                return;\n            // the drag/drop interaction data\n            var dd = event.data, results;\n            // check the which directive\n            if (event.which != 0 && dd.which > 0 && event.which != dd.which)\n                return;\n            // check for suppressed selector\n            if ($(event.target).is(dd.not))\n                return;\n            // check for handle selector\n            if (dd.handle && !$(event.target).closest(dd.handle, event.currentTarget).length)\n                return;\n            drag.touched = event.type == 'touchstart' ? this : null;\n            dd.propagates = 1;\n            dd.mousedown = this;\n            dd.interactions = [drag.interaction(this, dd)];\n            dd.target = event.target;\n            dd.pageX = event.pageX;\n            dd.pageY = event.pageY;\n            dd.dragging = null;\n            // handle draginit event...\n            results = drag.hijack(event, 'draginit', dd);\n            // early cancel\n            if (!dd.propagates)\n                return;\n            // flatten the result set\n            results = drag.flatten(results);\n            // insert new interaction elements\n            if (results && results.length) {\n                dd.interactions = [];\n                $.each(results, function () {\n                    dd.interactions.push(drag.interaction(this, dd));\n                });\n            }\n            // remember how many interactions are propagating\n            dd.propagates = dd.interactions.length;\n            // locate and init the drop targets\n            if (dd.drop !== false && $special.drop)\n                $special.drop.handler(event, dd);\n            // disable text selection\n            drag.textselect(false);\n            // bind additional events...\n            if (drag.touched)\n                $event.add(drag.touched, 'touchmove touchend', drag.handler, dd);\n            else\n                $event.add(document, 'mousemove mouseup', drag.handler, dd);\n            // helps prevent text selection or scrolling\n            if (!drag.touched || dd.live)\n                return false;\n        },\n        // returns an interaction object\n        interaction: function (elem, dd) {\n            var offset = elem && elem.ownerDocument ? $(elem)[dd.relative ? 'position' : 'offset']() || {\n                top: 0,\n                left: 0\n            } : {\n                top: 0,\n                left: 0\n            };\n            return {\n                drag: elem,\n                callback: new drag.callback(),\n                droppable: [],\n                offset: offset\n            };\n        },\n        // handle drag-releatd DOM events\n        handler: function (event) {\n            // read the data before hijacking anything\n            var dd = event.data;\n            // handle various events\n            switch (event.type) {\n            // mousemove, check distance, start dragging\n            case !dd.dragging && 'touchmove':\n                event.preventDefault();\n            case !dd.dragging && 'mousemove':\n                //  drag tolerance, x² + y² = distance²\n                if (Math.pow(event.pageX - dd.pageX, 2) + Math.pow(event.pageY - dd.pageY, 2) < Math.pow(dd.distance, 2))\n                    break;\n                // distance tolerance not reached\n                event.target = dd.target;\n                // force target from \"mousedown\" event (fix distance issue)\n                drag.hijack(event, 'dragstart', dd);\n                // trigger \"dragstart\"\n                if (dd.propagates)\n                    // \"dragstart\" not rejected\n                    dd.dragging = true;\n            // activate interaction\n            // mousemove, dragging\n            case 'touchmove':\n                event.preventDefault();\n            case 'mousemove':\n                if (dd.dragging) {\n                    // trigger \"drag\"\n                    drag.hijack(event, 'drag', dd);\n                    if (dd.propagates) {\n                        // manage drop events\n                        if (dd.drop !== false && $special.drop)\n                            $special.drop.handler(event, dd);\n                        // \"dropstart\", \"dropend\"\n                        break;    // \"drag\" not rejected, stop\n                    }\n                    event.type = 'mouseup';    // helps \"drop\" handler behave\n                }\n            // mouseup, stop dragging\n            case 'touchend':\n            case 'mouseup':\n            default:\n                if (drag.touched)\n                    $event.remove(drag.touched, 'touchmove touchend', drag.handler);    // remove touch events\n                else\n                    $event.remove(document, 'mousemove mouseup', drag.handler);\n                // remove page events\n                if (dd.dragging) {\n                    if (dd.drop !== false && $special.drop)\n                        $special.drop.handler(event, dd);\n                    // \"drop\"\n                    drag.hijack(event, 'dragend', dd);    // trigger \"dragend\"\n                }\n                drag.textselect(true);\n                // enable text selection\n                // if suppressing click events...\n                if (dd.click === false && dd.dragging)\n                    $.data(dd.mousedown, 'suppress.click', new Date().getTime() + 5);\n                dd.dragging = drag.touched = false;\n                // deactivate element\n                break;\n            }\n        },\n        // re-use event object for custom events\n        hijack: function (event, type, dd, x, elem) {\n            // not configured\n            if (!dd)\n                return;\n            // remember the original event and type\n            var orig = {\n                    event: event.originalEvent,\n                    type: event.type\n                },\n                // is the event drag related or drog related?\n                mode = type.indexOf('drop') ? 'drag' : 'drop',\n                // iteration vars\n                result, i = x || 0, ia, $elems, callback, len = !isNaN(x) ? x : dd.interactions.length;\n            // modify the event type\n            event.type = type;\n            // protects originalEvent from side-effects\n            var noop = function () {\n            };\n            event.originalEvent = new $.Event(orig.event, {\n                preventDefault: noop,\n                stopPropagation: noop,\n                stopImmediatePropagation: noop\n            });\n            // initialize the results\n            dd.results = [];\n            // handle each interacted element\n            do\n                if (ia = dd.interactions[i]) {\n                    // validate the interaction\n                    if (type !== 'dragend' && ia.cancelled)\n                        continue;\n                    // set the dragdrop properties on the event object\n                    callback = drag.properties(event, dd, ia);\n                    // prepare for more results\n                    ia.results = [];\n                    // handle each element\n                    $(elem || ia[mode] || dd.droppable).each(function (p, subject) {\n                        // identify drag or drop targets individually\n                        callback.target = subject;\n                        // force propagtion of the custom event\n                        event.isPropagationStopped = function () {\n                            return false;\n                        };\n                        // handle the event\n                        result = subject ? $event.dispatch.call(subject, event, callback) : null;\n                        // stop the drag interaction for this element\n                        if (result === false) {\n                            if (mode == 'drag') {\n                                ia.cancelled = true;\n                                dd.propagates -= 1;\n                            }\n                            if (type == 'drop') {\n                                ia[mode][p] = null;\n                            }\n                        }    // assign any dropinit elements\n                        else if (type == 'dropinit')\n                            ia.droppable.push(drag.element(result) || subject);\n                        // accept a returned proxy element\n                        if (type == 'dragstart')\n                            ia.proxy = $(drag.element(result) || ia.drag)[0];\n                        // remember this result\n                        ia.results.push(result);\n                        // forget the event result, for recycling\n                        delete event.result;\n                        // break on cancelled handler\n                        if (type !== 'dropinit')\n                            return result;\n                    });\n                    // flatten the results\n                    dd.results[i] = drag.flatten(ia.results);\n                    // accept a set of valid drop targets\n                    if (type == 'dropinit')\n                        ia.droppable = drag.flatten(ia.droppable);\n                    // locate drop targets\n                    if (type == 'dragstart' && !ia.cancelled)\n                        callback.update();\n                }\n            while (++i < len);\n            // restore the original event & type\n            event.type = orig.type;\n            event.originalEvent = orig.event;\n            // return all handler results\n            return drag.flatten(dd.results);\n        },\n        // extend the callback object with drag/drop properties...\n        properties: function (event, dd, ia) {\n            var obj = ia.callback;\n            // elements\n            obj.drag = ia.drag;\n            obj.proxy = ia.proxy || ia.drag;\n            // starting mouse position\n            obj.startX = dd.pageX;\n            obj.startY = dd.pageY;\n            // current distance dragged\n            obj.deltaX = event.pageX - dd.pageX;\n            obj.deltaY = event.pageY - dd.pageY;\n            // original element position\n            obj.originalX = ia.offset.left;\n            obj.originalY = ia.offset.top;\n            // adjusted element position\n            obj.offsetX = obj.originalX + obj.deltaX;\n            obj.offsetY = obj.originalY + obj.deltaY;\n            // assign the drop targets information\n            obj.drop = drag.flatten((ia.drop || []).slice());\n            obj.available = drag.flatten((ia.droppable || []).slice());\n            return obj;\n        },\n        // determine is the argument is an element or jquery instance\n        element: function (arg) {\n            if (arg && (arg.jquery || arg.nodeType == 1))\n                return arg;\n        },\n        // flatten nested jquery objects and arrays into a single dimension array\n        flatten: function (arr) {\n            return $.map(arr, function (member) {\n                return member && member.jquery ? $.makeArray(member) : member && member.length ? drag.flatten(member) : member;\n            });\n        },\n        // toggles text selection attributes ON (true) or OFF (false)\n        textselect: function (bool) {\n            $(document)[bool ? 'off' : 'on']('selectstart', drag.dontstart).css('MozUserSelect', bool ? '' : 'none');\n            // .attr(\"unselectable\", bool ? \"off\" : \"on\" )\n            document.unselectable = bool ? 'off' : 'on';\n        },\n        // suppress \"selectstart\" and \"ondragstart\" events\n        dontstart: function () {\n            return false;\n        },\n        // a callback instance contructor\n        callback: function () {\n        }\n    };\n// callback methods\ndrag.callback.prototype = {\n    update: function () {\n        if ($special.drop && this.available.length)\n            $.each(this.available, function (i) {\n                $special.drop.locate(this, i);\n            });\n    }\n};\n// patch $.event.$dispatch to allow suppressing clicks\nvar $dispatch = $event.dispatch;\n$event.dispatch = function (event) {\n    if ($.data(this, 'suppress.' + event.type) - new Date().getTime() > 0) {\n        $.removeData(this, 'suppress.' + event.type);\n        return;\n    }\n    return $dispatch.apply(this, arguments);\n};\n// share the same special event configuration with related events...\n$special.draginit = $special.dragstart = $special.dragend = drag;","/*!\n * jquery.event.drop - v 2.3.0\n * Copyright (c) 2010 Three Dub Media - http://threedubmedia.com\n * Open Source MIT License - http://threedubmedia.com/code/license\n */\n// Created: 2008-06-04\n// Updated: 2012-05-21\n// Updated: 2016-08-16   Luiz Gonzaga dos Santos Filho\n// REQUIRES: jquery 1.8 +, , event.drag 2.3.0\n// TESTED WITH: jQuery 1.8.3, 1.11.2, 2.2.4, and 3.1.0\nvar $ = require(420    /* ../slick.jquery */);\n// Events: drop, dropstart, dropend\n// add the jquery instance method\n$.fn.drop = function (str, arg, opts) {\n    // figure out the event type\n    var type = typeof str == 'string' ? str : '',\n        // figure out the event handler...\n        fn = $.isFunction(str) ? str : $.isFunction(arg) ? arg : null;\n    // fix the event type\n    if (type.indexOf('drop') !== 0)\n        type = 'drop' + type;\n    // were options passed\n    opts = (str == fn ? arg : opts) || {};\n    // trigger or bind event handler\n    return fn ? this.on(type, opts, fn) : this.trigger(type);\n};\n// DROP MANAGEMENT UTILITY\n// returns filtered drop target elements, caches their positions\n$.drop = function (opts) {\n    opts = opts || {};\n    // safely set new options...\n    drop.multi = opts.multi === true ? Infinity : opts.multi === false ? 1 : !isNaN(opts.multi) ? opts.multi : drop.multi;\n    drop.delay = opts.delay || drop.delay;\n    drop.tolerance = $.isFunction(opts.tolerance) ? opts.tolerance : opts.tolerance === null ? null : drop.tolerance;\n    drop.mode = opts.mode || drop.mode || 'intersect';\n};\n// local refs (increase compression)\nvar $event = $.event, $special = $event.special,\n    // configure the drop special event\n    drop = $.event.special.drop = {\n        // these are the default settings\n        multi: 1,\n        // allow multiple drop winners per dragged element\n        delay: 20,\n        // async timeout delay\n        mode: 'overlap',\n        // drop tolerance mode\n        // internal cache\n        targets: [],\n        // the key name for stored drop data\n        datakey: 'dropdata',\n        // prevent bubbling for better performance\n        noBubble: true,\n        // count bound related events\n        add: function (obj) {\n            // read the interaction data\n            var data = $.data(this, drop.datakey);\n            // count another realted event\n            data.related += 1;\n        },\n        // forget unbound related events\n        remove: function () {\n            $.data(this, drop.datakey).related -= 1;\n        },\n        // configure the interactions\n        setup: function () {\n            // check for related events\n            if ($.data(this, drop.datakey))\n                return;\n            // initialize the drop element data\n            var data = {\n                related: 0,\n                active: [],\n                anyactive: 0,\n                winner: 0,\n                location: {}\n            };\n            // store the drop data on the element\n            $.data(this, drop.datakey, data);\n            // store the drop target in internal cache\n            drop.targets.push(this);\n        },\n        // destroy the configure interaction\n        teardown: function () {\n            var data = $.data(this, drop.datakey) || {};\n            // check for related events\n            if (data.related)\n                return;\n            // remove the stored data\n            $.removeData(this, drop.datakey);\n            // reference the targeted element\n            var element = this;\n            // remove from the internal cache\n            drop.targets = $.grep(drop.targets, function (target) {\n                return target !== element;\n            });\n        },\n        // shared event handler\n        handler: function (event, dd) {\n            // local vars\n            var results, $targets;\n            // make sure the right data is available\n            if (!dd)\n                return;\n            // handle various events\n            switch (event.type) {\n            // draginit, from $.event.special.drag\n            case 'mousedown':\n            // DROPINIT >>\n            case 'touchstart':\n                // DROPINIT >>\n                // collect and assign the drop targets\n                $targets = $(drop.targets);\n                if (typeof dd.drop == 'string')\n                    $targets = $targets.filter(dd.drop);\n                // reset drop data winner properties\n                $targets.each(function () {\n                    var data = $.data(this, drop.datakey);\n                    data.active = [];\n                    data.anyactive = 0;\n                    data.winner = 0;\n                });\n                // set available target elements\n                dd.droppable = $targets;\n                // activate drop targets for the initial element being dragged\n                $special.drag.hijack(event, 'dropinit', dd);\n                break;\n            // drag, from $.event.special.drag\n            case 'mousemove':\n            // TOLERATE >>\n            case 'touchmove':\n                // TOLERATE >>\n                drop.event = event;\n                // store the mousemove event\n                if (!drop.timer)\n                    // monitor drop targets\n                    drop.tolerate(dd);\n                break;\n            // dragend, from $.event.special.drag\n            case 'mouseup':\n            // DROP >> DROPEND >>\n            case 'touchend':\n                // DROP >> DROPEND >>\n                drop.timer = clearTimeout(drop.timer);\n                // delete timer\n                if (dd.propagates) {\n                    $special.drag.hijack(event, 'drop', dd);\n                    $special.drag.hijack(event, 'dropend', dd);\n                }\n                break;\n            }\n        },\n        // returns the location positions of an element\n        locate: function (elem, index) {\n            var data = $.data(elem, drop.datakey), $elem = $(elem), posi = $elem.offset() || {}, height = $elem.outerHeight(), width = $elem.outerWidth(), location = {\n                    elem: elem,\n                    width: width,\n                    height: height,\n                    top: posi.top,\n                    left: posi.left,\n                    right: posi.left + width,\n                    bottom: posi.top + height\n                };\n            // drag elements might not have dropdata\n            if (data) {\n                data.location = location;\n                data.index = index;\n                data.elem = elem;\n            }\n            return location;\n        },\n        // test the location positions of an element against another OR an X,Y coord\n        contains: function (target, test) {\n            // target { location } contains test [x,y] or { location }\n            return (test[0] || test.left) >= target.left && (test[0] || test.right) <= target.right && (test[1] || test.top) >= target.top && (test[1] || test.bottom) <= target.bottom;\n        },\n        // stored tolerance modes\n        modes: {\n            // fn scope: \"$.event.special.drop\" object\n            // target with mouse wins, else target with most overlap wins\n            'intersect': function (event, proxy, target) {\n                return this.contains(target, [\n                    event.pageX,\n                    event.pageY\n                ]) ? // check cursor\n                1000000000 : this.modes.overlap.apply(this, arguments);    // check overlap\n            },\n            // target with most overlap wins\n            'overlap': function (event, proxy, target) {\n                // calculate the area of overlap...\n                return Math.max(0, Math.min(target.bottom, proxy.bottom) - Math.max(target.top, proxy.top)) * Math.max(0, Math.min(target.right, proxy.right) - Math.max(target.left, proxy.left));\n            },\n            // proxy is completely contained within target bounds\n            'fit': function (event, proxy, target) {\n                return this.contains(target, proxy) ? 1 : 0;\n            },\n            // center of the proxy is contained within target bounds\n            'middle': function (event, proxy, target) {\n                return this.contains(target, [\n                    proxy.left + proxy.width * 0.5,\n                    proxy.top + proxy.height * 0.5\n                ]) ? 1 : 0;\n            }\n        },\n        // sort drop target cache by by winner (dsc), then index (asc)\n        sort: function (a, b) {\n            return b.winner - a.winner || a.index - b.index;\n        },\n        // async, recursive tolerance execution\n        tolerate: function (dd) {\n            // declare local refs\n            var i, drp, drg, data, arr, len, elem,\n                // interaction iteration variables\n                x = 0, ia, end = dd.interactions.length,\n                // determine the mouse coords\n                xy = [\n                    drop.event.pageX,\n                    drop.event.pageY\n                ],\n                // custom or stored tolerance fn\n                tolerance = drop.tolerance || drop.modes[drop.mode];\n            // go through each passed interaction...\n            do\n                if (ia = dd.interactions[x]) {\n                    // check valid interaction\n                    if (!ia)\n                        return;\n                    // initialize or clear the drop data\n                    ia.drop = [];\n                    // holds the drop elements\n                    arr = [];\n                    len = ia.droppable.length;\n                    // determine the proxy location, if needed\n                    if (tolerance)\n                        drg = drop.locate(ia.proxy);\n                    // reset the loop\n                    i = 0;\n                    // loop each stored drop target\n                    do\n                        if (elem = ia.droppable[i]) {\n                            data = $.data(elem, drop.datakey);\n                            drp = data.location;\n                            if (!drp)\n                                continue;\n                            // find a winner: tolerance function is defined, call it\n                            data.winner = tolerance ? tolerance.call(drop, drop.event, drg, drp)    // mouse position is always the fallback\n : drop.contains(drp, xy) ? 1 : 0;\n                            arr.push(data);\n                        }\n                    while (++i < len);\n                    // loop\n                    // sort the drop targets\n                    arr.sort(drop.sort);\n                    // reset the loop\n                    i = 0;\n                    // loop through all of the targets again\n                    do\n                        if (data = arr[i]) {\n                            // winners...\n                            if (data.winner && ia.drop.length < drop.multi) {\n                                // new winner... dropstart\n                                if (!data.active[x] && !data.anyactive) {\n                                    // check to make sure that this is not prevented\n                                    if ($special.drag.hijack(drop.event, 'dropstart', dd, x, data.elem)[0] !== false) {\n                                        data.active[x] = 1;\n                                        data.anyactive += 1;\n                                    }    // if false, it is not a winner\n                                    else\n                                        data.winner = 0;\n                                }\n                                // if it is still a winner\n                                if (data.winner)\n                                    ia.drop.push(data.elem);\n                            }    // losers...\n                            else if (data.active[x] && data.anyactive == 1) {\n                                // former winner... dropend\n                                $special.drag.hijack(drop.event, 'dropend', dd, x, data.elem);\n                                data.active[x] = 0;\n                                data.anyactive -= 1;\n                            }\n                        }\n                    while (++i < len);    // loop\n                }\n            while (++x < end);\n            // loop\n            // check if the mouse is still moving or is idle\n            if (drop.last && xy[0] == drop.last.pageX && xy[1] == drop.last.pageY)\n                delete drop.timer;    // idle, don't recurse\n            else\n                // recurse\n                drop.timer = setTimeout(function () {\n                    drop.tolerate(dd);\n                }, drop.delay);\n            // remember event, to compare idleness\n            drop.last = drop.event;\n        }\n    };\n// share the same special event configuration with related events...\n$special.dropinit = $special.dropstart = $special.dropend = drop;","'use strict';\nvar $ = require(420    /* ../slick.jquery */);\nvar Slick = require(418    /* ../slick.core */);\nfunction CheckboxSelectColumn(options) {\n    var _grid;\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _selectedRowsLookup = {};\n    var _defaults = {\n        columnId: '_checkbox_selector',\n        cssClass: null,\n        toolTip: 'Select/Deselect All',\n        width: 30\n    };\n    var _options = $.extend(true, {}, _defaults, options);\n    function init(grid) {\n        _grid = grid;\n        _handler.subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged).subscribe(_grid.onClick, handleClick).subscribe(_grid.onHeaderClick, handleHeaderClick).subscribe(_grid.onKeyDown, handleKeyDown);\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function handleSelectedRowsChanged(e, args) {\n        var selectedRows = _grid.getSelectedRows();\n        var lookup = {}, row, i;\n        for (i = 0; i < selectedRows.length; i++) {\n            row = selectedRows[i];\n            lookup[row] = true;\n            if (lookup[row] !== _selectedRowsLookup[row]) {\n                _grid.invalidateRow(row);\n                delete _selectedRowsLookup[row];\n            }\n        }\n        for (i in _selectedRowsLookup) {\n            _grid.invalidateRow(i);\n        }\n        _selectedRowsLookup = lookup;\n        _grid.render();\n        if (selectedRows.length && selectedRows.length == _grid.getDataLength()) {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\' checked=\\'checked\\'>', _options.toolTip);\n        } else {\n            _grid.updateColumnHeader(_options.columnId, '<input type=\\'checkbox\\'>', _options.toolTip);\n        }\n    }\n    function handleKeyDown(e, args) {\n        if (e.which == 32) {\n            if (_grid.getColumns()[args.cell].id === _options.columnId) {\n                // if editing, try to commit\n                if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()) {\n                    toggleRowSelection(args.row);\n                }\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            }\n        }\n    }\n    function handleClick(e, args) {\n        // clicking on a row select checkbox\n        if (_grid.getColumns()[args.cell].id === _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            toggleRowSelection(args.row);\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function toggleRowSelection(row) {\n        if (_selectedRowsLookup[row]) {\n            _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n                return n != row;\n            }));\n        } else {\n            _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n        }\n    }\n    function selectRows(rowArray) {\n        var i, l = rowArray.length, addRows = [];\n        for (i = 0; i < l; i++) {\n            if (!_selectedRowsLookup[rowArray[i]]) {\n                addRows[addRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows(_grid.getSelectedRows().concat(addRows));\n    }\n    function deSelectRows(rowArray) {\n        var i, l = rowArray.length, removeRows = [];\n        for (i = 0; i < l; i++) {\n            if (_selectedRowsLookup[rowArray[i]]) {\n                removeRows[removeRows.length] = rowArray[i];\n            }\n        }\n        _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function (n) {\n            return removeRows.indexOf(n) < 0;\n        }));\n    }\n    function handleHeaderClick(e, args) {\n        if (args.column.id == _options.columnId && $(e.target).is(':checkbox')) {\n            // if editing, try to commit\n            if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                return;\n            }\n            if ($(e.target).is(':checked')) {\n                var rows = [];\n                for (var i = 0; i < _grid.getDataLength(); i++) {\n                    rows.push(i);\n                }\n                _grid.setSelectedRows(rows);\n            } else {\n                _grid.setSelectedRows([]);\n            }\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n    function getColumnDefinition() {\n        return {\n            id: _options.columnId,\n            name: '<input type=\\'checkbox\\'>',\n            toolTip: _options.toolTip,\n            field: 'sel',\n            width: _options.width,\n            resizable: false,\n            sortable: false,\n            cssClass: _options.cssClass,\n            formatter: checkboxSelectionFormatter\n        };\n    }\n    function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext) {\n        if (dataContext) {\n            return _selectedRowsLookup[row] ? '<input type=\\'checkbox\\' checked=\\'checked\\'>' : '<input type=\\'checkbox\\'>';\n        }\n        return null;\n    }\n    $.extend(this, {\n        'init': init,\n        'destroy': destroy,\n        'deSelectRows': deSelectRows,\n        'selectRows': selectRows,\n        'getColumnDefinition': getColumnDefinition\n    });\n}\nmodule.exports = { 'CheckboxSelectColumn': CheckboxSelectColumn };","'use strict';\nvar $ = require(420    /* ../slick.jquery */);\nvar Slick = require(418    /* ../slick.core */);\nfunction RowSelectionModel(options) {\n    var _grid;\n    var _ranges = [];\n    var _self = this;\n    var _handler = new Slick.EventHandler();\n    var _inHandler;\n    var _options;\n    var _defaults = { selectActiveRow: true };\n    function init(grid) {\n        _options = $.extend(true, {}, _defaults, options);\n        _grid = grid;\n        _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange));\n        _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown));\n        _handler.subscribe(_grid.onClick, wrapHandler(handleClick));\n    }\n    function destroy() {\n        _handler.unsubscribeAll();\n    }\n    function wrapHandler(handler) {\n        return function () {\n            if (!_inHandler) {\n                _inHandler = true;\n                handler.apply(this, arguments);\n                _inHandler = false;\n            }\n        };\n    }\n    function rangesToRows(ranges) {\n        var rows = [];\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                rows.push(j);\n            }\n        }\n        return rows;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = _grid.getColumns().length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getRowsRange(from, to) {\n        var i, rows = [];\n        for (i = from; i <= to; i++) {\n            rows.push(i);\n        }\n        for (i = to; i < from; i++) {\n            rows.push(i);\n        }\n        return rows;\n    }\n    function getSelectedRows() {\n        return rangesToRows(_ranges);\n    }\n    function setSelectedRows(rows) {\n        setSelectedRanges(rowsToRanges(rows));\n    }\n    function setSelectedRanges(ranges) {\n        // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n        if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n            return;\n        }\n        _ranges = ranges;\n        _self.onSelectedRangesChanged.notify(_ranges);\n    }\n    function getSelectedRanges() {\n        return _ranges;\n    }\n    function handleActiveCellChange(e, data) {\n        if (_options.selectActiveRow && data.row != null) {\n            setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n        }\n    }\n    function handleKeyDown(e) {\n        var activeRow = _grid.getActiveCell();\n        if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)) {\n            var selectedRows = getSelectedRows();\n            selectedRows.sort(function (x, y) {\n                return x - y;\n            });\n            if (!selectedRows.length) {\n                selectedRows = [activeRow.row];\n            }\n            var top = selectedRows[0];\n            var bottom = selectedRows[selectedRows.length - 1];\n            var active;\n            if (e.which == 40) {\n                active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n            } else {\n                active = activeRow.row < bottom ? --bottom : --top;\n            }\n            if (active >= 0 && active < _grid.getDataLength()) {\n                _grid.scrollRowIntoView(active);\n                var tempRanges = rowsToRanges(getRowsRange(top, bottom));\n                setSelectedRanges(tempRanges);\n            }\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    function handleClick(e) {\n        var cell = _grid.getCellFromEvent(e);\n        if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n            return false;\n        }\n        if (!_grid.getOptions().multiSelect || !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n            return false;\n        }\n        var selection = rangesToRows(_ranges);\n        var idx = $.inArray(cell.row, selection);\n        if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n            selection.push(cell.row);\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n            selection = $.grep(selection, function (o, i) {\n                return o !== cell.row;\n            });\n            _grid.setActiveCell(cell.row, cell.cell);\n        } else if (selection.length && e.shiftKey) {\n            var last = selection.pop();\n            var from = Math.min(cell.row, last);\n            var to = Math.max(cell.row, last);\n            selection = [];\n            for (var i = from; i <= to; i++) {\n                if (i !== last) {\n                    selection.push(i);\n                }\n            }\n            selection.push(last);\n            _grid.setActiveCell(cell.row, cell.cell);\n        }\n        var tempRanges = rowsToRanges(selection);\n        setSelectedRanges(tempRanges);\n        e.stopImmediatePropagation();\n        return true;\n    }\n    $.extend(this, {\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getSelectedRanges': getSelectedRanges,\n        'setSelectedRanges': setSelectedRanges,\n        'init': init,\n        'destroy': destroy,\n        'onSelectedRangesChanged': new Slick.Event()\n    });\n}\nmodule.exports = { 'RowSelectionModel': RowSelectionModel };","'use strict';\n/***\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\n/***\n   * An event object for passing data to event handlers and letting them control propagation.\n   * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n   * @class EventData\n   * @constructor\n   */\nfunction EventData() {\n    var isPropagationStopped = false;\n    var isImmediatePropagationStopped = false;\n    /***\n     * Stops event from propagating up the DOM tree.\n     * @method stopPropagation\n     */\n    this.stopPropagation = function () {\n        isPropagationStopped = true;\n    };\n    /***\n     * Returns whether stopPropagation was called on this event object.\n     * @method isPropagationStopped\n     * @return {Boolean}\n     */\n    this.isPropagationStopped = function () {\n        return isPropagationStopped;\n    };\n    /***\n     * Prevents the rest of the handlers from being executed.\n     * @method stopImmediatePropagation\n     */\n    this.stopImmediatePropagation = function () {\n        isImmediatePropagationStopped = true;\n    };\n    /***\n     * Returns whether stopImmediatePropagation was called on this event object.\\\n     * @method isImmediatePropagationStopped\n     * @return {Boolean}\n     */\n    this.isImmediatePropagationStopped = function () {\n        return isImmediatePropagationStopped;\n    };\n}\n/***\n   * A simple publisher-subscriber implementation.\n   * @class Event\n   * @constructor\n   */\nfunction Event() {\n    var handlers = [];\n    /***\n     * Adds an event handler to be called when the event is fired.\n     * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n     * object the event was fired with.<p>\n     * @method subscribe\n     * @param fn {Function} Event handler.\n     */\n    this.subscribe = function (fn) {\n        handlers.push(fn);\n    };\n    /***\n     * Removes an event handler added with <code>subscribe(fn)</code>.\n     * @method unsubscribe\n     * @param fn {Function} Event handler to be removed.\n     */\n    this.unsubscribe = function (fn) {\n        for (var i = handlers.length - 1; i >= 0; i--) {\n            if (handlers[i] === fn) {\n                handlers.splice(i, 1);\n            }\n        }\n    };\n    /***\n     * Fires an event notifying all subscribers.\n     * @method notify\n     * @param args {Object} Additional data object to be passed to all handlers.\n     * @param e {EventData}\n     *      Optional.\n     *      An <code>EventData</code> object to be passed to all handlers.\n     *      For DOM events, an existing W3C/jQuery event object can be passed in.\n     * @param scope {Object}\n     *      Optional.\n     *      The scope (\"this\") within which the handler will be executed.\n     *      If not specified, the scope will be set to the <code>Event</code> instance.\n     */\n    this.notify = function (args, e, scope) {\n        e = e || new EventData();\n        scope = scope || this;\n        var returnValue;\n        for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\n            returnValue = handlers[i].call(scope, e, args);\n        }\n        return returnValue;\n    };\n}\nfunction EventHandler() {\n    var handlers = [];\n    this.subscribe = function (event, handler) {\n        handlers.push({\n            event: event,\n            handler: handler\n        });\n        event.subscribe(handler);\n        return this;    // allow chaining\n    };\n    this.unsubscribe = function (event, handler) {\n        var i = handlers.length;\n        while (i--) {\n            if (handlers[i].event === event && handlers[i].handler === handler) {\n                handlers.splice(i, 1);\n                event.unsubscribe(handler);\n                return;\n            }\n        }\n        return this;    // allow chaining\n    };\n    this.unsubscribeAll = function () {\n        var i = handlers.length;\n        while (i--) {\n            handlers[i].event.unsubscribe(handlers[i].handler);\n        }\n        handlers = [];\n        return this;    // allow chaining\n    };\n}\n/***\n   * A structure containing a range of cells.\n   * @class Range\n   * @constructor\n   * @param fromRow {Integer} Starting row.\n   * @param fromCell {Integer} Starting cell.\n   * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n   * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n   */\nfunction Range(fromRow, fromCell, toRow, toCell) {\n    if (toRow === undefined && toCell === undefined) {\n        toRow = fromRow;\n        toCell = fromCell;\n    }\n    /***\n     * @property fromRow\n     * @type {Integer}\n     */\n    this.fromRow = Math.min(fromRow, toRow);\n    /***\n     * @property fromCell\n     * @type {Integer}\n     */\n    this.fromCell = Math.min(fromCell, toCell);\n    /***\n     * @property toRow\n     * @type {Integer}\n     */\n    this.toRow = Math.max(fromRow, toRow);\n    /***\n     * @property toCell\n     * @type {Integer}\n     */\n    this.toCell = Math.max(fromCell, toCell);\n    /***\n     * Returns whether a range represents a single row.\n     * @method isSingleRow\n     * @return {Boolean}\n     */\n    this.isSingleRow = function () {\n        return this.fromRow == this.toRow;\n    };\n    /***\n     * Returns whether a range represents a single cell.\n     * @method isSingleCell\n     * @return {Boolean}\n     */\n    this.isSingleCell = function () {\n        return this.fromRow == this.toRow && this.fromCell == this.toCell;\n    };\n    /***\n     * Returns whether a range contains a given cell.\n     * @method contains\n     * @param row {Integer}\n     * @param cell {Integer}\n     * @return {Boolean}\n     */\n    this.contains = function (row, cell) {\n        return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n    };\n    /***\n     * Returns a readable representation of a range.\n     * @method toString\n     * @return {String}\n     */\n    this.toString = function () {\n        if (this.isSingleCell()) {\n            return '(' + this.fromRow + ':' + this.fromCell + ')';\n        } else {\n            return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n        }\n    };\n}\n/***\n   * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n   * @class NonDataItem\n   * @constructor\n   */\nfunction NonDataItem() {\n    this.__nonDataRow = true;\n}\n/***\n   * Information about a group of rows.\n   * @class Group\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction Group() {\n    this.__group = true;\n    /**\n     * Grouping level, starting with 0.\n     * @property level\n     * @type {Number}\n     */\n    this.level = 0;\n    /***\n     * Number of rows in the group.\n     * @property count\n     * @type {Integer}\n     */\n    this.count = 0;\n    /***\n     * Grouping value.\n     * @property value\n     * @type {Object}\n     */\n    this.value = null;\n    /***\n     * Formatted display value of the group.\n     * @property title\n     * @type {String}\n     */\n    this.title = null;\n    /***\n     * Whether a group is collapsed.\n     * @property collapsed\n     * @type {Boolean}\n     */\n    this.collapsed = false;\n    /***\n     * Whether a group selection checkbox is checked.\n     * @property selectChecked\n     * @type {Boolean}\n     */\n    this.selectChecked = false;\n    /***\n     * GroupTotals, if any.\n     * @property totals\n     * @type {GroupTotals}\n     */\n    this.totals = null;\n    /**\n     * Rows that are part of the group.\n     * @property rows\n     * @type {Array}\n     */\n    this.rows = [];\n    /**\n     * Sub-groups that are part of the group.\n     * @property groups\n     * @type {Array}\n     */\n    this.groups = null;\n    /**\n     * A unique key used to identify the group.  This key can be used in calls to DataView\n     * collapseGroup() or expandGroup().\n     * @property groupingKey\n     * @type {Object}\n     */\n    this.groupingKey = null;\n}\nGroup.prototype = new NonDataItem();\n/***\n   * Compares two Group instances.\n   * @method equals\n   * @return {Boolean}\n   * @param group {Group} Group instance to compare to.\n   */\nGroup.prototype.equals = function (group) {\n    return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n/***\n   * Information about group totals.\n   * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n   * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n   * formatters during the display.\n   * @class GroupTotals\n   * @extends Slick.NonDataItem\n   * @constructor\n   */\nfunction GroupTotals() {\n    this.__groupTotals = true;\n    /***\n     * Parent Group.\n     * @param group\n     * @type {Group}\n     */\n    this.group = null;\n    /***\n     * Whether the totals have been fully initialized / calculated.\n     * Will be set to false for lazy-calculated group totals.\n     * @param initialized\n     * @type {Boolean}\n     */\n    this.initialized = false;\n}\nGroupTotals.prototype = new NonDataItem();\n/***\n   * A locking helper to track the active edit controller and ensure that only a single controller\n   * can be active at a time.  This prevents a whole class of state and validation synchronization\n   * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n   * and attempt a commit or cancel before proceeding.\n   * @class EditorLock\n   * @constructor\n   */\nfunction EditorLock() {\n    var activeEditController = null;\n    /***\n     * Returns true if a specified edit controller is active (has the edit lock).\n     * If the parameter is not specified, returns true if any edit controller is active.\n     * @method isActive\n     * @param editController {EditController}\n     * @return {Boolean}\n     */\n    this.isActive = function (editController) {\n        return editController ? activeEditController === editController : activeEditController !== null;\n    };\n    /***\n     * Sets the specified edit controller as the active edit controller (acquire edit lock).\n     * If another edit controller is already active, and exception will be throw new Error(.\n     * @method activate\n     * @param editController {EditController} edit controller acquiring the lock\n     */\n    this.activate = function (editController) {\n        if (editController === activeEditController) {\n            // already activated?\n            return;\n        }\n        if (activeEditController !== null) {\n            throw new Error('SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController');\n        }\n        if (!editController.commitCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()');\n        }\n        if (!editController.cancelCurrentEdit) {\n            throw new Error('SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()');\n        }\n        activeEditController = editController;\n    };\n    /***\n     * Unsets the specified edit controller as the active edit controller (release edit lock).\n     * If the specified edit controller is not the active one, an exception will be throw new Error(.\n     * @method deactivate\n     * @param editController {EditController} edit controller releasing the lock\n     */\n    this.deactivate = function (editController) {\n        if (activeEditController !== editController) {\n            throw new Error('SlickGrid.EditorLock.deactivate: specified editController is not the currently active one');\n        }\n        activeEditController = null;\n    };\n    /***\n     * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n     * controller and returns whether the commit attempt was successful (commit may fail due to validation\n     * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n     * and false otherwise.  If no edit controller is active, returns true.\n     * @method commitCurrentEdit\n     * @return {Boolean}\n     */\n    this.commitCurrentEdit = function () {\n        return activeEditController ? activeEditController.commitCurrentEdit() : true;\n    };\n    /***\n     * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n     * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n     * active, returns true.\n     * @method cancelCurrentEdit\n     * @return {Boolean}\n     */\n    this.cancelCurrentEdit = function cancelCurrentEdit() {\n        return activeEditController ? activeEditController.cancelCurrentEdit() : true;\n    };\n}\nmodule.exports = {\n    'Event': Event,\n    'EventData': EventData,\n    'EventHandler': EventHandler,\n    'Range': Range,\n    'NonDataRow': NonDataItem,\n    'Group': Group,\n    'GroupTotals': GroupTotals,\n    'EditorLock': EditorLock,\n    /***\n     * A global singleton editor lock.\n     * @class GlobalEditorLock\n     * @static\n     * @constructor\n     */\n    'GlobalEditorLock': new EditorLock(),\n    'keyCode': {\n        BACKSPACE: 8,\n        DELETE: 46,\n        DOWN: 40,\n        END: 35,\n        ENTER: 13,\n        ESCAPE: 27,\n        ESC: 27,\n        HOME: 36,\n        INSERT: 45,\n        LEFT: 37,\n        PAGE_DOWN: 34,\n        PAGE_UP: 33,\n        RIGHT: 39,\n        TAB: 9,\n        UP: 38,\n        C: 67,\n        V: 86\n    },\n    'preClickClassName': 'slick-edit-preclick'\n};","'use strict';\n/**\r\n * @license\r\n * (c) 2009-2016 Michael Leibman\r\n * michael{dot}leibman{at}gmail{dot}com\r\n * http://github.com/mleibman/slickgrid\r\n *\r\n * Distributed under MIT license.\r\n * All rights reserved.\r\n *\r\n * SlickGrid v2.3\r\n *\r\n * NOTES:\r\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\r\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\r\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\r\n *     and do proper cleanup.\r\n */\nvar $ = require(420    /* ./slick.jquery */);\nvar Slick = require(418    /* ./slick.core */);\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight;\n// browser's breaking point\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n/**\r\n   * Creates a new instance of the grid.\r\n   * @class SlickGrid\r\n   * @constructor\r\n   * @param {Node}              container   Container node to create the grid in.\r\n   * @param {Array,Object}      data        An array of objects for databinding.\r\n   * @param {Array}             columns     An array of column definitions.\r\n   * @param {Object}            options     Grid options.\r\n   **/\nfunction SlickGrid(container, data, columns, options) {\n    if (!$.fn.drag) {\n        require(414    /* ./lib/jquery.event.drag-2.3.0 */);\n    }\n    if (!$.fn.drop) {\n        require(415    /* ./lib/jquery.event.drop-2.3.0 */);\n    }\n    // settings\n    var defaults = {\n        explicitInitialization: false,\n        rowHeight: 25,\n        defaultColumnWidth: 80,\n        enableAddRow: false,\n        leaveSpaceForNewRows: false,\n        editable: false,\n        autoEdit: true,\n        enableCellNavigation: true,\n        enableColumnReorder: true,\n        asyncEditorLoading: false,\n        asyncEditorLoadDelay: 100,\n        forceFitColumns: false,\n        enableAsyncPostRender: false,\n        asyncPostRenderDelay: 50,\n        enableAsyncPostRenderCleanup: false,\n        asyncPostRenderCleanupDelay: 40,\n        autoHeight: false,\n        editorLock: Slick.GlobalEditorLock,\n        showHeaderRow: false,\n        headerRowHeight: 25,\n        createFooterRow: false,\n        showFooterRow: false,\n        footerRowHeight: 25,\n        createPreHeaderPanel: false,\n        showPreHeaderPanel: false,\n        preHeaderPanelHeight: 25,\n        showTopPanel: false,\n        topPanelHeight: 25,\n        formatterFactory: null,\n        editorFactory: null,\n        cellFlashingCssClass: 'flashing',\n        selectedCellCssClass: 'selected',\n        multiSelect: true,\n        enableTextSelectionOnCells: false,\n        dataItemColumnValueExtractor: null,\n        fullWidthRows: false,\n        multiColumnSort: false,\n        numberedMultiColumnSort: false,\n        tristateMultiColumnSort: false,\n        defaultFormatter: defaultFormatter,\n        forceSyncScrolling: false,\n        addNewRowCssClass: 'new-row',\n        preserveCopiedSelectionOnPaste: false,\n        showCellSelection: true\n    };\n    var columnDefaults = {\n        name: '',\n        resizable: true,\n        sortable: false,\n        minWidth: 30,\n        rerenderOnResize: false,\n        headerCssClass: null,\n        defaultSortAsc: true,\n        focusable: true,\n        selectable: true\n    };\n    // scroller\n    var th;\n    // virtual height\n    var h;\n    // real scrollable height\n    var ph;\n    // page height\n    var n;\n    // number of pages\n    var cj;\n    // \"jumpiness\" coefficient\n    var page = 0;\n    // current page\n    var offset = 0;\n    // current page offset\n    var vScrollDir = 1;\n    // private\n    var initialized = false;\n    var $container;\n    var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n    var self = this;\n    var $focusSink, $focusSink2;\n    var $headerScroller;\n    var $headers;\n    var $headerRow, $headerRowScroller, $headerRowSpacer;\n    var $footerRow, $footerRowScroller, $footerRowSpacer;\n    var $preHeaderPanel, $preHeaderPanelScroller, $preHeaderPanelSpacer;\n    var $topPanelScroller;\n    var $topPanel;\n    var $viewport;\n    var $canvas;\n    var $style;\n    var $boundAncestors;\n    var stylesheet, columnCssRulesL, columnCssRulesR;\n    var viewportH, viewportW;\n    var canvasWidth;\n    var viewportHasHScroll, viewportHasVScroll;\n    var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0,\n        // border+padding\n        cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\n    var absoluteColumnMinWidth;\n    var sortIndicatorCssClass = 'slick-sort-indicator';\n    var tabbingDirection = 1;\n    var activePosX;\n    var activeRow, activeCell;\n    var activeCellNode = null;\n    var currentEditor = null;\n    var serializedEditorValue;\n    var editController;\n    var rowsCache = {};\n    var renderedRows = 0;\n    var numVisibleRows;\n    var prevScrollTop = 0;\n    var scrollTop = 0;\n    var lastRenderedScrollTop = 0;\n    var lastRenderedScrollLeft = 0;\n    var prevScrollLeft = 0;\n    var scrollLeft = 0;\n    var selectionModel;\n    var selectedRows = [];\n    var plugins = [];\n    var cellCssClasses = {};\n    var columnsById = {};\n    var sortColumns = [];\n    var columnPosLeft = [];\n    var columnPosRight = [];\n    var pagingActive = false;\n    var pagingIsLastPage = false;\n    // async call handles\n    var h_editorLoader = null;\n    var h_render = null;\n    var h_postrender = null;\n    var h_postrenderCleanup = null;\n    var postProcessedRows = {};\n    var postProcessToRow = null;\n    var postProcessFromRow = null;\n    var postProcessedCleanupQueue = [];\n    var postProcessgroupId = 0;\n    // perf counters\n    var counter_rows_rendered = 0;\n    var counter_rows_removed = 0;\n    // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n    // See http://crbug.com/312427.\n    var rowNodeFromLastMouseWheelEvent;\n    // this node must not be deleted while inertial scrolling\n    var zombieRowNodeFromLastMouseWheelEvent;\n    // node that was hidden instead of getting deleted\n    var zombieRowCacheFromLastMouseWheelEvent;\n    // row cache for above node\n    var zombieRowPostProcessedFromLastMouseWheelEvent;\n    // post processing references for above node\n    // store css attributes if display:none is active in container or parent\n    var cssShow = {\n        position: 'absolute',\n        visibility: 'hidden',\n        display: 'block'\n    };\n    var $hiddenParents;\n    var oldProps = [];\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Initialization\n    function init() {\n        if (container instanceof $) {\n            $container = container;\n        } else {\n            $container = $(container);\n        }\n        if ($container.length < 1) {\n            throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n        }\n        cacheCssForHiddenInit();\n        // calculate these only once and share between grid instances\n        maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n        scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n        options = $.extend({}, defaults, options);\n        validateAndEnforceOptions();\n        columnDefaults.width = options.defaultColumnWidth;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        // validate loaded JavaScript modules against requested options\n        if (options.enableColumnReorder && !$.fn.sortable) {\n            throw new Error('SlickGrid\\'s \\'enableColumnReorder = true\\' option requires jquery-ui.sortable module to be loaded');\n        }\n        editController = {\n            'commitCurrentEdit': commitCurrentEdit,\n            'cancelCurrentEdit': cancelCurrentEdit\n        };\n        $container.empty().css('overflow', 'hidden').css('outline', 0).addClass(uid).addClass('ui-widget');\n        // set up a positioning container if needed\n        if (!/relative|absolute|fixed/.test($container.css('position'))) {\n            $container.css('position', 'relative');\n        }\n        $focusSink = $('<div tabIndex=\\'0\\' hideFocus style=\\'position:fixed;width:0;height:0;top:0;left:0;outline:0;\\'></div>').appendTo($container);\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelScroller = $('<div class=\\'slick-preheader-panel ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $preHeaderPanel = $('<div />').appendTo($preHeaderPanelScroller);\n            $preHeaderPanelSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($preHeaderPanelScroller);\n            if (!options.showPreHeaderPanel) {\n                $preHeaderPanelScroller.hide();\n            }\n        }\n        $headerScroller = $('<div class=\\'slick-header ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headers = $('<div class=\\'slick-header-columns\\' style=\\'left:-1000px\\' />').appendTo($headerScroller);\n        $headers.width(getHeadersWidth());\n        $headerRowScroller = $('<div class=\\'slick-headerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $headerRow = $('<div class=\\'slick-headerrow-columns\\' />').appendTo($headerRowScroller);\n        $headerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScroller);\n        $topPanelScroller = $('<div class=\\'slick-top-panel-scroller ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n        $topPanel = $('<div class=\\'slick-top-panel\\' style=\\'width:10000px\\' />').appendTo($topPanelScroller);\n        if (!options.showTopPanel) {\n            $topPanelScroller.hide();\n        }\n        if (!options.showHeaderRow) {\n            $headerRowScroller.hide();\n        }\n        $viewport = $('<div class=\\'slick-viewport\\' style=\\'width:100%;overflow:auto;outline:0;position:relative;;\\'>').appendTo($container);\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        $canvas = $('<div class=\\'grid-canvas\\' />').appendTo($viewport);\n        if (options.createFooterRow) {\n            $footerRowScroller = $('<div class=\\'slick-footerrow ui-state-default\\' style=\\'overflow:hidden;position:relative;\\' />').appendTo($container);\n            $footerRow = $('<div class=\\'slick-footerrow-columns\\' />').appendTo($footerRowScroller);\n            $footerRowSpacer = $('<div style=\\'display:block;height:1px;position:absolute;top:0;left:0;\\'></div>').css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScroller);\n            if (!options.showFooterRow) {\n                $footerRowScroller.hide();\n            }\n        }\n        if (options.numberedMultiColumnSort) {\n            sortIndicatorCssClass = 'slick-sort-indicator-numbered';\n        }\n        $focusSink2 = $focusSink.clone().appendTo($container);\n        if (!options.explicitInitialization) {\n            finishInitialization();\n        }\n    }\n    function finishInitialization() {\n        if (!initialized) {\n            initialized = true;\n            viewportW = parseFloat($.css($container[0], 'width', true));\n            // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n            // calculate the diff so we can set consistent sizes\n            measureCellPaddingAndBorder();\n            // for usability reasons, all text selection in SlickGrid is disabled\n            // with the exception of input and textarea elements (selection must\n            // be enabled there so that editors work as expected); note that\n            // selection in grid cells (grid body) is already unavailable in\n            // all browsers except IE\n            disableSelection($headers);\n            // disable all text selection in header (including input and textarea)\n            if (!options.enableTextSelectionOnCells) {\n                // disable text selection in grid cells except in input and textarea elements\n                // (this is IE-specific, because selectstart event will only fire in IE)\n                $viewport.on('selectstart.ui', function (event) {\n                    return $(event.target).is('input,textarea');\n                });\n            }\n            updateColumnCaches();\n            createColumnHeaders();\n            setupColumnSort();\n            createCssRules();\n            resizeCanvas();\n            bindAncestorScrollEvents();\n            $container.on('resize.slickgrid', resizeCanvas);\n            $viewport    //.on(\"click\", handleClick)\n.on('scroll', handleScroll);\n            $headerScroller.on('contextmenu', handleHeaderContextMenu).on('click', handleHeaderClick).on('mouseenter', '.slick-header-column', handleHeaderMouseEnter).on('mouseleave', '.slick-header-column', handleHeaderMouseLeave);\n            $headerRowScroller.on('scroll', handleHeaderRowScroll);\n            if (options.createFooterRow) {\n                $footerRowScroller.on('scroll', handleFooterRowScroll);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller.on('scroll', handlePreHeaderPanelScroll);\n            }\n            $focusSink.add($focusSink2).on('keydown', handleKeyDown);\n            $canvas.on('keydown', handleKeyDown).on('click', handleClick).on('dblclick', handleDblClick).on('contextmenu', handleContextMenu).on('draginit', handleDragInit).on('dragstart', { distance: 3 }, handleDragStart).on('drag', handleDrag).on('dragend', handleDragEnd).on('mouseenter', '.slick-cell', handleMouseEnter).on('mouseleave', '.slick-cell', handleMouseLeave);\n            // Work around http://crbug.com/312427.\n            if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n                $canvas.on('mousewheel', handleMouseWheel);\n            }\n            restoreCssFromHiddenInit();\n        }\n    }\n    function cacheCssForHiddenInit() {\n        // handle display:none on container or container parents\n        $hiddenParents = $container.parents().addBack().not(':visible');\n        $hiddenParents.each(function () {\n            var old = {};\n            for (var name in cssShow) {\n                old[name] = this.style[name];\n                this.style[name] = cssShow[name];\n            }\n            oldProps.push(old);\n        });\n    }\n    function restoreCssFromHiddenInit() {\n        // finish handle display:none on container or container parents\n        // - put values back the way they were\n        $hiddenParents.each(function (i) {\n            var old = oldProps[i];\n            for (var name in cssShow) {\n                this.style[name] = old[name];\n            }\n        });\n    }\n    function registerPlugin(plugin) {\n        plugins.unshift(plugin);\n        plugin.init(self);\n    }\n    function unregisterPlugin(plugin) {\n        for (var i = plugins.length; i >= 0; i--) {\n            if (plugins[i] === plugin) {\n                if (plugins[i].destroy) {\n                    plugins[i].destroy();\n                }\n                plugins.splice(i, 1);\n                break;\n            }\n        }\n    }\n    function setSelectionModel(model) {\n        if (selectionModel) {\n            selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n            if (selectionModel.destroy) {\n                selectionModel.destroy();\n            }\n        }\n        selectionModel = model;\n        if (selectionModel) {\n            selectionModel.init(self);\n            selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n        }\n    }\n    function getSelectionModel() {\n        return selectionModel;\n    }\n    function getCanvasNode() {\n        return $canvas[0];\n    }\n    function measureScrollbar() {\n        var $c = $('<div style=\\'position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;\\'></div>').appendTo('body');\n        var dim = {\n            width: $c.width() - $c[0].clientWidth,\n            height: $c.height() - $c[0].clientHeight\n        };\n        $c.remove();\n        return dim;\n    }\n    function getColumnTotalWidth(includeScrollbar) {\n        var totalWidth = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            var width = columns[i].width;\n            totalWidth += width;\n        }\n        if (includeScrollbar) {\n            totalWidth += scrollbarDimensions.width;\n        }\n        return totalWidth;\n    }\n    function getHeadersWidth() {\n        var headersWidth = getColumnTotalWidth(true);\n        return Math.max(headersWidth, viewportW) + 1000;\n    }\n    function getCanvasWidth() {\n        var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        var rowWidth = 0;\n        var i = columns.length;\n        while (i--) {\n            rowWidth += columns[i].width;\n        }\n        return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n    }\n    function updateCanvasWidth(forceColumnWidthsUpdate) {\n        var oldCanvasWidth = canvasWidth;\n        canvasWidth = getCanvasWidth();\n        if (canvasWidth != oldCanvasWidth) {\n            $canvas.width(canvasWidth);\n            $headerRow.width(canvasWidth);\n            if (options.createFooterRow) {\n                $footerRow.width(canvasWidth);\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanel.width(canvasWidth);\n            }\n            $headers.width(getHeadersWidth());\n            viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        }\n        var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n        $headerRowSpacer.width(w);\n        if (options.createFooterRow) {\n            $footerRowSpacer.width(w);\n        }\n        if (options.createPreHeaderPanel) {\n            $preHeaderPanelSpacer.width(w);\n        }\n        if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n            applyColumnWidths();\n        }\n    }\n    function disableSelection($target) {\n        if ($target && $target.jquery) {\n            $target.attr('unselectable', 'on').css('MozUserSelect', 'none').on('selectstart.ui', function () {\n                return false;\n            });    // from jquery:ui.core.js 1.7.2\n        }\n    }\n    function getMaxSupportedCssHeight() {\n        var supportedHeight = 1000000;\n        // FF reports the height back but still renders blank after ~6M px\n        var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n        var div = $('<div style=\\'display:none\\' />').appendTo(document.body);\n        while (true) {\n            var test = supportedHeight * 2;\n            div.css('height', test);\n            if (test > testUpTo || div.height() !== test) {\n                break;\n            } else {\n                supportedHeight = test;\n            }\n        }\n        div.remove();\n        return supportedHeight;\n    }\n    function getUID() {\n        return uid;\n    }\n    function getHeaderColumnWidthDiff() {\n        return headerColumnWidthDiff;\n    }\n    function getScrollbarDimensions() {\n        return scrollbarDimensions;\n    }\n    // TODO:  this is static.  need to handle page mutation.\n    function bindAncestorScrollEvents() {\n        var elem = $canvas[0];\n        while ((elem = elem.parentNode) != document.body && elem != null) {\n            // bind to scroll containers only\n            if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n                var $elem = $(elem);\n                if (!$boundAncestors) {\n                    $boundAncestors = $elem;\n                } else {\n                    $boundAncestors = $boundAncestors.add($elem);\n                }\n                $elem.on('scroll.' + uid, handleActiveCellPositionChange);\n            }\n        }\n    }\n    function unbindAncestorScrollEvents() {\n        if (!$boundAncestors) {\n            return;\n        }\n        $boundAncestors.off('scroll.' + uid);\n        $boundAncestors = null;\n    }\n    function updateColumnHeader(columnId, title, toolTip) {\n        if (!initialized) {\n            return;\n        }\n        var idx = getColumnIndex(columnId);\n        if (idx == null) {\n            return;\n        }\n        var columnDef = columns[idx];\n        var $header = $headers.children().eq(idx);\n        if ($header) {\n            if (title !== undefined) {\n                columns[idx].name = title;\n            }\n            if (toolTip !== undefined) {\n                columns[idx].toolTip = toolTip;\n            }\n            trigger(self.onBeforeHeaderCellDestroy, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n            $header.attr('title', toolTip || '').children().eq(0).html(title);\n            trigger(self.onHeaderCellRendered, {\n                'node': $header[0],\n                'column': columnDef,\n                'grid': self\n            });\n        }\n    }\n    function getHeaderRow() {\n        return $headerRow[0];\n    }\n    function getFooterRow() {\n        return $footerRow[0];\n    }\n    function getPreHeaderPanel() {\n        return $preHeaderPanel[0];\n    }\n    function getHeaderRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $header = $headerRow.children().eq(idx);\n        return $header && $header[0];\n    }\n    function getFooterRowColumn(columnId) {\n        var idx = getColumnIndex(columnId);\n        var $footer = $footerRow.children().eq(idx);\n        return $footer && $footer[0];\n    }\n    function createColumnHeaders() {\n        function onMouseEnter() {\n            $(this).addClass('ui-state-hover');\n        }\n        function onMouseLeave() {\n            $(this).removeClass('ui-state-hover');\n        }\n        $headers.find('.slick-header-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headers.empty();\n        $headers.width(getHeadersWidth());\n        $headerRow.find('.slick-headerrow-column').each(function () {\n            var columnDef = $(this).data('column');\n            if (columnDef) {\n                trigger(self.onBeforeHeaderRowCellDestroy, {\n                    'node': this,\n                    'column': columnDef,\n                    'grid': self\n                });\n            }\n        });\n        $headerRow.empty();\n        if (options.createFooterRow) {\n            $footerRow.find('.slick-footerrow-column').each(function () {\n                var columnDef = $(this).data('column');\n                if (columnDef) {\n                    trigger(self.onBeforeFooterRowCellDestroy, {\n                        'node': this,\n                        'column': columnDef\n                    });\n                }\n            });\n            $footerRow.empty();\n        }\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i];\n            var header = $('<div class=\\'ui-state-default slick-header-column\\' />').html('<span class=\\'slick-column-name\\'>' + m.name + '</span>').width(m.width - headerColumnWidthDiff).attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').appendTo($headers);\n            if (options.enableColumnReorder || m.sortable) {\n                header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n            }\n            if (m.sortable) {\n                header.addClass('slick-header-sortable');\n                header.append('<span class=\\'' + sortIndicatorCssClass + '\\' />');\n            }\n            trigger(self.onHeaderCellRendered, {\n                'node': header[0],\n                'column': m,\n                'grid': self\n            });\n            if (options.showHeaderRow) {\n                var headerRowCell = $('<div class=\\'ui-state-default slick-headerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($headerRow);\n                trigger(self.onHeaderRowCellRendered, {\n                    'node': headerRowCell[0],\n                    'column': m,\n                    'grid': self\n                });\n            }\n            if (options.createFooterRow && options.showFooterRow) {\n                var footerRowCell = $('<div class=\\'ui-state-default slick-footerrow-column l' + i + ' r' + i + '\\'></div>').data('column', m).appendTo($footerRow);\n                trigger(self.onFooterRowCellRendered, {\n                    'node': footerRowCell[0],\n                    'column': m\n                });\n            }\n        }\n        setSortColumns(sortColumns);\n        setupColumnResize();\n        if (options.enableColumnReorder) {\n            if (typeof options.enableColumnReorder == 'function') {\n                options.enableColumnReorder(self, $headers, headerColumnWidthDiff, setColumns, setupColumnResize, columns, getColumnIndex, uid, trigger);\n            } else {\n                setupColumnReorder();\n            }\n        }\n    }\n    function setupColumnSort() {\n        $headers.click(function (e) {\n            // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n            e.metaKey = e.metaKey || e.ctrlKey;\n            if ($(e.target).hasClass('slick-resizable-handle')) {\n                return;\n            }\n            var $col = $(e.target).closest('.slick-header-column');\n            if (!$col.length) {\n                return;\n            }\n            var column = $col.data('column');\n            if (column.sortable) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return;\n                }\n                var sortColumn = null;\n                var i = 0;\n                for (; i < sortColumns.length; i++) {\n                    if (sortColumns[i].columnId == column.id) {\n                        sortColumn = sortColumns[i];\n                        sortColumn.sortAsc = !sortColumn.sortAsc;\n                        break;\n                    }\n                }\n                var hadSortCol = !!sortColumn;\n                if (options.tristateMultiColumnSort) {\n                    if (!sortColumn) {\n                        sortColumn = {\n                            columnId: column.id,\n                            sortAsc: column.defaultSortAsc\n                        };\n                    }\n                    if (hadSortCol && sortColumn.sortAsc) {\n                        // three state: remove sort rather than go back to ASC\n                        sortColumns.splice(i, 1);\n                        sortColumn = null;\n                    }\n                    if (!options.multiColumnSort) {\n                        sortColumns = [];\n                    }\n                    if (sortColumn && (!hadSortCol || !options.multiColumnSort)) {\n                        sortColumns.push(sortColumn);\n                    }\n                } else {\n                    // legacy behaviour\n                    if (e.metaKey && options.multiColumnSort) {\n                        if (sortColumn) {\n                            sortColumns.splice(i, 1);\n                        }\n                    } else {\n                        if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n                            sortColumns = [];\n                        }\n                        if (!sortColumn) {\n                            sortColumn = {\n                                columnId: column.id,\n                                sortAsc: column.defaultSortAsc\n                            };\n                            sortColumns.push(sortColumn);\n                        } else if (sortColumns.length == 0) {\n                            sortColumns.push(sortColumn);\n                        }\n                    }\n                }\n                setSortColumns(sortColumns);\n                if (sortColumns.length > 0) {\n                    if (!options.multiColumnSort) {\n                        trigger(self.onSort, {\n                            multiColumnSort: false,\n                            sortCol: column,\n                            sortAsc: sortColumns[0].sortAsc,\n                            grid: self\n                        }, e);\n                    } else {\n                        trigger(self.onSort, {\n                            multiColumnSort: true,\n                            sortCols: $.map(sortColumns, function (col) {\n                                return {\n                                    sortCol: columns[getColumnIndex(col.columnId)],\n                                    sortAsc: col.sortAsc\n                                };\n                            }),\n                            grid: self\n                        }, e);\n                    }\n                }\n            }\n        });\n    }\n    function setupColumnReorder() {\n        $headers.filter(':ui-sortable').sortable('destroy');\n        $headers.sortable({\n            containment: 'parent',\n            distance: 3,\n            axis: 'x',\n            cursor: 'default',\n            tolerance: 'intersection',\n            helper: 'clone',\n            placeholder: 'slick-sortable-placeholder ui-state-default slick-header-column',\n            start: function (e, ui) {\n                ui.placeholder.width(ui.helper.outerWidth() - headerColumnWidthDiff);\n                $(ui.helper).addClass('slick-header-column-active');\n            },\n            beforeStop: function (e, ui) {\n                $(ui.helper).removeClass('slick-header-column-active');\n            },\n            stop: function (e) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    $(this).sortable('cancel');\n                    return;\n                }\n                var reorderedIds = $headers.sortable('toArray');\n                var reorderedColumns = [];\n                for (var i = 0; i < reorderedIds.length; i++) {\n                    reorderedColumns.push(columns[getColumnIndex(reorderedIds[i].replace(uid, ''))]);\n                }\n                setColumns(reorderedColumns);\n                trigger(self.onColumnsReordered, { grid: self });\n                e.stopPropagation();\n                setupColumnResize();\n            }\n        });\n    }\n    function setupColumnResize() {\n        var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n        columnElements = $headers.children();\n        columnElements.find('.slick-resizable-handle').remove();\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (columns[i].resizable) {\n                if (firstResizable === undefined) {\n                    firstResizable = i;\n                }\n                lastResizable = i;\n            }\n        });\n        if (firstResizable === undefined) {\n            return;\n        }\n        columnElements.each(function (i, e) {\n            if (i >= columns.length) {\n                return;\n            }\n            if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n                return;\n            }\n            $col = $(e);\n            $('<div class=\\'slick-resizable-handle\\' />').appendTo(e).on('dragstart', function (e, dd) {\n                if (!getEditorLock().commitCurrentEdit()) {\n                    return false;\n                }\n                pageX = e.pageX;\n                $(this).parent().addClass('slick-header-column-active');\n                var shrinkLeewayOnRight = null, stretchLeewayOnRight = null;\n                // lock each column's width option to current width\n                columnElements.each(function (i, e) {\n                    if (i >= columns.length) {\n                        return;\n                    }\n                    columns[i].previousWidth = $(e).outerWidth();\n                });\n                if (options.forceFitColumns) {\n                    shrinkLeewayOnRight = 0;\n                    stretchLeewayOnRight = 0;\n                    // colums on right affect maxPageX/minPageX\n                    for (j = i + 1; j < columns.length; j++) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (stretchLeewayOnRight !== null) {\n                                if (c.maxWidth) {\n                                    stretchLeewayOnRight += c.maxWidth - c.previousWidth;\n                                } else {\n                                    stretchLeewayOnRight = null;\n                                }\n                            }\n                            shrinkLeewayOnRight += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                        }\n                    }\n                }\n                var shrinkLeewayOnLeft = 0, stretchLeewayOnLeft = 0;\n                for (j = 0; j <= i; j++) {\n                    // columns on left only affect minPageX\n                    c = columns[j];\n                    if (c.resizable) {\n                        if (stretchLeewayOnLeft !== null) {\n                            if (c.maxWidth) {\n                                stretchLeewayOnLeft += c.maxWidth - c.previousWidth;\n                            } else {\n                                stretchLeewayOnLeft = null;\n                            }\n                        }\n                        shrinkLeewayOnLeft += c.previousWidth - Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                    }\n                }\n                if (shrinkLeewayOnRight === null) {\n                    shrinkLeewayOnRight = 100000;\n                }\n                if (shrinkLeewayOnLeft === null) {\n                    shrinkLeewayOnLeft = 100000;\n                }\n                if (stretchLeewayOnRight === null) {\n                    stretchLeewayOnRight = 100000;\n                }\n                if (stretchLeewayOnLeft === null) {\n                    stretchLeewayOnLeft = 100000;\n                }\n                maxPageX = pageX + Math.min(shrinkLeewayOnRight, stretchLeewayOnLeft);\n                minPageX = pageX - Math.min(shrinkLeewayOnLeft, stretchLeewayOnRight);\n            }).on('drag', function (e, dd) {\n                var actualMinWidth, d = Math.min(maxPageX, Math.max(minPageX, e.pageX)) - pageX, x;\n                if (d < 0) {\n                    // shrink column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                            if (x && c.previousWidth + x < actualMinWidth) {\n                                x += c.previousWidth - actualMinWidth;\n                                c.width = actualMinWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                    x -= c.maxWidth - c.previousWidth;\n                                    c.width = c.maxWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    // stretch column\n                    x = d;\n                    for (j = i; j >= 0; j--) {\n                        c = columns[j];\n                        if (c.resizable) {\n                            if (x && c.maxWidth && c.maxWidth - c.previousWidth < x) {\n                                x -= c.maxWidth - c.previousWidth;\n                                c.width = c.maxWidth;\n                            } else {\n                                c.width = c.previousWidth + x;\n                                x = 0;\n                            }\n                        }\n                    }\n                    if (options.forceFitColumns) {\n                        x = -d;\n                        for (j = i + 1; j < columns.length; j++) {\n                            c = columns[j];\n                            if (c.resizable) {\n                                actualMinWidth = Math.max(c.minWidth || 0, absoluteColumnMinWidth);\n                                if (x && c.previousWidth + x < actualMinWidth) {\n                                    x += c.previousWidth - actualMinWidth;\n                                    c.width = actualMinWidth;\n                                } else {\n                                    c.width = c.previousWidth + x;\n                                    x = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n                applyColumnHeaderWidths();\n                if (options.syncColumnCellResize) {\n                    applyColumnWidths();\n                }\n            }).on('dragend', function (e, dd) {\n                var newWidth;\n                $(this).parent().removeClass('slick-header-column-active');\n                for (j = 0; j < columns.length; j++) {\n                    c = columns[j];\n                    newWidth = $(columnElements[j]).outerWidth();\n                    if (c.previousWidth !== newWidth && c.rerenderOnResize) {\n                        invalidateAllRows();\n                    }\n                }\n                updateCanvasWidth(true);\n                render();\n                trigger(self.onColumnsResized, { grid: self });\n            });\n        });\n    }\n    function getVBoxDelta($el) {\n        var p = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        var delta = 0;\n        $.each(p, function (n, val) {\n            delta += parseFloat($el.css(val)) || 0;\n        });\n        return delta;\n    }\n    function measureCellPaddingAndBorder() {\n        var el;\n        var h = [\n            'borderLeftWidth',\n            'borderRightWidth',\n            'paddingLeft',\n            'paddingRight'\n        ];\n        var v = [\n            'borderTopWidth',\n            'borderBottomWidth',\n            'paddingTop',\n            'paddingBottom'\n        ];\n        // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n        // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n        // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n        var verArray = $.fn.jquery.split('.');\n        jQueryNewWidthBehaviour = verArray[0] == 1 && verArray[1] >= 8 || verArray[0] >= 2;\n        el = $('<div class=\\'ui-state-default slick-header-column\\' style=\\'visibility:hidden\\'>-</div>').appendTo($headers);\n        headerColumnWidthDiff = headerColumnHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        el.remove();\n        var r = $('<div class=\\'slick-row\\' />').appendTo($canvas);\n        el = $('<div class=\\'slick-cell\\' id=\\'\\' style=\\'visibility:hidden\\'>-</div>').appendTo(r);\n        cellWidthDiff = cellHeightDiff = 0;\n        if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n            $.each(h, function (n, val) {\n                cellWidthDiff += parseFloat(el.css(val)) || 0;\n            });\n            $.each(v, function (n, val) {\n                cellHeightDiff += parseFloat(el.css(val)) || 0;\n            });\n        }\n        r.remove();\n        absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n    }\n    function createCssRules() {\n        $style = $('<style type=\\'text/css\\' rel=\\'stylesheet\\' />').appendTo($('head'));\n        var rowHeight = options.rowHeight - cellHeightDiff;\n        var rules = [\n            '.' + uid + ' .slick-header-column { left: 1000px; }',\n            '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }',\n            '.' + uid + ' .slick-preheader-panel { height:' + options.preHeaderPanelHeight + 'px; }',\n            '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }',\n            '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }',\n            '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n            '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'\n        ];\n        for (var i = 0; i < columns.length; i++) {\n            rules.push('.' + uid + ' .l' + i + ' { }');\n            rules.push('.' + uid + ' .r' + i + ' { }');\n        }\n        if ($style[0].styleSheet) {\n            // IE\n            $style[0].styleSheet.cssText = rules.join(' ');\n        } else {\n            $style[0].appendChild(document.createTextNode(rules.join(' ')));\n        }\n    }\n    function getColumnCssRules(idx) {\n        var i;\n        if (!stylesheet) {\n            var sheets = document.styleSheets;\n            for (i = 0; i < sheets.length; i++) {\n                if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n                    stylesheet = sheets[i];\n                    break;\n                }\n            }\n            if (!stylesheet) {\n                throw new Error('Cannot find stylesheet.');\n            }\n            // find and cache column CSS rules\n            columnCssRulesL = [];\n            columnCssRulesR = [];\n            var cssRules = stylesheet.cssRules || stylesheet.rules;\n            var matches, columnIdx;\n            for (i = 0; i < cssRules.length; i++) {\n                var selector = cssRules[i].selectorText;\n                if (matches = /\\.l\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesL[columnIdx] = cssRules[i];\n                } else if (matches = /\\.r\\d+/.exec(selector)) {\n                    columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n                    columnCssRulesR[columnIdx] = cssRules[i];\n                }\n            }\n        }\n        return {\n            'left': columnCssRulesL[idx],\n            'right': columnCssRulesR[idx]\n        };\n    }\n    function removeCssRules() {\n        $style.remove();\n        stylesheet = null;\n    }\n    function destroy() {\n        getEditorLock().cancelCurrentEdit();\n        trigger(self.onBeforeDestroy, { grid: self });\n        var i = plugins.length;\n        while (i--) {\n            unregisterPlugin(plugins[i]);\n        }\n        if (options.enableColumnReorder) {\n            $headers.filter(':ui-sortable').sortable('destroy');\n        }\n        unbindAncestorScrollEvents();\n        $container.off('.slickgrid');\n        removeCssRules();\n        $canvas.off('draginit dragstart dragend drag');\n        $container.empty().removeClass(uid);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // General\n    function trigger(evt, args, e) {\n        e = e || new Slick.EventData();\n        args = args || {};\n        args.grid = self;\n        return evt.notify(args, e, self);\n    }\n    function getEditorLock() {\n        return options.editorLock;\n    }\n    function getEditController() {\n        return editController;\n    }\n    function getColumnIndex(id) {\n        return columnsById[id];\n    }\n    function autosizeColumns() {\n        var i, c, widths = [], shrinkLeeway = 0, total = 0, prevTotal, availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n        for (i = 0; i < columns.length; i++) {\n            c = columns[i];\n            widths.push(c.width);\n            total += c.width;\n            if (c.resizable) {\n                shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n            }\n        }\n        // shrink\n        prevTotal = total;\n        while (total > availWidth && shrinkLeeway) {\n            var shrinkProportion = (total - availWidth) / shrinkLeeway;\n            for (i = 0; i < columns.length && total > availWidth; i++) {\n                c = columns[i];\n                var width = widths[i];\n                if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n                    continue;\n                }\n                var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n                var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n                shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n                total -= shrinkSize;\n                shrinkLeeway -= shrinkSize;\n                widths[i] -= shrinkSize;\n            }\n            if (prevTotal <= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        // grow\n        prevTotal = total;\n        while (total < availWidth) {\n            var growProportion = availWidth / total;\n            for (i = 0; i < columns.length && total < availWidth; i++) {\n                c = columns[i];\n                var currentWidth = widths[i];\n                var growSize;\n                if (!c.resizable || c.maxWidth <= currentWidth) {\n                    growSize = 0;\n                } else {\n                    growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n                }\n                total += growSize;\n                widths[i] += total <= availWidth ? growSize : 0;\n            }\n            if (prevTotal >= total) {\n                // avoid infinite loop\n                break;\n            }\n            prevTotal = total;\n        }\n        var reRender = false;\n        for (i = 0; i < columns.length; i++) {\n            if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n                reRender = true;\n            }\n            columns[i].width = widths[i];\n        }\n        applyColumnHeaderWidths();\n        updateCanvasWidth(true);\n        if (reRender) {\n            invalidateAllRows();\n            render();\n        }\n    }\n    function applyColumnHeaderWidths() {\n        if (!initialized) {\n            return;\n        }\n        var h;\n        for (var i = 0, headers = $headers.children(), ii = columns.length; i < ii; i++) {\n            h = $(headers[i]);\n            if (jQueryNewWidthBehaviour) {\n                if (h.outerWidth() !== columns[i].width) {\n                    h.outerWidth(columns[i].width);\n                }\n            } else {\n                if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n                    h.width(columns[i].width - headerColumnWidthDiff);\n                }\n            }\n        }\n        updateColumnCaches();\n    }\n    function applyColumnWidths() {\n        var x = 0, w, rule;\n        for (var i = 0; i < columns.length; i++) {\n            w = columns[i].width;\n            rule = getColumnCssRules(i);\n            rule.left.style.left = x + 'px';\n            rule.right.style.right = canvasWidth - x - w + 'px';\n            x += columns[i].width;\n        }\n    }\n    function setSortColumn(columnId, ascending) {\n        setSortColumns([{\n                columnId: columnId,\n                sortAsc: ascending\n            }]);\n    }\n    function setSortColumns(cols) {\n        sortColumns = cols;\n        var numberCols = options.numberedMultiColumnSort && sortColumns.length > 1;\n        var headerColumnEls = $headers.children();\n        var sortIndicatorEl = headerColumnEls.removeClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n        if (numberCols) {\n            sortIndicatorEl.text('');\n        }\n        $.each(sortColumns, function (i, col) {\n            if (col.sortAsc == null) {\n                col.sortAsc = true;\n            }\n            var columnIndex = getColumnIndex(col.columnId);\n            if (columnIndex != null) {\n                sortIndicatorEl = headerColumnEls.eq(columnIndex).addClass('slick-header-column-sorted').find('.' + sortIndicatorCssClass).addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n                if (numberCols) {\n                    sortIndicatorEl.text(i + 1);\n                }\n            }\n        });\n    }\n    function getSortColumns() {\n        return sortColumns;\n    }\n    function handleSelectedRangesChanged(e, ranges) {\n        selectedRows = [];\n        var hash = {};\n        for (var i = 0; i < ranges.length; i++) {\n            for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n                if (!hash[j]) {\n                    // prevent duplicates\n                    selectedRows.push(j);\n                    hash[j] = {};\n                }\n                for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n                    if (canCellBeSelected(j, k)) {\n                        hash[j][columns[k].id] = options.selectedCellCssClass;\n                    }\n                }\n            }\n        }\n        setCellCssStyles(options.selectedCellCssClass, hash);\n        trigger(self.onSelectedRowsChanged, {\n            rows: getSelectedRows(),\n            grid: self\n        }, e);\n    }\n    function getColumns() {\n        return columns;\n    }\n    function updateColumnCaches() {\n        // Pre-calculate cell boundaries.\n        columnPosLeft = [];\n        columnPosRight = [];\n        var x = 0;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            columnPosLeft[i] = x;\n            columnPosRight[i] = x + columns[i].width;\n            x += columns[i].width;\n        }\n    }\n    function setColumns(columnDefinitions) {\n        columns = columnDefinitions;\n        columnsById = {};\n        for (var i = 0; i < columns.length; i++) {\n            var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n            columnsById[m.id] = i;\n            if (m.minWidth && m.width < m.minWidth) {\n                m.width = m.minWidth;\n            }\n            if (m.maxWidth && m.width > m.maxWidth) {\n                m.width = m.maxWidth;\n            }\n        }\n        updateColumnCaches();\n        if (initialized) {\n            invalidateAllRows();\n            createColumnHeaders();\n            removeCssRules();\n            createCssRules();\n            resizeCanvas();\n            applyColumnWidths();\n            handleScroll();\n        }\n    }\n    function getOptions() {\n        return options;\n    }\n    function setOptions(args, suppressRender) {\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        makeActiveCellNormal();\n        if (options.enableAddRow !== args.enableAddRow) {\n            invalidateRow(getDataLength());\n        }\n        options = $.extend(options, args);\n        validateAndEnforceOptions();\n        $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n        if (!suppressRender) {\n            render();\n        }\n    }\n    function validateAndEnforceOptions() {\n        if (options.autoHeight) {\n            options.leaveSpaceForNewRows = false;\n        }\n    }\n    function setData(newData, scrollToTop) {\n        data = newData;\n        invalidateAllRows();\n        updateRowCount();\n        if (scrollToTop) {\n            scrollTo(0);\n        }\n    }\n    function getData() {\n        return data;\n    }\n    function getDataLength() {\n        if (data.getLength) {\n            return data.getLength();\n        } else {\n            return data.length;\n        }\n    }\n    function getDataLengthIncludingAddNew() {\n        return getDataLength() + (!options.enableAddRow ? 0 : !pagingActive || pagingIsLastPage ? 1 : 0);\n    }\n    function getDataItem(i) {\n        if (data.getItem) {\n            return data.getItem(i);\n        } else {\n            return data[i];\n        }\n    }\n    function getTopPanel() {\n        return $topPanel[0];\n    }\n    function setTopPanelVisibility(visible) {\n        if (options.showTopPanel != visible) {\n            options.showTopPanel = visible;\n            if (visible) {\n                $topPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $topPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setHeaderRowVisibility(visible) {\n        if (options.showHeaderRow != visible) {\n            options.showHeaderRow = visible;\n            if (visible) {\n                $headerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $headerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setFooterRowVisibility(visible) {\n        if (options.showFooterRow != visible) {\n            options.showFooterRow = visible;\n            if (visible) {\n                $footerRowScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $footerRowScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function setPreHeaderPanelVisibility(visible) {\n        if (options.showPreHeaderPanel != visible) {\n            options.showPreHeaderPanel = visible;\n            if (visible) {\n                $preHeaderPanelScroller.slideDown('fast', resizeCanvas);\n            } else {\n                $preHeaderPanelScroller.slideUp('fast', resizeCanvas);\n            }\n        }\n    }\n    function getContainerNode() {\n        return $container.get(0);\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Rendering / Scrolling\n    function getRowTop(row) {\n        return options.rowHeight * row - offset;\n    }\n    function getRowFromPosition(y) {\n        return Math.floor((y + offset) / options.rowHeight);\n    }\n    function scrollTo(y) {\n        y = Math.max(y, 0);\n        y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n        var oldOffset = offset;\n        page = Math.min(n - 1, Math.floor(y / ph));\n        offset = Math.round(page * cj);\n        var newScrollTop = y - offset;\n        if (offset != oldOffset) {\n            var range = getVisibleRange(newScrollTop);\n            cleanupRows(range);\n            updateRowPositions();\n        }\n        if (prevScrollTop != newScrollTop) {\n            vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n            $viewport[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n            trigger(self.onViewportChanged, { grid: self });\n        }\n    }\n    function defaultFormatter(row, cell, value, columnDef, dataContext) {\n        if (value == null) {\n            return '';\n        } else {\n            return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        }\n    }\n    function getFormatter(row, column) {\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        // look up by id, then index\n        var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n        return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n    }\n    function getEditor(row, cell) {\n        var column = columns[cell];\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n            return columnMetadata[column.id].editor;\n        }\n        if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n            return columnMetadata[cell].editor;\n        }\n        return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n    }\n    function getDataItemValueForColumn(item, columnDef) {\n        if (options.dataItemColumnValueExtractor) {\n            return options.dataItemColumnValueExtractor(item, columnDef);\n        }\n        return item[columnDef.field];\n    }\n    function appendRowHtml(stringArray, row, range, dataLength) {\n        var d = getDataItem(row);\n        var dataLoading = row < dataLength && !d;\n        var rowCss = 'slick-row' + (dataLoading ? ' loading' : '') + (row === activeRow ? ' active' : '') + (row % 2 == 1 ? ' odd' : ' even');\n        if (!d) {\n            rowCss += ' ' + options.addNewRowCssClass;\n        }\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (metadata && metadata.cssClasses) {\n            rowCss += ' ' + metadata.cssClasses;\n        }\n        stringArray.push('<div class=\\'ui-widget-content ' + rowCss + '\\' style=\\'top:' + getRowTop(row) + 'px\\'>');\n        var colspan, m;\n        for (var i = 0, ii = columns.length; i < ii; i++) {\n            m = columns[i];\n            colspan = 1;\n            if (metadata && metadata.columns) {\n                var columnData = metadata.columns[m.id] || metadata.columns[i];\n                colspan = columnData && columnData.colspan || 1;\n                if (colspan === '*') {\n                    colspan = ii - i;\n                }\n            }\n            // Do not render cells outside of the viewport.\n            if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                if (columnPosLeft[i] > range.rightPx) {\n                    // All columns to the right are outside the range.\n                    break;\n                }\n                appendCellHtml(stringArray, row, i, colspan, d);\n            }\n            if (colspan > 1) {\n                i += colspan - 1;\n            }\n        }\n        stringArray.push('</div>');\n    }\n    function appendCellHtml(stringArray, row, cell, colspan, item) {\n        // stringArray: stringBuilder containing the HTML parts\n        // row, cell: row and column index\n        // colspan: HTML colspan\n        // item: grid data for row\n        var m = columns[cell];\n        var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? ' ' + m.cssClass : '');\n        if (row === activeRow && cell === activeCell) {\n            cellCss += ' active';\n        }\n        // TODO:  merge them together in the setter\n        for (var key in cellCssClasses) {\n            if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n                cellCss += ' ' + cellCssClasses[key][row][m.id];\n            }\n        }\n        var value = null;\n        if (item) {\n            value = getDataItemValueForColumn(item, m);\n        }\n        var formatterResult = getFormatter(row, m)(row, cell, value, m, item);\n        // get addl css class names from object type formatter return and from string type return of onBeforeAppendCell\n        var addlCssClasses = trigger(self.onBeforeAppendCell, {\n            row: row,\n            cell: cell,\n            grid: self,\n            value: value,\n            dataContext: item\n        }) || '';\n        addlCssClasses += formatterResult.addClasses ? (addlCssClasses ? ' ' : '') + formatterResult.addClasses : '';\n        stringArray.push('<div class=\\'' + cellCss + (addlCssClasses ? ' ' + addlCssClasses : '') + '\\'>');\n        // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n        if (item) {\n            stringArray.push(typeof formatterResult !== 'object' ? formatterResult : formatterResult.text);\n        }\n        stringArray.push('</div>');\n        rowsCache[row].cellRenderQueue.push(cell);\n        rowsCache[row].cellColSpans[cell] = colspan;\n    }\n    function cleanupRows(rangeToKeep) {\n        for (var i in rowsCache) {\n            if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidate() {\n        updateRowCount();\n        invalidateAllRows();\n        render();\n    }\n    function invalidateAllRows() {\n        if (currentEditor) {\n            makeActiveCellNormal();\n        }\n        for (var row in rowsCache) {\n            removeRowFromCache(row);\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n        postProcessgroupId++;\n        // store and detach node for later async cleanup\n        for (var columnIdx in postProcessedRow) {\n            if (postProcessedRow.hasOwnProperty(columnIdx)) {\n                postProcessedCleanupQueue.push({\n                    actionType: 'C',\n                    groupId: postProcessgroupId,\n                    node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n                    columnIdx: columnIdx | 0,\n                    rowIdx: rowIdx\n                });\n            }\n        }\n        postProcessedCleanupQueue.push({\n            actionType: 'R',\n            groupId: postProcessgroupId,\n            node: cacheEntry.rowNode\n        });\n        $(cacheEntry.rowNode).detach();\n    }\n    function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n        postProcessedCleanupQueue.push({\n            actionType: 'C',\n            groupId: postProcessgroupId,\n            node: cellnode,\n            columnIdx: columnIdx,\n            rowIdx: rowIdx\n        });\n        $(cellnode).detach();\n    }\n    function removeRowFromCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n            cacheEntry.rowNode.style.display = 'none';\n            zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n            zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n            zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];    // ignore post processing cleanup in this case - it will be dealt with later\n        } else {\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n                queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n            } else {\n                $canvas[0].removeChild(cacheEntry.rowNode);\n            }\n        }\n        delete rowsCache[row];\n        delete postProcessedRows[row];\n        renderedRows--;\n        counter_rows_removed++;\n    }\n    function invalidateRows(rows) {\n        var i, rl;\n        if (!rows || !rows.length) {\n            return;\n        }\n        vScrollDir = 0;\n        rl = rows.length;\n        for (i = 0; i < rl; i++) {\n            if (currentEditor && activeRow === rows[i]) {\n                makeActiveCellNormal();\n            }\n            if (rowsCache[rows[i]]) {\n                removeRowFromCache(rows[i]);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n    }\n    function invalidateRow(row) {\n        invalidateRows([row]);\n    }\n    function applyFormatResultToCellNode(formatterResult, cellNode, suppressRemove) {\n        if (typeof formatterResult !== 'object') {\n            cellNode.innerHTML = formatterResult;\n            return;\n        }\n        cellNode.innerHTML = formatterResult.text;\n        if (formatterResult.removeClasses && !suppressRemove) {\n            cellNode.removeClass(formatterResult.removeClasses);\n        }\n        if (formatterResult.addClasses) {\n            cellNode.addClass(formatterResult.addClasses);\n        }\n    }\n    function updateCell(row, cell) {\n        var cellNode = getCellNode(row, cell);\n        if (!cellNode) {\n            return;\n        }\n        var m = columns[cell], d = getDataItem(row);\n        if (currentEditor && activeRow === row && activeCell === cell) {\n            currentEditor.loadValue(d);\n        } else {\n            var formatterResult = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n            applyFormatResultToCellNode(formatterResult, cellNode);\n            invalidatePostProcessingResults(row);\n        }\n    }\n    function updateRow(row) {\n        var cacheEntry = rowsCache[row];\n        if (!cacheEntry) {\n            return;\n        }\n        ensureCellNodesInRowsCache(row);\n        var formatterResult, d = getDataItem(row);\n        for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                continue;\n            }\n            columnIdx = columnIdx | 0;\n            var m = columns[columnIdx], node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n            if (row === activeRow && columnIdx === activeCell && currentEditor) {\n                currentEditor.loadValue(d);\n            } else if (d) {\n                formatterResult = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n                applyFormatResultToCellNode(formatterResult, node);\n            } else {\n                node.innerHTML = '';\n            }\n        }\n        invalidatePostProcessingResults(row);\n    }\n    function getViewportHeight() {\n        return parseFloat($.css($container[0], 'height', true)) - parseFloat($.css($container[0], 'paddingTop', true)) - parseFloat($.css($container[0], 'paddingBottom', true)) - parseFloat($.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) - (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) - (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) - (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0) - (options.createPreHeaderPanel && options.showPreHeaderPanel ? options.preHeaderPanelHeight + getVBoxDelta($preHeaderPanelScroller) : 0);\n    }\n    function resizeCanvas() {\n        if (!initialized) {\n            return;\n        }\n        if (options.autoHeight) {\n            viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n        } else {\n            viewportH = getViewportHeight();\n        }\n        numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n        viewportW = parseFloat($.css($container[0], 'width', true));\n        if (!options.autoHeight) {\n            $viewport.height(viewportH);\n        }\n        if (options.forceFitColumns) {\n            autosizeColumns();\n        }\n        updateRowCount();\n        handleScroll();\n        // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n        lastRenderedScrollLeft = -1;\n        render();\n    }\n    function updatePagingStatusFromView(pagingInfo) {\n        pagingActive = pagingInfo.pageSize !== 0;\n        pagingIsLastPage = pagingInfo.pageNum == pagingInfo.totalPages - 1;\n    }\n    function updateRowCount() {\n        if (!initialized) {\n            return;\n        }\n        var dataLength = getDataLength();\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n        var oldViewportHasVScroll = viewportHasVScroll;\n        // with autoHeight, we do not need to accommodate the vertical scroll bar\n        viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > viewportH;\n        viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n        makeActiveCellNormal();\n        // remove the rows that are now outside of the data range\n        // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n        var r1 = dataLength - 1;\n        for (var i in rowsCache) {\n            if (i > r1) {\n                removeRowFromCache(i);\n            }\n        }\n        if (options.enableAsyncPostRenderCleanup) {\n            startPostProcessingCleanup();\n        }\n        if (activeCellNode && activeRow > r1) {\n            resetActiveCell();\n        }\n        var oldH = h;\n        th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n        if (th < maxSupportedCssHeight) {\n            // just one page\n            h = ph = th;\n            n = 1;\n            cj = 0;\n        } else {\n            // break into pages\n            h = maxSupportedCssHeight;\n            ph = h / 100;\n            n = Math.floor(th / ph);\n            cj = (th - h) / (n - 1);\n        }\n        if (h !== oldH) {\n            $canvas.css('height', h);\n            scrollTop = $viewport[0].scrollTop;\n        }\n        var oldScrollTopInRange = scrollTop + offset <= th - viewportH;\n        if (th == 0 || scrollTop == 0) {\n            page = offset = 0;\n        } else if (oldScrollTopInRange) {\n            // maintain virtual position\n            scrollTo(scrollTop + offset);\n        } else {\n            // scroll to bottom\n            scrollTo(th - viewportH);\n        }\n        if (h != oldH && options.autoHeight) {\n            resizeCanvas();\n        }\n        if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n            autosizeColumns();\n        }\n        updateCanvasWidth(false);\n    }\n    function getVisibleRange(viewportTop, viewportLeft) {\n        if (viewportTop == null) {\n            viewportTop = scrollTop;\n        }\n        if (viewportLeft == null) {\n            viewportLeft = scrollLeft;\n        }\n        return {\n            top: getRowFromPosition(viewportTop),\n            bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n            leftPx: viewportLeft,\n            rightPx: viewportLeft + viewportW\n        };\n    }\n    function getRenderedRange(viewportTop, viewportLeft) {\n        var range = getVisibleRange(viewportTop, viewportLeft);\n        var buffer = Math.round(viewportH / options.rowHeight);\n        var minBuffer = 3;\n        if (vScrollDir == -1) {\n            range.top -= buffer;\n            range.bottom += minBuffer;\n        } else if (vScrollDir == 1) {\n            range.top -= minBuffer;\n            range.bottom += buffer;\n        } else {\n            range.top -= minBuffer;\n            range.bottom += minBuffer;\n        }\n        range.top = Math.max(0, range.top);\n        range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n        range.leftPx -= viewportW;\n        range.rightPx += viewportW;\n        range.leftPx = Math.max(0, range.leftPx);\n        range.rightPx = Math.min(canvasWidth, range.rightPx);\n        return range;\n    }\n    function ensureCellNodesInRowsCache(row) {\n        var cacheEntry = rowsCache[row];\n        if (cacheEntry) {\n            if (cacheEntry.cellRenderQueue.length) {\n                var lastChild = cacheEntry.rowNode.lastChild;\n                while (cacheEntry.cellRenderQueue.length) {\n                    var columnIdx = cacheEntry.cellRenderQueue.pop();\n                    cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n                    lastChild = lastChild.previousSibling;\n                }\n            }\n        }\n    }\n    function cleanUpCells(range, row) {\n        var totalCellsRemoved = 0;\n        var cacheEntry = rowsCache[row];\n        // Remove cells outside the range.\n        var cellsToRemove = [];\n        for (var i in cacheEntry.cellNodesByColumnIdx) {\n            // I really hate it when people mess with Array.prototype.\n            if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n                continue;\n            }\n            // This is a string, so it needs to be cast back to a number.\n            i = i | 0;\n            var colspan = cacheEntry.cellColSpans[i];\n            if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n                if (!(row == activeRow && i == activeCell)) {\n                    cellsToRemove.push(i);\n                }\n            }\n        }\n        var cellToRemove, node;\n        postProcessgroupId++;\n        while ((cellToRemove = cellsToRemove.pop()) != null) {\n            node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n                queuePostProcessedCellForCleanup(node, cellToRemove, row);\n            } else {\n                cacheEntry.rowNode.removeChild(node);\n            }\n            delete cacheEntry.cellColSpans[cellToRemove];\n            delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n            if (postProcessedRows[row]) {\n                delete postProcessedRows[row][cellToRemove];\n            }\n            totalCellsRemoved++;\n        }\n    }\n    function cleanUpAndRenderCells(range) {\n        var cacheEntry;\n        var stringArray = [];\n        var processedRows = [];\n        var cellsAdded;\n        var totalCellsAdded = 0;\n        var colspan;\n        for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n            cacheEntry = rowsCache[row];\n            if (!cacheEntry) {\n                continue;\n            }\n            // cellRenderQueue populated in renderRows() needs to be cleared first\n            ensureCellNodesInRowsCache(row);\n            cleanUpCells(range, row);\n            // Render missing cells.\n            cellsAdded = 0;\n            var metadata = data.getItemMetadata && data.getItemMetadata(row);\n            metadata = metadata && metadata.columns;\n            var d = getDataItem(row);\n            // TODO:  shorten this loop (index? heuristics? binary search?)\n            for (var i = 0, ii = columns.length; i < ii; i++) {\n                // Cells to the right are outside the range.\n                if (columnPosLeft[i] > range.rightPx) {\n                    break;\n                }\n                // Already rendered.\n                if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n                    i += colspan > 1 ? colspan - 1 : 0;\n                    continue;\n                }\n                colspan = 1;\n                if (metadata) {\n                    var columnData = metadata[columns[i].id] || metadata[i];\n                    colspan = columnData && columnData.colspan || 1;\n                    if (colspan === '*') {\n                        colspan = ii - i;\n                    }\n                }\n                if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n                    appendCellHtml(stringArray, row, i, colspan, d);\n                    cellsAdded++;\n                }\n                i += colspan > 1 ? colspan - 1 : 0;\n            }\n            if (cellsAdded) {\n                totalCellsAdded += cellsAdded;\n                processedRows.push(row);\n            }\n        }\n        if (!stringArray.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        var processedRow;\n        var node;\n        while ((processedRow = processedRows.pop()) != null) {\n            cacheEntry = rowsCache[processedRow];\n            var columnIdx;\n            while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n                node = x.lastChild;\n                cacheEntry.rowNode.appendChild(node);\n                cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n            }\n        }\n    }\n    function renderRows(range) {\n        var parentNode = $canvas[0], stringArray = [], rows = [], needToReselectCell = false, dataLength = getDataLength();\n        for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n            if (rowsCache[i]) {\n                continue;\n            }\n            renderedRows++;\n            rows.push(i);\n            // Create an entry right away so that appendRowHtml() can\n            // start populatating it.\n            rowsCache[i] = {\n                'rowNode': null,\n                // ColSpans of rendered cells (by column idx).\n                // Can also be used for checking whether a cell has been rendered.\n                'cellColSpans': [],\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n                'cellNodesByColumnIdx': [],\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n                // end of the row.\n                'cellRenderQueue': []\n            };\n            appendRowHtml(stringArray, i, range, dataLength);\n            if (activeCellNode && activeRow === i) {\n                needToReselectCell = true;\n            }\n            counter_rows_rendered++;\n        }\n        if (!rows.length) {\n            return;\n        }\n        var x = document.createElement('div');\n        x.innerHTML = stringArray.join('');\n        for (var i = 0, ii = rows.length; i < ii; i++) {\n            rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n        }\n        if (needToReselectCell) {\n            activeCellNode = getCellNode(activeRow, activeCell);\n        }\n    }\n    function startPostProcessing() {\n        if (!options.enableAsyncPostRender) {\n            return;\n        }\n        clearTimeout(h_postrender);\n        h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n    }\n    function startPostProcessingCleanup() {\n        if (!options.enableAsyncPostRenderCleanup) {\n            return;\n        }\n        clearTimeout(h_postrenderCleanup);\n        h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n    function invalidatePostProcessingResults(row) {\n        // change status of columns to be re-rendered\n        for (var columnIdx in postProcessedRows[row]) {\n            if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n                postProcessedRows[row][columnIdx] = 'C';\n            }\n        }\n        postProcessFromRow = Math.min(postProcessFromRow, row);\n        postProcessToRow = Math.max(postProcessToRow, row);\n        startPostProcessing();\n    }\n    function updateRowPositions() {\n        for (var row in rowsCache) {\n            rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n        }\n    }\n    function render() {\n        if (!initialized) {\n            return;\n        }\n        var visible = getVisibleRange();\n        var rendered = getRenderedRange();\n        // remove rows no longer in the viewport\n        cleanupRows(rendered);\n        // add new rows & missing cells in existing rows\n        if (lastRenderedScrollLeft != scrollLeft) {\n            cleanUpAndRenderCells(rendered);\n        }\n        // render missing rows\n        renderRows(rendered);\n        postProcessFromRow = visible.top;\n        postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n        startPostProcessing();\n        lastRenderedScrollTop = scrollTop;\n        lastRenderedScrollLeft = scrollLeft;\n        h_render = null;\n    }\n    function handleHeaderRowScroll() {\n        var scrollLeft = $headerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleFooterRowScroll() {\n        var scrollLeft = $footerRowScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handlePreHeaderPanelScroll() {\n        var scrollLeft = $preHeaderPanelScroller[0].scrollLeft;\n        if (scrollLeft != $viewport[0].scrollLeft) {\n            $viewport[0].scrollLeft = scrollLeft;\n        }\n    }\n    function handleScroll() {\n        scrollTop = $viewport[0].scrollTop;\n        scrollLeft = $viewport[0].scrollLeft;\n        var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n        var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n        if (hScrollDist) {\n            prevScrollLeft = scrollLeft;\n            $headerScroller[0].scrollLeft = scrollLeft;\n            $topPanelScroller[0].scrollLeft = scrollLeft;\n            $headerRowScroller[0].scrollLeft = scrollLeft;\n            if (options.createFooterRow) {\n                $footerRowScroller[0].scrollLeft = scrollLeft;\n            }\n            if (options.createPreHeaderPanel) {\n                $preHeaderPanelScroller[0].scrollLeft = scrollLeft;\n            }\n        }\n        if (vScrollDist) {\n            vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n            prevScrollTop = scrollTop;\n            // switch virtual pages if needed\n            if (vScrollDist < viewportH) {\n                scrollTo(scrollTop + offset);\n            } else {\n                var oldOffset = offset;\n                if (h == viewportH) {\n                    page = 0;\n                } else {\n                    page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n                }\n                offset = Math.round(page * cj);\n                if (oldOffset != offset) {\n                    invalidateAllRows();\n                }\n            }\n        }\n        if (hScrollDist || vScrollDist) {\n            if (h_render) {\n                clearTimeout(h_render);\n            }\n            if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n                if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n                    render();\n                } else {\n                    h_render = setTimeout(render, 50);\n                }\n                trigger(self.onViewportChanged, { grid: self });\n            }\n        }\n        trigger(self.onScroll, {\n            scrollLeft: scrollLeft,\n            scrollTop: scrollTop,\n            grid: self\n        });\n    }\n    function asyncPostProcessRows() {\n        var dataLength = getDataLength();\n        while (postProcessFromRow <= postProcessToRow) {\n            var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n            var cacheEntry = rowsCache[row];\n            if (!cacheEntry || row >= dataLength) {\n                continue;\n            }\n            if (!postProcessedRows[row]) {\n                postProcessedRows[row] = {};\n            }\n            ensureCellNodesInRowsCache(row);\n            for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n                if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n                    continue;\n                }\n                columnIdx = columnIdx | 0;\n                var m = columns[columnIdx];\n                var processedStatus = postProcessedRows[row][columnIdx];\n                // C=cleanup and re-render, R=rendered\n                if (m.asyncPostRender && processedStatus !== 'R') {\n                    var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n                    if (node) {\n                        m.asyncPostRender(node, row, getDataItem(row), m, processedStatus === 'C');\n                    }\n                    postProcessedRows[row][columnIdx] = 'R';\n                }\n            }\n            h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n            return;\n        }\n    }\n    function asyncPostProcessCleanupRows() {\n        if (postProcessedCleanupQueue.length > 0) {\n            var groupId = postProcessedCleanupQueue[0].groupId;\n            // loop through all queue members with this groupID\n            while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n                var entry = postProcessedCleanupQueue.shift();\n                if (entry.actionType == 'R') {\n                    $(entry.node).remove();\n                }\n                if (entry.actionType == 'C') {\n                    var column = columns[entry.columnIdx];\n                    if (column.asyncPostRenderCleanup && entry.node) {\n                        // cleanup must also remove element\n                        column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n                    }\n                }\n            }\n            // call this function again after the specified delay\n            h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n        }\n    }\n    function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n        var node, columnId, addedRowHash, removedRowHash;\n        for (var row in rowsCache) {\n            removedRowHash = removedHash && removedHash[row];\n            addedRowHash = addedHash && addedHash[row];\n            if (removedRowHash) {\n                for (columnId in removedRowHash) {\n                    if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).removeClass(removedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n            if (addedRowHash) {\n                for (columnId in addedRowHash) {\n                    if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n                        node = getCellNode(row, getColumnIndex(columnId));\n                        if (node) {\n                            $(node).addClass(addedRowHash[columnId]);\n                        }\n                    }\n                }\n            }\n        }\n    }\n    function addCellCssStyles(key, hash) {\n        if (cellCssClasses[key]) {\n            throw new Error('addCellCssStyles: cell CSS hash with key \\'' + key + '\\' already exists.');\n        }\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, null);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function removeCellCssStyles(key) {\n        if (!cellCssClasses[key]) {\n            return;\n        }\n        updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n        delete cellCssClasses[key];\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': null,\n            'grid': self\n        });\n    }\n    function setCellCssStyles(key, hash) {\n        var prevHash = cellCssClasses[key];\n        cellCssClasses[key] = hash;\n        updateCellCssStylesOnRenderedRows(hash, prevHash);\n        trigger(self.onCellCssStylesChanged, {\n            'key': key,\n            'hash': hash,\n            'grid': self\n        });\n    }\n    function getCellCssStyles(key) {\n        return cellCssClasses[key];\n    }\n    function flashCell(row, cell, speed) {\n        speed = speed || 100;\n        if (rowsCache[row]) {\n            var $cell = $(getCellNode(row, cell));\n            var toggleCellClass = function (times) {\n                if (!times) {\n                    return;\n                }\n                setTimeout(function () {\n                    $cell.queue(function () {\n                        $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n                        toggleCellClass(times - 1);\n                    });\n                }, speed);\n            };\n            toggleCellClass(4);\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Interactivity\n    function handleMouseWheel(e) {\n        var rowNode = $(e.target).closest('.slick-row')[0];\n        if (rowNode != rowNodeFromLastMouseWheelEvent) {\n            if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n                if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n                    queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent, zombieRowPostProcessedFromLastMouseWheelEvent);\n                } else {\n                    $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n                }\n                zombieRowNodeFromLastMouseWheelEvent = null;\n                zombieRowCacheFromLastMouseWheelEvent = null;\n                zombieRowPostProcessedFromLastMouseWheelEvent = null;\n                if (options.enableAsyncPostRenderCleanup) {\n                    startPostProcessingCleanup();\n                }\n            }\n            rowNodeFromLastMouseWheelEvent = rowNode;\n        }\n    }\n    function handleDragInit(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragInit, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n        // cancel out of it\n        return false;\n    }\n    function handleDragStart(e, dd) {\n        var cell = getCellFromEvent(e);\n        if (!cell || !cellExists(cell.row, cell.cell)) {\n            return false;\n        }\n        var retval = trigger(self.onDragStart, dd, e);\n        if (e.isImmediatePropagationStopped()) {\n            return retval;\n        }\n        return false;\n    }\n    function handleDrag(e, dd) {\n        return trigger(self.onDrag, dd, e);\n    }\n    function handleDragEnd(e, dd) {\n        trigger(self.onDragEnd, dd, e);\n    }\n    function handleKeyDown(e) {\n        trigger(self.onKeyDown, {\n            row: activeRow,\n            cell: activeCell,\n            grid: self\n        }, e);\n        var handled = e.isImmediatePropagationStopped();\n        var keyCode = Slick.keyCode;\n        if (!handled) {\n            if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n                // editor may specify an array of keys to bubble\n                if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n                    if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n                        return;\n                    }\n                }\n                if (e.which == keyCode.ESCAPE) {\n                    if (!getEditorLock().isActive()) {\n                        return;    // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n                    }\n                    cancelEditAndSetFocus();\n                } else if (e.which == keyCode.PAGE_DOWN) {\n                    navigatePageDown();\n                    handled = true;\n                } else if (e.which == keyCode.PAGE_UP) {\n                    navigatePageUp();\n                    handled = true;\n                } else if (e.which == keyCode.LEFT) {\n                    handled = navigateLeft();\n                } else if (e.which == keyCode.RIGHT) {\n                    handled = navigateRight();\n                } else if (e.which == keyCode.UP) {\n                    handled = navigateUp();\n                } else if (e.which == keyCode.DOWN) {\n                    handled = navigateDown();\n                } else if (e.which == keyCode.TAB) {\n                    handled = navigateNext();\n                } else if (e.which == keyCode.ENTER) {\n                    if (options.editable) {\n                        if (currentEditor) {\n                            // adding new row\n                            if (activeRow === getDataLength()) {\n                                navigateDown();\n                            } else {\n                                commitEditAndSetFocus();\n                            }\n                        } else {\n                            if (getEditorLock().commitCurrentEdit()) {\n                                makeActiveCellEditable();\n                            }\n                        }\n                    }\n                    handled = true;\n                }\n            } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n                handled = navigatePrev();\n            }\n        }\n        if (handled) {\n            // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n            e.stopPropagation();\n            e.preventDefault();\n            try {\n                e.originalEvent.keyCode = 0;    // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n            } // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n            // (hitting control key only, nothing else), \"Shift\" (maybe others)\n            catch (error) {\n            }\n        }\n    }\n    function handleClick(e) {\n        if (!currentEditor) {\n            // if this click resulted in some cell child node getting focus,\n            // don't steal it back - keyboard events will still bubble up\n            // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n            if (e.target != document.activeElement || $(e.target).hasClass('slick-cell')) {\n                setFocus();\n            }\n        }\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n        if (canCellBeActive(cell.row, cell.cell)) {\n            if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n                scrollRowIntoView(cell.row, false);\n                var preClickModeOn = e.target && e.target.className === Slick.preClickClassName;\n                setActiveCellInternal(getCellNode(cell.row, cell.cell), null, preClickModeOn);\n            }\n        }\n    }\n    function handleContextMenu(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if ($cell.length === 0) {\n            return;\n        }\n        // are we editing this cell?\n        if (activeCellNode === $cell[0] && currentEditor !== null) {\n            return;\n        }\n        trigger(self.onContextMenu, { grid: self }, e);\n    }\n    function handleDblClick(e) {\n        var cell = getCellFromEvent(e);\n        if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n            return;\n        }\n        trigger(self.onDblClick, {\n            row: cell.row,\n            cell: cell.cell,\n            grid: self\n        }, e);\n        if (e.isImmediatePropagationStopped()) {\n            return;\n        }\n        if (options.editable) {\n            gotoCell(cell.row, cell.cell, true);\n        }\n    }\n    function handleHeaderMouseEnter(e) {\n        trigger(self.onHeaderMouseEnter, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderMouseLeave(e) {\n        trigger(self.onHeaderMouseLeave, {\n            'column': $(this).data('column'),\n            'grid': self\n        }, e);\n    }\n    function handleHeaderContextMenu(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        trigger(self.onHeaderContextMenu, {\n            column: column,\n            grid: self\n        }, e);\n    }\n    function handleHeaderClick(e) {\n        var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n        var column = $header && $header.data('column');\n        if (column) {\n            trigger(self.onHeaderClick, {\n                column: column,\n                grid: self\n            }, e);\n        }\n    }\n    function handleMouseEnter(e) {\n        trigger(self.onMouseEnter, { grid: self }, e);\n    }\n    function handleMouseLeave(e) {\n        trigger(self.onMouseLeave, { grid: self }, e);\n    }\n    function cellExists(row, cell) {\n        return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n    }\n    function getCellFromPoint(x, y) {\n        var row = getRowFromPosition(y);\n        var cell = 0;\n        var w = 0;\n        for (var i = 0; i < columns.length && w < x; i++) {\n            w += columns[i].width;\n            cell++;\n        }\n        if (cell < 0) {\n            cell = 0;\n        }\n        return {\n            row: row,\n            cell: cell - 1\n        };\n    }\n    function getCellFromNode(cellNode) {\n        // read column number from .l<columnNumber> CSS class\n        var cls = /l\\d+/.exec(cellNode.className);\n        if (!cls) {\n            throw new Error('getCellFromNode: cannot get cell - ' + cellNode.className);\n        }\n        return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n    }\n    function getRowFromNode(rowNode) {\n        for (var row in rowsCache) {\n            if (rowsCache[row].rowNode === rowNode) {\n                return row | 0;\n            }\n        }\n        return null;\n    }\n    function getCellFromEvent(e) {\n        var $cell = $(e.target).closest('.slick-cell', $canvas);\n        if (!$cell.length) {\n            return null;\n        }\n        var row = getRowFromNode($cell[0].parentNode);\n        var cell = getCellFromNode($cell[0]);\n        if (row == null || cell == null) {\n            return null;\n        } else {\n            return {\n                'row': row,\n                'cell': cell\n            };\n        }\n    }\n    function getCellNodeBox(row, cell) {\n        if (!cellExists(row, cell)) {\n            return null;\n        }\n        var y1 = getRowTop(row);\n        var y2 = y1 + options.rowHeight - 1;\n        var x1 = 0;\n        for (var i = 0; i < cell; i++) {\n            x1 += columns[i].width;\n        }\n        var x2 = x1 + columns[cell].width;\n        return {\n            top: y1,\n            left: x1,\n            bottom: y2,\n            right: x2\n        };\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Cell switching\n    function resetActiveCell() {\n        setActiveCellInternal(null, false);\n    }\n    function setFocus() {\n        if (tabbingDirection == -1) {\n            $focusSink[0].focus();\n        } else {\n            $focusSink2[0].focus();\n        }\n    }\n    function scrollCellIntoView(row, cell, doPaging) {\n        scrollRowIntoView(row, doPaging);\n        var colspan = getColspan(row, cell);\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)]);\n    }\n    function internalScrollColumnIntoView(left, right) {\n        var scrollRight = scrollLeft + viewportW;\n        if (left < scrollLeft) {\n            $viewport.scrollLeft(left);\n            handleScroll();\n            render();\n        } else if (right > scrollRight) {\n            $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n            handleScroll();\n            render();\n        }\n    }\n    function scrollColumnIntoView(cell) {\n        internalScrollColumnIntoView(columnPosLeft[cell], columnPosRight[cell]);\n    }\n    function setActiveCellInternal(newCell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (activeCellNode !== null) {\n            makeActiveCellNormal();\n            $(activeCellNode).removeClass('active');\n            if (rowsCache[activeRow]) {\n                $(rowsCache[activeRow].rowNode).removeClass('active');\n            }\n        }\n        var activeCellChanged = activeCellNode !== newCell;\n        activeCellNode = newCell;\n        if (activeCellNode != null) {\n            activeRow = getRowFromNode(activeCellNode.parentNode);\n            activeCell = activePosX = getCellFromNode(activeCellNode);\n            if (opt_editMode == null) {\n                opt_editMode = activeRow == getDataLength() || options.autoEdit;\n            }\n            if (options.showCellSelection) {\n                $(activeCellNode).addClass('active');\n                $(rowsCache[activeRow].rowNode).addClass('active');\n            }\n            if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n                clearTimeout(h_editorLoader);\n                if (options.asyncEditorLoading) {\n                    h_editorLoader = setTimeout(function () {\n                        makeActiveCellEditable(undefined, preClickModeOn);\n                    }, options.asyncEditorLoadDelay);\n                } else {\n                    makeActiveCellEditable(undefined, preClickModeOn);\n                }\n            }\n        } else {\n            activeRow = activeCell = null;\n        }\n        // this optimisation causes trouble - MLeibman #329\n        //if (activeCellChanged) {\n        if (!suppressActiveCellChangedEvent) {\n            trigger(self.onActiveCellChanged, getActiveCell());\n        }    //}\n    }\n    function clearTextSelection() {\n        if (document.selection && document.selection.empty) {\n            try {\n                //IE fails here if selected element is not in dom\n                document.selection.empty();\n            } catch (e) {\n            }\n        } else if (window.getSelection) {\n            var sel = window.getSelection();\n            if (sel && sel.removeAllRanges) {\n                sel.removeAllRanges();\n            }\n        }\n    }\n    function isCellPotentiallyEditable(row, cell) {\n        var dataLength = getDataLength();\n        // is the data for this row loaded?\n        if (row < dataLength && !getDataItem(row)) {\n            return false;\n        }\n        // are we in the Add New row?  can we create new from this cell?\n        if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n            return false;\n        }\n        // does this cell have an editor?\n        if (!getEditor(row, cell)) {\n            return false;\n        }\n        return true;\n    }\n    function makeActiveCellNormal() {\n        if (!currentEditor) {\n            return;\n        }\n        trigger(self.onBeforeCellEditorDestroy, {\n            editor: currentEditor,\n            grid: self\n        });\n        currentEditor.destroy();\n        currentEditor = null;\n        if (activeCellNode) {\n            var d = getDataItem(activeRow);\n            $(activeCellNode).removeClass('editable invalid');\n            if (d) {\n                var column = columns[activeCell];\n                var formatter = getFormatter(activeRow, column);\n                var formatterResult = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n                applyFormatResultToCellNode(formatterResult, activeCellNode);\n                invalidatePostProcessingResults(activeRow);\n            }\n        }\n        // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n        // IE can't set focus to anything else correctly\n        if (navigator.userAgent.toLowerCase().match(/msie/)) {\n            clearTextSelection();\n        }\n        getEditorLock().deactivate(editController);\n    }\n    function makeActiveCellEditable(editor, preClickModeOn) {\n        if (!activeCellNode) {\n            return;\n        }\n        if (!options.editable) {\n            throw new Error('Grid : makeActiveCellEditable : should never get called when options.editable is false');\n        }\n        // cancel pending async call if there is one\n        clearTimeout(h_editorLoader);\n        if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n            return;\n        }\n        var columnDef = columns[activeCell];\n        var item = getDataItem(activeRow);\n        if (trigger(self.onBeforeEditCell, {\n                row: activeRow,\n                cell: activeCell,\n                item: item,\n                column: columnDef,\n                grid: self\n            }) === false) {\n            setFocus();\n            return;\n        }\n        getEditorLock().activate(editController);\n        $(activeCellNode).addClass('editable');\n        var useEditor = editor || getEditor(activeRow, activeCell);\n        // don't clear the cell if a custom editor is passed through\n        if (!editor && !useEditor.suppressClearOnEdit) {\n            activeCellNode.innerHTML = '';\n        }\n        currentEditor = new useEditor({\n            grid: self,\n            gridPosition: absBox($container[0]),\n            position: absBox(activeCellNode),\n            container: activeCellNode,\n            column: columnDef,\n            item: item || {},\n            commitChanges: commitEditAndSetFocus,\n            cancelChanges: cancelEditAndSetFocus\n        });\n        if (item) {\n            currentEditor.loadValue(item);\n            if (preClickModeOn && currentEditor.preClick) {\n                currentEditor.preClick();\n            }\n        }\n        serializedEditorValue = currentEditor.serializeValue();\n        if (currentEditor.position) {\n            handleActiveCellPositionChange();\n        }\n    }\n    function commitEditAndSetFocus() {\n        // if the commit fails, it would do so due to a validation error\n        // if so, do not steal the focus from the editor\n        if (getEditorLock().commitCurrentEdit()) {\n            setFocus();\n            if (options.autoEdit) {\n                navigateDown();\n            }\n        }\n    }\n    function cancelEditAndSetFocus() {\n        if (getEditorLock().cancelCurrentEdit()) {\n            setFocus();\n        }\n    }\n    function absBox(elem) {\n        var box = {\n            top: elem.offsetTop,\n            left: elem.offsetLeft,\n            bottom: 0,\n            right: 0,\n            width: $(elem).outerWidth(),\n            height: $(elem).outerHeight(),\n            visible: true\n        };\n        box.bottom = box.top + box.height;\n        box.right = box.left + box.width;\n        // walk up the tree\n        var offsetParent = elem.offsetParent;\n        while ((elem = elem.parentNode) != document.body) {\n            if (elem == null)\n                break;\n            if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css('overflowY') != 'visible') {\n                box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n            }\n            if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css('overflowX') != 'visible') {\n                box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n            }\n            box.left -= elem.scrollLeft;\n            box.top -= elem.scrollTop;\n            if (elem === offsetParent) {\n                box.left += elem.offsetLeft;\n                box.top += elem.offsetTop;\n                offsetParent = elem.offsetParent;\n            }\n            box.bottom = box.top + box.height;\n            box.right = box.left + box.width;\n        }\n        return box;\n    }\n    function getActiveCellPosition() {\n        return absBox(activeCellNode);\n    }\n    function getGridPosition() {\n        return absBox($container[0]);\n    }\n    function handleActiveCellPositionChange() {\n        if (!activeCellNode) {\n            return;\n        }\n        trigger(self.onActiveCellPositionChanged, { grid: self });\n        if (currentEditor) {\n            var cellBox = getActiveCellPosition();\n            if (currentEditor.show && currentEditor.hide) {\n                if (!cellBox.visible) {\n                    currentEditor.hide();\n                } else {\n                    currentEditor.show();\n                }\n            }\n            if (currentEditor.position) {\n                currentEditor.position(cellBox);\n            }\n        }\n    }\n    function getCellEditor() {\n        return currentEditor;\n    }\n    function getActiveCell() {\n        if (!activeCellNode) {\n            return null;\n        } else {\n            return {\n                row: activeRow,\n                cell: activeCell,\n                grid: self\n            };\n        }\n    }\n    function getActiveCellNode() {\n        return activeCellNode;\n    }\n    function scrollRowIntoView(row, doPaging) {\n        var rowAtTop = row * options.rowHeight;\n        var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n        // need to page down?\n        if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n            scrollTo(doPaging ? rowAtTop : rowAtBottom);\n            render();\n        }    // or page up?\n        else if (row * options.rowHeight < scrollTop + offset) {\n            scrollTo(doPaging ? rowAtBottom : rowAtTop);\n            render();\n        }\n    }\n    function scrollRowToTop(row) {\n        scrollTo(row * options.rowHeight);\n        render();\n    }\n    function scrollPage(dir) {\n        var deltaRows = dir * numVisibleRows;\n        scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n        render();\n        if (options.enableCellNavigation && activeRow != null) {\n            var row = activeRow + deltaRows;\n            var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n            if (row >= dataLengthIncludingAddNew) {\n                row = dataLengthIncludingAddNew - 1;\n            }\n            if (row < 0) {\n                row = 0;\n            }\n            var cell = 0, prevCell = null;\n            var prevActivePosX = activePosX;\n            while (cell <= activePosX) {\n                if (canCellBeActive(row, cell)) {\n                    prevCell = cell;\n                }\n                cell += getColspan(row, cell);\n            }\n            if (prevCell !== null) {\n                setActiveCellInternal(getCellNode(row, prevCell));\n                activePosX = prevActivePosX;\n            } else {\n                resetActiveCell();\n            }\n        }\n    }\n    function navigatePageDown() {\n        scrollPage(1);\n    }\n    function navigatePageUp() {\n        scrollPage(-1);\n    }\n    function getColspan(row, cell) {\n        var metadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (!metadata || !metadata.columns) {\n            return 1;\n        }\n        var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n        var colspan = columnData && columnData.colspan;\n        if (colspan === '*') {\n            colspan = columns.length - cell;\n        } else {\n            colspan = colspan || 1;\n        }\n        return colspan;\n    }\n    function findFirstFocusableCell(row) {\n        var cell = 0;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                return cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return null;\n    }\n    function findLastFocusableCell(row) {\n        var cell = 0;\n        var lastFocusableCell = null;\n        while (cell < columns.length) {\n            if (canCellBeActive(row, cell)) {\n                lastFocusableCell = cell;\n            }\n            cell += getColspan(row, cell);\n        }\n        return lastFocusableCell;\n    }\n    function gotoRight(row, cell, posX) {\n        if (cell >= columns.length) {\n            return null;\n        }\n        do {\n            cell += getColspan(row, cell);\n        } while (cell < columns.length && !canCellBeActive(row, cell));\n        if (cell < columns.length) {\n            return {\n                'row': row,\n                'cell': cell,\n                'posX': cell\n            };\n        }\n        return null;\n    }\n    function gotoLeft(row, cell, posX) {\n        if (cell <= 0) {\n            return null;\n        }\n        var firstFocusableCell = findFirstFocusableCell(row);\n        if (firstFocusableCell === null || firstFocusableCell >= cell) {\n            return null;\n        }\n        var prev = {\n            'row': row,\n            'cell': firstFocusableCell,\n            'posX': firstFocusableCell\n        };\n        var pos;\n        while (true) {\n            pos = gotoRight(prev.row, prev.cell, prev.posX);\n            if (!pos) {\n                return null;\n            }\n            if (pos.cell >= cell) {\n                return prev;\n            }\n            prev = pos;\n        }\n    }\n    function gotoDown(row, cell, posX) {\n        var prevCell;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        while (true) {\n            if (++row >= dataLengthIncludingAddNew) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoUp(row, cell, posX) {\n        var prevCell;\n        while (true) {\n            if (--row < 0) {\n                return null;\n            }\n            prevCell = cell = 0;\n            while (cell <= posX) {\n                prevCell = cell;\n                cell += getColspan(row, cell);\n            }\n            if (canCellBeActive(row, prevCell)) {\n                return {\n                    'row': row,\n                    'cell': prevCell,\n                    'posX': posX\n                };\n            }\n        }\n    }\n    function gotoNext(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = cell = posX = 0;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos = gotoRight(row, cell, posX);\n        if (pos) {\n            return pos;\n        }\n        var firstFocusableCell = null;\n        var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n        // if at last row, cycle through columns rather than get stuck in the last one\n        if (row === dataLengthIncludingAddNew - 1) {\n            row--;\n        }\n        while (++row < dataLengthIncludingAddNew) {\n            firstFocusableCell = findFirstFocusableCell(row);\n            if (firstFocusableCell !== null) {\n                return {\n                    'row': row,\n                    'cell': firstFocusableCell,\n                    'posX': firstFocusableCell\n                };\n            }\n        }\n        return null;\n    }\n    function gotoPrev(row, cell, posX) {\n        if (row == null && cell == null) {\n            row = getDataLengthIncludingAddNew() - 1;\n            cell = posX = columns.length - 1;\n            if (canCellBeActive(row, cell)) {\n                return {\n                    'row': row,\n                    'cell': cell,\n                    'posX': cell\n                };\n            }\n        }\n        var pos;\n        var lastSelectableCell;\n        while (!pos) {\n            pos = gotoLeft(row, cell, posX);\n            if (pos) {\n                break;\n            }\n            if (--row < 0) {\n                return null;\n            }\n            cell = 0;\n            lastSelectableCell = findLastFocusableCell(row);\n            if (lastSelectableCell !== null) {\n                pos = {\n                    'row': row,\n                    'cell': lastSelectableCell,\n                    'posX': lastSelectableCell\n                };\n            }\n        }\n        return pos;\n    }\n    function navigateRight() {\n        return navigate('right');\n    }\n    function navigateLeft() {\n        return navigate('left');\n    }\n    function navigateDown() {\n        return navigate('down');\n    }\n    function navigateUp() {\n        return navigate('up');\n    }\n    function navigateNext() {\n        return navigate('next');\n    }\n    function navigatePrev() {\n        return navigate('prev');\n    }\n    /**\r\n     * @param {string} dir Navigation direction.\r\n     * @return {boolean} Whether navigation resulted in a change of active cell.\r\n     */\n    function navigate(dir) {\n        if (!options.enableCellNavigation) {\n            return false;\n        }\n        if (!activeCellNode && dir != 'prev' && dir != 'next') {\n            return false;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return true;\n        }\n        setFocus();\n        var tabbingDirections = {\n            'up': -1,\n            'down': 1,\n            'left': -1,\n            'right': 1,\n            'prev': -1,\n            'next': 1\n        };\n        tabbingDirection = tabbingDirections[dir];\n        var stepFunctions = {\n            'up': gotoUp,\n            'down': gotoDown,\n            'left': gotoLeft,\n            'right': gotoRight,\n            'prev': gotoPrev,\n            'next': gotoNext\n        };\n        var stepFn = stepFunctions[dir];\n        var pos = stepFn(activeRow, activeCell, activePosX);\n        if (pos) {\n            var isAddNewRow = pos.row == getDataLength();\n            scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n            setActiveCellInternal(getCellNode(pos.row, pos.cell));\n            activePosX = pos.posX;\n            return true;\n        } else {\n            setActiveCellInternal(getCellNode(activeRow, activeCell));\n            return false;\n        }\n    }\n    function getCellNode(row, cell) {\n        if (rowsCache[row]) {\n            ensureCellNodesInRowsCache(row);\n            return rowsCache[row].cellNodesByColumnIdx[cell];\n        }\n        return null;\n    }\n    function setActiveCell(row, cell, opt_editMode, preClickModeOn, suppressActiveCellChangedEvent) {\n        if (!initialized) {\n            return;\n        }\n        if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return;\n        }\n        if (!options.enableCellNavigation) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        setActiveCellInternal(getCellNode(row, cell), opt_editMode, preClickModeOn, suppressActiveCellChangedEvent);\n    }\n    function canCellBeActive(row, cell) {\n        if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n            return rowMetadata.focusable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns;\n        if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean') {\n            return columnMetadata[columns[cell].id].focusable;\n        }\n        if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean') {\n            return columnMetadata[cell].focusable;\n        }\n        return columns[cell].focusable;\n    }\n    function canCellBeSelected(row, cell) {\n        if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n            return false;\n        }\n        var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n        if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n            return rowMetadata.selectable;\n        }\n        var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n        if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n            return columnMetadata.selectable;\n        }\n        return columns[cell].selectable;\n    }\n    function gotoCell(row, cell, forceEdit) {\n        if (!initialized) {\n            return;\n        }\n        if (!canCellBeActive(row, cell)) {\n            return;\n        }\n        if (!getEditorLock().commitCurrentEdit()) {\n            return;\n        }\n        scrollCellIntoView(row, cell, false);\n        var newCell = getCellNode(row, cell);\n        // if selecting the 'add new' row, start editing right away\n        setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n        // if no editor was created, set the focus back on the grid\n        if (!currentEditor) {\n            setFocus();\n        }\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // IEditor implementation for the editor lock\n    function commitCurrentEdit() {\n        var item = getDataItem(activeRow);\n        var column = columns[activeCell];\n        if (currentEditor) {\n            if (currentEditor.isValueChanged()) {\n                var validationResults = currentEditor.validate();\n                if (validationResults.valid) {\n                    if (activeRow < getDataLength()) {\n                        var editCommand = {\n                            row: activeRow,\n                            cell: activeCell,\n                            editor: currentEditor,\n                            serializedValue: currentEditor.serializeValue(),\n                            prevSerializedValue: serializedEditorValue,\n                            execute: function () {\n                                this.editor.applyValue(item, this.serializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            },\n                            undo: function () {\n                                this.editor.applyValue(item, this.prevSerializedValue);\n                                updateRow(this.row);\n                                trigger(self.onCellChange, {\n                                    row: activeRow,\n                                    cell: activeCell,\n                                    item: item,\n                                    grid: self\n                                });\n                            }\n                        };\n                        if (options.editCommandHandler) {\n                            makeActiveCellNormal();\n                            options.editCommandHandler(item, column, editCommand);\n                        } else {\n                            editCommand.execute();\n                            makeActiveCellNormal();\n                        }\n                    } else {\n                        var newItem = {};\n                        currentEditor.applyValue(newItem, currentEditor.serializeValue());\n                        makeActiveCellNormal();\n                        trigger(self.onAddNewRow, {\n                            item: newItem,\n                            column: column,\n                            grid: self\n                        });\n                    }\n                    // check whether the lock has been re-acquired by event handlers\n                    return !getEditorLock().isActive();\n                } else {\n                    // Re-add the CSS class to trigger transitions, if any.\n                    $(activeCellNode).removeClass('invalid');\n                    $(activeCellNode).width();\n                    // force layout\n                    $(activeCellNode).addClass('invalid');\n                    trigger(self.onValidationError, {\n                        editor: currentEditor,\n                        cellNode: activeCellNode,\n                        validationResults: validationResults,\n                        row: activeRow,\n                        cell: activeCell,\n                        column: column,\n                        grid: self\n                    });\n                    currentEditor.focus();\n                    return false;\n                }\n            }\n            makeActiveCellNormal();\n        }\n        return true;\n    }\n    function cancelCurrentEdit() {\n        makeActiveCellNormal();\n        return true;\n    }\n    function rowsToRanges(rows) {\n        var ranges = [];\n        var lastCell = columns.length - 1;\n        for (var i = 0; i < rows.length; i++) {\n            ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n        }\n        return ranges;\n    }\n    function getSelectedRows() {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        return selectedRows;\n    }\n    function setSelectedRows(rows) {\n        if (!selectionModel) {\n            throw new Error('Selection model is not set');\n        }\n        selectionModel.setSelectedRanges(rowsToRanges(rows));\n    }\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Debug\n    this.debug = function () {\n        var s = '';\n        s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n        s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n        s += '\\n' + 'renderedRows:  ' + renderedRows;\n        s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n        s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n        s += '\\n' + 'n(umber of pages):  ' + n;\n        s += '\\n' + '(current) page:  ' + page;\n        s += '\\n' + 'page height (ph):  ' + ph;\n        s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n        alert(s);\n    };\n    // a debug helper to be able to access private members\n    this.eval = function (expr) {\n        return eval(expr);\n    };\n    //////////////////////////////////////////////////////////////////////////////////////////////\n    // Public API\n    $.extend(this, {\n        'slickGridVersion': '2.3.4',\n        // Events\n        'onScroll': new Slick.Event(),\n        'onSort': new Slick.Event(),\n        'onHeaderMouseEnter': new Slick.Event(),\n        'onHeaderMouseLeave': new Slick.Event(),\n        'onHeaderContextMenu': new Slick.Event(),\n        'onHeaderClick': new Slick.Event(),\n        'onHeaderCellRendered': new Slick.Event(),\n        'onBeforeHeaderCellDestroy': new Slick.Event(),\n        'onHeaderRowCellRendered': new Slick.Event(),\n        'onFooterRowCellRendered': new Slick.Event(),\n        'onBeforeHeaderRowCellDestroy': new Slick.Event(),\n        'onBeforeFooterRowCellDestroy': new Slick.Event(),\n        'onMouseEnter': new Slick.Event(),\n        'onMouseLeave': new Slick.Event(),\n        'onClick': new Slick.Event(),\n        'onDblClick': new Slick.Event(),\n        'onContextMenu': new Slick.Event(),\n        'onKeyDown': new Slick.Event(),\n        'onAddNewRow': new Slick.Event(),\n        'onBeforeAppendCell': new Slick.Event(),\n        'onValidationError': new Slick.Event(),\n        'onViewportChanged': new Slick.Event(),\n        'onColumnsReordered': new Slick.Event(),\n        'onColumnsResized': new Slick.Event(),\n        'onCellChange': new Slick.Event(),\n        'onBeforeEditCell': new Slick.Event(),\n        'onBeforeCellEditorDestroy': new Slick.Event(),\n        'onBeforeDestroy': new Slick.Event(),\n        'onActiveCellChanged': new Slick.Event(),\n        'onActiveCellPositionChanged': new Slick.Event(),\n        'onDragInit': new Slick.Event(),\n        'onDragStart': new Slick.Event(),\n        'onDrag': new Slick.Event(),\n        'onDragEnd': new Slick.Event(),\n        'onSelectedRowsChanged': new Slick.Event(),\n        'onCellCssStylesChanged': new Slick.Event(),\n        // Methods\n        'registerPlugin': registerPlugin,\n        'unregisterPlugin': unregisterPlugin,\n        'getColumns': getColumns,\n        'setColumns': setColumns,\n        'getColumnIndex': getColumnIndex,\n        'updateColumnHeader': updateColumnHeader,\n        'setSortColumn': setSortColumn,\n        'setSortColumns': setSortColumns,\n        'getSortColumns': getSortColumns,\n        'autosizeColumns': autosizeColumns,\n        'getOptions': getOptions,\n        'setOptions': setOptions,\n        'getData': getData,\n        'getDataLength': getDataLength,\n        'getDataItem': getDataItem,\n        'setData': setData,\n        'getSelectionModel': getSelectionModel,\n        'setSelectionModel': setSelectionModel,\n        'getSelectedRows': getSelectedRows,\n        'setSelectedRows': setSelectedRows,\n        'getContainerNode': getContainerNode,\n        'updatePagingStatusFromView': updatePagingStatusFromView,\n        'render': render,\n        'invalidate': invalidate,\n        'invalidateRow': invalidateRow,\n        'invalidateRows': invalidateRows,\n        'invalidateAllRows': invalidateAllRows,\n        'updateCell': updateCell,\n        'updateRow': updateRow,\n        'getViewport': getVisibleRange,\n        'getRenderedRange': getRenderedRange,\n        'resizeCanvas': resizeCanvas,\n        'updateRowCount': updateRowCount,\n        'scrollRowIntoView': scrollRowIntoView,\n        'scrollRowToTop': scrollRowToTop,\n        'scrollCellIntoView': scrollCellIntoView,\n        'scrollColumnIntoView': scrollColumnIntoView,\n        'getCanvasNode': getCanvasNode,\n        'getUID': getUID,\n        'getHeaderColumnWidthDiff': getHeaderColumnWidthDiff,\n        'getScrollbarDimensions': getScrollbarDimensions,\n        'getHeadersWidth': getHeadersWidth,\n        'getCanvasWidth': getCanvasWidth,\n        'focus': setFocus,\n        'getCellFromPoint': getCellFromPoint,\n        'getCellFromEvent': getCellFromEvent,\n        'getActiveCell': getActiveCell,\n        'setActiveCell': setActiveCell,\n        'getActiveCellNode': getActiveCellNode,\n        'getActiveCellPosition': getActiveCellPosition,\n        'resetActiveCell': resetActiveCell,\n        'editActiveCell': makeActiveCellEditable,\n        'getCellEditor': getCellEditor,\n        'getCellNode': getCellNode,\n        'getCellNodeBox': getCellNodeBox,\n        'canCellBeSelected': canCellBeSelected,\n        'canCellBeActive': canCellBeActive,\n        'navigatePrev': navigatePrev,\n        'navigateNext': navigateNext,\n        'navigateUp': navigateUp,\n        'navigateDown': navigateDown,\n        'navigateLeft': navigateLeft,\n        'navigateRight': navigateRight,\n        'navigatePageUp': navigatePageUp,\n        'navigatePageDown': navigatePageDown,\n        'gotoCell': gotoCell,\n        'getTopPanel': getTopPanel,\n        'setTopPanelVisibility': setTopPanelVisibility,\n        'getPreHeaderPanel': getPreHeaderPanel,\n        'setPreHeaderPanelVisibility': setPreHeaderPanelVisibility,\n        'setHeaderRowVisibility': setHeaderRowVisibility,\n        'getHeaderRow': getHeaderRow,\n        'getHeaderRowColumn': getHeaderRowColumn,\n        'setFooterRowVisibility': setFooterRowVisibility,\n        'getFooterRow': getFooterRow,\n        'getFooterRowColumn': getFooterRowColumn,\n        'getGridPosition': getGridPosition,\n        'flashCell': flashCell,\n        'addCellCssStyles': addCellCssStyles,\n        'setCellCssStyles': setCellCssStyles,\n        'removeCellCssStyles': removeCellCssStyles,\n        'getCellCssStyles': getCellCssStyles,\n        'init': finishInitialization,\n        'destroy': destroy,\n        // IEditor implementation\n        'getEditorLock': getEditorLock,\n        'getEditController': getEditController\n    });\n    init();\n}\nmodule.exports = { Grid: SlickGrid };","module.exports = typeof $ !== 'undefined' ? $ : require(413    /* jquery */);","'use strict';\nvar _ = require(422    /* ./underscore.template */);\nvar UnderscoreTemplate = _.template;\nfunction Template(text, data, settings) {\n    return UnderscoreTemplate(text, data, settings);\n}\nTemplate._ = _;\nmodule.exports = Template;\n// If we're in the browser,\n// define it if we're using AMD, otherwise leak a global.\nif (typeof define === 'function' && define.amd) {\n    define(function () {\n        return Template;\n    });\n} else if (typeof window !== 'undefined' || typeof navigator !== 'undefined') {\n    window.UnderscoreTemplate = Template;\n}","'use strict';\n//     Underscore.js 1.5.2\n//     http://underscorejs.org\n//     (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n// Establish the object that gets returned to break out of a loop iteration.\nvar breaker = {};\n// Save bytes in the minified (but not gzipped) version:\nvar ArrayProto = Array.prototype, ObjProto = Object.prototype;\n// Create quick reference variables for speed access to core prototypes.\nvar slice = ArrayProto.slice, toString = ObjProto.toString, hasOwnProperty = ObjProto.hasOwnProperty;\n// All **ECMAScript 5** native function implementations that we hope to use\n// are declared here.\nvar nativeForEach = ArrayProto.forEach, nativeKeys = Object.keys, nativeIsArray = Array.isArray;\n// Create a safe reference to the Underscore object for use below.\nvar _ = function () {\n};\n// Collection Functions\n// --------------------\n// The cornerstone, an `each` implementation, aka `forEach`.\n// Handles objects with the built-in `forEach`, arrays, and raw objects.\n// Delegates to **ECMAScript 5**'s native `forEach` if available.\nvar each = _.each = _.forEach = function (obj, iterator, context) {\n    if (obj == null)\n        return;\n    if (nativeForEach && obj.forEach === nativeForEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length === +obj.length) {\n        for (var i = 0, length = obj.length; i < length; i++) {\n            if (iterator.call(context, obj[i], i, obj) === breaker)\n                return;\n        }\n    } else {\n        var keys = _.keys(obj);\n        for (var i = 0, length = keys.length; i < length; i++) {\n            if (iterator.call(context, obj[keys[i]], keys[i], obj) === breaker)\n                return;\n        }\n    }\n};\n// Object Functions\n// ----------------\n// Retrieve the names of an object's properties.\n// Delegates to **ECMAScript 5**'s native `Object.keys`\n_.keys = nativeKeys || function (obj) {\n    if (obj !== Object(obj))\n        throw new TypeError('Invalid object');\n    var keys = [];\n    for (var key in obj)\n        if (_.has(obj, key))\n            keys.push(key);\n    return keys;\n};\n// Fill in a given object with default properties.\n_.defaults = function (obj) {\n    each(slice.call(arguments, 1), function (source) {\n        if (source) {\n            for (var prop in source) {\n                if (obj[prop] === void 0)\n                    obj[prop] = source[prop];\n            }\n        }\n    });\n    return obj;\n};\n// Is a given value an array?\n// Delegates to ECMA5's native Array.isArray\n_.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n};\n// Shortcut function for checking if an object has a given property directly\n// on itself (in other words, not on a prototype).\n_.has = function (obj, path) {\n    if (!_.isArray(path)) {\n        return obj != null && hasOwnProperty.call(obj, path);\n    }\n    var length = path.length;\n    for (var i = 0; i < length; i++) {\n        var key = path[i];\n        if (obj == null || !hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n        obj = obj[key];\n    }\n    return !!length;\n};\n// List of HTML entities for escaping.\nvar entityMap = {\n    escape: {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '\"': '&quot;',\n        '\\'': '&#x27;'\n    }\n};\n// Regexes containing the keys and values listed immediately above.\nvar entityRegexes = { escape: new RegExp('[' + _.keys(entityMap.escape).join('') + ']', 'g') };\n// Functions for escaping and unescaping strings to/from HTML interpolation.\n_.each(['escape'], function (method) {\n    _[method] = function (string) {\n        if (string == null)\n            return '';\n        return ('' + string).replace(entityRegexes[method], function (match) {\n            return entityMap[method][match];\n        });\n    };\n});\n// By default, Underscore uses ERB-style template delimiters, change the\n// following template settings to use alternative delimiters.\n_.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n};\n// When customizing `templateSettings`, if you don't want to define an\n// interpolation, evaluation or escaping regex, we need one that is\n// guaranteed not to match.\nvar noMatch = /(.)^/;\n// Certain characters need to be escaped so that they can be put into a\n// string literal.\nvar escapes = {\n    '\\'': '\\'',\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    '\\t': 't',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n};\nvar escaper = /\\\\|'|\\r|\\n|\\t|\\u2028|\\u2029/g;\n// JavaScript micro-templating, similar to John Resig's implementation.\n// Underscore templating handles arbitrary delimiters, preserves whitespace,\n// and correctly escapes quotes within interpolated code.\n_.template = function (text, data, settings) {\n    var render;\n    settings = _.defaults({}, settings, _.templateSettings);\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = new RegExp([\n        (settings.escape || noMatch).source,\n        (settings.interpolate || noMatch).source,\n        (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = '__p+=\\'';\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n        source += text.slice(index, offset).replace(escaper, function (match) {\n            return '\\\\' + escapes[match];\n        });\n        if (escape) {\n            source += '\\'+\\n((__t=(' + escape + '))==null?\\'\\':_.escape(__t))+\\n\\'';\n        }\n        if (interpolate) {\n            source += '\\'+\\n((__t=(' + interpolate + '))==null?\\'\\':__t)+\\n\\'';\n        }\n        if (evaluate) {\n            source += '\\';\\n' + evaluate + '\\n__p+=\\'';\n        }\n        index = offset + match.length;\n        return match;\n    });\n    source += '\\';\\n';\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable)\n        source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = 'var __t,__p=\\'\\',__j=Array.prototype.join,' + 'print=function(){__p+=__j.call(arguments,\\'\\');};\\n' + source + 'return __p;\\n';\n    try {\n        render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n        e.source = source;\n        throw e;\n    }\n    if (data)\n        return render(data, _);\n    var template = function (data) {\n        return render.call(this, data, _);\n    };\n    // Provide the compiled function source as a convenience for precompilation.\n    template.source = 'function(' + (settings.variable || 'obj') + '){\\n' + source + '}';\n    return template;\n};\nmodule.exports = _;"]}