var key,Module=void 0!==Module?Module:{},_SASSJS_RELATIVE_PATH=void 0!==SASSJS_RELATIVE_PATH&&SASSJS_RELATIVE_PATH,SASSJS_RELATIVE_PATH=_SASSJS_RELATIVE_PATH||function(){"use strict";var e=null;if("undefined"!=typeof __dirname)return __dirname;if("undefined"!=typeof WorkerLocation&&"/sass.worker.js"===(e=location.href).slice(-15))return e.slice(0,-15);if("undefined"==typeof document||!document.getElementsByTagName)return null;var n,t=document.currentScript||(n=document.getElementsByTagName("script"))[n.length-1];return(e=t&&t.src)?"/sass.js"===e.slice(-8)?e.slice(0,-8):"/sass.sync.js"===e.slice(-13)?e.slice(0,-13):null:null}()||".",moduleOverrides=(Module={locateFile:function(e){return SASSJS_RELATIVE_PATH+"/"+e},onRuntimeInitialized:function(){setTimeout(Sass._ready)}},{});for(key in Module)Module.hasOwnProperty(key)&&(moduleOverrides[key]=Module[key]);Module.arguments=[],Module.thisProgram="./this.program",Module.quit=function(e,n){throw n},Module.preRun=[],Module.postRun=[];var nodeFS,nodePath,ENVIRONMENT_IS_WEB=!1,ENVIRONMENT_IS_WORKER=!1,ENVIRONMENT_IS_NODE=!1,ENVIRONMENT_IS_SHELL=!1;if(Module.ENVIRONMENT)if("WEB"===Module.ENVIRONMENT)ENVIRONMENT_IS_WEB=!0;else if("WORKER"===Module.ENVIRONMENT)ENVIRONMENT_IS_WORKER=!0;else if("NODE"===Module.ENVIRONMENT)ENVIRONMENT_IS_NODE=!0;else{if("SHELL"!==Module.ENVIRONMENT)throw new Error("Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.");ENVIRONMENT_IS_SHELL=!0}else ENVIRONMENT_IS_WEB="object"==typeof window,ENVIRONMENT_IS_WORKER="function"==typeof importScripts,ENVIRONMENT_IS_NODE="object"==typeof process&&"function"==typeof require&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER,ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_NODE?(Module.read=function(e,n){var t;return nodeFS||(nodeFS=require("fs")),nodePath||(nodePath=require("path")),e=nodePath.normalize(e),t=nodeFS.readFileSync(e),n?t:t.toString()},Module.readBinary=function(e){var n=Module.read(e,!0);return n.buffer||(n=new Uint8Array(n)),assert(n.buffer),n},process.argv.length>1&&(Module.thisProgram=process.argv[1].replace(/\\/g,"/")),Module.arguments=process.argv.slice(2),"undefined"!=typeof module&&(module.exports=Module),process.on("uncaughtException",function(e){if(!(e instanceof ExitStatus))throw e}),process.on("unhandledRejection",function(e,n){process.exit(1)}),Module.inspect=function(){return"[Emscripten Module object]"}):ENVIRONMENT_IS_SHELL?("undefined"!=typeof read&&(Module.read=function(e){return read(e)}),Module.readBinary=function(e){var n;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(assert("object"==typeof(n=read(e,"binary"))),n)},"undefined"!=typeof scriptArgs?Module.arguments=scriptArgs:"undefined"!=typeof arguments&&(Module.arguments=arguments),"function"==typeof quit&&(Module.quit=function(e,n){quit(e)})):(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&(Module.read=function(e){var n=new XMLHttpRequest;return n.open("GET",e,!1),n.send(null),n.responseText},ENVIRONMENT_IS_WORKER&&(Module.readBinary=function(e){var n=new XMLHttpRequest;return n.open("GET",e,!1),n.responseType="arraybuffer",n.send(null),new Uint8Array(n.response)}),Module.readAsync=function(e,n,t){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?n(r.response):t()},r.onerror=t,r.send(null)},"undefined"!=typeof arguments&&(Module.arguments=arguments),Module.setWindowTitle=function(e){document.title=e});for(key in Module.print="undefined"!=typeof console?console.log:"undefined"!=typeof print?print:null,Module.printErr="undefined"!=typeof printErr?printErr:"undefined"!=typeof console&&console.warn||Module.print,Module.print=Module.print,Module.printErr=Module.printErr,moduleOverrides)moduleOverrides.hasOwnProperty(key)&&(Module[key]=moduleOverrides[key]);moduleOverrides=void 0;var STACK_ALIGN=16;function staticAlloc(e){assert(!staticSealed);var n=STATICTOP;return STATICTOP=STATICTOP+e+15&-16,n}function dynamicAlloc(e){assert(DYNAMICTOP_PTR);var n=HEAP32[DYNAMICTOP_PTR>>2],t=n+e+15&-16;if((HEAP32[DYNAMICTOP_PTR>>2]=t,t>=TOTAL_MEMORY)&&!enlargeMemory())return HEAP32[DYNAMICTOP_PTR>>2]=n,0;return n}function alignMemory(e,n){return n||(n=STACK_ALIGN),e=Math.ceil(e/n)*n}function getNativeTypeSize(e){switch(e){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:if("*"===e[e.length-1])return 4;if("i"===e[0]){var n=parseInt(e.substr(1));return assert(n%8==0),n/8}return 0}}function warnOnce(e){warnOnce.shown||(warnOnce.shown={}),warnOnce.shown[e]||(warnOnce.shown[e]=1,Module.printErr(e))}var functionPointers=new Array(0);function addFunction(e){for(var n=0;n<functionPointers.length;n++)if(!functionPointers[n])return functionPointers[n]=e,1+n;throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS."}var GLOBAL_BASE=1024,ABORT=0,EXITSTATUS=0;function assert(e,n){e||abort("Assertion failed: "+n)}function getCFunc(e){var n=Module["_"+e];return assert(n,"Cannot call unknown function "+e+", make sure it is exported"),n}var JSfuncs={stackSave:function(){stackSave()},stackRestore:function(){stackRestore()},arrayToC:function(e){var n=stackAlloc(e.length);return writeArrayToMemory(e,n),n},stringToC:function(e){var n=0;if(null!==e&&void 0!==e&&0!==e){var t=1+(e.length<<2);stringToUTF8(e,n=stackAlloc(t),t)}return n}},toC={string:JSfuncs.stringToC,array:JSfuncs.arrayToC};function ccall(e,n,t,r,o){var i=getCFunc(e),a=[],s=0;if(r)for(var u=0;u<r.length;u++){var l=toC[t[u]];l?(0===s&&(s=stackSave()),a[u]=l(r[u])):a[u]=r[u]}var c=i.apply(null,a);if("string"===n&&(c=Pointer_stringify(c)),0!==s){if(o&&o.async)return void EmterpreterAsync.asyncFinalizers.push(function(){stackRestore(s)});stackRestore(s)}return c}function setValue(e,n,t,r){switch("*"===(t=t||"i8").charAt(t.length-1)&&(t="i32"),t){case"i1":case"i8":HEAP8[e>>0]=n;break;case"i16":HEAP16[e>>1]=n;break;case"i32":HEAP32[e>>2]=n;break;case"i64":tempI64=[n>>>0,(tempDouble=n,+Math_abs(tempDouble)>=1?tempDouble>0?(0|Math_min(+Math_floor(tempDouble/4294967296),4294967295))>>>0:~~+Math_ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[e>>2]=tempI64[0],HEAP32[e+4>>2]=tempI64[1];break;case"float":HEAPF32[e>>2]=n;break;case"double":HEAPF64[e>>3]=n;break;default:abort("invalid type for setValue: "+t)}}function getValue(e,n,t){switch("*"===(n=n||"i8").charAt(n.length-1)&&(n="i32"),n){case"i1":case"i8":return HEAP8[e>>0];case"i16":return HEAP16[e>>1];case"i32":case"i64":return HEAP32[e>>2];case"float":return HEAPF32[e>>2];case"double":return HEAPF64[e>>3];default:abort("invalid type for getValue: "+n)}return null}var ALLOC_NORMAL=0,ALLOC_STATIC=2,ALLOC_NONE=4;function allocate(e,n,t,r){var o,i;"number"==typeof e?(o=!0,i=e):(o=!1,i=e.length);var a,s="string"==typeof n?n:null;if(a=t==ALLOC_NONE?r:["function"==typeof _malloc?_malloc:staticAlloc,stackAlloc,staticAlloc,dynamicAlloc][void 0===t?ALLOC_STATIC:t](Math.max(i,s?1:n.length)),o){var u;for(r=a,assert(0==(3&a)),u=a+(-4&i);r<u;r+=4)HEAP32[r>>2]=0;for(u=a+i;r<u;)HEAP8[r++>>0]=0;return a}if("i8"===s)return e.subarray||e.slice?HEAPU8.set(e,a):HEAPU8.set(new Uint8Array(e),a),a;for(var l,c,_,d=0;d<i;){var f=e[d];0!==(l=s||n[d])?("i64"==l&&(l="i32"),setValue(a+d,f,l),_!==l&&(c=getNativeTypeSize(l),_=l),d+=c):d++}return a}function getMemory(e){return staticSealed?runtimeInitialized?_malloc(e):dynamicAlloc(e):staticAlloc(e)}function Pointer_stringify(e,n){if(0===n||!e)return"";for(var t,r=0,o=0;r|=t=HEAPU8[e+o>>0],(0!=t||n)&&(o++,!n||o!=n););n||(n=o);var i="";if(r<128){for(var a;n>0;)a=String.fromCharCode.apply(String,HEAPU8.subarray(e,e+Math.min(n,1024))),i=i?i+a:a,e+=1024,n-=1024;return i}return UTF8ToString(e)}var UTF8Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function UTF8ArrayToString(e,n){for(var t=n;e[t];)++t;if(t-n>16&&e.subarray&&UTF8Decoder)return UTF8Decoder.decode(e.subarray(n,t));for(var r,o,i,a,s,u="";;){if(!(r=e[n++]))return u;if(128&r)if(o=63&e[n++],192!=(224&r))if(i=63&e[n++],224==(240&r)?r=(15&r)<<12|o<<6|i:(a=63&e[n++],240==(248&r)?r=(7&r)<<18|o<<12|i<<6|a:(s=63&e[n++],r=248==(252&r)?(3&r)<<24|o<<18|i<<12|a<<6|s:(1&r)<<30|o<<24|i<<18|a<<12|s<<6|63&e[n++])),r<65536)u+=String.fromCharCode(r);else{var l=r-65536;u+=String.fromCharCode(55296|l>>10,56320|1023&l)}else u+=String.fromCharCode((31&r)<<6|o);else u+=String.fromCharCode(r)}}function UTF8ToString(e){return UTF8ArrayToString(HEAPU8,e)}function stringToUTF8Array(e,n,t,r){if(!(r>0))return 0;for(var o=t,i=t+r-1,a=0;a<e.length;++a){var s=e.charCodeAt(a);if(s>=55296&&s<=57343&&(s=65536+((1023&s)<<10)|1023&e.charCodeAt(++a)),s<=127){if(t>=i)break;n[t++]=s}else if(s<=2047){if(t+1>=i)break;n[t++]=192|s>>6,n[t++]=128|63&s}else if(s<=65535){if(t+2>=i)break;n[t++]=224|s>>12,n[t++]=128|s>>6&63,n[t++]=128|63&s}else if(s<=2097151){if(t+3>=i)break;n[t++]=240|s>>18,n[t++]=128|s>>12&63,n[t++]=128|s>>6&63,n[t++]=128|63&s}else if(s<=67108863){if(t+4>=i)break;n[t++]=248|s>>24,n[t++]=128|s>>18&63,n[t++]=128|s>>12&63,n[t++]=128|s>>6&63,n[t++]=128|63&s}else{if(t+5>=i)break;n[t++]=252|s>>30,n[t++]=128|s>>24&63,n[t++]=128|s>>18&63,n[t++]=128|s>>12&63,n[t++]=128|s>>6&63,n[t++]=128|63&s}}return n[t]=0,t-o}function stringToUTF8(e,n,t){return stringToUTF8Array(e,HEAPU8,n,t)}function lengthBytesUTF8(e){for(var n=0,t=0;t<e.length;++t){var r=e.charCodeAt(t);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++t)),r<=127?++n:n+=r<=2047?2:r<=65535?3:r<=2097151?4:r<=67108863?5:6}return n}var UTF16Decoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function allocateUTF8(e){var n=lengthBytesUTF8(e)+1,t=_malloc(n);return t&&stringToUTF8Array(e,HEAP8,t,n),t}function demangle(e){return e}function demangleAll(e){return e.replace(/__Z[\w\d_]+/g,function(e){var n=demangle(e);return e===n?e:e+" ["+n+"]"})}function jsStackTrace(){var e=new Error;if(!e.stack){try{throw new Error(0)}catch(n){e=n}if(!e.stack)return"(no stack trace available)"}return e.stack.toString()}function stackTrace(){var e=jsStackTrace();return Module.extraStackTrace&&(e+="\n"+Module.extraStackTrace()),demangleAll(e)}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64,STATIC_BASE,STATICTOP,staticSealed,STACK_BASE,STACKTOP,STACK_MAX,DYNAMIC_BASE,DYNAMICTOP_PTR,byteLength,WASM_PAGE_SIZE=65536,ASMJS_PAGE_SIZE=16777216,MIN_TOTAL_MEMORY=16777216;function alignUp(e,n){return e%n>0&&(e+=n-e%n),e}function updateGlobalBuffer(e){Module.buffer=buffer=e}function updateGlobalBufferViews(){Module.HEAP8=HEAP8=new Int8Array(buffer),Module.HEAP16=HEAP16=new Int16Array(buffer),Module.HEAP32=HEAP32=new Int32Array(buffer),Module.HEAPU8=HEAPU8=new Uint8Array(buffer),Module.HEAPU16=HEAPU16=new Uint16Array(buffer),Module.HEAPU32=HEAPU32=new Uint32Array(buffer),Module.HEAPF32=HEAPF32=new Float32Array(buffer),Module.HEAPF64=HEAPF64=new Float64Array(buffer)}function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}function enlargeMemory(){var e=Module.usingWasm?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE,n=2147483648-e;if(HEAP32[DYNAMICTOP_PTR>>2]>n)return!1;var t=TOTAL_MEMORY;for(TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2];)TOTAL_MEMORY=TOTAL_MEMORY<=536870912?alignUp(2*TOTAL_MEMORY,e):Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,e),n);var r=Module.reallocBuffer(TOTAL_MEMORY);return r&&r.byteLength==TOTAL_MEMORY?(updateGlobalBuffer(r),updateGlobalBufferViews(),!0):(TOTAL_MEMORY=t,!1)}STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0,staticSealed=!1,Module.reallocBuffer||(Module.reallocBuffer=function(e){var n;try{if(ArrayBuffer.transfer)n=ArrayBuffer.transfer(buffer,e);else{var t=HEAP8;n=new ArrayBuffer(e),new Int8Array(n).set(t)}}catch(e){return!1}return!!_emscripten_replace_memory(n)&&n});try{(byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get))(new ArrayBuffer(4))}catch(e){byteLength=function(e){return e.byteLength}}var TOTAL_STACK=Module.TOTAL_STACK||5242880,TOTAL_MEMORY=Module.TOTAL_MEMORY||16777216;function getTotalMemory(){return TOTAL_MEMORY}if(TOTAL_MEMORY<TOTAL_STACK&&Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")"),Module.buffer?buffer=Module.buffer:("object"==typeof WebAssembly&&"function"==typeof WebAssembly.Memory?(Module.wasmMemory=new WebAssembly.Memory({initial:TOTAL_MEMORY/WASM_PAGE_SIZE}),buffer=Module.wasmMemory.buffer):buffer=new ArrayBuffer(TOTAL_MEMORY),Module.buffer=buffer),updateGlobalBufferViews(),HEAP32[0]=1668509029,HEAP16[1]=25459,115!==HEAPU8[2]||99!==HEAPU8[3])throw"Runtime error: expected the system to be little-endian!";function callRuntimeCallbacks(e){for(;e.length>0;){var n=e.shift();if("function"!=typeof n){var t=n.func;"number"==typeof t?void 0===n.arg?Module.dynCall_v(t):Module.dynCall_vi(t,n.arg):t(void 0===n.arg?null:n.arg)}else n()}}var __ATPRERUN__=[],__ATINIT__=[],__ATMAIN__=[],__ATEXIT__=[],__ATPOSTRUN__=[],runtimeInitialized=!1,runtimeExited=!1;function preRun(){if(Module.preRun)for("function"==typeof Module.preRun&&(Module.preRun=[Module.preRun]);Module.preRun.length;)addOnPreRun(Module.preRun.shift());callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){runtimeInitialized||(runtimeInitialized=!0,callRuntimeCallbacks(__ATINIT__))}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__),runtimeExited=!0}function postRun(){if(Module.postRun)for("function"==typeof Module.postRun&&(Module.postRun=[Module.postRun]);Module.postRun.length;)addOnPostRun(Module.postRun.shift());callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(e){__ATPRERUN__.unshift(e)}function addOnPostRun(e){__ATPOSTRUN__.unshift(e)}function writeArrayToMemory(e,n){HEAP8.set(e,n)}function writeAsciiToMemory(e,n,t){for(var r=0;r<e.length;++r)HEAP8[n++>>0]=e.charCodeAt(r);t||(HEAP8[n>>0]=0)}var Math_abs=Math.abs,Math_cos=Math.cos,Math_sin=Math.sin,Math_tan=Math.tan,Math_acos=Math.acos,Math_asin=Math.asin,Math_atan=Math.atan,Math_atan2=Math.atan2,Math_exp=Math.exp,Math_log=Math.log,Math_sqrt=Math.sqrt,Math_ceil=Math.ceil,Math_floor=Math.floor,Math_pow=Math.pow,Math_imul=Math.imul,Math_fround=Math.fround,Math_round=Math.round,Math_min=Math.min,Math_max=Math.max,Math_clz32=Math.clz32,Math_trunc=Math.trunc,runDependencies=0,runDependencyWatcher=null,dependenciesFulfilled=null;function getUniqueRunDependency(e){return e}function addRunDependency(e){runDependencies++,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies)}function removeRunDependency(e){if(runDependencies--,Module.monitorRunDependencies&&Module.monitorRunDependencies(runDependencies),0==runDependencies&&(null!==runDependencyWatcher&&(clearInterval(runDependencyWatcher),runDependencyWatcher=null),dependenciesFulfilled)){var n=dependenciesFulfilled;dependenciesFulfilled=null,n()}}Module.preloadedImages={},Module.preloadedAudios={};var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(e){return String.prototype.startsWith?e.startsWith(dataURIPrefix):0===e.indexOf(dataURIPrefix)}function integrateWasmJS(){var e="libsass.wast",n="libsass.wasm",t="libsass.temp.asm.js";"function"==typeof Module.locateFile&&(isDataURI(e)||(e=Module.locateFile(e)),isDataURI(n)||(n=Module.locateFile(n)),isDataURI(t)||(t=Module.locateFile(t)));var r={global:null,env:null,asm2wasm:{"f64-rem":function(e,n){return e%n},debugger:function(){}},parent:Module},o=null;function i(){try{if(Module.wasmBinary)return new Uint8Array(Module.wasmBinary);if(Module.readBinary)return Module.readBinary(n);throw"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)"}catch(e){abort(e)}}function a(e,t,a){if("object"!=typeof WebAssembly)return Module.printErr("no native wasm support detected"),!1;if(!(Module.wasmMemory instanceof WebAssembly.Memory))return Module.printErr("no native wasm Memory in use"),!1;function s(e,n){(o=e.exports).memory&&function(e){var n=Module.buffer;e.byteLength<n.byteLength&&Module.printErr("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here");var t=new Int8Array(n);new Int8Array(e).set(t),updateGlobalBuffer(e),updateGlobalBufferViews()}(o.memory),Module.asm=o,Module.usingWasm=!0,removeRunDependency("wasm-instantiate")}if(t.memory=Module.wasmMemory,r.global={NaN:NaN,Infinity:1/0},r["global.Math"]=Math,r.env=t,addRunDependency("wasm-instantiate"),Module.instantiateWasm)try{return Module.instantiateWasm(r,s)}catch(e){return Module.printErr("Module.instantiateWasm callback failed with error: "+e),!1}function u(e){s(e.instance,e.module)}function l(e){(Module.wasmBinary||!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER||"function"!=typeof fetch?new Promise(function(e,n){e(i())}):fetch(n,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+n+"'";return e.arrayBuffer()}).catch(function(){return i()})).then(function(e){return WebAssembly.instantiate(e,r)}).then(e).catch(function(e){Module.printErr("failed to asynchronously prepare wasm: "+e),abort(e)})}return Module.wasmBinary||"function"!=typeof WebAssembly.instantiateStreaming||isDataURI(n)||"function"!=typeof fetch?l(u):WebAssembly.instantiateStreaming(fetch(n,{credentials:"same-origin"}),r).then(u).catch(function(e){Module.printErr("wasm streaming compile failed: "+e),Module.printErr("falling back to ArrayBuffer instantiation"),l(u)}),{}}Module.asmPreload=Module.asm;var s=Module.reallocBuffer;Module.reallocBuffer=function(e){return"asmjs"===u?s(e):function(e){e=alignUp(e,Module.usingWasm?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE);var n=Module.buffer.byteLength;if(Module.usingWasm)try{return-1!==Module.wasmMemory.grow((e-n)/65536)?Module.buffer=Module.wasmMemory.buffer:null}catch(e){return null}}(e)};var u="";Module.asm=function(e,n,t){var r;if(!(n=n).table){var o=Module.wasmTableSize;void 0===o&&(o=1024);var i=Module.wasmMaxTableSize;"object"==typeof WebAssembly&&"function"==typeof WebAssembly.Table?n.table=void 0!==i?new WebAssembly.Table({initial:o,maximum:i,element:"anyfunc"}):new WebAssembly.Table({initial:o,element:"anyfunc"}):n.table=new Array(o),Module.wasmTable=n.table}return n.memoryBase||(n.memoryBase=Module.STATIC_BASE),n.tableBase||(n.tableBase=0),(r=a(0,n))||abort("no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods"),r}}integrateWasmJS();var ASM_CONSTS=[function(e,n,t){Sass._sassCompileEmscriptenSuccess(pointerToString(e),pointerToJson(n),pointerToStringArray(t))},function(e,n){Sass._sassCompileEmscriptenError(pointerToJson(e),pointerToString(n))},function(e,n){Importer.find(pointerToString(e),pointerToString(n))},function(e){return Number(Importer.finished())},function(e){return Number(Importer.error())},function(e){return Number(Importer.path())},function(e){return Number(Importer.content())}];function _emscripten_asm_const_iii(e,n,t){return ASM_CONSTS[e](n,t)}function _emscripten_asm_const_iiii(e,n,t,r){return ASM_CONSTS[e](n,t,r)}function _emscripten_asm_const_ii(e,n){return ASM_CONSTS[e](n)}STATICTOP=(STATIC_BASE=GLOBAL_BASE)+89680,__ATINIT__.push({func:function(){__GLOBAL__I_000101()}},{func:function(){__GLOBAL__sub_I_node_cpp()}},{func:function(){__GLOBAL__sub_I_context_cpp()}},{func:function(){__GLOBAL__sub_I_functions_cpp()}},{func:function(){__GLOBAL__sub_I_color_maps_cpp()}},{func:function(){__GLOBAL__sub_I_environment_cpp()}},{func:function(){__GLOBAL__sub_I_ast_fwd_decl_cpp()}},{func:function(){__GLOBAL__sub_I_bind_cpp()}},{func:function(){__GLOBAL__sub_I_file_cpp()}},{func:function(){__GLOBAL__sub_I_util_cpp()}},{func:function(){__GLOBAL__sub_I_units_cpp()}},{func:function(){__GLOBAL__sub_I_values_cpp()}},{func:function(){__GLOBAL__sub_I_parser_cpp()}},{func:function(){__GLOBAL__sub_I_eval_cpp()}},{func:function(){__GLOBAL__sub_I_expand_cpp()}},{func:function(){__GLOBAL__sub_I_listize_cpp()}},{func:function(){__GLOBAL__sub_I_cssize_cpp()}},{func:function(){__GLOBAL__sub_I_extend_cpp()}},{func:function(){__GLOBAL__sub_I_output_cpp()}},{func:function(){__GLOBAL__sub_I_inspect_cpp()}},{func:function(){__GLOBAL__sub_I_emitter_cpp()}},{func:function(){__GLOBAL__sub_I_check_nesting_cpp()}},{func:function(){__GLOBAL__sub_I_remove_placeholders_cpp()}},{func:function(){__GLOBAL__sub_I_sass_cpp()}},{func:function(){__GLOBAL__sub_I_sass_util_cpp()}},{func:function(){__GLOBAL__sub_I_sass_values_cpp()}},{func:function(){__GLOBAL__sub_I_sass_context_cpp()}},{func:function(){__GLOBAL__sub_I_sass_functions_cpp()}},{func:function(){__GLOBAL__sub_I_sass2scss_cpp()}},{func:function(){__GLOBAL__sub_I_to_c_cpp()}},{func:function(){__GLOBAL__sub_I_to_value_cpp()}},{func:function(){__GLOBAL__sub_I_source_map_cpp()}},{func:function(){__GLOBAL__sub_I_subset_map_cpp()}},{func:function(){__GLOBAL__sub_I_error_handling_cpp()}},{func:function(){__GLOBAL__sub_I_ast_cpp()}},{func:function(){__GLOBAL__sub_I_iostream_cpp()}});var STATIC_BUMP=89680;Module.STATIC_BASE=STATIC_BASE,Module.STATIC_BUMP=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;var EMTSTACKTOP=getMemory(1048576),EMT_STACK_MAX=EMTSTACKTOP+1048576,eb=getMemory(62128);function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___assert_fail(e,n,t,r){abort("Assertion failed: "+Pointer_stringify(e)+", at: "+[n?Pointer_stringify(n):"unknown filename",t,r?Pointer_stringify(r):"unknown function"])}function ___cxa_allocate_exception(e){return _malloc(e)}__ATPRERUN__.push(function(){HEAPU8.set([140,2,78,0,0,0,0,0,2,67,0,0,200,1,0,0,2,68,0,0,172,1,0,0,2,69,0,0,173,1,0,0,2,70,0,0,208,30,0,0,2,71,0,0,200,31,0,0,2,72,0,0,200,0,0,0,2,73,0,0,116,1,0,0,1,63,0,0,136,74,0,0,0,64,74,0,136,74,0,0,1,75,208,2,3,74,74,75,137,74,0,0,25,62,64,80,25,60,64,40,0,61,64,0,1,74,176,2,3,65,64,74,1,74,192,2,3,3,64,74,1,74,184,2,3,4,64,74,1,74,168,2,3,5,64,74,1,74,160,2,3,6,64,74,1,74,152,2,3,7,64,74,1,74,144,2,3,8,64,74,1,74,136,2,3,9,64,74,1,74,128,2,3,10,64,74,1,74,104,2,3,11,64,74,1,74,96,2,3,12,64,74,1,74,88,2,3,13,64,74,1,74,80,2,3,14,64,74,1,74,72,2,3,15,64,74,1,74,64,2,3,16,64,74,1,74,56,2,3,17,64,74,1,74,48,2,3,18,64,74,1,74,40,2,3,19,64,74,1,74,32,2,3,20,64,74,1,74,16,2,3,31,64,74,1,74,8,2,3,38,64,74,1,74,0,2,3,41,64,74,1,74,248,1,3,57,64,74,1,74,208,1,3,58,64,74,1,74,160,1,3,59,64,74,1,74,112,2,3,56,64,74,1,74,152,1,3,44,64,74,1,74,144,1,3,45,64,74,1,74,136,1,3,52,64,74,1,74,96,1,3,51,64,74,1,74,88,1,3,53,64,74,1,74,80,1,3,21,64,74,1,74,72,1,3,23,64,74,1,74,56,1,3,22,64,74,1,74,48,1,3,24,64,74,1,74,40,1,3,25,64,74,1,74,32,1,3,26,64,74,1,74,24,1,3,27,64,74,1,74,16,1,3,28,64,74,1,74,8,1,3,29,64,74,1,74,0,1,3,36,64,74,1,74,248,0,3,39,64,74,1,74,240,0,3,30,64,74,1,74,232,0,3,32,64,74,1,74,224,0,3,33,64,74,1,74,216,0,3,34,64,74,1,74,208,0,3,35,64,74,3,37,64,72,1,74,192,0,3,40,64,74,1,74,184,0,3,42,64,74,1,74,176,0,3,43,64,74,1,74,168,0,3,46,64,74,1,74,160,0,3,47,64,74,1,74,152,0,3,48,64,74,1,74,144,0,3,49,64,74,1,74,136,0,3,50,64,74,1,74,128,0,3,54,64,74,25,55,64,120,106,75,0,48,26,75,75,4,82,75,75,0,135,74,0,0,65,75,0,0,1,74,56,32,85,65,74,0,1,74,0,0,132,0,0,74,1,75,191,1,135,74,1,0,75,0,0,0,130,74,0,0,0,2,74,0,1,74,0,0,132,0,0,74,38,74,2,1,120,74,185,12,1,74,0,0,132,0,0,74,1,75,64,0,1,76,1,0,1,77,0,0,135,74,2,0,75,0,76,77,130,74,0,0,0,2,74,0,1,74,0,0,132,0,0,74,38,74,2,1,120,74,172,12,1,74,0,0,132,0,0,74,1,74,101,0,1,77,1,0,1,76,0,0,135,2,2,0,74,0,77,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,149,12,121,2,62,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,77,82,2,135,76,3,0,77,4,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,131,12,1,76,0,0,132,0,0,76,106,77,4,4,135,76,3,0,67,3,77,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,3,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,3,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,3,0,0,0,119,0,10,0,135,76,5,0,3,0,0,0,135,76,5,0,4,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,4,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,109,0,1,77,1,0,1,74,0,0,135,2,2,0,76,0,77,74,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,72,12,121,2,62,0,106,74,65,4,25,2,74,64,82,74,2,0,106,1,74,20,1,74,0,0,132,0,0,74,1,77,83,2,135,74,3,0,77,6,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,54,12,1,74,0,0,132,0,0,74,106,77,6,4,135,74,3,0,67,5,77,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,135,2,4,0,119,0,25,0,85,5,70,0,1,74,0,0,132,0,0,74,135,74,3,0,1,2,5,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,5,0,135,2,4,0,135,74,5,0,5,0,0,0,119,0,10,0,135,74,5,0,5,0,0,0,135,74,5,0,6,0,0,0,135,74,5,0,65,0,0,0,137,64,0,0,1,74,1,0,139,74,0,0,135,74,5,0,6,0,0,0,0,66,2,0,135,74,5,0,65,0,0,0,135,74,6,0,66,0,0,0,1,74,0,0,132,0,0,74,1,74,110,0,1,77,1,0,1,76,0,0,135,2,2,0,74,0,77,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,251,11,121,2,62,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,77,84,2,135,76,3,0,77,8,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,233,11,1,76,0,0,132,0,0,76,106,77,8,4,135,76,3,0,67,7,77,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,7,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,7,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,7,0,0,0,119,0,10,0,135,76,5,0,7,0,0,0,135,76,5,0,8,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,8,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,111,0,1,77,1,0,1,74,0,0,135,2,2,0,76,0,77,74,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,174,11,121,2,62,0,106,74,65,4,25,2,74,64,82,74,2,0,106,1,74,20,1,74,0,0,132,0,0,74,1,77,85,2,135,74,3,0,77,10,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,156,11,1,74,0,0,132,0,0,74,106,77,10,4,135,74,3,0,67,9,77,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,135,2,4,0,119,0,25,0,85,9,70,0,1,74,0,0,132,0,0,74,135,74,3,0,1,2,9,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,5,0,135,2,4,0,135,74,5,0,9,0,0,0,119,0,10,0,135,74,5,0,9,0,0,0,135,74,5,0,10,0,0,0,135,74,5,0,65,0,0,0,137,64,0,0,1,74,1,0,139,74,0,0,135,74,5,0,10,0,0,0,0,66,2,0,135,74,5,0,65,0,0,0,135,74,6,0,66,0,0,0,1,74,0,0,132,0,0,74,1,74,112,0,1,77,1,0,1,76,0,0,135,2,2,0,74,0,77,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,97,11,121,2,63,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,77,118,0,1,74,0,0,135,76,7,0,77,12,0,74,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,78,11,1,76,0,0,132,0,0,76,106,74,12,4,135,76,3,0,67,11,74,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,11,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,11,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,11,0,0,0,119,0,10,0,135,76,5,0,11,0,0,0,135,76,5,0,12,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,12,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,113,0,1,74,1,0,1,77,0,0,135,2,2,0,76,0,74,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,19,11,121,2,62,0,106,77,65,4,25,2,77,64,82,77,2,0,106,1,77,20,1,77,0,0,132,0,0,77,1,74,86,2,135,77,3,0,74,14,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,1,11,1,77,0,0,132,0,0,77,106,74,14,4,135,77,3,0,67,13,74,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,25,0,85,13,70,0,1,77,0,0,132,0,0,77,135,77,3,0,1,2,13,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,13,0,0,0,119,0,10,0,135,77,5,0,13,0,0,0,135,77,5,0,14,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,14,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,77,114,0,1,74,1,0,1,76,0,0,135,2,2,0,77,0,74,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,198,10,121,2,62,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,74,87,2,135,76,3,0,74,16,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,180,10,1,76,0,0,132,0,0,76,106,74,16,4,135,76,3,0,67,15,74,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,15,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,15,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,15,0,0,0,119,0,10,0,135,76,5,0,15,0,0,0,135,76,5,0,16,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,16,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,115,0,1,74,1,0,1,77,0,0,135,2,2,0,76,0,74,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,121,10,121,2,62,0,106,77,65,4,25,2,77,64,82,77,2,0,106,1,77,20,1,77,0,0,132,0,0,77,1,74,88,2,135,77,3,0,74,18,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,103,10,1,77,0,0,132,0,0,77,106,74,18,4,135,77,3,0,67,17,74,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,25,0,85,17,70,0,1,77,0,0,132,0,0,77,135,77,3,0,1,2,17,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,17,0,0,0,119,0,10,0,135,77,5,0,17,0,0,0,135,77,5,0,18,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,18,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,77,116,0,1,74,1,0,1,76,0,0,135,2,2,0,77,0,74,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,44,10,121,2,62,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,74,89,2,135,76,3,0,74,20,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,26,10,1,76,0,0,132,0,0,76,106,74,20,4,135,76,3,0,67,19,74,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,19,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,19,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,19,0,0,0,119,0,10,0,135,76,5,0,19,0,0,0,135,76,5,0,20,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,20,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,117,0,1,74,1,0,1,77,0,0,135,2,2,0,76,0,74,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,223,9,121,2,238,1,106,2,0,60,106,77,0,56,46,77,77,2,80,16,0,0,26,77,2,4,82,77,77,0,1,74,0,0,1,76,7,0,138,77,74,76,8,14,0,0,4,14,0,0,12,14,0,0,16,14,0,0,4,14,0,0,4,14,0,0,20,14,0,0,119,0,5,0,119,0,146,0,119,0,145,0,119,0,144,0,119,0,143,0,25,2,0,76,1,77,0,0,132,0,0,77,1,77,85,1,82,74,2,0,135,1,8,0,77,74,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,120,74,125,0,25,3,0,80,32,77,1,0,121,77,4,0,1,77,1,0,0,74,77,0,119,0,4,0,82,77,3,0,16,77,77,1,0,74,77,0,121,74,2,0,82,1,2,0,1,74,0,0,132,0,0,74,1,74,86,1,135,2,8,0,74,1,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,120,74,103,0,1,74,0,0,132,0,0,74,1,74,106,1,125,77,2,2,1,0,0,0,135,2,8,0,74,77,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,90,0,32,74,2,0,121,74,4,0,1,74,1,0,0,77,74,0,119,0,4,0,82,74,3,0,16,74,74,2,0,77,74,0,120,77,2,0,119,0,85,0,1,77,0,0,85,31,77,0,1,74,0,0,109,31,4,74,1,77,0,0,109,31,8,77,1,77,0,0,132,0,0,77,1,77,58,1,1,74,80,0,135,2,8,0,77,74,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,120,74,62,0,85,31,2,0,2,77,0,0,80,0,0,128,109,31,8,77,1,74,70,0,109,31,4,74,0,17,2,0,2,18,0,0,233,190,0,0,25,19,17,70,78,74,18,0,83,17,74,0,25,17,17,1,25,18,18,1,54,74,17,19,112,15,0,0,1,77,0,0,107,2,70,77,25,66,0,108,1,77,0,0,132,0,0,77,116,62,66,0,106,74,66,4,109,62,4,74,106,77,66,8,109,62,8,77,1,74,109,0,135,77,7,0,74,0,31,62,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,9,0,1,77,0,0,102,74,31,11,56,77,77,74,80,16,0,0,82,74,31,0,135,77,9,0,74,0,0,0,119,0,24,0,135,2,4,0,1,77,0,0,102,74,31,11,49,77,77,74,28,16,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,82,74,31,0,135,77,9,0,74,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,135,66,4,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,74,90,2,135,77,3,0,74,62,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,57,1,25,16,62,4,82,2,16,0,106,77,2,64,106,74,2,68,45,77,77,74,164,16,0,0,1,63,115,0,119,0,56,0,106,77,65,4,25,1,77,64,82,77,1,0,106,3,77,20,1,77,0,0,132,0,0,77,135,77,3,0,67,41,2,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,40,0,1,77,40,68,85,41,77,0,1,77,0,0,132,0,0,77,106,74,41,4,135,77,3,0,67,38,74,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,23,0,85,38,70,0,1,77,0,0,132,0,0,77,135,77,3,0,3,1,38,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,38,0,0,0,119,0,8,0,135,77,5,0,38,0,0,0,135,77,5,0,41,0,0,0,82,2,16,0,1,63,115,0,119,0,3,0,135,77,5,0,41,0,0,0,32,77,63,115,121,77,246,0,106,77,2,80,106,74,2,76,4,66,77,74,28,6,66,48,121,66,234,0,25,7,65,4,25,3,0,108,25,8,59,36,25,9,8,11,25,10,59,24,25,11,10,11,25,12,59,12,25,13,12,11,25,14,59,11,1,1,0,0,82,74,7,0,25,4,74,64,82,74,4,0,106,5,74,20,1,74,0,0,132,0,0,74,1,74,58,1,1,77,112,0,135,15,8,0,74,77,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,118,0,119,0,137,0,0,17,58,0,0,18,3,0,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,77,17,19,24,18,0,0,1,77,0,0,132,0,0,77,1,74,210,1,82,76,16,0,106,76,76,76,27,75,1,48,3,76,76,75,135,77,3,0,74,59,76,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,135,0,119,0,112,0,0,17,61,0,0,18,58,0,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,77,17,19,124,18,0,0,1,77,0,0,132,0,0,77,1,76,170,1,135,77,1,0,76,15,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,4,0,1,2,1,0,1,63,136,0,119,0,90,0,25,17,15,12,0,18,61,0,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,77,17,19,212,18,0,0,25,2,15,52,1,77,0,0,85,2,77,0,1,76,0,0,109,15,56,76,1,77,0,0,107,15,60,77,1,77,120,35,85,15,77,0,1,77,0,0,132,0,0,77,1,76,210,1,25,74,15,64,135,77,3,0,76,74,59,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,123,0,119,0,59,0,1,77,11,0,85,2,77,0,1,77,0,0,132,0,0,77,135,77,3,0,67,57,15,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,4,0,1,2,0,0,1,63,136,0,119,0,44,0,85,57,70,0,1,77,0,0,132,0,0,77,135,77,3,0,5,4,57,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,138,0,119,0,31,0,135,77,5,0,57,0,0,0,78,77,9,0,34,77,77,0,121,77,4,0,82,74,8,0,135,77,9,0,74,0,0,0,78,77,11,0,34,77,77,0,121,77,4,0,82,74,10,0,135,77,9,0,74,0,0,0,78,77,13,0,34,77,77,0,121,77,4,0,82,74,12,0,135,77,9,0,74,0,0,0,78,77,14,0,34,77,77,0,121,77,4,0,82,74,59,0,135,77,9,0,74,0,0,0,25,1,1,1,57,77,6,1,64,21,0,0,119,0,103,255,32,77,63,118,121,77,3,0,135,2,4,0,119,0,73,0,32,77,63,123,121,77,5,0,135,2,4,0,1,1,1,0,1,63,137,0,119,0,22,0,1,77,135,0,45,77,63,77,104,20,0,0,135,2,4,0,119,0,17,0,1,77,136,0,45,77,63,77,136,20,0,0,135,66,4,0,0,1,2,0,0,2,66,0,1,63,137,0,119,0,9,0,1,77,138,0,45,77,63,77,168,20,0,0,135,2,4,0,135,77,5,0,57,0,0,0,1,1,0,0,1,63,139,0,1,77,137,0,45,77,63,77,184,20,0,0,1,63,139,0,1,77,139,0,45,77,63,77,52,21,0,0,78,77,9,0,34,77,77,0,121,77,4,0,82,74,8,0,135,77,9,0,74,0,0,0,78,77,11,0,34,77,77,0,121,77,4,0,82,74,10,0,135,77,9,0,74,0,0,0,78,77,13,0,34,77,77,0,121,77,4,0,82,74,12,0,135,77,9,0,74,0,0,0,78,77,14,0,34,77,77,0,121,77,6,0,82,74,59,0,135,77,9,0,74,0,0,0,121,1,14,0,119,0,3,0,121,1,12,0,119,0,1,0,135,77,9,0,15,0,0,0,119,0,8,0,135,77,5,0,62,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,62,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,77,118,0,1,74,1,0,1,76,0,0,135,2,2,0,77,0,74,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,226,7,121,2,111,2,1,76,0,0,132,0,0,76,1,74,119,0,106,77,0,76,135,76,7,0,74,61,0,77,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,172,0,119,0,88,2,106,3,61,8,121,3,71,0,1,76,0,0,132,0,0,76,1,76,86,1,135,2,8,0,76,3,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,172,0,119,0,73,2,125,66,2,2,3,0,0,0,78,77,66,0,32,77,77,59,121,77,4,0,25,77,66,1,0,76,77,0,119,0,3,0,1,77,0,0,0,76,77,0,0,66,76,0,25,2,0,80,32,77,66,0,121,77,4,0,1,77,1,0,0,76,77,0,119,0,4,0,82,77,2,0,16,77,77,66,0,76,77,0,120,76,3,0,85,61,3,0,119,0,35,0,1,76,0,0,132,0,0,76,1,76,86,1,135,1,8,0,76,3,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,172,0,119,0,37,2,125,66,1,1,3,0,0,0,78,77,66,0,32,77,77,125,121,77,4,0,25,77,66,1,0,76,77,0,119,0,3,0,1,77,0,0,0,76,77,0,0,66,76,0,32,77,66,0,121,77,4,0,1,77,1,0,0,76,77,0,119,0,4,0,82,77,2,0,16,77,77,66,0,76,77,0,120,76,2,0,85,61,3,0,82,3,61,0,120,3,167,0,1,76,0,0,85,62,76,0,1,77,0,0,109,62,4,77,1,76,0,0,109,62,8,76,1,76,0,0,132,0,0,76,1,76,58,1,1,77,16,0,135,2,8,0,76,77,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,250,1,85,62,2,0,2,76,0,0,16,0,0,128,109,62,8,76,1,77,11,0,109,62,4,77,0,17,2,0,2,18,0,0,239,172,0,0,25,19,17,11,78,77,18,0,83,17,77,0,25,17,17,1,25,18,18,1,54,77,17,19,144,23,0,0,1,76,0,0,107,2,11,76,1,77,0,0,109,60,8,77,25,1,60,11,1,77,7,0,83,1,77,0,2,77,0,0,251,172,0,0,78,77,77,0,83,60,77,0,2,76,0,0,252,172,0,0,78,76,76,0,107,60,1,76,2,77,0,0,253,172,0,0,78,77,77,0,107,60,2,77,2,76,0,0,254,172,0,0,78,76,76,0,107,60,3,76,2,77,0,0,255,172,0,0,78,77,77,0,107,60,4,77,2,76,0,0,0,173,0,0,78,76,76,0,107,60,5,76,2,77,0,0,1,173,0,0,78,77,77,0,107,60,6,77,1,76,0,0,107,60,7,76,1,76,0,0,85,56,76,0,1,77,0,0,109,56,4,77,1,76,0,0,109,56,8,76,1,76,0,0,132,0,0,76,1,76,58,1,1,77,32,0,135,2,8,0,76,77,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,60,0,85,56,2,0,2,76,0,0,32,0,0,128,109,56,8,76,1,77,25,0,109,56,4,77,0,17,2,0,2,18,0,0,3,173,0,0,25,19,17,25,78,77,18,0,83,17,77,0,25,17,17,1,25,18,18,1,54,77,17,19,180,24,0,0,1,76,0,0,107,2,25,76,1,76,0,0,132,0,0,76,1,77,10,0,1,74,1,0,135,76,10,0,77,0,62,60,56,74,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,10,0,135,2,4,0,1,76,0,0,102,74,56,11,56,76,76,74,120,25,0,0,82,74,56,0,135,76,9,0,74,0,0,0,119,0,20,0,102,76,56,11,34,76,76,0,121,76,4,0,82,74,56,0,135,76,9,0,74,0,0,0,78,76,1,0,34,76,76,0,121,76,4,0,82,74,60,0,135,76,9,0,74,0,0,0,102,76,62,11,34,76,76,0,121,76,19,0,82,74,62,0,135,76,9,0,74,0,0,0,119,0,15,0,78,76,1,0,34,76,76,0,121,76,4,0,82,74,60,0,135,76,9,0,74,0,0,0,1,76,0,0,102,74,62,11,56,76,76,74,76,31,0,0,82,74,62,0,135,76,9,0,74,0,0,0,119,0,104,1,1,76,0,0,132,0,0,76,1,74,0,0,135,76,3,0,67,56,74,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,91,1,85,56,71,0,102,76,61,13,120,76,41,0,1,76,0,0,132,0,0,76,1,74,107,0,1,77,1,0,135,76,7,0,74,62,0,77,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,177,0,25,2,56,4,82,76,2,0,121,76,16,0,1,76,0,0,132,0,0,76,135,76,1,0,68,56,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,120,76,2,0,119,0,5,0,135,2,4,0,135,76,5,0,62,0,0,0,119,0,159,0,25,63,62,4,116,2,63,0,1,76,0,0,85,63,76,0,135,76,5,0,62,0,0,0,1,63,209,0,119,0,151,0,1,76,0,0,132,0,0,76,1,76,58,1,1,77,112,0,135,2,8,0,76,77,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,203,0,119,0,133,0,1,77,0,0,132,0,0,77,0,17,62,0,25,18,0,108,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,77,17,19,220,26,0,0,1,76,81,0,1,74,0,0,135,77,7,0,76,2,62,74,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,6,0,135,66,4,0,135,77,9,0,2,0,0,0,0,2,66,0,119,0,108,0,1,77,0,0,132,0,0,77,135,77,3,0,67,60,2,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,203,0,119,0,96,0,85,60,71,0,25,2,56,4,82,77,2,0,121,77,16,0,1,77,0,0,132,0,0,77,135,77,1,0,68,56,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,2,0,119,0,5,0,135,2,4,0,135,77,5,0,60,0,0,0,119,0,77,0,25,66,60,4,116,2,66,0,1,77,0,0,85,66,77,0,135,77,5,0,60,0,0,0,82,2,2,0,1,77,0,0,132,0,0,77,1,74,28,0,1,76,1,0,135,77,11,0,74,45,0,3,76,0,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,207,0,119,0,59,0,25,1,2,92,25,2,2,96,82,77,2,0,120,77,3,0,1,63,200,0,119,0,12,0,1,77,0,0,132,0,0,77,135,77,1,0,68,1,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,2,0,1,63,200,0,45,77,63,72,200,28,0,0,25,77,45,4,116,2,77,0,1,77,0,0,132,0,0,77,135,77,1,0,69,1,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,20,0,1,77,0,0,132,0,0,77,82,76,2,0,135,77,3,0,67,44,76,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,9,0,1,77,112,66,85,44,77,0,135,77,5,0,44,0,0,0,135,77,5,0,45,0,0,0,1,63,209,0,119,0,9,0,135,2,4,0,135,77,5,0,45,0,0,0,119,0,5,0,1,77,203,0,45,77,63,77,232,28,0,0,135,2,4,0,1,77,209,0,45,77,63,77,52,31,0,0,106,77,65,4,25,3,77,64,82,77,3,0,106,4,77,20,1,77,0,0,132,0,0,77,1,77,58,1,1,76,72,0,135,5,8,0,77,76,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,207,0,119,0,127,0,0,17,51,0,25,18,0,108,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,76,17,19,72,29,0,0,1,76,0,0,132,0,0,76,106,77,56,4,135,76,3,0,67,53,77,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,104,0,85,53,71,0,0,17,60,0,0,18,51,0,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,76,17,19,160,29,0,0,1,76,0,0,132,0,0,76,1,77,170,1,135,76,1,0,77,5,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,1,1,0,119,0,77,0,25,17,5,12,0,18,60,0,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,76,17,19,244,29,0,0,25,2,5,52,1,76,0,0,85,2,76,0,1,77,0,0,109,5,56,77,1,76,0,0,107,5,60,76,1,76,56,39,85,5,76,0,25,1,5,64,1,76,0,0,132,0,0,76,106,77,53,4,135,76,3,0,67,1,77,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,53,0,0,0,119,0,49,0,85,1,71,0,1,76,16,0,85,2,76,0,1,76,0,0,132,0,0,76,135,76,3,0,67,52,5,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,1,0,0,119,0,29,0,85,52,70,0,1,76,0,0,132,0,0,76,135,76,3,0,4,3,52,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,7,0,135,2,4,0,135,76,5,0,52,0,0,0,135,76,5,0,53,0,0,0,119,0,19,0,135,76,5,0,52,0,0,0,135,76,5,0,53,0,0,0,135,76,5,0,56,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,2,4,0,135,76,5,0,53,0,0,0,120,1,2,0,119,0,3,0,135,76,9,0,5,0,0,0,1,76,207,0,45,76,63,76,68,31,0,0,135,2,4,0,135,76,5,0,56,0,0,0,1,76,172,0,45,76,63,76,92,31,0,0,135,2,4,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,25,6,0,76,1,76,0,0,132,0,0,76,1,77,119,0,82,74,6,0,135,76,7,0,77,62,0,74,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,6,0,135,66,4,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,25,4,62,8,82,3,4,0,106,4,4,4,106,76,62,4,120,76,75,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,116,22,62,0,1,74,0,0,109,22,4,74,25,66,22,8,85,66,3,0,109,66,4,4,1,74,0,0,132,0,0,74,116,62,22,0,106,76,22,4,109,62,4,76,106,74,22,8,109,62,8,74,106,76,22,12,109,62,12,76,1,74,120,0,135,76,7,0,74,23,0,62,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,62,5,1,76,0,0,132,0,0,76,106,74,23,4,135,76,3,0,67,21,74,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,21,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,21,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,21,0,0,0,119,0,10,0,135,76,5,0,21,0,0,0,135,76,5,0,23,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,23,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,119,0,1,74,1,0,1,77,0,0,135,2,2,0,76,0,74,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,3,5,121,2,62,0,106,77,65,4,25,2,77,64,82,77,2,0,106,1,77,20,1,77,0,0,132,0,0,77,1,74,91,2,135,77,3,0,74,25,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,241,4,1,77,0,0,132,0,0,77,106,74,25,4,135,77,3,0,67,24,74,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,25,0,85,24,70,0,1,77,0,0,132,0,0,77,135,77,3,0,1,2,24,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,24,0,0,0,119,0,10,0,135,77,5,0,24,0,0,0,135,77,5,0,25,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,25,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,77,120,0,1,74,1,0,1,76,0,0,135,2,2,0,77,0,74,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,182,4,121,2,62,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,74,92,2,135,76,3,0,74,27,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,164,4,1,76,0,0,132,0,0,76,106,74,27,4,135,76,3,0,67,26,74,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,26,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,26,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,26,0,0,0,119,0,10,0,135,76,5,0,26,0,0,0,135,76,5,0,27,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,27,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,121,0,1,74,1,0,1,77,0,0,135,2,2,0,76,0,74,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,105,4,121,2,62,0,106,77,65,4,25,2,77,64,82,77,2,0,106,1,77,20,1,77,0,0,132,0,0,77,1,74,93,2,135,77,3,0,74,29,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,87,4,1,77,0,0,132,0,0,77,106,74,29,4,135,77,3,0,67,28,74,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,25,0,85,28,70,0,1,77,0,0,132,0,0,77,135,77,3,0,1,2,28,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,28,0,0,0,119,0,10,0,135,77,5,0,28,0,0,0,135,77,5,0,29,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,29,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,77,122,0,1,74,1,0,1,76,0,0,135,2,2,0,77,0,74,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,28,4,121,2,118,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,76,58,1,1,74,68,0,135,3,8,0,76,74,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,9,4,0,17,62,0,25,18,0,108,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,74,17,19,36,37,0,0,1,74,0,0,132,0,0,74,1,76,170,1,135,74,1,0,76,3,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,5,0,135,2,4,0,135,74,9,0,3,0,0,0,119,0,242,3,25,17,3,12,0,18,62,0,25,19,17,40,116,17,18,0,25,17,17,4,25,18,18,4,54,74,17,19,128,37,0,0,1,76,0,0,109,3,56,76,1,74,0,0,107,3,60,74,1,74,120,40,85,3,74,0,1,76,0,0,109,3,64,76,1,74,7,0,109,3,52,74,1,74,0,0,132,0,0,74,135,74,3,0,67,39,3,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,212,3,1,74,212,69,85,39,74,0,1,74,0,0,132,0,0,74,106,76,39,4,135,74,3,0,67,36,76,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,135,2,4,0,119,0,25,0,85,36,70,0,1,74,0,0,132,0,0,74,135,74,3,0,1,2,36,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,5,0,135,2,4,0,135,74,5,0,36,0,0,0,119,0,10,0,135,74,5,0,36,0,0,0,135,74,5,0,39,0,0,0,135,74,5,0,65,0,0,0,137,64,0,0,1,74,1,0,139,74,0,0,135,74,5,0,39,0,0,0,0,66,2,0,135,74,5,0,65,0,0,0,135,74,6,0,66,0,0,0,1,74,0,0,132,0,0,74,1,74,123,0,1,76,1,0,1,77,0,0,135,2,2,0,74,0,76,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,151,3,121,2,62,0,106,77,65,4,25,2,77,64,82,77,2,0,106,1,77,20,1,77,0,0,132,0,0,77,1,76,94,2,135,77,3,0,76,32,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,133,3,1,77,0,0,132,0,0,77,106,76,32,4,135,77,3,0,67,30,76,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,25,0,85,30,70,0,1,77,0,0,132,0,0,77,135,77,3,0,1,2,30,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,30,0,0,0,119,0,10,0,135,77,5,0,30,0,0,0,135,77,5,0,32,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,32,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,77,124,0,1,76,1,0,1,74,0,0,135,2,2,0,77,0,76,74,130,74,0,0,0,66,74,0,1,74,0,0],eb+0),HEAPU8.set([132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,74,3,121,2,63,0,106,74,65,4,25,2,74,64,82,74,2,0,106,1,74,20,1,74,0,0,132,0,0,74,1,76,121,0,1,77,0,0,135,74,7,0,76,34,0,77,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,1,63,10,0,119,0,55,3,1,74,0,0,132,0,0,74,106,77,34,4,135,74,3,0,67,33,77,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,135,2,4,0,119,0,25,0,85,33,70,0,1,74,0,0,132,0,0,74,135,74,3,0,1,2,33,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,5,0,135,2,4,0,135,74,5,0,33,0,0,0,119,0,10,0,135,74,5,0,33,0,0,0,135,74,5,0,34,0,0,0,135,74,5,0,65,0,0,0,137,64,0,0,1,74,1,0,139,74,0,0,135,74,5,0,34,0,0,0,0,66,2,0,135,74,5,0,65,0,0,0,135,74,6,0,66,0,0,0,1,74,0,0,132,0,0,74,1,74,125,0,1,77,1,0,1,76,0,0,135,2,2,0,74,0,77,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,252,2,121,2,63,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,77,121,0,1,74,1,0,135,76,7,0,77,37,0,74,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,233,2,1,76,0,0,132,0,0,76,106,74,37,4,135,76,3,0,67,35,74,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,35,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,35,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,35,0,0,0,119,0,10,0,135,76,5,0,35,0,0,0,135,76,5,0,37,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,37,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,126,0,1,74,1,0,1,77,0,0,135,2,2,0,76,0,74,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,174,2,121,2,21,0,1,77,0,0,132,0,0,77,1,74,127,0,1,76,1,0,1,75,0,0,135,77,2,0,74,0,76,75,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,158,2,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,1,77,0,0,132,0,0,77,1,77,128,0,1,75,1,0,1,76,0,0,135,2,2,0,77,0,75,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,138,2,121,2,62,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,75,95,2,135,76,3,0,75,42,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,120,2,1,76,0,0,132,0,0,76,106,75,42,4,135,76,3,0,67,40,75,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,40,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,40,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,40,0,0,0,119,0,10,0,135,76,5,0,40,0,0,0,135,76,5,0,42,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,42,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,76,129,0,1,75,1,0,1,77,0,0,135,2,2,0,76,0,75,77,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,61,2,121,2,62,0,106,77,65,4,25,2,77,64,82,77,2,0,106,1,77,20,1,77,0,0,132,0,0,77,1,75,96,2,135,77,3,0,75,46,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,10,0,119,0,43,2,1,77,0,0,132,0,0,77,106,75,46,4,135,77,3,0,67,43,75,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,25,0,85,43,70,0,1,77,0,0,132,0,0,77,135,77,3,0,1,2,43,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,43,0,0,0,119,0,10,0,135,77,5,0,43,0,0,0,135,77,5,0,46,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,46,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,132,0,0,77,1,77,130,0,1,75,1,0,1,76,0,0,135,2,2,0,77,0,75,76,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,240,1,121,2,62,0,106,76,65,4,25,2,76,64,82,76,2,0,106,1,76,20,1,76,0,0,132,0,0,76,1,75,97,2,135,76,3,0,75,48,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,222,1,1,76,0,0,132,0,0,76,106,75,48,4,135,76,3,0,67,47,75,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,25,0,85,47,70,0,1,76,0,0,132,0,0,76,135,76,3,0,1,2,47,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,5,0,135,2,4,0,135,76,5,0,47,0,0,0,119,0,10,0,135,76,5,0,47,0,0,0,135,76,5,0,48,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,135,76,5,0,48,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,121,1,199,0,1,76,0,0,132,0,0,76,1,75,64,0,1,77,1,0,1,74,0,0,135,76,2,0,75,0,77,74,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,1,63,10,0,119,0,162,1,106,76,0,80,82,74,6,0,50,76,76,74,216,46,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,1,76,0,0,85,62,76,0,1,74,0,0,109,62,4,74,1,76,0,0,109,62,8,76,1,76,0,0,132,0,0,76,1,76,58,1,1,74,16,0,135,2,8,0,76,74,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,135,2,4,0,119,0,150,0,85,62,2,0,2,76,0,0,16,0,0,128,109,62,8,76,1,74,11,0,109,62,4,74,0,17,2,0,2,18,0,0,239,172,0,0,25,19,17,11,78,74,18,0,83,17,74,0,25,17,17,1,25,18,18,1,54,74,17,19,80,47,0,0,1,76,0,0,107,2,11,76,1,74,0,0,109,60,8,74,25,1,60,11,1,74,7,0,83,1,74,0,2,74,0,0,251,172,0,0,78,74,74,0,83,60,74,0,2,76,0,0,252,172,0,0,78,76,76,0,107,60,1,76,2,74,0,0,253,172,0,0,78,74,74,0,107,60,2,74,2,76,0,0,254,172,0,0,78,76,76,0,107,60,3,76,2,74,0,0,255,172,0,0,78,74,74,0,107,60,4,74,2,76,0,0,0,173,0,0,78,76,76,0,107,60,5,76,2,74,0,0,1,173,0,0,78,74,74,0,107,60,6,74,1,76,0,0,107,60,7,76,1,76,0,0,85,61,76,0,1,74,0,0,109,61,4,74,1,76,0,0,109,61,8,76,1,76,0,0,132,0,0,76,1,76,58,1,1,74,48,0,135,2,8,0,76,74,0,0,130,74,0,0,0,66,74,0,1,74,0,0,132,0,0,74,38,74,66,1,121,74,3,0,135,2,4,0,119,0,64,0,85,61,2,0,2,76,0,0,48,0,0,128,109,61,8,76,1,74,38,0,109,61,4,74,0,17,2,0,2,18,0,0,106,177,0,0,25,19,17,38,78,74,18,0,83,17,74,0,25,17,17,1,25,18,18,1,54,74,17,19,116,48,0,0,1,76,0,0,107,2,38,76,1,76,0,0,132,0,0,76,1,74,10,0,1,77,1,0,135,76,10,0,74,0,62,60,61,77,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,10,0,135,2,4,0,1,76,0,0,102,77,61,11,56,76,76,77,72,49,0,0,82,77,61,0,135,76,9,0,77,0,0,0,119,0,24,0,102,76,61,11,34,76,76,0,121,76,4,0,82,77,61,0,135,76,9,0,77,0,0,0,78,76,1,0,34,76,76,0,121,76,4,0,82,77,60,0,135,76,9,0,77,0,0,0,102,76,62,11,34,76,76,0,121,76,4,0,82,77,62,0,135,76,9,0,77,0,0,0,135,76,5,0,65,0,0,0,137,64,0,0,1,76,1,0,139,76,0,0,78,76,1,0,34,76,76,0,121,76,4,0,82,77,60,0,135,76,9,0,77,0,0,0,1,76,0,0,102,77,62,11,56,76,76,77,124,49,0,0,82,77,62,0,135,76,9,0,77,0,0,0,0,66,2,0,135,76,5,0,65,0,0,0,135,76,6,0,66,0,0,0,1,76,0,0,132,0,0,76,1,77,98,2,135,76,3,0,77,62,0,0,130,76,0,0,0,66,76,0,1,76,0,0,132,0,0,76,38,76,66,1,121,76,3,0,135,2,4,0,119,0,217,0,25,4,62,4,82,66,4,0,1,76,148,0,3,5,0,76,82,77,5,0,109,66,56,77,106,77,65,4,25,2,77,64,82,77,2,0,106,1,77,20,1,77,0,0,132,0,0,77,135,77,3,0,67,50,66,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,105,1,119,0,189,0,1,77,228,69,85,50,77,0,1,77,0,0,132,0,0,77,106,76,50,4,135,77,3,0,67,49,76,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,172,0,85,49,70,0,1,77,0,0,132,0,0,77,135,77,3,0,1,2,49,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,5,0,135,2,4,0,135,77,5,0,49,0,0,0,119,0,157,0,135,77,5,0,49,0,0,0,135,77,5,0,50,0,0,0,82,2,6,0,1,77,0,0,132,0,0,77,1,77,86,1,135,1,8,0,77,2,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,105,1,119,0,141,0,125,66,1,1,2,0,0,0,78,76,66,0,32,76,76,123,121,76,4,0,25,76,66,1,0,77,76,0,119,0,3,0,1,76,0,0,0,77,76,0,0,66,77,0,32,76,66,0,121,76,4,0,1,76,1,0,0,77,76,0,119,0,4,0,106,76,0,80,16,76,76,66,0,77,76,0,120,77,112,0,82,2,4,0,102,77,2,89,121,77,4,0,82,77,5,0,25,77,77,1,85,5,77,0,1,77,5,0,85,60,77,0,25,3,0,60,82,1,3,0,106,77,0,64,48,77,1,77,116,51,0,0,1,77,5,0,85,1,77,0,25,77,1,4,85,3,77,0,119,0,17,0,1,77,0,0,132,0,0,77,1,76,53,2,25,74,0,56,135,77,3,0,76,74,60,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,135,2,4,0,119,0,89,0,82,2,4,0,119,0,1,0,1,77,0,0,132,0,0,77,1,74,122,0,1,76,0,0,135,77,7,0,74,55,0,76,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,121,77,3,0,1,63,105,1,119,0,73,0,25,1,2,64,25,2,2,68,82,77,2,0,120,77,3,0,1,63,116,1,119,0,12,0,1,77,0,0,132,0,0,77,135,77,1,0,68,1,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,2,0,1,63,116,1,45,77,63,73,216,52,0,0,25,77,55,4,116,2,77,0,1,77,0,0,132,0,0,77,135,77,1,0,69,1,0,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,29,0,1,77,0,0,132,0,0,77,82,76,2,0,135,77,3,0,67,54,76,0,130,77,0,0,0,66,77,0,1,77,0,0,132,0,0,77,38,77,66,1,120,77,18,0,1,77,56,32,85,54,77,0,135,77,5,0,54,0,0,0,135,77,5,0,55,0,0,0,82,77,3,0,26,77,77,4,85,3,77,0,82,77,4,0,102,77,77,89,120,77,2,0,119,0,9,0,82,77,5,0,26,77,77,1,85,5,77,0,119,0,5,0,135,2,4,0,135,77,5,0,55,0,0,0,119,0,10,0,135,77,5,0,62,0,0,0,135,77,5,0,65,0,0,0,137,64,0,0,1,77,1,0,139,77,0,0,135,77,5,0,50,0,0,0,1,77,105,1,45,77,63,77,28,53,0,0,135,2,4,0,135,77,5,0,62,0,0,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,32,77,63,10,121,77,2,0,135,2,4,0,0,66,2,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,135,66,4,0,135,77,5,0,65,0,0,0,135,77,6,0,66,0,0,0,1,77,0,0,139,77,0,0,140,2,107,0,0,0,0,0,2,92,0,0,200,1,0,0,2,93,0,0,58,1,0,0,2,94,0,0,161,0,0,0,2,95,0,0,216,33,0,0,2,96,0,0,112,44,0,0,2,97,0,0,160,0,0,0,2,98,0,0,159,0,0,0,2,99,0,0,158,0,0,0,2,100,0,0,162,0,0,0,2,101,0,0,37,1,0,0,136,102,0,0,0,86,102,0,136,102,0,0,1,103,128,2,3,102,102,103,137,102,0,0,1,102,80,2,3,87,86,102,1,102,4,2,3,89,86,102,1,102,248,1,3,88,86,102,1,102,224,1,3,82,86,102,1,102,168,1,3,78,86,102,25,50,86,80,25,51,86,40,0,91,86,0,1,102,40,2,3,54,86,102,1,102,24,2,3,81,86,102,1,102,240,1,3,77,86,102,1,102,216,1,3,57,86,102,1,102,208,1,3,58,86,102,1,102,128,1,3,47,86,102,1,102,120,1,3,68,86,102,1,102,104,1,3,69,86,102,1,102,96,1,3,59,86,102,1,102,56,1,3,48,86,102,1,102,48,1,3,70,86,102,1,102,40,1,3,71,86,102,1,102,24,1,3,72,86,102,1,102,16,1,3,60,86,102,1,102,232,0,3,49,86,102,1,102,224,0,3,73,86,102,1,102,208,0,3,74,86,102,1,102,196,0,3,64,86,102,1,102,184,0,3,65,86,102,1,102,172,0,3,66,86,102,3,67,86,97,1,102,152,0,3,79,86,102,1,102,144,0,3,80,86,102,1,102,136,0,3,84,86,102,25,85,86,120,1,102,96,0,135,8,12,0,102,0,0,0,25,83,1,108,0,6,91,0,0,7,83,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,102,6,9,244,54,0,0,1,102,0,0,132,0,0,102,1,103,170,1,135,102,1,0,103,8,0,0,130,102,0,0,0,90,102,0,1,102,0,0,132,0,0,102,38,102,90,1,121,102,3,0,135,2,4,0,119,0,244,12,25,6,8,12,0,7,91,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,102,6,9,72,55,0,0,25,2,8,52,1,102,0,0,85,2,102,0,1,103,0,0,109,8,56,103,1,102,0,0,107,8,60,102,1,102,24,35,85,8,102,0,25,6,8,64,25,7,8,68,25,3,8,88,1,102,0,0,85,6,102,0,1,103,0,0,109,6,4,103,1,102,0,0,109,6,8,102,1,103,0,0,109,6,12,103,1,102,0,0,109,6,16,102,1,103,0,0,109,6,20,103,1,103,0,0,132,0,0,103,1,102,0,0,135,103,3,0,92,3,102,0,130,103,0,0,0,90,103,0,1,103,0,0,132,0,0,103,38,103,90,1,121,103,27,0,135,2,4,0,128,103,0,0,0,5,103,0,25,102,8,76,135,103,13,0,102,0,0,0,82,3,6,0,121,3,193,12,82,4,7,0,46,103,4,3,68,56,0,0,26,91,4,8,85,7,91,0,82,102,91,0,82,102,102,0,1,104,255,1,19,102,102,104,135,103,14,0,102,91,0,0,82,4,7,0,53,103,4,3,20,56,0,0,82,3,6,0,135,103,9,0,3,0,0,0,119,0,175,12,1,103,104,33,85,3,103,0,1,103,12,0,85,2,103,0,135,103,0,0,0,8,0,0,1,103,40,68,85,0,103,0,1,103,0,0,85,91,103,0,25,90,91,4,1,103,0,0,85,90,103,0,1,102,0,0,109,91,8,102,25,16,66,8,25,17,66,4,25,42,66,11,25,18,67,8,25,19,67,4,25,43,67,11,25,75,81,11,25,20,81,3,25,21,89,4,25,22,77,4,25,23,82,4,25,41,1,76,25,62,1,80,25,24,64,8,25,25,64,4,25,44,64,11,25,26,78,4,25,52,74,11,25,27,71,4,25,53,72,11,25,28,65,8,25,29,65,4,25,45,65,11,25,63,87,11,25,30,87,12,25,31,88,4,25,32,91,8,25,33,87,16,25,55,87,12,1,102,156,0,3,38,1,102,25,34,57,4,25,35,82,4,25,56,69,11,25,39,1,84,25,40,1,96,3,36,1,97,1,102,164,0,3,37,1,102,25,76,89,11,25,10,87,12,25,11,88,4,25,12,87,16,25,46,87,12,25,61,87,11,25,13,89,8,25,14,89,4,25,15,81,4,1,3,1,0,1,102,0,0,132,0,0,102,1,102,57,0,1,103,1,0,1,104,0,0,135,2,2,0,102,1,103,104,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,16,0,119,0,140,5,33,104,2,0,120,104,240,255,1,104,0,0,132,0,0,104,1,104,73,0,1,103,1,0,1,102,0,0,135,2,2,0,104,1,103,102,130,102,0,0,0,9,102,0,1,102,0,0,132,0,0,102,38,102,9,1,121,102,3,0,1,25,16,0,119,0,123,5,120,2,159,4,1,102,0,0,132,0,0,102,1,102,92,0,1,103,1,0,1,104,0,0,135,2,2,0,102,1,103,104,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,16,0,119,0,107,5,120,2,128,0,121,3,64,0,1,104,0,0,85,66,104,0,1,103,0,0,109,66,4,103,1,104,0,0,109,66,8,104,1,104,0,0,132,0,0,104,1,104,48,0,135,2,8,0,93,104,0,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,16,0,119,0,86,5,85,66,2,0,2,104,0,0,48,0,0,128,85,16,104,0,1,104,47,0,85,17,104,0,0,6,2,0,2,7,0,0,186,181,0,0,25,9,6,47,78,104,7,0,83,6,104,0,25,6,6,1,25,7,7,1,54,104,6,9,140,58,0,0,1,103,0,0,107,2,47,103,1,103,0,0,132,0,0,103,116,87,83,0,106,104,83,4,109,87,4,104,106,103,83,8,109,87,8,103,1,104,109,0,135,103,7,0,104,1,66,87,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,3,0,1,25,211,0,119,0,50,5,1,103,0,0,78,104,42,0,56,103,103,104,204,78,0,0,82,104,66,0,135,103,9,0,104,0,0,0,119,0,239,4,1,103,0,0,85,67,103,0,1,104,0,0,109,67,4,104,1,103,0,0,109,67,8,103,1,103,0,0,132,0,0,103,1,103,64,0,135,2,8,0,93,103,0,0,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,3,0,1,25,16,0,119,0,23,5,85,67,2,0,2,103,0,0,64,0,0,128,85,18,103,0,1,103,52,0,85,19,103,0,0,6,2,0,2,7,0,0,234,181,0,0,25,9,6,52,78,103,7,0,83,6,103,0,25,6,6,1,25,7,7,1,54,103,6,9,136,59,0,0,1,104,0,0,107,2,52,104,1,104,0,0,132,0,0,104,116,87,83,0,106,103,83,4,109,87,4,103,106,104,83,8,109,87,8,104,1,103,109,0,135,104,7,0,103,1,67,87,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,217,0,119,0,243,4,1,104,0,0,78,103,43,0,56,104,104,103,204,78,0,0,82,103,67,0,135,104,9,0,103,0,0,0,119,0,176,4,1,104,0,0,132,0,0,104,1,104,84,0,135,8,8,0,93,104,0,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,91,0,119,0,222,4,0,6,51,0,0,7,83,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,104,6,9,80,60,0,0,1,104,0,0,132,0,0,104,1,103,170,1,135,104,1,0,103,8,0,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,92,0,119,0,201,4,25,6,8,12,0,7,51,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,104,6,9,164,60,0,0,1,104,168,44,85,8,104,0,1,103,0,0,107,8,52,103,1,104,0,0,107,8,53,104,1,103,0,0,107,8,54,103,1,104,0,0,109,8,56,104,25,2,8,60,1,104,128,44,85,2,104,0,25,7,8,64,1,104,0,0,85,7,104,0,1,103,0,0,109,7,4,103,1,104,0,0,109,7,8,104,1,103,0,0,109,7,12,103,1,103,0,0,132,0,0,103,1,104,35,2,1,102,0,0,135,103,3,0,104,7,102,0,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,3,0,1,25,60,0,119,0,157,4,1,103,200,43,85,8,103,0,1,103,72,44,85,2,103,0,1,102,0,0,107,8,80,102,1,103,0,0,107,8,81,103,1,102,0,0,107,8,82,102,1,102,0,0,132,0,0,102,135,102,3,0,92,89,8,0,130,102,0,0,0,9,102,0,1,102,0,0,132,0,0,102,38,102,9,1,121,102,3,0,1,25,91,0,119,0,135,4,1,102,104,40,85,89,102,0,1,102,0,0,132,0,0,102,1,102,92,0,135,5,8,0,93,102,0,0,130,102,0,0,0,9,102,0,1,102,0,0,132,0,0,102,38,102,9,1,121,102,3,0,1,25,94,0,119,0,120,4,0,6,54,0,0,7,83,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,102,6,9,232,61,0,0,0,9,15,0,1,102,0,0,85,9,102,0,1,103,0,0,109,9,4,103,1,103,3,0,83,75,103,0,2,103,0,0,244,189,0,0,78,103,103,0,83,81,103,0,2,102,0,0,245,189,0,0,78,102,102,0,107,81,1,102,2,103,0,0,246,189,0,0,78,103,103,0,107,81,2,103,1,103,0,0,83,20,103,0,1,103,0,0,132,0,0,103,82,102,21,0,135,103,3,0,92,77,102,0,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,3,0,1,25,95,0,119,0,78,4,1,103,104,40,85,77,103,0,0,6,50,0,0,7,54,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,103,6,9,152,62,0,0,1,103,0,0,132,0,0,103,1,102,170,1,135,103,1,0,102,5,0,0,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,4,0,1,4,1,0,1,25,96,0,119,0,54,4,25,6,5,12,0,7,50,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,103,6,9,240,62,0,0,1,102,0,0,107,5,52,102,1,103,0,0,107,5,53,103,1,102,0,0,107,5,54,102,25,2,5,56,1,102,0,0,85,2,102,0,1,102,36,45,85,5,102,0,25,4,5,60,1,102,0,0,132,0,0,102,1,103,197,1,135,102,3,0,103,4,81,0,130,102,0,0,0,9,102,0,1,102,0,0,132,0,0,102,38,102,9,1,121,102,3,0,1,25,72,0,119,0,21,4,25,3,5,72,1,102,0,0,132,0,0,102,82,103,22,0,135,102,3,0,92,3,103,0,130,102,0,0,0,9,102,0,1,102,0,0,132,0,0,102,38,102,9,1,121,102,3,0,1,25,73,0,119,0,7,4,1,102,104,40,85,3,102,0,1,103,0,0,107,5,80,103,1,102,0,0,109,5,84,102,1,103,0,0,109,5,88,103,1,103,11,0,85,2,103,0,1,103,0,0,132,0,0,103,135,103,3,0,92,88,5,0,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,4,0,1,4,0,0,1,25,96,0,119,0,240,3,1,103,220,68,85,88,103,0,135,103,5,0,77,0,0,0,78,103,75,0,34,103,103,0,121,103,4,0,82,102,81,0,135,103,9,0,102,0,0,0,1,103,0,0,132,0,0,103,1,103,73,0,1,102,1,0,1,104,0,0,135,2,2,0,103,1,102,104,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,102,0,119,0,215,3,120,2,203,1,1,104,0,0,132,0,0,104,1,102,78,2,135,104,3,0,102,82,1,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,126,0,119,0,201,3,82,2,23,0,120,2,63,1,82,2,41,0,1,104,0,0,132,0,0,104,1,104,86,1,135,3,8,0,104,2,0,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,127,0,119,0,185,3,125,2,3,3,2,0,0,0,78,3,2,0,41,104,3,24,42,104,104,24,121,104,236,0,1,4,0,0,1,5,0,0,1,6,0,0,41,104,3,24,42,104,104,24,1,102,34,0,1,103,59,0,138,104,102,103,104,66,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,116,66,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,252,65,0,0,128,66,0,0,121,4,3,0,1,4,1,0,119,0,33,0,121,5,4,0,1,4,0,0,1,5,1,0,119,0,29,0,41,102,3,24,42,102,102,24,1,103,40,0,1,105,2,0,138,102,103,105,64,66,0,0,80,66,0,0,1,4,0,0,1,5,0,0,119,0,19,0,1,4,0,0,1,5,0,0,25,6,6,1,119,0,15,0,120,6,2,0,119,0,19,0,1,4,0,0,1,5,0,0,26,6,6,1,119,0,9,0,40,102,4,1,0,4,102,0,119,0,6,0,40,102,5,1,0,5,102,0,119,0,3,0,25,2,2,1,119,0,1,0,25,2,2,1,78,3,2,0,41,104,3,24,42,104,104,24,120,104,153,255,119,0,128,0,82,104,62,0,25,102,2,1,55,104,104,102,156,68,0,0,1,104,0,0,132,0,0,104,1,102,112,0,1,103,0,0,135,104,7,0,102,78,1,103,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,158,0,119,0,53,3,82,104,21,0,25,2,104,60,82,104,2,0,106,3,104,20,1,104,0,0,132,0,0,104,1,104,88,0,135,5,8,0,93,104,0,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,159,0,119,0,36,3,82,4,26,0,0,6,49,0,25,7,4,12,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,104,6,9,60,67,0,0,1,104,0,0,132,0,0,104,135,104,3,0,92,73,4,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,160,0,119,0,15,3,85,73,95,0,1,104,0,0,85,74,104,0,1,103,0,0,109,74,4,103,1,104,0,0,109,74,8,104,1,104,0,0,132,0,0,104,0,6,87,0,0,7,49,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,104,6,9,176,67,0,0,1,103,12,0,1,102,0,0,1,105,0,0,135,104,15,0,103,5,87,73,74,102,105,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,4,0,1,2,1,0,1,25,161,0,119,0,239,2,1,104,0,0,132,0,0,104,135,104,3,0,92,60,5,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,4,0,1,2,0,0,1,25,161,0,119,0,226,2,85,60,96,0,1,104,0,0,132,0,0,104,135,104,3,0,3,2,60,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,162,0,119,0,213,2,135,104,5,0,60,0,0,0,78,104,52,0,34,104,104,0,121,104,4,0,82,105,74,0,135,104,9,0,105,0,0,0,135,104,5,0,73,0,0,0,135,104,5,0,78,0,0,0,119,0,186,0,1,104,0,0,85,64,104,0,1,105,0,0,109,64,4,105,1,104,0,0,109,64,8,104,1,104,0,0,132,0,0,104,1,104,16,0,135,2,8,0,93,104,0,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,127,0,119,0,181,2,85,64,2,0,2,104,0,0,16,0,0,128,85,24,104,0,1,104,13,0,85,25,104,0,0,6,2,0,2,7,0,0,153,181,0,0,25,9,6,13,78,104,7,0,83,6,104,0,25,6,6,1,25,7,7,1,54,104,6,9,16,69,0,0,1,105,0,0,107,2,13,105,1,105,0,0,132,0,0,105,116,87,83,0,106,104,83,4,109,87,4,104,106,105,83,8,109,87,8,105,1,104,109,0,135,105,7,0,104,1,64,87,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,173,0,119,0,145,2,1,105,0,0,78,104,44,0,56,105,105,104,128,71,0,0,82,104,64,0,135,105,9,0,104,0,0,0,119,0,123,0,82,105,21,0,25,3,105,60,82,105,3,0,106,4,105,20,1,105,0,0,132,0,0,105,1,105,88,0,135,5,8,0,93,105,0,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,127,0,119,0,120,2,0,6,48,0,25,7,2,12,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,105,6,9,232,69,0,0,1,105,0,0,132,0,0,105,135,105,3,0,92,71,2,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,128,0,119,0,100,2,1,105,168,34,85,71,105,0,1,105,0,0,132,0,0,105,82,104,27,0,135,105,3,0,92,70,104,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,129,0,119,0,85,2,85,70,95,0,1,105,0,0,85,72,105,0,1,104,0,0,109,72,4,104,1,105,0,0,109,72,8,105,1,105,0,0,132,0,0,105,0,6,87,0,0,7,48,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,105,6,9,152,70,0,0,1,104,12,0,1,102,0,0,1,103,0,0,135,105,15,0,104,5,87,70,72,102,103,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,4,0,1,4,1,0,1,25,130,0,119,0,53,2,1,105,0,0,132,0,0,105,135,105,3,0,92,59,5,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,4,0,1,4,0,0,1,25,130,0,119,0,40,2,85,59,96,0,1,105,0,0,132,0,0,105,135,105,3,0,4,3,59,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,131,0,119,0,27,2,135,105,5,0,59,0,0,0,78,105,53,0,34,105,105,0,121,105,4,0,82,103,72,0,135,105,9,0,103,0,0,0,135,105,5,0,70,0,0,0,135,105,5,0,71,0,0,0,135,105,5,0,82,0,0,0,119,0,145,0,1,105,0,0,132,0,0,105,116,87,38,0,106,103,38,4,109,87,4,103,106,105,38,8,109,87,8,105,1,103,26,0,1,102,0,0,135,105,11,0,103,57,1,87,102,0,0,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,103,0,119,0,248,1,1,105,0,0,132,0,0,105,82,102,34,0,135,105,3,0,92,82,102,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,104,0,119,0,235,1,85,82,95,0,135,105,5,0,57,0,0,0,82,105,21,0,25,2,105,60,82,105,2,0,106,3,105,20,1,105,0,0,132,0,0,105,1,105,88,0,135,5,8,0,93,105,0,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,105,0,119,0,215,1,82,4,35,0,0,6,47,0,25,7,4,12,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,105,6,9,112,72,0,0,1,105,0,0,132,0,0,105,135,105,3,0,92,68,4,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,106,0,119,0,194,1,85,68,95,0,1,105,0,0,85,69,105,0,1,102,0,0,109,69,4,102,1,105,0,0,109,69,8,105,1,105,0,0,132,0,0,105,0,6,87,0,0,7,47,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,105,6,9,228,72,0,0,1,102,12,0,1,103,0,0,1,104,0,0,135,105,15,0,102,5,87,68,69,103,104,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,4,0,1,2,1,0,1,25,107,0,119,0,162,1,1,105,0,0,132,0,0,105,135,105,3,0,92,58,5,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,4,0,1,2,0,0,1,25,107,0,119,0,149,1,85,58,96,0,1,105,0,0,132,0,0,105,135,105,3,0,3,2,58,0,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,108,0,119,0,136,1,135,105,5,0,58,0,0,0,78,105,56,0,34,105,105,0,121,105,4,0,82,104,69,0,135,105,9,0,104,0,0,0,135,105,5,0,68,0,0,0,135,105,5,0,82,0,0,0,1,105,0,0,132,0,0,105,1,105,68,0,1,104,1,0,1,103,0,0,135,2,2,0,105,1,104,103,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,3,0,1,25,102,0,119,0,109,1,120,2,63,0,1,103,0,0,85,65,103,0,1,104,0,0,109,65,4,104,1,103,0,0,109,65,8,103,1,103,0,0,132,0,0,103,1,103,32,0,135,2,8,0,93,103,0,0,130,103,0,0,0,9,103,0,1,103,0,0,132,0,0,103,38,103,9,1,121,103,3,0,1,25,102,0,119,0,89,1,85,65,2,0,2,103,0,0,32,0,0,128,85,28,103,0,1,103,18,0,85,29,103,0,0,6,2,0,2,7,0,0,167,181,0,0,25,9,6,18,78,103,7,0,83,6,103,0,25,6,6,1,25,7,7,1,54,103,6,9,128,74,0,0,1,104,0,0,107,2,18,104,1,104,0,0,132,0,0,104,116,87,83,0,106,103,83,4,109,87,4,103,106,104,83,8,109,87,8,104,1,103,109,0,135,104,7,0,103,1,65,87,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,184,0,119,0,53,1,1,104,0,0,78,103,45,0,56,104,104,103,4,75,0,0,82,103,65,0,135,104,9,0,103,0,0,0,1,104,0,0,85,87,104,0,1,103,0,0,109,87,4,103,1,104,0,0,109,87,8,104,1,104,0,0,132,0,0,104,82,103,31,0,135,104,3,0,92,30,103,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,187,0,119,0,27,1,1,104,220,68,85,30,104,0,82,4,90,0,82,104,32,0,48,104,4,104,228,75,0,0,116,4,87,0,106,103,87,4,109,4,4,103,106,104,87,8,109,4,8,104,1,104,0,0,85,87,104,0,1,103,0,0,109,87,4,103,1,104,0,0,109,87,8,104,25,2,4,12,1,104,0,0,132,0,0,104,82,103,33,0,135,104,3,0,92,2,103,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,191,0,119,0,252,0,1,104,220,68,85,2,104,0,82,104,90,0,25,104,104,20,85,90,104,0,119,0,14,0,1,104,0,0,132,0,0,104,1,103,100,2,135,104,3,0,103,91,87,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,199,0,119,0,233,0,135,104,5,0,55,0,0,0,78,104,63,0,34,104,104,0,121,104,4,0,82,103,87,0,135,104,9,0,103,0,0,0,135,104,5,0,88,0,0,0,135,104,5,0,89,0,0,0,119,0,161,0,82,3,36,0,82,5,37,0,1,104,0,0,85,89,104,0,1,103,0,0,109,89,4,103,1,104,0,0,109,89,8,104,4,6,5,3,1,104,239,255,48,104,104,6,132,76,0,0,1,25,20,0,119,0,206,0,35,104,6,11,121,104,4,0,83,76,6,0,0,2,89,0,119,0,22,0,25,104,6,16,38,104,104,240,0,4,104,0,1,104,0,0,132,0,0,104,135,2,8,0,93,4,0,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,44,0,119,0,186,0,85,89,2,0,2,104,0,0,0,0,0,128,20,104,4,104,85,13,104,0,85,14,6,0,46,104,3,5,24,77,0,0,0,4,2,0,78,104,3,0,83,4,104,0,25,3,3,1,52,104,3,5,20,77,0,0,25,4,4,1,119,0,250,255,3,2,2,6,1,104,0,0,83,2,104,0,1,104,0,0,132,0,0,104,1,103,0,0,135,104,3,0,92,88,103,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,45,0,119,0,154,0,1,104,220,68,85,88,104,0,1,104,0,0,132,0,0,104,1,103,197,1,135,104,3,0,103,87,89,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,46,0,119,0,139,0,1,104,0,0,132,0,0,104,82,103,11,0,135,104,3,0,92,10,103,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,31,0,119,0,126,0,1,104,220,68,85,10,104,0,82,4,90,0,82,104,32,0,48,104,4,104,88,78,0,0,116,4,87,0,106,103,87,4,109,4,4,103,106,104,87,8,109,4,8,104,1,104,0,0,85,87,104,0,1,103,0,0,109,87,4,103,1,104,0,0,109,87,8,104,25,2,4,12,1,104,0,0,132,0,0,104,82,103,12,0,135,104,3,0,92,2,103,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,35,0,119,0,95,0,1,104,220,68,85,2,104,0,82,104,90,0,25,104,104,20,85,90,104,0,119,0,14,0,1,104,0,0,132,0,0,104,1,103,100,2,135,104,3,0,103,91,87,0,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,48,0,119,0,76,0,135,104,5,0,46,0,0,0,78,104,61,0,34,104,104,0,121,104,4,0,82,103,87,0,135,104,9,0,103,0,0,0,135,104,5,0,88,0,0,0,78,104,76,0,34,104,104,0,121,104,4,0,82,103,89,0,135,104,9,0,103,0,0,0,116,89,38,0,106,103,38,4,109,89,4,103,106,104,38,8,109,89,8,104,82,3,41,0,116,88,39,0,106,103,39,4,109,88,4,103,106,104,39,8,109,88,8,104,116,82,40,0,106,103,40,4,109,82,4,103,106,104,40,8,109,82,8,104,0,6,78,0,0,7,83,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,104,6,9,24,79,0,0,1,104,0,0,132,0,0,104,1,103,54,0,1,105,1,0,1,102,0,0,135,104,2,0,103,1,105,102,130,104,0,0,0,9,104,0,1,104,0,0,132,0,0,104,38,104,9,1,121,104,3,0,1,25,16,0,119,0,21,0,1,104,0,0,132,0,0,104,1,104,55,0,1,102,1,0,1,105,0,0,135,2,2,0,104,1,102,105,130,105,0,0,0,9,105,0,1,105,0,0,132,0,0,105,38,105,9,1,121,105,3,0,1,25,16,0,119,0,6,0,120,2,3,0,1,25,222,0,119,0,3,0,1,3,0,0,119,0,103,250,1,105,20,0,1,103,203,0,138,25,105,103,244,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,24,83,0,0,240,82,0,0,240,82,0,0,240,82,0,0],eb+10240),HEAPU8.set([76,83,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,128,83,0,0,148,83,0,0,240,82,0,0,168,83,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,188,83,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,36,84,0,0,56,84,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,108,84,0,0,128,84,0,0,240,82,0,0,148,84,0,0,168,84,0,0,192,84,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,212,84,0,0,232,84,0,0,252,84,0,0,24,85,0,0,44,85,0,0,64,85,0,0,88,85,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,120,85,0,0,140,85,0,0,160,85,0,0,180,85,0,0,208,85,0,0,228,85,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,4,86,0,0,24,86,0,0,44,86,0,0,64,86,0,0,88,86,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,120,86,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,172,86,0,0,240,82,0,0,240,82,0,0,224,86,0,0,240,82,0,0,240,82,0,0,240,82,0,0,12,87,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,64,87,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,84,87,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,136,87,0,0,240,82,0,0,240,82,0,0,240,82,0,0,240,82,0,0,188,87,0,0,119,0,89,4,1,105,0,0,132,0,0,105,1,102,171,1,135,105,1,0,102,89,0,0,1,105,0,0,132,0,0,105,1,25,44,0,119,0,80,4,135,3,4,0,128,105,0,0,0,2,105,0,78,105,61,0,34,105,105,0,121,105,6,0,82,102,87,0,135,105,9,0,102,0,0,0,1,25,47,0,119,0,69,4,1,25,47,0,119,0,67,4,135,3,4,0,128,105,0,0,0,2,105,0,102,105,4,11,34,105,105,0,121,105,6,0,82,102,4,0,135,105,9,0,102,0,0,0,1,25,49,0,119,0,56,4,1,25,49,0,119,0,54,4,135,3,4,0,128,105,0,0,0,2,105,0,1,25,52,0,119,0,49,4,135,3,4,0,128,105,0,0,0,2,105,0,1,25,47,0,119,0,44,4,135,3,4,0,128,105,0,0,0,2,105,0,1,25,49,0,119,0,39,4,135,3,4,0,128,105,0,0,0,6,105,0,25,5,8,68,82,2,7,0,121,2,18,0,82,4,5,0,46,105,4,2,16,84,0,0,26,89,4,8,85,5,89,0,82,102,89,0,82,102,102,0,1,104,255,1,19,102,102,104,135,105,14,0,102,89,0,0,82,4,5,0,53,105,4,2,224,83,0,0,82,2,7,0,135,105,9,0,2,0,0,0,0,2,6,0,1,25,93,0,119,0,13,4,135,3,4,0,128,105,0,0,0,2,105,0,1,25,75,0,119,0,8,4,135,3,4,0,128,105,0,0,0,2,105,0,102,105,5,71,34,105,105,0,121,105,6,0,82,102,4,0,135,105,9,0,102,0,0,0,1,25,75,0,119,0,253,3,1,25,75,0,119,0,251,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,205,0,119,0,246,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,93,0,119,0,241,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,204,0,119,0,236,3,135,3,4,0,1,4,1,0,128,105,0,0,0,2,105,0,1,25,98,0,119,0,230,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,97,0,119,0,225,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,203,0,119,0,220,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,114,0,119,0,215,3,135,3,4,0,128,105,0,0,0,2,105,0,135,105,5,0,57,0,0,0,1,25,114,0,119,0,208,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,113,0,119,0,203,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,112,0,119,0,198,3,135,3,4,0,0,4,2,0,128,105,0,0,0,2,105,0,1,25,109,0,119,0,192,3,135,3,4,0,128,105,0,0,0,2,105,0,135,105,5,0,58,0,0,0,1,4,0,0,1,25,109,0,119,0,184,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,177,0,119,0,179,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,176,0,119,0,174,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,135,0,119,0,169,3,135,3,4,0,128,105,0,0,0,2,105,0,135,105,5,0,71,0,0,0,1,25,135,0,119,0,162,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,132,0,119,0,157,3,135,3,4,0,128,105,0,0,0,2,105,0,135,105,5,0,59,0,0,0,1,4,0,0,1,25,132,0,119,0,149,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,168,0,119,0,144,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,167,0,119,0,139,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,166,0,119,0,134,3,135,3,4,0,0,4,2,0,128,105,0,0,0,2,105,0,1,25,163,0,119,0,128,3,135,3,4,0,128,105,0,0,0,2,105,0,135,105,5,0,60,0,0,0,1,4,0,0,1,25,163,0,119,0,120,3,135,3,4,0,128,105,0,0,0,2,105,0,78,105,44,0,34,105,105,0,121,105,6,0,82,102,64,0,135,105,9,0,102,0,0,0,1,25,176,0,119,0,109,3,1,25,176,0,119,0,107,3,135,3,4,0,128,105,0,0,0,2,105,0,78,105,45,0,34,105,105,0,121,105,6,0,82,102,65,0,135,105,9,0,102,0,0,0,1,25,203,0,119,0,96,3,1,25,203,0,119,0,94,3,135,3,4,0,128,105,0,0,0,2,105,0,78,105,63,0,34,105,105,0,121,105,4,0,82,102,87,0,135,105,9,0,102,0,0,0,1,25,202,0,119,0,83,3,135,3,4,0,128,105,0,0,0,2,105,0,102,105,4,11,34,105,105,0,121,105,6,0,82,102,4,0,135,105,9,0,102,0,0,0,1,25,200,0,119,0,72,3,1,25,200,0,119,0,70,3,135,3,4,0,128,105,0,0,0,2,105,0,1,25,200,0,119,0,65,3,135,3,4,0,128,105,0,0,0,2,105,0,78,105,42,0,34,105,105,0,121,105,6,0,82,102,66,0,135,105,9,0,102,0,0,0,0,6,2,0,119,0,54,3,0,6,2,0,119,0,52,3,135,3,4,0,128,105,0,0,0,2,105,0,78,105,43,0,34,105,105,0,121,105,6,0,82,102,67,0,135,105,9,0,102,0,0,0,0,6,2,0,119,0,41,3,0,6,2,0,119,0,39,3,0,6,83,0,0,7,78,0,25,9,6,40,116,6,7,0,25,6,6,4,25,7,7,4,54,105,6,9,200,87,0,0,116,38,89,0,106,102,89,4,109,38,4,102,106,105,89,8,109,38,8,105,85,41,3,0,116,40,82,0,106,102,82,4,109,40,4,102,106,105,82,8,109,40,8,105,116,39,88,0,106,102,88,4,109,39,4,102,106,105,88,8,109,39,8,105,1,105,0,0,132,0,0,105,1,105,85,1,135,2,8,0,105,3,0,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,16,0,119,0,2,3,32,102,2,0,121,102,4,0,1,102,1,0,0,105,102,0,119,0,4,0,82,102,62,0,16,102,102,2,0,105,102,0,121,105,2,0,82,2,41,0,1,105,0,0,132,0,0,105,1,105,86,1,135,3,8,0,105,2,0,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,16,0,119,0,235,2,125,2,3,3,2,0,0,0,78,105,2,0,1,102,59,0,1,104,67,0,138,105,102,104,4,90,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,208,89,0,0,8,90,0,0,1,102,0,0,132,0,0,102,1,102,87,1,135,2,8,0,102,2,0,0,130,102,0,0,0,82,102,0,1,102,0,0,132,0,0,102,38,102,82,1,121,102,6,0,1,25,16,0,119,0,149,2,119,0,1,0,25,2,2,1,119,0,1,0,32,102,2,0,121,102,4,0,1,102,1,0,0,105,102,0,119,0,4,0,82,102,62,0,16,102,102,2,0,105,102,0,121,105,97,0,1,105,0,0,132,0,0,105,1,102,101,2,135,105,3,0,102,87,1,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,5,0,135,3,4,0,128,105,0,0,0,2,105,0,119,0,80,0,106,2,0,4,1,105,0,0,132,0,0,105,106,102,87,4,135,105,3,0,92,80,102,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,5,0,135,3,4,0,128,105,0,0,0,2,105,0,119,0,62,0,1,105,104,33,85,80,105,0,25,3,2,88,25,2,2,92,82,105,2,0,120,105,3,0,1,25,233,0,119,0,13,0,1,105,0,0,132,0,0,105,1,102,172,1,135,105,1,0,102,3,0,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,120,105,2,0,1,25,233,0,1,105,233,0,45,105,25,105,144,91,0,0,25,105,80,4,116,2,105,0,1,105,0,0,132,0,0,105,1,102,173,1,135,105,1,0,102,3,0,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,120,105,21,0,1,105,0,0,132,0,0,105,82,102,2,0,135,105,3,0,92,79,102,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,120,105,10,0,1,105,104,33,85,79,105,0,135,105,5,0,79,0,0,0,135,105,5,0,80,0,0,0,135,105,5,0,87,0,0,0,119,0,10,0,135,3,4,0,128,105,0,0,0,2,105,0,135,105,5,0,80,0,0,0,135,105,5,0,87,0,0,0,0,6,2,0,119,0,41,2,82,2,91,0,82,15,90,0,46,105,2,15,236,99,0,0,25,16,89,12,25,17,89,16,25,18,1,40,25,9,1,12,25,10,0,4,25,22,88,11,25,19,87,11,25,20,85,11,25,11,87,8,25,12,87,4,25,21,87,4,25,23,89,12,25,24,89,11,25,13,84,4,25,14,87,4,1,105,0,0,132,0,0,105,1,102,197,1,135,105,3,0,102,89,2,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,8,1,119,0,12,1,1,105,0,0,132,0,0,105,106,102,2,16,135,105,3,0,92,16,102,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,254,0,119,0,255,0,1,105,220,68,85,16,105,0,82,3,17,0,120,3,167,0,82,3,18,0,1,105,0,0,132,0,0,105,1,102,5,0,1,104,0,0,1,103,0,0,1,106,1,0,135,105,10,0,102,88,89,104,103,106,0,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,43,1,119,0,233,0,82,4,9,0,82,5,10,0,1,105,0,0,132,0,0,105,1,106,28,2,1,103,108,1,3,103,3,103,135,105,3,0,106,87,103,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,44,1,119,0,216,0,1,105,0,0,132,0,0,105,1,105,87,0,1,103,1,0,135,3,16,0,105,3,88,4,83,5,87,103,130,103,0,0,0,82,103,0,1,103,0,0,132,0,0,103,38,103,82,1,121,103,3,0,1,25,23,1,119,0,201,0,82,4,87,0,121,4,13,0,82,5,21,0,46,103,5,4,112,93,0,0,26,103,5,4,4,103,103,4,43,103,103,2,11,103,103,0,41,103,103,2,3,103,5,103,85,21,103,0,135,103,9,0,4,0,0,0,78,103,22,0,34,103,103,0,121,103,4,0,82,105,88,0,135,103,9,0,105,0,0,0,120,3,166,0,82,6,18,0,82,7,10,0,1,103,0,0,132,0,0,103,1,105,197,1,135,103,3,0,105,85,89,0,130,103,0,0,0,82,103,0,1,103,0,0,132,0,0,103,38,103,82,1,121,103,3,0,1,25,10,1,119,0,165,0,82,5,9,0,1,103,0,0,85,87,103,0,1,105,0,0,109,87,4,105,1,103,0,0,109,87,8,103,135,8,17,0,5,0,0,0,1,103,239,255,48,103,103,8,8,94,0,0,1,25,32,1,119,0,151,0,35,103,8,11,121,103,8,0,83,19,8,0,120,8,3,0,0,3,87,0,119,0,26,0,0,3,87,0,1,25,37,1,119,0,23,0,25,103,8,16,38,103,103,240,0,4,103,0,1,103,0,0,132,0,0,103,135,3,8,0,93,4,0,0,130,103,0,0,0,82,103,0,1,103,0,0,132,0,0,103,38,103,82,1,121,103,3,0,1,25,48,1,119,0,127,0,85,87,3,0,2,103,0,0,0,0,0,128,20,103,4,103,85,11,103,0,85,12,8,0,1,25,37,1,45,103,25,101,152,94,0,0,1,25,0,0,135,103,18,0,3,5,8,0,1,105,0,0,95,3,8,105,1,105,0,0,132,0,0,105,1,103,20,0,135,105,11,0,103,6,7,85,87,0,0,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,49,1,119,0,99,0,78,105,19,0,34,105,105,0,121,105,4,0,82,103,87,0,135,105,9,0,103,0,0,0,1,105,0,0,78,103,20,0,56,105,105,103,40,96,0,0,82,103,85,0,135,105,9,0,103,0,0,0,119,0,71,0,82,5,10,0,25,6,5,64,1,105,0,0,132,0,0,105,135,105,3,0,92,84,3,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,11,1,119,0,71,0,1,105,220,68,85,84,105,0,1,105,0,0,132,0,0,105,82,103,13,0,135,105,3,0,92,87,103,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,12,1,119,0,56,0,85,87,95,0,25,3,5,68,82,4,3,0,106,105,5,72,48,105,4,105,228,95,0,0,1,105,0,0,132,0,0,105,82,103,14,0,135,105,3,0,92,4,103,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,13,1,119,0,37,0,85,4,95,0,82,105,3,0,25,105,105,8,85,3,105,0,119,0,14,0,1,105,0,0,132,0,0,105,1,103,33,2,135,105,3,0,103,6,87,0,130,105,0,0,0,82,105,0,1,105,0,0,132,0,0,105,38,105,82,1,121,105,3,0,1,25,13,1,119,0,19,0,135,105,5,0,87,0,0,0,135,105,5,0,84,0,0,0,135,105,5,0,23,0,0,0,78,105,24,0,34,105,105,0,121,105,4,0,82,103,89,0,135,105,9,0,103,0,0,0,25,2,2,20,45,105,2,15,92,96,0,0,1,25,243,0,119,0,2,0,119,0,233,254,1,105,243,0,1,103,63,0,138,25,105,103,108,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,116,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,168,97,0,0,104,97,0,0,188,97,0,0,208,97,0,0,228,97,0,0,248,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,20,98,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,98,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,140,98,0,0,160,98,0,0,104,97,0,0,104,97,0,0,104,97,0,0,104,97,0,0,180,98,0,0,119,0,96,0,82,2,91,0,119,0,159,0,135,3,4,0,128,105,0,0,0,2,105,0,78,105,24,0,34,105,105,0,121,105,6,0,82,103,89,0,135,105,9,0,103,0,0,0,1,25,9,1,119,0,83,0,1,25,9,1,119,0,81,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,9,1,119,0,76,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,56,1,119,0,71,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,15,1,119,0,66,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,14,1,119,0,61,0,135,3,4,0,128,105,0,0,0,2,105,0,135,105,5,0,87,0,0,0,1,25,14,1,119,0,54,0,135,3,4,0,128,105,0,0,0,2,105,0,82,4,87,0,120,4,3,0,1,25,45,1,119,0,47,0,82,5,21,0,46,105,5,4,88,98,0,0,26,105,5,4,4,105,105,4,43,105,105,2,11,105,105,0,41,105,105,2,3,105,5,105,85,21,105,0,135,105,9,0,4,0,0,0,1,25,45,1,119,0,33,0,1,105,0,0,132,0,0,105,1,103,171,1,135,105,1,0,103,87,0,0,1,105,0,0,132,0,0,105,1,25,48,1,119,0,24,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,47,1,119,0,19,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,45,1,119,0,14,0,135,3,4,0,128,105,0,0,0,2,105,0,78,105,19,0,34,105,105,0,121,105,6,0,82,103,87,0,135,105,9,0,103,0,0,0,1,25,51,1,119,0,3,0,1,25,51,1,119,0,1,0,1,105,9,1,46,105,25,105,96,99,0,0,1,105,14,1,45,105,25,105,16,99,0,0,135,105,5,0,84,0,0,0,1,25,15,1,119,0,21,0,1,105,45,1,45,105,25,105,68,99,0,0,78,105,22,0,34,105,105,0,121,105,6,0,82,103,88,0,135,105,9,0,103,0,0,0,1,25,47,1,119,0,10,0,1,25,47,1,119,0,8,0,1,105,48,1,45,105,25,105,96,99,0,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,51,1,1,105,15,1,45,105,25,105,116,99,0,0,1,25,56,1,119,0,18,0,1,105,47,1,45,105,25,105,136,99,0,0,1,25,56,1,119,0,13,0,1,105,51,1,45,105,25,105,184,99,0,0,78,105,20,0,34,105,105,0,121,105,6,0,82,103,85,0,135,105,9,0,103,0,0,0,1,25,56,1,119,0,2,0,1,25,56,1,1,105,56,1,45,105,25,105,228,99,0,0,135,105,5,0,23,0,0,0,78,105,24,0,34,105,105,0,121,105,4,0,82,103,89,0,135,105,9,0,103,0,0,0,0,6,2,0,119,0,27,0,120,2,3,0,137,86,0,0,139,0,0,0,82,3,90,0,46,105,3,2,64,100,0,0,26,4,3,20,85,90,4,0,26,103,3,8,135,105,5,0,103,0,0,0,102,105,4,11,34,105,105,0,121,105,4,0,82,103,4,0,135,105,9,0,103,0,0,0,82,3,90,0,53,105,3,2,4,100,0,0,82,2,91,0,135,105,9,0,2,0,0,0,137,86,0,0,139,0,0,0,119,0,1,0,1,105,16,0,1,103,185,0,138,25,105,103,72,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,88,103,0,0,68,103,0,0,68,103,0,0,108,103,0,0,68,103,0,0,116,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,164,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,176,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,192,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,16,104,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,76,104,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,68,103,0,0,156,104,0,0,119,0,98,0,135,3,4,0,128,105,0,0,0,6,105,0,119,0,94,0,135,3,4,0,128,105,0,0,0,2,105,0,1,25,54,0,119,0,89,0,1,25,51,0,119,0,87,0,135,105,5,0,46,0,0,0,78,105,61,0,34,105,105,0,121,105,6,0,82,103,87,0,135,105,9,0,103,0,0,0,1,25,51,0,119,0,77,0,1,25,51,0,119,0,75,0,1,4,1,0,1,25,97,0,119,0,72,0,135,105,9,0,8,0,0,0,1,25,205,0,119,0,68,0,78,105,56,0,34,105,105,0,121,105,11,0,82,103,69,0,135,105,9,0,103,0,0,0,135,105,5,0,68,0,0,0,121,4,3,0,1,25,112,0,119,0,57,0,1,25,113,0,119,0,55,0,135,105,5,0,68,0,0,0,121,4,3,0,1,25,112,0,119,0,50,0,1,25,113,0,119,0,48,0,78,105,53,0,34,105,105,0,121,105,4,0,82,103,72,0,135,105,9,0,103,0,0,0,135,105,5,0,70,0,0,0,135,105,5,0,71,0,0,0,121,4,3,0,1,25,135,0,119,0,35,0,1,25,176,0,119,0,33,0,78,105,52,0,34,105,105,0,121,105,11,0,82,103,74,0,135,105,9,0,103,0,0,0,135,105,5,0,73,0,0,0,121,4,3,0,1,25,166,0,119,0,22,0,1,25,167,0,119,0,20,0,135,105,5,0,73,0,0,0,121,4,3,0,1,25,166,0,119,0,15,0,1,25,167,0,119,0,13,0,135,105,5,0,55,0,0,0,78,105,63,0,34,105,105,0,121,105,6,0,82,103,87,0,135,105,9,0,103,0,0,0,1,25,202,0,119,0,3,0,1,25,202,0,119,0,1,0,32,105,25,51,121,105,5,0,135,105,5,0,88,0,0,0,1,25,52,0,119,0,31,0,32,105,25,97,121,105,5,0,135,105,5,0,77,0,0,0,1,25,98,0,119,0,25,0,32,105,25,112,121,105,5,0,135,105,9,0,5,0,0,0,1,25,113,0,119,0,19,0,1,105,135,0,45,105,25,105,48,105,0,0,135,105,9,0,5,0,0,0,1,25,176,0,119,0,12,0,1,105,166,0,45,105,25,105,76,105,0,0,135,105,9,0,5,0,0,0,1,25,167,0,119,0,5,0,1,105,202,0,45,105,25,105,92,105,0,0,1,25,203,0,32,105,25,52,121,105,11,0,78,105,76,0,34,105,105,0,121,105,6,0,82,103,89,0,135,105,9,0,103,0,0,0,1,25,54,0,119,0,33,0,1,25,54,0,119,0,31,0,32,105,25,98,121,105,17,0,78,105,75,0,34,105,105,0,121,105,7,0,82,103,81,0,135,105,9,0,103,0,0,0,120,4,6,0,1,25,204,0,119,0,20,0,120,4,3,0,1,25,204,0,119,0,17,0,135,105,9,0,5,0,0,0,1,25,204,0,119,0,13,0,32,105,25,113,121,105,5,0,135,105,5,0,82,0,0,0,1,25,114,0,119,0,7,0,1,105,167,0,45,105,25,105,4,106,0,0,135,105,5,0,78,0,0,0,1,25,168,0,32,105,25,54,121,105,3,0,0,6,2,0,119,0,9,0,32,105,25,114,121,105,3,0,1,25,203,0,119,0,5,0,1,105,168,0,45,105,25,105,52,106,0,0,1,25,176,0,1,105,176,0,45,105,25,105,76,106,0,0,135,105,5,0,82,0,0,0,1,25,177,0,1,105,177,0,45,105,25,105,92,106,0,0,1,25,203,0,1,105,203,0,45,105,25,105,116,106,0,0,135,105,5,0,88,0,0,0,1,25,204,0,1,105,204,0,45,105,25,105,140,106,0,0,135,105,5,0,89,0,0,0,1,25,205,0,1,105,205,0,45,105,25,105,156,106,0,0,0,6,2,0,82,2,91,0,121,2,21,0,82,4,90,0,46,105,4,2,236,106,0,0,26,5,4,20,85,90,5,0,26,103,4,8,135,105,5,0,103,0,0,0,102,105,5,11,34,105,105,0,121,105,4,0,82,103,5,0,135,105,9,0,103,0,0,0,82,4,90,0,53,105,4,2,176,106,0,0,82,2,91,0,135,105,9,0,2,0,0,0,135,105,5,0,0,0,0,0,0,91,3,0,135,105,6,0,91,0,0,0,135,105,9,0,8,0,0,0,0,91,2,0,135,105,6,0,91,0,0,0,139,0,0,0,140,4,54,0,0,0,0,0,2,43,0,0,137,0,0,0,2,44,0,0,216,33,0,0,2,45,0,0,200,1,0,0,2,46,0,0,33,2,0,0,2,47,0,0,104,40,0,0,1,38,0,0,136,48,0,0,0,36,48,0,136,48,0,0,1,49,240,1,3,48,48,49,137,48,0,0,25,33,36,88,25,34,36,48,0,37,36,0,1,48,192,1,3,30,36,48,1,48,140,1,3,41,36,48,1,48,76,1,3,42,36,48,1,48,232,1,3,13,36,48,1,48,152,1,3,14,36,48,1,48,128,1,3,22,36,48,1,48,88,1,3,18,36,48,1,48,64,1,3,20,36,48,1,48,24,1,3,23,36,48,1,48,16,1,3,24,36,48,1,48,4,1,3,25,36,48,1,48,248,0,3,35,36,48,1,48,240,0,3,28,36,48,1,48,200,0,3,29,36,48,1,48,184,0,3,32,36,48,1,48,176,0,3,31,36,48,1,48,164,0,3,21,36,48,1,48,152,0,3,19,36,48,1,48,128,0,3,26,36,48,1,48,140,0,3,27,36,48,25,15,1,12,0,4,30,0,0,9,15,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,48,4,11,40,108,0,0,1,49,0,0,1,50,0,0,1,51,1,0,135,48,19,0,41,2,49,50,51,0,0,0,1,48,0,0,85,42,48,0,1,51,0,0,109,42,4,51,1,48,0,0,109,42,8,48,25,39,42,11,1,48,4,0,83,39,48,0,2,48,0,0,102,105,108,101,85,42,48,0,25,9,42,4,1,48,0,0,83,9,48,0,25,40,41,11,1,48,0,0,132,0,0,48,1,48,67,1,78,50,40,0,34,50,50,0,121,50,4,0,82,50,41,0,0,51,50,0,119,0,2,0,0,51,41,0,135,7,8,0,48,51,0,0,130,51,0,0,0,11,51,0,1,51,0,0,132,0,0,51,38,51,11,1,121,51,3,0,135,4,4,0,119,0,215,5,121,7,113,0,78,51,7,0,32,51,51,58,121,51,110,0,102,51,7,1,32,51,51,47,121,51,107,0,102,51,7,2,32,51,51,47,121,51,104,0,78,48,40,0,34,48,48,0,121,48,4,0,82,48,41,0,0,51,48,0,119,0,2,0,0,51,41,0,0,5,51,0,1,51,0,0,85,33,51,0,1,48,0,0,109,33,4,48,1,51,0,0,109,33,8,51,4,8,7,5,1,51,239,255,48,51,51,8,116,109,0,0,1,51,0,0,132,0,0,51,1,48,171,1,135,51,1,0,48,33,0,0,1,51,0,0,132,0,0,51,119,0,76,0,35,51,8,11,121,51,4,0,107,33,11,8,0,4,33,0,119,0,21,0,25,51,8,16,38,51,51,240,0,6,51,0,1,51,0,0,132,0,0,51,1,51,58,1,135,4,8,0,51,6,0,0,130,51,0,0,0,11,51,0,1,51,0,0,132,0,0,51,38,51,11,1,120,51,57,0,85,33,4,0,2,48,0,0,0,0,0,128,20,48,6,48,109,33,8,48,109,33,4,8,46,48,5,7,4,110,0,0,0,6,4,0,78,48,5,0,83,6,48,0,25,5,5,1,52,48,5,7,0,110,0,0,25,6,6,1,119,0,250,255,3,4,4,8,1,48,0,0,83,4,48,0,78,48,39,0,34,48,48,0,121,48,7,0,82,48,42,0,1,51,0,0,83,48,51,0,1,51,0,0,85,9,51,0,119,0,5,0,1,51,0,0,83,42,51,0,1,51,0,0,83,39,51,0,1,51,0,0,132,0,0,51,1,48,239,1,1,50,0,0,135,51,3,0,48,42,50,0,130,51,0,0,0,11,51,0,1,51,0,0,132,0,0,51,38,51,11,1,121,51,7,0,1,51,0,0,135,38,20,0,51,0,0,0,135,51,21,0,38,0,0,0,119,0,7,0,116,42,33,0,106,50,33,4,109,42,4,50,106,51,33,8,109,42,8,51,119,0,3,0,135,4,4,0,119,0,102,5,1,51,0,0,132,0,0,51,106,50,1,92,135,51,3,0,45,13,50,0,130,51,0,0,0,11,51,0,1,51,0,0,132,0,0,51,38,51,11,1,121,51,3,0,135,4,4,0,119,0,89,5,1,51,104,33,85,13,51,0,106,51,13,4,120,51,173,4,78,11,39,0,41,50,11,24,42,50,50,24,34,50,50,0,121,50,4,0,82,50,9,0,0,51,50,0,119,0,4,0,1,50,255,0,19,50,11,50,0,51,50,0,32,51,51,4,121,51,158,4,1,51,0,0,132,0,0,51,1,51,21,0,1,50,0,0,1,48,255,255,2,49,0,0,70,205,0,0,1,52,4,0,135,4,22,0,51,42,50,48,49,52,0,0,130,52,0,0,0,11,52,0,1,52,0,0,132,0,0,52,38,52,11,1,121,52,6,0,1,52,0,0,135,11,20,0,52,0,0,0,135,52,21,0,11,0,0,0,120,4,133,4,1,52,0,0,132,0,0,52,1,49,4,0,1,48,0,0,1,50,2,0,135,52,10,0,49,33,41,48,50,41,0,0,130,52,0,0,0,11,52,0,1,52,0,0,132,0,0,52,38,52,11,1,121,52,5,0,135,4,4,0,135,52,5,0,13,0,0,0,119,0,31,5,25,5,33,11,78,4,5,0,41,50,4,24,42,50,50,24,34,50,50,0,121,50,4,0,106,50,33,4,0,52,50,0,119,0,4,0,1,50,255,0,19,50,4,50,0,52,50,0,32,52,52,2,121,52,27,0,1,52,0,0,132,0,0,52,1,52,21,0,1,50,0,0,1,48,255,255,2,49,0,0,51,201,0,0,1,51,2,0,135,4,22,0,52,33,50,48,49,51,0,0,130,51,0,0,0,11,51,0,1,51,0,0,132,0,0,51,38,51,11,1,121,51,7,0,1,51,0,0,135,11,20,0,51,0,0,0,135,51,21,0,11,0,0,0,119,0,6,0,78,10,5,0,32,12,4,0,119,0,3,0,0,10,4,0,1,12,0,0,41,51,10,24,42,51,51,24,34,51,51,0,121,51,4,0,82,49,33,0,135,51,9,0,49,0,0,0,135,51,5,0,13,0,0,0,121,12,3,0,1,38,38,0,119,0,66,4,78,4,40,0,41,49,4,24,42,49,49,24,34,49,49,0,121,49,4,0,106,49,41,4,0,51,49,0,119,0,4,0,1,49,255,0,19,49,4,49,0,51,49,0,0,4,51,0,1,51,4,0,48,51,51,4,136,123,0,0,1,51,0,0,132,0,0,51,1,49,4,0,26,48,4,4,1,50,4,0,135,51,10,0,49,33,41,48,50,41,0,0,130,51,0,0,0,22,51,0,1,51,0,0,132,0,0,51,38,51,22,1,121,51,3,0,135,4,4,0,119,0,202,4,25,5,33,11,78,4,5,0,41,50,4,24,42,50,50,24,34,50,50,0,121,50,4,0,106,50,33,4,0,51,50,0,119,0,4,0,1,50,255,0,19,50,4,50,0,51,50,0,32,51,51,4,121,51,27,0,1,51,0,0,132,0,0,51,1,51,21,0,1,50,0,0,1,48,255,255,2,49,0,0,125,142,0,0,1,52,4,0,135,4,22,0,51,33,50,48,49,52,0,0,130,52,0,0,0,22,52,0,1,52,0,0,132,0,0,52,38,52,22,1,121,52,7,0,1,52,0,0,135,22,20,0,52,0,0,0,135,52,21,0,22,0,0,0,119,0,6,0,32,16,4,0,78,17,5,0,119,0,3,0,1,16,0,0,0,17,4,0,41,52,17,24,42,52,52,24,34,52,52,0,121,52,4,0,82,49,33,0,135,52,9,0,49,0,0,0,121,16,107,2,1,52,0,0,132,0,0,52,1,52,58,1,1,49,80,0,135,5,8,0,52,49,0,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,135,4,4,0,119,0,138,4,0,4,18,0,0,9,30,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,36,114,0,0,1,49,0,0,132,0,0,49,1,52,5,0,1,48,0,0,1,50,0,0,1,51,1,0,135,49,10,0,52,20,2,48,50,51,0,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,135,4,4,0,119,0,65,2,0,4,37,0,0,9,18,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,136,114,0,0,1,49,0,0,132,0,0,49,1,51,170,1,135,49,1,0,51,5,0,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,135,4,4,0,119,0,37,2,25,4,5,12,0,9,37,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,220,114,0,0,1,51,0,0,107,5,52,51,1,49,0,0,107,5,53,49,1,51,0,0,107,5,54,51,1,49,4,0,109,5,56,49,1,49,192,48,85,5,49,0,1,51,0,0,107,5,60,51,1,49,0,0,107,5,61,49,1,49,0,0,132,0,0,49,1,51,34,2,25,50,5,64,135,49,3,0,51,50,20,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,135,4,4,0,119,0,1,2,1,50,0,0,109,5,76,50,102,50,20,11,34,50,50,0,121,50,4,0,82,49,20,0,135,50,9,0,49,0,0,0,1,50,0,0,132,0,0,50,1,50,58,1,1,49,88,0,135,7,8,0,50,49,0,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,135,4,4,0,119,0,34,4,0,4,23,0,0,9,30,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,196,115,0,0,1,49,0,0,132,0,0,49,135,49,3,0,45,24,5,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,135,4,4,0,119,0,212,1,85,24,44,0,25,6,25,11,1,49,0,0,85,25,49,0,1,50,0,0,109,25,4,50,1,49,0,0,109,25,8,49,1,49,0,0,132,0,0,49,0,4,33,0,0,9,23,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,60,116,0,0,1,50,12,0,1,51,0,0,1,48,0,0,135,49,15,0,50,7,33,24,25,51,48,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,1,5,1,0,119,0,165,1,1,49,0,0,132,0,0,49,135,49,3,0,45,37,7,0,130,49,0,0,0,27,49,0,1,49,0,0,132,0,0,49,38,49,27,1,121,49,3,0,1,5,0,0,119,0,153,1,1,49,112,44,85,37,49,0,78,49,6,0,34,49,49,0,121,49,4,0,82,48,25,0,135,49,9,0,48,0,0,0,135,49,5,0,24,0,0,0,1,49,0,0,132,0,0,49,1,49,58,1,1,48,84,0,135,10,8,0,49,48,0,0,130,48,0,0,0,27,48,0,1,48,0,0,132,0,0,48,38,48,27,1,121,48,3,0,1,38,124,0,119,0,123,1,0,4,34,0,0,9,30,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,48,4,11,36,117,0,0,1,48,0,0,132,0,0,48,1,49,170,1,135,48,1,0,49,10,0,0,130,48,0,0,0,27,48,0,1,48,0,0,132,0,0,48,38,48,27,1,121,48,3,0,135,4,4,0,119,0,100,1,25,4,10,12,0,9,34,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,48,4,11,120,117,0,0,1,48,168,44,85,10,48,0,1,49,0,0,107,10,52,49,1,48,0,0,107,10,53,48,1,49,0,0,107,10,54,49,1,48,0,0,109,10,56,48,25,4,10,60,1,48,128,44,85,4,48,0,25,8,10,64,25,9,10,68,1,48,0,0,85,8,48,0,1,49,0,0,109,8,4,49,1,48,0,0,109,8,8,48,1,49,0,0,109,8,12,49,1,49,0,0,132,0,0,49,1,48,35,2,1,51,0,0,135,49,3,0,48,8,51,0,130,49,0,0,0,34,49,0,1,49,0,0,132,0,0,49,38,49,34,1,121,49,24,0,135,4,4,0,128,49,0,0,0,7,49,0,82,5,8,0,121,5,52,1,82,6,9,0,46,49,6,5,104,118,0,0,26,36,6,8,85,9,36,0,82,51,36,0,82,51,51,0,1,48,255,1,19,51,51,48,135,49,14,0,51,36,0,0,82,6,9,0,53,49,6,5,56,118,0,0,82,5,8,0,135,49,9,0,5,0,0,0,119,0,34,1,1,49,200,43,85,10,49,0,1,49,72,44,85,4,49,0,1,51,0,0,107,10,80,51,1,49,0,0,107,10,81,49,1,51,0,0,107,10,82,51,1,51,0,0,132,0,0,51,135,51,3,0,45,35,10,0,130,51,0,0,0,34,51,0,1,51,0,0,132,0,0,51,38,51,34,1,121,51,3,0,1,38,124,0,119,0,14,1,85,35,47,0,25,6,35,4,82,51,6,0,25,4,51,60,82,51,4,0,106,5,51,20,1,51,0,0,132,0,0,51,106,49,37,4,135,51,3,0,45,28,49,0,130,51,0,0,0,34,51,0,1,51,0,0,132,0,0,51,38,51,34,1,121,51,3,0,135,4,4,0,119,0,246,0,1,51,112,44,85,28,51,0,1,51,0,0,132,0,0,51,135,51,3,0,5,4,28,0,130,51,0,0,0,34,51,0,1,51,0,0,132,0,0,51,38,51,34,1,121,51,5,0,135,4,4,0,135,51,5,0,28,0,0,0,119,0,230,0,135,51,5,0,28,0,0,0,1,51,0,0,132,0,0,51,1,51,58,1,1,49,92,0,135,8,8,0,51,49,0,0,130,49,0,0,0,34,49,0,1,49,0,0,132,0,0,49,38,49,34,1,121,49,3,0,135,4,4,0,119,0,214,0,0,4,29,0,0,9,30,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,164,119,0,0,25,7,32,4,1,49,0,0,85,7,49,0,1,51,0,0,109,7,4,51,25,7,32,11,1,51,3,0,83,7,51,0,2,51,0,0,244,189,0,0,78,51,51,0,83,32,51,0,2,49,0,0,245,189,0,0,78,49,49,0,107,32,1,49,2,51,0,0,246,189,0,0],eb+20480),HEAPU8.set([78,51,51,0,107,32,2,51,1,49,0,0,107,32,3,49,1,49,0,0,132,0,0,49,82,51,6,0,135,49,3,0,45,31,51,0,130,49,0,0,0,34,49,0,1,49,0,0,132,0,0,49,38,49,34,1,121,49,3,0,135,4,4,0,119,0,163,0,85,31,47,0,0,4,33,0,0,9,29,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,84,120,0,0,1,49,0,0,132,0,0,49,1,51,170,1,135,49,1,0,51,8,0,0,130,49,0,0,0,34,49,0,1,49,0,0,132,0,0,49,38,49,34,1,121,49,3,0,135,4,4,0,119,0,139,0,25,4,8,12,0,9,33,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,168,120,0,0,1,51,0,0,107,8,52,51,1,49,0,0,107,8,53,49,1,51,0,0,107,8,54,51,25,4,8,56,1,51,0,0,85,4,51,0,1,51,36,45,85,8,51,0,25,6,8,60,1,51,0,0,132,0,0,51,1,49,197,1,135,51,3,0,49,6,32,0,130,51,0,0,0,34,51,0,1,51,0,0,132,0,0,51,38,51,34,1,121,51,3,0,135,4,4,0,119,0,106,0,25,5,8,72,1,51,0,0,132,0,0,51,106,49,31,4,135,51,3,0,45,5,49,0,130,51,0,0,0,34,51,0,1,51,0,0,132,0,0,51,38,51,34,1,121,51,10,0,135,4,4,0,1,51,0,0,102,49,8,71,56,51,51,49,196,122,0,0,82,49,6,0,135,51,9,0,49,0,0,0,119,0,85,0,85,5,47,0,1,49,0,0,107,8,80,49,1,51,0,0,109,8,84,51,1,49,0,0,109,8,88,49,1,49,11,0,85,4,49,0,135,49,5,0,31,0,0,0,78,49,7,0,34,49,49,0,121,49,4,0,82,51,32,0,135,49,9,0,51,0,0,0,25,6,1,64,1,49,0,0,132,0,0,49,135,49,3,0,45,33,8,0,130,49,0,0,0,34,49,0,1,49,0,0,132,0,0,49,38,49,34,1,121,49,3,0,135,4,4,0,119,0,65,0,85,33,44,0,25,4,1,68,82,5,4,0,106,49,1,72,48,49,5,49,80,122,0,0,1,49,0,0,132,0,0,49,106,51,33,4,135,49,3,0,45,5,51,0,130,49,0,0,0,38,49,0,1,49,0,0,132,0,0,49,38,49,38,1,121,49,3,0,1,38,137,0,119,0,20,0,85,5,44,0,82,49,4,0,25,49,49,8,85,4,49,0,1,38,110,0,119,0,14,0,1,49,0,0,132,0,0,49,135,49,3,0,46,6,33,0,130,49,0,0,0,38,49,0,1,49,0,0,132,0,0,49,38,49,38,1,121,49,3,0,1,38,137,0,119,0,2,0,1,38,110,0,32,49,38,110,121,49,8,0,135,49,5,0,33,0,0,0,135,49,5,0,35,0,0,0,135,49,5,0,37,0,0,0,119,0,191,1,45,49,38,43,192,122,0,0,135,4,4,0,135,49,5,0,33,0,0,0,119,0,12,0,119,0,11,0,135,49,5,0,31,0,0,0,78,49,7,0,34,49,49,0,121,49,4,0,82,51,32,0,135,49,9,0,51,0,0,0,135,49,9,0,8,0,0,0,135,49,5,0,35,0,0,0,119,0,3,0,135,49,9,0,10,0,0,0,32,49,38,124,121,49,2,0,135,4,4,0,135,49,5,0,37,0,0,0,119,0,74,2,135,4,4,0,78,49,6,0,34,49,49,0,121,49,8,0,82,51,25,0,135,49,9,0,51,0,0,0,135,49,5,0,24,0,0,0,121,5,64,2,119,0,5,0,135,49,5,0,24,0,0,0,121,5,60,2,119,0,1,0,135,49,9,0,7,0,0,0,119,0,56,2,1,49,0,0,102,51,20,11,56,49,49,51,124,123,0,0,82,51,20,0,135,49,9,0,51,0,0,0,135,49,9,0,5,0,0,0,119,0,46,2,1,49,0,0,132,0,0,49,1,51,197,1,135,49,3,0,51,21,41,0,130,49,0,0,0,32,49,0,1,49,0,0,132,0,0,49,38,49,32,1,121,49,3,0,135,4,4,0,119,0,33,2,1,49,0,0,132,0,0,49,1,51,197,1,135,49,3,0,51,19,3,0,130,49,0,0,0,32,49,0,1,49,0,0,132,0,0,49,38,49,32,1,121,49,3,0,135,4,4,0,119,0,97,1,1,49,0,0,132,0,0,49,1,51,93,0,135,49,7,0,51,34,21,19,130,49,0,0,0,32,49,0,1,49,0,0,132,0,0,49,38,49,32,1,121,49,10,0,135,4,4,0,1,49,0,0,102,51,19,11,56,49,49,51,112,129,0,0,82,51,19,0,135,49,9,0,51,0,0,0,119,0,77,1,102,49,19,11,34,49,49,0,121,49,4,0,82,51,19,0,135,49,9,0,51,0,0,0,102,49,21,11,34,49,49,0,121,49,4,0,82,51,21,0,135,49,9,0,51,0,0,0,1,49,0,0,132,0,0,49,0,4,33,0,0,9,30,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,49,4,11,132,124,0,0,1,51,19,0,135,49,11,0,51,37,0,34,33,0,0,0,130,49,0,0,0,32,49,0,1,49,0,0,132,0,0,49,38,49,32,1,121,49,3,0,135,4,4,0,119,0,21,1,25,6,37,36,25,7,6,11,78,32,7,0,41,51,32,24,42,51,51,24,34,51,51,0,121,51,4,0,106,51,37,40,0,49,51,0,119,0,4,0,1,51,255,0,19,51,32,51,0,49,51,0,120,49,145,0,1,49,0,0,132,0,0,49,1,51,90,0,2,48,0,0,1,143,0,0,135,49,7,0,51,27,48,41,130,49,0,0,0,32,49,0,1,49,0,0,132,0,0,49,38,49,32,1,121,49,3,0,135,4,4,0,119,0,131,0,1,49,0,0,132,0,0,49,1,49,209,3,2,48,0,0,42,143,0,0,135,4,23,0,49,27,48,0,130,48,0,0,0,32,48,0,1,48,0,0,132,0,0,48,38,48,32,1,121,48,3,0,135,4,4,0,119,0,107,0,116,35,4,0,106,49,4,4,109,35,4,49,106,48,4,8,109,35,8,48,1,48,0,0,85,4,48,0,1,49,0,0,109,4,4,49,1,48,0,0,109,4,8,48,102,4,3,11,41,48,4,24,42,48,48,24,34,32,48,0,1,48,0,0,132,0,0,48,1,48,41,0,121,32,4,0,82,51,3,0,0,49,51,0,119,0,2,0,0,49,3,0,121,32,4,0,106,50,3,4,0,51,50,0,119,0,4,0,1,50,255,0,19,50,4,50,0,51,50,0,135,4,2,0,48,35,49,51,130,51,0,0,0,32,51,0,1,51,0,0,132,0,0,51,38,51,32,1,121,51,3,0,135,4,4,0,119,0,60,0,116,26,4,0,106,49,4,4,109,26,4,49,106,51,4,8,109,26,8,51,1,51,0,0,85,4,51,0,1,49,0,0,109,4,4,49,1,51,0,0,109,4,8,51,1,51,0,0,132,0,0,51,0,4,33,0,0,9,30,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,51,4,11,88,126,0,0,1,49,221,1,135,51,3,0,49,26,33,0,130,51,0,0,0,33,51,0,1,51,0,0,132,0,0,51,38,51,33,1,121,51,10,0,135,4,4,0,1,51,0,0,102,49,26,11,56,51,51,49,4,127,0,0,82,49,26,0,135,51,9,0,49,0,0,0,119,0,21,0,102,51,26,11,34,51,51,0,121,51,4,0,82,49,26,0,135,51,9,0,49,0,0,0,102,51,35,11,34,51,51,0,121,51,4,0,82,49,35,0,135,51,9,0,49,0,0,0,102,51,27,11,34,51,51,0,121,51,4,0,82,49,27,0,135,51,9,0,49,0,0,0,1,38,179,0,119,0,17,0,1,51,0,0,102,49,35,11,56,51,51,49,32,127,0,0,82,49,35,0,135,51,9,0,49,0,0,0,1,51,0,0,102,49,27,11,56,51,51,49,68,127,0,0,82,49,27,0,135,51,9,0,49,0,0,0,119,0,2,0,1,38,179,0,1,51,179,0,45,51,38,51,172,128,0,0,25,4,1,80,82,5,4,0,106,51,1,84,45,51,5,51,156,127,0,0,1,51,0,0,132,0,0,51,1,49,36,2,25,48,1,76,135,51,3,0,49,48,37,0,130,51,0,0,0,35,51,0,1,51,0,0,132,0,0,51,38,51,35,1,121,51,19,0,1,38,198,0,119,0,17,0,1,51,0,0,132,0,0,51,1,48,210,1,135,51,3,0,48,5,37,0,130,51,0,0,0,35,51,0,1,51,0,0,132,0,0,51,38,51,35,1,121,51,3,0,1,38,198,0,119,0,4,0,82,51,4,0,25,51,51,48,85,4,51,0,1,51,198,0,45,51,38,51,240,127,0,0,135,4,4,0,119,0,48,0,78,51,7,0,34,51,51,0,121,51,4,0,82,48,6,0,135,51,9,0,48,0,0,0,25,4,37,24,102,51,4,11,34,51,51,0,121,51,4,0,82,48,4,0,135,51,9,0,48,0,0,0,25,4,37,12,102,51,4,11,34,51,51,0,121,51,4,0,82,48,4,0,135,51,9,0,48,0,0,0,102,51,37,11,34,51,51,0,121,51,4,0,82,48,37,0,135,51,9,0,48,0,0,0,25,4,34,24,102,51,4,11,34,51,51,0,121,51,4,0,82,48,4,0,135,51,9,0,48,0,0,0,25,4,34,12,102,51,4,11,34,51,51,0,121,51,4,0,82,48,4,0,135,51,9,0,48,0,0,0,102,51,34,11,34,51,51,0,121,51,66,0,82,48,34,0,135,51,9,0,48,0,0,0,119,0,62,0,78,51,7,0,34,51,51,0,121,51,4,0,82,48,6,0,135,51,9,0,48,0,0,0,25,5,37,24,102,51,5,11,34,51,51,0,121,51,4,0,82,48,5,0,135,51,9,0,48,0,0,0,25,5,37,12,102,51,5,11,34,51,51,0,121,51,4,0,82,48,5,0,135,51,9,0,48,0,0,0,1,51,0,0,102,48,37,11,56,51,51,48,24,129,0,0,82,48,37,0,135,51,9,0,48,0,0,0,25,5,34,24,102,51,5,11,34,51,51,0,121,51,4,0,82,48,5,0,135,51,9,0,48,0,0,0,25,5,34,12,102,51,5,11,34,51,51,0,121,51,4,0,82,48,5,0,135,51,9,0,48,0,0,0,1,51,0,0,102,48,34,11,56,51,51,48,60,132,0,0,82,48,34,0,135,51,9,0,48,0,0,0,119,0,180,0,102,51,21,11,34,51,51,0,121,51,177,0,82,48,21,0,135,51,9,0,48,0,0,0,119,0,173,0,1,38,34,0,119,0,4,0,1,38,34,0,119,0,2,0,1,38,34,0,32,51,38,34,121,51,4,0,135,51,5,0,13,0,0,0,1,38,38,0,32,51,38,38,121,51,144,0,25,6,1,64,1,51,0,0,132,0,0,51,1,51,58,1,1,48,80,0,135,7,8,0,51,48,0,0,130,48,0,0,0,37,48,0,1,48,0,0,132,0,0,48,38,48,37,1,121,48,3,0,135,4,4,0,119,0,146,0,0,4,14,0,0,9,15,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,48,4,11,4,130,0,0,1,48,0,0,132,0,0,48,1,51,197,1,135,48,3,0,51,22,2,0,130,48,0,0,0,37,48,0,1,48,0,0,132,0,0,48,38,48,37,1,121,48,3,0,135,4,4,0,119,0,105,0,1,48,0,0,132,0,0,48,0,4,33,0,0,9,14,0,25,11,4,40,116,4,9,0,25,4,4,4,25,9,9,4,54,48,4,11,96,130,0,0,1,51,2,0,1,49,0,0,1,50,0,0,1,52,0,0,1,53,1,0,135,48,24,0,51,7,33,22,49,50,52,53,130,48,0,0,0,37,48,0,1,48,0,0,132,0,0,48,38,48,37,1,121,48,4,0,1,5,1,0,1,38,53,0,119,0,65,0,1,48,0,0,132,0,0,48,135,48,3,0,45,34,7,0,130,48,0,0,0,37,48,0,1,48,0,0,132,0,0,48,38,48,37,1,121,48,4,0,1,5,0,0,1,38,53,0,119,0,52,0,85,34,44,0,25,4,1,68,82,5,4,0,106,48,1,72,48,48,5,48,76,131,0,0,1,48,0,0,132,0,0,48,106,53,34,4,135,48,3,0,45,5,53,0,130,48,0,0,0,37,48,0,1,48,0,0,132,0,0,48,38,48,37,1,121,48,3,0,1,38,54,0,119,0,17,0,85,5,44,0,82,48,4,0,25,48,48,8,85,4,48,0,119,0,12,0,1,48,0,0,132,0,0,48,135,48,3,0,46,6,34,0,130,48,0,0,0,37,48,0,1,48,0,0,132,0,0,48,38,48,37,1,121,48,2,0,1,38,54,0,32,48,38,54,121,48,6,0,135,4,4,0,135,48,5,0,34,0,0,0,1,5,0,0,119,0,10,0,135,48,5,0,34,0,0,0,102,48,22,11,34,48,48,0,121,48,21,0,82,53,22,0,135,48,9,0,53,0,0,0,119,0,17,0,32,48,38,53,121,48,2,0,135,4,4,0,102,48,22,11,34,48,48,0,121,48,6,0,82,53,22,0,135,48,9,0,53,0,0,0,121,5,24,0,119,0,3,0,121,5,22,0,119,0,1,0,135,48,9,0,7,0,0,0,119,0,18,0,78,48,39,0,34,48,48,0,121,48,4,0,82,53,42,0,135,48,9,0,53,0,0,0,1,48,0,0,78,53,40,0,49,48,48,53,40,132,0,0,137,36,0,0,139,0,0,0,82,53,41,0,135,48,9,0,53,0,0,0,137,36,0,0,139,0,0,0,78,48,39,0,34,48,48,0,121,48,4,0,82,53,42,0,135,48,9,0,53,0,0,0,1,48,0,0,78,53,40,0,49,48,48,53,108,132,0,0,135,48,6,0,4,0,0,0,82,53,41,0,135,48,9,0,53,0,0,0,135,48,6,0,4,0,0,0,139,0,0,0,140,7,113,0,0,0,0,0,2,99,0,0,239,255,255,255,2,100,0,0,58,1,0,0,2,101,0,0,0,0,0,128,2,102,0,0,197,1,0,0,2,103,0,0,188,0,0,0,2,104,0,0,134,0,0,0,2,105,0,0,181,0,0,0,2,106,0,0,157,0,0,0,2,107,0,0,161,0,0,0,2,108,0,0,221,1,0,0,1,88,0,0,136,109,0,0,0,83,109,0,136,109,0,0,1,110,144,1,3,109,109,110,137,109,0,0,1,109,96,1,3,90,83,109,1,109,68,1,3,98,83,109,1,109,168,0,3,96,83,109,1,109,80,1,3,87,83,109,1,109,56,1,3,72,83,109,1,109,152,0,3,84,83,109,25,73,83,80,1,109,140,0,3,74,83,109,1,109,128,0,3,75,83,109,25,48,83,40,25,49,83,32,25,76,83,20,0,50,83,0,25,85,83,8,82,8,5,0,106,20,5,4,45,109,8,20,108,133,0,0,1,98,0,0,137,83,0,0,139,98,0,0,25,21,1,11,1,109,44,1,3,22,0,109,40,109,6,1,0,19,109,0,25,89,96,64,25,23,96,8,25,77,96,12,25,24,96,4,25,25,96,64,1,109,136,0,3,26,96,109,1,109,140,0,3,27,96,109,25,78,96,44,25,28,96,60,25,51,90,11,25,52,96,8,25,97,98,11,25,29,98,4,25,79,78,11,25,53,72,11,25,80,87,11,25,54,76,11,25,30,4,80,25,31,4,84,25,32,4,76,25,33,50,4,25,55,73,36,25,56,55,11,25,57,73,24,25,58,57,11,25,59,73,12,25,60,59,11,25,61,73,11,25,86,90,11,25,34,90,8,25,35,90,4,25,81,85,11,25,62,90,11,25,36,90,8,25,37,90,4,25,38,85,8,25,39,85,4,25,91,96,24,25,92,91,11,25,93,96,12,25,94,93,11,25,95,96,11,25,40,73,4,25,63,90,36,25,64,63,11,25,65,90,24,25,66,65,11,25,67,90,12,25,68,67,11,25,69,90,11,25,82,84,11,25,70,74,11,25,41,74,8,25,42,74,4,25,71,75,11,25,43,75,8,25,44,75,4,25,45,72,8,25,46,72,4,1,5,0,0,1,7,0,0,82,109,8,0,135,18,25,0,109,0,0,0,1,109,255,0,19,109,18,109,78,111,21,0,34,111,111,0,121,111,4,0,82,111,1,0,0,110,111,0,119,0,2,0,0,110,1,0,82,111,8,0,82,112,22,0,135,18,26,0,109,110,111,112,121,18,222,3,82,109,18,0,121,109,213,3,0,17,18,0,25,7,7,1,135,109,27,0,98,1,0,0,33,109,7,0,19,109,109,19,121,109,208,0,1,109,156,67,85,23,109,0,1,109,156,12,85,96,109,0,1,109,176,12,85,89,109,0,1,109,0,0,85,24,109,0,1,109,0,0,132,0,0,109,1,112,11,2,135,109,3,0,112,25,77,0,130,109,0,0,0,16,109,0,1,109,0,0,132,0,0,109,38,109,16,1,121,109,3,0,1,88,16,0,119,0,198,3,1,109,0,0,85,26,109,0,1,109,255,255,85,27,109,0,1,109,136,67,85,96,109,0,1,109,176,67,85,89,109,0,1,109,156,67,85,23,109,0,1,109,0,0,132,0,0,109,1,112,180,1,135,109,1,0,112,77,0,0,130,109,0,0,0,16,109,0,1,109,0,0,132,0,0,109,38,109,16,1,121,109,3,0,1,88,17,0,119,0,175,3,1,109,252,66,85,77,109,0,1,109,0,0,85,78,109,0,1,112,0,0,109,78,4,112,1,109,0,0,109,78,8,109,1,112,0,0,109,78,12,112,1,112,24,0,85,28,112,0,1,112,0,0,85,90,112,0,1,109,0,0,109,90,4,109,1,112,0,0,109,90,8,112,1,112,0,0,132,0,0,112,1,109,12,2,135,112,3,0,109,77,90,0,130,112,0,0,0,16,112,0,1,112,0,0,132,0,0,112,38,112,16,1,121,112,3,0,1,88,11,0,119,0,144,3,78,112,51,0,34,112,112,0,121,112,4,0,82,109,90,0,135,112,9,0,109,0,0,0,78,5,97,0,41,112,5,24,42,112,112,24,34,16,112,0,1,112,0,0,132,0,0,112,1,112,46,0,121,16,4,0,82,111,98,0,0,109,111,0,119,0,2,0,0,109,98,0,121,16,4,0,82,110,29,0,0,111,110,0,119,0,4,0,1,110,255,0,19,110,5,110,0,111,110,0,135,5,2,0,112,52,109,111,130,111,0,0,0,16,111,0,1,111,0,0,132,0,0,111,38,111,16,1,121,111,3,0,1,88,32,0,119,0,109,3,1,111,0,0,132,0,0,111,1,111,46,0,2,109,0,0,7,208,0,0,1,112,1,0,135,5,2,0,111,5,109,112,130,112,0,0,0,16,112,0,1,112,0,0,132,0,0,112,38,112,16,1,121,112,3,0,1,88,32,0,119,0,93,3,1,112,0,0,132,0,0,112,1,109,211,3,135,112,23,0,109,5,7,0,130,112,0,0,0,16,112,0,1,112,0,0,132,0,0,112,38,112,16,1,121,112,3,0,1,88,32,0,119,0,80,3,1,112,0,0,132,0,0,112,1,109,13,2,135,112,3,0,109,90,77,0,130,112,0,0,0,16,112,0,1,112,0,0,132,0,0,112,38,112,16,1,121,112,3,0,1,88,33,0,119,0,67,3,78,112,97,0,34,112,112,0,121,112,7,0,82,112,98,0,1,109,0,0,83,112,109,0,1,109,0,0,85,29,109,0,119,0,5,0,1,109,0,0,83,98,109,0,1,109,0,0,83,97,109,0,1,109,0,0,132,0,0,109,1,112,239,1,1,111,0,0,135,109,3,0,112,98,111,0,130,109,0,0,0,16,109,0,1,109,0,0,132,0,0,109,38,109,16,1,121,109,3,0,1,88,27,0,119,0,40,3,116,98,90,0,106,111,90,4,109,98,4,111,106,109,90,8,109,98,8,109,78,16,79,0,1,109,136,67,85,96,109,0,1,109,176,67,85,89,109,0,1,109,156,67,85,52,109,0,1,109,252,66,85,77,109,0,41,109,16,24,42,109,109,24,34,109,109,0,121,109,4,0,82,111,78,0,135,109,9,0,111,0,0,0,135,109,28,0,77,0,0,0,1,111,188,67,135,109,29,0,96,111,0,0,135,109,30,0,89,0,0,0,1,109,0,0,132,0,0,109,135,109,3,0,102,87,98,0,130,109,0,0,0,16,109,0,1,109,0,0,132,0,0,109,38,109,16,1,121,109,3,0,1,88,73,0,119,0,0,3,1,109,0,0,85,72,109,0,1,111,0,0,109,72,4,111,1,109,0,0,109,72,8,109,135,10,17,0,2,0,0,0,48,109,99,10,128,138,0,0,1,88,40,0,119,0,244,2,35,109,10,11,121,109,8,0,83,53,10,0,120,10,3,0,0,5,72,0,119,0,24,0,0,5,72,0,1,88,45,0,119,0,21,0,25,109,10,16,38,109,109,240,0,9,109,0,1,109,0,0,132,0,0,109,135,5,8,0,100,9,0,0,130,109,0,0,0,88,109,0,1,109,0,0,132,0,0,109,38,109,88,1,121,109,3,0,1,88,74,0,119,0,220,2,85,72,5,0,20,109,9,101,85,45,109,0,85,46,10,0,1,88,45,0,32,109,88,45,121,109,4,0,1,88,0,0,135,109,18,0,5,2,10,0,1,111,0,0,95,5,10,111,1,111,0,0,132,0,0,111,1,109,93,0,135,111,7,0,109,96,87,72,130,111,0,0,0,16,111,0,1,111,0,0,132,0,0,111,38,111,16,1,121,111,3,0,1,88,75,0,119,0,195,2,78,111,53,0,34,111,111,0,121,111,4,0,82,109,72,0,135,111,9,0,109,0,0,0,78,111,80,0,34,111,111,0,121,111,4,0,82,109,87,0,135,111,9,0,109,0,0,0,82,5,17,0,1,111,0,0,132,0,0,111,1,111,63,1,135,16,8,0,111,5,0,0,130,111,0,0,0,15,111,0,1,111,0,0,132,0,0,111,38,111,15,1,121,111,3,0,1,88,79,0,119,0,169,2,1,111,0,0,132,0,0,111,1,111,64,1,135,13,8,0,111,5,0,0,130,111,0,0,0,15,111,0,1,111,0,0,132,0,0,111,38,111,15,1,121,111,3,0,1,88,80,0,119,0,156,2,1,111,0,0,132,0,0,111,1,111,68,1,135,11,8,0,111,5,0,0,130,111,0,0,0,15,111,0,1,111,0,0,132,0,0,111,38,111,15,1,121,111,3,0,1,88,81,0,119,0,143,2,1,111,0,0,132,0,0,111,1,111,69,1,135,12,8,0,111,5,0,0,130,111,0,0,0,15,111,0,1,111,0,0,132,0,0,111,38,111,15,1,121,111,3,0,1,88,82,0,119,0,130,2,1,111,0,0,132,0,0,111,1,111,70,1,135,15,8,0,111,5,0,0,130,111,0,0,0,14,111,0,1,111,0,0,132,0,0,111,38,111,14,1,121,111,3,0,1,88,83,0,119,0,117,2,1,111,0,0,132,0,0,111,1,111,71,1,135,14,8,0,111,5,0,0,130,111,0,0,0,10,111,0,1,111,0,0,132,0,0,111,38,111,10,1,121,111,3,0,1,88,84,0,119,0,104,2,33,5,16,0,120,14,44,1,120,5,127,0,120,15,2,0,119,0,58,2,1,111,0,0,85,85,111,0,1,109,0,0,109,85,4,109,1,111,0,0,109,85,8,111,135,10,17,0,15,0,0,0,48,111,99,10,244,140,0,0,1,88,176,0,119,0,87,2,35,111,10,11,121,111,8,0,83,81,10,0,120,10,3,0,0,5,85,0,119,0,24,0,0,5,85,0,1,88,181,0,119,0,21,0,25,111,10,16,38,111,111,240,0,9,111,0,1,111,0,0,132,0,0,111,135,5,8,0,100,9,0,0,130,111,0,0,0,88,111,0,1,111,0,0,132,0,0,111,38,111,88,1,121,111,3,0,1,88,84,0,119,0,63,2,85,85,5,0,20,111,9,101,85,38,111,0,85,39,10,0,1,88,181,0,45,111,88,105,124,141,0,0,1,88,0,0,135,111,18,0,5,15,10,0,1,109,0,0,95,5,10,109,1,109,0,0,85,90,109,0,1,111,0,0,109,90,4,111,1,109,0,0,109,90,8,109,135,10,17,0,2,0,0,0,48,109,99,10,180,141,0,0,1,88,183,0,119,0,39,2,35,109,10,11,121,109,8,0,83,62,10,0,120,10,3,0,0,5,90,0,119,0,24,0,0,5,90,0,1,88,188,0,119,0,21,0,25,109,10,16,38,109,109,240,0,9,109,0,1,109,0,0,132,0,0,109,135,5,8,0,100,9,0,0,130,109,0,0,0,88,109,0,1,109,0,0,132,0,0,109,38,109,88,1,121,109,3,0,1,88,194,0,119,0,15,2,85,90,5,0,20,109,9,101,85,36,109,0,85,37,10,0,1,88,188,0,45,109,88,103,60,142,0,0,1,88,0,0,135,109,18,0,5,2,10,0,1,111,0,0,95,5,10,111,1,111,0,0,132,0,0,111,1,109,20,0,135,111,11,0,109,0,4,85,90,0,0,0,130,111,0,0,0,16,111,0,1,111,0,0,132,0,0,111,38,111,16,1,121,111,3,0,1,88,195,0,119,0,245,1,78,111,62,0,34,111,111,0,121,111,4,0,82,109,90,0,135,111,9,0,109,0,0,0,1,111,0,0,78,109,81,0,56,111,111,109,168,149,0,0,82,109,85,0,135,111,9,0,109,0,0,0,119,0,190,1,120,15,13,0,1,111,0,0,132,0,0,111,135,111,3,0,102,90,98,0,130,111,0,0,0,15,111,0,1,111,0,0,132,0,0,111,38,111,15,1,121,111,51,0,1,88,157,0,119,0,218,1,1,111,0,0,85,90,111,0,1,109,0,0,109,90,4,109,1,111,0,0,109,90,8,111,135,10,17,0,15,0,0,0,48,111,99,10,24,143,0,0,1,88,129,0,119,0,206,1,35,111,10,11,121,111,8,0,83,86,10,0,120,10,3,0,0,5,90,0,119,0,24,0,0,5,90,0,1,88,134,0,119,0,21,0,25,111,10,16,38,111,111,240,0,9,111,0,1,111,0,0,132,0,0,111,135,5,8,0,100,9,0,0,130,111,0,0,0,88,111,0,1,111,0,0,132,0,0,111,38,111,88,1,121,111,3,0,1,88,157,0,119,0,182,1,85,90,5,0,20,111,9,101,85,34,111,0,85,35,10,0,1,88,134,0,45,111,88,104,160,143,0,0,1,88,0,0,135,111,18,0,5,15,10,0,1,109,0,0,95,5,10,109,1,109,0,0,132,0,0,109,135,109,3,0,102,76,90,0,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,158,0,119,0,158,1,1,109,0,0,132,0,0,109,1,111,94,0,135,109,7,0,111,73,96,76,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,159,0,119,0,145,1,78,109,54,0,34,109,109,0,121,109,4,0,82,111,76,0,135,109,9,0,111,0,0,0,82,5,30,0,82,109,31,0,45,109,5,109,104,144,0,0,1,109,0,0,132,0,0,109,1,111,36,2,135,109,3,0,111,32,73,0,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,19,0,1,88,161,0,119,0,122,1,1,109,0,0,132,0,0,109,1,111,210,1,135,109,3,0,111,5,73,0,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,161,0,119,0,109,1,82,109,30,0,25,109,109,48,85,30,109,0,85,50,16,0,85,33,13,0,1,109,0,0,132,0,0,109,1,111,15,0,135,109,11,0,111,0,73,50,3,0,0,0,130,109,0,0,0,16,109,0,1,109,0,0,132,0,0,109,38,109,16,1,121,109,3,0,1,88,162,0,119,0,90,1,78,109,56,0,34,109,109,0,121,109,4,0,82,111,55,0,135,109,9,0,111,0,0,0,78,109,58,0,34,109,109,0,121,109,4,0,82,111,57,0,135,109,9,0,111,0,0,0,78,109,60,0,34,109,109,0,121,109,4,0,82,111,59,0,135,109,9,0,111,0,0,0,78,109,61,0,34,109,109,0,121,109,4,0,82,111,73,0,135,109,9,0,111,0,0,0,78,109,86,0,34,109,109,0,121,109,22,1,82,111,90,0,135,109,9,0,111,0,0,0,119,0,18,1,33,109,13,0,20,109,5,109,121,109,72,0,1,109,0,0,132,0,0,109,135,109,3,0,102,84,98,0,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,85,0,119,0,44,1,1,109,0,0,132,0,0,109,1,111,94,0,135,109,7,0,111,90,96,84,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,86,0,119,0,31,1,85,73,16,0,85,40,13,0,1,109,0,0,132,0,0,109,1,111,15,0,135,109,11,0,111,0,90,73,3,0,0,0,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,87,0,119,0,15,1,78,109,64,0,34,109,109,0,121,109,4,0,82,111,63,0,135,109,9,0,111,0,0,0,78,109,66,0,34,109,109,0,121,109,4,0,82,111,65,0,135,109,9,0,111,0,0,0,78,109,68,0,34,109,109,0,121,109,4,0,82,111,67,0,135,109,9,0,111,0,0,0,78,109,69,0,34,109,109,0,121,109,4,0,82,111,90,0,135,109,9,0,111,0,0,0,78,109,82,0,34,109,109,0,121,109,4,0,82,111,84,0,135,109,9,0,111,0,0,0,19,109,12,11,32,109,109,255,121,109,77,0,1,109,0,0,85,74,109,0,1,111,0,0,109,74,4,111,1,109,0,0,109,74,8,109,135,10,17,0,14,0,0,0,48,109,99,10,200,146,0,0,1,88,100,0,119,0,226,0,35,109,10,11,121,109,8,0,83,70,10,0,120,10,3,0,0,5,74,0,119,0,24,0,0,5,74,0,1,88,105,0,119,0,21,0,25,109,10,16,38,109,109,240,0,9,109,0,1,109,0,0,132,0,0,109,135,5,8,0,100,9,0,0,130,109,0,0,0,88,109,0,1,109,0,0,132,0,0,109,38,109,88,1,121,109,3,0,1,88,84,0,119,0,202,0,85,74,5,0,20,109,9,101,85,41,109,0,85,42,10,0,1,88,105,0,32,109,88,105,121,109,4,0,1,88,0,0,135,109,18,0,5,14,10,0,1,111,0,0,95,5,10,111,1,111,0,0,132,0,0,111,0,5,90,0,0,9,3,0,25,10,5,40,116,5,9,0,25,5,5,4,25,9,9,4,54,111,5,10,108,147,0,0,135,111,3,0,108,74,90,0,130,111,0,0,0,16,111,0,1,111,0,0,132,0,0,111,38,111,16,1,121,111,3,0,1,88,109,0,119,0,170,0,1,111,0,0,78,109,70,0,56,111,111,109,168,149,0,0,82,109,74,0,135,111,9,0,109,0,0,0,119,0,121,0,1,111,0,0,85,75,111,0,1,109,0,0,109,75,4,109,1,111,0,0,109,75,8,111,135,10,17,0,14,0,0,0,48,111,99,10,248,147,0,0,1,88,112,0,119,0,150,0,35,111,10,11,121,111,8,0,83,71,10,0,120,10,3,0,0,5,75,0,119,0,24,0,0,5,75,0,1,88,117,0,119,0,21,0,25,111,10,16,38,111,111,240,0,9,111,0,1,111,0,0,132,0,0,111,135,5,8,0,100,9,0,0,130,111,0,0,0,88,111,0,1,111,0,0,132,0,0,111,38,111,88,1,121,111,3,0,1,88,84,0,119,0,126,0,85,75,5,0,20,111,9,101,85,43,111,0,85,44,10,0,1,88,117,0,32,111,88,117,121,111,4,0,1,88,0,0,135,111,18,0,5,14,10,0,1,109,0,0,95,5,10,109,1,109,0,0,132,0,0,109,1,111,97,0,135,109,7,0,111,73,11,12,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,124,0,119,0,101,0,1,109,0,0,132,0,0,109,1,111,98,0,1,112,0,0,1,110,0,0,135,109,7,0,111,49,112,110,130,109,0,0,0,15,109,0,1,109,0,0,132,0,0,109,38,109,15,1,121,109,3,0,1,88,124,0,119,0,86,0,1,109,0,0,132,0,0,109,116,90,49,0,106,110,49,4,109,90,4,110,1,109,7,0,135,110,10,0,109,48,2,16,73,90,0,0,130,110,0,0,0,16,110,0,1,110,0,0,132,0,0,110,38,110,16,1,121,110,3,0,1,88,124,0,119,0,69,0,1,110,0,0,132,0,0,110,0,5,90,0,0,9,48,0,25,10,5,40,116,5,9,0,25,5,5,4,25,9,9,4,54,110,5,10,80,149,0,0,135,110,3,0,108,75,90,0,130,110,0,0,0,16,110,0,1,110,0,0,132,0,0,110,38,110,16,1,121,110,3,0,1,88,124,0,119,0,49,0,1,110,0,0,78,109,71,0,56,110,110,109,168,149,0,0,82,109,75,0,135,110,9,0,109,0,0,0,25,17,17,4,78,110,92,0,34,110,110,0,121,110,4,0,82,109,91,0,135,110,9,0,109,0,0,0,78,110,94,0,34,110,110,0,121,110,4,0,82,109,93,0,135,110,9,0,109,0,0,0,78,110,95,0,34,110,110,0,121,110,4,0,82,109,96,0,135,110,9,0,109,0,0,0,78,110,97,0,34,110,110,0,121,110,4,0,82,109,98,0,135,110,9,0,109,0,0,0,82,110,17,0,33,110,110,0,120,110,46,252,135,110,31,0,18,0,0,0,121,6,4,0,1,5,1,0,1,88,220,0,119,0,8,0,1,5,1,0,25,8,8,4,45,110,8,20,72,150,0,0,1,88,220,0,119,0,2,0,119,0,13,252,1,110,11,0,1,109,210,0,138,88,110,109,164,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,232,153,0,0,244,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,0,154,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,24,154,0,0,36,154,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,48,154,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,84,154,0,0,160,153,0,0,96,154,0,0,160,153,0,0,160,153,0,0,160,153,0,0,140,154,0,0,152,154,0,0,164,154,0,0,176,154,0,0,188,154,0,0,160,153,0,0,200,154,0,0,212,154,0,0,224,154,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,84,155,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,120,155,0,0,160,153,0,0,160,153,0,0,164,155,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,200,155,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,244,155,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,24,156,0,0,36,156,0,0,160,153,0,0,80,156,0,0,92,156,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,104,156,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,140,156,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,176,156,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,160,153,0,0,220,156,0,0,119,0,210,0,135,5,4,0,78,110,51,0,34,110,110,0,121,110,4,0,82,109,90,0,135,110,9,0,109,0,0,0,78,110,79,0,34,110,110,0,121,110,4,0,82,109,78,0,135,110,9,0,109,0,0,0,135,110,28,0,77,0,0,0,1,88,18,0,119,0,193,0,135,5,4,0,1,88,31,0,119,0,190,0,135,5,4,0,1,88,18,0,119,0,187,0,1,112,0,0,135,109,20,0,112,0,0,0,135,110,21,0,109,0,0,0,119,0,181,0,135,5,4,0,1,88,34,0,119,0,178,0,135,5,4,0,1,88,34,0,119,0,175,0,1,110,0,0,132,0,0,110,1,109,171,1,135,110,1,0,109,72,0,0,1,110,0,0,132,0,0,110,1,88,74,0,119,0,166,0,135,5,4,0,1,88,214,0,119,0,163,0,135,5,4,0,78,110,53,0,34,110,110,0,121,110,6,0,82,109,72,0,135,110,9,0,109,0,0,0,1,88,77,0,119,0,154,0,1,88,77,0,119,0,152,0,135,5,4,0,1,88,208,0,119,0,149,0,135,5,4,0,1,88,208,0,119,0,146,0,135,5,4,0,1,88,208,0,119,0,143,0,135,5,4,0,1,88,208,0,119,0,140,0,135,5,4,0,1,88,208,0,119,0,137,0,135,5,4,0,1,88,97,0,119,0,134,0,135,5,4,0,1,88,95,0,119,0,131,0,135,5,4,0,78,110,64,0,34,110,110,0,121,110,4,0,82,109,63,0,135,110,9,0,109,0,0,0,78,110,66,0,34,110,110,0,121,110,4,0,82,109,65,0,135,110,9,0,109,0,0,0,78,110,68,0,34,110,110,0,121,110,4,0,82,109,67,0,135,110,9,0,109,0,0,0,78,110,69,0,34,110,110,0,121,110,6,0,82,109,90,0,135,110,9,0,109,0,0,0,1,88,95,0,119,0,104,0,1,88,95,0,119,0,102,0,1,110,0,0,132,0,0,110,1,109,171,1,135,110,1,0,109,74,0,0,1,110,0,0,132,0,0,110,1,88,84,0,119,0,93,0,135,5,4,0,78,110,70,0,34,110,110,0,121,110,6,0,82,109,74,0,135,110,9,0,109,0,0,0,1,88,208,0,119,0,84,0,1,88,208,0,119,0,82,0,1,110,0,0,132,0,0,110,1,109,171,1,135,110,1,0,109,75,0,0,1,110,0,0,132,0,0,110,1,88,84,0,119,0,73,0,135,5,4,0,78,110,71,0,34,110,110,0,121,110,6,0,82,109,75,0,135,110,9,0,109,0,0,0,1,88,208,0,119,0,64,0,1,88,208,0,119,0,62,0,1,110,0,0,132,0,0,110,1,109,171,1,135,110,1,0,109,90,0,0,1,110,0,0,132,0,0,110,1,88,157,0,119,0,53,0,135,5,4,0,1,88,171,0,119,0,50,0,135,5,4,0,78,110,54,0,34,110,110,0,121,110,6,0,82,109,76,0,135,110,9,0,109,0,0,0,1,88,171,0,119,0,41,0,1,88,171,0,119,0,39,0,135,5,4,0,1,88,163,0,119,0,36,0,135,5,4,0,1,88,163,0,119,0,33,0,1,110,0,0,132,0,0,110,1,109,171,1,135,110,1,0,109,85,0,0,1,110,0,0,132,0,0,110,1,88,84,0,119,0,24,0,1,110,0,0,132,0,0,110,1,109,171,1,135,110,1,0,109,90,0,0,1,110,0,0,132,0,0,110,1,88,194,0,119,0,15,0,135,5,4,0,78,110,62,0,34,110,110,0,121,110,6,0,82,109,90,0,135,110,9,0,109,0,0,0,1,88,197,0,119,0,6,0,1,88,197,0,119,0,4,0,137,83,0,0,139,5,0,0,119,0,1,0,32,110,88,18,121,110,6,0,1,109,188,67,135,110,29,0,96,109,0,0,1,88,31,0,119,0,89,0,32,110,88,34,121,110,24,0,1,110,136,67,85,96,110,0,1,110,176,67,85,89,110,0,1,110,156,67,85,52,110,0,1,110,252,66,85,77,110,0,78,110,79,0,34,110,110,0,121,110,4,0,82,109,78,0,135,110,9,0,109,0,0,0,135,110,28,0,77,0,0,0,1,109,188,67,135,110,29,0,96,109,0,0,135,110,30,0,89,0,0,0,1,88,37,0,119,0,64,0,32,110,88,74,121,110,4,0,135,5,4,0,1,88,77,0,119,0,59,0,32,110,88,84,121,110,4,0,135,5,4,0,1,88,208,0,119,0,54,0,32,110,88,95,121,110,11,0,78,110,82,0,34,110,110,0,121,110,6,0,82,109,84,0,135,110,9,0,109,0,0,0,1,88,97,0,119,0,44,0,1,88,97,0,119,0,42,0,45,110,88,106,212,157,0,0,135,5,4,0,1,88,173,0,119,0,37,0,1,110,163,0,45,110,88,110,80,158,0,0,78,110,56,0,34,110,110,0,121,110,4,0,82,109,55,0,135,110,9,0,109,0,0,0,78,110,58,0,34,110,110,0,121,110,4,0,82,109,57,0,135,110,9,0,109,0,0,0,78,110,60,0,34,110,110,0,121,110,4,0,82,109,59,0,135,110,9,0,109,0,0,0,78,110,61,0,34,110,110,0,121,110,6,0,82,109,73,0,135,110,9,0,109,0,0,0,1,88,171,0,119,0,8,0,1,88,171,0,119,0,6,0,1,110,194,0,45,110,88,110,100,158,0,0,135,5,4,0,1,88,197,0,32,110,88,31,121,110,5,0,135,110,30,0,89,0,0,0,1,88,37,0,119,0,42,0,32,110,88,77,121,110,11,0,78,110,80,0,34,110,110,0,121,110,6,0,82,109,87,0,135,110,9,0,109,0,0,0,1,88,214,0,119,0,32,0,1,88,214,0,119,0,30,0,32,110,88,97,121,110,3,0,1,88,208,0,119,0,26,0,1,110,171,0,45,110,88,110,240,158,0,0,78,110,86,0,34,110,110,0,121,110,6,0,82,109,90,0,135,110,9,0,109,0,0,0,1,88,173,0,119,0,15,0,1,88,173,0,119,0,13,0,1,110,197,0,45,110,88,110,32,159,0,0,78,110,81,0,34,110,110,0,121,110,6,0,82,109,85,0,135,110,9,0,109,0,0,0,1,88,208,0,119,0,2,0,1,88,208,0,32,110,88,37,121,110,3,0,0,47,5,0,119,0,5,0,1,110,173,0,45,110,88,110,64,159,0,0,1,88,208,0,1,110,208,0,45,110,88,110,160,159,0,0,78,110,92,0,34,110,110,0,121,110,4,0,82,109,91,0,135,110,9,0,109,0,0,0,78,110,94,0,34,110,110,0,121,110,4,0,82,109,93,0,135,110,9,0,109,0,0,0,78,110,95,0,34,110,110,0,121,110,6,0,82,109,96,0,135,110,9,0,109,0,0,0,1,88,214,0,119,0,2,0,1,88,214,0,1,110,214,0,45,110,88,110,176,159,0,0,0,47,5,0,1,110,0,0,78,109,97,0,49,110,110,109,200,159,0,0,135,110,6,0,47,0,0,0,82,109,98,0,135,110,9,0,109,0,0,0,135,110,6,0,47,0,0,0,1,110,0,0,139,110,0,0,140,4,37,0,0,0,0,0,2,29,0,0,239,255,255,255,2,30,0,0,58,1,0,0,2,31,0,0],eb+30720),HEAPU8.set([255,0,0,0,1,26,0,0,136,32,0,0,0,15,32,0,136,32,0,0,1,33,128,1,3,32,32,33,137,32,0,0,0,23,15,0,1,32,116,1,3,24,15,32,1,32,112,1,3,13,15,32,1,32,72,1,3,19,15,32,25,28,15,104,25,27,15,80,25,25,15,52,25,21,15,40,1,32,32,1,3,20,15,32,1,32,16,1,3,22,15,32,25,14,15,96,1,32,228,0,3,7,0,32,1,32,232,0,3,4,0,32,82,32,4,0,82,33,7,0,4,32,32,33,42,32,32,3,0,8,32,0,25,33,0,76,135,32,32,0,33,8,0,0,82,5,4,0,1,32,236,0,94,32,0,32,45,32,5,32,176,160,0,0,135,32,33,0,7,2,0,0,119,0,9,0,0,16,2,0,106,17,16,4,0,18,5,0,116,18,16,0,109,18,4,17,82,32,4,0,25,32,32,8,85,4,32,0,25,12,1,36,1,32,52,1,3,4,0,32,82,5,4,0,1,32,56,1,94,32,0,32,45,32,5,32,4,161,0,0,1,33,48,1,3,33,0,33,135,32,34,0,33,12,0,0,119,0,6,0,135,32,27,0,5,12,0,0,82,32,4,0,25,32,32,12,85,4,32,0,1,33,180,1,3,33,0,33,25,34,0,4,135,32,35,0,23,12,33,34,1,32,64,1,3,4,0,32,82,5,4,0,1,32,68,1,94,32,0,32,48,32,5,32,132,161,0,0,116,5,23,0,106,34,23,4,109,5,4,34,106,32,23,8,109,5,8,32,1,32,0,0,85,23,32,0,1,34,0,0,109,23,4,34,1,32,0,0,109,23,8,32,82,32,4,0,25,32,32,12,85,4,32,0,119,0,32,0,1,32,0,0,132,0,0,32,1,34,22,2,1,33,60,1,3,33,0,33,135,32,3,0,34,33,23,0,130,32,0,0,0,18,32,0,1,32,0,0,132,0,0,32,38,32,18,1,120,32,9,0,1,32,0,0,102,33,23,11,56,32,32,33,0,162,0,0,82,33,23,0,135,32,9,0,33,0,0,0,119,0,11,0,135,4,4,0,102,32,23,11,34,32,32,0,121,32,4,0,82,33,23,0,135,32,9,0,33,0,0,0,0,28,4,0,135,32,6,0,28,0,0,0,25,6,12,11,102,33,1,11,34,33,33,0,121,33,4,0,82,33,1,0,0,32,33,0,119,0,2,0,0,32,1,0,78,34,6,0,34,34,34,0,121,34,4,0,82,34,12,0,0,33,34,0,119,0,2,0,0,33,12,0,82,34,2,0,106,35,2,4,135,4,36,0,32,33,34,35,85,13,4,0,1,35,20,1,3,18,0,35,1,35,24,1,3,10,0,35,82,5,10,0,1,35,28,1,94,35,0,35,45,35,5,35,128,162,0,0,135,35,37,0,18,13,0,0,119,0,5,0,85,5,4,0,82,35,10,0,25,35,35,4,85,10,35,0,82,35,7,0,41,34,8,3,94,9,35,34,78,34,6,0,34,34,34,0,121,34,4,0,82,34,12,0,0,35,34,0,119,0,2,0,0,35,12,0,135,4,38,0,35,0,0,0,85,23,4,0,1,35,220,0,3,5,0,35,82,6,5,0,1,35,224,0,94,35,0,35,48,35,6,35,244,162,0,0,85,6,4,0,82,35,5,0,25,4,35,4,85,5,4,0,119,0,6,0,1,34,216,0,3,34,0,34,135,35,39,0,34,23,0,0,82,4,5,0,26,34,4,4,82,34,34,0,135,35,40,0,19,34,9,8,82,11,18,0,82,35,10,0,4,4,35,11,32,35,4,8,121,35,3,0,1,26,20,0,119,0,7,2,82,35,13,0,106,6,35,4,42,35,4,2,26,5,35,2,1,8,0,0,41,34,8,2,94,34,11,34,106,34,34,4,135,35,41,0,34,6,0,0,120,35,2,0,119,0,8,0,25,4,8,1,48,35,4,5,120,163,0,0,0,8,4,0,119,0,245,255,1,26,20,0,119,0,244,1,1,35,32,0,135,4,12,0,35,0,0,0,85,24,4,0,2,34,0,0,32,0,0,128,109,24,8,34,1,35,31,0,109,24,4,35,0,5,4,0,2,1,0,0,0,142,0,0,25,7,5,31,78,35,1,0,83,5,35,0,25,5,5,1,25,1,1,1,54,35,5,7,180,163,0,0,1,34,0,0,107,4,31,34,25,13,8,2,1,34,254,255,48,34,8,34,220,169,0,0,25,17,25,11,25,14,21,11,25,8,21,4,25,0,23,11,25,9,23,4,25,15,28,11,25,16,27,11,25,10,21,8,25,12,25,8,25,2,25,4,106,34,11,4,82,5,34,0,1,34,0,0,85,25,34,0,1,35,0,0,109,25,4,35,1,34,0,0,109,25,8,34,135,4,17,0,5,0,0,0,48,34,29,4,68,164,0,0,1,26,28,0,119,0,89,1,1,7,1,0,0,1,4,0,35,34,1,11,121,34,8,0,83,17,1,0,120,1,3,0,0,4,25,0,119,0,26,0,0,4,25,0,1,26,33,0,119,0,23,0,25,34,1,16,38,34,34,240,0,6,34,0,1,34,0,0,132,0,0,34,135,4,8,0,30,6,0,0,130,34,0,0,0,26,34,0,1,34,0,0,132,0,0,34,38,34,26,1,121,34,3,0,1,26,57,0,119,0,63,1,85,25,4,0,2,34,0,0,0,0,0,128,20,34,6,34,85,12,34,0,85,2,1,0,1,26,33,0,32,34,26,33,121,34,4,0,1,26,0,0,135,34,18,0,4,5,1,0,1,35,0,0,95,4,1,35,1,35,0,0,132,0,0,35,1,35,45,0,1,34,0,0,2,33,0,0,32,142,0,0,135,4,2,0,35,25,34,33,130,33,0,0,0,11,33,0,1,33,0,0,132,0,0,33,38,33,11,1,121,33,3,0,1,26,58,0,119,0,211,0,116,27,4,0,106,34,4,4,109,27,4,34,106,33,4,8,109,27,8,33,1,33,0,0,85,4,33,0,1,34,0,0,109,4,4,34,1,33,0,0,109,4,8,33,1,33,0,0,132,0,0,33,1,33,209,3,2,34,0,0,38,142,0,0,135,4,23,0,33,27,34,0,130,34,0,0,0,11,34,0,1,34,0,0,132,0,0,34,38,34,11,1,121,34,3,0,1,26,59,0,119,0,185,0,116,28,4,0,106,33,4,4,109,28,4,33,106,34,4,8,109,28,8,34,1,34,0,0,85,4,34,0,1,33,0,0,109,4,4,33,1,34,0,0,109,4,8,34,25,7,7,1,82,34,18,0,41,33,7,2,94,34,34,33,82,6,34,0,1,34,0,0,85,21,34,0,1,33,0,0,109,21,4,33,1,34,0,0,109,21,8,34,135,1,17,0,6,0,0,0,48,34,29,1,252,165,0,0,1,26,37,0,119,0,157,0,35,34,1,11,121,34,8,0,83,14,1,0,120,1,3,0,0,4,21,0,119,0,26,0,0,4,21,0,1,26,42,0,119,0,23,0,25,34,1,16,38,34,34,240,0,5,34,0,1,34,0,0,132,0,0,34,135,4,8,0,30,5,0,0,130,34,0,0,0,26,34,0,1,34,0,0,132,0,0,34,38,34,26,1,121,34,3,0,1,26,60,0,119,0,133,0,85,21,4,0,2,34,0,0,0,0,0,128,20,34,5,34,85,10,34,0,85,8,1,0,1,26,42,0,32,34,26,42,121,34,4,0,1,26,0,0,135,34,18,0,4,6,1,0,1,33,0,0,95,4,1,33,78,4,14,0,41,33,4,24,42,33,33,24,34,11,33,0,1,33,0,0,132,0,0,33,1,33,41,0,121,11,4,0,82,35,21,0,0,34,35,0,119,0,2,0,0,34,21,0,121,11,4,0,82,32,8,0,0,35,32,0,119,0,3,0,19,32,4,31,0,35,32,0,135,4,2,0,33,28,34,35,130,35,0,0,0,11,35,0,1,35,0,0,132,0,0,35,38,35,11,1,121,35,3,0,1,26,61,0,119,0,91,0,116,23,4,0,106,34,4,4,109,23,4,34,106,35,4,8,109,23,8,35,1,35,0,0,85,4,35,0,1,34,0,0,109,4,4,34,1,35,0,0,109,4,8,35,78,11,0,0,41,35,11,24,42,35,35,24,34,1,35,0,1,35,0,0,132,0,0,35,1,34,41,0,121,1,4,0,82,32,23,0,0,33,32,0,119,0,2,0,0,33,23,0,121,1,4,0,82,36,9,0,0,32,36,0,119,0,3,0,19,36,11,31,0,32,36,0,135,35,2,0,34,24,33,32,130,35,0,0,0,11,35,0,1,35,0,0,132,0,0,35,38,35,11,1,121,35,3,0,1,26,62,0,119,0,52,0,78,35,0,0,34,35,35,0,121,35,4,0,82,32,23,0,135,35,9,0,32,0,0,0,78,35,14,0,34,35,35,0,121,35,4,0,82,32,21,0,135,35,9,0,32,0,0,0,78,35,15,0,34,35,35,0,121,35,4,0,82,32,28,0,135,35,9,0,32,0,0,0,78,35,16,0,34,35,35,0,121,35,4,0,82,32,27,0,135,35,9,0,32,0,0,0,78,35,17,0,34,35,35,0,121,35,4,0,82,32,25,0,135,35,9,0,32,0,0,0,50,35,13,7,40,168,0,0,1,26,27,0,119,0,111,0,82,35,18,0,41,32,7,2,94,35,35,32,82,5,35,0,1,35,0,0,85,25,35,0,1,32,0,0,109,25,4,32,1,35,0,0,109,25,8,35,135,1,17,0,5,0,0,0,48,35,29,1,104,168,0,0,1,26,28,0,119,0,80,0,119,0,249,254,32,35,26,37,121,35,10,0,1,35,0,0,132,0,0,35,1,32,171,1,135,35,1,0,32,21,0,0,1,35,0,0,132,0,0,35,1,26,60,0,119,0,27,0,32,35,26,58,121,35,3,0,135,4,4,0,119,0,23,0,32,35,26,59,121,35,4,0,135,4,4,0,1,26,68,0,119,0,18,0,32,35,26,61,121,35,4,0,135,4,4,0,1,26,64,0,119,0,13,0,32,35,26,62,121,35,11,0,135,4,4,0,78,35,0,0,34,35,35,0,121,35,6,0,82,32,23,0,135,35,9,0,32,0,0,0,1,26,64,0,119,0,2,0,1,26,64,0,32,35,26,60,121,35,4,0,135,4,4,0,1,26,66,0,119,0,12,0,32,35,26,64,121,35,10,0,78,35,14,0,34,35,35,0,121,35,6,0,82,32,21,0,135,35,9,0,32,0,0,0,1,26,66,0,119,0,2,0,1,26,66,0,32,35,26,66,121,35,10,0,78,35,15,0,34,35,35,0,121,35,6,0,82,32,28,0,135,35,9,0,32,0,0,0,1,26,68,0,119,0,2,0,1,26,68,0,32,35,26,68,121,35,7,0,78,35,16,0,34,35,35,0,121,35,4,0,82,32,27,0,135,35,9,0,32,0,0,0,78,35,17,0,34,35,35,0,121,35,4,0,82,32,25,0,135,35,9,0,32,0,0,0,32,35,26,28,121,35,9,0,1,35,0,0,132,0,0,35,1,32,171,1,135,35,1,0,32,25,0,0,1,35,0,0,132,0,0,35,1,26,57,0,32,35,26,57,121,35,4,0,135,4,4,0,119,0,2,0,1,26,27,0,32,35,26,27,121,35,84,0,0,5,28,0,125,1,3,3,19,0,0,0,25,7,5,40,116,5,1,0,25,5,5,4,25,1,1,4,54,35,5,7,248,169,0,0,1,35,76,0,135,6,42,0,35,0,0,0,0,5,20,0,0,1,28,0,25,7,5,40,116,5,1,0,25,5,5,4,25,1,1,4,54,35,5,7,36,170,0,0,1,35,0,0,132,0,0,35,1,32,197,1,135,35,3,0,32,22,24,0,130,35,0,0,0,28,35,0,1,35,0,0,132,0,0,35,38,35,28,1,121,35,4,0,135,4,4,0,1,26,79,0,119,0,46,0,1,35,0,0,132,0,0,35,0,5,23,0,0,1,20,0,25,7,5,40,116,5,1,0,25,5,5,4,25,1,1,4,54,35,5,7,132,170,0,0,1,32,16,0,135,35,11,0,32,6,23,22,18,0,0,0,130,35,0,0,0,28,35,0,1,35,0,0,132,0,0,35,38,35,28,1,121,35,3,0,1,5,1,0,119,0,11,0,1,35,0,0,132,0,0,35,1,32,74,0,1,33,64,13,1,34,177,0,135,35,7,0,32,6,33,34,1,35,0,0,132,0,0,35,1,5,0,0,135,4,4,0,102,35,22,11,34,35,35,0,121,35,7,0,82,34,22,0,135,35,9,0,34,0,0,0,121,5,6,0,1,26,79,0,119,0,4,0,121,5,3,0,1,26,79,0,119,0,1,0,32,35,26,79,121,35,3,0,135,35,43,0,6,0,0,0,102,35,24,11,34,35,35,0,121,35,4,0,82,34,24,0,135,35,9,0,34,0,0,0,32,35,26,20,121,35,78,1,0,5,23,0,0,1,19,0,25,7,5,40,116,5,1,0,25,5,5,4,25,1,1,4,54,35,5,7,96,171,0,0,1,34,0,0,135,35,44,0,28,9,0,23,34,0,0,0,1,35,0,0,132,0,0,35,1,34,63,1,82,33,13,0,135,35,8,0,34,33,0,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,3,0,1,26,112,0,119,0,11,1,1,35,0,0,132,0,0,35,1,33,64,1,82,34,13,0,135,35,8,0,33,34,0,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,3,0,1,26,112,0,119,0,253,0,1,35,0,0,132,0,0,35,1,34,23,2,135,35,3,0,34,27,28,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,5,0,135,4,4,0,128,35,0,0,0,5,35,0,119,0,237,0,1,35,0,0,132,0,0,35,1,34,177,1,82,33,10,0,26,33,33,4,82,33,33,0,135,35,1,0,34,33,0,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,5,0,135,4,4,0,128,35,0,0,0,5,35,0,119,0,217,0,82,35,10,0,26,35,35,4,85,10,35,0,1,35,0,0,132,0,0,35,1,33,200,1,106,34,27,4,135,35,3,0,33,14,34,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,6,0,135,4,4,0,128,35,0,0,0,5,35,0,1,26,120,0,119,0,197,0,1,35,56,32,85,14,35,0,0,21,2,0,106,22,21,4,0,4,23,0,116,4,21,0,109,4,4,22,25,4,23,8,1,35,0,0,132,0,0,35,1,34,200,1,106,33,14,4,135,35,3,0,34,4,33,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,5,0,135,4,4,0,128,35,0,0,0,5,35,0,119,0,170,0,1,35,56,32,85,4,35,0,1,35,0,0,132,0,0,35,1,33,197,1,135,35,3,0,33,25,12,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,5,0,135,4,4,0,128,35,0,0,0,5,35,0,119,0,150,0,0,21,23,0,106,22,21,4,25,4,25,12,116,4,21,0,109,4,4,22,25,4,25,20,1,35,0,0,132,0,0,35,1,33,200,1,106,34,23,12,135,35,3,0,33,4,34,0,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,121,35,12,0,135,4,4,0,128,35,0,0,0,5,35,0,1,35,0,0,102,34,25,11,56,35,35,34,192,175,0,0,82,34,25,0,135,35,9,0,34,0,0,0,119,0,121,0,1,35,56,32,85,4,35,0,25,34,23,8,135,35,5,0,34,0,0,0,135,35,5,0,14,0,0,0,1,35,240,0,3,6,0,35,1,35,0,0,132,0,0,35,1,35,47,0,135,1,2,0,35,6,23,25,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,120,35,87,0,82,35,1,0,120,35,34,0,1,35,0,0,132,0,0,35,1,34,95,0,135,35,7,0,34,24,6,25,130,35,0,0,0,22,35,0,1,35,0,0,132,0,0,35,38,35,22,1,120,35,74,0,82,5,23,0,82,4,24,0,1,35,0,0,85,4,35,0,1,34,0,0,109,4,4,34,109,4,8,5,85,1,4,0,82,34,6,0,82,5,34,0,121,5,3,0,85,6,5,0,82,4,1,0,1,35,244,0,94,35,0,35,135,34,45,0,35,4,0,0,1,34,248,0,3,26,0,34,82,34,26,0,25,34,34,1,85,26,34,0,25,35,25,20,135,34,5,0,35,0,0,0,102,34,25,11,34,34,34,0,121,34,4,0,82,35,25,0,135,34,9,0,35,0,0,0,135,34,5,0,27,0,0,0,106,4,28,56,121,4,14,0,25,5,28,60,82,6,5,0,46,34,6,4,28,175,0,0,26,34,6,4,4,34,34,4,43,34,34,2,11,34,34,0,41,34,34,2,3,34,6,34,85,5,34,0,135,34,9,0,4,0,0,0,25,1,28,44,82,4,1,0,120,4,3,0,137,15,0,0,139,0,0,0,25,6,28,48,82,5,6,0,46,34,5,4,120,175,0,0,26,28,5,8,85,6,28,0,82,35,28,0,82,35,35,0,1,33,255,1,19,35,35,33,135,34,14,0,35,28,0,0,82,5,6,0,53,34,5,4,72,175,0,0,82,4,1,0,135,34,9,0,4,0,0,0,137,15,0,0,139,0,0,0,135,4,4,0,128,34,0,0,0,5,34,0,25,35,25,20,135,34,5,0,35,0,0,0,1,34,0,0,102,35,25,11,56,34,34,35,216,175,0,0,82,35,25,0,135,34,9,0,35,0,0,0,119,0,7,0,25,35,23,8,135,34,5,0,35,0,0,0,135,34,5,0,14,0,0,0,1,26,120,0,135,34,5,0,27,0,0,0,0,8,5,0,32,34,26,112,121,34,4,0,135,4,4,0,128,34,0,0,0,8,34,0,106,5,28,56,121,5,14,0,25,6,28,60,82,1,6,0,46,34,1,5,44,176,0,0,26,34,1,4,4,34,34,5,43,34,34,2,11,34,34,0,41,34,34,2,3,34,1,34,85,6,34,0,135,34,9,0,5,0,0,0,25,7,28,44,82,5,7,0,121,5,19,0,25,1,28,48,82,6,1,0,46,34,6,5,128,176,0,0,26,28,6,8,85,1,28,0,82,35,28,0,82,35,35,0,1,33,255,1,19,35,35,33,135,34,14,0,35,28,0,0,82,6,1,0,53,34,6,5,80,176,0,0,82,5,7,0,135,34,9,0,5,0,0,0,0,28,4,0,135,34,6,0,28,0,0,0,139,0,0,0,140,3,37,0,0,0,0,0,2,30,0,0,200,1,0,0,2,31,0,0,200,31,0,0,2,32,0,0,173,1,0,0,1,27,0,0,136,33,0,0,0,25,33,0,136,33,0,0,1,34,240,0,3,33,33,34,137,33,0,0,1,33,200,0,3,19,25,33,1,33,160,0,3,3,25,33,1,33,144,0,3,6,25,33,1,33,136,0,3,26,25,33,25,4,25,96,25,10,25,80,25,11,25,72,25,13,25,64,25,12,25,56,25,18,25,88,25,14,25,48,25,15,25,40,25,16,25,32,25,17,25,24,25,22,25,16,25,23,25,8,0,24,25,0,1,33,152,0,3,28,1,33,82,29,28,0,25,21,29,1,85,28,21,0,1,33,0,2,48,33,33,21,140,178,0,0,1,33,76,0,135,5,42,0,33,0,0,0,0,7,3,0,25,8,1,108,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,33,7,9,96,177,0,0,1,33,0,0,132,0,0,33,1,34,197,1,2,35,0,0,216,56,1,0,135,33,3,0,34,6,35,0,130,33,0,0,0,27,33,0,1,33,0,0,132,0,0,33,38,33,27,1,121,33,3,0,135,3,4,0,119,0,50,0,1,33,0,0,132,0,0,33,0,7,19,0,0,8,3,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,33,7,9,196,177,0,0,1,35,23,0,1,34,0,0,135,33,11,0,35,5,19,6,34,0,0,0,130,33,0,0,0,27,33,0,1,33,0,0,132,0,0,33,38,33,27,1,121,33,3,0,1,4,1,0,119,0,11,0,1,33,0,0,132,0,0,33,1,34,74,0,1,35,128,16,1,36,177,0,135,33,7,0,34,5,35,36,1,33,0,0,132,0,0,33,1,4,0,0,135,3,4,0,102,33,6,11,34,33,33,0,121,33,9,0,82,36,6,0,135,33,9,0,36,0,0,0,120,4,9,0,85,28,29,0,135,33,6,0,3,0,0,0,119,0,5,0,120,4,4,0,85,28,29,0,135,33,6,0,3,0,0,0,135,33,43,0,5,0,0,0,0,27,3,0,85,28,29,0,135,33,6,0,27,0,0,0,1,33,0,0,132,0,0,33,106,36,1,48,26,36,36,4,82,36,36,0,135,33,3,0,30,26,36,0,130,33,0,0,0,21,33,0,1,33,0,0,132,0,0,33,38,33,21,1,121,33,3,0,135,3,4,0,119,0,51,2,1,33,56,32,85,26,33,0,106,3,26,4,120,3,3,0,1,20,0,0,119,0,2,0,102,20,3,84,1,33,0,0,132,0,0,33,1,36,139,0,1,35,0,0,1,34,1,0,135,33,2,0,36,1,35,34,130,33,0,0,0,21,33,0,1,33,0,0,132,0,0,33,38,33,21,1,121,33,3,0,1,27,27,0,119,0,24,2,1,33,0,0,132,0,0,33,1,33,58,1,1,34,84,0,135,5,8,0,33,34,0,0,130,34,0,0,0,21,34,0,1,34,0,0,132,0,0,34,38,34,21,1,121,34,3,0,1,27,27,0,119,0,10,2,25,21,1,108,0,7,4,0,0,8,21,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,34,7,9,104,179,0,0,1,34,0,0,132,0,0,34,1,33,0,0,135,34,3,0,30,10,33,0,130,34,0,0,0,9,34,0,1,34,0,0,132,0,0,34,38,34,9,1,121,34,3,0,135,3,4,0,119,0,242,1,85,10,31,0,1,34,0,0,132,0,0,34,1,33,0,0,135,34,3,0,30,11,33,0,130,34,0,0,0,9,34,0,1,34,0,0,132,0,0,34,38,34,9,1,121,34,5,0,135,3,4,0,135,34,5,0,10,0,0,0,119,0,226,1,1,34,56,32,85,11,34,0,1,34,0,0,132,0,0,34,0,7,19,0,0,8,4,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,34,7,9,12,180,0,0,1,33,31,0,135,34,11,0,33,5,19,10,11,0,0,0,130,34,0,0,0,9,34,0,1,34,0,0,132,0,0,34,38,34,9,1,121,34,3,0,1,4,1,0,119,0,195,1,1,34,0,0,132,0,0,34,135,34,3,0,30,0,5,0,130,34,0,0,0,9,34,0,1,34,0,0,132,0,0,34,38,34,9,1,121,34,3,0,1,4,0,0,119,0,183,1,1,34,52,70,85,0,34,0,135,34,5,0,11,0,0,0,135,34,5,0,10,0,0,0,102,34,2,12,120,34,203,0,1,34,0,0,132,0,0,34,1,34,58,1,1,33,112,0,135,3,8,0,34,33,0,0,130,33,0,0,0,13,33,0,1,33,0,0,132,0,0,33,38,33,13,1,121,33,3,0,1,27,48,0,119,0,185,0,1,33,0,0,132,0,0,33,0,7,19,0,0,8,21,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,33,7,9,236,180,0,0,1,34,81,0,1,35,0,0,135,33,7,0,34,3,19,35,130,33,0,0,0,13,33,0,1,33,0,0,132,0,0,33,38,33,13,1,121,33,6,0,135,25,4,0,135,33,9,0,3,0,0,0,0,3,25,0,119,0,160,0,1,33,0,0,132,0,0,33,135,33,3,0,30,18,3,0,130,33,0,0,0,13,33,0,1,33,0,0,132,0,0,33,38,33,13,1,121,33,3,0,1,27,48,0,119,0,148,0,85,18,31,0,25,5,18,4,82,3,5,0,1,33,0,0,132,0,0,33,1,35,28,0,106,34,2,8,1,36,0,0,135,33,11,0,35,15,1,34,36,0,0,0,130,33,0,0,0,13,33,0,1,33,0,0,132,0,0,33,38,33,13,1,121,33,3,0,1,27,50,0,119,0,124,0,25,4,3,92,25,3,3,96,82,33,3,0,120,33,3,0,1,27,40,0,119,0,13,0,1,33,0,0,132,0,0,33,1,36,172,1,135,33,1,0,36,4,0,0,130,33,0,0,0,13,33,0,1,33,0,0,132,0,0,33,38,33,13,1,120,33,2,0,1,27,40,0,32,33,27,40,121,33,101,0,25,33,15,4,116,3,33,0,1,33,0,0,132,0,0,33,135,33,1,0,32,4,0,0,130,33,0,0,0,13,33,0,1,33,0,0,132,0,0,33,38,33,13,1,120,33,89,0,1,33,0,0,132,0,0,33,82,36,3,0,135,33,3,0,30,14,36,0,130,33,0,0,0,13,33,0,1,33,0,0,132,0,0,33,38,33,13,1,120,33,78,0,1,33,112,66,85,14,33,0,135,33,5,0,14,0,0,0,135,33,5,0,15,0,0,0,106,3,0,4,1,33,0,0,132,0,0,33,82,36,5,0,135,33,3,0,30,17,36,0,130,33,0,0,0,15,33,0,1,33,0,0,132,0,0,33,38,33,15,1,121,33,3,0,1,27,50,0,119,0,61,0,85,17,31,0,25,4,3,72,25,3,3,76,82,33,3,0,120,33,3,0,1,27,45,0,119,0,13,0,1,33,0,0,132,0,0,33,1,36,172,1,135,33,1,0,36,4,0,0,130,33,0,0,0,15,33,0,1,33,0,0,132,0,0,33,38,33,15,1,120,33,2,0,1,27,45,0,32,33,27,45,121,33,33,0,25,33,17,4,116,3,33,0,1,33,0,0,132,0,0,33,135,33,1,0,32,4,0,0,130,33,0,0,0,15,33,0,1,33,0,0,132,0,0,33,38,33,15,1,120,33,21,0,1,33,0,0,132,0,0,33,82,36,3,0,135,33,3,0,30,16,36,0,130,33,0,0,0,15,33,0,1,33,0,0,132,0,0,33,38,33,15,1,120,33,10,0,85,16,31,0,135,33,5,0,16,0,0,0,135,33,5,0,17,0,0,0,135,33,5,0,18,0,0,0,1,27,55,0,119,0,85,0,135,3,4,0,135,33,5,0,17,0,0,0,119,0,4,0,135,3,4,0,135,33,5,0,15,0,0,0,32,33,27,50,121,33,2,0,135,3,4,0,135,33,5,0,18,0,0,0,32,33,27,48,121,33,71,0,135,3,4,0,119,0,69,0,106,3,0,4,1,33,0,0,132,0,0,33,1,36,107,0,1,34,0,0,135,33,7,0,36,12,1,34,130,33,0,0,0,18,33,0,1,33,0,0,132,0,0,33,38,33,18,1,121,33,3,0,1,27,32,0,119,0,54,0,25,4,3,72,25,3,3,76,82,33,3,0,120,33,3,0,1,27,23,0,119,0,13,0,1,33,0,0,132,0,0,33,1,34,172,1,135,33,1,0,34,4,0,0,130,33,0,0,0,18,33,0,1,33,0,0,132,0,0,33,38,33,18,1,120,33,2,0,1,27,23,0,32,33,27,23,121,33,31,0,25,33,12,4,116,3,33,0,1,33,0,0,132,0,0,33,135,33,1,0,32,4,0,0,130,33,0,0,0,18,33,0,1,33,0,0,132,0,0,33,38,33,18,1,120,33,19,0,1,33,0,0,132,0,0,33,82,34,3,0,135,33,3,0,30,13,34,0,130,33,0,0,0,18,33,0,1,33,0,0,132,0,0,33,38,33,18,1,120,33,8,0,85,13,31,0,135,33,5,0,13,0,0,0,135,33,5,0,12,0,0,0,1,27,55,0,119,0,4,0,135,3,4,0,135,33,5,0,12,0,0,0,32,33,27,55,121,33,153,0,1,33,6,0,85,19,33,0,25,6,1,60,82,3,6,0,106,33,1,64,48,33,3,33,16,185,0,0,1,33,6,0,85,3,33,0,25,33,3,4,85,6,33,0,119,0,15,0,1,33,0,0,132,0,0,33,1,34,53,2,25,36,1,56,135,33,3,0,34,36,19,0,130,33,0,0,0,19,33,0,1,33,0,0,132,0,0,33,38,33,19,1,121,33,3,0,135,3,4,0,119,0,127,0,25,5,0,4,82,3,5,0,1,33,0,0,132,0,0,33,1,36,122,0,1,34,0,0,135,33,7,0,36,23,1,34,130,33,0,0,0,1,33,0,1,33,0,0,132,0,0,33,38,33,1,1,121,33,3,0,1,27,32,0,119,0,111,0,25,4,3,64,25,3,3,68,82,33,3,0,120,33,3,0,1,27,61,0,119,0,13,0,1,33,0,0,132,0,0,33,1,34,172,1,135,33,1,0,34,4,0,0,130,33,0,0,0,1,33,0,1,33,0,0,132,0,0,33,38,33,1,1,120,33,2,0,1,27,61,0,32,33,27,61,121,33,88,0,25,33,23,4,116,3,33,0,1,33,0,0,132,0,0,33,135,33,1,0,32,4,0,0,130,33,0,0,0,1,33,0,1,33,0,0,132,0,0,33,38,33,1,1,120,33,76,0,1,33,0,0,132,0,0,33,82,34,3,0,135,33,3,0,30,22,34,0,130,33,0,0,0,1,33,0,1,33,0,0,132,0,0,33,38,33,1,1,120,33,65,0,1,33,56,32,85,22,33,0,135,33,5,0,22,0,0,0,135,33,5,0,23,0,0,0,82,33,6,0,26,33,33,4,85,6,33,0,1,33,0,0,132,0,0,33,1,34,54,2,82,36,5,0,135,33,3,0,34,36,21,0,130,33,0,0,0,23,33,0,1,33,0,0,132,0,0,33,38,33,23,1,121,33,3,0,1,27,32,0,119,0,45,0,1,33,0,0,132,0,0,33,82,36,5,0,106,36,36,68,135,33,3,0,30,24,36,0,130,33,0,0,0,23,33,0,1,33,0,0,132,0,0,33,38,33,23,1,121,33,3,0,1,27,32,0,119,0,31,0,1,33,56,32,85,24,33,0,1,33,0,0,132,0,0,33,1,36,54,2,106,34,24,4,135,33,3,0,36,34,21,0,130,33,0,0,0,23,33,0,1,33,0,0,132,0,0,33,38,33,23,1,121,33,5,0,135,3,4,0,135,33,5,0,24,0,0,0,119,0,13,0,135,33,5,0,24,0,0,0,82,33,5,0,107,33,80,20,135,33,5,0,26,0,0,0,85,28,29,0,137,25,0,0,139,0,0,0,135,3,4,0,135,33,5,0,23,0,0,0,32,33,27,32,121,33,2,0,135,3,4,0,135,33,5,0,0,0,0,0,119,0,10,0,135,3,4,0,135,33,5,0,11,0,0,0,135,33,5,0,10,0,0,0,120,4,2,0,119,0,3,0,135,33,9,0,5,0,0,0,32,33,27,27,121,33,2,0,135,3,4,0,135,33,5,0,26,0,0,0,0,27,3,0,85,28,29,0,135,33,6,0,27,0,0,0,139,0,0,0,140,3,28,0,0,0,0,0,2,21,0,0,32,0,0,128,2,22,0,0,114,175,0,0,2,23,0,0,58,1,0,0,136,24,0,0,0,18,24,0,136,24,0,0,1,25,128,0,3,24,24,25,137,24,0,0,25,19,18,104,25,20,18,92,25,17,18,80,25,14,18,40,0,5,18,0,1,24,156,0,3,15,1,24,116,19,15,0,106,25,15,4,109,19,4,25,106,24,15,8,109,19,8,24,25,16,1,76,82,3,16,0,25,11,1,84,116,20,11,0,106,25,11,4,109,20,4,25,106,24,11,8,109,20,8,24,25,12,1,96,116,17,12,0,106,25,12,4,109,17,4,25,106,24,12,8,109,17,8,24,25,13,1,108,0,7,14,0,0,8,13,0,25,10,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,24,7,10,84,188,0,0,1,25,1,0,1,26,0,0,135,24,46,0,1,25,26,0,1,26,1,0,1,25,0,0,135,24,47,0,1,26,25,0,120,24,172,0,0,7,13,0,0,8,14,0,25,10,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,24,7,10,152,188,0,0,116,15,19,0,106,25,19,4,109,15,4,25,106,24,19,8,109,15,8,24,85,16,3,0,116,12,17,0,106,25,17,4,109,12,4,25,106,24,17,8,109,12,8,24,116,11,20,0,106,25,20,4,109,11,4,25,106,24,20,8,109,11,8,24,1,24,16,0,135,3,12,0,24,0,0,0,85,19,3,0,2,25,0,0,16,0,0,128,109,19,8,25,1,24,11,0,109,19,4,24,0,7,3,0,2,8,0,0,239,172,0,0,25,10,7,11,78,24,8,0,83,7,24,0,25,7,7,1,25,8,8,1,54,24,7,10,32,189,0,0,1,25,0,0,107,3,11,25,1,24,0,0,109,20,8,24,25,4,20,11,1,24,7,0,83,4,24,0,2,24,0,0,251,172,0,0,78,24,24,0,83,20,24,0,2,25,0,0,252,172,0,0,78,25,25,0,107,20,1,25,2,24,0,0,253,172,0,0,78,24,24,0,107,20,2,24,2,25,0,0,254,172,0,0,78,25,25,0,107,20,3,25,2,24,0,0,255,172,0,0,78,24,24,0,107,20,4,24,2,25,0,0,0,173,0,0,78,25,25,0,107,20,5,25,2,24,0,0,1,173,0,0,78,24,24,0,107,20,6,24,1,25,0,0,107,20,7,25,1,25,0,0,85,17,25,0,1,24,0,0,109,17,4,24,1,25,0,0,109,17,8,25,1,25,0,0,132,0,0,25,1,25,32,0,135,3,8,0,23,25,0,0,130,25,0,0,0,10,25,0,1,25,0,0,132,0,0,25,38,25,10,1,121,25,3,0,135,3,4,0,119,0,58,0,85,17,3,0,109,17,8,21,1,24,20,0,109,17,4,24,0,7,3,0,2,8,0,0,145,177,0,0,25,10,7,20,78,24,8,0,83,7,24,0,25,7,7,1,25,8,8,1,54,24,7,10,56,190,0,0,1,25,0,0,107,3,20,25,1,25,0,0,132,0,0,25,1,24,10,0,1,26,1,0,135,25,10,0,24,1,19,20,17,26,0,0,130,25,0,0,0,10,25,0,1,25,0,0,132,0,0,25,38,25,10,1,121,25,10,0,135,3,4,0,1,25,0,0,102,26,17,11,56,25,25,26,252,190,0,0,82,26,17,0,135,25,9,0,26,0,0,0,119,0,20,0,102,25,17,11,34,25,25,0,121,25,4,0,82,26,17,0,135,25,9,0,26,0,0,0,78,25,4,0,34,25,25,0,121,25,4,0,82,26,20,0,135,25,9,0,26,0,0,0,102,25,19,11,34,25,25,0,121,25,20,0,82,26,19,0,135,25,9,0,26,0,0,0,119,0,16,0,78,25,4,0,34,25,25,0,121,25,4,0,82,26,20,0,135,25,9,0,26,0,0,0,102,25,19,11,34,25,25,0,121,25,4,0,82,26,19,0,135,25,9,0,26,0,0,0,0,20,3,0,135,25,6,0,20,0,0,0,1,25,88,0,135,9,12,0,25,0,0,0,0,7,5,0,0,8,13,0,25,10,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,25,7,10,80,191,0,0,1,25,0,0,132,0,0,25,1,26,170,1,135,25,1,0,26,9,0,0,130,25,0,0,0,10,25,0,1,25,0,0,132,0,0,25,38,25,10,1,121,25,3,0,135,3,4,0,119,0,138,1,25,7,9,12,0,8,5,0,25,10,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,25,7,10,164,191,0,0,1,25,8,31,85,9,25,0,1,26,0,0,109,9,52,26,1,25,0,0,109,9,56,25,1,26,0,0,107,9,60,26,25,3,9,64,1,26,224,30,85,3,26,0,25,7,9,68,25,8,9,72,1,26,0,0,85,7,26,0,1,25,0,0,109,7,4,25,1,26,0,0,109,7,8,26,1,25,0,0,109,7,12,25,1,25,0,0,132,0,0,25,1,26,51,2,1,24,0,0,135,25,3,0,26,7,24,0,130,25,0,0,0,10,25,0,1,25,0,0,132,0,0,25,38,25,10,1,121,25,24,0,135,3,4,0,128,25,0,0,0,6,25,0,82,4,7,0,121,4,92,1,82,5,8,0,46,25,5,4,140,192,0,0,26,20,5,8,85,8,20,0,82,24,20,0,82,24,24,0,1,26,255,1,19,24,24,26,135,25,14,0,24,20,0,0,82,5,8,0,53,25,5,4,92,192,0,0,82,4,7,0,135,25,9,0,4,0,0,0,119,0,74,1,1,25,68,30,85,9,25,0,1,25,168,30,85,3,25,0,38,24,2,1,107,9,84,24,135,24,0,0,0,9,0,0,1,24,56,32,85,0,24,0,25,5,1,48,82,3,5,0,106,24,1,52,45,24,3,24,20,193,0,0,1,24,0,0,132,0,0,24,1,25,52,2,25,26,1,44,135,24,3,0,25,26,0,0,130,24,0,0,0,10,24,0,1,24,0,0,132,0,0,24,38,24,10,1,121,24,3,0,1,6,35,0,119,0,23,0,1,6,32,0,119,0,21,0,1,24,0,0,132,0,0,24,1,26,200,1,106,25,0,4,135,24,3,0,26,3,25,0,130,24,0,0,0,10,24,0,1,24,0,0,132,0,0,24,38,24,10,1,121,24,3,0,1,6,35,0,119,0,7,0,1,24,56,32,85,3,24,0,82,24,5,0,25,24,24,8,85,5,24,0,1,6,32,0,32,24,6,32,121,24,13,1,1,24,0,0,132,0,0,24,1,25,247,3,135,24,23,0,25,1,2,0,130,24,0,0,0,10,24,0,1,24,0,0,132,0,0,24,38,24,10,1,121,24,3,0,1,6,35,0,119,0,0,1,116,19,15,0,106,25,15,4,109,19,4,25,106,24,15,8,109,19,8,24,82,4,16,0,116,20,11,0,106,25,11,4,109,20,4,25,106,24,11,8,109,20,8,24,116,17,12,0,106,25,12,4,109,17,4,25,106,24,12,8,109,17,8,24,0,7,14,0,0,8,13,0,25,10,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,24,7,10,236,193,0,0,1,24,0,0,132,0,0,24,1,25,54,0,1,26,1,0,1,27,0,0,135,24,2,0,25,1,26,27,130,24,0,0,0,10,24,0,1,24,0,0,132,0,0,24,38,24,10,1,121,24,3,0,1,6,35,0,119,0,217,0,1,24,0,0,132,0,0,24,1,24,144,0,1,27,1,0,1,26,0,0,135,3,2,0,24,1,27,26,130,26,0,0,0,10,26,0,1,26,0,0,132,0,0,26,38,26,10,1,121,26,3,0,1,6,35,0,119,0,202,0,120,3,186,0,0,7,13,0,0,8,14,0,25,10,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,26,7,10,136,194,0,0,116,15,19,0,106,27,19,4,109,15,4,27,106,26,19,8,109,15,8,26,85,16,4,0,116,12,17,0,106,27,17,4,109,12,4,27,106,26,17,8,109,12,8,26,116,11,20,0,106,27,20,4,109,11,4,27,106,26,20,8,109,11,8,26,1,26,0,0,85,19,26,0,1,27,0,0,109,19,4,27,1,26,0,0,109,19,8,26,1,26,0,0,132,0,0,26,1,26,16,0,135,3,8,0,23,26,0,0,130,26,0,0,0,16,26,0,1,26,0,0,132,0,0,26,38,26,16,1,121,26,3,0,135,3,4,0,119,0,158,0,85,19,3,0,2,27,0,0,16,0,0,128,109,19,8,27,1,26,11,0,109,19,4,26,0,7,3,0,2,8,0,0,239,172,0,0,25,10,7,11,78,26,8,0,83,7,26,0,25,7,7,1,25,8,8,1,54,26,7,10,80,195,0,0,1,27,0,0,107,3,11,27,1,26,0,0,109,20,8,26,25,4,20,11,1,26,7,0,83,4,26,0,2,26,0,0,251,172,0,0,78,26,26,0,83,20,26,0,2,27,0,0,252,172,0,0,78,27,27,0,107,20,1,27,2,26,0,0,253,172,0,0,78,26,26,0,107,20,2,26,2,27,0,0,254,172,0,0,78,27,27,0,107,20,3,27,2,26,0,0,255,172,0,0,78,26,26,0,107,20,4,26,2,27,0,0,0,173,0,0,78,27,27,0,107,20,5,27,2,26,0,0,1,173,0,0,78,26,26,0,107,20,6,26,1,27,0,0,107,20,7,27,1,27,0,0,85,17,27,0,1,26,0,0,109,17,4,26,1,27,0,0,109,17,8,27,1,27,0,0,132,0,0,27,1,27,32,0,135,3,8,0,23,27,0,0,130,27,0,0,0,16,27,0,1,27,0,0,132,0,0,27,38,27,16,1,121,27,3,0,135,3,4,0,119,0,58,0,85,17,3,0,109,17,8,21,1,26,20,0,109,17,4,26,0,7,3,0,2,8,0,0,114,175,0,0,25,10,7,20,78,26,8,0,83,7,26,0,25,7,7,1,25,8,8,1,54,26,7,10,104,196,0,0,1,27,0,0,107,3,20,27,1,27,0,0,132,0,0,27,1,26,10,0,1,24,1,0,135,27,10,0,26,1,19,20,17,24,0,0,130,27,0,0,0,1,27,0,1,27,0,0,132,0,0,27,38,27,1,1,121,27,10,0,135,3,4,0,1,27,0,0,102,24,17,11,56,27,27,24,44,197,0,0,82,24,17,0,135,27,9,0,24,0,0,0,119,0,20,0,102,27,17,11,34,27,27,0,121,27,4,0,82,24,17,0,135,27,9,0,24,0,0,0,78,27,4,0,34,27,27,0,121,27,4,0,82,24,20,0,135,27,9,0,24,0,0,0,102,27,19,11,34,27,27,0,121,27,18,0,82,24,19,0,135,27,9,0,24,0,0,0,119,0,14,0,78,27,4,0,34,27,27,0,121,27,4,0,82,24,20,0,135,27,9,0,24,0,0,0,102,27,19,11,34,27,27,0,121,27,20,0,82,24,19,0,135,27,9,0,24,0,0,0,119,0,16,0,82,4,5,0,26,3,4,8,26,20,4,8,85,5,20,0,82,24,20,0,82,24,24,0,1,26,255,1,19,24,24,26,135,27,14,0,24,20,0,0,82,4,5,0,53,27,4,3,104,197,0,0,137,18,0,0,139,0,0,0,32,27,6,35,121,27,2,0,135,3,4,0,135,27,5,0,0,0,0,0,0,20,3,0,135,27,6,0,20,0,0,0,135,27,9,0,9,0,0,0,0,20,3,0,135,27,6,0,20,0,0,0,139,0,0,0,140,4,28,0,0,0,0,0,2,21,0,0,232,208,0,0,2,22,0,0,255,0,0,0,2,23,0,0,13,199,0,0,1,13,0,0,136,24,0,0,0,15,24,0,136,24,0,0,1,25,224,0,3,24,24,25,137,24,0,0,1,24,184,0,3,14,15,24,1,24,172,0,3,17,15,24,25,12,15,16,1,24,160,0,3,10,15,24,0,16,15,0,135,24,48,0,17,1,2,0,25,6,17,4,82,4,17,0,82,24,6,0,4,5,24,4,1,24,1,0,28,25,5,48,48,24,24,25,8,205,0,0,25,11,12,64,25,4,12,8,1,24,156,67,85,4,24,0,25,9,12,12,1,24,156,12,85,12,24,0,1,24,176,12,85,11,24,0,1,25,0,0,109,12,4,25,1,25,0,0,132,0,0,25,1,24,11,2,25,26,12,64,135,25,3,0,24,26,9,0,130,25,0,0,0,8,25,0,1,25,0,0,132,0,0,25,38,25,8,1,121,25,4,0,135,4,4,0,1,13,25,0,119,0,137,1,1,25,136,0,1,26,0,0,97,12,25,26,1,26,140,0,1,25,255,255,97,12,26,25,1,25,136,67,85,12,25,0,1,25,176,67,85,11,25,0,1,25,156,67,85,4,25,0,1,25,0,0,132,0,0,25,1,26,180,1,135,25,1,0,26,9,0,0,130,25,0,0,0,8,25,0,1,25,0,0,132,0,0,25,38,25,8,1,121,25,3,0,135,4,4,0,119,0,108,1,1,25,252,66,85,9,25,0,25,8,12,44,1,25,0,0,85,8,25,0,1,26,0,0,109,8,4,26,1,25,0,0,109,8,8,25,1,26,0,0,109,8,12,26,1,25,24,0,109,12,60,25,1,25,0,0,85,14,25,0,1,26,0,0,109,14,4,26,1,25,0,0,109,14,8,25,1,25,0,0,132,0,0,25,1,26,12,2,135,25,3,0,26,9,14,0,130,25,0,0,0,7,25,0,1,25,0,0,132,0,0,25,38,25,7,1,121,25,17,0,135,4,4,0,102,25,14,11,34,25,25,0,121,25,4,0,82,26,14,0,135,25,9,0,26,0,0,0,102,25,8,11,34,25,25,0,121,25,4,0,82,26,8,0,135,25,9,0,26,0,0,0,135,25,28,0,9,0,0,0,119,0,62,1,102,25,14,11,34,25,25,0,121,25,4,0,82,26,14,0,135,25,9,0,26,0,0,0,25,7,12,8,1,25,0,0,132,0,0,25],eb+40960),HEAPU8.set([1,26,46,0,2,24,0,0,137,142,0,0,1,27,40,0,135,25,2,0,26,7,24,27,130,25,0,0,0,1,25,0,1,25,0,0,132,0,0,25,38,25,1,1,121,25,3,0,1,13,26,0,119,0,14,1,1,25,0,0,132,0,0,25,1,25,46,0,2,27,0,0,178,142,0,0,1,24,10,0,135,4,2,0,25,7,27,24,130,24,0,0,0,1,24,0,1,24,0,0,132,0,0,24,38,24,1,1,121,24,3,0,1,13,26,0,119,0,254,0,102,1,2,11,41,24,1,24,42,24,24,24,34,5,24,0,1,24,0,0,132,0,0,24,1,24,46,0,121,5,4,0,82,25,2,0,0,27,25,0,119,0,2,0,0,27,2,0,121,5,4,0,106,26,2,4,0,25,26,0,119,0,3,0,19,26,1,22,0,25,26,0,135,4,2,0,24,4,27,25,130,25,0,0,0,1,25,0,1,25,0,0,132,0,0,25,38,25,1,1,121,25,3,0,1,13,26,0,119,0,226,0,1,25,0,0,132,0,0,25,1,25,46,0,2,27,0,0,189,142,0,0,1,24,3,0,135,4,2,0,25,4,27,24,130,24,0,0,0,1,24,0,1,24,0,0,132,0,0,24,38,24,1,1,121,24,3,0,1,13,26,0,119,0,210,0,1,24,0,0,132,0,0,24,1,27,46,0,1,25,1,0,135,24,2,0,27,4,21,25,130,24,0,0,0,1,24,0,1,24,0,0,132,0,0,24,38,24,1,1,121,24,3,0,1,13,26,0,119,0,196,0,1,24,0,0,132,0,0,24,1,24,46,0,2,25,0,0,193,142,0,0,1,27,11,0,135,4,2,0,24,7,25,27,130,27,0,0,0,1,27,0,1,27,0,0,132,0,0,27,38,27,1,1,121,27,3,0,1,13,26,0,119,0,180,0,1,27,0,0,132,0,0,27,1,25,46,0,1,24,1,0,135,27,2,0,25,4,21,24,130,27,0,0,0,1,27,0,1,27,0,0,132,0,0,27,38,27,1,1,121,27,3,0,1,13,26,0,119,0,166,0,82,27,6,0,82,24,17,0,4,6,27,24,28,1,6,48,121,6,62,0,1,5,0,0,1,24,0,0,132,0,0,24,1,24,46,0,1,27,2,0,135,4,2,0,24,7,23,27,130,27,0,0,0,6,27,0,1,27,0,0,132,0,0,27,38,27,6,1,120,27,47,0,82,18,17,0,27,27,5,48,3,18,18,27,0,20,18,0,102,6,20,11,41,27,6,24,42,27,27,24,34,19,27,0,1,27,0,0,132,0,0,27,1,27,46,0,121,19,4,0,82,25,20,0,0,24,25,0,119,0,2,0,0,24,20,0,121,19,4,0,106,26,18,4,0,25,26,0,119,0,3,0,19,26,6,22,0,25,26,0,135,4,2,0,27,4,24,25,130,25,0,0,0,6,25,0,1,25,0,0,132,0,0,25,38,25,6,1,120,25,17,0,1,25,0,0,132,0,0,25,1,24,46,0,1,27,1,0,135,25,2,0,24,4,21,27,130,25,0,0,0,20,25,0,1,25,0,0,132,0,0,25,38,25,20,1,120,25,5,0,25,5,5,1,57,25,1,5,224,202,0,0,119,0,199,255,135,4,4,0,119,0,100,0,1,25,0,0,132,0,0,25,1,25,46,0,2,27,0,0,205,142,0,0,1,24,51,0,135,4,2,0,25,7,27,24,130,24,0,0,0,20,24,0,1,24,0,0,132,0,0,24,38,24,20,1,121,24,3,0,1,13,26,0,119,0,84,0,1,24,0,0,132,0,0,24,1,27,46,0,1,25,1,0,135,24,2,0,27,4,21,25,130,24,0,0,0,20,24,0,1,24,0,0,132,0,0,24,38,24,20,1,121,24,3,0,1,13,26,0,119,0,70,0,1,24,0,0,132,0,0,24,1,25,13,2,135,24,3,0,25,10,9,0,130,24,0,0,0,20,24,0,1,24,0,0,132,0,0,24,38,24,20,1,121,24,3,0,1,13,26,0,119,0,57,0,1,24,0,0,132,0,0,24,0,1,14,0,0,4,3,0,25,5,1,40,116,1,4,0,25,1,1,4,25,4,4,4,54,24,1,5,160,203,0,0,1,25,221,1,135,24,3,0,25,10,14,0,130,24,0,0,0,20,24,0,1,24,0,0,132,0,0,24,38,24,20,1,121,24,10,0,135,4,4,0,1,24,0,0,102,25,10,11,56,24,24,25,108,204,0,0,82,25,10,0,135,24,9,0,25,0,0,0,119,0,29,0,102,24,10,11,34,24,24,0,121,24,4,0,82,25,10,0,135,24,9,0,25,0,0,0,1,24,136,67,85,12,24,0,1,24,176,67,85,11,24,0,1,24,156,67,85,7,24,0,1,24,252,66,85,9,24,0,102,24,8,11,34,24,24,0,121,24,4,0,82,25,8,0,135,24,9,0,25,0,0,0,135,24,28,0,9,0,0,0,1,25,188,67,135,24,29,0,12,25,0,0,135,24,30,0,11,0,0,0,119,0,142,0,32,24,13,26,121,24,2,0,135,4,4,0,1,24,136,67,85,12,24,0,1,24,176,67,85,11,24,0,1,24,156,67,85,7,24,0,1,24,252,66,85,9,24,0,102,24,8,11,34,24,24,0,121,24,4,0,82,25,8,0,135,24,9,0,25,0,0,0,135,24,28,0,9,0,0,0,1,25,188,67,135,24,29,0,12,25,0,0,135,24,30,0,11,0,0,0,119,0,5,0,1,25,188,67,135,24,29,0,12,25,0,0,1,13,25,0,32,24,13,25,121,24,3,0,135,24,30,0,11,0,0,0,0,20,4,0,135,24,13,0,17,0,0,0,135,24,6,0,20,0,0,0,119,0,103,0,32,24,5,48,121,24,101,0,1,24,112,1,94,24,1,24,1,25,108,1,94,25,1,25,45,24,24,25,188,205,0,0,1,24,0,0,132,0,0,24,1,24,217,3,1,25,240,0,3,25,1,25,25,27,4,36,135,5,23,0,24,25,27,0,130,27,0,0,0,20,27,0,1,27,0,0,132,0,0,27,38,27,20,1,120,27,19,0,82,4,17,0,120,5,2,0,119,0,21,0,1,27,0,0,132,0,0,27,1,25,210,1,135,27,3,0,25,0,4,0,130,27,0,0,0,20,27,0,1,27,0,0,132,0,0,27,38,27,20,1,120,27,5,0,135,27,13,0,17,0,0,0,137,15,0,0,139,0,0,0,135,20,4,0,135,27,13,0,17,0,0,0,135,27,6,0,20,0,0,0,1,27,0,0,132,0,0,27,1,27,66,1,25,25,4,36,135,4,8,0,27,25,0,0,130,25,0,0,0,20,25,0,1,25,0,0,132,0,0,25,38,25,20,1,120,25,41,0,120,4,2,0,119,0,44,0,82,20,17,0,85,14,4,0,1,27,0,0,109,14,4,27,1,27,0,0,132,0,0,27,1,25,15,0,135,27,11,0,25,1,20,14,3,0,0,0,130,27,0,0,0,20,27,0,1,27,0,0,132,0,0,27,38,27,20,1,121,27,7,0,135,20,4,0,135,27,13,0,17,0,0,0,135,27,6,0,20,0,0,0,119,0,17,0,1,27,0,0,132,0,0,27,1,25,210,1,82,24,17,0,135,27,3,0,25,0,24,0,130,27,0,0,0,20,27,0,1,27,0,0,132,0,0,27,38,27,20,1,120,27,5,0,135,27,13,0,17,0,0,0,137,15,0,0,139,0,0,0,135,20,4,0,135,27,13,0,17,0,0,0,135,27,6,0,20,0,0,0,25,5,16,11,1,27,0,0,85,16,27,0,1,24,0,0,109,16,4,24,1,27,0,0,109,16,8,27,1,27,0,0,132,0,0,27,1,24,94,0,135,27,7,0,24,0,2,16,130,27,0,0,0,20,27,0,1,27,0,0,132,0,0,27,38,27,20,1,121,27,20,0,135,4,4,0,1,27,0,0,78,24,5,0,49,27,27,24,16,207,0,0,0,20,4,0,135,27,13,0,17,0,0,0,135,27,6,0,20,0,0,0,82,24,16,0,135,27,9,0,24,0,0,0,0,20,4,0,135,27,13,0,17,0,0,0,135,27,6,0,20,0,0,0,119,0,16,0,1,27,0,0,78,24,5,0,49,27,27,24,84,207,0,0,135,27,13,0,17,0,0,0,137,15,0,0,139,0,0,0,82,24,16,0,135,27,9,0,24,0,0,0,135,27,13,0,17,0,0,0,137,15,0,0,139,0,0,0,139,0,0,0,140,2,25,0,0,0,0,0,2,18,0,0,255,1,0,0,2,19,0,0,69,177,0,0,2,20,0,0,48,0,0,128,1,17,0,0,136,21,0,0,0,13,21,0,136,21,0,0,1,22,128,0,3,21,21,22,137,21,0,0,0,16,13,0,25,15,13,52,25,5,13,88,25,6,13,72,25,4,13,64,25,14,13,40,135,21,49,0,1,0,0,0,25,11,1,76,82,3,11,0,25,12,1,80,82,2,12,0,85,15,3,0,52,21,3,2,8,208,0,0,135,21,50,0,15,2,16,0,32,10,21,0,82,3,15,0,120,10,250,255,0,2,3,0,119,0,1,0,82,21,12,0,46,21,2,21,180,209,0,0,82,22,11,0,135,21,51,0,16,22,2,0,25,8,1,108,135,21,52,0,8,16,0,0,1,21,76,0,135,4,42,0,21,0,0,0,0,7,5,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,21,7,9,64,208,0,0,1,21,0,0,85,6,21,0,1,22,0,0,109,6,4,22,1,21,0,0,109,6,8,21,1,21,0,0,132,0,0,21,1,21,58,1,1,22,32,0,135,2,8,0,21,22,0,0,130,22,0,0,0,17,22,0,1,22,0,0,132,0,0,22,38,22,17,1,121,22,3,0,135,2,4,0,119,0,64,0,85,6,2,0,2,21,0,0,32,0,0,128,109,6,8,21,1,22,22,0,109,6,4,22,0,7,2,0,2,8,0,0,46,177,0,0,25,9,7,22,78,22,8,0,83,7,22,0,25,7,7,1,25,8,8,1,54,22,7,9,204,208,0,0,1,21,0,0,107,2,22,21,1,21,0,0,132,0,0,21,0,7,16,0,0,8,5,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,21,7,9,0,209,0,0,1,22,111,0,135,21,7,0,22,4,16,6,130,21,0,0,0,17,21,0,1,21,0,0,132,0,0,21,38,21,17,1,121,21,3,0,1,3,1,0,119,0,11,0,1,21,0,0,132,0,0,21,1,22,74,0,1,23,144,16,1,24,177,0,135,21,7,0,22,4,23,24,1,21,0,0,132,0,0,21,1,3,0,0,135,2,4,0,102,21,6,11,34,21,21,0,121,21,8,0,82,24,6,0,135,21,9,0,24,0,0,0,120,3,7,0,135,21,6,0,2,0,0,0,119,0,4,0,120,3,3,0,135,21,6,0,2,0,0,0,135,21,43,0,4,0,0,0,0,17,2,0,135,21,6,0,17,0,0,0,1,21,88,0,135,10,12,0,21,0,0,0,25,5,1,108,0,7,16,0,0,8,5,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,21,7,9,208,209,0,0,1,21,0,0,132,0,0,21,1,24,170,1,135,21,1,0,24,10,0,0,130,21,0,0,0,9,21,0,1,21,0,0,132,0,0,21,38,21,9,1,121,21,3,0,135,2,4,0,119,0,129,1,25,7,10,12,0,8,16,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,21,7,9,36,210,0,0,1,21,8,31,85,10,21,0,1,24,0,0,109,10,52,24,1,21,0,0,109,10,56,21,1,24,0,0,107,10,60,24,25,2,10,64,1,24,224,30,85,2,24,0,25,6,10,68,25,7,10,72,1,24,0,0,85,6,24,0,1,21,0,0,109,6,4,21,1,24,0,0,109,6,8,24,1,21,0,0,109,6,12,21,1,21,0,0,132,0,0,21,1,24,51,2,1,23,0,0,135,21,3,0,24,6,23,0,130,21,0,0,0,9,21,0,1,21,0,0,132,0,0,21,38,21,9,1,121,21,23,0,135,2,4,0,128,21,0,0,0,5,21,0,82,3,6,0,121,3,83,1,82,4,7,0,46,21,4,3,8,211,0,0,26,17,4,8,85,7,17,0,82,23,17,0,82,23,23,0,19,23,23,18,135,21,14,0,23,17,0,0,82,4,7,0,53,21,4,3,220,210,0,0,82,3,6,0,135,21,9,0,3,0,0,0,119,0,66,1,1,21,68,30,85,10,21,0,1,21,168,30,85,2,21,0,1,23,1,0,107,10,84,23,135,23,0,0,0,10,0,0,1,23,56,32,85,0,23,0,106,2,1,40,1,23,232,0,94,23,2,23,1,21,228,0,94,21,2,21,4,23,23,21,32,23,23,8,121,23,46,0,1,23,0,0,132,0,0,23,1,21,200,1,106,24,0,4,135,23,3,0,21,4,24,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,3,0,1,17,27,0,119,0,33,0,1,23,56,32,85,4,23,0,106,3,1,12,1,23,0,0,132,0,0,23,0,7,16,0,0,8,5,0,25,9,7,40,116,7,8,0,25,7,7,4,25,8,8,4,54,23,7,9,180,211,0,0,1,24,27,0,135,23,11,0,24,2,4,3,16,0,0,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,5,0,135,2,4,0,135,23,5,0,4,0,0,0,119,0,6,0,135,23,5,0,4,0,0,0,1,17,29,0,119,0,2,0,1,17,29,0,32,23,17,29,121,23,248,0,25,4,1,48,82,2,4,0,106,23,1,52,45,23,2,23,104,212,0,0,1,23,0,0,132,0,0,23,1,24,52,2,25,21,1,44,135,23,3,0,24,21,0,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,22,0,1,17,27,0,119,0,229,0,1,23,0,0,132,0,0,23,1,21,200,1,106,24,0,4,135,23,3,0,21,2,24,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,3,0,1,17,27,0,119,0,215,0,1,23,56,32,85,2,23,0,82,23,4,0,25,23,23,8,85,4,23,0,1,23,0,0,132,0,0,23,1,24,247,3,1,21,1,0,135,23,23,0,24,1,21,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,3,0,1,17,27,0,119,0,196,0,82,3,4,0,26,2,3,8,26,10,3,8,85,4,10,0,82,21,10,0,82,21,21,0,19,21,21,18,135,23,14,0,21,10,0,0,82,3,4,0,53,23,3,2,244,212,0,0,1,23,0,0,132,0,0,23,1,21,54,2,106,24,0,4,135,23,3,0,21,24,5,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,3,0,1,17,27,0,119,0,170,0,82,23,11,0,82,24,12,0,45,23,23,24,108,213,0,0,137,13,0,0,139,0,0,0,1,23,0,0,85,16,23,0,1,24,0,0,109,16,4,24,1,23,0,0,109,16,8,23,1,23,0,0,132,0,0,23,1,23,58,1,1,24,16,0,135,2,8,0,23,24,0,0,130,24,0,0,0,12,24,0,1,24,0,0,132,0,0,24,38,24,12,1,121,24,3,0,135,2,4,0,119,0,144,0,85,16,2,0,2,23,0,0,16,0,0,128,109,16,8,23,1,24,11,0,109,16,4,24,0,7,2,0,2,8,0,0,239,172,0,0,25,9,7,11,78,24,8,0,83,7,24,0,25,7,7,1,25,8,8,1,54,24,7,9,228,213,0,0,1,23,0,0,107,2,11,23,1,24,0,0,109,15,8,24,25,3,15,11,1,24,7,0,83,3,24,0,2,24,0,0,251,172,0,0,78,24,24,0,83,15,24,0,2,23,0,0,252,172,0,0,78,23,23,0,107,15,1,23,2,24,0,0,253,172,0,0,78,24,24,0,107,15,2,24,2,23,0,0,254,172,0,0,78,23,23,0,107,15,3,23,2,24,0,0,255,172,0,0,78,24,24,0,107,15,4,24,2,23,0,0,0,173,0,0,78,23,23,0,107,15,5,23,2,24,0,0,1,173,0,0,78,24,24,0,107,15,6,24,1,23,0,0,107,15,7,23,1,23,0,0,85,14,23,0,1,24,0,0,109,14,4,24,1,23,0,0,109,14,8,23,1,23,0,0,132,0,0,23,1,23,58,1,1,24,48,0,135,2,8,0,23,24,0,0,130,24,0,0,0,12,24,0,1,24,0,0,132,0,0,24,38,24,12,1,121,24,3,0,135,2,4,0,119,0,59,0,85,14,2,0,109,14,8,20,1,23,36,0,109,14,4,23,0,7,2,0,2,8,0,0,69,177,0,0,25,9,7,36,78,23,8,0,83,7,23,0,25,7,7,1,25,8,8,1,54,23,7,9,0,215,0,0,1,24,0,0,107,2,36,24,1,24,0,0,132,0,0,24,1,23,10,0,1,21,1,0,135,24,10,0,23,1,16,15,14,21,0,0,130,24,0,0,0,1,24,0,1,24,0,0,132,0,0,24,38,24,1,1,121,24,10,0,135,2,4,0,1,24,0,0,102,21,14,11,56,24,24,21,200,215,0,0,82,21,14,0,135,24,9,0,21,0,0,0,119,0,21,0,102,24,14,11,34,24,24,0,121,24,4,0,82,21,14,0,135,24,9,0,21,0,0,0,78,24,3,0,34,24,24,0,121,24,4,0,82,21,15,0,135,24,9,0,21,0,0,0,102,24,16,11,34,24,24,0,121,24,4,0,82,21,16,0,135,24,9,0,21,0,0,0,137,13,0,0,139,0,0,0,78,24,3,0,34,24,24,0,121,24,4,0,82,21,15,0,135,24,9,0,21,0,0,0,102,24,16,11,34,24,24,0,121,24,4,0,82,21,16,0,135,24,9,0,21,0,0,0,32,24,17,27,121,24,2,0,135,2,4,0,135,24,5,0,0,0,0,0,0,17,2,0,135,24,6,0,17,0,0,0,135,24,9,0,10,0,0,0,0,17,2,0,135,24,6,0,17,0,0,0,139,0,0,0,140,2,27,0,0,0,0,0,2,20,0,0,197,1,0,0,2,21,0,0,19,2,0,0,2,22,0,0,24,1,0,0,1,18,0,0,136,23,0,0,0,11,23,0,136,23,0,0,1,24,176,0,3,23,23,24,137,23,0,0,1,23,156,0,3,19,11,23,1,23,144,0,3,7,11,23,1,23,132,0,3,10,11,23,25,12,11,48,25,15,11,8,25,16,11,120,25,17,11,108,25,13,11,96,0,8,11,0,1,23,204,1,3,9,1,23,82,3,9,0,120,3,8,0,1,24,0,0,135,23,0,0,0,24,0,0,1,23,56,32,85,0,23,0,137,11,0,0,139,0,0,0,106,23,1,16,102,23,23,25,121,23,74,0,1,23,0,0,85,19,23,0,1,24,0,0,109,19,4,24,1,23,0,0,109,19,8,23,135,4,17,0,3,0,0,0,1,23,239,255,48,23,23,4,8,217,0,0,135,23,53,0,19,0,0,0,35,23,4,11,121,23,8,0,107,19,11,4,120,4,3,0,0,2,19,0,119,0,16,0,0,2,19,0,1,18,9,0,119,0,13,0,25,23,4,16,38,23,23,240,0,18,23,0,135,2,12,0,18,0,0,0,85,19,2,0,2,24,0,0,0,0,0,128,20,24,18,24,109,19,8,24,109,19,4,4,1,18,9,0,32,24,18,9,121,24,3,0,135,24,18,0,2,3,4,0,1,23,0,0,95,2,4,23,1,23,0,0,132,0,0,23,1,23,213,3,1,24,33,0,135,2,23,0,23,19,24,0,130,24,0,0,0,14,24,0,1,24,0,0,132,0,0,24,38,24,14,1,120,24,12,0,102,24,19,11,34,24,24,0,121,24,4,0,82,23,19,0,135,24,9,0,23,0,0,0,82,23,9,0,135,24,54,0,23,0,0,0,85,9,2,0,119,0,11,0,135,2,4,0,102,24,19,11,34,24,24,0,121,24,4,0,82,23,19,0,135,24,9,0,23,0,0,0,0,19,2,0,135,24,6,0,19,0,0,0,1,24,156,1,3,6,1,24,102,2,6,11,41,24,2,24,42,24,24,24,34,24,24,0,121,24,4,0,1,24,160,1,94,2,1,24,119,0,4,0,1,24,255,0,19,24,2,24,0,2,24,0,120,2,32,0,1,24,0,0,85,19,24,0,1,23,0,0,109,19,4,23,1,24,0,0,109,19,8,24,1,23,5,0,107,19,11,23,2,23,0,0,56,205,0,0,78,23,23,0,83,19,23,0,2,24,0,0,57,205,0,0,78,24,24,0,107,19,1,24,2,23,0,0,58,205,0,0,78,23,23,0,107,19,2,23,2,24,0,0,59,205,0,0,78,24,24,0,107,19,3,24,2,23,0,0,60,205,0,0,78,23,23,0,107,19,4,23,1,24,0,0,107,19,5,24,119,0,3,0,135,24,27,0,19,6,0,0,25,2,1,20,1,24,0,0,132,0,0,24,1,23,204,3,135,24,23,0,23,2,19,0,130,24,0,0,0,14,24,0,1,24,0,0,132,0,0,24,38,24,14,1,121,24,11,0,135,2,4,0,102,24,19,11,34,24,24,0,121,24,4,0,82,23,19,0,135,24,9,0,23,0,0,0,0,19,2,0,135,24,6,0,19,0,0,0,102,24,19,11,34,24,24,0,121,24,4,0,82,23,19,0,135,24,9,0,23,0,0,0,1,24,0,0,85,7,24,0,1,23,0,0,109,7,4,23,1,24,0,0,109,7,8,24,25,3,7,11,1,24,1,0,83,3,24,0,1,24,46,0,83,7,24,0,1,23,0,0,107,7,1,23,1,23,0,0,132,0,0,23,1,24,183,1,135,23,1,0,24,10,0,0,130,23,0,0,0,14,23,0,1,23,0,0,132,0,0,23,38,23,14,1,121,23,4,0,135,2,4,0,1,18,78,0,119,0,126,1,1,23,0,0,132,0,0,23,1,24,14,0,135,23,11,0,24,19,2,7,10,0,0,0,130,23,0,0,0,14,23,0,1,23,0,0,132,0,0,23,38,23,14,1,121,23,13,0,135,2,4,0,1,23,0,0,102,24,10,11,49,23,23,24,220,219,0,0,1,18,78,0,119,0,107,1,82,24,10,0,135,23,9,0,24,0,0,0,1,18,78,0,119,0,102,1,102,23,10,11,34,23,23,0,121,23,4,0,82,24,10,0,135,23,9,0,24,0,0,0,78,23,3,0,34,23,23,0,121,23,4,0,82,24,7,0,135,23,9,0,24,0,0,0,25,14,19,11,1,23,0,0,132,0,0,23,1,23,65,1,78,25,14,0,34,25,25,0,121,25,4,0,82,25,19,0,0,24,25,0,119,0,2,0,0,24,19,0,135,3,8,0,23,24,0,0,130,24,0,0,0,5,24,0,1,24,0,0,132,0,0,24,38,24,5,1,121,24,3,0,1,18,81,0,119,0,60,1,85,7,3,0,1,24,220,0,3,4,1,24,82,5,4,0,1,24,224,0,94,24,1,24,45,24,5,24,208,220,0,0,1,24,0,0,132,0,0,24,1,23,24,2,1,25,216,0,3,25,1,25,135,24,3,0,23,25,7,0,130,24,0,0,0,5,24,0,1,24,0,0,132,0,0,24,38,24,5,1,121,24,7,0,1,18,81,0,119,0,37,1,85,5,3,0,82,24,4,0,25,24,24,4,85,4,24,0,102,24,2,11,34,24,24,0,121,24,2,0,82,2,2,0,1,24,208,1,3,5,1,24,1,24,0,0,132,0,0,24,1,24,6,0,82,25,7,0,82,23,9,0,82,26,5,0,135,2,55,0,24,2,25,23,26,0,0,0,130,26,0,0,0,7,26,0,1,26,0,0,132,0,0,26,38,26,7,1,121,26,3,0,1,18,82,0,119,0,7,1,85,10,2,0,3,3,1,22,82,4,3,0,1,26,28,1,94,26,1,26,45,26,4,26,144,221,0,0,1,26,0,0,132,0,0,26,1,23,20,1,3,23,1,23,135,26,3,0,21,23,10,0,130,26,0,0,0,10,26,0,1,26,0,0,132,0,0,26,38,26,10,1,121,26,7,0,1,18,82,0,119,0,242,0,85,4,2,0,82,26,3,0,25,26,26,4,85,3,26,0,1,26,0,0,132,0,0,26,135,26,3,0,20,16,6,0,130,26,0,0,0,10,26,0,1,26,0,0,132,0,0,26,38,26,10,1,121,26,3,0,135,2,4,0,119,0,226,0,1,26,0,0,85,17,26,0,1,23,0,0,109,17,4,23,1,26,0,0,109,17,8,26,25,4,17,11,1,26,1,0,83,4,26,0,1,26,46,0,83,17,26,0,1,23,0,0,107,17,1,23,1,23,0,0,132,0,0,23,1,26,93,0,135,23,7,0,26,15,16,17,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,3,0,135,2,4,0,119,0,187,0,1,23,0,0,132,0,0,23,135,23,3,0,20,13,6,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,3,0,135,2,4,0,119,0,154,0,1,23,0,0,132,0,0,23,1,26,94,0,135,23,7,0,26,12,15,13,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,3,0,135,2,4,0,119,0,134,0,82,10,5,0,116,8,9,0,109,8,4,10,1,23,0,0,132,0,0,23,1,26,15,0,1,25,0,0,135,23,11,0,26,1,12,8,25,0,0,0,130,23,0,0,0,10,23,0,1,23,0,0,132,0,0,23,38,23,10,1,121,23,31,0,135,2,4,0,25,3,12,36,102,23,3,11,34,23,23,0,121,23,4,0,82,25,3,0,135,23,9,0,25,0,0,0,25,3,12,24,102,23,3,11,34,23,23,0,121,23,4,0,82,25,3,0,135,23,9,0,25,0,0,0,25,3,12,12,102,23,3,11,34,23,23,0,121,23,4,0,82,25,3,0,135,23,9,0,25,0,0,0,1,23,0,0,102,25,12,11,56,23,23,25,176,224,0,0,82,25,12,0,135,23,9,0,25,0,0,0,119,0,88,0,25,2,12,36,102,23,2,11,34,23,23,0,121,23,4,0,82,25,2,0,135,23,9,0,25,0,0,0,25,2,12,24,102,23,2,11,34,23,23,0,121,23,4,0,82,25,2,0,135,23,9,0,25,0,0,0,25,2,12,12,102,23,2,11,34,23,23,0,121,23,4,0,82,25,2,0,135,23,9,0,25,0,0,0,102,23,12,11,34,23,23,0,121,23,4,0,82,25,12,0,135,23,9,0,25,0,0,0,102,23,13,11,34,23,23,0,121,23,4,0,82,25,13,0,135,23,9,0,25,0,0,0,25,2,15,24,102,23,2,11,34,23,23,0,121,23,4,0,82,25,2,0,135,23,9,0,25,0,0,0,25,2,15,12,102,23,2,11,34,23,23,0,121,23,4,0,82,25,2,0,135,23,9,0,25,0,0,0,102,23,15,11,34,23,23,0,121,23,4,0,82,25,15,0,135,23,9,0,25,0,0,0,78,23,4,0,34,23,23,0,121,23,4,0,82,25,17,0,135,23,9,0,25,0,0,0,102,23,16,11,34,23,23,0,121,23,4,0,82,25,16,0,135,23,9,0,25,0,0,0,1,23,0,0,132,0,0,23,82,25,1,0,106,25,25,12,135,23,3,0,25,0,1,0,130,23,0,0,0,18,23,0,1,23,0,0,132,0,0,23,38,23,18,1,121,23,3,0,1,18,82,0,119,0,50,0,78,23,14,0,34,23,23,0,121,23,4,0,82,25,19,0,135,23,9,0,25,0,0,0,137,11,0,0,139,0,0,0,1,23,0,0,102,25,13,11,56,23,23,25,204,224,0,0,82,25,13,0,135,23,9,0,25,0,0,0,25,3,15,24,102,23,3,11,34,23,23,0,121,23,4,0,82,25,3,0,135,23,9,0,25,0,0,0,25,3,15,12,102,23,3,11,34,23,23,0,121,23,4,0,82,25,3,0,135,23,9,0,25,0,0,0,1,23,0,0,102,25,15,11,56,23,23,25,32,225,0,0,82,25,15,0,135,23,9,0,25,0,0,0,78,23,4,0,34,23,23,0,121,23,4,0,82,25,17,0,135,23,9,0,25,0,0,0,1,23,0,0,102,25,16,11,56,23,23,25,84,225,0,0,82,25,16,0,135,23,9,0,25,0,0,0,32,23,18,82,121,23,2,0,135,2,4,0,32,23,18,81,121,23,2,0,135,2,4,0,78,23,14,0,34,23,23,0,121,23,4,0,82,25,19,0,135,23,9,0,25,0,0,0,32,23,18,78,121,23,7,0,78,23,3,0,34,23,23,0,121,23,4,0,82,25,7,0,135,23,9,0,25,0,0,0,0,19,2,0,135,23,6,0,19,0,0,0,139,0,0,0,140,1,23,0,0,0,0,0,2,16,0,0,200,1,0,0,2,17,0,0,160,0,0,0,2,18,0,0,200,27,0,0,1,7,0,0,136,19,0,0,0,15,19,0,136,19,0,0,25,19,19,64,137,19,0,0,25,11,15,44,25,10,15,32,25,9,15,24,25,8,15,8,0,14,15,0,120,0,4,0,1,14,1,0,137,15,0,0,139,14,0,0,82,19,0,0,1,22,0,0,1,21,2,0,138,19,22,21,56,226,0,0,20,234,0,0,1,14,255,255,137,15,0,0,139,14,0,0,119,0,252,1,106,12,0,4,120,12,4,0,1,14,1,0,137,15,0,0,139,14,0,0,106,6,0,8,120,6,4,0,1,14,1,0,137,15,0,0,139,14,0,0,106,1,12,84,121,1,4,0,0,14,1,0,137,15,0,0,139,14,0,0,1,20,44,1,97,6,20,0,1,20,1,0,85,0,20,0,1,20,0,0,132,0,0,20,1,20,214,3,106,21,12,28,2,22,0,0,79,94,1,0,135,3,23,0,20,21,22,0,130,22,0,0,0,5,22,0,1,22,0,0,132,0,0,22,38,22,5,1,121,22,3,0,1,7,26,0,119,0,64,1,1,22,0,0,85,11,22,0,1,21,0,0,109,11,4,21,1,22,0,0,109,11,8,22,135,4,17,0,3,0,0,0,1,22,239,255,48,22,22,4,20,227,0,0,1,22,0,0,132,0,0,22,1,21,171,1,135,22,1,0,21,11,0,0,1,22,0,0,132,0,0,22,1,7,26,0,119,0,44,1,35,22,4,11,121,22,8,0,107,11,11,4,120,4,3,0,0,1,11,0,119,0,27,0,0,1,11,0,1,7,14,0,119,0,24,0,25,22,4,16,38,22,22,240,0,2,22,0,1,22,0,0,132,0,0,22,1,22,58,1,135,1,8,0,22,2,0,0,130,22,0,0,0,7,22,0,1,22,0,0,132,0,0,22,38,22,7,1,121,22,3,0,1,7,26,0,119,0,19,1,85,11,1,0,2,21,0,0,0,0,0,128,20,21,2,21,109,11,8,21,109,11,4,4,1,7,14,0,32,21,7,14,121,21,3,0,135,21,18,0,1,3,4,0,1,22,0,0,95,1,4,22,1,22,0,0,132,0,0,22,1,22,214,3,106,21,12,32,2,20,0,0,79,94,1,0,135,3,23,0,22,21,20,0,130,20,0,0,0,5,20,0,1,20,0,0,132,0,0,20,38,20,5,1,121,20,3,0,1,7,27,0,119,0,232,0,1,20,0,0,85,10,20,0,1,21,0,0,109,10,4,21,1,20,0,0,109,10,8,20,135,4,17,0,3,0,0,0,1,20,239,255,48,20,20,4,60,228,0,0,1,20,0,0,132,0,0,20,1,21,171,1,135,20,1,0,21,10,0,0,1,20,0,0,132,0,0,20,1,7,27,0,119,0,212,0,35,20,4,11,121,20,8,0,107,10,11,4,120,4,3,0,0,1,10,0,119,0,27,0,0,1,10,0,1,7,22,0,119,0,24,0,25,20,4,16,38,20,20,240,0,2,20,0,1,20,0,0,132,0,0,20,1,20,58,1,135,1,8,0,20,2,0,0,130,20,0,0,0,7,20,0,1,20,0,0,132,0,0,20,38,20,7,1,121,20,3,0,1,7,27,0,119,0,187,0,85,10,1,0,2,21,0,0,0,0,0,128,20,21,2,21,109,10,8,21,109,10,4,4,1,7,22,0,32,21,7,22,121,21,3,0,135,21,18,0,1,3,4,0,1,20,0,0,95,1,4,20,106,20,12,72,32,1,20,2,1,20,0,0,132,0,0,20,82,21,6,0,106,21,21,8,135,20,3,0,21,9,6,0,130,20,0,0,0,5,20,0,1,20,0,0,132,0,0,20,38,20,5,1,121,20,5,0,1,20,0,0,135,1,20,0,20,0,0,0,119,0,150,0,25,5,9,4,82,20,5,0,120,20,17,0,1,20,0,0,132,0,0,20,1,21,0,0,135,20,3,0,16,14,21,0,130,20,0,0,0,8,20,0,1,20,0,0,132,0,0,20,38,20,8,1,121,20,114,0,1,20,0,0,135,1,20,0,20,0,0,0,1,7,57,0,119,0,109,0,1,20,0,0,132,0,0,20,1,21,49,0,106,22,6,32,135,20,11,0,21,8,6,1,22,0,0,0,130,20,0,0,0,6,20,0,1,20,0,0,132,0,0,20,38,20,6,1,121,20,5,0,1,20,0,0,135,1,20,0,20,0,0,0,119,0,91,0,1,20,0,0,132,0,0,20,25,20,12,116,1,22,0,0,135,1,2,0,17,8,20,22,130,22,0,0,0,6,22,0,1,22,0,0,132,0,0,22,38,22,6,1,121,22,26,0,1,22,0,0,135,1,20,0,22,0,0,0,82,2,8,0,120,2,2,0,119,0,73,0,25,4,8,4,82,3,4,0,46,22,3,2,52,230,0,0,26,3,3,12,85,4,3,0,102,22,3,11,34,22,22,0,121,22,5,0,82,20,3,0,135,22,9,0,20,0,0,0,82,3,4,0,53,22,3,2,4,230,0,0,82,2,8,0,135,22,9,0,2,0,0,0,119,0,54,0,32,4,1,0,82,1,8,0,121,1,19,0,25,3,8,4,82,2,3,0,46,22,2,1,140,230,0,0,26,2,2,12,85,3,2,0,102,22,2,11,34,22,22,0,121,22,5,0,82,20,2,0,135,22,9,0,20,0,0,0,82,2,3,0,53,22,2,1,92,230,0,0,82,1,8,0,135,22,9,0,1,0,0,0,121,4,15,0,1,22,4,0,135,8,42,0,22,0,0,0,135,22,56,0,8,0,0,0,1,22,0,0,132,0,0,22,1,20,74,0,1,21,152,1,135,22,7,0,20,8,18,21,1,22,0,0,132,0,0,22,119,0,13,0,1,22,0,0,132,0,0,22,82,21,5,0,135,22,3,0,16,14,21,0,130,22,0,0,0,8,22,0,1,22,0,0,132,0,0,22,38,22,8,1,120,22,2,0,119,0,7,0,1,22,0,0,135,1,20,0,22,0,0,0,1,7,57,0,119,0,2,0,1,7,57,0,32,22,7,57,121,22,4,0,135,22,5,0,9,0,0,0,119,0,18,0,1,22,56,32,85,14,22,0,135,22,5,0,9,0,0,0,102,22,10,11,34,22,22,0,121,22,4,0,82,21,10,0,135,22,9,0,21,0,0,0,102,22,11,11,34,22,22,0,121,22,25,0,82,21,11,0,135,22,9,0,21,0,0,0,119,0,21,0,102,22,10,11,34,22,22,0,121,22,4,0,82,21,10,0,135,22,9,0,21,0,0,0,32,22,7,27,121,22,4,0,1,22,0,0,135,1,20,0,22,0,0,0,102,22,11,11,34,22,22,0,121,22,6,0,82,21,11,0,135,22,9,0,21,0,0,0,1,7,62,0,119,0,2,0,1,7,62,0,32,22,7,26,121,22,5,0,1,22,0,0,135,1,20,0,22,0,0,0,1,7,62,0,32,22,7,62,121,22,110,0,135,22,57,0,1,0,0,0,1,22,0,0,132,0,0,22,1,21,140,1,135,22,8,0,21,12,0,0,130,22,0,0,0,11,22,0,1,22,0,0,132,0,0,22,38,22,11,1,121,22,69,0,1,22,0,0,135,11,20,0,22,0,0,0,135,22,57,0,11,0,0,0,1,22,0,0,132,0,0,22,1,21,140,1,135,22,8,0,21,12,0,0,130,22,0,0,0,12,22,0,1,22,0,0,132,0,0,22,38,22,12,1,121,22,21,0,135,1,4,0,1,22,0,0,132,0,0,22,1,21,4,0,135,22,58,0,21,0,0,0,130,22,0,0,0,12,22,0,1,22,0,0,132,0,0,22,38,22,12,1,121,22,7,0,1,22,0,0,135,12,20,0,22,0,0,0,135,22,21,0,12,0,0,0,119,0,16,0,0,13,1,0,119,0,14,0,1,22,0,0,132,0,0,22,1,21,4,0,135,22,58,0,21,0,0,0,130,22,0,0,0,13,22,0,1,22,0,0,132,0,0,22,38,22,13,1,120,22,2,0,119,0,21,0,135,13,4,0,1,22,0,0,132,0,0,22,1,21,4,0,135,22,58,0,21,0,0,0,130,22,0,0,0,12,22,0,1,22,0,0,132,0,0,22,38,22,12,1,121,22,7,0,1,22,0,0,135,13,20,0,22,0,0,0,135,22,21,0,13,0,0,0,119,0,3,0,135,22,59,0,13,0,0,0,1,22,0,0,132,0,0,22,1,21,4,0,135,22,58,0,21,0,0,0,130,22,0,0,0,13,22,0,1,22,0,0,132,0,0,22,38,22,13,1,120,22,15,0,1,22,0,0,132,0,0,22,1,21,0,0,135,22,3,0,16,14,21,0,130,22,0,0,0,13,22,0,1,22,0,0,132,0,0,22,38,22,13,1,120,22,4,0,1,22,56,32,85,14,22,0,119,0,4,0,135,13,4,0,135,22,59,0,13,0,0,0,25,2,0,12,46,22,2,14,252,233,0,0,25,1,0,16,82,22,1,0,121,22,17,0,1,22,0,0,132,0,0,22,1,21,172,1,135,22,1,0,21,2,0,0,130,22,0,0,0,0,22,0,1,22,0,0,132,0,0,22,38,22,0,1,121,22,6,0,135,15,4,0,135,22,5,0,14,0,0,0,135,22,6,0,15,0,0,0,25,0,14,4,116,1,0,0,1,22,0,0,85,0,22,0,135,22,5,0,14,0,0,0,1,14,0,0,137,15,0,0,139,14,0,0,119,0,1,0,1,14,0,0,137,15,0,0,139,14,0,0,119,0,2,254,1,19,0,0,139,19,0,0,140,1,9,0,0,0,0,0,120,0,3,0,1,4,1,0,139,4,0,0,106,1,0,84,121,1,3,0,0,4,1,0,139,4,0,0,25,2,0,120,82,5,2,0,121,5,38,0,1,5,212,1,135,1,12,0,5,0,0,0,1,5,0,0,132,0,0,5,1,6,178,2,135,5,3,0,6,1,0,0,130,5,0,0,0,4,5,0,1,5,0,0,132,0,0,5,38,5,4,1,121,5,7,0,135,4,4,0,135,5,9,0,1,0,0,0,135,5,6,0,4,0,0,0,119,0,18,0,1,5,8,68,85,1,5,0,1,5,204,1,82,6,2,0,97,1,5,6,25,4,0,124,1,6,208,1,82,5,4,0,97,1,6,5,1,5,0,0,85,2,5,0,1,5,0,0,85,4,5,0,134,4,0,0,104,238,0,0,0,1,0,0,139,4,0,0,1,5,8,0,135,1,42,0,5,0,0,0,1,5,0,0,132,0,0,5,1,6,234,1,2,7,0,0,201,200,0,0,135,5,3,0,6,1,7,0,130,5,0,0,0,2,5,0,1,5,0,0,132,0,0,5,38,5,2,1,121,5,8,0,1,5,0,0,135,2,20,0,5,0,0,0,135,5,43,0,1,0,0,0,0,1,2,0,119,0,13,0,1,5,0,0,132,0,0,5,1,7,74,0,1,6,232,27,1,8,157,1,135,5,7,0,7,1,6,8,1,5,0,0,132,0,0,5,1,5,0,0,135,1,20,0,5,0,0,0,135,5,57,0,1,0,0,0,1,5,0,0,132,0,0,5,1,5,140,1,135,1,8,0,5,0,0,0,130,5,0,0,0,2,5,0,1,5,0,0,132,0,0,5,38,5,2,1,121,5,71,0,1,5,0,0,135,1,20,0,5,0,0,0,135,5,57,0,1,0,0,0,1,5,0,0,132,0,0,5,1,5,140,1,135,1,8,0,5,0,0,0,130,5,0,0,0,0,5,0,1,5,0,0,132,0,0,5,38,5,0,1,121,5,21,0,135,1,4,0,1,5,0,0,132,0,0,5,1,8,4,0,135,5,58,0,8,0,0,0,130,5,0,0,0,0,5,0,1,5,0,0,132,0,0,5,38,5,0,1,121,5,7,0,1,5,0,0,135,0,20,0,5,0,0,0,135,5,21,0,0,0,0,0,119,0,17,0,0,4,1,0,119,0,15,0,1,5,0,0,132,0,0,5,1,8,4,0,135,5,58,0,8,0,0,0,130,5,0,0,0,4,5,0,1,5,0,0,132,0,0,5,38,5,4,1,120,5,3,0,0,3,1,0,119,0,23,0,135,4,4,0,1,5,0,0,132,0,0,5,1,8,4,0,135,5,58,0,8,0,0,0,130,5,0,0,0,0,5,0,1,5,0,0,132,0,0,5,38,5,0,1,121,5,7,0,1,5,0,0,135,4,20,0,5,0,0,0,135,5,21,0,4,0,0,0,119,0,5,0,135,5,6,0,4,0,0,0,119,0,2,0,0,3,1,0,135,5,60,0,39,5,3,1,0,4,5,0,139,4,0,0,140,17,26,0,0,0,0,0,135,0,61,0,0,0,0,0,121,2,8,0,135,19,62,0,0,0,0,0,1,17,0,0,0,18,19,0,135,19,63,0,19,0,0,0,119,0,7,0,135,19,64,0,0,0,0,0,0,17,19,0,1,18,0,0,135,19,65,0,19,0,0,0,135,0,66,0,19,0,0,0,1,20,255,255,47,20,20,5,64,237,0,0,135,20,67,0,0,5,0,0,135,20,68,0,0,4,0,0,135,20,69,0,0,6,0,0,135,20,70,0,0,9,0,0,135,20,71,0,0,8,0,0,135,20,72,0,0,10,0,0,135,20,73,0,0,7,0,0,135,20,74,0,0,15,0,0,135,20,75,0,0,16,0,0,135,20,76,0,0,13,0,0,135,20,77,0,0,14,0,0,135,20,78,0,0,1,0,0,135,20,79,0,0,12,0,0,135,20,80,0,0,11,0,0,121,3,14,0,1,20,1,0,135,9,81,0,20,0,0,0,1,21,0,0,1,23,161,0,59,24,0,0,1,25,0,0,135,22,82,0,23,24,25,0,135,20,83,0,9,21,22,0,135,20,84,0,0,9,0,0,121,2,4,0,135,0,85,0,18,0,0,0,119,0,4,0,134,0,0,0,44,234,0,0,17,0,0,0,120,0,11,0,135,8,86,0,19,0,0,0,135,9,87,0,19,0,0,0,1,22,0,0,135,21,88,0,19,0,0,0,135,20,89,0,22,8,9,21,119,0,8,0,135,9,90,0,19,0,0,0,1,21,1,0,135,22,91,0,19,0,0,0,135,20,92,0,21,9,22,0,121,2,5,0,135,20,93,0,18,0,0,0,139,0,0,0,119,0,4,0,135,20,94,0,17,0,0,0,139,0,0,0,139,0,0,0,140,2,7,0,0,0,0,0,135,2,95,0,0,1,0,0,1,5,0,0,132,0,0,5,1,6,143,1,135,5,8,0,6,2,0,0,130,5,0,0,0,1,5,0,1,5,0,0,132,0,0,5,38,5,1,1,120,5,17,0,1,5,0,0,132,0,0,5,1,6,144,1,135,5,8,0,6,2,0,0,130,5,0,0,0,1,5,0,1,5,0,0,132,0,0,5,38,5,1,1,120,5,6,0,135,5,96,0,2,0,0,0,25,3,0,84,82,3,3,0,139,3,0,0,1,5,0,0,135,1,20,0,5,0,0,0,135,5,57,0,1,0,0,0,1,5,0,0,132,0,0,5,1,6,140,1,135,5,8,0,6,0,0,0,130,5,0,0,0,1,5,0,1,5,0,0,132,0,0,5,38,5,1,1,121,5,69,0,1,5,0,0,135,1,20,0,5,0,0,0,135,5,57,0,1,0,0,0,1,5,0,0,132,0,0,5,1,6,140,1,135,5,8,0,6,0,0,0,130,5,0,0,0,1,5,0,1,5,0,0,132,0,0,5,38,5,1,1,121,5,21,0,135,1,4,0,1,5,0,0,132,0,0,5,1,6,4,0,135,5,58,0,6,0,0,0,130,5,0,0,0,4,5,0,1,5,0,0,132,0,0,5,38,5,4,1,121,5,7,0,1,5,0,0,135,4,20,0,5,0,0,0,135,5,21,0,4,0,0,0,119,0,16,0,0,3,1,0,119,0,14,0,1,5,0,0,132,0,0,5,1,6,4,0,135,5,58,0,6,0,0,0,130,5,0,0,0,4,5,0,1,5,0,0,132,0,0,5,38,5,4,1,120,5,2,0,119,0,21,0,135,3,4,0,1,5,0,0,132,0,0,5,1,6,4,0,135,5,58,0,6,0,0,0,130,5,0,0],eb+51200),HEAPU8.set([0,4,5,0,1,5,0,0,132,0,0,5,38,5,4,1,121,5,7,0,1,5,0,0,135,4,20,0,5,0,0,0,135,5,21,0,4,0,0,0,119,0,3,0,135,5,6,0,3,0,0,0,135,5,60,0,135,5,96,0,2,0,0,0,25,4,0,84,82,4,4,0,139,4,0,0,140,2,9,0,0,0,0,0,25,2,0,76,25,3,0,80,82,6,3,0,82,7,2,0,50,6,6,7,116,240,0,0,1,6,1,0,139,6,0,0,135,6,97,0,0,0,0,0,1,7,1,0,1,8,0,0,135,6,98,0,0,7,8,0,1,8,1,0,1,7,0,0,135,6,99,0,0,8,7,0,120,6,47,0,82,4,2,0,135,5,100,0,4,0,0,0,125,6,5,5,4,0,0,0,135,4,101,0,6,0,0,0,32,7,4,0,121,7,4,0,1,7,1,0,0,6,7,0,119,0,4,0,82,7,3,0,16,7,7,4,0,6,7,0,120,6,3,0,1,0,7,0,119,0,36,0,82,5,2,0,135,4,100,0,5,0,0,0,125,5,4,4,5,0,0,0,78,7,5,0,32,7,7,125,121,7,4,0,25,7,5,1,0,6,7,0,119,0,3,0,1,7,0,0,0,6,7,0,0,5,6,0,32,7,5,0,121,7,4,0,1,7,1,0,0,6,7,0,119,0,4,0,82,7,3,0,16,7,7,5,0,6,7,0,120,6,3,0,1,0,7,0,119,0,11,0,134,6,0,0,0,0,0,0,0,1,0,0,82,6,3,0,82,7,2,0,50,6,6,7,112,241,0,0,1,0,7,0,119,0,2,0,119,0,193,255,32,6,0,7,121,6,3,0,1,6,1,0,139,6,0,0,1,6,0,0,139,6,0,0,140,3,9,0,0,0,0,0,1,6,2,0,135,8,102,0,2,0,0,0,135,7,103,0,8,0,0,0,135,5,92,0,6,0,7,0,1,7,3,0,1,6,0,0,135,5,104,0,7,6,0,0,120,5,9,0,1,6,20,0,135,5,105,0,6,0,0,0,1,6,3,0,1,7,0,0,135,5,104,0,6,7,0,0,121,5,249,255,1,5,4,0,1,7,0,0,135,1,104,0,5,7,0,0,121,1,17,0,1,7,1,0,135,4,106,0,7,0,0,0,1,7,0,0,1,5,0,0,135,0,107,0,0,7,5,0,85,4,0,0,135,7,61,0,1,0,0,0,1,6,0,0,1,8,0,0,135,5,108,0,0,7,6,8,0,0,4,0,139,0,0,0,1,5,5,0,1,8,0,0,135,1,104,0,5,8,0,0,1,8,6,0,1,5,0,0,135,3,104,0,8,5,0,0,20,5,3,1,120,5,3,0,1,0,0,0,139,0,0,0,1,5,1,0,135,4,106,0,5,0,0,0,125,5,1,1,0,0,0,0,135,2,61,0,5,0,0,0,120,3,3,0,1,1,0,0,119,0,3,0,135,1,61,0,3,0,0,0,1,5,0,0,135,0,107,0,2,1,5,0,85,4,0,0,0,0,4,0,139,0,0,0],eb+61440);var e=[];e=e.concat([3536,3560,3564,3568,3572,3576,3580,3584,3972,4064,4100,4248,4648,4748,4836,5156,5212,5232,5264,5296,5312,6052,6344,6424,6556,6892,7240,7392,7408,7512,7600,7684,7996,8020,9524,9616,11968,12132,12424,12504,12652,13148,13364,13588,14084,14168,14352,14396,15008,15104,15260,15356,15456,15540,15864,16040,16128,16656,16660,16664,16668,16672,16676,16680,16684,16688,16692,16696,16700,16704,16708,16712,16716,16720,16724,16728,16732,16736,16740,16744,16748,16752,16756,16760,16764,16768,16772,16776,16780,16784,16788,16792,16796,16800,16804,16808,16812,16816,16820,16824,16828,16832,16836,16840,16844,16848,16852,16856,16860,16864,16868,16872,16876,16880,16884,16888,16940,16944,17068,17228,17344,17700,17796,17912,18088,18560,18676,19092,19188,19300,19576,19696,19720,19928,20264,20420,20424,20428,20432,20436,20440,20444,20448,20452,20456,20460,20464,20468,20472,20476,20480,20484,20488,20492,20496,20500,20504,20508,20512,20516,20520,20524,20528,20532,20536,20540,20544,20548,20552,20556,20560,20564,20568,20572,20576,20580,20584,20588,20592,20596,20600,20604,20608,20612,20616,20620,20624,20628,20632,20636,20640,20644,20648,20652,20656,20660,20664,20668,20672,20676,20680,20684,20688,20692,20696,20700,20704,20708,20712,20716,20720,20724,20728,20732,20736,20740,20744,20748,20752,20756,20760,20764,20768,20772,20776,20780,20784,20788,20792,20796,20800,20804,20808,20812,20816,20820,20824,20828,20832,20836,20840,20844,20848,20852,20856,20860,20864,20868,20872,20876,20880,20884,20888,20892,20896,20900,20904,20908,20912,20916,20920,20924,20928,20932,20936,20940,20944,20948,20952,20956,20960,20964,20968,20972,20976,20980,20984,20988,20992,20996,21e3,21004,21008,21012,21016,21020,21024,21028,21032,21036,21040,21044,21048,21052,21056,21060,21064,21068,21072,21076,21080,21084,21088,21092,21096,21100,21104,21108,21112,21116,21120,21124,21128,21132,21136,21140,21144,21148,21152,21156,21160,21164,21168,21172,21176,21180,21184,21188,21192,21196,21200,21204,21208,21212,21216,21220,21224,21228,21468,21512,22488,22724,22728,22732,22736,22740,22744,22748,22752,22756,22760,22764,22768,22772,22776,22780,22784,22788,22792,22796,22800,22804,22808,22812,22816,22820,22824,22828,22832,22836,22840,22844,22848,22852,22856,22860,22864,22868,22872,22876,22880,22884,22888,22892,22896,22900,22904,22908,22912,22916,22920,22924,22928,22932,22936,22940,22944,22948,22952,22956,22960,22964,22968,22972,22976,22980,22984,22988,23304,23488,23888,24060,24200,24316,24472,24656,24684,24688,24692,24696,24700,24704,24708,24712,24716,24720,24724,24728,24732,24736,24740,24744,24748,24752,24756,24760,24764,24768,24772,24776,24780,24784,24788,24792,24796,24800,24804,24808,24812,24816,24820,24824,24828,24832,24836,24840,24844,24848,24852,24856,24860,24864,24868,24872,24876,24880,24884,24888,24892,24896,24900,24904,24908,24912,24916,24920,24924,24928,24932,25144,25328,25340,25368,25420,25448,25468,25488,25536,25600,25656,25696,25700,25704,25708,25712,25716,25720,25724,25728,25732,25736,25740,25744,25748,25752,25756,25760,25764,25768,25772,25776,25780,25784,25788,25792,25796,25800,25804,25808,25812,25816,25820,25824,25828,25832,25836,25840,25844,25848,25852,25856,25860,25864,25868,25872,25876,25880,25884,25888,25892,25896,25900,25904,25908,25912,25916,25920,25924,25928,25932,25936,25940,25944,25948,25952,25956,25960,25964,25968,25972,25976,25980,25984,25988,25992,25996,26e3,26004,26008,26012,26016,26020,26024,26028,26032,26036,26040,26044,26048,26052,26056,26060,26064,26068,26072,26076,26080,26084,26088,26092,26096,26100,26104,26108,26112,26116,26120,26124,26128,26132,26136,26140,26144,26148,26152,26156,26160,26164,26168,26172,26176,26180,26184,26188,26192,26196,26200,26204,26208,26212,26216,26220,26224,26228,26232,26236,26240,26244,26248,26252,26256,26260,26264,26268,26272,26276,26280,26284,26288,26292,26296,26300,26304,26308,26312,26316,26320,26324,26328,26332,26336,26340,26344,26348,26352,26356,26360,26364,26368,26372,26376,26380,26384,26388,26392,26396,26400,26404,26408,26412,26416,26420,26424,26428,26432,26908,26936,26964,27124,27180,27196,27220,27236,27260,27284,27308,27364,27704,27984,28124,28148,28884,29236,29336,29420,29652,29772,30004,30088,30260,30304,30644,30820,30904,31072,31232,31404,31596,31788,31892,32360,32416,32528,32556,32588,32608,32740,33032,33116,33300,33392,33536,33820,33888,34140,35444,36072,36204,36264,36396,36512,36620,36752,36912,37564,37756,37812,37868,38240,38296,38460,38488,38492,38496,38500,38504,38508,38512,38516,38520,38524,38528,38532,38536,38540,38544,38548,38552,38556,38560,38564,38568,38572,38576,38580,38584,38588,38592,38596,38600,38604,38608,38612,38616,38620,38624,38628,38632,38636,38640,38644,38648,38652,38656,38660,38664,38668,38672,38676,38680,38684,38688,38692,38696,38700,38704,38708,38712,38716,38720,38724,38728,38732,38736,38740,38744,38748,38752,38756,38760,38764,38768,38772,38776,38780,38784,38788,38792,38796,38800,38804,38808,38812,38816,38820,38824,38828,38832,38836,38840,38844,38848,38852,38856,38860,38864,38868,38872,38876,38880,38884,38888,38892,38896,38900,38904,38908,38912,38916,38920,38924,38928,38932,38936,38940,38944,38948,38952,38956,38960,38964,38968,38972,38976,38980,38984,38988,38992,38996,39e3,39004,39008,39012,39016,39020,39024,39028,39032,39036,39040,39044,39048,39052,39056,39060,39064,39068,39072,39076,39080,39084,39088,39092,39096,39100,39104,39108,39112,39116,39120,39124,39128,39132,39136,39140,39144,39148,39152,39156,39160,39164,39168,39172,39176,39180,39184,39188,39192,39196,39200,39204,39208,39212,39216,39220,39224,39228,39232,39236,39240,39244,39248,39252,39256,39260,39264,39268,39272,39276,39280,39284,39288,39292,39296,39300,39304,39308,39312,39316,39320,39324,40388,40412,40536,40644,40696,40760,40776,40872,40892,41120,41196,41284,41412,41584,41692,41836,41928,41952,42040,42480,43036,43100,43528,43572,43668,43888,44492,44796,44868,44912,44972,45068,45132,45176,45380,45424,45524,45944,46108,46332,47352,48228,48296,48436,48716,48796,48992,49076,49240,49284,49360,49660,49816,50020,50300,50380,50576,50772,51920,52144,52200,52516,52984,53056,53224,53264,53328,53472,53520,53728,53812,53976,54016,54212,54316,54552,54624,54776,55060,55140,55548,56272,56464,56660,57152,57532,57616,57668,57888,57892,58092,58388,58880,58924,58968,59012,59804,60724,61544,61796,60132,60916,61776]);for(var n=0;n<e.length;n++)HEAPU32[eb+e[n]>>2]=HEAPU32[eb+e[n]>>2]+eb});var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function(e){if(!e||EXCEPTIONS.infos[e])return e;for(var n in EXCEPTIONS.infos){if(EXCEPTIONS.infos[n].adjusted===e)return n}return e},addRef:function(e){e&&EXCEPTIONS.infos[e].refcount++},decRef:function(e){if(e){var n=EXCEPTIONS.infos[e];assert(n.refcount>0),n.refcount--,0!==n.refcount||n.rethrown||(n.destructor&&Module.dynCall_vi(n.destructor,e),delete EXCEPTIONS.infos[e],___cxa_free_exception(e))}},clearRef:function(e){e&&(EXCEPTIONS.infos[e].refcount=0)}};function ___cxa_begin_catch(e){var n=EXCEPTIONS.infos[e];return n&&!n.caught&&(n.caught=!0,__ZSt18uncaught_exceptionv.uncaught_exception--),n&&(n.rethrown=!1),EXCEPTIONS.caught.push(e),EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(e)),e}function ___cxa_call_unexpected(e){throw Module.printErr("Unexpected exception thrown, this is not properly supported - aborting"),ABORT=!0,e}function ___cxa_free_exception(e){try{return _free(e)}catch(e){}}function ___cxa_end_catch(){Module.setThrew(0);var e=EXCEPTIONS.caught.pop();e&&(EXCEPTIONS.decRef(EXCEPTIONS.deAdjust(e)),EXCEPTIONS.last=0)}function ___cxa_find_matching_catch_2(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_3(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_4(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_6(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_find_matching_catch_8(){return ___cxa_find_matching_catch.apply(null,arguments)}function ___cxa_get_exception_ptr(e){return e}function ___cxa_pure_virtual(){throw ABORT=!0,"Pure virtual function called!"}function ___cxa_rethrow(){var e=EXCEPTIONS.caught.pop();throw EXCEPTIONS.infos[e].rethrown||(EXCEPTIONS.caught.push(e),EXCEPTIONS.infos[e].rethrown=!0),EXCEPTIONS.last=e,e}function ___resumeException(e){throw EXCEPTIONS.last||(EXCEPTIONS.last=e),e}function ___cxa_find_matching_catch(){var e=EXCEPTIONS.last;if(!e)return 0|(setTempRet0(0),0);var n=EXCEPTIONS.infos[e],t=n.type;if(!t)return 0|(setTempRet0(0),e);var r=Array.prototype.slice.call(arguments);Module.___cxa_is_pointer_type(t);___cxa_find_matching_catch.buffer||(___cxa_find_matching_catch.buffer=_malloc(4)),HEAP32[___cxa_find_matching_catch.buffer>>2]=e,e=___cxa_find_matching_catch.buffer;for(var o=0;o<r.length;o++)if(r[o]&&Module.___cxa_can_catch(r[o],t,e))return e=HEAP32[e>>2],n.adjusted=e,0|(setTempRet0(r[o]),e);return e=HEAP32[e>>2],0|(setTempRet0(t),e)}function ___cxa_throw(e,n,t){throw EXCEPTIONS.infos[e]={ptr:e,adjusted:e,type:n,destructor:t,refcount:0,caught:!1,rethrown:!1},EXCEPTIONS.last=e,"uncaught_exception"in __ZSt18uncaught_exceptionv?__ZSt18uncaught_exceptionv.uncaught_exception++:__ZSt18uncaught_exceptionv.uncaught_exception=1,e}function ___lock(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function ___setErrNo(e){return Module.___errno_location&&(HEAP32[Module.___errno_location()>>2]=e),e}function ___map_file(e,n){return ___setErrNo(ERRNO_CODES.EPERM),-1}var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"},PATH={splitPath:function(e){return/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(e).slice(1)},normalizeArray:function(e,n){for(var t=0,r=e.length-1;r>=0;r--){var o=e[r];"."===o?e.splice(r,1):".."===o?(e.splice(r,1),t++):t&&(e.splice(r,1),t--)}if(n)for(;t;t--)e.unshift("..");return e},normalize:function(e){var n="/"===e.charAt(0),t="/"===e.substr(-1);return(e=PATH.normalizeArray(e.split("/").filter(function(e){return!!e}),!n).join("/"))||n||(e="."),e&&t&&(e+="/"),(n?"/":"")+e},dirname:function(e){var n=PATH.splitPath(e),t=n[0],r=n[1];return t||r?(r&&(r=r.substr(0,r.length-1)),t+r):"."},basename:function(e){if("/"===e)return"/";var n=e.lastIndexOf("/");return-1===n?e:e.substr(n+1)},extname:function(e){return PATH.splitPath(e)[3]},join:function(){var e=Array.prototype.slice.call(arguments,0);return PATH.normalize(e.join("/"))},join2:function(e,n){return PATH.normalize(e+"/"+n)},resolve:function(){for(var e="",n=!1,t=arguments.length-1;t>=-1&&!n;t--){var r=t>=0?arguments[t]:FS.cwd();if("string"!=typeof r)throw new TypeError("Arguments to path.resolve must be strings");if(!r)return"";e=r+"/"+e,n="/"===r.charAt(0)}return e=PATH.normalizeArray(e.split("/").filter(function(e){return!!e}),!n).join("/"),(n?"/":"")+e||"."},relative:function(e,n){function t(e){for(var n=0;n<e.length&&""===e[n];n++);for(var t=e.length-1;t>=0&&""===e[t];t--);return n>t?[]:e.slice(n,t-n+1)}e=PATH.resolve(e).substr(1),n=PATH.resolve(n).substr(1);for(var r=t(e.split("/")),o=t(n.split("/")),i=Math.min(r.length,o.length),a=i,s=0;s<i;s++)if(r[s]!==o[s]){a=s;break}var u=[];for(s=a;s<r.length;s++)u.push("..");return(u=u.concat(o.slice(a))).join("/")}},TTY={ttys:[],init:function(){},shutdown:function(){},register:function(e,n){TTY.ttys[e]={input:[],output:[],ops:n},FS.registerDevice(e,TTY.stream_ops)},stream_ops:{open:function(e){var n=TTY.ttys[e.node.rdev];if(!n)throw new FS.ErrnoError(ERRNO_CODES.ENODEV);e.tty=n,e.seekable=!1},close:function(e){e.tty.ops.flush(e.tty)},flush:function(e){e.tty.ops.flush(e.tty)},read:function(e,n,t,r,o){if(!e.tty||!e.tty.ops.get_char)throw new FS.ErrnoError(ERRNO_CODES.ENXIO);for(var i=0,a=0;a<r;a++){var s;try{s=e.tty.ops.get_char(e.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(void 0===s&&0===i)throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);if(null===s||void 0===s)break;i++,n[t+a]=s}return i&&(e.node.timestamp=Date.now()),i},write:function(e,n,t,r,o){if(!e.tty||!e.tty.ops.put_char)throw new FS.ErrnoError(ERRNO_CODES.ENXIO);for(var i=0;i<r;i++)try{e.tty.ops.put_char(e.tty,n[t+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return r&&(e.node.timestamp=Date.now()),i}},default_tty_ops:{get_char:function(e){if(!e.input.length){var n=null;if(ENVIRONMENT_IS_NODE){var t=new Buffer(256),r=0,o="win32"!=process.platform,i=process.stdin.fd;if(o){var a=!1;try{i=fs.openSync("/dev/stdin","r"),a=!0}catch(e){}}try{r=fs.readSync(i,t,0,256,null)}catch(e){if(-1==e.toString().indexOf("EOF"))throw e;r=0}a&&fs.closeSync(i),n=r>0?t.slice(0,r).toString("utf-8"):null}else"undefined"!=typeof window&&"function"==typeof window.prompt?null!==(n=window.prompt("Input: "))&&(n+="\n"):"function"==typeof readline&&null!==(n=readline())&&(n+="\n");if(!n)return null;e.input=intArrayFromString(n,!0)}return e.input.shift()},put_char:function(e,n){null===n||10===n?(Module.print(UTF8ArrayToString(e.output,0)),e.output=[]):0!=n&&e.output.push(n)},flush:function(e){e.output&&e.output.length>0&&(Module.print(UTF8ArrayToString(e.output,0)),e.output=[])}},default_tty1_ops:{put_char:function(e,n){null===n||10===n?(Module.printErr(UTF8ArrayToString(e.output,0)),e.output=[]):0!=n&&e.output.push(n)},flush:function(e){e.output&&e.output.length>0&&(Module.printErr(UTF8ArrayToString(e.output,0)),e.output=[])}}},MEMFS={ops_table:null,mount:function(e){return MEMFS.createNode(null,"/",16895,0)},createNode:function(e,n,t,r){if(FS.isBlkdev(t)||FS.isFIFO(t))throw new FS.ErrnoError(ERRNO_CODES.EPERM);MEMFS.ops_table||(MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}});var o=FS.createNode(e,n,t,r);return FS.isDir(o.mode)?(o.node_ops=MEMFS.ops_table.dir.node,o.stream_ops=MEMFS.ops_table.dir.stream,o.contents={}):FS.isFile(o.mode)?(o.node_ops=MEMFS.ops_table.file.node,o.stream_ops=MEMFS.ops_table.file.stream,o.usedBytes=0,o.contents=null):FS.isLink(o.mode)?(o.node_ops=MEMFS.ops_table.link.node,o.stream_ops=MEMFS.ops_table.link.stream):FS.isChrdev(o.mode)&&(o.node_ops=MEMFS.ops_table.chrdev.node,o.stream_ops=MEMFS.ops_table.chrdev.stream),o.timestamp=Date.now(),e&&(e.contents[n]=o),o},getFileDataAsRegularArray:function(e){if(e.contents&&e.contents.subarray){for(var n=[],t=0;t<e.usedBytes;++t)n.push(e.contents[t]);return n}return e.contents},getFileDataAsTypedArray:function(e){return e.contents?e.contents.subarray?e.contents.subarray(0,e.usedBytes):new Uint8Array(e.contents):new Uint8Array},expandFileStorage:function(e,n){if(e.contents&&e.contents.subarray&&n>e.contents.length&&(e.contents=MEMFS.getFileDataAsRegularArray(e),e.usedBytes=e.contents.length),!e.contents||e.contents.subarray){var t=e.contents?e.contents.length:0;if(t>=n)return;n=Math.max(n,t*(t<1048576?2:1.125)|0),0!=t&&(n=Math.max(n,256));var r=e.contents;return e.contents=new Uint8Array(n),void(e.usedBytes>0&&e.contents.set(r.subarray(0,e.usedBytes),0))}for(!e.contents&&n>0&&(e.contents=[]);e.contents.length<n;)e.contents.push(0)},resizeFileStorage:function(e,n){if(e.usedBytes!=n){if(0==n)return e.contents=null,void(e.usedBytes=0);if(!e.contents||e.contents.subarray){var t=e.contents;return e.contents=new Uint8Array(new ArrayBuffer(n)),t&&e.contents.set(t.subarray(0,Math.min(n,e.usedBytes))),void(e.usedBytes=n)}if(e.contents||(e.contents=[]),e.contents.length>n)e.contents.length=n;else for(;e.contents.length<n;)e.contents.push(0);e.usedBytes=n}},node_ops:{getattr:function(e){var n={};return n.dev=FS.isChrdev(e.mode)?e.id:1,n.ino=e.id,n.mode=e.mode,n.nlink=1,n.uid=0,n.gid=0,n.rdev=e.rdev,FS.isDir(e.mode)?n.size=4096:FS.isFile(e.mode)?n.size=e.usedBytes:FS.isLink(e.mode)?n.size=e.link.length:n.size=0,n.atime=new Date(e.timestamp),n.mtime=new Date(e.timestamp),n.ctime=new Date(e.timestamp),n.blksize=4096,n.blocks=Math.ceil(n.size/n.blksize),n},setattr:function(e,n){void 0!==n.mode&&(e.mode=n.mode),void 0!==n.timestamp&&(e.timestamp=n.timestamp),void 0!==n.size&&MEMFS.resizeFileStorage(e,n.size)},lookup:function(e,n){throw FS.genericErrors[ERRNO_CODES.ENOENT]},mknod:function(e,n,t,r){return MEMFS.createNode(e,n,t,r)},rename:function(e,n,t){if(FS.isDir(e.mode)){var r;try{r=FS.lookupNode(n,t)}catch(e){}if(r)for(var o in r.contents)throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete e.parent.contents[e.name],e.name=t,n.contents[t]=e,e.parent=n},unlink:function(e,n){delete e.contents[n]},rmdir:function(e,n){var t=FS.lookupNode(e,n);for(var r in t.contents)throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);delete e.contents[n]},readdir:function(e){var n=[".",".."];for(var t in e.contents)e.contents.hasOwnProperty(t)&&n.push(t);return n},symlink:function(e,n,t){var r=MEMFS.createNode(e,n,41471,0);return r.link=t,r},readlink:function(e){if(!FS.isLink(e.mode))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return e.link}},stream_ops:{read:function(e,n,t,r,o){var i=e.node.contents;if(o>=e.node.usedBytes)return 0;var a=Math.min(e.node.usedBytes-o,r);if(assert(a>=0),a>8&&i.subarray)n.set(i.subarray(o,o+a),t);else for(var s=0;s<a;s++)n[t+s]=i[o+s];return a},write:function(e,n,t,r,o,i){if(!r)return 0;var a=e.node;if(a.timestamp=Date.now(),n.subarray&&(!a.contents||a.contents.subarray)){if(i)return a.contents=n.subarray(t,t+r),a.usedBytes=r,r;if(0===a.usedBytes&&0===o)return a.contents=new Uint8Array(n.subarray(t,t+r)),a.usedBytes=r,r;if(o+r<=a.usedBytes)return a.contents.set(n.subarray(t,t+r),o),r}if(MEMFS.expandFileStorage(a,o+r),a.contents.subarray&&n.subarray)a.contents.set(n.subarray(t,t+r),o);else for(var s=0;s<r;s++)a.contents[o+s]=n[t+s];return a.usedBytes=Math.max(a.usedBytes,o+r),r},llseek:function(e,n,t){var r=n;if(1===t?r+=e.position:2===t&&FS.isFile(e.node.mode)&&(r+=e.node.usedBytes),r<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return r},allocate:function(e,n,t){MEMFS.expandFileStorage(e.node,n+t),e.node.usedBytes=Math.max(e.node.usedBytes,n+t)},mmap:function(e,n,t,r,o,i,a){if(!FS.isFile(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENODEV);var s,u,l=e.node.contents;if(2&a||l.buffer!==n&&l.buffer!==n.buffer){if((o>0||o+r<e.node.usedBytes)&&(l=l.subarray?l.subarray(o,o+r):Array.prototype.slice.call(l,o,o+r)),u=!0,!(s=_malloc(r)))throw new FS.ErrnoError(ERRNO_CODES.ENOMEM);n.set(l,s)}else u=!1,s=l.byteOffset;return{ptr:s,allocated:u}},msync:function(e,n,t,r,o){if(!FS.isFile(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENODEV);if(2&o)return 0;MEMFS.stream_ops.write(e,n,0,r,t,!1);return 0}}},IDBFS={dbs:{},indexedDB:function(){if("undefined"!=typeof indexedDB)return indexedDB;var e=null;return"object"==typeof window&&(e=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB),assert(e,"IDBFS used, but indexedDB not supported"),e},DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function(e){return MEMFS.mount.apply(null,arguments)},syncfs:function(e,n,t){IDBFS.getLocalSet(e,function(r,o){if(r)return t(r);IDBFS.getRemoteSet(e,function(e,r){if(e)return t(e);var i=n?r:o,a=n?o:r;IDBFS.reconcile(i,a,t)})})},getDB:function(e,n){var t,r=IDBFS.dbs[e];if(r)return n(null,r);try{t=IDBFS.indexedDB().open(e,IDBFS.DB_VERSION)}catch(e){return n(e)}if(!t)return n("Unable to connect to IndexedDB");t.onupgradeneeded=function(e){var n,t=e.target.result,r=e.target.transaction;(n=t.objectStoreNames.contains(IDBFS.DB_STORE_NAME)?r.objectStore(IDBFS.DB_STORE_NAME):t.createObjectStore(IDBFS.DB_STORE_NAME)).indexNames.contains("timestamp")||n.createIndex("timestamp","timestamp",{unique:!1})},t.onsuccess=function(){r=t.result,IDBFS.dbs[e]=r,n(null,r)},t.onerror=function(e){n(this.error),e.preventDefault()}},getLocalSet:function(e,n){var t={};function r(e){return"."!==e&&".."!==e}function o(e){return function(n){return PATH.join2(e,n)}}for(var i=FS.readdir(e.mountpoint).filter(r).map(o(e.mountpoint));i.length;){var a,s=i.pop();try{a=FS.stat(s)}catch(e){return n(e)}FS.isDir(a.mode)&&i.push.apply(i,FS.readdir(s).filter(r).map(o(s))),t[s]={timestamp:a.mtime}}return n(null,{type:"local",entries:t})},getRemoteSet:function(e,n){var t={};IDBFS.getDB(e.mountpoint,function(e,r){if(e)return n(e);try{var o=r.transaction([IDBFS.DB_STORE_NAME],"readonly");o.onerror=function(e){n(this.error),e.preventDefault()},o.objectStore(IDBFS.DB_STORE_NAME).index("timestamp").openKeyCursor().onsuccess=function(e){var o=e.target.result;if(!o)return n(null,{type:"remote",db:r,entries:t});t[o.primaryKey]={timestamp:o.key},o.continue()}}catch(e){return n(e)}})},loadLocalEntry:function(e,n){var t,r;try{r=FS.lookupPath(e).node,t=FS.stat(e)}catch(e){return n(e)}return FS.isDir(t.mode)?n(null,{timestamp:t.mtime,mode:t.mode}):FS.isFile(t.mode)?(r.contents=MEMFS.getFileDataAsTypedArray(r),n(null,{timestamp:t.mtime,mode:t.mode,contents:r.contents})):n(new Error("node type not supported"))},storeLocalEntry:function(e,n,t){try{if(FS.isDir(n.mode))FS.mkdir(e,n.mode);else{if(!FS.isFile(n.mode))return t(new Error("node type not supported"));FS.writeFile(e,n.contents,{canOwn:!0})}FS.chmod(e,n.mode),FS.utime(e,n.timestamp,n.timestamp)}catch(e){return t(e)}t(null)},removeLocalEntry:function(e,n){try{FS.lookupPath(e);var t=FS.stat(e);FS.isDir(t.mode)?FS.rmdir(e):FS.isFile(t.mode)&&FS.unlink(e)}catch(e){return n(e)}n(null)},loadRemoteEntry:function(e,n,t){var r=e.get(n);r.onsuccess=function(e){t(null,e.target.result)},r.onerror=function(e){t(this.error),e.preventDefault()}},storeRemoteEntry:function(e,n,t,r){var o=e.put(t,n);o.onsuccess=function(){r(null)},o.onerror=function(e){r(this.error),e.preventDefault()}},removeRemoteEntry:function(e,n,t){var r=e.delete(n);r.onsuccess=function(){t(null)},r.onerror=function(e){t(this.error),e.preventDefault()}},reconcile:function(e,n,t){var r=0,o=[];Object.keys(e.entries).forEach(function(t){var i=e.entries[t],a=n.entries[t];(!a||i.timestamp>a.timestamp)&&(o.push(t),r++)});var i=[];if(Object.keys(n.entries).forEach(function(t){n.entries[t];e.entries[t]||(i.push(t),r++)}),!r)return t(null);var a=0,s=("remote"===e.type?e.db:n.db).transaction([IDBFS.DB_STORE_NAME],"readwrite"),u=s.objectStore(IDBFS.DB_STORE_NAME);function l(e){return e?l.errored?void 0:(l.errored=!0,t(e)):++a>=r?t(null):void 0}s.onerror=function(e){l(this.error),e.preventDefault()},o.sort().forEach(function(e){"local"===n.type?IDBFS.loadRemoteEntry(u,e,function(n,t){if(n)return l(n);IDBFS.storeLocalEntry(e,t,l)}):IDBFS.loadLocalEntry(e,function(n,t){if(n)return l(n);IDBFS.storeRemoteEntry(u,e,t,l)})}),i.sort().reverse().forEach(function(e){"local"===n.type?IDBFS.removeLocalEntry(e,l):IDBFS.removeRemoteEntry(u,e,l)})}},NODEFS={isWindows:!1,staticInit:function(){NODEFS.isWindows=!!process.platform.match(/^win/);var e=process.binding("constants");e.fs&&(e=e.fs),NODEFS.flagsForNodeMap={1024:e.O_APPEND,64:e.O_CREAT,128:e.O_EXCL,0:e.O_RDONLY,2:e.O_RDWR,4096:e.O_SYNC,512:e.O_TRUNC,1:e.O_WRONLY}},bufferFrom:function(e){return Buffer.alloc?Buffer.from(e):new Buffer(e)},mount:function(e){return assert(ENVIRONMENT_IS_NODE),NODEFS.createNode(null,"/",NODEFS.getMode(e.opts.root),0)},createNode:function(e,n,t,r){if(!FS.isDir(t)&&!FS.isFile(t)&&!FS.isLink(t))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var o=FS.createNode(e,n,t);return o.node_ops=NODEFS.node_ops,o.stream_ops=NODEFS.stream_ops,o},getMode:function(e){var n;try{n=fs.lstatSync(e),NODEFS.isWindows&&(n.mode=n.mode|(292&n.mode)>>2)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return n.mode},realPath:function(e){for(var n=[];e.parent!==e;)n.push(e.name),e=e.parent;return n.push(e.mount.opts.root),n.reverse(),PATH.join.apply(null,n)},flagsForNode:function(e){e&=-2097153,e&=-2049,e&=-32769,e&=-524289;var n=0;for(var t in NODEFS.flagsForNodeMap)e&t&&(n|=NODEFS.flagsForNodeMap[t],e^=t);if(e)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return n},node_ops:{getattr:function(e){var n,t=NODEFS.realPath(e);try{n=fs.lstatSync(t)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return NODEFS.isWindows&&!n.blksize&&(n.blksize=4096),NODEFS.isWindows&&!n.blocks&&(n.blocks=(n.size+n.blksize-1)/n.blksize|0),{dev:n.dev,ino:n.ino,mode:n.mode,nlink:n.nlink,uid:n.uid,gid:n.gid,rdev:n.rdev,size:n.size,atime:n.atime,mtime:n.mtime,ctime:n.ctime,blksize:n.blksize,blocks:n.blocks}},setattr:function(e,n){var t=NODEFS.realPath(e);try{if(void 0!==n.mode&&(fs.chmodSync(t,n.mode),e.mode=n.mode),void 0!==n.timestamp){var r=new Date(n.timestamp);fs.utimesSync(t,r,r)}void 0!==n.size&&fs.truncateSync(t,n.size)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},lookup:function(e,n){var t=PATH.join2(NODEFS.realPath(e),n),r=NODEFS.getMode(t);return NODEFS.createNode(e,n,r)},mknod:function(e,n,t,r){var o=NODEFS.createNode(e,n,t,r),i=NODEFS.realPath(o);try{FS.isDir(o.mode)?fs.mkdirSync(i,o.mode):fs.writeFileSync(i,"",{mode:o.mode})}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return o},rename:function(e,n,t){var r=NODEFS.realPath(e),o=PATH.join2(NODEFS.realPath(n),t);try{fs.renameSync(r,o)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},unlink:function(e,n){var t=PATH.join2(NODEFS.realPath(e),n);try{fs.unlinkSync(t)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},rmdir:function(e,n){var t=PATH.join2(NODEFS.realPath(e),n);try{fs.rmdirSync(t)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},readdir:function(e){var n=NODEFS.realPath(e);try{return fs.readdirSync(n)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},symlink:function(e,n,t){var r=PATH.join2(NODEFS.realPath(e),n);try{fs.symlinkSync(t,r)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},readlink:function(e){var n=NODEFS.realPath(e);try{return n=fs.readlinkSync(n),n=NODEJS_PATH.relative(NODEJS_PATH.resolve(e.mount.opts.root),n)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}},stream_ops:{open:function(e){var n=NODEFS.realPath(e.node);try{FS.isFile(e.node.mode)&&(e.nfd=fs.openSync(n,NODEFS.flagsForNode(e.flags)))}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},close:function(e){try{FS.isFile(e.node.mode)&&e.nfd&&fs.closeSync(e.nfd)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}},read:function(e,n,t,r,o){if(0===r)return 0;try{return fs.readSync(e.nfd,NODEFS.bufferFrom(n.buffer),t,r,o)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}},write:function(e,n,t,r,o){try{return fs.writeSync(e.nfd,NODEFS.bufferFrom(n.buffer),t,r,o)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}},llseek:function(e,n,t){var r=n;if(1===t)r+=e.position;else if(2===t&&FS.isFile(e.node.mode))try{r+=fs.fstatSync(e.nfd).size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(r<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return r}}},WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function(e){assert(ENVIRONMENT_IS_WORKER),WORKERFS.reader||(WORKERFS.reader=new FileReaderSync);var n=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0),t={};function r(e){for(var r=e.split("/"),o=n,i=0;i<r.length-1;i++){var a=r.slice(0,i+1).join("/");t[a]||(t[a]=WORKERFS.createNode(o,r[i],WORKERFS.DIR_MODE,0)),o=t[a]}return o}function o(e){var n=e.split("/");return n[n.length-1]}return Array.prototype.forEach.call(e.opts.files||[],function(e){WORKERFS.createNode(r(e.name),o(e.name),WORKERFS.FILE_MODE,0,e,e.lastModifiedDate)}),(e.opts.blobs||[]).forEach(function(e){WORKERFS.createNode(r(e.name),o(e.name),WORKERFS.FILE_MODE,0,e.data)}),(e.opts.packages||[]).forEach(function(e){e.metadata.files.forEach(function(n){var t=n.filename.substr(1);WORKERFS.createNode(r(t),o(t),WORKERFS.FILE_MODE,0,e.blob.slice(n.start,n.end))})}),n},createNode:function(e,n,t,r,o,i){var a=FS.createNode(e,n,t);return a.mode=t,a.node_ops=WORKERFS.node_ops,a.stream_ops=WORKERFS.stream_ops,a.timestamp=(i||new Date).getTime(),assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE),t===WORKERFS.FILE_MODE?(a.size=o.size,a.contents=o):(a.size=4096,a.contents={}),e&&(e.contents[n]=a),a},node_ops:{getattr:function(e){return{dev:1,ino:void 0,mode:e.mode,nlink:1,uid:0,gid:0,rdev:void 0,size:e.size,atime:new Date(e.timestamp),mtime:new Date(e.timestamp),ctime:new Date(e.timestamp),blksize:4096,blocks:Math.ceil(e.size/4096)}},setattr:function(e,n){void 0!==n.mode&&(e.mode=n.mode),void 0!==n.timestamp&&(e.timestamp=n.timestamp)},lookup:function(e,n){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)},mknod:function(e,n,t,r){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},rename:function(e,n,t){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},unlink:function(e,n){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},rmdir:function(e,n){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},readdir:function(e){var n=[".",".."];for(var t in e.contents)e.contents.hasOwnProperty(t)&&n.push(t);return n},symlink:function(e,n,t){throw new FS.ErrnoError(ERRNO_CODES.EPERM)},readlink:function(e){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}},stream_ops:{read:function(e,n,t,r,o){if(o>=e.node.size)return 0;var i=e.node.contents.slice(o,o+r),a=WORKERFS.reader.readAsArrayBuffer(i);return n.set(new Uint8Array(a),t),i.size},write:function(e,n,t,r,o){throw new FS.ErrnoError(ERRNO_CODES.EIO)},llseek:function(e,n,t){var r=n;if(1===t?r+=e.position:2===t&&FS.isFile(e.node.mode)&&(r+=e.node.size),r<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return r}}};STATICTOP+=16,STATICTOP+=16,STATICTOP+=16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:!1,ignorePermissions:!0,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)},lookupPath:function(e,n){if(e=PATH.resolve(FS.cwd(),e),n=n||{},!e)return{path:"",node:null};var t={follow_mount:!0,recurse_count:0};for(var r in t)void 0===n[r]&&(n[r]=t[r]);if(n.recurse_count>8)throw new FS.ErrnoError(ERRNO_CODES.ELOOP);for(var o=PATH.normalizeArray(e.split("/").filter(function(e){return!!e}),!1),i=FS.root,a="/",s=0;s<o.length;s++){var u=s===o.length-1;if(u&&n.parent)break;if(i=FS.lookupNode(i,o[s]),a=PATH.join2(a,o[s]),FS.isMountpoint(i)&&(!u||u&&n.follow_mount)&&(i=i.mounted.root),!u||n.follow)for(var l=0;FS.isLink(i.mode);){var c=FS.readlink(a);if(a=PATH.resolve(PATH.dirname(a),c),i=FS.lookupPath(a,{recurse_count:n.recurse_count}).node,l++>40)throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}return{path:a,node:i}},getPath:function(e){for(var n;;){if(FS.isRoot(e)){var t=e.mount.mountpoint;return n?"/"!==t[t.length-1]?t+"/"+n:t+n:t}n=n?e.name+"/"+n:e.name,e=e.parent}},hashName:function(e,n){for(var t=0,r=0;r<n.length;r++)t=(t<<5)-t+n.charCodeAt(r)|0;return(e+t>>>0)%FS.nameTable.length},hashAddNode:function(e){var n=FS.hashName(e.parent.id,e.name);e.name_next=FS.nameTable[n],FS.nameTable[n]=e},hashRemoveNode:function(e){var n=FS.hashName(e.parent.id,e.name);if(FS.nameTable[n]===e)FS.nameTable[n]=e.name_next;else for(var t=FS.nameTable[n];t;){if(t.name_next===e){t.name_next=e.name_next;break}t=t.name_next}},lookupNode:function(e,n){var t=FS.mayLookup(e);if(t)throw new FS.ErrnoError(t,e);for(var r=FS.hashName(e.id,n),o=FS.nameTable[r];o;o=o.name_next){var i=o.name;if(o.parent.id===e.id&&i===n)return o}return FS.lookup(e,n)},createNode:function(e,n,t,r){if(!FS.FSNode){FS.FSNode=function(e,n,t,r){e||(e=this),this.parent=e,this.mount=e.mount,this.mounted=null,this.id=FS.nextInode++,this.name=n,this.mode=t,this.node_ops={},this.stream_ops={},this.rdev=r},FS.FSNode.prototype={};Object.defineProperties(FS.FSNode.prototype,{read:{get:function(){return 365==(365&this.mode)},set:function(e){e?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146==(146&this.mode)},set:function(e){e?this.mode|=146:this.mode&=-147}},isFolder:{get:function(){return FS.isDir(this.mode)}},isDevice:{get:function(){return FS.isChrdev(this.mode)}}})}var o=new FS.FSNode(e,n,t,r);return FS.hashAddNode(o),o},destroyNode:function(e){FS.hashRemoveNode(e)},isRoot:function(e){return e===e.parent},isMountpoint:function(e){return!!e.mounted},isFile:function(e){return 32768==(61440&e)},isDir:function(e){return 16384==(61440&e)},isLink:function(e){return 40960==(61440&e)},isChrdev:function(e){return 8192==(61440&e)},isBlkdev:function(e){return 24576==(61440&e)},isFIFO:function(e){return 4096==(61440&e)},isSocket:function(e){return 49152==(49152&e)},flagModes:{r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function(e){var n=FS.flagModes[e];if(void 0===n)throw new Error("Unknown file open mode: "+e);return n},flagsToPermissionString:function(e){var n=["r","w","rw"][3&e];return 512&e&&(n+="w"),n},nodePermissions:function(e,n){return FS.ignorePermissions?0:(-1===n.indexOf("r")||292&e.mode)&&(-1===n.indexOf("w")||146&e.mode)&&(-1===n.indexOf("x")||73&e.mode)?0:ERRNO_CODES.EACCES},mayLookup:function(e){var n=FS.nodePermissions(e,"x");return n||(e.node_ops.lookup?0:ERRNO_CODES.EACCES)},mayCreate:function(e,n){try{FS.lookupNode(e,n);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(e,"wx")},mayDelete:function(e,n,t){var r;try{r=FS.lookupNode(e,n)}catch(e){return e.errno}var o=FS.nodePermissions(e,"wx");if(o)return o;if(t){if(!FS.isDir(r.mode))return ERRNO_CODES.ENOTDIR;if(FS.isRoot(r)||FS.getPath(r)===FS.cwd())return ERRNO_CODES.EBUSY}else if(FS.isDir(r.mode))return ERRNO_CODES.EISDIR;return 0},mayOpen:function(e,n){return e?FS.isLink(e.mode)?ERRNO_CODES.ELOOP:FS.isDir(e.mode)&&("r"!==FS.flagsToPermissionString(n)||512&n)?ERRNO_CODES.EISDIR:FS.nodePermissions(e,FS.flagsToPermissionString(n)):ERRNO_CODES.ENOENT},MAX_OPEN_FDS:4096,nextfd:function(e,n){e=e||0,n=n||FS.MAX_OPEN_FDS;for(var t=e;t<=n;t++)if(!FS.streams[t])return t;throw new FS.ErrnoError(ERRNO_CODES.EMFILE)},getStream:function(e){return FS.streams[e]},createStream:function(e,n,t){FS.FSStream||(FS.FSStream=function(){},FS.FSStream.prototype={},Object.defineProperties(FS.FSStream.prototype,{object:{get:function(){return this.node},set:function(e){this.node=e}},isRead:{get:function(){return 1!=(2097155&this.flags)}},isWrite:{get:function(){return 0!=(2097155&this.flags)}},isAppend:{get:function(){return 1024&this.flags}}}));var r=new FS.FSStream;for(var o in e)r[o]=e[o];e=r;var i=FS.nextfd(n,t);return e.fd=i,FS.streams[i]=e,e},closeStream:function(e){FS.streams[e]=null},chrdev_stream_ops:{open:function(e){var n=FS.getDevice(e.node.rdev);e.stream_ops=n.stream_ops,e.stream_ops.open&&e.stream_ops.open(e)},llseek:function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}},major:function(e){return e>>8},minor:function(e){return 255&e},makedev:function(e,n){return e<<8|n},registerDevice:function(e,n){FS.devices[e]={stream_ops:n}},getDevice:function(e){return FS.devices[e]},getMounts:function(e){for(var n=[],t=[e];t.length;){var r=t.pop();n.push(r),t.push.apply(t,r.mounts)}return n},syncfs:function(e,n){"function"==typeof e&&(n=e,e=!1),FS.syncFSRequests++,FS.syncFSRequests>1&&console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work");var t=FS.getMounts(FS.root.mount),r=0;function o(e){return assert(FS.syncFSRequests>0),FS.syncFSRequests--,n(e)}function i(e){if(e)return i.errored?void 0:(i.errored=!0,o(e));++r>=t.length&&o(null)}t.forEach(function(n){if(!n.type.syncfs)return i(null);n.type.syncfs(n,e,i)})},mount:function(e,n,t){var r,o="/"===t,i=!t;if(o&&FS.root)throw new FS.ErrnoError(ERRNO_CODES.EBUSY);if(!o&&!i){var a=FS.lookupPath(t,{follow_mount:!1});if(t=a.path,r=a.node,FS.isMountpoint(r))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);if(!FS.isDir(r.mode))throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var s={type:e,opts:n,mountpoint:t,mounts:[]},u=e.mount(s);return u.mount=s,s.root=u,o?FS.root=u:r&&(r.mounted=s,r.mount&&r.mount.mounts.push(s)),u},unmount:function(e){var n=FS.lookupPath(e,{follow_mount:!1});if(!FS.isMountpoint(n.node))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var t=n.node,r=t.mounted,o=FS.getMounts(r);Object.keys(FS.nameTable).forEach(function(e){for(var n=FS.nameTable[e];n;){var t=n.name_next;-1!==o.indexOf(n.mount)&&FS.destroyNode(n),n=t}}),t.mounted=null;var i=t.mount.mounts.indexOf(r);assert(-1!==i),t.mount.mounts.splice(i,1)},lookup:function(e,n){return e.node_ops.lookup(e,n)},mknod:function(e,n,t){var r=FS.lookupPath(e,{parent:!0}).node,o=PATH.basename(e);if(!o||"."===o||".."===o)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var i=FS.mayCreate(r,o);if(i)throw new FS.ErrnoError(i);if(!r.node_ops.mknod)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return r.node_ops.mknod(r,o,n,t)},create:function(e,n){return n=void 0!==n?n:438,n&=4095,n|=32768,FS.mknod(e,n,0)},mkdir:function(e,n){return n=void 0!==n?n:511,n&=1023,n|=16384,FS.mknod(e,n,0)},mkdirTree:function(e,n){for(var t=e.split("/"),r="",o=0;o<t.length;++o)if(t[o]){r+="/"+t[o];try{FS.mkdir(r,n)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}},mkdev:function(e,n,t){return void 0===t&&(t=n,n=438),n|=8192,FS.mknod(e,n,t)},symlink:function(e,n){if(!PATH.resolve(e))throw new FS.ErrnoError(ERRNO_CODES.ENOENT);var t=FS.lookupPath(n,{parent:!0}).node;if(!t)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);var r=PATH.basename(n),o=FS.mayCreate(t,r);if(o)throw new FS.ErrnoError(o);if(!t.node_ops.symlink)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return t.node_ops.symlink(t,r,e)},rename:function(e,n){var t,r,o=PATH.dirname(e),i=PATH.dirname(n),a=PATH.basename(e),s=PATH.basename(n);try{t=FS.lookupPath(e,{parent:!0}).node,r=FS.lookupPath(n,{parent:!0}).node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!t||!r)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(t.mount!==r.mount)throw new FS.ErrnoError(ERRNO_CODES.EXDEV);var u,l=FS.lookupNode(t,a),c=PATH.relative(e,i);if("."!==c.charAt(0))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if("."!==(c=PATH.relative(n,o)).charAt(0))throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY);try{u=FS.lookupNode(r,s)}catch(e){}if(l!==u){var _=FS.isDir(l.mode),d=FS.mayDelete(t,a,_);if(d)throw new FS.ErrnoError(d);if(d=u?FS.mayDelete(r,s,_):FS.mayCreate(r,s))throw new FS.ErrnoError(d);if(!t.node_ops.rename)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(l)||u&&FS.isMountpoint(u))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);if(r!==t&&(d=FS.nodePermissions(t,"w")))throw new FS.ErrnoError(d);try{FS.trackingDelegate.willMovePath&&FS.trackingDelegate.willMovePath(e,n)}catch(t){console.log("FS.trackingDelegate['willMovePath']('"+e+"', '"+n+"') threw an exception: "+t.message)}FS.hashRemoveNode(l);try{t.node_ops.rename(l,r,s)}catch(e){throw e}finally{FS.hashAddNode(l)}try{FS.trackingDelegate.onMovePath&&FS.trackingDelegate.onMovePath(e,n)}catch(t){console.log("FS.trackingDelegate['onMovePath']('"+e+"', '"+n+"') threw an exception: "+t.message)}}},rmdir:function(e){var n=FS.lookupPath(e,{parent:!0}).node,t=PATH.basename(e),r=FS.lookupNode(n,t),o=FS.mayDelete(n,t,!0);if(o)throw new FS.ErrnoError(o);if(!n.node_ops.rmdir)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(r))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);try{FS.trackingDelegate.willDeletePath&&FS.trackingDelegate.willDeletePath(e)}catch(n){console.log("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+n.message)}n.node_ops.rmdir(n,t),FS.destroyNode(r);try{FS.trackingDelegate.onDeletePath&&FS.trackingDelegate.onDeletePath(e)}catch(n){console.log("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+n.message)}},readdir:function(e){var n=FS.lookupPath(e,{follow:!0}).node;if(!n.node_ops.readdir)throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);return n.node_ops.readdir(n)},unlink:function(e){var n=FS.lookupPath(e,{parent:!0}).node,t=PATH.basename(e),r=FS.lookupNode(n,t),o=FS.mayDelete(n,t,!1);if(o)throw new FS.ErrnoError(o);if(!n.node_ops.unlink)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isMountpoint(r))throw new FS.ErrnoError(ERRNO_CODES.EBUSY);try{FS.trackingDelegate.willDeletePath&&FS.trackingDelegate.willDeletePath(e)}catch(n){console.log("FS.trackingDelegate['willDeletePath']('"+e+"') threw an exception: "+n.message)}n.node_ops.unlink(n,t),FS.destroyNode(r);try{FS.trackingDelegate.onDeletePath&&FS.trackingDelegate.onDeletePath(e)}catch(n){console.log("FS.trackingDelegate['onDeletePath']('"+e+"') threw an exception: "+n.message)}},readlink:function(e){var n=FS.lookupPath(e).node;if(!n)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(!n.node_ops.readlink)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);return PATH.resolve(FS.getPath(n.parent),n.node_ops.readlink(n))},stat:function(e,n){var t=FS.lookupPath(e,{follow:!n}).node;if(!t)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(!t.node_ops.getattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);return t.node_ops.getattr(t)},lstat:function(e){return FS.stat(e,!0)},chmod:function(e,n,t){var r;"string"==typeof e?r=FS.lookupPath(e,{follow:!t}).node:r=e;if(!r.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);r.node_ops.setattr(r,{mode:4095&n|-4096&r.mode,timestamp:Date.now()})},lchmod:function(e,n){FS.chmod(e,n,!0)},fchmod:function(e,n){var t=FS.getStream(e);if(!t)throw new FS.ErrnoError(ERRNO_CODES.EBADF);FS.chmod(t.node,n)},chown:function(e,n,t,r){var o;"string"==typeof e?o=FS.lookupPath(e,{follow:!r}).node:o=e;if(!o.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);o.node_ops.setattr(o,{timestamp:Date.now()})},lchown:function(e,n,t){FS.chown(e,n,t,!0)},fchown:function(e,n,t){var r=FS.getStream(e);if(!r)throw new FS.ErrnoError(ERRNO_CODES.EBADF);FS.chown(r.node,n,t)},truncate:function(e,n){if(n<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var t;"string"==typeof e?t=FS.lookupPath(e,{follow:!0}).node:t=e;if(!t.node_ops.setattr)throw new FS.ErrnoError(ERRNO_CODES.EPERM);if(FS.isDir(t.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!FS.isFile(t.mode))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var r=FS.nodePermissions(t,"w");if(r)throw new FS.ErrnoError(r);t.node_ops.setattr(t,{size:n,timestamp:Date.now()})},ftruncate:function(e,n){var t=FS.getStream(e);if(!t)throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(0==(2097155&t.flags))throw new FS.ErrnoError(ERRNO_CODES.EINVAL);FS.truncate(t.node,n)},utime:function(e,n,t){var r=FS.lookupPath(e,{follow:!0}).node;r.node_ops.setattr(r,{timestamp:Math.max(n,t)})},open:function(e,n,t,r,o){if(""===e)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);var i;if(n="string"==typeof n?FS.modeStringToFlags(n):n,t=void 0===t?438:t,t=64&n?4095&t|32768:0,"object"==typeof e)i=e;else{e=PATH.normalize(e);try{i=FS.lookupPath(e,{follow:!(131072&n)}).node}catch(e){}}var a=!1;if(64&n)if(i){if(128&n)throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}else i=FS.mknod(e,t,0),a=!0;if(!i)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(FS.isChrdev(i.mode)&&(n&=-513),65536&n&&!FS.isDir(i.mode))throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);if(!a){var s=FS.mayOpen(i,n);if(s)throw new FS.ErrnoError(s)}512&n&&FS.truncate(i,0),n&=-641;var u=FS.createStream({node:i,path:FS.getPath(i),flags:n,seekable:!0,position:0,stream_ops:i.stream_ops,ungotten:[],error:!1},r,o);u.stream_ops.open&&u.stream_ops.open(u),!Module.logReadFiles||1&n||(FS.readFiles||(FS.readFiles={}),e in FS.readFiles||(FS.readFiles[e]=1,Module.printErr("read file: "+e)));try{if(FS.trackingDelegate.onOpenFile){var l=0;1!=(2097155&n)&&(l|=FS.tracking.openFlags.READ),0!=(2097155&n)&&(l|=FS.tracking.openFlags.WRITE),FS.trackingDelegate.onOpenFile(e,l)}}catch(n){console.log("FS.trackingDelegate['onOpenFile']('"+e+"', flags) threw an exception: "+n.message)}return u},close:function(e){e.getdents&&(e.getdents=null);try{e.stream_ops.close&&e.stream_ops.close(e)}catch(e){throw e}finally{FS.closeStream(e.fd)}},llseek:function(e,n,t){if(!e.seekable||!e.stream_ops.llseek)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE);return e.position=e.stream_ops.llseek(e,n,t),e.ungotten=[],e.position},read:function(e,n,t,r,o){if(r<0||o<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(1==(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(FS.isDir(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!e.stream_ops.read)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);var i=void 0!==o;if(i){if(!e.seekable)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}else o=e.position;var a=e.stream_ops.read(e,n,t,r,o);return i||(e.position+=a),a},write:function(e,n,t,r,o,i){if(r<0||o<0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(0==(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(FS.isDir(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.EISDIR);if(!e.stream_ops.write)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);1024&e.flags&&FS.llseek(e,0,2);var a=void 0!==o;if(a){if(!e.seekable)throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}else o=e.position;var s=e.stream_ops.write(e,n,t,r,o,i);a||(e.position+=s);try{e.path&&FS.trackingDelegate.onWriteToFile&&FS.trackingDelegate.onWriteToFile(e.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return s},allocate:function(e,n,t){if(n<0||t<=0)throw new FS.ErrnoError(ERRNO_CODES.EINVAL);if(0==(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EBADF);if(!FS.isFile(e.node.mode)&&!FS.isDir(e.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENODEV);if(!e.stream_ops.allocate)throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP);e.stream_ops.allocate(e,n,t)},mmap:function(e,n,t,r,o,i,a){if(1==(2097155&e.flags))throw new FS.ErrnoError(ERRNO_CODES.EACCES);if(!e.stream_ops.mmap)throw new FS.ErrnoError(ERRNO_CODES.ENODEV);return e.stream_ops.mmap(e,n,t,r,o,i,a)},msync:function(e,n,t,r,o){return e&&e.stream_ops.msync?e.stream_ops.msync(e,n,t,r,o):0},munmap:function(e){return 0},ioctl:function(e,n,t){if(!e.stream_ops.ioctl)throw new FS.ErrnoError(ERRNO_CODES.ENOTTY);return e.stream_ops.ioctl(e,n,t)},readFile:function(e,n){if((n=n||{}).flags=n.flags||"r",n.encoding=n.encoding||"binary","utf8"!==n.encoding&&"binary"!==n.encoding)throw new Error('Invalid encoding type "'+n.encoding+'"');var t,r=FS.open(e,n.flags),o=FS.stat(e).size,i=new Uint8Array(o);return FS.read(r,i,0,o,0),"utf8"===n.encoding?t=UTF8ArrayToString(i,0):"binary"===n.encoding&&(t=i),FS.close(r),t},writeFile:function(e,n,t){(t=t||{}).flags=t.flags||"w";var r=FS.open(e,t.flags,t.mode);if("string"==typeof n){var o=new Uint8Array(lengthBytesUTF8(n)+1),i=stringToUTF8Array(n,o,0,o.length);FS.write(r,o,0,i,void 0,t.canOwn)}else{if(!ArrayBuffer.isView(n))throw new Error("Unsupported data type");FS.write(r,n,0,n.byteLength,void 0,t.canOwn)}FS.close(r)},cwd:function(){return FS.currentPath},chdir:function(e){var n=FS.lookupPath(e,{follow:!0});if(null===n.node)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(!FS.isDir(n.node.mode))throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR);var t=FS.nodePermissions(n.node,"x");if(t)throw new FS.ErrnoError(t);FS.currentPath=n.path},createDefaultDirectories:function(){FS.mkdir("/tmp"),FS.mkdir("/home"),FS.mkdir("/home/web_user")},createDefaultDevices:function(){var e;if(FS.mkdir("/dev"),FS.registerDevice(FS.makedev(1,3),{read:function(){return 0},write:function(e,n,t,r,o){return r}}),FS.mkdev("/dev/null",FS.makedev(1,3)),TTY.register(FS.makedev(5,0),TTY.default_tty_ops),TTY.register(FS.makedev(6,0),TTY.default_tty1_ops),FS.mkdev("/dev/tty",FS.makedev(5,0)),FS.mkdev("/dev/tty1",FS.makedev(6,0)),"undefined"!=typeof crypto){var n=new Uint8Array(1);e=function(){return crypto.getRandomValues(n),n[0]}}else e=ENVIRONMENT_IS_NODE?function(){return require("crypto").randomBytes(1)[0]}:function(){return 256*Math.random()|0};FS.createDevice("/dev","random",e),FS.createDevice("/dev","urandom",e),FS.mkdir("/dev/shm"),FS.mkdir("/dev/shm/tmp")},createSpecialDirectories:function(){FS.mkdir("/proc"),FS.mkdir("/proc/self"),FS.mkdir("/proc/self/fd"),FS.mount({mount:function(){var e=FS.createNode("/proc/self","fd",16895,73);return e.node_ops={lookup:function(e,n){var t=+n,r=FS.getStream(t);if(!r)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var o={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:function(){return r.path}}};return o.parent=o,o}},e}},{},"/proc/self/fd")},createStandardStreams:function(){Module.stdin?FS.createDevice("/dev","stdin",Module.stdin):FS.symlink("/dev/tty","/dev/stdin"),Module.stdout?FS.createDevice("/dev","stdout",null,Module.stdout):FS.symlink("/dev/tty","/dev/stdout"),Module.stderr?FS.createDevice("/dev","stderr",null,Module.stderr):FS.symlink("/dev/tty1","/dev/stderr");var e=FS.open("/dev/stdin","r");assert(0===e.fd,"invalid handle for stdin ("+e.fd+")");var n=FS.open("/dev/stdout","w");assert(1===n.fd,"invalid handle for stdout ("+n.fd+")");var t=FS.open("/dev/stderr","w");assert(2===t.fd,"invalid handle for stderr ("+t.fd+")")},ensureErrnoError:function(){FS.ErrnoError||(FS.ErrnoError=function(e,n){this.node=n,this.setErrno=function(e){for(var n in this.errno=e,ERRNO_CODES)if(ERRNO_CODES[n]===e){this.code=n;break}},this.setErrno(e),this.message=ERRNO_MESSAGES[e],this.stack&&Object.defineProperty(this,"stack",{value:(new Error).stack,writable:!0})},FS.ErrnoError.prototype=new Error,FS.ErrnoError.prototype.constructor=FS.ErrnoError,[ERRNO_CODES.ENOENT].forEach(function(e){FS.genericErrors[e]=new FS.ErrnoError(e),FS.genericErrors[e].stack="<generic error, no stack>"}))},staticInit:function(){FS.ensureErrnoError(),FS.nameTable=new Array(4096),FS.mount(MEMFS,{},"/"),FS.createDefaultDirectories(),FS.createDefaultDevices(),FS.createSpecialDirectories(),FS.filesystems={MEMFS:MEMFS,IDBFS:IDBFS,NODEFS:NODEFS,WORKERFS:WORKERFS}},init:function(e,n,t){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)"),FS.init.initialized=!0,FS.ensureErrnoError(),Module.stdin=e||Module.stdin,Module.stdout=n||Module.stdout,Module.stderr=t||Module.stderr,FS.createStandardStreams()},quit:function(){FS.init.initialized=!1;var e=Module._fflush;e&&e(0);for(var n=0;n<FS.streams.length;n++){var t=FS.streams[n];t&&FS.close(t)}},getMode:function(e,n){var t=0;return e&&(t|=365),n&&(t|=146),t},joinPath:function(e,n){var t=PATH.join.apply(null,e);return n&&"/"==t[0]&&(t=t.substr(1)),t},absolutePath:function(e,n){return PATH.resolve(n,e)},standardizePath:function(e){return PATH.normalize(e)},findObject:function(e,n){var t=FS.analyzePath(e,n);return t.exists?t.object:(___setErrNo(t.error),null)},analyzePath:function(e,n){try{e=(r=FS.lookupPath(e,{follow:!n})).path}catch(e){}var t={isRoot:!1,exists:!1,error:0,name:null,path:null,object:null,parentExists:!1,parentPath:null,parentObject:null};try{var r=FS.lookupPath(e,{parent:!0});t.parentExists=!0,t.parentPath=r.path,t.parentObject=r.node,t.name=PATH.basename(e),r=FS.lookupPath(e,{follow:!n}),t.exists=!0,t.path=r.path,t.object=r.node,t.name=r.node.name,t.isRoot="/"===r.path}catch(e){t.error=e.errno}return t},createFolder:function(e,n,t,r){var o=PATH.join2("string"==typeof e?e:FS.getPath(e),n),i=FS.getMode(t,r);return FS.mkdir(o,i)},createPath:function(e,n,t,r){e="string"==typeof e?e:FS.getPath(e);for(var o=n.split("/").reverse();o.length;){var i=o.pop();if(i){var a=PATH.join2(e,i);try{FS.mkdir(a)}catch(e){}e=a}}return a},createFile:function(e,n,t,r,o){var i=PATH.join2("string"==typeof e?e:FS.getPath(e),n),a=FS.getMode(r,o);return FS.create(i,a)},createDataFile:function(e,n,t,r,o,i){var a=n?PATH.join2("string"==typeof e?e:FS.getPath(e),n):e,s=FS.getMode(r,o),u=FS.create(a,s);if(t){if("string"==typeof t){for(var l=new Array(t.length),c=0,_=t.length;c<_;++c)l[c]=t.charCodeAt(c);t=l}FS.chmod(u,146|s);var d=FS.open(u,"w");FS.write(d,t,0,t.length,0,i),FS.close(d),FS.chmod(u,s)}return u},createDevice:function(e,n,t,r){var o=PATH.join2("string"==typeof e?e:FS.getPath(e),n),i=FS.getMode(!!t,!!r);FS.createDevice.major||(FS.createDevice.major=64);var a=FS.makedev(FS.createDevice.major++,0);return FS.registerDevice(a,{open:function(e){e.seekable=!1},close:function(e){r&&r.buffer&&r.buffer.length&&r(10)},read:function(e,n,r,o,i){for(var a=0,s=0;s<o;s++){var u;try{u=t()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(void 0===u&&0===a)throw new FS.ErrnoError(ERRNO_CODES.EAGAIN);if(null===u||void 0===u)break;a++,n[r+s]=u}return a&&(e.node.timestamp=Date.now()),a},write:function(e,n,t,o,i){for(var a=0;a<o;a++)try{r(n[t+a])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return o&&(e.node.timestamp=Date.now()),a}}),FS.mkdev(o,i,a)},createLink:function(e,n,t,r,o){var i=PATH.join2("string"==typeof e?e:FS.getPath(e),n);return FS.symlink(t,i)},forceLoadFile:function(e){if(e.isDevice||e.isFolder||e.link||e.contents)return!0;var n=!0;if("undefined"!=typeof XMLHttpRequest)throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");if(!Module.read)throw new Error("Cannot load without read() or XMLHttpRequest.");try{e.contents=intArrayFromString(Module.read(e.url),!0),e.usedBytes=e.contents.length}catch(e){n=!1}return n||___setErrNo(ERRNO_CODES.EIO),n},createLazyFile:function(e,n,t,r,o){function i(){this.lengthKnown=!1,this.chunks=[]}if(i.prototype.get=function(e){if(!(e>this.length-1||e<0)){var n=e%this.chunkSize,t=e/this.chunkSize|0;return this.getter(t)[n]}},i.prototype.setDataGetter=function(e){this.getter=e},i.prototype.cacheLength=function(){var e=new XMLHttpRequest;if(e.open("HEAD",t,!1),e.send(null),!(e.status>=200&&e.status<300||304===e.status))throw new Error("Couldn't load "+t+". Status: "+e.status);var n,r=Number(e.getResponseHeader("Content-length")),o=(n=e.getResponseHeader("Accept-Ranges"))&&"bytes"===n,i=(n=e.getResponseHeader("Content-Encoding"))&&"gzip"===n,a=1048576;o||(a=r);var s=this;s.setDataGetter(function(e){var n=e*a,o=(e+1)*a-1;if(o=Math.min(o,r-1),void 0===s.chunks[e]&&(s.chunks[e]=function(e,n){if(e>n)throw new Error("invalid range ("+e+", "+n+") or no bytes requested!");if(n>r-1)throw new Error("only "+r+" bytes available! programmer error!");var o=new XMLHttpRequest;if(o.open("GET",t,!1),r!==a&&o.setRequestHeader("Range","bytes="+e+"-"+n),"undefined"!=typeof Uint8Array&&(o.responseType="arraybuffer"),o.overrideMimeType&&o.overrideMimeType("text/plain; charset=x-user-defined"),o.send(null),!(o.status>=200&&o.status<300||304===o.status))throw new Error("Couldn't load "+t+". Status: "+o.status);return void 0!==o.response?new Uint8Array(o.response||[]):intArrayFromString(o.responseText||"",!0)}(n,o)),void 0===s.chunks[e])throw new Error("doXHR failed!");return s.chunks[e]}),!i&&r||(a=r=1,r=this.getter(0).length,a=r,console.log("LazyFiles on gzip forces download of the whole file when length is accessed")),this._length=r,this._chunkSize=a,this.lengthKnown=!0},"undefined"!=typeof XMLHttpRequest){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var a=new i;Object.defineProperties(a,{length:{get:function(){return this.lengthKnown||this.cacheLength(),this._length}},chunkSize:{get:function(){return this.lengthKnown||this.cacheLength(),this._chunkSize}}});var s={isDevice:!1,contents:a}}else s={isDevice:!1,url:t};var u=FS.createFile(e,n,s,r,o);s.contents?u.contents=s.contents:s.url&&(u.contents=null,u.url=s.url),Object.defineProperties(u,{usedBytes:{get:function(){return this.contents.length}}});var l={};return Object.keys(u.stream_ops).forEach(function(e){var n=u.stream_ops[e];l[e]=function(){if(!FS.forceLoadFile(u))throw new FS.ErrnoError(ERRNO_CODES.EIO);return n.apply(null,arguments)}}),l.read=function(e,n,t,r,o){if(!FS.forceLoadFile(u))throw new FS.ErrnoError(ERRNO_CODES.EIO);var i=e.node.contents;if(o>=i.length)return 0;var a=Math.min(i.length-o,r);if(assert(a>=0),i.slice)for(var s=0;s<a;s++)n[t+s]=i[o+s];else for(s=0;s<a;s++)n[t+s]=i.get(o+s);return a},u.stream_ops=l,u},createPreloadedFile:function(e,n,t,r,o,i,a,s,u,l){Browser.init();var c=n?PATH.resolve(PATH.join2(e,n)):e,_=getUniqueRunDependency("cp "+c);function d(t){function d(t){l&&l(),s||FS.createDataFile(e,n,t,r,o,u),i&&i(),removeRunDependency(_)}var f=!1;Module.preloadPlugins.forEach(function(e){f||e.canHandle(c)&&(e.handle(t,c,d,function(){a&&a(),removeRunDependency(_)}),f=!0)}),f||d(t)}addRunDependency(_),"string"==typeof t?Browser.asyncLoad(t,function(e){d(e)},a):d(t)},indexedDB:function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB},DB_NAME:function(){return"EM_FS_"+window.location.pathname},DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function(e,n,t){n=n||function(){},t=t||function(){};var r=FS.indexedDB();try{var o=r.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return t(e)}o.onupgradeneeded=function(){console.log("creating db"),o.result.createObjectStore(FS.DB_STORE_NAME)},o.onsuccess=function(){var r=o.result.transaction([FS.DB_STORE_NAME],"readwrite"),i=r.objectStore(FS.DB_STORE_NAME),a=0,s=0,u=e.length;function l(){0==s?n():t()}e.forEach(function(e){var n=i.put(FS.analyzePath(e).object.contents,e);n.onsuccess=function(){++a+s==u&&l()},n.onerror=function(){a+ ++s==u&&l()}}),r.onerror=t},o.onerror=t},loadFilesFromDB:function(e,n,t){n=n||function(){},t=t||function(){};var r=FS.indexedDB();try{var o=r.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return t(e)}o.onupgradeneeded=t,o.onsuccess=function(){var r=o.result;try{var i=r.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){return void t(e)}var a=i.objectStore(FS.DB_STORE_NAME),s=0,u=0,l=e.length;function c(){0==u?n():t()}e.forEach(function(e){var n=a.get(e);n.onsuccess=function(){FS.analyzePath(e).exists&&FS.unlink(e),FS.createDataFile(PATH.dirname(e),PATH.basename(e),n.result,!0,!0,!0),++s+u==l&&c()},n.onerror=function(){s+ ++u==l&&c()}}),i.onerror=t},o.onerror=t}},SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function(e,n){if("/"!==n[0]){var t;if(-100===e)t=FS.cwd();else{var r=FS.getStream(e);if(!r)throw new FS.ErrnoError(ERRNO_CODES.EBADF);t=r.path}n=PATH.join2(t,n)}return n},doStat:function(e,n,t){try{var r=e(n)}catch(e){if(e&&e.node&&PATH.normalize(n)!==PATH.normalize(FS.getPath(e.node)))return-ERRNO_CODES.ENOTDIR;throw e}return HEAP32[t>>2]=r.dev,HEAP32[t+4>>2]=0,HEAP32[t+8>>2]=r.ino,HEAP32[t+12>>2]=r.mode,HEAP32[t+16>>2]=r.nlink,HEAP32[t+20>>2]=r.uid,HEAP32[t+24>>2]=r.gid,HEAP32[t+28>>2]=r.rdev,HEAP32[t+32>>2]=0,HEAP32[t+36>>2]=r.size,HEAP32[t+40>>2]=4096,HEAP32[t+44>>2]=r.blocks,HEAP32[t+48>>2]=r.atime.getTime()/1e3|0,HEAP32[t+52>>2]=0,HEAP32[t+56>>2]=r.mtime.getTime()/1e3|0,HEAP32[t+60>>2]=0,HEAP32[t+64>>2]=r.ctime.getTime()/1e3|0,HEAP32[t+68>>2]=0,HEAP32[t+72>>2]=r.ino,0},doMsync:function(e,n,t,r){var o=new Uint8Array(HEAPU8.subarray(e,e+t));FS.msync(n,o,0,t,r)},doMkdir:function(e,n){return"/"===(e=PATH.normalize(e))[e.length-1]&&(e=e.substr(0,e.length-1)),FS.mkdir(e,n,0),0},doMknod:function(e,n,t){switch(61440&n){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}return FS.mknod(e,n,t),0},doReadlink:function(e,n,t){if(t<=0)return-ERRNO_CODES.EINVAL;var r=FS.readlink(e),o=Math.min(t,lengthBytesUTF8(r)),i=HEAP8[n+o];return stringToUTF8(r,n,t+1),HEAP8[n+o]=i,o},doAccess:function(e,n){if(-8&n)return-ERRNO_CODES.EINVAL;var t;t=FS.lookupPath(e,{follow:!0}).node;var r="";return 4&n&&(r+="r"),2&n&&(r+="w"),1&n&&(r+="x"),r&&FS.nodePermissions(t,r)?-ERRNO_CODES.EACCES:0},doDup:function(e,n,t){var r=FS.getStream(t);return r&&FS.close(r),FS.open(e,n,0,t,t).fd},doReadv:function(e,n,t,r){for(var o=0,i=0;i<t;i++){var a=HEAP32[n+8*i>>2],s=HEAP32[n+(8*i+4)>>2],u=FS.read(e,HEAP8,a,s,r);if(u<0)return-1;if(o+=u,u<s)break}return o},doWritev:function(e,n,t,r){for(var o=0,i=0;i<t;i++){var a=HEAP32[n+8*i>>2],s=HEAP32[n+(8*i+4)>>2],u=FS.write(e,HEAP8,a,s,r);if(u<0)return-1;o+=u}return o},varargs:0,get:function(e){return SYSCALLS.varargs+=4,HEAP32[SYSCALLS.varargs-4>>2]},getStr:function(){return Pointer_stringify(SYSCALLS.get())},getStreamFromFD:function(){var e=FS.getStream(SYSCALLS.get());if(!e)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return e},getSocketFromFD:function(){var e=SOCKFS.getSocket(SYSCALLS.get());if(!e)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return e},getSocketAddress:function(e){var n=SYSCALLS.get(),t=SYSCALLS.get();if(e&&0===n)return null;var r=__read_sockaddr(n,t);if(r.errno)throw new FS.ErrnoError(r.errno);return r.addr=DNS.lookup_addr(r.addr)||r.addr,r},get64:function(){var e=SYSCALLS.get(),n=SYSCALLS.get();return assert(e>=0?0===n:-1===n),e},getZero:function(){assert(0===SYSCALLS.get())}};function ___syscall140(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD(),r=(SYSCALLS.get(),SYSCALLS.get()),o=SYSCALLS.get(),i=SYSCALLS.get(),a=r;return FS.llseek(t,a,i),HEAP32[o>>2]=t.position,t.getdents&&0===a&&0===i&&(t.getdents=null),0}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall145(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD(),r=SYSCALLS.get(),o=SYSCALLS.get();return SYSCALLS.doReadv(t,r,o)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall146(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD(),r=SYSCALLS.get(),o=SYSCALLS.get();return SYSCALLS.doWritev(t,r,o)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall183(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.get(),r=SYSCALLS.get();if(0===r)return-ERRNO_CODES.EINVAL;var o=FS.cwd();return r<lengthBytesUTF8(o)+1?-ERRNO_CODES.ERANGE:(stringToUTF8(o,t,r),t)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall195(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStr(),r=SYSCALLS.get();return SYSCALLS.doStat(FS.stat,t,r)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall220(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD(),r=SYSCALLS.get(),o=SYSCALLS.get();t.getdents||(t.getdents=FS.readdir(t.path));for(var i=0;t.getdents.length>0&&i+268<=o;){var a,s,u=t.getdents.pop();if("."===u[0])a=1,s=4;else{var l=FS.lookupNode(t.node,u);a=l.id,s=FS.isChrdev(l.mode)?2:FS.isDir(l.mode)?4:FS.isLink(l.mode)?10:8}HEAP32[r+i>>2]=a,HEAP32[r+i+4>>2]=t.position,HEAP16[r+i+8>>1]=268,HEAP8[r+i+10>>0]=s,stringToUTF8(u,r+i+11,256),i+=268}return i}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall221(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD();switch(SYSCALLS.get()){case 0:return(r=SYSCALLS.get())<0?-ERRNO_CODES.EINVAL:FS.open(t.path,t.flags,0,r).fd;case 1:case 2:return 0;case 3:return t.flags;case 4:var r=SYSCALLS.get();return t.flags|=r,0;case 12:case 12:r=SYSCALLS.get();return HEAP16[r+0>>1]=2,0;case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-ERRNO_CODES.EINVAL;case 9:return ___setErrNo(ERRNO_CODES.EINVAL),-1;default:return-ERRNO_CODES.EINVAL}}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall3(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD(),r=SYSCALLS.get(),o=SYSCALLS.get();return FS.read(t,HEAP8,r,o)}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall5(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStr(),r=SYSCALLS.get(),o=SYSCALLS.get();return FS.open(t,r,o).fd}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall54(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD(),r=SYSCALLS.get();switch(r){case 21509:case 21505:return t.tty?0:-ERRNO_CODES.ENOTTY;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return t.tty?0:-ERRNO_CODES.ENOTTY;case 21519:if(!t.tty)return-ERRNO_CODES.ENOTTY;var o=SYSCALLS.get();return HEAP32[o>>2]=0,0;case 21520:return t.tty?-ERRNO_CODES.EINVAL:-ERRNO_CODES.ENOTTY;case 21531:o=SYSCALLS.get();return FS.ioctl(t,r,o);case 21523:return t.tty?0:-ERRNO_CODES.ENOTTY;default:abort("bad ioctl syscall "+r)}}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall6(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.getStreamFromFD();return FS.close(t),0}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}function ___syscall91(e,n){SYSCALLS.varargs=n;try{var t=SYSCALLS.get(),r=SYSCALLS.get(),o=SYSCALLS.mappings[t];if(!o)return 0;if(r===o.len){var i=FS.getStream(o.fd);SYSCALLS.doMsync(t,i,r,o.flags),FS.munmap(i),SYSCALLS.mappings[t]=null,o.allocated&&_free(o.malloc)}return 0}catch(e){return void 0!==FS&&e instanceof FS.ErrnoError||abort(e),-e.errno}}var cttz_i8=allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0],"i8",ALLOC_STATIC);function ___unlock(){}function _abort(){Module.abort()}var DLFCN={error:null,errorMsg:null,loadedLibs:{},loadedLibNames:{}};function _dlclose(e){if(DLFCN.loadedLibs[e]){var n=DLFCN.loadedLibs[e];return 0==--n.refcount&&(n.module.cleanups&&n.module.cleanups.forEach(function(e){e()}),delete DLFCN.loadedLibNames[n.name],delete DLFCN.loadedLibs[e]),0}return DLFCN.errorMsg="Tried to dlclose() unopened handle: "+e,1}function _dlerror(){if(null===DLFCN.errorMsg)return 0;DLFCN.error&&_free(DLFCN.error);var e=intArrayFromString(DLFCN.errorMsg);return DLFCN.error=allocate(e,"i8",ALLOC_NORMAL),DLFCN.errorMsg=null,DLFCN.error}var _environ=STATICTOP;function ___buildEnvironment(e){var n,t;___buildEnvironment.called?(t=HEAP32[_environ>>2],n=HEAP32[t>>2]):(___buildEnvironment.called=!0,ENV.USER=ENV.LOGNAME="web_user",ENV.PATH="/",ENV.PWD="/",ENV.HOME="/home/web_user",ENV.LANG="C.UTF-8",ENV._=Module.thisProgram,n=staticAlloc(1024),t=staticAlloc(256),HEAP32[t>>2]=n,HEAP32[_environ>>2]=t);var r=[],o=0;for(var i in e)if("string"==typeof e[i]){var a=i+"="+e[i];r.push(a),o+=a.length}if(o>1024)throw new Error("Environment size exceeded TOTAL_ENV_SIZE!");for(var s=0;s<r.length;s++){writeAsciiToMemory(a=r[s],n),HEAP32[t+4*s>>2]=n,n+=a.length+1}HEAP32[t+4*r.length>>2]=0}STATICTOP+=16;var ENV={};function _dlopen(e,n){abort("To use dlopen, you need to use Emscripten's linking support, see https://github.com/kripken/emscripten/wiki/Linking");var t=[];if(0===e)e="__self__";else{var r=Pointer_stringify(e),o=function(e){var n=FS.findObject(e);return n&&!n.isFolder&&!n.isDevice};if(o(r))e=r;else for(var i in ENV.LD_LIBRARY_PATH&&(t=ENV.LD_LIBRARY_PATH.split(":")),t){var a=PATH.join2(t[i],r);if(o(a)){e=a;break}}}if(DLFCN.loadedLibNames[e]){var s=DLFCN.loadedLibNames[e];return DLFCN.loadedLibs[s].refcount++,s}if("__self__"===e){s=-1;var u=Module,l={}}else{var c=FS.findObject(e);if(!c||c.isFolder||c.isDevice)return DLFCN.errorMsg="Could not find dynamic lib: "+e,0;FS.forceLoadFile(c);try{var _=FS.readFile(e,{encoding:"binary"});_ instanceof Uint8Array||(_=new Uint8Array(_)),u=loadWebAssemblyModule(_)}catch(n){return DLFCN.errorMsg="Could not evaluate dynamic lib: "+e+"\n"+n,0}s=1;for(var d in DLFCN.loadedLibs)DLFCN.loadedLibs.hasOwnProperty(d)&&s++;if(256&n)for(var i in u)u.hasOwnProperty(i)&&"_"==i[0]&&(Module[i]=u[i]);l={}}return DLFCN.loadedLibs[s]={refcount:1,name:e,module:u,cached_functions:l},DLFCN.loadedLibNames[e]=s,s}function _dlsym(e,n){if(n=Pointer_stringify(n),DLFCN.loadedLibs[e]){var t=DLFCN.loadedLibs[e];if(n="_"+n,t.cached_functions.hasOwnProperty(n))return t.cached_functions[n];if(t.module.hasOwnProperty(n)){var r=t.module[n];return"function"==typeof r&&(r=addFunction(r),t.cached_functions=r),r}return DLFCN.errorMsg='Tried to lookup unknown symbol "'+n+'" in dynamic lib: '+t.name,0}return DLFCN.errorMsg="Tried to dlsym() from an unopened handle: "+e,0}function _emscripten_set_main_loop_timing(e,n){if(Browser.mainLoop.timingMode=e,Browser.mainLoop.timingValue=n,!Browser.mainLoop.func)return 1;if(0==e)Browser.mainLoop.scheduler=function(){var e=0|Math.max(0,Browser.mainLoop.tickStartTime+n-_emscripten_get_now());setTimeout(Browser.mainLoop.runner,e)},Browser.mainLoop.method="timeout";else if(1==e)Browser.mainLoop.scheduler=function(){Browser.requestAnimationFrame(Browser.mainLoop.runner)},Browser.mainLoop.method="rAF";else if(2==e){if("undefined"==typeof setImmediate){var t=[],r="setimmediate";addEventListener("message",function(e){e.data!==r&&e.data.target!==r||(e.stopPropagation(),t.shift()())},!0),setImmediate=function(e){t.push(e),ENVIRONMENT_IS_WORKER?(void 0===Module.setImmediates&&(Module.setImmediates=[]),Module.setImmediates.push(e),postMessage({target:r})):postMessage(r,"*")}}Browser.mainLoop.scheduler=function(){setImmediate(Browser.mainLoop.runner)},Browser.mainLoop.method="immediate"}return 0}function _emscripten_get_now(){abort()}function _emscripten_set_main_loop(e,n,t,r,o){var i;Module.noExitRuntime=!0,assert(!Browser.mainLoop.func,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters."),Browser.mainLoop.func=e,Browser.mainLoop.arg=r,i=void 0!==r?function(){Module.dynCall_vi(e,r)}:function(){Module.dynCall_v(e)};var a=Browser.mainLoop.currentlyRunningMainloop;if(Browser.mainLoop.runner=function(){if(!ABORT)if(Browser.mainLoop.queue.length>0){var e=Date.now(),n=Browser.mainLoop.queue.shift();if(n.func(n.arg),Browser.mainLoop.remainingBlockers){var t=Browser.mainLoop.remainingBlockers,r=t%1==0?t-1:Math.floor(t);n.counted?Browser.mainLoop.remainingBlockers=r:(r+=.5,Browser.mainLoop.remainingBlockers=(8*t+r)/9)}if(console.log('main loop blocker "'+n.name+'" took '+(Date.now()-e)+" ms"),Browser.mainLoop.updateStatus(),a<Browser.mainLoop.currentlyRunningMainloop)return;setTimeout(Browser.mainLoop.runner,0)}else a<Browser.mainLoop.currentlyRunningMainloop||(Browser.mainLoop.currentFrameNumber=Browser.mainLoop.currentFrameNumber+1|0,1==Browser.mainLoop.timingMode&&Browser.mainLoop.timingValue>1&&Browser.mainLoop.currentFrameNumber%Browser.mainLoop.timingValue!=0?Browser.mainLoop.scheduler():(0==Browser.mainLoop.timingMode&&(Browser.mainLoop.tickStartTime=_emscripten_get_now()),"timeout"===Browser.mainLoop.method&&Module.ctx&&(Module.printErr("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!"),Browser.mainLoop.method=""),Browser.mainLoop.runIter(i),a<Browser.mainLoop.currentlyRunningMainloop||("object"==typeof SDL&&SDL.audio&&SDL.audio.queueNewAudioData&&SDL.audio.queueNewAudioData(),Browser.mainLoop.scheduler())))},o||(n&&n>0?_emscripten_set_main_loop_timing(0,1e3/n):_emscripten_set_main_loop_timing(1,1),Browser.mainLoop.scheduler()),t)throw"SimulateInfiniteLoop"}var Browser={mainLoop:{scheduler:null,method:"",currentlyRunningMainloop:0,func:null,arg:0,timingMode:0,timingValue:0,currentFrameNumber:0,queue:[],pause:function(){Browser.mainLoop.scheduler=null,Browser.mainLoop.currentlyRunningMainloop++},resume:function(){Browser.mainLoop.currentlyRunningMainloop++;var e=Browser.mainLoop.timingMode,n=Browser.mainLoop.timingValue,t=Browser.mainLoop.func;Browser.mainLoop.func=null,_emscripten_set_main_loop(t,0,!1,Browser.mainLoop.arg,!0),_emscripten_set_main_loop_timing(e,n),Browser.mainLoop.scheduler()},updateStatus:function(){if(Module.setStatus){var e=Module.statusMessage||"Please wait...",n=Browser.mainLoop.remainingBlockers,t=Browser.mainLoop.expectedBlockers;n?n<t?Module.setStatus(e+" ("+(t-n)+"/"+t+")"):Module.setStatus(e):Module.setStatus("")}},runIter:function(e){if(!ABORT){if(Module.preMainLoop)if(!1===Module.preMainLoop())return;try{e()}catch(e){if(e instanceof ExitStatus)return;throw e&&"object"==typeof e&&e.stack&&Module.printErr("exception thrown: "+[e,e.stack]),e}Module.postMainLoop&&Module.postMainLoop()}}},isFullscreen:!1,pointerLock:!1,moduleContextCreatedCallbacks:[],workers:[],init:function(){if(Module.preloadPlugins||(Module.preloadPlugins=[]),!Browser.initted){Browser.initted=!0;try{new Blob,Browser.hasBlobConstructor=!0}catch(e){Browser.hasBlobConstructor=!1,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}Browser.BlobBuilder="undefined"!=typeof MozBlobBuilder?MozBlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:Browser.hasBlobConstructor?null:console.log("warning: no BlobBuilder"),Browser.URLObject="undefined"!=typeof window?window.URL?window.URL:window.webkitURL:void 0,Module.noImageDecoding||void 0!==Browser.URLObject||(console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available."),Module.noImageDecoding=!0);var e={canHandle:function(e){return!Module.noImageDecoding&&/\.(jpg|jpeg|png|bmp)$/i.test(e)},handle:function(e,n,t,r){var o=null;if(Browser.hasBlobConstructor)try{(o=new Blob([e],{type:Browser.getMimetype(n)})).size!==e.length&&(o=new Blob([new Uint8Array(e).buffer],{type:Browser.getMimetype(n)}))}catch(e){warnOnce("Blob constructor present but fails: "+e+"; falling back to blob builder")}if(!o){var i=new Browser.BlobBuilder;i.append(new Uint8Array(e).buffer),o=i.getBlob()}var a=Browser.URLObject.createObjectURL(o),s=new Image;s.onload=function(){assert(s.complete,"Image "+n+" could not be decoded");var r=document.createElement("canvas");r.width=s.width,r.height=s.height,r.getContext("2d").drawImage(s,0,0),Module.preloadedImages[n]=r,Browser.URLObject.revokeObjectURL(a),t&&t(e)},s.onerror=function(e){console.log("Image "+a+" could not be decoded"),r&&r()},s.src=a}};Module.preloadPlugins.push(e);var n={canHandle:function(e){return!Module.noAudioDecoding&&e.substr(-4)in{".ogg":1,".wav":1,".mp3":1}},handle:function(e,n,t,r){var o=!1;function i(r){o||(o=!0,Module.preloadedAudios[n]=r,t&&t(e))}function a(){o||(o=!0,Module.preloadedAudios[n]=new Audio,r&&r())}if(!Browser.hasBlobConstructor)return a();try{var s=new Blob([e],{type:Browser.getMimetype(n)})}catch(e){return a()}var u=Browser.URLObject.createObjectURL(s),l=new Audio;l.addEventListener("canplaythrough",function(){i(l)},!1),l.onerror=function(t){o||(console.log("warning: browser could not fully decode audio "+n+", trying slower base64 approach"),l.src="data:audio/x-"+n.substr(-3)+";base64,"+function(e){for(var n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t="",r=0,o=0,i=0;i<e.length;i++)for(r=r<<8|e[i],o+=8;o>=6;){var a=r>>o-6&63;o-=6,t+=n[a]}return 2==o?(t+=n[(3&r)<<4],t+="=="):4==o&&(t+=n[(15&r)<<2],t+="="),t}(e),i(l))},l.src=u,Browser.safeSetTimeout(function(){i(l)},1e4)}};Module.preloadPlugins.push(n);var t=Module.canvas;t&&(t.requestPointerLock=t.requestPointerLock||t.mozRequestPointerLock||t.webkitRequestPointerLock||t.msRequestPointerLock||function(){},t.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||document.msExitPointerLock||function(){},t.exitPointerLock=t.exitPointerLock.bind(document),document.addEventListener("pointerlockchange",r,!1),document.addEventListener("mozpointerlockchange",r,!1),document.addEventListener("webkitpointerlockchange",r,!1),document.addEventListener("mspointerlockchange",r,!1),Module.elementPointerLock&&t.addEventListener("click",function(e){!Browser.pointerLock&&Module.canvas.requestPointerLock&&(Module.canvas.requestPointerLock(),e.preventDefault())},!1))}function r(){Browser.pointerLock=document.pointerLockElement===Module.canvas||document.mozPointerLockElement===Module.canvas||document.webkitPointerLockElement===Module.canvas||document.msPointerLockElement===Module.canvas}},createContext:function(e,n,t,r){if(n&&Module.ctx&&e==Module.canvas)return Module.ctx;var o,i;if(n){var a={antialias:!1,alpha:!1};if(r)for(var s in r)a[s]=r[s];(i=GL.createContext(e,a))&&(o=GL.getContext(i).GLctx)}else o=e.getContext("2d");return o?(t&&(n||assert("undefined"==typeof GLctx,"cannot set in module if GLctx is used, but we are a non-GL context that would replace it"),Module.ctx=o,n&&GL.makeContextCurrent(i),Module.useWebGL=n,Browser.moduleContextCreatedCallbacks.forEach(function(e){e()}),Browser.init()),o):null},destroyContext:function(e,n,t){},fullscreenHandlersInstalled:!1,lockPointer:void 0,resizeCanvas:void 0,requestFullscreen:function(e,n,t){Browser.lockPointer=e,Browser.resizeCanvas=n,Browser.vrDevice=t,void 0===Browser.lockPointer&&(Browser.lockPointer=!0),void 0===Browser.resizeCanvas&&(Browser.resizeCanvas=!1),void 0===Browser.vrDevice&&(Browser.vrDevice=null);var r=Module.canvas;function o(){Browser.isFullscreen=!1;var e=r.parentNode;(document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===e?(r.exitFullscreen=document.exitFullscreen||document.cancelFullScreen||document.mozCancelFullScreen||document.msExitFullscreen||document.webkitCancelFullScreen||function(){},r.exitFullscreen=r.exitFullscreen.bind(document),Browser.lockPointer&&r.requestPointerLock(),Browser.isFullscreen=!0,Browser.resizeCanvas&&Browser.setFullscreenCanvasSize()):(e.parentNode.insertBefore(r,e),e.parentNode.removeChild(e),Browser.resizeCanvas&&Browser.setWindowedCanvasSize()),Module.onFullScreen&&Module.onFullScreen(Browser.isFullscreen),Module.onFullscreen&&Module.onFullscreen(Browser.isFullscreen),Browser.updateCanvasDimensions(r)}Browser.fullscreenHandlersInstalled||(Browser.fullscreenHandlersInstalled=!0,document.addEventListener("fullscreenchange",o,!1),document.addEventListener("mozfullscreenchange",o,!1),document.addEventListener("webkitfullscreenchange",o,!1),document.addEventListener("MSFullscreenChange",o,!1));var i=document.createElement("div");r.parentNode.insertBefore(i,r),i.appendChild(r),i.requestFullscreen=i.requestFullscreen||i.mozRequestFullScreen||i.msRequestFullscreen||(i.webkitRequestFullscreen?function(){i.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}:null)||(i.webkitRequestFullScreen?function(){i.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null),t?i.requestFullscreen({vrDisplay:t}):i.requestFullscreen()},requestFullScreen:function(e,n,t){return Module.printErr("Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead."),Browser.requestFullScreen=function(e,n,t){return Browser.requestFullscreen(e,n,t)},Browser.requestFullscreen(e,n,t)},nextRAF:0,fakeRequestAnimationFrame:function(e){var n=Date.now();if(0===Browser.nextRAF)Browser.nextRAF=n+1e3/60;else for(;n+2>=Browser.nextRAF;)Browser.nextRAF+=1e3/60;var t=Math.max(Browser.nextRAF-n,0);setTimeout(e,t)},requestAnimationFrame:function(e){"undefined"==typeof window?Browser.fakeRequestAnimationFrame(e):(window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||Browser.fakeRequestAnimationFrame),window.requestAnimationFrame(e))},safeCallback:function(e){return function(){if(!ABORT)return e.apply(null,arguments)}},allowAsyncCallbacks:!0,queuedAsyncCallbacks:[],pauseAsyncCallbacks:function(){Browser.allowAsyncCallbacks=!1},resumeAsyncCallbacks:function(){if(Browser.allowAsyncCallbacks=!0,Browser.queuedAsyncCallbacks.length>0){var e=Browser.queuedAsyncCallbacks;Browser.queuedAsyncCallbacks=[],e.forEach(function(e){e()})}},safeRequestAnimationFrame:function(e){return Browser.requestAnimationFrame(function(){ABORT||(Browser.allowAsyncCallbacks?e():Browser.queuedAsyncCallbacks.push(e))})},safeSetTimeout:function(e,n){return Module.noExitRuntime=!0,setTimeout(function(){ABORT||(Browser.allowAsyncCallbacks?e():Browser.queuedAsyncCallbacks.push(e))},n)},safeSetInterval:function(e,n){return Module.noExitRuntime=!0,setInterval(function(){ABORT||Browser.allowAsyncCallbacks&&e()},n)},getMimetype:function(e){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[e.substr(e.lastIndexOf(".")+1)]},getUserMedia:function(e){window.getUserMedia||(window.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia),window.getUserMedia(e)},getMovementX:function(e){return e.movementX||e.mozMovementX||e.webkitMovementX||0},getMovementY:function(e){return e.movementY||e.mozMovementY||e.webkitMovementY||0},getMouseWheelDelta:function(e){var n=0;switch(e.type){case"DOMMouseScroll":n=e.detail;break;case"mousewheel":n=e.wheelDelta;break;case"wheel":n=e.deltaY;break;default:throw"unrecognized mouse wheel event: "+e.type}return n},mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,touches:{},lastTouches:{},calculateMouseEvent:function(e){if(Browser.pointerLock)"mousemove"!=e.type&&"mozMovementX"in e?Browser.mouseMovementX=Browser.mouseMovementY=0:(Browser.mouseMovementX=Browser.getMovementX(e),Browser.mouseMovementY=Browser.getMovementY(e)),"undefined"!=typeof SDL?(Browser.mouseX=SDL.mouseX+Browser.mouseMovementX,Browser.mouseY=SDL.mouseY+Browser.mouseMovementY):(Browser.mouseX+=Browser.mouseMovementX,Browser.mouseY+=Browser.mouseMovementY);else{var n=Module.canvas.getBoundingClientRect(),t=Module.canvas.width,r=Module.canvas.height,o=void 0!==window.scrollX?window.scrollX:window.pageXOffset,i=void 0!==window.scrollY?window.scrollY:window.pageYOffset;if("touchstart"===e.type||"touchend"===e.type||"touchmove"===e.type){var a=e.touch;if(void 0===a)return;var s=a.pageX-(o+n.left),u=a.pageY-(i+n.top),l={x:s*=t/n.width,y:u*=r/n.height};if("touchstart"===e.type)Browser.lastTouches[a.identifier]=l,Browser.touches[a.identifier]=l;else if("touchend"===e.type||"touchmove"===e.type){var c=Browser.touches[a.identifier];c||(c=l),Browser.lastTouches[a.identifier]=c,Browser.touches[a.identifier]=l}return}var _=e.pageX-(o+n.left),d=e.pageY-(i+n.top);_*=t/n.width,d*=r/n.height,Browser.mouseMovementX=_-Browser.mouseX,Browser.mouseMovementY=d-Browser.mouseY,Browser.mouseX=_,Browser.mouseY=d}},asyncLoad:function(e,n,t,r){var o=r?"":getUniqueRunDependency("al "+e);Module.readAsync(e,function(t){assert(t,'Loading data file "'+e+'" failed (no arrayBuffer).'),n(new Uint8Array(t)),o&&removeRunDependency(o)},function(n){if(!t)throw'Loading data file "'+e+'" failed.';t()}),o&&addRunDependency(o)},resizeListeners:[],updateResizeListeners:function(){var e=Module.canvas;Browser.resizeListeners.forEach(function(n){n(e.width,e.height)})},setCanvasSize:function(e,n,t){var r=Module.canvas;Browser.updateCanvasDimensions(r,e,n),t||Browser.updateResizeListeners()},windowedWidth:0,windowedHeight:0,setFullscreenCanvasSize:function(){if("undefined"!=typeof SDL){var e=HEAPU32[SDL.screen>>2];e|=8388608,HEAP32[SDL.screen>>2]=e}Browser.updateResizeListeners()},setWindowedCanvasSize:function(){if("undefined"!=typeof SDL){var e=HEAPU32[SDL.screen>>2];e&=-8388609,HEAP32[SDL.screen>>2]=e}Browser.updateResizeListeners()},updateCanvasDimensions:function(e,n,t){n&&t?(e.widthNative=n,e.heightNative=t):(n=e.widthNative,t=e.heightNative);var r=n,o=t;if(Module.forcedAspectRatio&&Module.forcedAspectRatio>0&&(r/o<Module.forcedAspectRatio?r=Math.round(o*Module.forcedAspectRatio):o=Math.round(r/Module.forcedAspectRatio)),(document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===e.parentNode&&"undefined"!=typeof screen){var i=Math.min(screen.width/r,screen.height/o);r=Math.round(r*i),o=Math.round(o*i)}Browser.resizeCanvas?(e.width!=r&&(e.width=r),e.height!=o&&(e.height=o),void 0!==e.style&&(e.style.removeProperty("width"),e.style.removeProperty("height"))):(e.width!=n&&(e.width=n),e.height!=t&&(e.height=t),void 0!==e.style&&(r!=n||o!=t?(e.style.setProperty("width",r+"px","important"),e.style.setProperty("height",o+"px","important")):(e.style.removeProperty("width"),e.style.removeProperty("height"))))},wgetRequests:{},nextWgetRequestHandle:0,getNextWgetRequestHandle:function(){var e=Browser.nextWgetRequestHandle;return Browser.nextWgetRequestHandle++,e}},EmterpreterAsync={initted:!1,state:0,saveStack:"",yieldCallbacks:[],postAsync:null,asyncFinalizers:[],ensureInit:function(){this.initted||(this.initted=!0)},setState:function(e){this.ensureInit(),this.state=e,Module.setAsyncState(e)},handle:function(e,n){if(Module.noExitRuntime=!0,0===EmterpreterAsync.state){var t=new Int32Array(HEAP32.subarray(EMTSTACKTOP>>2,Module.emtStackSave()>>2)),r=(Module.stackSave(),!1);function o(){r||(r=!0,EmterpreterAsync.yieldCallbacks.forEach(function(e){e()}),Browser.resumeAsyncCallbacks())}var i=1;e(function e(r){if(!ABORT){if(i)return assert(1===i),i++,void setTimeout(function(){e(r)},0);assert(1===EmterpreterAsync.state||3===EmterpreterAsync.state),EmterpreterAsync.setState(3),n&&o(),HEAP32.set(t,EMTSTACKTOP>>2),EmterpreterAsync.setState(2),Browser.mainLoop.func&&Browser.mainLoop.resume(),assert(!EmterpreterAsync.postAsync),EmterpreterAsync.postAsync=r||null,Module.emterpret(t[0]),n||0!==EmterpreterAsync.state||Browser.resumeAsyncCallbacks(),0===EmterpreterAsync.state&&(EmterpreterAsync.asyncFinalizers.forEach(function(e){e()}),EmterpreterAsync.asyncFinalizers.length=0)}}),i=0,EmterpreterAsync.setState(1),Browser.mainLoop.func&&Browser.mainLoop.pause(),n?setTimeout(function(){o()},0):Browser.pauseAsyncCallbacks()}else if(assert(2===EmterpreterAsync.state),EmterpreterAsync.setState(0),EmterpreterAsync.postAsync){var a=EmterpreterAsync.postAsync();return EmterpreterAsync.postAsync=null,a}}};function _emscripten_sleep(e){EmterpreterAsync.handle(function(n){setTimeout(function(){n()},e)})}function __exit(e){Module.exit(e)}function _exit(e){__exit(e)}function _getenv(e){return 0===e?0:(e=Pointer_stringify(e),ENV.hasOwnProperty(e)?(_getenv.ret&&_free(_getenv.ret),_getenv.ret=allocateUTF8(ENV[e]),_getenv.ret):0)}function _llvm_eh_typeid_for(e){return e}function _llvm_trap(){abort("trap!")}var _llvm_trunc_f64=Math_trunc;function _emscripten_memcpy_big(e,n,t){return HEAPU8.set(HEAPU8.subarray(n,n+t),e),e}function _pthread_cond_wait(){return 0}var PTHREAD_SPECIFIC={};function _pthread_getspecific(e){return PTHREAD_SPECIFIC[e]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(e,n){return 0==e?ERRNO_CODES.EINVAL:(HEAP32[e>>2]=PTHREAD_SPECIFIC_NEXT_KEY,PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0,PTHREAD_SPECIFIC_NEXT_KEY++,0)}function _pthread_once(e,n){_pthread_once.seen||(_pthread_once.seen={}),e in _pthread_once.seen||(Module.dynCall_v(n),_pthread_once.seen[e]=1)}function _pthread_setspecific(e,n){return e in PTHREAD_SPECIFIC?(PTHREAD_SPECIFIC[e]=n,0):ERRNO_CODES.EINVAL}function __isLeapYear(e){return e%4==0&&(e%100!=0||e%400==0)}function __arraySum(e,n){for(var t=0,r=0;r<=n;t+=e[r++]);return t}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31],__MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(e,n){for(var t=new Date(e.getTime());n>0;){var r=__isLeapYear(t.getFullYear()),o=t.getMonth(),i=(r?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[o];if(!(n>i-t.getDate()))return t.setDate(t.getDate()+n),t;n-=i-t.getDate()+1,t.setDate(1),o<11?t.setMonth(o+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return t}function _strftime(e,n,t,r){var o=HEAP32[r+40>>2],i={tm_sec:HEAP32[r>>2],tm_min:HEAP32[r+4>>2],tm_hour:HEAP32[r+8>>2],tm_mday:HEAP32[r+12>>2],tm_mon:HEAP32[r+16>>2],tm_year:HEAP32[r+20>>2],tm_wday:HEAP32[r+24>>2],tm_yday:HEAP32[r+28>>2],tm_isdst:HEAP32[r+32>>2],tm_gmtoff:HEAP32[r+36>>2],tm_zone:o?Pointer_stringify(o):""},a=Pointer_stringify(t),s={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var u in s)a=a.replace(new RegExp(u,"g"),s[u]);var l=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],c=["January","February","March","April","May","June","July","August","September","October","November","December"];function _(e,n,t){for(var r="number"==typeof e?e.toString():e||"";r.length<n;)r=t[0]+r;return r}function d(e,n){return _(e,n,"0")}function f(e,n){function t(e){return e<0?-1:e>0?1:0}var r;return 0===(r=t(e.getFullYear()-n.getFullYear()))&&0===(r=t(e.getMonth()-n.getMonth()))&&(r=t(e.getDate()-n.getDate())),r}function p(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function m(e){var n=__addDays(new Date(e.tm_year+1900,0,1),e.tm_yday),t=new Date(n.getFullYear(),0,4),r=new Date(n.getFullYear()+1,0,4),o=p(t),i=p(r);return f(o,n)<=0?f(i,n)<=0?n.getFullYear()+1:n.getFullYear():n.getFullYear()-1}var E={"%a":function(e){return l[e.tm_wday].substring(0,3)},"%A":function(e){return l[e.tm_wday]},"%b":function(e){return c[e.tm_mon].substring(0,3)},"%B":function(e){return c[e.tm_mon]},"%C":function(e){return d((e.tm_year+1900)/100|0,2)},"%d":function(e){return d(e.tm_mday,2)},"%e":function(e){return _(e.tm_mday,2," ")},"%g":function(e){return m(e).toString().substring(2)},"%G":function(e){return m(e)},"%H":function(e){return d(e.tm_hour,2)},"%I":function(e){var n=e.tm_hour;return 0==n?n=12:n>12&&(n-=12),d(n,2)},"%j":function(e){return d(e.tm_mday+__arraySum(__isLeapYear(e.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,e.tm_mon-1),3)},"%m":function(e){return d(e.tm_mon+1,2)},"%M":function(e){return d(e.tm_min,2)},"%n":function(){return"\n"},"%p":function(e){return e.tm_hour>=0&&e.tm_hour<12?"AM":"PM"},"%S":function(e){return d(e.tm_sec,2)},"%t":function(){return"\t"},"%u":function(e){return new Date(e.tm_year+1900,e.tm_mon+1,e.tm_mday,0,0,0,0).getDay()||7},"%U":function(e){var n=new Date(e.tm_year+1900,0,1),t=0===n.getDay()?n:__addDays(n,7-n.getDay()),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(f(t,r)<0){var o=__arraySum(__isLeapYear(r.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,r.getMonth()-1)-31,i=31-t.getDate()+o+r.getDate();return d(Math.ceil(i/7),2)}return 0===f(t,n)?"01":"00"},"%V":function(e){var n,t=new Date(e.tm_year+1900,0,4),r=new Date(e.tm_year+1901,0,4),o=p(t),i=p(r),a=__addDays(new Date(e.tm_year+1900,0,1),e.tm_yday);return f(a,o)<0?"53":f(i,a)<=0?"01":(n=o.getFullYear()<e.tm_year+1900?e.tm_yday+32-o.getDate():e.tm_yday+1-o.getDate(),d(Math.ceil(n/7),2))},"%w":function(e){return new Date(e.tm_year+1900,e.tm_mon+1,e.tm_mday,0,0,0,0).getDay()},"%W":function(e){var n=new Date(e.tm_year,0,1),t=1===n.getDay()?n:__addDays(n,0===n.getDay()?1:7-n.getDay()+1),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(f(t,r)<0){var o=__arraySum(__isLeapYear(r.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,r.getMonth()-1)-31,i=31-t.getDate()+o+r.getDate();return d(Math.ceil(i/7),2)}return 0===f(t,n)?"01":"00"},"%y":function(e){return(e.tm_year+1900).toString().substring(2)},"%Y":function(e){return e.tm_year+1900},"%z":function(e){var n=e.tm_gmtoff,t=n>=0;return n=(n=Math.abs(n)/60)/60*100+n%60,(t?"+":"-")+String("0000"+n).slice(-4)},"%Z":function(e){return e.tm_zone},"%%":function(){return"%"}};for(var u in E)a.indexOf(u)>=0&&(a=a.replace(new RegExp(u,"g"),E[u](i)));var S=intArrayFromString(a,!1);return S.length>n?0:(writeArrayToMemory(S,e),S.length-1)}function _strftime_l(e,n,t,r){return _strftime(e,n,t,r)}if(FS.staticInit(),__ATINIT__.unshift(function(){Module.noFSInit||FS.init.initialized||FS.init()}),__ATMAIN__.push(function(){FS.ignorePermissions=!1}),__ATEXIT__.push(function(){FS.quit()}),__ATINIT__.unshift(function(){TTY.init()}),__ATEXIT__.push(function(){TTY.shutdown()}),ENVIRONMENT_IS_NODE){var fs=require("fs"),NODEJS_PATH=require("path");NODEFS.staticInit()}function intArrayFromString(e,n,t){var r=t>0?t:lengthBytesUTF8(e)+1,o=new Array(r),i=stringToUTF8Array(e,o,0,o.length);return n&&(o.length=i),o}function invoke_ddd(e,n,t){try{return Module.dynCall_ddd(e,n,t)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_ddi(e,n,t){try{return Module.dynCall_ddi(e,n,t)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_di(e,n){try{return Module.dynCall_di(e,n)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_dii(e,n,t){try{return Module.dynCall_dii(e,n,t)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_diii(e,n,t,r){try{return Module.dynCall_diii(e,n,t,r)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_diiiii(e,n,t,r,o,i){try{return Module.dynCall_diiiii(e,n,t,r,o,i)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_diiiiidd(e,n,t,r,o,i,a,s){try{return Module.dynCall_diiiiidd(e,n,t,r,o,i,a,s)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_fiii(e,n,t,r){try{return Module.dynCall_fiii(e,n,t,r)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_i(e){try{return Module.dynCall_i(e)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_id(e,n){try{return Module.dynCall_id(e,n)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iddd(e,n,t,r){try{return Module.dynCall_iddd(e,n,t,r)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iddddii(e,n,t,r,o,i,a){try{return Module.dynCall_iddddii(e,n,t,r,o,i,a)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_idi(e,n,t){try{return Module.dynCall_idi(e,n,t)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_ii(e,n){try{return Module.dynCall_ii(e,n)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iid(e,n,t){try{return Module.dynCall_iid(e,n,t)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iii(e,n,t){try{return Module.dynCall_iii(e,n,t)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiii(e,n,t,r){try{return Module.dynCall_iiii(e,n,t,r)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiii(e,n,t,r,o){try{return Module.dynCall_iiiii(e,n,t,r,o)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiid(e,n,t,r,o,i){try{return Module.dynCall_iiiiid(e,n,t,r,o,i)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiii(e,n,t,r,o,i){try{return Module.dynCall_iiiiii(e,n,t,r,o,i)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiiii(e,n,t,r,o,i,a){try{return Module.dynCall_iiiiiii(e,n,t,r,o,i,a)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiiiii(e,n,t,r,o,i,a,s){try{return Module.dynCall_iiiiiiii(e,n,t,r,o,i,a,s)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiiiiii(e,n,t,r,o,i,a,s,u){try{return Module.dynCall_iiiiiiiii(e,n,t,r,o,i,a,s,u)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c){try{return Module.dynCall_iiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c,_){try{return Module.dynCall_iiiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c,_)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_iiiiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c,_,d){try{return Module.dynCall_iiiiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c,_,d)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_v(e){try{Module.dynCall_v(e)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_vi(e,n){try{Module.dynCall_vi(e,n)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_vii(e,n,t){try{Module.dynCall_vii(e,n,t)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viidii(e,n,t,r,o,i){try{Module.dynCall_viidii(e,n,t,r,o,i)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viii(e,n,t,r){try{Module.dynCall_viii(e,n,t,r)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viiii(e,n,t,r,o){try{Module.dynCall_viiii(e,n,t,r,o)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viiiii(e,n,t,r,o,i){try{Module.dynCall_viiiii(e,n,t,r,o,i)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viiiiii(e,n,t,r,o,i,a){try{Module.dynCall_viiiiii(e,n,t,r,o,i,a)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viiiiiii(e,n,t,r,o,i,a,s){try{Module.dynCall_viiiiiii(e,n,t,r,o,i,a,s)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viiiiiiii(e,n,t,r,o,i,a,s,u){try{Module.dynCall_viiiiiiii(e,n,t,r,o,i,a,s,u)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c){try{Module.dynCall_viiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}function invoke_viiiiiiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c,_,d,f,p,m){try{Module.dynCall_viiiiiiiiiiiiiii(e,n,t,r,o,i,a,s,u,l,c,_,d,f,p,m)}catch(e){if("number"!=typeof e&&"longjmp"!==e)throw e;Module.setThrew(1,0)}}___buildEnvironment(ENV),Module.requestFullScreen=function(e,n,t){Module.printErr("Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead."),Module.requestFullScreen=Module.requestFullscreen,Browser.requestFullScreen(e,n,t)},Module.requestFullscreen=function(e,n,t){Browser.requestFullscreen(e,n,t)},Module.requestAnimationFrame=function(e){Browser.requestAnimationFrame(e)},Module.setCanvasSize=function(e,n,t){Browser.setCanvasSize(e,n,t)},Module.pauseMainLoop=function(){Browser.mainLoop.pause()},Module.resumeMainLoop=function(){Browser.mainLoop.resume()},Module.getUserMedia=function(){Browser.getUserMedia()},Module.createContext=function(e,n,t,r){return Browser.createContext(e,n,t,r)},_emscripten_get_now=ENVIRONMENT_IS_NODE?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:"undefined"!=typeof dateNow?dateNow:"object"==typeof self&&self.performance&&"function"==typeof self.performance.now?function(){return self.performance.now()}:"object"==typeof performance&&"function"==typeof performance.now?function(){return performance.now()}:Date.now,DYNAMICTOP_PTR=staticAlloc(4),DYNAMIC_BASE=alignMemory(STACK_MAX=(STACK_BASE=STACKTOP=alignMemory(STATICTOP))+TOTAL_STACK),HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE,staticSealed=!0,Module.wasmTableSize=5228,Module.wasmMaxTableSize=5228,Module.asmGlobalArg={},Module.asmLibraryArg={abort:abort,enlargeMemory:enlargeMemory,getTotalMemory:getTotalMemory,abortOnCannotGrowMemory:abortOnCannotGrowMemory,invoke_ddd:invoke_ddd,invoke_ddi:invoke_ddi,invoke_di:invoke_di,invoke_dii:invoke_dii,invoke_diii:invoke_diii,invoke_diiiii:invoke_diiiii,invoke_diiiiidd:invoke_diiiiidd,invoke_fiii:invoke_fiii,invoke_i:invoke_i,invoke_id:invoke_id,invoke_iddd:invoke_iddd,invoke_iddddii:invoke_iddddii,invoke_idi:invoke_idi,invoke_ii:invoke_ii,invoke_iid:invoke_iid,invoke_iii:invoke_iii,invoke_iiii:invoke_iiii,invoke_iiiii:invoke_iiiii,invoke_iiiiid:invoke_iiiiid,invoke_iiiiii:invoke_iiiiii,invoke_iiiiiii:invoke_iiiiiii,invoke_iiiiiiii:invoke_iiiiiiii,invoke_iiiiiiiii:invoke_iiiiiiiii,invoke_iiiiiiiiiii:invoke_iiiiiiiiiii,invoke_iiiiiiiiiiii:invoke_iiiiiiiiiiii,invoke_iiiiiiiiiiiii:invoke_iiiiiiiiiiiii,invoke_v:invoke_v,invoke_vi:invoke_vi,invoke_vii:invoke_vii,invoke_viidii:invoke_viidii,invoke_viii:invoke_viii,invoke_viiii:invoke_viiii,invoke_viiiii:invoke_viiiii,invoke_viiiiii:invoke_viiiiii,invoke_viiiiiii:invoke_viiiiiii,invoke_viiiiiiii:invoke_viiiiiiii,invoke_viiiiiiiiii:invoke_viiiiiiiiii,invoke_viiiiiiiiiiiiiii:invoke_viiiiiiiiiiiiiii,__ZSt18uncaught_exceptionv:__ZSt18uncaught_exceptionv,___assert_fail:___assert_fail,___cxa_allocate_exception:___cxa_allocate_exception,___cxa_begin_catch:___cxa_begin_catch,___cxa_call_unexpected:___cxa_call_unexpected,___cxa_end_catch:___cxa_end_catch,___cxa_find_matching_catch_2:___cxa_find_matching_catch_2,___cxa_find_matching_catch_3:___cxa_find_matching_catch_3,___cxa_find_matching_catch_4:___cxa_find_matching_catch_4,___cxa_find_matching_catch_6:___cxa_find_matching_catch_6,___cxa_find_matching_catch_8:___cxa_find_matching_catch_8,___cxa_free_exception:___cxa_free_exception,___cxa_get_exception_ptr:___cxa_get_exception_ptr,___cxa_pure_virtual:___cxa_pure_virtual,___cxa_rethrow:___cxa_rethrow,___cxa_throw:___cxa_throw,___lock:___lock,___map_file:___map_file,___resumeException:___resumeException,___setErrNo:___setErrNo,___syscall140:___syscall140,___syscall145:___syscall145,___syscall146:___syscall146,___syscall183:___syscall183,___syscall195:___syscall195,___syscall220:___syscall220,___syscall221:___syscall221,___syscall3:___syscall3,___syscall5:___syscall5,___syscall54:___syscall54,___syscall6:___syscall6,___syscall91:___syscall91,___unlock:___unlock,_abort:_abort,_dlclose:_dlclose,_dlerror:_dlerror,_dlopen:_dlopen,_dlsym:_dlsym,_emscripten_asm_const_ii:_emscripten_asm_const_ii,_emscripten_asm_const_iii:_emscripten_asm_const_iii,_emscripten_asm_const_iiii:_emscripten_asm_const_iiii,_emscripten_memcpy_big:_emscripten_memcpy_big,_emscripten_sleep:_emscripten_sleep,_exit:_exit,_getenv:_getenv,_llvm_eh_typeid_for:_llvm_eh_typeid_for,_llvm_trap:_llvm_trap,_llvm_trunc_f64:_llvm_trunc_f64,_pthread_cond_wait:_pthread_cond_wait,_pthread_getspecific:_pthread_getspecific,_pthread_key_create:_pthread_key_create,_pthread_once:_pthread_once,_pthread_setspecific:_pthread_setspecific,_strftime_l:_strftime_l,DYNAMICTOP_PTR:DYNAMICTOP_PTR,tempDoublePtr:tempDoublePtr,STACKTOP:STACKTOP},Module.asmLibraryArg.EMTSTACKTOP=EMTSTACKTOP,Module.asmLibraryArg.EMT_STACK_MAX=EMT_STACK_MAX,Module.asmLibraryArg.eb=eb;var asm=Module.asm(Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module.asm=asm;var initialStackTop,__GLOBAL__I_000101=Module.__GLOBAL__I_000101=function(){return Module.asm.__GLOBAL__I_000101.apply(null,arguments)},__GLOBAL__sub_I_ast_cpp=Module.__GLOBAL__sub_I_ast_cpp=function(){return Module.asm.__GLOBAL__sub_I_ast_cpp.apply(null,arguments)},__GLOBAL__sub_I_ast_fwd_decl_cpp=Module.__GLOBAL__sub_I_ast_fwd_decl_cpp=function(){return Module.asm.__GLOBAL__sub_I_ast_fwd_decl_cpp.apply(null,arguments)},__GLOBAL__sub_I_bind_cpp=Module.__GLOBAL__sub_I_bind_cpp=function(){return Module.asm.__GLOBAL__sub_I_bind_cpp.apply(null,arguments)},__GLOBAL__sub_I_check_nesting_cpp=Module.__GLOBAL__sub_I_check_nesting_cpp=function(){return Module.asm.__GLOBAL__sub_I_check_nesting_cpp.apply(null,arguments)},__GLOBAL__sub_I_color_maps_cpp=Module.__GLOBAL__sub_I_color_maps_cpp=function(){return Module.asm.__GLOBAL__sub_I_color_maps_cpp.apply(null,arguments)},__GLOBAL__sub_I_context_cpp=Module.__GLOBAL__sub_I_context_cpp=function(){return Module.asm.__GLOBAL__sub_I_context_cpp.apply(null,arguments)},__GLOBAL__sub_I_cssize_cpp=Module.__GLOBAL__sub_I_cssize_cpp=function(){return Module.asm.__GLOBAL__sub_I_cssize_cpp.apply(null,arguments)},__GLOBAL__sub_I_emitter_cpp=Module.__GLOBAL__sub_I_emitter_cpp=function(){return Module.asm.__GLOBAL__sub_I_emitter_cpp.apply(null,arguments)},__GLOBAL__sub_I_environment_cpp=Module.__GLOBAL__sub_I_environment_cpp=function(){return Module.asm.__GLOBAL__sub_I_environment_cpp.apply(null,arguments)},__GLOBAL__sub_I_error_handling_cpp=Module.__GLOBAL__sub_I_error_handling_cpp=function(){return Module.asm.__GLOBAL__sub_I_error_handling_cpp.apply(null,arguments)},__GLOBAL__sub_I_eval_cpp=Module.__GLOBAL__sub_I_eval_cpp=function(){return Module.asm.__GLOBAL__sub_I_eval_cpp.apply(null,arguments)},__GLOBAL__sub_I_expand_cpp=Module.__GLOBAL__sub_I_expand_cpp=function(){return Module.asm.__GLOBAL__sub_I_expand_cpp.apply(null,arguments)},__GLOBAL__sub_I_extend_cpp=Module.__GLOBAL__sub_I_extend_cpp=function(){return Module.asm.__GLOBAL__sub_I_extend_cpp.apply(null,arguments)},__GLOBAL__sub_I_file_cpp=Module.__GLOBAL__sub_I_file_cpp=function(){return Module.asm.__GLOBAL__sub_I_file_cpp.apply(null,arguments)},__GLOBAL__sub_I_functions_cpp=Module.__GLOBAL__sub_I_functions_cpp=function(){return Module.asm.__GLOBAL__sub_I_functions_cpp.apply(null,arguments)},__GLOBAL__sub_I_inspect_cpp=Module.__GLOBAL__sub_I_inspect_cpp=function(){return Module.asm.__GLOBAL__sub_I_inspect_cpp.apply(null,arguments)},__GLOBAL__sub_I_iostream_cpp=Module.__GLOBAL__sub_I_iostream_cpp=function(){return Module.asm.__GLOBAL__sub_I_iostream_cpp.apply(null,arguments)},__GLOBAL__sub_I_listize_cpp=Module.__GLOBAL__sub_I_listize_cpp=function(){return Module.asm.__GLOBAL__sub_I_listize_cpp.apply(null,arguments)},__GLOBAL__sub_I_node_cpp=Module.__GLOBAL__sub_I_node_cpp=function(){return Module.asm.__GLOBAL__sub_I_node_cpp.apply(null,arguments)},__GLOBAL__sub_I_output_cpp=Module.__GLOBAL__sub_I_output_cpp=function(){return Module.asm.__GLOBAL__sub_I_output_cpp.apply(null,arguments)},__GLOBAL__sub_I_parser_cpp=Module.__GLOBAL__sub_I_parser_cpp=function(){return Module.asm.__GLOBAL__sub_I_parser_cpp.apply(null,arguments)},__GLOBAL__sub_I_remove_placeholders_cpp=Module.__GLOBAL__sub_I_remove_placeholders_cpp=function(){return Module.asm.__GLOBAL__sub_I_remove_placeholders_cpp.apply(null,arguments)},__GLOBAL__sub_I_sass2scss_cpp=Module.__GLOBAL__sub_I_sass2scss_cpp=function(){return Module.asm.__GLOBAL__sub_I_sass2scss_cpp.apply(null,arguments)},__GLOBAL__sub_I_sass_context_cpp=Module.__GLOBAL__sub_I_sass_context_cpp=function(){return Module.asm.__GLOBAL__sub_I_sass_context_cpp.apply(null,arguments)},__GLOBAL__sub_I_sass_cpp=Module.__GLOBAL__sub_I_sass_cpp=function(){return Module.asm.__GLOBAL__sub_I_sass_cpp.apply(null,arguments)},__GLOBAL__sub_I_sass_functions_cpp=Module.__GLOBAL__sub_I_sass_functions_cpp=function(){return Module.asm.__GLOBAL__sub_I_sass_functions_cpp.apply(null,arguments)},__GLOBAL__sub_I_sass_util_cpp=Module.__GLOBAL__sub_I_sass_util_cpp=function(){return Module.asm.__GLOBAL__sub_I_sass_util_cpp.apply(null,arguments)},__GLOBAL__sub_I_sass_values_cpp=Module.__GLOBAL__sub_I_sass_values_cpp=function(){return Module.asm.__GLOBAL__sub_I_sass_values_cpp.apply(null,arguments)},__GLOBAL__sub_I_source_map_cpp=Module.__GLOBAL__sub_I_source_map_cpp=function(){return Module.asm.__GLOBAL__sub_I_source_map_cpp.apply(null,arguments)},__GLOBAL__sub_I_subset_map_cpp=Module.__GLOBAL__sub_I_subset_map_cpp=function(){return Module.asm.__GLOBAL__sub_I_subset_map_cpp.apply(null,arguments)},__GLOBAL__sub_I_to_c_cpp=Module.__GLOBAL__sub_I_to_c_cpp=function(){return Module.asm.__GLOBAL__sub_I_to_c_cpp.apply(null,arguments)},__GLOBAL__sub_I_to_value_cpp=Module.__GLOBAL__sub_I_to_value_cpp=function(){return Module.asm.__GLOBAL__sub_I_to_value_cpp.apply(null,arguments)},__GLOBAL__sub_I_units_cpp=Module.__GLOBAL__sub_I_units_cpp=function(){return Module.asm.__GLOBAL__sub_I_units_cpp.apply(null,arguments)},__GLOBAL__sub_I_util_cpp=Module.__GLOBAL__sub_I_util_cpp=function(){return Module.asm.__GLOBAL__sub_I_util_cpp.apply(null,arguments)},__GLOBAL__sub_I_values_cpp=Module.__GLOBAL__sub_I_values_cpp=function(){return Module.asm.__GLOBAL__sub_I_values_cpp.apply(null,arguments)},___cxa_can_catch=Module.___cxa_can_catch=function(){return Module.asm.___cxa_can_catch.apply(null,arguments)},___cxa_is_pointer_type=Module.___cxa_is_pointer_type=function(){return Module.asm.___cxa_is_pointer_type.apply(null,arguments)},___errno_location=Module.___errno_location=function(){return Module.asm.___errno_location.apply(null,arguments)},_emscripten_replace_memory=Module._emscripten_replace_memory=function(){return Module.asm._emscripten_replace_memory.apply(null,arguments)},_free=Module._free=function(){return Module.asm._free.apply(null,arguments)},_malloc=Module._malloc=function(){return Module.asm._malloc.apply(null,arguments)},_sass_compile_emscripten=Module._sass_compile_emscripten=function(){return Module.asm._sass_compile_emscripten.apply(null,arguments)},emtStackSave=Module.emtStackSave=function(){return Module.asm.emtStackSave.apply(null,arguments)},emterpret=Module.emterpret=function(){return Module.asm.emterpret.apply(null,arguments)},setAsyncState=Module.setAsyncState=function(){return Module.asm.setAsyncState.apply(null,arguments)},setTempRet0=Module.setTempRet0=function(){return Module.asm.setTempRet0.apply(null,arguments)},setThrew=Module.setThrew=function(){return Module.asm.setThrew.apply(null,arguments)},stackAlloc=Module.stackAlloc=function(){return Module.asm.stackAlloc.apply(null,arguments)},stackRestore=Module.stackRestore=function(){return Module.asm.stackRestore.apply(null,arguments)},stackSave=Module.stackSave=function(){return Module.asm.stackSave.apply(null,arguments)},dynCall_ddd=Module.dynCall_ddd=function(){return Module.asm.dynCall_ddd.apply(null,arguments)},dynCall_ddi=Module.dynCall_ddi=function(){return Module.asm.dynCall_ddi.apply(null,arguments)},dynCall_di=Module.dynCall_di=function(){return Module.asm.dynCall_di.apply(null,arguments)},dynCall_dii=Module.dynCall_dii=function(){return Module.asm.dynCall_dii.apply(null,arguments)},dynCall_diii=Module.dynCall_diii=function(){return Module.asm.dynCall_diii.apply(null,arguments)},dynCall_diiiii=Module.dynCall_diiiii=function(){return Module.asm.dynCall_diiiii.apply(null,arguments)},dynCall_diiiiidd=Module.dynCall_diiiiidd=function(){return Module.asm.dynCall_diiiiidd.apply(null,arguments)},dynCall_fiii=Module.dynCall_fiii=function(){return Module.asm.dynCall_fiii.apply(null,arguments)},dynCall_i=Module.dynCall_i=function(){return Module.asm.dynCall_i.apply(null,arguments)},dynCall_id=Module.dynCall_id=function(){return Module.asm.dynCall_id.apply(null,arguments)},dynCall_iddd=Module.dynCall_iddd=function(){return Module.asm.dynCall_iddd.apply(null,arguments)},dynCall_iddddii=Module.dynCall_iddddii=function(){return Module.asm.dynCall_iddddii.apply(null,arguments)},dynCall_idi=Module.dynCall_idi=function(){return Module.asm.dynCall_idi.apply(null,arguments)},dynCall_ii=Module.dynCall_ii=function(){return Module.asm.dynCall_ii.apply(null,arguments)},dynCall_iid=Module.dynCall_iid=function(){return Module.asm.dynCall_iid.apply(null,arguments)},dynCall_iii=Module.dynCall_iii=function(){return Module.asm.dynCall_iii.apply(null,arguments)},dynCall_iiii=Module.dynCall_iiii=function(){return Module.asm.dynCall_iiii.apply(null,arguments)},dynCall_iiiii=Module.dynCall_iiiii=function(){return Module.asm.dynCall_iiiii.apply(null,arguments)},dynCall_iiiiid=Module.dynCall_iiiiid=function(){return Module.asm.dynCall_iiiiid.apply(null,arguments)},dynCall_iiiiii=Module.dynCall_iiiiii=function(){return Module.asm.dynCall_iiiiii.apply(null,arguments)},dynCall_iiiiiii=Module.dynCall_iiiiiii=function(){return Module.asm.dynCall_iiiiiii.apply(null,arguments)},dynCall_iiiiiiii=Module.dynCall_iiiiiiii=function(){return Module.asm.dynCall_iiiiiiii.apply(null,arguments)},dynCall_iiiiiiiii=Module.dynCall_iiiiiiiii=function(){return Module.asm.dynCall_iiiiiiiii.apply(null,arguments)},dynCall_iiiiiiiiiii=Module.dynCall_iiiiiiiiiii=function(){return Module.asm.dynCall_iiiiiiiiiii.apply(null,arguments)},dynCall_iiiiiiiiiiii=Module.dynCall_iiiiiiiiiiii=function(){return Module.asm.dynCall_iiiiiiiiiiii.apply(null,arguments)},dynCall_iiiiiiiiiiiii=Module.dynCall_iiiiiiiiiiiii=function(){return Module.asm.dynCall_iiiiiiiiiiiii.apply(null,arguments)},dynCall_v=Module.dynCall_v=function(){return Module.asm.dynCall_v.apply(null,arguments)},dynCall_vi=Module.dynCall_vi=function(){return Module.asm.dynCall_vi.apply(null,arguments)},dynCall_vii=Module.dynCall_vii=function(){return Module.asm.dynCall_vii.apply(null,arguments)},dynCall_viidii=Module.dynCall_viidii=function(){return Module.asm.dynCall_viidii.apply(null,arguments)},dynCall_viii=Module.dynCall_viii=function(){return Module.asm.dynCall_viii.apply(null,arguments)},dynCall_viiii=Module.dynCall_viiii=function(){return Module.asm.dynCall_viiii.apply(null,arguments)},dynCall_viiiii=Module.dynCall_viiiii=function(){return Module.asm.dynCall_viiiii.apply(null,arguments)},dynCall_viiiiii=Module.dynCall_viiiiii=function(){return Module.asm.dynCall_viiiiii.apply(null,arguments)},dynCall_viiiiiii=Module.dynCall_viiiiiii=function(){return Module.asm.dynCall_viiiiiii.apply(null,arguments)},dynCall_viiiiiiii=Module.dynCall_viiiiiiii=function(){return Module.asm.dynCall_viiiiiiii.apply(null,arguments)},dynCall_viiiiiiiiii=Module.dynCall_viiiiiiiiii=function(){return Module.asm.dynCall_viiiiiiiiii.apply(null,arguments)},dynCall_viiiiiiiiiiiiiii=Module.dynCall_viiiiiiiiiiiiiii=function(){return Module.asm.dynCall_viiiiiiiiiiiiiii.apply(null,arguments)};function ExitStatus(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function run(e){function n(){Module.calledRun||(Module.calledRun=!0,ABORT||(ensureInitRuntime(),preMain(),Module.onRuntimeInitialized&&Module.onRuntimeInitialized(),postRun()))}e=e||Module.arguments,runDependencies>0||(preRun(),runDependencies>0||Module.calledRun||(Module.setStatus?(Module.setStatus("Running..."),setTimeout(function(){setTimeout(function(){Module.setStatus("")},1),n()},1)):n()))}function exit(e,n){n&&Module.noExitRuntime&&0===e||(Module.noExitRuntime||(ABORT=!0,EXITSTATUS=e,STACKTOP=initialStackTop,exitRuntime(),Module.onExit&&Module.onExit(e)),ENVIRONMENT_IS_NODE&&process.exit(e),Module.quit(e,new ExitStatus(e)))}function abort(e){throw Module.onAbort&&Module.onAbort(e),void 0!==e?(Module.print(e),Module.printErr(e),e=JSON.stringify(e)):e="",ABORT=!0,EXITSTATUS=1,"abort("+e+"). Build with -s ASSERTIONS=1 for more info."}if(Module.asm=asm,Module.ccall=ccall,Module.getValue=getValue,Module.Pointer_stringify=Pointer_stringify,Module.stringToUTF8=stringToUTF8,Module.lengthBytesUTF8=lengthBytesUTF8,ExitStatus.prototype=new Error,ExitStatus.prototype.constructor=ExitStatus,dependenciesFulfilled=function e(){Module.calledRun||run(),Module.calledRun||(dependenciesFulfilled=e)},Module.run=run,Module.exit=exit,Module.abort=abort,Module.preInit)for("function"==typeof Module.preInit&&(Module.preInit=[Module.preInit]);Module.preInit.length>0;)Module.preInit.pop()();function noop(){}function stripLeadingSlash(e){return"/"===e.slice(0,1)?e.slice(1):e}function addLeadingSlash(e){return"/"!==e.slice(0,1)?"/"+e:e}function stripTrailingSlash(e){return"/"===e.slice(-1)?e.slice(0,-1):e}function addTrailingSlash(e){return"/"!==e.slice(-1)?e+"/":e}function pointerToString(e){return e&&Module.Pointer_stringify(e)||null}function stringToPointer(e){var n=Module.lengthBytesUTF8(e),t=Module._malloc(n+1);return Module.stringToUTF8(e,t,n+1),t}function pointerToJson(e){var n=pointerToString(e);return n&&JSON.parse(n)||null}function pointerToStringArray(e){var n=[];if(!e)return n;for(var t=0;;t+=4){var r=Module.getValue(e+t,"*");if(!r)break;var o=pointerToString(r);o&&n.push(o)}return n}Module.noExitRuntime=!0,run();var _importerDone,BooleanNumber=function(e){return Number(Boolean(e))},options=[{type:"number",key:"style",initial:0,coerce:Number},{type:"number",key:"precision",initial:-1,coerce:Number},{type:"number",key:"comments",initial:0,coerce:BooleanNumber},{type:"number",key:"indentedSyntax",initial:0,coerce:BooleanNumber},{type:"number",key:"sourceMapContents",initial:1,coerce:BooleanNumber},{type:"number",key:"sourceMapEmbed",initial:0,coerce:BooleanNumber},{type:"number",key:"sourceMapOmitUrl",initial:1,coerce:BooleanNumber},{type:"string",key:"sourceMapRoot",initial:"root",coerce:String},{type:"string",key:"sourceMapFile",initial:"file",coerce:String},{type:"string",key:"inputPath",initial:"stdin",coerce:String},{type:"string",key:"outputPath",initial:"stdout",coerce:String},{type:"string",key:"indent",initial:"  ",coerce:String},{type:"string",key:"linefeed",initial:"\n",coerce:String}],Importer={_running:!1,_result:null,find:function(e,n){if(Sass._importer){Importer._running=!0,Importer._result=null;var t=PATH.resolve("stdin"===n?Sass._path:PATH.dirname(n),e),r=Sass.findPathVariation(FS.stat,t),o=function(e){Importer._result=e,Importer._running=!1};try{Sass._importer({current:e,previous:n,resolved:t,path:r,options:Sass._options.importer||null},o)}catch(e){o({error:e.message}),console.error(e.stack)}}else Importer._running=!1},finished:function(){return!Importer._running},path:function(){return Importer._resultPointer("path")},content:function(){return Importer._resultPointer("content")},error:function(){return Importer._resultPointer("error")},_resultPointer:function(e){return Importer._result&&void 0!==Importer._result[e]&&stringToPointer(Importer._result[e])||0}},Sass={style:{nested:0,expanded:1,compact:2,compressed:3},comments:{none:0,default:1},_options:{},_defaultOptions:{},_optionTypes:{},_files:{},_path:"/sass/",FS:FS,PATH:PATH,Module:Module,_initialized:!1,_ready:function(){Sass._initialized=!0,Sass._compileNext()},_compileNext:function(){if(Sass._compileQueue.length){var e=Sass._compileQueue.shift();Sass.compile.apply(Sass,e)}},options:function(e,n){"defaults"!==e?"object"==typeof e&&(Object.keys(e).forEach(function(n){var t=Sass._optionTypes[n];if("importer"!==n){if(!t)throw new Error('Unknown option "'+n+'"');Sass._options[n]=t(e[n])}else Sass._options[n]=e[n]}),n&&n()):Sass.options(Sass._defaultOptions,n)},_cloneOptions:function(){var e={};return Object.keys(Sass._options).forEach(function(n){e[n]=Sass._options[n]}),e},importer:function(e,n){if("function"!=typeof e&&null!==e)throw new Error("importer callback must either be a function or null");Sass._importer=e,n&&n()},_absolutePath:function(e){return Sass._path+stripLeadingSlash(e)},_createPath:function(e){for(var n=[];e.length;){var t=e.shift();try{FS.createFolder(n.join("/"),t,!0,!0)}catch(e){}n.push(t)}},_ensurePath:function(e){var n=e.split("/");if(n.pop(),n.length)try{return void FS.stat(n.join("/"))}catch(e){Sass._createPath(n)}},writeFile:function(e,n,t){if("object"==typeof e){t=n,n=null;var r={};return Object.keys(e).forEach(function(n){Sass.writeFile(n,e[n],function(e){r[n]=e})}),void(t&&t(r))}var o="/"===e.slice(0,1),i=Sass._absolutePath(e);try{Sass._ensurePath(i),FS.writeFile(i,n),Sass._files[i]=e,o&&(Sass._ensurePath(e),FS.symlink(i,e)),t&&t(!0)}catch(e){t&&t(!1)}},readFile:function(e,n){if(Array.isArray(e)){var t={};return e.forEach(function(e){Sass.readFile(e,function(n){t[e]=n})}),void(n&&n(t))}var r,o=Sass._absolutePath(e);try{r=FS.readFile(o,{encoding:"utf8"})}catch(e){}n&&n(r)},listFiles:function(e){var n=Object.keys(Sass._files).map(function(e){return Sass._files[e]});e&&e(n)},removeFile:function(e,n){if(Array.isArray(e)){var t={};return e.forEach(function(e){Sass.removeFile(e,function(n){t[e]=n})}),void(n&&n(t))}var r="/"===e.slice(0,1),o=Sass._absolutePath(e);try{FS.unlink(o),delete Sass._files[o],r&&FS.lstat(e)&&FS.unlink(e),n&&n(!0)}catch(e){n&&n(!1)}},clearFiles:function(e){Sass.listFiles(function(n){n.forEach(function(e){Sass.removeFile(e)}),e&&e()})},_handleFiles:function(e,n,t,r){var o=Sass._absolutePath(n||"");return o=addTrailingSlash(o),e=addTrailingSlash(e),t.map(function(n){var t=(n=stripLeadingSlash(n)).split("/"),i=t.pop(),a=o+t.join("/");return a=addTrailingSlash(a),r(a,i,e+n)},Sass)},_handleLazyFile:function(e,n,t){Sass._ensurePath(e+n),FS.createLazyFile(e,n,t,!0,!1)},_preloadingFiles:0,_preloadingFilesCallback:null,_handlePreloadFile:function(e,n,t){Sass._ensurePath(e+n),Sass._preloadingFiles++;var r=new XMLHttpRequest;r.onload=function(){Sass.writeFile(e.slice(Sass._path.length)+n,this.responseText),Sass._preloadingFiles--,Sass._preloadingFiles||(Sass._preloadingFilesCallback(),Sass._preloadingFilesCallback=null)},r.open("get",t,!0),r.send()},lazyFiles:function(e,n,t,r){Sass._handleFiles(e,n,t,Sass._handleLazyFile),r&&r()},preloadFiles:function(e,n,t,r){Sass._preloadingFilesCallback=r||noop,Sass._handleFiles(e,n,t,Sass._handlePreloadFile)},_compileQueue:[],compile:function(e,n,t,r){if("function"==typeof n&&(t=n,n=null),!t)throw new Error("Sass.compile() requires callback function as second (or third) parameter!");if(null!==n&&"object"!=typeof n)throw new Error("Sass.compile() requires second argument to be an object (options) or a function (callback)");var o=null,i=function(e){var n=function(){Sass._sassCompileEmscriptenSuccess=null,Sass._sassCompileEmscriptenError=null,Sass._compileNext()};("undefined"!=typeof setImmediate?setImmediate:setTimeout)(function(){o&&Sass.options(o),("undefined"!=typeof setImmediate?setImmediate:setTimeout)(n),t(e)})};if(!Sass._sassCompileEmscriptenSuccess&&Sass._initialized)try{n&&(o=Sass._cloneOptions(),Sass.options(n)),Sass._sassCompileEmscriptenSuccess=function(e,n,t){i({status:0,text:e,map:n,files:t})},Sass._sassCompileEmscriptenError=function(e,n){var t=e||{};t.formatted=n,i(t)},Module.ccall("sass_compile_emscripten",null,["string","string","bool","bool"].concat(options.map(function(e){return e.type})),[e,Sass._path,Number(Boolean(r)),Number(Boolean(Sass._importer))].concat(options.map(function(e){return Sass._options[e.key]})),{async:!0})}catch(e){i({status:99,line:null,message:e.message,error:e})}else Sass._compileQueue.push([e,n,t,r])},compileFile:function(e,n,t){var r=Sass._absolutePath(e);return"function"==typeof n&&(t=n,n={}),n.sourceMapRoot=r,n.inputPath=r,Sass.compile(r,n,t,!0)}};function isAbsolutePath(e){return"/"===e[0]}options.forEach(function(e){Sass._options[e.key]=Sass._defaultOptions[e.key]=e.initial,Sass._optionTypes[e.key]=e.coerce}),Sass.getPathVariations=function(e){e=PATH.normalize(e);var n=PATH.dirname(e),t=PATH.basename(e),r=[".scss",".sass",".css"],o=[e,PATH.resolve(n,"_"+t)].concat(r.map(function(e){return PATH.resolve(n,"_"+t+e)})).concat(r.map(function(e){return PATH.resolve(n,t+e)}));return isAbsolutePath(e)||(o=o.map(function(e){return isAbsolutePath(e)?e.slice(1):e})),o},Sass.findPathVariation=function(e,n){return Sass.getPathVariations(n).reduce(function(n,t){if(n)return n;try{return e(t),t}catch(e){return null}},null)};var _importerInit=function(e,n){_importerDone=n,postMessage({command:"_importerInit",args:[e]})},methods={_importerFinish:function(e){_importerDone&&_importerDone(e),_importerDone=null},importer:function(e){Sass.importer(e?_importerInit:null)}};onmessage=function(e){function n(n){try{postMessage({id:e.data.id,result:n})}catch(t){if(!n.error)throw t;n.error={code:n.error.code,message:n.error.message,stack:n.error.stack},postMessage({id:e.data.id,result:n})}}var t=methods[e.data.command]||Sass[e.data.command];if(!t)return n({line:0,message:"Unknown command "+e.action});t.apply(Sass,(e.data.args||[]).concat([n]))};