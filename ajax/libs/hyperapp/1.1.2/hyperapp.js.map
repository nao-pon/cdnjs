{"version":3,"sources":["dist/hyperapp.js"],"names":["global","factory","exports","module","define","amd","hyperapp","this","h","name","attributes","node","rest","children","length","arguments","push","pop","nodeName","key","app","state","actions","view","container","renderLock","invokeLaterStack","rootElement","oldNode","toVNode","element","map","toLowerCase","call","childNodes","nodeType","nodeValue","globalState","clone","wiredActions","scheduleRender","wireStateToActions","path","action","data","get","then","set","concat","render","next","patch","parent","isSVG","nextSibling","insertBefore","createElement","oldProps","setElementProp","onupdate","updateElement","oldElements","oldKeyed","newKeyed","i","oldChild","oldKey","getKey","j","newChild","newKey","recyledNode","removeElement","setTimeout","target","source","obj","value","slice","oldValue","setAttribute","removeAttribute","document","createTextNode","createElementNS","oncreate","appendChild","cb","done","removeChild","removeChildren","ondestroy","onremove"],"mappings":"CAAC,SAAUA,EAAQC,GACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,SACrD,mBAAXE,QAAyBA,OAAOC,KACtCJ,EAASD,EAAOM,aAHlB,CAIEC,KAAM,SAAWL,GAAW,aAkU9BA,EAAQM,EAhUR,SAAWC,EAAMC,GAMf,IALA,IAAIC,EACAC,KACAC,KACAC,EAASC,UAAUD,OAEhBA,KAAW,GAAGF,EAAKI,KAAKD,UAAUD,IAEzC,KAAOF,EAAKE,QACV,IAAKH,EAAOC,EAAKK,QAAUN,EAAKM,IAC9B,IAAKH,EAASH,EAAKG,OAAQA,KACzBF,EAAKI,KAAKL,EAAKG,SAEA,MAARH,IAAyB,IAATA,IAA0B,IAATA,GAC1CE,EAASG,KAAKL,GAIlB,MAAuB,mBAATF,EACVA,EAAKC,MAAkBG,IAErBK,SAAUT,EACVC,WAAYA,MACZG,SAAUA,EACVM,IAAKT,GAAcA,EAAWS,MAyStCjB,EAAQkB,IArSR,SAAaC,EAAOC,EAASC,EAAMC,GACjC,IAAIC,EACAC,KACAC,EAAeH,GAAaA,EAAUX,SAAS,IAAO,KACtDe,EAAUD,GAQd,SAASE,EAAQC,EAASC,GACxB,OACEb,SAAUY,EAAQZ,SAASc,cAC3BtB,cACAG,SAAUkB,EAAIE,KAAKH,EAAQI,WAAY,SAASJ,GAC9C,OAA4B,IAArBA,EAAQK,SACXL,EAAQM,UACRP,EAAQC,EAASC,MAfEF,CAAQF,KAAgBI,KACjDM,EAAcC,EAAMjB,GACpBkB,EAAeD,EAAMhB,GAIzB,OAFAkB,EA4DA,SAASC,EAAmBC,EAAMrB,EAAOC,GACvC,IAAK,IAAIH,KAAOG,EACU,mBAAjBA,EAAQH,GACX,SAAUA,EAAKwB,GACbrB,EAAQH,GAAO,SAASyB,GAetB,MAdqC,mBAAzBA,EAAOD,EAAOC,MACxBA,EAAOA,EAAKC,EAAIH,EAAML,GAAcf,IAIpCsB,GACAA,KAAUvB,EAAQwB,EAAIH,EAAML,MAC3BO,EAAKE,MAENN,EACGH,EAAcU,EAAIL,EAAMJ,EAAMjB,EAAOuB,GAAOP,IAI1CO,GAhBX,CAkBGzB,EAAKG,EAAQH,IAChBsB,EACEC,EAAKM,OAAO7B,GACXE,EAAMF,GAAOE,EAAMF,OACnBG,EAAQH,GAAOmB,EAAMhB,EAAQH,KArFzBsB,IAAuBJ,EAAaE,IAE5CA,EAcP,SAASU,IACPxB,GAAcA,EAEd,IAAIyB,EAAO3B,EAAKc,EAAaE,GAK7B,IAJIf,IAAcC,IAChBE,EAsKJ,SAASwB,EAAMC,EAAQtB,EAASF,EAASjB,EAAM0C,EAAOC,GACpD,GAAI3C,IAASiB,QACN,GAAe,MAAXA,EACTE,EAAUsB,EAAOG,aAAaC,EAAc7C,EAAM0C,GAAQvB,QACrD,GAAInB,EAAKO,UAAYP,EAAKO,WAAaU,EAAQV,SAAU,EAhDlE,SAAuBY,EAAS2B,EAAU/C,EAAY2C,GACpD,IAAK,IAAI5C,KAAQ6B,EAAMmB,EAAU/C,GAE7BA,EAAWD,MACD,UAATA,GAA6B,YAATA,EACjBqB,EAAQrB,GACRgD,EAAShD,KAEbiD,EAAe5B,EAASrB,EAAMC,EAAWD,GAAO4C,EAAOI,EAAShD,IAIhEC,EAAWiD,UACbjC,EAAiBV,KAAK,WACpBN,EAAWiD,SAAS7B,EAAS2B,KAmC/BG,CACE9B,EACAF,EAAQlB,WACRC,EAAKD,WACJ2C,EAAQA,GAA2B,QAAlB1C,EAAKO,UAOzB,IAJA,IAAI2C,KACAC,KACAC,KAEKC,EAAI,EAAGA,EAAIpC,EAAQf,SAASC,OAAQkD,IAAK,CAChDH,EAAYG,GAAKlC,EAAQI,WAAW8B,GAEpC,IAAIC,EAAWrC,EAAQf,SAASmD,GAC5BE,EAASC,EAAOF,GAEhB,MAAQC,IACVJ,EAASI,IAAWL,EAAYG,GAAIC,IAOxC,IAHA,IAAID,EAAI,EACJI,EAAI,EAEDA,EAAIzD,EAAKE,SAASC,QAAQ,CAC/B,IAAImD,EAAWrC,EAAQf,SAASmD,GAC5BK,EAAW1D,EAAKE,SAASuD,GAEzBF,EAASC,EAAOF,GAChBK,EAASH,EAAOE,GAEpB,GAAIN,EAASG,GACXF,SAIF,GAAc,MAAVM,EACY,MAAVJ,IACFf,EAAMrB,EAAS+B,EAAYG,GAAIC,EAAUI,EAAUhB,GACnDe,KAEFJ,QACK,CACL,IAAIO,EAAcT,EAASQ,OAEvBJ,IAAWI,GACbnB,EAAMrB,EAASyC,EAAY,GAAIA,EAAY,GAAIF,EAAUhB,GACzDW,KACSO,EAAY,GACrBpB,EACErB,EACAA,EAAQyB,aAAagB,EAAY,GAAIV,EAAYG,IACjDO,EAAY,GACZF,EACAhB,GAGFF,EAAMrB,EAAS+B,EAAYG,GAAI,KAAMK,EAAUhB,GAGjDe,IACAL,EAASO,GAAUD,GAIvB,KAAOL,EAAIpC,EAAQf,SAASC,QAAQ,CAClC,IAAImD,EAAWrC,EAAQf,SAASmD,GACR,MAApBG,EAAOF,IACTO,EAAc1C,EAAS+B,EAAYG,GAAIC,GAEzCD,IAGF,IAAK,IAAIA,KAAKF,EACPC,EAASD,EAASE,GAAG,GAAG7C,MAC3BqD,EAAc1C,EAASgC,EAASE,GAAG,GAAIF,EAASE,GAAG,SAG9CrD,EAAKO,WAAaU,EAAQV,SACnCY,EAAQM,UAAYzB,GAEpBmB,EAAUsB,EAAOG,aACfC,EAAc7C,EAAM0C,GACnBC,EAAcxB,GAEjB0C,EAAcpB,EAAQE,EAAa1B,IAErC,OAAOE,EAnQSqB,CAAM3B,EAAWG,EAAaC,EAAUA,EAAUsB,IAG1DA,EAAOxB,EAAiBT,OAAQiC,IAG1C,SAASV,IACFf,IACHA,GAAcA,EACdgD,WAAWxB,IAIf,SAASX,EAAMoC,EAAQC,GACrB,IAAIC,KAEJ,IAAK,IAAIZ,KAAKU,EAAQE,EAAIZ,GAAKU,EAAOV,GACtC,IAAK,IAAIA,KAAKW,EAAQC,EAAIZ,GAAKW,EAAOX,GAEtC,OAAOY,EAGT,SAAS7B,EAAIL,EAAMmC,EAAOF,GACxB,IAAID,KACJ,OAAIhC,EAAK5B,QACP4D,EAAOhC,EAAK,IACVA,EAAK5B,OAAS,EAAIiC,EAAIL,EAAKoC,MAAM,GAAID,EAAOF,EAAOjC,EAAK,KAAOmC,EAC1DvC,EAAMqC,EAAQD,IAEhBG,EAGT,SAAShC,EAAIH,EAAMiC,GACjB,IAAK,IAAIX,EAAI,EAAGA,EAAItB,EAAK5B,OAAQkD,IAC/BW,EAASA,EAAOjC,EAAKsB,IAEvB,OAAOW,EAiCT,SAASR,EAAOxD,GACd,OAAOA,EAAOA,EAAKQ,IAAM,KAG3B,SAASuC,EAAe5B,EAASrB,EAAMoE,EAAOxB,EAAO0B,GACnD,GAAa,QAATtE,QACG,GAAa,UAATA,EACT,IAAK,IAAIuD,KAAK1B,EAAMyC,EAAUF,GAC5B/C,EAAQrB,GAAMuD,GAAc,MAATa,GAA6B,MAAZA,EAAMb,GAAa,GAAKa,EAAMb,OAG/C,mBAAVa,GAAyBpE,KAAQqB,IAAYuB,EACtDvB,EAAQrB,GAAiB,MAAToE,EAAgB,GAAKA,EACnB,MAATA,IAA2B,IAAVA,GAC1B/C,EAAQkD,aAAavE,EAAMoE,GAGhB,MAATA,IAA2B,IAAVA,GACnB/C,EAAQmD,gBAAgBxE,GAK9B,SAAS+C,EAAc7C,EAAM0C,GAC3B,IAAIvB,EACc,iBAATnB,GAAqC,iBAATA,EAC/BuE,SAASC,eAAexE,IACvB0C,EAAQA,GAA2B,QAAlB1C,EAAKO,UACrBgE,SAASE,gBACP,6BACAzE,EAAKO,UAEPgE,SAAS1B,cAAc7C,EAAKO,UAEpC,GAAIP,EAAKD,WAAY,CACfC,EAAKD,WAAW2E,UAClB3D,EAAiBV,KAAK,WACpBL,EAAKD,WAAW2E,SAASvD,KAI7B,IAAK,IAAIkC,EAAI,EAAGA,EAAIrD,EAAKE,SAASC,OAAQkD,IACxClC,EAAQwD,YAAY9B,EAAc7C,EAAKE,SAASmD,GAAIX,IAGtD,IAAK,IAAI5C,KAAQE,EAAKD,WACpBgD,EAAe5B,EAASrB,EAAME,EAAKD,WAAWD,GAAO4C,GAIzD,OAAOvB,EAmCT,SAAS0C,EAAcpB,EAAQtB,EAASnB,EAAM4E,GAC5C,SAASC,IACPpC,EAAOqC,YAfX,SAASC,EAAe5D,EAASnB,EAAMD,GACrC,GAAKA,EAAaC,EAAKD,WAAa,CAClC,IAAK,IAAIsD,EAAI,EAAGA,EAAIrD,EAAKE,SAASC,OAAQkD,IACxC0B,EAAe5D,EAAQI,WAAW8B,GAAIrD,EAAKE,SAASmD,IAGlDtD,EAAWiF,WACbjF,EAAWiF,UAAU7D,GAGzB,OAAOA,EAKc4D,CAAe5D,EAASnB,IAGzCA,EAAKD,aAAe6E,EAAK5E,EAAKD,WAAWkF,UAC3CL,EAAGzD,EAAS0D,GAEZA","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(factory((global.hyperapp = {})));\n}(this, (function (exports) { 'use strict';\n\nfunction h(name, attributes /*, ...rest*/) {\n  var node;\n  var rest = [];\n  var children = [];\n  var length = arguments.length;\n\n  while (length-- > 2) rest.push(arguments[length]);\n\n  while (rest.length) {\n    if ((node = rest.pop()) && node.pop /* Array? */) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length]);\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node);\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nfunction app(state, actions, view, container) {\n  var renderLock;\n  var invokeLaterStack = [];\n  var rootElement = (container && container.children[0]) || null;\n  var oldNode = rootElement && toVNode(rootElement, [].map);\n  var globalState = clone(state);\n  var wiredActions = clone(actions);\n\n  scheduleRender(wireStateToActions([], globalState, wiredActions));\n\n  return wiredActions\n\n  function toVNode(element, map) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : toVNode(element, map)\n      })\n    }\n  }\n\n  function render() {\n    renderLock = !renderLock;\n\n    var next = view(globalState, wiredActions);\n    if (container && !renderLock) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = next));\n    }\n\n    while ((next = invokeLaterStack.pop())) next();\n  }\n\n  function scheduleRender() {\n    if (!renderLock) {\n      renderLock = !renderLock;\n      setTimeout(render);\n    }\n  }\n\n  function clone(target, source) {\n    var obj = {};\n\n    for (var i in target) obj[i] = target[i];\n    for (var i in source) obj[i] = source[i];\n\n    return obj\n  }\n\n  function set(path, value, source) {\n    var target = {};\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1 ? set(path.slice(1), value, source[path[0]]) : value;\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function get(path, source) {\n    for (var i = 0; i < path.length; i++) {\n      source = source[path[i]];\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              if (typeof (data = action(data)) === \"function\") {\n                data = data(get(path, globalState), actions);\n              }\n\n              if (\n                data &&\n                data !== (state = get(path, globalState)) &&\n                !data.then // Promise\n              ) {\n                scheduleRender(\n                  (globalState = set(path, clone(state, data), globalState))\n                );\n              }\n\n              return data\n            };\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = state[key] || {}),\n            (actions[key] = clone(actions[key]))\n          );\n    }\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function setElementProp(element, name, value, isSVG, oldValue) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        element[name][i] = value == null || value[i] == null ? \"\" : value[i];\n      }\n    } else {\n      if (typeof value === \"function\" || (name in element && !isSVG)) {\n        element[name] = value == null ? \"\" : value;\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value);\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name);\n      }\n    }\n  }\n\n  function createElement(node, isSVG) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSVG = isSVG || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName);\n\n    if (node.attributes) {\n      if (node.attributes.oncreate) {\n        invokeLaterStack.push(function() {\n          node.attributes.oncreate(element);\n        });\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(createElement(node.children[i], isSVG));\n      }\n\n      for (var name in node.attributes) {\n        setElementProp(element, name, node.attributes[name], isSVG);\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldProps, attributes, isSVG) {\n    for (var name in clone(oldProps, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldProps[name])\n      ) {\n        setElementProp(element, name, attributes[name], isSVG, oldProps[name]);\n      }\n    }\n\n    if (attributes.onupdate) {\n      invokeLaterStack.push(function() {\n        attributes.onupdate(element, oldProps);\n      });\n    }\n  }\n\n  function removeChildren(element, node, attributes) {\n    if ((attributes = node.attributes)) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i]);\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element);\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node, cb) {\n    function done() {\n      parent.removeChild(removeChildren(element, node));\n    }\n\n    if (node.attributes && (cb = node.attributes.onremove)) {\n      cb(element, done);\n    } else {\n      done();\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSVG, nextSibling) {\n    if (node === oldNode) {\n    } else if (oldNode == null) {\n      element = parent.insertBefore(createElement(node, isSVG), element);\n    } else if (node.nodeName && node.nodeName === oldNode.nodeName) {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSVG = isSVG || node.nodeName === \"svg\")\n      );\n\n      var oldElements = [];\n      var oldKeyed = {};\n      var newKeyed = {};\n\n      for (var i = 0; i < oldNode.children.length; i++) {\n        oldElements[i] = element.childNodes[i];\n\n        var oldChild = oldNode.children[i];\n        var oldKey = getKey(oldChild);\n\n        if (null != oldKey) {\n          oldKeyed[oldKey] = [oldElements[i], oldChild];\n        }\n      }\n\n      var i = 0;\n      var j = 0;\n\n      while (j < node.children.length) {\n        var oldChild = oldNode.children[i];\n        var newChild = node.children[j];\n\n        var oldKey = getKey(oldChild);\n        var newKey = getKey(newChild);\n\n        if (newKeyed[oldKey]) {\n          i++;\n          continue\n        }\n\n        if (newKey == null) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChild, newChild, isSVG);\n            j++;\n          }\n          i++;\n        } else {\n          var recyledNode = oldKeyed[newKey] || [];\n\n          if (oldKey === newKey) {\n            patch(element, recyledNode[0], recyledNode[1], newChild, isSVG);\n            i++;\n          } else if (recyledNode[0]) {\n            patch(\n              element,\n              element.insertBefore(recyledNode[0], oldElements[i]),\n              recyledNode[1],\n              newChild,\n              isSVG\n            );\n          } else {\n            patch(element, oldElements[i], null, newChild, isSVG);\n          }\n\n          j++;\n          newKeyed[newKey] = newChild;\n        }\n      }\n\n      while (i < oldNode.children.length) {\n        var oldChild = oldNode.children[i];\n        if (getKey(oldChild) == null) {\n          removeElement(element, oldElements[i], oldChild);\n        }\n        i++;\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[oldKeyed[i][1].key]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1]);\n        }\n      }\n    } else if (node.nodeName === oldNode.nodeName) {\n      element.nodeValue = node;\n    } else {\n      element = parent.insertBefore(\n        createElement(node, isSVG),\n        (nextSibling = element)\n      );\n      removeElement(parent, nextSibling, oldNode);\n    }\n    return element\n  }\n}\n\nexports.h = h;\nexports.app = app;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=hyperapp.js.map\n"]}