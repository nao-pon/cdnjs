{"version":3,"sources":["../src/index.js"],"names":["app","props","container","vnode","element","map","h","tagName","toLowerCase","call","childNodes","nodeType","nodeValue","repaint","view","patchLock","setTimeout","render","next","appState","appActions","root","patch","node","lifecycle","pop","init","state","actions","from","path","modules","initDeep","set","i","concat","Object","keys","key","data","result","get","then","setDeep","merge","to","value","length","slice","createElement","isSVG","document","createTextNode","type","createElementNS","oncreate","push","children","appendChild","setElementProp","name","oldValue","style","_","removeAttribute","setAttribute","updateElement","oldProps","onupdate","removeElement","parent","done","removeChild","onremove","getKey","oldNode","nextSibling","insertBefore","len","oldLen","oldKeyed","oldElements","keyed","oldElement","oldChild","oldKey","j","newChild","newKey","keyedNode","reusableNode","body","stack","arguments","Array","isArray"],"mappings":"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","file":"hyperapp.js","sourcesContent":["export { h, app }\n\nfunction app(props, container) {\n  var root = (container = container || document.body).children[0]\n  var node = vnode(root, [].map)\n  var appState = {}\n  var appActions = {}\n  var lifecycle = []\n  var patchLock\n\n  repaint(init(appState, appActions, props, []))\n\n  return appActions\n\n  function vnode(element, map) {\n    return (\n      element &&\n      h(\n        element.tagName.toLowerCase(),\n        {},\n        map.call(element.childNodes, function(element) {\n          return element.nodeType === 3\n            ? element.nodeValue\n            : vnode(element, map)\n        })\n      )\n    )\n  }\n\n  function repaint() {\n    if (props.view && !patchLock) {\n      setTimeout(render, (patchLock = !patchLock))\n    }\n  }\n\n  function render(next) {\n    patchLock = !patchLock\n    if ((next = props.view(appState, appActions)) && !patchLock) {\n      root = patch(container, root, node, (node = next))\n    }\n    while ((next = lifecycle.pop())) next()\n  }\n\n  function init(state, actions, from, path) {\n    var modules = from.modules\n\n    initDeep(state, actions, from.actions, path)\n    set(state, from.state)\n\n    for (var i in modules) {\n      init((state[i] = {}), (actions[i] = {}), modules[i], path.concat(i))\n    }\n  }\n\n  function initDeep(state, actions, from, path) {\n    Object.keys(from || {}).map(function(key) {\n      if (typeof from[key] === \"function\") {\n        actions[key] = function(data) {\n          var result = from[key]((state = get(path, appState)), actions)\n\n          if (typeof result === \"function\") {\n            result = result(data)\n          }\n\n          if (result && result !== state && !result.then) {\n            repaint((appState = setDeep(path, merge(state, result), appState)))\n          }\n\n          return result\n        }\n      } else {\n        initDeep(\n          state[key] || (state[key] = {}),\n          (actions[key] = {}),\n          from[key],\n          path.concat(key)\n        )\n      }\n    })\n  }\n\n  function merge(to, from) {\n    return set(set({}, to), from)\n  }\n\n  function set(to, from) {\n    for (var i in from) {\n      to[i] = from[i]\n    }\n    return to\n  }\n\n  function setDeep(path, value, from) {\n    var to = {}\n    return path.length === 0\n      ? value\n      : ((to[path[0]] =\n          1 < path.length\n            ? setDeep(path.slice(1), value, from[path[0]])\n            : value),\n        merge(from, to))\n  }\n\n  function get(path, from) {\n    for (var i = 0; i < path.length; i++) {\n      from = from[path[i]]\n    }\n    return from\n  }\n\n  function createElement(node, isSVG) {\n    if (typeof node === \"string\") {\n      var element = document.createTextNode(node)\n    } else {\n      var element = (isSVG = isSVG || node.type === \"svg\")\n        ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n        : document.createElement(node.type)\n\n      if (node.props.oncreate) {\n        lifecycle.push(function() {\n          node.props.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(createElement(node.children[i], isSVG))\n      }\n\n      for (var i in node.props) {\n        setElementProp(element, i, node.props[i])\n      }\n    }\n    return element\n  }\n\n  function setElementProp(element, name, value, oldValue) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var name in merge(oldValue, (value = value || {}))) {\n        element.style[name] = value[name] || \"\"\n      }\n    } else {\n      try {\n        element[name] = null == value ? \"\" : value\n      } catch (_) {}\n\n      if (typeof value !== \"function\") {\n        if (null == value || false === value) {\n          element.removeAttribute(name)\n        } else {\n          element.setAttribute(name, value)\n        }\n      }\n    }\n  }\n\n  function updateElement(element, oldProps, props) {\n    for (var i in merge(oldProps, props)) {\n      var value = props[i]\n      var oldValue = i === \"value\" || i === \"checked\" ? element[i] : oldProps[i]\n\n      if (value !== oldValue) {\n        setElementProp(element, i, value, oldValue)\n      }\n    }\n\n    if (props.onupdate) {\n      lifecycle.push(function() {\n        props.onupdate(element, oldProps)\n      })\n    }\n  }\n\n  function removeElement(parent, element, props) {\n    if (props && props.onremove) {\n      props.onremove(element, done)\n    } else {\n      done()\n    }\n\n    function done() {\n      parent.removeChild(element)\n    }\n  }\n\n  function getKey(node) {\n    if (node && node.props) {\n      return node.props.key\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSVG, nextSibling) {\n    if (oldNode === node) {\n    } else if (oldNode == null) {\n      element = parent.insertBefore(createElement(node, isSVG), element)\n    } else if (node.type != null && node.type === oldNode.type) {\n      updateElement(element, oldNode.props, node.props)\n\n      isSVG = isSVG || node.type === \"svg\"\n\n      var len = node.children.length\n      var oldLen = oldNode.children.length\n      var oldKeyed = {}\n      var oldElements = []\n      var keyed = {}\n\n      for (var i = 0; i < oldLen; i++) {\n        var oldElement = (oldElements[i] = element.childNodes[i])\n        var oldChild = oldNode.children[i]\n        var oldKey = getKey(oldChild)\n\n        if (null != oldKey) {\n          oldKeyed[oldKey] = [oldElement, oldChild]\n        }\n      }\n\n      var i = 0\n      var j = 0\n\n      while (j < len) {\n        var oldElement = oldElements[i]\n        var oldChild = oldNode.children[i]\n        var newChild = node.children[j]\n\n        var oldKey = getKey(oldChild)\n        if (keyed[oldKey]) {\n          i++\n          continue\n        }\n\n        var newKey = getKey(newChild)\n        var keyedNode = oldKeyed[newKey] || []\n\n        if (null == newKey) {\n          if (null == oldKey) {\n            patch(element, oldElement, oldChild, newChild, isSVG)\n            j++\n          }\n          i++\n        } else {\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n            i++\n          } else if (keyedNode[0]) {\n            element.insertBefore(keyedNode[0], oldElement)\n            patch(element, keyedNode[0], keyedNode[1], newChild, isSVG)\n          } else {\n            patch(element, oldElement, null, newChild, isSVG)\n          }\n\n          j++\n          keyed[newKey] = newChild\n        }\n      }\n\n      while (i < oldLen) {\n        var oldChild = oldNode.children[i]\n        var oldKey = getKey(oldChild)\n        if (null == oldKey) {\n          removeElement(element, oldElements[i], oldChild.props)\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        var keyedNode = oldKeyed[i]\n        var reusableNode = keyedNode[1]\n        if (!keyed[reusableNode.props.key]) {\n          removeElement(element, keyedNode[0], reusableNode.props)\n        }\n      }\n    } else if (element && node !== element.nodeValue) {\n      if (typeof node === \"string\" && typeof oldNode === \"string\") {\n        element.nodeValue = node\n      } else {\n        element = parent.insertBefore(\n          createElement(node, isSVG),\n          (nextSibling = element)\n        )\n        removeElement(parent, nextSibling, oldNode.props)\n      }\n    }\n\n    return element\n  }\n}\n\nfunction h(type, props) {\n  var node\n  var stack = []\n  var children = []\n\n  for (var i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n\n  while (stack.length) {\n    if (Array.isArray((node = stack.pop()))) {\n      for (i = node.length; i--; ) {\n        stack.push(node[i])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(typeof node === \"number\" ? (node = node + \"\") : node)\n    }\n  }\n\n  return typeof type === \"string\"\n    ? {\n        type: type,\n        props: props || {},\n        children: children\n      }\n    : type(props || {}, children)\n}\n"]}