{"version":3,"file":"glamorous.umd.tiny.min.js","sources":["../src/with-theme.js","../src/get-glamor-classname.js","../src/react-compat.js","../src/constants.js","../src/create-glamorous.js","../src/tiny.js"],"sourcesContent":["import React, {Component} from 'react'\n\nimport {CHANNEL} from './constants'\nimport {PropTypes} from './react-compat'\n\nfunction generateWarningMessage(Comp) {\n  const componentName = Comp.displayName || Comp.name || 'FunctionComponent'\n  // eslint-disable-next-line max-len\n  return `glamorous warning: Expected component called \"${componentName}\" which uses withTheme to be within a ThemeProvider but none was found.`\n}\n\nexport default function withTheme(\n  ComponentToTheme,\n  {noWarn = false, createElement = true} = {},\n) {\n  class ThemedComponent extends Component {\n    static propTypes = {\n      theme: PropTypes.object,\n    }\n    warned = noWarn\n    state = {theme: {}}\n    setTheme = theme => this.setState({theme})\n\n    // eslint-disable-next-line complexity\n    componentWillMount() {\n      if (!this.context[CHANNEL]) {\n        if (process.env.NODE_ENV !== 'production' && !this.warned) {\n          this.warned = true\n          // eslint-disable-next-line no-console\n          console.warn(generateWarningMessage(ComponentToTheme))\n        }\n      }\n      const {theme} = this.props\n      if (this.context[CHANNEL]) {\n        // if a theme is provided via props,\n        // it takes precedence over context\n        this.setTheme(theme ? theme : this.context[CHANNEL].getState())\n      } else {\n        this.setTheme(theme || {})\n      }\n    }\n\n    componentWillReceiveProps(nextProps) {\n      if (this.props.theme !== nextProps.theme) {\n        this.setTheme(nextProps.theme)\n      }\n    }\n\n    componentDidMount() {\n      if (this.context[CHANNEL] && !this.props.theme) {\n        // subscribe to future theme changes\n        this.unsubscribe = this.context[CHANNEL].subscribe(this.setTheme)\n      }\n    }\n\n    componentWillUnmount() {\n      // cleanup subscription\n      this.unsubscribe && this.unsubscribe()\n    }\n\n    render() {\n      if (createElement) {\n        return <ComponentToTheme {...this.props} {...this.state} />\n      } else {\n        // this allows us to effectively use the GlamorousComponent\n        // as our `render` method without going through lifecycle hooks.\n        // Also allows us to forward the context in the scenario where\n        // a user wants to add more context.\n        // eslint-disable-next-line babel/new-cap\n        return ComponentToTheme({...this.props, ...this.state}, this.context)\n      }\n    }\n  }\n\n  const defaultContextTypes = {\n    [CHANNEL]: PropTypes.object,\n  }\n\n  let userDefinedContextTypes = null\n\n  // configure the contextTypes to be settable by the user,\n  // however also retaining the glamorous channel.\n  Object.defineProperty(ThemedComponent, 'contextTypes', {\n    enumerable: true,\n    configurable: true,\n    set(value) {\n      userDefinedContextTypes = value\n    },\n    get() {\n      // if the user has provided a contextTypes definition,\n      // merge the default context types with the provided ones.\n      if (userDefinedContextTypes) {\n        return {\n          ...defaultContextTypes,\n          ...userDefinedContextTypes,\n        }\n      }\n      return defaultContextTypes\n    },\n  })\n\n  return ThemedComponent\n}\n","import {css, styleSheet} from 'glamor'\n/**\n * This function takes a className string and gets all the\n * associated glamor styles. It's used to merge glamor styles\n * from a className to make sure that specificity is not\n * a problem when passing a className to a component.\n * @param {String} [className=''] the className string\n * @return {Object} { glamorStyles, glamorlessClassName }\n *   - glamorStyles is an array of all the glamor styles objects\n *   - glamorlessClassName is the rest of the className string\n *     without the glamor classNames\n */\nfunction extractGlamorStyles(className = '') {\n  return className.toString().split(' ').reduce((groups, name) => {\n    if (name.indexOf('css-') === 0) {\n      const style = getGlamorStylesFromClassName(name)\n      groups.glamorStyles.push(style)\n    } else {\n      // eslint-disable-next-line max-len\n      groups.glamorlessClassName = `${groups.glamorlessClassName} ${name}`.trim()\n    }\n    return groups\n  }, {glamorlessClassName: '', glamorStyles: []})\n}\n\nexport default getGlamorClassName\n\nfunction getGlamorClassName({\n  styles,\n  props,\n  cssOverrides,\n  cssProp,\n  context,\n  displayName,\n}) {\n  const {\n    glamorStyles: parentGlamorStyles,\n    glamorlessClassName,\n  } = extractGlamorStyles(props.className)\n  const {mappedArgs, nonGlamorClassNames} = handleStyles(\n    [...styles, parentGlamorStyles, cssOverrides, cssProp],\n    props,\n    context,\n  )\n  // eslint-disable-next-line max-len\n  const isDev = process.env.NODE_ENV === 'development' || !process.env.NODE_ENV\n  const devRules = isDev ? {label: displayName} : null\n  const glamorClassName = css(devRules, ...mappedArgs).toString()\n  const extras = [...nonGlamorClassNames, glamorlessClassName].join(' ').trim()\n  return `${glamorClassName} ${extras}`.trim()\n}\n\n// this next function is on a \"hot\" code-path\n// so it's pretty complex to make sure it's fast.\n// eslint-disable-next-line complexity\nfunction handleStyles(styles, props, context) {\n  let current\n  const mappedArgs = []\n  const nonGlamorClassNames = []\n  for (let i = 0; i < styles.length; i++) {\n    current = styles[i]\n    if (typeof current === 'function') {\n      const result = current(props, context)\n      if (typeof result === 'string') {\n        processStringClass(result, mappedArgs, nonGlamorClassNames)\n      } else {\n        mappedArgs.push(result)\n      }\n    } else if (typeof current === 'string') {\n      processStringClass(current, mappedArgs, nonGlamorClassNames)\n    } else if (Array.isArray(current)) {\n      const recursed = handleStyles(current, props, context)\n      mappedArgs.push(...recursed.mappedArgs)\n      nonGlamorClassNames.push(...recursed.nonGlamorClassNames)\n    } else {\n      mappedArgs.push(current)\n    }\n  }\n  return {mappedArgs, nonGlamorClassNames}\n}\n\nfunction processStringClass(str, mappedArgs, nonGlamorClassNames) {\n  const className = getGlamorStylesFromClassName(str)\n  if (className) {\n    mappedArgs.push(className)\n  } else {\n    nonGlamorClassNames.push(str)\n  }\n}\n\nfunction getGlamorStylesFromClassName(className) {\n  const id = className.slice('css-'.length)\n  if (styleSheet.registered[id]) {\n    return styleSheet.registered[id].style\n  } else {\n    return null\n  }\n}\n","import React from 'react'\n\nlet PropTypes\n\n/* istanbul ignore next */\nif (parseFloat(React.version.slice(0, 4)) >= 15.5) {\n  /* istanbul ignore next */\n  try {\n    PropTypes = require('prop-types')\n    /* istanbul ignore next */\n  } catch (error) {\n    // ignore\n  }\n}\n/* istanbul ignore next */\nPropTypes = PropTypes || React.PropTypes\n\nexport {PropTypes}\n\n/*\neslint\n  import/no-mutable-exports:0,\n  import/prefer-default-export:0,\n  react/no-deprecated:0\n */\n","export const CHANNEL = '__glamorous__'\n","/*\n * This is a relatively small abstraction that's ripe for open sourcing.\n * Documentation is in the README.md\n */\nimport React from 'react'\nimport {PropTypes} from './react-compat'\nimport withTheme from './with-theme'\nimport getGlamorClassName from './get-glamor-classname'\n\nexport default createGlamorous\n\nfunction createGlamorous(splitProps) {\n  return glamorous\n\n  /**\n  * This is the main export and the function that people\n  * interact with most directly.\n  *\n  * It accepts a component which can be a string or\n  * a React Component and returns\n  * a \"glamorousComponentFactory\"\n  * @param {String|ReactComponent} comp the component to render\n  * @param {Object} options helpful info for the GlamorousComponents\n  * @return {Function} the glamorousComponentFactory\n  */\n  function glamorous(\n    comp,\n    {rootEl, displayName, shouldClassNameUpdate, forwardProps = []} = {},\n  ) {\n    return glamorousComponentFactory\n\n    /**\n     * This returns a React Component that renders the comp (closure)\n     * with a className based on the given glamor styles object(s)\n     * @param {...Object|Function} styles the styles to create with glamor.\n     *   If any of these are functions, they are invoked with the component\n     *   props and the return value is used.\n     * @return {ReactComponent} the ReactComponent function\n     */\n    function glamorousComponentFactory(...styles) {\n      /**\n       * This is a component which will render the comp (closure)\n       * with the glamorous styles (closure). Forwards any valid\n       * props to the underlying component.\n       */\n      const GlamorousComponent = withTheme(\n        (props, context) => {\n          const updateClassName = shouldUpdate(props, context)\n\n          const {toForward, cssOverrides, cssProp} = splitProps(\n            props,\n            GlamorousComponent,\n          )\n\n          // create className to apply\n          GlamorousComponent.className = updateClassName ?\n            getGlamorClassName({\n              styles: GlamorousComponent.styles,\n              props,\n              cssOverrides,\n              cssProp,\n              context,\n              displayName: GlamorousComponent.displayName,\n            }) :\n            GlamorousComponent.className\n\n          return React.createElement(GlamorousComponent.comp, {\n            ref: props.innerRef,\n            ...toForward,\n            className: GlamorousComponent.className,\n          })\n        },\n        {noWarn: true, createElement: false},\n      )\n\n      GlamorousComponent.propTypes = {\n        className: PropTypes.string,\n        cssOverrides: PropTypes.object,\n        innerRef: PropTypes.func,\n        glam: PropTypes.object,\n      }\n\n      function withComponent(newComp, options = {}) {\n        return glamorous(newComp, {\n          forwardProps: GlamorousComponent.forwardProps,\n          ...options,\n        })(GlamorousComponent.styles)\n      }\n\n      function shouldUpdate(props, context) {\n        // exiting early so components which do not use this\n        // optimization are not penalized by hanging onto\n        // references to previous props and context\n        if (!shouldClassNameUpdate) {\n          return true\n        }\n        let update = true\n        if (GlamorousComponent.previous) {\n          if (\n            !shouldClassNameUpdate(\n              props,\n              GlamorousComponent.previous.props,\n              context,\n              GlamorousComponent.previous.context,\n            )\n          ) {\n            update = false\n          }\n        }\n        GlamorousComponent.previous = {props, context}\n        return update\n      }\n\n      Object.assign(\n        GlamorousComponent,\n        getGlamorousComponentMetadata({\n          comp,\n          styles,\n          rootEl,\n          forwardProps,\n          displayName,\n        }),\n        {withComponent, isGlamorousComponent: true, previous: null},\n      )\n      return GlamorousComponent\n    }\n  }\n\n  function getGlamorousComponentMetadata({\n    comp,\n    styles,\n    rootEl,\n    forwardProps,\n    displayName,\n  }) {\n    const componentsComp = comp.comp ? comp.comp : comp\n    return {\n      // join styles together (for anyone doing: glamorous(glamorous.a({}), {}))\n      styles: when(comp.styles, styles),\n      // keep track of the ultimate rootEl to render (we never\n      // actually render anything but\n      // the base component, even when people wrap a glamorous\n      // component in glamorous\n      comp: componentsComp,\n      rootEl: rootEl || componentsComp,\n      // join forwardProps (for anyone doing: glamorous(glamorous.a({}), {}))\n      forwardProps: when(comp.forwardProps, forwardProps),\n      // set the displayName to something that's slightly more\n      // helpful than `GlamorousComponent` :)\n      displayName: displayName || `glamorous(${getDisplayName(comp)})`,\n    }\n  }\n\n  function when(comp, prop) {\n    return comp ? comp.concat(prop) : prop\n  }\n\n  function getDisplayName(comp) {\n    return typeof comp === 'string' ?\n      comp :\n      comp.displayName || comp.name || 'unknown'\n  }\n}\n","/* eslint no-unused-vars:0 */\nimport createGlamorous from './create-glamorous'\n\nfunction splitProps({\n  css: cssProp,\n  // these are plucked off\n  theme, // because they\n  className, // should never\n  innerRef, // be forwarded\n  glam, // to the lower\n  // component ever\n  ...rest\n}) {\n  return {toForward: rest, cssProp}\n}\n\nconst glamorous = createGlamorous(splitProps)\n\nexport default glamorous\n"],"names":["withTheme","ComponentToTheme","noWarn","createElement","ThemedComponent","warned","state","theme","setTheme","_this","setState","this","context","CHANNEL","props","getState","nextProps","unsubscribe","subscribe","React","Component","propTypes","PropTypes","object","defaultContextTypes","userDefinedContextTypes","defineProperty","value","extractGlamorStyles","toString","split","reduce","groups","name","indexOf","style","getGlamorStylesFromClassName","glamorStyles","push","glamorlessClassName","trim","getGlamorClassName","styles","cssOverrides","cssProp","displayName","className","parentGlamorStyles","handleStyles","mappedArgs","nonGlamorClassNames","css","join","current","i","length","result","Array","isArray","recursed","processStringClass","str","id","slice","styleSheet","registered","parseFloat","version","require","error","splitProps","glamorous","comp","rootEl","shouldClassNameUpdate","forwardProps","shouldUpdate","update","GlamorousComponent","previous","updateClassName","toForward","innerRef","string","func","assign","getGlamorousComponentMetadata","withComponent","newComp","options","isGlamorousComponent","componentsComp","when","getDisplayName","prop","concat","createGlamorous","glam"],"mappings":"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"}