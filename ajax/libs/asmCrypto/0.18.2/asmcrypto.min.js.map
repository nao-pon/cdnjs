{"version":3,"sources":["/mnt/c/Repositories/asmcrypto.js/src/utils.js","/mnt/c/Repositories/asmcrypto.js/src/errors.js","/mnt/c/Repositories/asmcrypto.js/src/aes/aes.asm.js","/mnt/c/Repositories/asmcrypto.js/src/aes/exports.js","/mnt/c/Repositories/asmcrypto.js/src/aes/aes.js","/mnt/c/Repositories/asmcrypto.js/src/aes/cbc/cbc.js","/mnt/c/Repositories/asmcrypto.js/src/aes/cbc/exports.js","/mnt/c/Repositories/asmcrypto.js/src/aes/gcm/gcm.js","/mnt/c/Repositories/asmcrypto.js/src/hash/hash.js","/mnt/c/Repositories/asmcrypto.js/src/aes/gcm/exports.js","/mnt/c/Repositories/asmcrypto.js/src/hash/sha1/sha1.js","/mnt/c/Repositories/asmcrypto.js/src/hash/sha1/sha1.asm.js","/mnt/c/Repositories/asmcrypto.js/src/hash/sha1/exports.js","/mnt/c/Repositories/asmcrypto.js/src/hash/sha256/sha256.js","/mnt/c/Repositories/asmcrypto.js/src/hash/sha256/sha256.asm.js","/mnt/c/Repositories/asmcrypto.js/src/hash/sha256/exports.js","/mnt/c/Repositories/asmcrypto.js/src/hmac/hmac.js","/mnt/c/Repositories/asmcrypto.js/src/hmac/hmac-sha1.js","/mnt/c/Repositories/asmcrypto.js/src/hmac/exports-hmac-sha1.js","/mnt/c/Repositories/asmcrypto.js/src/hmac/hmac-sha256.js","/mnt/c/Repositories/asmcrypto.js/src/hmac/exports-hmac-sha256.js","/mnt/c/Repositories/asmcrypto.js/src/pbkdf2/pbkdf2.js","/mnt/c/Repositories/asmcrypto.js/src/pbkdf2/pbkdf2-hmac-sha1.js","/mnt/c/Repositories/asmcrypto.js/src/pbkdf2/exports-pbkdf2-hmac-sha1.js","/mnt/c/Repositories/asmcrypto.js/src/pbkdf2/pbkdf2-hmac-sha256.js","/mnt/c/Repositories/asmcrypto.js/src/pbkdf2/exports-pbkdf2-hmac-sha256.js","/mnt/c/Repositories/asmcrypto.js/src/random/random.js","/mnt/c/Repositories/asmcrypto.js/src/random/isaac.js","/mnt/c/Repositories/asmcrypto.js/src/bignum/bigint.asm.js","/mnt/c/Repositories/asmcrypto.js/src/bignum/bignum.js","/mnt/c/Repositories/asmcrypto.js/src/bignum/extgcd.js","/mnt/c/Repositories/asmcrypto.js/src/bignum/modulus.js","/mnt/c/Repositories/asmcrypto.js/src/bignum/prime.js","/mnt/c/Repositories/asmcrypto.js/src/bignum/exports.js","/mnt/c/Repositories/asmcrypto.js/src/rsa/rsa.js","/mnt/c/Repositories/asmcrypto.js/src/rsa/pkcs1.js","/mnt/c/Repositories/asmcrypto.js/src/origin.js"],"names":["FloatArray","Float64Array","Float32Array","string_to_bytes","str","utf8","len","length","bytes","Uint8Array","i","j","c","charCodeAt","Error","subarray","bytes_to_string","chars","Array","b","String","fromCharCode","apply","slice","bytes_to_hex","arr","h","toString","bytes_to_base64","btoa","is_number","a","is_string","is_buffer","ArrayBuffer","is_bytes","is_typed_array","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","_heap_init","constructor","heap","heapSize","size","byteLength","_heap_write","hpos","data","dpos","dlen","hlen","wlen","set","IllegalStateError","err","this","arguments","message","stack","IllegalArgumentError","SecurityError","prototype","Object","create","name","value","AES_asm","gexp3","glog3","ginit_done","gmul","aes_sbox","aes_sinv","aes_enc","aes_dec","aes_init","_s","s","x","d","ginit","t","wrapper","foreign","buffer","asm","stdlib","S0","S1","S2","S3","I0","I1","I2","I3","N0","N1","N2","N3","M0","M1","M2","M3","H0","H1","H2","H3","R","HEAP","DATA","_core","k","r","x0","x1","x2","x3","t1","t2","t3","y0","y1","y2","y3","_ecb_enc","_cbc_enc","_cipher_modes","_mac_modes","z0","z1","z2","z3","set_rounds","set_state","s0","s1","s2","s3","set_iv","i0","i1","i2","i3","set_nonce","n0","n1","n2","n3","set_mask","m0","m1","m2","m3","set_counter","c0","c1","c2","c3","get_state","pos","get_iv","gcm_init","cipher","mode","ret","mac","set_key","ks","k0","k1","k2","k3","k4","k5","k6","k7","ekeys","dkeys","rcon","jj","ENC","ECB","CBC","CFB","OFB","CTR","DEC","MAC","GCM","HEAP_DATA","_AES_heap_instance","_AES_asm_instance","AES","[object Object]","key","iv","padding","nonce","counter","counterSize","AES_reset","undefined","TypeError","keylen","keyview","DataView","byteOffset","getUint32","mask","Math","pow","view","ivview","result","AES_set_key","AES_set_iv","AES_set_padding","amode","rpos","rlen","presult","prlen","AES_Encrypt_process","plen","hasOwnProperty","p","AES_Decrypt_process","pad","pcheck","AES_CBC","super","BLOCK_SIZE","AES_Encrypt_finish","AES_Decrypt_finish","encrypt","SyntaxError","decrypt","Encrypt","Decrypt","_AES_GCM_data_maxLength","AES_GCM","adata","tagSize","reset","AES_GCM_reset","AES_GCM_encrypt","AES_GCM_decrypt","RangeError","alen","clen","gamma0","tlen","atag","acheck","result1","AES_GCM_Decrypt_process","result2","AES_GCM_Decrypt_finish","AES_GCM_Encrypt_process","AES_GCM_Encrypt_finish","noncelen","noncebuf","_gcm_mac_process","nonceview","hash_reset","hash_process","process","hash_finish","finish","HASH_SIZE","_sha1_block_size","_sha1_hash_size","sha1_constructor","options","H4","TOTAL0","TOTAL1","I4","O0","O1","O2","O3","O4","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","w19","w20","w21","w22","w23","w24","w25","w26","w27","w28","w29","w30","w31","w32","w33","w34","w35","w36","w37","w38","w39","w40","w41","w42","w43","w44","w45","w46","w47","w48","w49","w50","w51","w52","w53","w54","w55","w56","w57","w58","w59","w60","w61","w62","w63","w64","w65","w66","w67","w68","w69","w70","w71","w72","w73","w74","w75","w76","e","n","_core_heap","offset","_state_to_heap","output","hashed","hmac_reset","_hmac_opad","hmac_finish","t0","t4","init","h0","h1","h2","h3","h4","total0","total1","hmac_init","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","pbkdf2_generate_block","block","count","sha1_asm","NAME","sha1_prototype","sha1_instance","get_sha1_instance","sha1_bytes","SHA1","hex","base64","_sha256_block_size","_sha256_hash_size","sha256_constructor","H5","H6","H7","I5","I6","I7","O5","O6","O7","f","g","t5","t6","t7","h5","h6","h7","sha256_asm","sha256_prototype","sha256_instance","get_sha256_instance","sha256_bytes","SHA256","hmac_constructor","hash","HMAC_SIZE","verify","password","_hmac_key","_hmac_init_verify","hmac_process","hmac_prototype","hmac_sha1_constructor","call","ipad","inner_result","opad","diff","hmac_sha1_prototype","hmac_sha1_instance","get_hmac_sha1_instance","hmac_sha1_bytes","HMAC_SHA1","hmac_sha256_constructor","hmac_sha256_prototype","hmac_sha256_instance","get_hmac_sha256_instance","hmac_sha256_bytes","HMAC_SHA256","pbkdf2_constructor","hmac","pbkdf2_reset","pbkdf2_prototype","pbkdf2_hmac_sha1_constructor","generate","salt","blocks","ceil","l","tmp","pbkdf2_hmac_sha1_prototype","pbkdf2_hmac_sha1_instance","pbkdf2_hmac_sha1_bytes","iterations","dklen","pbkdf2_hmac_sha1_hex","pbkdf2_hmac_sha1_base64","PBKDF2","PBKDF2_HMAC_SHA1","pbkdf2_hmac_sha256_constructor","pbkdf2_hmac_sha256_prototype","pbkdf2_hmac_sha256_instance","get_pbkdf2_hmac_sha256_instance","pbkdf2_hmac_sha256_bytes","_global_crypto_getRandomValues","PBKDF2_HMAC_SHA256","ISAAC","m","acc","brs","cnt","gnt","randinit","mix","prng","y","seed","rand","_global_console","console","_global_date_now","Date","now","_global_math_random","random","_global_performance","performance","_global_crypto","crypto","msCrypto","getRandomValues","_hires_now","_isaac_rand","_isaac_seed","_isaac_counter","_isaac_weak_seeded","_isaac_seeded","_random_estimated_entropy","_random_required_entropy","_random_warn_callstacks","exports","_random_skip_system_rng_warning","_random_allow_weak","_hires_epoch","Random_weak_seed","location","href","pid","title","pbkdf2","Random_seed","bpos","blen","buff","nonzero","Random_getValues","error","warn","Random_getNumber","bigint_asm","SP","HEAP32","imul","salloc","sfree","cp","A","B","z","cmp","lA","lB","sub","lR","sreset","tst","neg","add","mul","al0","al1","al2","al3","al4","al5","al6","al7","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","r13","r14","r15","u","v","w","Ai","Bj","Rk","sqr","dd","Aj","div","N","lN","D","lD","Q","vh","vl","u1","u0","v0","qh","ql","rh","rl","mredc","T","uh","ul","is_big_number","BigNumber_constructor","defineProperty","get","_bigint_asm","_bigint_stdlib","_bigint_heap","_BigNumber_ZERO_limbs","num","limbs","bitlen","sign","absnum","abs","BigNumber_ZERO","bitLength","BigNumberPrototype","Number","radix","substr","replace","toBytes","bytelen","valueOf","bits","clamp","clamped","slimbs","sliced","negate","negative","compare","that","alimbs","alimbcnt","blimbs","blimbcnt","rbitlen","rlimbcnt","rsign","rof","abitlen","asign","bbitlen","bsign","pA","pB","pR","subtract","multiply","square","divide","qlimbcnt","quotient","remainder","pQ","BigNumber_ONE","BigNumber_extGCD","sa","sb","a_cmp_b","q","xi","xj","lx","yi","yj","ly","gcd","Modulus","comodulus","floor","Number_extGCD","coefficient","comodulusRemainder","comodulusRemainderSquare","_Montgomery_reduce","nlimbs","nlimbcnt","pN","freeze","ModulusPrototype","_BigNumber_isMillerRabinProbablePrime","rounds","power","reduce","inverse","g2","gn","_primes","isProbablePrime","paranoia","s5","s17","l3","l5","l17","randomProbablePrime","filter","limbcnt","prime","divisors","push","_small_primes","remainders","LN2","seek","BigNumber","RSA_reset","RSA_encrypt","msg","RSA_decrypt","dp","dq","RSA_OAEP","label","RSA_MGF1_generate","hash_size","chunks","submask","chunk","RSA_PSS","saltLength","ZERO","ONE","extGCD","RSA_OAEP_prototype","key_size","data_length","ps_length","data_block","data_block_mask","seed_mask","lhash","ps_end","psz","RSA_PSS_prototype","slen","key_bits","message_length","salt_length","h_block","d_block","d_salt","m_block","m_hash","m_salt","d_block_mask","zbits","signature","h_block_verify","protocol","search","parseInt","atob"],"mappings":"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","file":"asmcrypto.min.js","sourcesContent":["export var FloatArray = typeof Float64Array !== \"undefined\" ? Float64Array : Float32Array; // make PhantomJS happy\n\nexport function string_to_bytes ( str, utf8 ) {\n    utf8 = !!utf8;\n\n    var len = str.length,\n        bytes = new Uint8Array( utf8 ? 4*len : len );\n\n    for ( var i = 0, j = 0; i < len; i++ ) {\n        var c = str.charCodeAt(i);\n\n        if ( utf8 && 0xd800 <= c && c <= 0xdbff ) {\n            if ( ++i >= len ) throw new Error( \"Malformed string, low surrogate expected at position \" + i );\n            c = ( (c ^ 0xd800) << 10 ) | 0x10000 | ( str.charCodeAt(i) ^ 0xdc00 );\n        }\n        else if ( !utf8 && c >>> 8 ) {\n            throw new Error(\"Wide characters are not allowed.\");\n        }\n\n        if ( !utf8 || c <= 0x7f ) {\n            bytes[j++] = c;\n        }\n        else if ( c <= 0x7ff ) {\n            bytes[j++] = 0xc0 | (c >> 6);\n            bytes[j++] = 0x80 | (c & 0x3f);\n        }\n        else if ( c <= 0xffff ) {\n            bytes[j++] = 0xe0 | (c >> 12);\n            bytes[j++] = 0x80 | (c >> 6 & 0x3f);\n            bytes[j++] = 0x80 | (c & 0x3f);\n        }\n        else {\n            bytes[j++] = 0xf0 | (c >> 18);\n            bytes[j++] = 0x80 | (c >> 12 & 0x3f);\n            bytes[j++] = 0x80 | (c >> 6 & 0x3f);\n            bytes[j++] = 0x80 | (c & 0x3f);\n        }\n    }\n\n    return bytes.subarray(0, j);\n}\n\nexport function hex_to_bytes ( str ) {\n    var len = str.length;\n    if ( len & 1 ) {\n        str = '0'+str;\n        len++;\n    }\n    var bytes = new Uint8Array(len>>1);\n    for ( var i = 0; i < len; i += 2 ) {\n        bytes[i>>1] = parseInt( str.substr( i, 2), 16 );\n    }\n    return bytes;\n}\n\nexport function base64_to_bytes ( str ) {\n    return string_to_bytes( atob( str ) );\n}\n\nexport function bytes_to_string ( bytes, utf8 ) {\n    utf8 = !!utf8;\n\n    var len = bytes.length,\n        chars = new Array(len);\n\n    for ( var i = 0, j = 0; i < len; i++ ) {\n        var b = bytes[i];\n        if ( !utf8 || b < 128 ) {\n            chars[j++] = b;\n        }\n        else if ( b >= 192 && b < 224 && i+1 < len ) {\n            chars[j++] = ( (b & 0x1f) << 6 ) | (bytes[++i] & 0x3f);\n        }\n        else if ( b >= 224 && b < 240 && i+2 < len ) {\n            chars[j++] = ( (b & 0xf) << 12 ) | ( (bytes[++i] & 0x3f) << 6 ) | (bytes[++i] & 0x3f);\n        }\n        else if ( b >= 240 && b < 248 && i+3 < len ) {\n            var c = ( (b & 7) << 18 ) | ( (bytes[++i] & 0x3f) << 12 ) | ( (bytes[++i] & 0x3f) << 6 ) | (bytes[++i] & 0x3f);\n            if ( c <= 0xffff ) {\n                chars[j++] = c;\n            }\n            else {\n                c ^= 0x10000;\n                chars[j++] = 0xd800 | (c >> 10);\n                chars[j++] = 0xdc00 | (c & 0x3ff);\n            }\n        }\n        else {\n            throw new Error(\"Malformed UTF8 character at byte offset \" + i);\n        }\n    }\n\n    var str = '',\n        bs = 16384;\n    for ( var i = 0; i < j; i += bs ) {\n        str += String.fromCharCode.apply( String, chars.slice( i, i+bs <= j ? i+bs : j ) );\n    }\n\n    return str;\n}\n\nexport function bytes_to_hex ( arr ) {\n    var str = '';\n    for ( var i = 0; i < arr.length; i++ ) {\n        var h = ( arr[i] & 0xff ).toString(16);\n        if ( h.length < 2 ) str += '0';\n        str += h;\n    }\n    return str;\n}\n\nexport function bytes_to_base64 ( arr ) {\n    return btoa( bytes_to_string(arr) );\n}\n\nexport function pow2_ceil ( a ) {\n    a -= 1;\n    a |= a >>> 1;\n    a |= a >>> 2;\n    a |= a >>> 4;\n    a |= a >>> 8;\n    a |= a >>> 16;\n    a += 1;\n    return a;\n}\n\nexport function is_number ( a ) {\n    return ( typeof a === 'number' );\n}\n\nexport function is_string ( a ) {\n    return ( typeof a === 'string' );\n}\n\nexport function is_buffer ( a ) {\n    return ( a instanceof ArrayBuffer );\n}\n\nexport function is_bytes ( a ) {\n    return ( a instanceof Uint8Array );\n}\n\nexport function is_typed_array ( a ) {\n    return ( a instanceof Int8Array ) || ( a instanceof Uint8Array )\n        || ( a instanceof Int16Array ) || ( a instanceof Uint16Array )\n        || ( a instanceof Int32Array ) || ( a instanceof Uint32Array )\n        || ( a instanceof Float32Array )\n        || ( a instanceof Float64Array );\n}\n\nexport function _heap_init ( constructor, heap, heapSize ) {\n    var size = heap ? heap.byteLength : heapSize || 65536;\n\n    if ( size & 0xfff || size <= 0 )\n        throw new Error(\"heap size must be a positive integer and a multiple of 4096\");\n\n    heap = heap || new constructor( new ArrayBuffer(size) );\n\n    return heap;\n}\n\nexport function _heap_write ( heap, hpos, data, dpos, dlen ) {\n    var hlen = heap.length - hpos,\n        wlen = ( hlen < dlen ) ? hlen : dlen;\n\n    heap.set( data.subarray( dpos, dpos+wlen ), hpos );\n\n    return wlen;\n}\n","export function IllegalStateError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\nIllegalStateError.prototype = Object.create( Error.prototype, { name: { value: 'IllegalStateError' } } );\n\nexport function IllegalArgumentError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\nIllegalArgumentError.prototype = Object.create( Error.prototype, { name: { value: 'IllegalArgumentError' } } );\n\nexport function SecurityError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\nSecurityError.prototype = Object.create( Error.prototype, { name: { value: 'SecurityError' } } );\n","/**\n * @file {@link http://asmjs.org Asm.js} implementation of the {@link https://en.wikipedia.org/wiki/Advanced_Encryption_Standard Advanced Encryption Standard}.\n * @author Artem S Vybornov <vybornov@gmail.com>\n * @license MIT\n */\nexport var AES_asm = function () {\n    \"use strict\";\n\n    /**\n     * Galois Field stuff init flag\n     */\n    var ginit_done = false;\n\n    /**\n     * Galois Field exponentiation and logarithm tables for 3 (the generator)\n     */\n    var gexp3, glog3;\n\n    /**\n     * Init Galois Field tables\n     */\n    function ginit () {\n        gexp3 = [],\n        glog3 = [];\n\n        var a = 1, c, d;\n        for ( c = 0; c < 255; c++ ) {\n            gexp3[c] = a;\n\n            // Multiply by three\n            d = a & 0x80, a <<= 1, a &= 255;\n            if ( d === 0x80 ) a ^= 0x1b;\n            a ^= gexp3[c];\n\n            // Set the log table value\n            glog3[gexp3[c]] = c;\n        }\n        gexp3[255] = gexp3[0];\n        glog3[0] = 0;\n\n        ginit_done = true;\n    }\n\n    /**\n     * Galois Field multiplication\n     * @param {int} a\n     * @param {int} b\n     * @return {int}\n     */\n    function gmul ( a, b ) {\n        var c = gexp3[ ( glog3[a] + glog3[b] ) % 255 ];\n        if ( a === 0 || b === 0 ) c = 0;\n        return c;\n    }\n\n    /**\n     * Galois Field reciprocal\n     * @param {int} a\n     * @return {int}\n     */\n    function ginv ( a ) {\n        var i = gexp3[ 255 - glog3[a] ];\n        if ( a === 0 ) i = 0;\n        return i;\n    }\n\n    /**\n     * AES stuff init flag\n     */\n    var aes_init_done = false;\n\n    /**\n     * Encryption, Decryption, S-Box and KeyTransform tables\n     */\n    var aes_sbox, aes_sinv, aes_enc, aes_dec;\n\n    /**\n     * Init AES tables\n     */\n    function aes_init () {\n        if ( !ginit_done ) ginit();\n\n        // Calculates AES S-Box value\n        function _s ( a ) {\n            var c, s, x;\n            s = x = ginv(a);\n            for ( c = 0; c < 4; c++ ) {\n                s = ( (s << 1) | (s >>> 7) ) & 255;\n                x ^= s;\n            }\n            x ^= 99;\n            return x;\n        }\n\n        // Tables\n        aes_sbox = [],\n        aes_sinv = [],\n        aes_enc = [ [], [], [], [] ],\n        aes_dec = [ [], [], [], [] ];\n\n        for ( var i = 0; i < 256; i++ ) {\n            var s = _s(i);\n\n            // S-Box and its inverse\n            aes_sbox[i]  = s;\n            aes_sinv[s]  = i;\n\n            // Ecryption and Decryption tables\n            aes_enc[0][i] = ( gmul( 2, s ) << 24 )  | ( s << 16 )            | ( s << 8 )             | gmul( 3, s );\n            aes_dec[0][s] = ( gmul( 14, i ) << 24 ) | ( gmul( 9, i ) << 16 ) | ( gmul( 13, i ) << 8 ) | gmul( 11, i );\n            // Rotate tables\n            for ( var t = 1; t < 4; t++ ) {\n                aes_enc[t][i] = ( aes_enc[t-1][i] >>> 8 ) | ( aes_enc[t-1][i] << 24 );\n                aes_dec[t][s] = ( aes_dec[t-1][s] >>> 8 ) | ( aes_dec[t-1][s] << 24 );\n            }\n        }\n    }\n\n    /**\n     * Asm.js module constructor.\n     *\n     * <p>\n     * Heap buffer layout by offset:\n     * <pre>\n     * 0x0000   encryption key schedule\n     * 0x0400   decryption key schedule\n     * 0x0800   sbox\n     * 0x0c00   inv sbox\n     * 0x1000   encryption tables\n     * 0x2000   decryption tables\n     * 0x3000   reserved (future GCM multiplication lookup table)\n     * 0x4000   data\n     * </pre>\n     * Don't touch anything before <code>0x400</code>.\n     * </p>\n     *\n     * @alias AES_asm\n     * @class\n     * @param {Object} foreign - <i>ignored</i>\n     * @param {ArrayBuffer} buffer - heap buffer to link with\n     */\n    var wrapper = function ( foreign, buffer ) {\n        // Init AES stuff for the first time\n        if ( !aes_init_done ) aes_init();\n\n        // Fill up AES tables\n        var heap = new Uint32Array(buffer);\n        heap.set( aes_sbox, 0x0800>>2 );\n        heap.set( aes_sinv, 0x0c00>>2 );\n        for ( var i = 0; i < 4; i++ ) {\n            heap.set( aes_enc[i], ( 0x1000 + 0x400 * i )>>2 );\n            heap.set( aes_dec[i], ( 0x2000 + 0x400 * i )>>2 );\n        }\n\n        /**\n         * Calculate AES key schedules.\n         * @instance\n         * @memberof AES_asm\n         * @param {int} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)\n         * @param {int} k0..k7 - key vector components\n         */\n        function set_key ( ks, k0, k1, k2, k3, k4, k5, k6, k7 ) {\n            var ekeys = heap.subarray( 0x000, 60 ),\n                dkeys = heap.subarray( 0x100, 0x100+60 );\n\n            // Encryption key schedule\n            ekeys.set( [ k0, k1, k2, k3, k4, k5, k6, k7 ] );\n            for ( var i = ks, rcon = 1; i < 4*ks+28; i++ ) {\n                var k = ekeys[i-1];\n                if ( ( i % ks === 0 ) || ( ks === 8 && i % ks === 4 ) ) {\n                    k = aes_sbox[k>>>24]<<24 ^ aes_sbox[k>>>16&255]<<16 ^ aes_sbox[k>>>8&255]<<8 ^ aes_sbox[k&255];\n                }\n                if ( i % ks === 0 ) {\n                    k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);\n                    rcon = (rcon << 1) ^ ( (rcon & 0x80) ? 0x1b : 0 );\n                }\n                ekeys[i] = ekeys[i-ks] ^ k;\n            }\n\n            // Decryption key schedule\n            for ( var j = 0; j < i; j += 4 ) {\n                for ( var jj = 0; jj < 4; jj++ ) {\n                    var k = ekeys[i-(4+j)+(4-jj)%4];\n                    if ( j < 4 || j >= i-4 ) {\n                        dkeys[j+jj] = k;\n                    } else {\n                        dkeys[j+jj] = aes_dec[0][aes_sbox[k>>>24]]\n                                    ^ aes_dec[1][aes_sbox[k>>>16&255]]\n                                    ^ aes_dec[2][aes_sbox[k>>>8&255]]\n                                    ^ aes_dec[3][aes_sbox[k&255]];\n                    }\n                }\n            }\n\n            // Set rounds number\n            asm.set_rounds( ks + 5 );\n        }\n\n        // create library object with necessary properties\n        var stdlib = { Uint8Array: Uint8Array, Uint32Array: Uint32Array };\n\n        var asm = function ( stdlib, foreign, buffer ) {\n            \"use asm\";\n\n            var S0 = 0, S1 = 0, S2 = 0, S3 = 0,\n                I0 = 0, I1 = 0, I2 = 0, I3 = 0,\n                N0 = 0, N1 = 0, N2 = 0, N3 = 0,\n                M0 = 0, M1 = 0, M2 = 0, M3 = 0,\n                H0 = 0, H1 = 0, H2 = 0, H3 = 0,\n                R = 0;\n\n            var HEAP = new stdlib.Uint32Array(buffer),\n                DATA = new stdlib.Uint8Array(buffer);\n\n            /**\n             * AES core\n             * @param {int} k - precomputed key schedule offset\n             * @param {int} s - precomputed sbox table offset\n             * @param {int} t - precomputed round table offset\n             * @param {int} r - number of inner rounds to perform\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _core ( k, s, t, r, x0, x1, x2, x3 ) {\n                k = k|0;\n                s = s|0;\n                t = t|0;\n                r = r|0;\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var t1 = 0, t2 = 0, t3 = 0,\n                    y0 = 0, y1 = 0, y2 = 0, y3 = 0,\n                    i = 0;\n\n                t1 = t|0x400, t2 = t|0x800, t3 = t|0xc00;\n\n                // round 0\n                x0 = x0 ^ HEAP[(k|0)>>2],\n                x1 = x1 ^ HEAP[(k|4)>>2],\n                x2 = x2 ^ HEAP[(k|8)>>2],\n                x3 = x3 ^ HEAP[(k|12)>>2];\n\n                // round 1..r\n                for ( i = 16; (i|0) <= (r<<4); i = (i+16)|0 ) {\n                    y0 = HEAP[(t|x0>>22&1020)>>2] ^ HEAP[(t1|x1>>14&1020)>>2] ^ HEAP[(t2|x2>>6&1020)>>2] ^ HEAP[(t3|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2],\n                    y1 = HEAP[(t|x1>>22&1020)>>2] ^ HEAP[(t1|x2>>14&1020)>>2] ^ HEAP[(t2|x3>>6&1020)>>2] ^ HEAP[(t3|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2],\n                    y2 = HEAP[(t|x2>>22&1020)>>2] ^ HEAP[(t1|x3>>14&1020)>>2] ^ HEAP[(t2|x0>>6&1020)>>2] ^ HEAP[(t3|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2],\n                    y3 = HEAP[(t|x3>>22&1020)>>2] ^ HEAP[(t1|x0>>14&1020)>>2] ^ HEAP[(t2|x1>>6&1020)>>2] ^ HEAP[(t3|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\n                    x0 = y0, x1 = y1, x2 = y2, x3 = y3;\n                }\n\n                // final round\n                S0 = HEAP[(s|x0>>22&1020)>>2]<<24 ^ HEAP[(s|x1>>14&1020)>>2]<<16 ^ HEAP[(s|x2>>6&1020)>>2]<<8 ^ HEAP[(s|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2],\n                S1 = HEAP[(s|x1>>22&1020)>>2]<<24 ^ HEAP[(s|x2>>14&1020)>>2]<<16 ^ HEAP[(s|x3>>6&1020)>>2]<<8 ^ HEAP[(s|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2],\n                S2 = HEAP[(s|x2>>22&1020)>>2]<<24 ^ HEAP[(s|x3>>14&1020)>>2]<<16 ^ HEAP[(s|x0>>6&1020)>>2]<<8 ^ HEAP[(s|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2],\n                S3 = HEAP[(s|x3>>22&1020)>>2]<<24 ^ HEAP[(s|x0>>14&1020)>>2]<<16 ^ HEAP[(s|x1>>6&1020)>>2]<<8 ^ HEAP[(s|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\n            }\n\n            /**\n             * ECB mode encryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _ecb_enc ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    x0,\n                    x1,\n                    x2,\n                    x3\n                );\n            }\n\n            /**\n             * ECB mode decryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _ecb_dec ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var t = 0;\n\n                _core(\n                    0x0400, 0x0c00, 0x2000,\n                    R,\n                    x0,\n                    x3,\n                    x2,\n                    x1\n                );\n\n                t = S1, S1 = S3, S3 = t;\n            }\n\n\n            /**\n             * CBC mode encryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _cbc_enc ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0 ^ x0,\n                    I1 ^ x1,\n                    I2 ^ x2,\n                    I3 ^ x3\n                );\n\n                I0 = S0,\n                I1 = S1,\n                I2 = S2,\n                I3 = S3;\n            }\n\n            /**\n             * CBC mode decryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _cbc_dec ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var t = 0;\n\n                _core(\n                    0x0400, 0x0c00, 0x2000,\n                    R,\n                    x0,\n                    x3,\n                    x2,\n                    x1\n                );\n\n                t = S1, S1 = S3, S3 = t;\n\n                S0 = S0 ^ I0,\n                S1 = S1 ^ I1,\n                S2 = S2 ^ I2,\n                S3 = S3 ^ I3;\n\n                I0 = x0,\n                I1 = x1,\n                I2 = x2,\n                I3 = x3;\n            }\n\n            /**\n             * CFB mode encryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _cfb_enc ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0,\n                    I1,\n                    I2,\n                    I3\n                );\n\n                I0 = S0 = S0 ^ x0,\n                I1 = S1 = S1 ^ x1,\n                I2 = S2 = S2 ^ x2,\n                I3 = S3 = S3 ^ x3;\n            }\n\n\n            /**\n             * CFB mode decryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _cfb_dec ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0,\n                    I1,\n                    I2,\n                    I3\n                );\n\n                S0 = S0 ^ x0,\n                S1 = S1 ^ x1,\n                S2 = S2 ^ x2,\n                S3 = S3 ^ x3;\n\n                I0 = x0,\n                I1 = x1,\n                I2 = x2,\n                I3 = x3;\n            }\n\n            /**\n             * OFB mode encryption / decryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _ofb ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0,\n                    I1,\n                    I2,\n                    I3\n                );\n\n                I0 = S0,\n                I1 = S1,\n                I2 = S2,\n                I3 = S3;\n\n                S0 = S0 ^ x0,\n                S1 = S1 ^ x1,\n                S2 = S2 ^ x2,\n                S3 = S3 ^ x3;\n            }\n\n            /**\n             * CTR mode encryption / decryption\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _ctr ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    N0,\n                    N1,\n                    N2,\n                    N3\n                );\n\n                N3 = ( ~M3 & N3 ) | M3 & ( N3 + 1 ),\n                N2 = ( ~M2 & N2 ) | M2 & ( N2 + ( (N3|0) == 0 ) ),\n                N1 = ( ~M1 & N1 ) | M1 & ( N1 + ( (N2|0) == 0 ) ),\n                N0 = ( ~M0 & N0 ) | M0 & ( N0 + ( (N1|0) == 0 ) );\n\n                S0 = S0 ^ x0,\n                S1 = S1 ^ x1,\n                S2 = S2 ^ x2,\n                S3 = S3 ^ x3;\n            }\n\n            /**\n             * GCM mode MAC calculation\n             * @param {int} x0..x3 - 128-bit input block vector\n             */\n            function _gcm_mac ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var y0 = 0, y1 = 0, y2 = 0, y3 = 0,\n                    z0 = 0, z1 = 0, z2 = 0, z3 = 0,\n                    i = 0, c = 0;\n\n                x0 = x0 ^ I0,\n                x1 = x1 ^ I1,\n                x2 = x2 ^ I2,\n                x3 = x3 ^ I3;\n\n                y0 = H0|0,\n                y1 = H1|0,\n                y2 = H2|0,\n                y3 = H3|0;\n\n                for ( ; (i|0) < 128; i = (i + 1)|0 ) {\n                    if ( y0 >>> 31 ) {\n                        z0 = z0 ^ x0,\n                        z1 = z1 ^ x1,\n                        z2 = z2 ^ x2,\n                        z3 = z3 ^ x3;\n                    }\n\n                    y0 = (y0 << 1) | (y1 >>> 31),\n                    y1 = (y1 << 1) | (y2 >>> 31),\n                    y2 = (y2 << 1) | (y3 >>> 31),\n                    y3 = (y3 << 1);\n\n                    c = x3 & 1;\n\n                    x3 = (x3 >>> 1) | (x2 << 31),\n                    x2 = (x2 >>> 1) | (x1 << 31),\n                    x1 = (x1 >>> 1) | (x0 << 31),\n                    x0 = (x0 >>> 1);\n\n                    if ( c ) x0 = x0 ^ 0xe1000000;\n                }\n\n                I0 = z0,\n                I1 = z1,\n                I2 = z2,\n                I3 = z3;\n            }\n\n            /**\n             * Set the internal rounds number.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} r - number if inner AES rounds\n             */\n            function set_rounds ( r ) {\n                r = r|0;\n                R = r;\n            }\n\n            /**\n             * Populate the internal state of the module.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} s0...s3 - state vector\n             */\n            function set_state ( s0, s1, s2, s3 ) {\n                s0 = s0|0;\n                s1 = s1|0;\n                s2 = s2|0;\n                s3 = s3|0;\n\n                S0 = s0,\n                S1 = s1,\n                S2 = s2,\n                S3 = s3;\n            }\n\n            /**\n             * Populate the internal iv of the module.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} i0...i3 - iv vector\n             */\n            function set_iv ( i0, i1, i2, i3 ) {\n                i0 = i0|0;\n                i1 = i1|0;\n                i2 = i2|0;\n                i3 = i3|0;\n\n                I0 = i0,\n                I1 = i1,\n                I2 = i2,\n                I3 = i3;\n            }\n\n            /**\n             * Set nonce for CTR-family modes.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} n0..n3 - nonce vector\n             */\n            function set_nonce ( n0, n1, n2, n3 ) {\n                n0 = n0|0;\n                n1 = n1|0;\n                n2 = n2|0;\n                n3 = n3|0;\n\n                N0 = n0,\n                N1 = n1,\n                N2 = n2,\n                N3 = n3;\n            }\n\n            /**\n             * Set counter mask for CTR-family modes.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} m0...m3 - counter mask vector\n             */\n            function set_mask ( m0, m1, m2, m3 ) {\n                m0 = m0|0;\n                m1 = m1|0;\n                m2 = m2|0;\n                m3 = m3|0;\n\n                M0 = m0,\n                M1 = m1,\n                M2 = m2,\n                M3 = m3;\n            }\n\n            /**\n             * Set counter for CTR-family modes.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} c0...c3 - counter vector\n             */\n            function set_counter ( c0, c1, c2, c3 ) {\n                c0 = c0|0;\n                c1 = c1|0;\n                c2 = c2|0;\n                c3 = c3|0;\n\n                N3 = ( ~M3 & N3 ) | M3 & c3,\n                N2 = ( ~M2 & N2 ) | M2 & c2,\n                N1 = ( ~M1 & N1 ) | M1 & c1,\n                N0 = ( ~M0 & N0 ) | M0 & c0;\n            }\n\n            /**\n             * Store the internal state vector into the heap.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} pos - offset where to put the data\n             * @return {int} The number of bytes have been written into the heap, always 16.\n             */\n            function get_state ( pos ) {\n                pos = pos|0;\n\n                if ( pos & 15 ) return -1;\n\n                DATA[pos|0] = S0>>>24,\n                DATA[pos|1] = S0>>>16&255,\n                DATA[pos|2] = S0>>>8&255,\n                DATA[pos|3] = S0&255,\n                DATA[pos|4] = S1>>>24,\n                DATA[pos|5] = S1>>>16&255,\n                DATA[pos|6] = S1>>>8&255,\n                DATA[pos|7] = S1&255,\n                DATA[pos|8] = S2>>>24,\n                DATA[pos|9] = S2>>>16&255,\n                DATA[pos|10] = S2>>>8&255,\n                DATA[pos|11] = S2&255,\n                DATA[pos|12] = S3>>>24,\n                DATA[pos|13] = S3>>>16&255,\n                DATA[pos|14] = S3>>>8&255,\n                DATA[pos|15] = S3&255;\n\n                return 16;\n            }\n\n            /**\n             * Store the internal iv vector into the heap.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} pos - offset where to put the data\n             * @return {int} The number of bytes have been written into the heap, always 16.\n             */\n            function get_iv ( pos ) {\n                pos = pos|0;\n\n                if ( pos & 15 ) return -1;\n\n                DATA[pos|0] = I0>>>24,\n                DATA[pos|1] = I0>>>16&255,\n                DATA[pos|2] = I0>>>8&255,\n                DATA[pos|3] = I0&255,\n                DATA[pos|4] = I1>>>24,\n                DATA[pos|5] = I1>>>16&255,\n                DATA[pos|6] = I1>>>8&255,\n                DATA[pos|7] = I1&255,\n                DATA[pos|8] = I2>>>24,\n                DATA[pos|9] = I2>>>16&255,\n                DATA[pos|10] = I2>>>8&255,\n                DATA[pos|11] = I2&255,\n                DATA[pos|12] = I3>>>24,\n                DATA[pos|13] = I3>>>16&255,\n                DATA[pos|14] = I3>>>8&255,\n                DATA[pos|15] = I3&255;\n\n                return 16;\n            }\n\n            /**\n             * GCM initialization.\n             * @instance\n             * @memberof AES_asm\n             */\n            function gcm_init ( ) {\n                _ecb_enc( 0, 0, 0, 0 );\n                H0 = S0,\n                H1 = S1,\n                H2 = S2,\n                H3 = S3;\n            }\n\n            /**\n             * Perform ciphering operation on the supplied data.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\n             * @param {int} pos - offset of the data being processed\n             * @param {int} len - length of the data being processed\n             * @return {int} Actual amount of data have been processed.\n             */\n            function cipher ( mode, pos, len ) {\n                mode = mode|0;\n                pos = pos|0;\n                len = len|0;\n\n                var ret = 0;\n\n                if ( pos & 15 ) return -1;\n\n                while ( (len|0) >= 16 ) {\n                    _cipher_modes[mode&7](\n                        DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\n                        DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\n                        DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\n                        DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\n                    );\n\n                    DATA[pos|0] = S0>>>24,\n                    DATA[pos|1] = S0>>>16&255,\n                    DATA[pos|2] = S0>>>8&255,\n                    DATA[pos|3] = S0&255,\n                    DATA[pos|4] = S1>>>24,\n                    DATA[pos|5] = S1>>>16&255,\n                    DATA[pos|6] = S1>>>8&255,\n                    DATA[pos|7] = S1&255,\n                    DATA[pos|8] = S2>>>24,\n                    DATA[pos|9] = S2>>>16&255,\n                    DATA[pos|10] = S2>>>8&255,\n                    DATA[pos|11] = S2&255,\n                    DATA[pos|12] = S3>>>24,\n                    DATA[pos|13] = S3>>>16&255,\n                    DATA[pos|14] = S3>>>8&255,\n                    DATA[pos|15] = S3&255;\n\n                    ret = (ret + 16)|0,\n                    pos = (pos + 16)|0,\n                    len = (len - 16)|0;\n                }\n\n                return ret|0;\n            }\n\n            /**\n             * Calculates MAC of the supplied data.\n             * @instance\n             * @memberof AES_asm\n             * @param {int} mode - block cipher mode (see {@link AES_asm} mode constants)\n             * @param {int} pos - offset of the data being processed\n             * @param {int} len - length of the data being processed\n             * @return {int} Actual amount of data have been processed.\n             */\n            function mac ( mode, pos, len ) {\n                mode = mode|0;\n                pos = pos|0;\n                len = len|0;\n\n                var ret = 0;\n\n                if ( pos & 15 ) return -1;\n\n                while ( (len|0) >= 16 ) {\n                    _mac_modes[mode&1](\n                        DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\n                        DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\n                        DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\n                        DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\n                    );\n\n                    ret = (ret + 16)|0,\n                    pos = (pos + 16)|0,\n                    len = (len - 16)|0;\n                }\n\n                return ret|0;\n            }\n\n            /**\n             * AES cipher modes table (virual methods)\n             */\n            var _cipher_modes = [ _ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr ];\n\n            /**\n             * AES MAC modes table (virual methods)\n             */\n            var _mac_modes = [ _cbc_enc, _gcm_mac ];\n\n            /**\n             * Asm.js module exports\n             */\n            return {\n                set_rounds: set_rounds,\n                set_state:  set_state,\n                set_iv:     set_iv,\n                set_nonce:  set_nonce,\n                set_mask:   set_mask,\n                set_counter:set_counter,\n                get_state:  get_state,\n                get_iv:     get_iv,\n                gcm_init:   gcm_init,\n                cipher:     cipher,\n                mac:        mac\n            };\n        }( stdlib, foreign, buffer );\n\n        asm.set_key = set_key;\n\n        return asm;\n    };\n\n    /**\n     * AES enciphering mode constants\n     * @enum {int}\n     * @const\n     */\n    wrapper.ENC = {\n        ECB: 0,\n        CBC: 2,\n        CFB: 4,\n        OFB: 6,\n        CTR: 7\n    },\n\n    /**\n     * AES deciphering mode constants\n     * @enum {int}\n     * @const\n     */\n    wrapper.DEC = {\n        ECB: 1,\n        CBC: 3,\n        CFB: 5,\n        OFB: 6,\n        CTR: 7\n    },\n\n    /**\n     * AES MAC mode constants\n     * @enum {int}\n     * @const\n     */\n    wrapper.MAC = {\n        CBC: 0,\n        GCM: 1\n    };\n\n    /**\n     * Heap data offset\n     * @type {int}\n     * @const\n     */\n    wrapper.HEAP_DATA = 0x4000;\n\n    return wrapper;\n}();\n","// shared asm.js module and heap\nimport {AES_asm} from './aes.asm';\n\nexport var _AES_heap_instance = new Uint8Array(0x100000); // 1MB\nexport var _AES_asm_instance  = AES_asm( null, _AES_heap_instance.buffer );\n","import {AES_asm} from './aes.asm';\nimport {_heap_init, _heap_write, is_bytes, is_number} from '../utils';\nimport {IllegalArgumentError, SecurityError} from '../errors';\n\nexport class AES {\n  constructor(key, iv, padding, heap, asm) {\n    this.nonce = null;\n    this.counter = 0;\n    this.counterSize = 0;\n\n    this.heap = _heap_init( Uint8Array, heap ).subarray( AES_asm.HEAP_DATA );\n    this.asm = asm || AES_asm( null, this.heap.buffer );\n    this.mode = null;\n    this.key = null;\n\n    this.AES_reset( key, iv, padding );\n  }\n\n  /**\n   * @param {Uint8Array} key\n   */\n  AES_set_key ( key ) {\n    if ( key !== undefined ) {\n      if ( !is_bytes(key) ) {\n        throw new TypeError(\"unexpected key type\");\n      }\n\n      var keylen = key.length;\n      if ( keylen !== 16 && keylen !== 24 && keylen !== 32 )\n        throw new IllegalArgumentError(\"illegal key size\");\n\n      var keyview = new DataView( key.buffer, key.byteOffset, key.byteLength );\n      this.asm.set_key(\n        keylen >> 2,\n        keyview.getUint32(0),\n        keyview.getUint32(4),\n        keyview.getUint32(8),\n        keyview.getUint32(12),\n        keylen > 16 ? keyview.getUint32(16) : 0,\n        keylen > 16 ? keyview.getUint32(20) : 0,\n        keylen > 24 ? keyview.getUint32(24) : 0,\n        keylen > 24 ? keyview.getUint32(28) : 0\n      );\n\n      this.key = key;\n    }\n    else if ( !this.key ) {\n      throw new Error(\"key is required\");\n    }\n  }\n\n  /**\n   * This should be mixin instead of inheritance\n   *\n   * @param {Uint8Array} nonce\n   * @param {number} [counter]\n   * @param {number} [size]\n   */\n  AES_CTR_set_options ( nonce, counter, size ) {\n    if ( size !== undefined ) {\n      if ( size < 8 || size > 48 )\n        throw new IllegalArgumentError(\"illegal counter size\");\n\n      this.counterSize = size;\n\n      var mask = Math.pow( 2, size ) - 1;\n      this.asm.set_mask( 0, 0, (mask / 0x100000000)|0, mask|0 );\n    }\n    else {\n      this.counterSize = size = 48;\n      this.asm.set_mask( 0, 0, 0xffff, 0xffffffff );\n    }\n\n    if ( nonce !== undefined ) {\n      if ( !is_bytes(nonce) ) {\n        throw new TypeError(\"unexpected nonce type\");\n      }\n\n      var len = nonce.length;\n      if ( !len || len > 16 )\n        throw new IllegalArgumentError(\"illegal nonce size\");\n\n      this.nonce = nonce;\n\n      var view = new DataView( new ArrayBuffer(16) );\n      new Uint8Array(view.buffer).set(nonce);\n\n      this.asm.set_nonce( view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12) );\n    }\n    else {\n      throw new Error(\"nonce is required\");\n    }\n\n    if ( counter !== undefined ) {\n      if ( !is_number(counter) )\n        throw new TypeError(\"unexpected counter type\");\n\n      if ( counter < 0 || counter >= Math.pow( 2, size ) )\n        throw new IllegalArgumentError(\"illegal counter value\");\n\n      this.counter = counter;\n\n      this.asm.set_counter( 0, 0, (counter / 0x100000000)|0, counter|0 );\n    }\n    else {\n      this.counter = 0;\n    }\n  }\n\n  /**\n   * @param {Uint8Array} iv\n   */\n  AES_set_iv ( iv ) {\n    if ( iv !== undefined ) {\n      if ( !is_bytes(iv) ) {\n        throw new TypeError(\"unexpected iv type\");\n      }\n\n      if ( iv.length !== 16 )\n        throw new IllegalArgumentError(\"illegal iv size\");\n\n      var ivview = new DataView( iv.buffer, iv.byteOffset, iv.byteLength );\n\n      this.iv = iv;\n      this.asm.set_iv( ivview.getUint32(0), ivview.getUint32(4), ivview.getUint32(8), ivview.getUint32(12) );\n    }\n    else {\n      this.iv = null;\n      this.asm.set_iv( 0, 0, 0, 0 );\n    }\n  }\n\n  /**\n   * @param {boolean} padding\n   */\n  AES_set_padding ( padding ) {\n    if ( padding !== undefined ) {\n      this.padding = !!padding;\n    }\n    else {\n      this.padding = true;\n    }\n  }\n\n  /**\n   * @param {Uint8Array} key\n   * @param {Uint8Array} [iv]\n   * @param {boolean} [padding]\n   */\n  AES_reset ( key, iv, padding ) {\n    this.result = null;\n    this.pos = 0;\n    this.len = 0;\n\n    this.AES_set_key( key );\n    this.AES_set_iv( iv );\n    this.AES_set_padding( padding );\n\n    return this;\n  }\n\n\n  /**\n   * @param {Uint8Array} data\n   */\n  AES_Encrypt_process ( data ) {\n    if ( !is_bytes(data) )\n      throw new TypeError(\"data isn't of expected type\");\n\n    var asm = this.asm,\n      heap = this.heap,\n      amode = AES_asm.ENC[this.mode],\n      hpos = AES_asm.HEAP_DATA,\n      pos = this.pos,\n      len = this.len,\n      dpos = 0,\n      dlen = data.length || 0,\n      rpos = 0,\n      rlen = (len + dlen) & -16,\n      wlen = 0;\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > 0 ) {\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen );\n      len  += wlen;\n      dpos += wlen;\n      dlen -= wlen;\n\n      wlen = asm.cipher( amode, hpos + pos, len );\n\n      if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\n      rpos += wlen;\n\n      if ( wlen < len ) {\n        pos += wlen;\n        len -= wlen;\n      } else {\n        pos = 0;\n        len = 0;\n      }\n    }\n\n    this.result = result;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n  }\n\n  /**\n   * @param {Uint8Array} data\n   */\n  AES_Encrypt_finish ( data ) {\n    var presult = null,\n      prlen = 0;\n\n    if ( data !== undefined ) {\n      presult = this.AES_Encrypt_process( data ).result;\n      prlen = presult.length;\n    }\n\n    var asm = this.asm,\n      heap = this.heap,\n      amode = AES_asm.ENC[this.mode],\n      hpos = AES_asm.HEAP_DATA,\n      pos = this.pos,\n      len = this.len,\n      plen = 16 - len % 16,\n      rlen = len;\n\n    if ( this.hasOwnProperty('padding') ) {\n      if ( this.padding ) {\n        for ( var p = 0; p < plen; ++p ) heap[ pos + len + p ] = plen;\n        len += plen;\n        rlen = len;\n      }\n      else if ( len % 16 ) {\n        throw new IllegalArgumentError(\"data length must be a multiple of the block size\");\n      }\n    }\n    else {\n      len += plen;\n    }\n\n    var result = new Uint8Array( prlen + rlen );\n\n    if ( prlen ) result.set( presult );\n\n    if ( len ) asm.cipher( amode, hpos + pos, len );\n\n    if ( rlen ) result.set( heap.subarray( pos, pos + rlen ), prlen );\n\n    this.result = result;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n  }\n\n  /**\n   * @param {Uint8Array} data\n   */\n  AES_Decrypt_process ( data ) {\n    if ( !is_bytes(data) )\n      throw new TypeError(\"data isn't of expected type\");\n\n    var asm = this.asm,\n      heap = this.heap,\n      amode = AES_asm.DEC[this.mode],\n      hpos = AES_asm.HEAP_DATA,\n      pos = this.pos,\n      len = this.len,\n      dpos = 0,\n      dlen = data.length || 0,\n      rpos = 0,\n      rlen = (len + dlen) & -16,\n      plen = 0,\n      wlen = 0;\n\n    if ( this.padding ) {\n      plen = len + dlen - rlen || 16;\n      rlen -= plen;\n    }\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > 0 ) {\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen );\n      len  += wlen;\n      dpos += wlen;\n      dlen -= wlen;\n\n      wlen = asm.cipher( amode, hpos + pos, len - ( !dlen ? plen : 0 ) );\n\n      if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\n      rpos += wlen;\n\n      if ( wlen < len ) {\n        pos += wlen;\n        len -= wlen;\n      } else {\n        pos = 0;\n        len = 0;\n      }\n    }\n\n    this.result = result;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n  }\n\n  /**\n   * @param {Uint8Array} data\n   */\n  AES_Decrypt_finish ( data ) {\n    var presult = null,\n      prlen = 0;\n\n    if ( data !== undefined ) {\n      presult = this.AES_Decrypt_process( data ).result;\n      prlen = presult.length;\n    }\n\n    var asm = this.asm,\n      heap = this.heap,\n      amode = AES_asm.DEC[this.mode],\n      hpos = AES_asm.HEAP_DATA,\n      pos = this.pos,\n      len = this.len,\n      rlen = len;\n\n    if ( len > 0 ) {\n      if ( len % 16 ) {\n        if ( this.hasOwnProperty('padding') ) {\n          throw new IllegalArgumentError(\"data length must be a multiple of the block size\");\n        } else {\n          len += 16 - len % 16;\n        }\n      }\n\n      asm.cipher( amode, hpos + pos, len );\n\n      if ( this.hasOwnProperty('padding') && this.padding ) {\n        var pad = heap[ pos + rlen - 1 ];\n        if ( pad < 1 || pad > 16 || pad > rlen )\n          throw new SecurityError(\"bad padding\");\n\n        var pcheck = 0;\n        for ( var i = pad; i > 1; i-- ) pcheck |= pad ^ heap[ pos + rlen - i ];\n        if ( pcheck )\n          throw new SecurityError(\"bad padding\");\n\n        rlen -= pad;\n      }\n    }\n\n    var result = new Uint8Array( prlen + rlen );\n\n    if ( prlen > 0 ) {\n      result.set( presult );\n    }\n\n    if ( rlen > 0 ) {\n      result.set( heap.subarray( pos, pos + rlen ), prlen );\n    }\n\n    this.result = result;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n  }\n}\n\n\n\n\n","/**\n * Cipher Block Chaining Mode (CBC)\n */\nimport {AES} from '../aes';\n\nexport class AES_CBC extends AES {\n  /**\n   * @param {Uint8Array} key\n   * @param {Uint8Array} [iv=null]\n   * @param {boolean} [padding=true]\n   * @param {Uint8Array} [heap]\n   * @param {Uint8Array} [asm]\n   */\n  constructor(key, iv = null, padding = true, heap, asm) {\n    super(key, iv, padding, heap, asm);\n\n    this.mode = 'CBC';\n    this.BLOCK_SIZE = 16;\n  }\n\n  encrypt(data) {\n    return this.AES_Encrypt_finish(data);\n  }\n\n  decrypt(data) {\n    return this.AES_Decrypt_finish(data);\n  }\n}\n\nexport class AES_CBC_Encrypt extends AES_CBC {\n  /**\n   * @param {Uint8Array} key\n   * @param {Uint8Array} [iv=null]\n   * @param {boolean} [padding=true]\n   * @param {Uint8Array} [heap]\n   * @param {Uint8Array} [asm]\n   */\n  constructor(key, iv, padding, heap, asm) {\n    super(key, iv, padding, heap, asm);\n  }\n\n  /**\n   * @param {Uint8Array} key\n   * @returns {AES_CBC_Encrypt}\n   */\n  reset(key) {\n    return this.AES_reset(key, null, true);\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @returns {AES_CBC_Encrypt}\n   */\n  process(data) {\n    return this.AES_Encrypt_process(data);\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @returns {AES_CBC_Encrypt}\n   */\n  finish(data) {\n    return this.AES_Encrypt_finish(data);\n  }\n}\n\nexport class AES_CBC_Decrypt extends AES_CBC {\n  /**\n   * @param {Uint8Array} key\n   * @param {Uint8Array} [iv=null]\n   * @param {boolean} [padding=true]\n   * @param {Uint8Array} [heap]\n   * @param {Uint8Array} [asm]\n   */\n  constructor(key, iv, padding, heap, asm) {\n    super(key, iv, padding, heap, asm);\n  }\n\n  /**\n   * @param {Uint8Array} key\n   * @returns {AES_CBC_Decrypt}\n   */\n  reset(key) {\n    return this.AES_reset(key, null, true);\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @returns {AES_CBC_Decrypt}\n   */\n  process(data) {\n    return this.AES_Decrypt_process(data);\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @returns {AES_CBC_Decrypt}\n   */\n  finish(data) {\n    return this.AES_Decrypt_finish(data);\n  }\n}\n\n","import {_AES_asm_instance, _AES_heap_instance} from '../exports';\nimport {AES_CBC, AES_CBC_Decrypt, AES_CBC_Encrypt} from './cbc';\n\n/**\n * @param {Uint8Array} data\n * @param {Uint8Array} key\n * @param {boolean} [padding]\n * @param {Uint8Array} [iv]\n * @returns {Uint8Array}\n */\nfunction AES_CBC_encrypt_bytes (data, key, padding, iv ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return new AES_CBC(key, iv, padding, _AES_heap_instance, _AES_asm_instance).encrypt(data).result;\n}\n\n/**\n * @param {Uint8Array} data\n * @param {Uint8Array} key\n * @param {boolean} [padding]\n * @param {Uint8Array} [iv]\n * @returns {Uint8Array}\n */\nfunction AES_CBC_decrypt_bytes ( data, key, padding, iv ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return new AES_CBC(key, iv, padding, _AES_heap_instance, _AES_asm_instance).decrypt(data).result;\n}\n\nAES_CBC.encrypt = AES_CBC_encrypt_bytes;\nAES_CBC.decrypt = AES_CBC_decrypt_bytes;\n\nAES_CBC.Encrypt = AES_CBC_Encrypt;\nAES_CBC.Decrypt = AES_CBC_Decrypt;\n\nexport {AES_CBC};\n","/**\n * Galois/Counter mode\n */\n\nimport {IllegalArgumentError, IllegalStateError, SecurityError} from '../../errors';\nimport {_heap_write, is_bytes, is_number} from '../../utils';\nimport {AES} from '../aes';\nimport {AES_asm} from '../aes.asm'\n\nvar _AES_GCM_data_maxLength = 68719476704;  // 2^36 - 2^5\n\nexport class AES_GCM extends AES {\n  constructor(key, nonce, adata, tagSize, heap, asm ) {\n    super(key, undefined, false, heap, asm);\n\n    this.nonce      = null;\n    this.adata      = null;\n    this.iv         = null;\n    this.counter    = 1;\n    this.tagSize    = 16;\n    this.mode       = 'GCM';\n    this.BLOCK_SIZE = 16;\n\n    this.reset(key, tagSize, nonce, adata);\n  }\n\n  reset(key, tagSize, nonce, adata) {\n    return this.AES_GCM_reset(key, tagSize, nonce, adata)\n  }\n\n  encrypt(data) {\n    return this.AES_GCM_encrypt(data);\n  }\n\n  decrypt(data) {\n    return this.AES_GCM_decrypt(data);\n  }\n\n  AES_GCM_Encrypt_process ( data ) {\n    if ( !is_bytes(data) )\n      throw new TypeError(\"data isn't of expected type\");\n\n    var dpos = 0,\n      dlen = data.length || 0,\n      asm = this.asm,\n      heap = this.heap,\n      counter = this.counter,\n      pos = this.pos,\n      len = this.len,\n      rpos = 0,\n      rlen = ( len + dlen ) & -16,\n      wlen = 0;\n\n    if ( ((counter-1)<<4) + len + dlen > _AES_GCM_data_maxLength )\n      throw new RangeError(\"counter overflow\");\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > 0 ) {\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen );\n      len  += wlen;\n      dpos += wlen;\n      dlen -= wlen;\n\n      wlen = asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, len );\n      wlen = asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen );\n\n      if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\n      counter += (wlen>>>4);\n      rpos += wlen;\n\n      if ( wlen < len ) {\n        pos += wlen;\n        len -= wlen;\n      } else {\n        pos = 0;\n        len = 0;\n      }\n    }\n\n    this.result = result;\n    this.counter = counter;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n  }\n\n  AES_GCM_Encrypt_finish () {\n    var asm = this.asm,\n      heap = this.heap,\n      counter = this.counter,\n      tagSize = this.tagSize,\n      adata = this.adata,\n      pos = this.pos,\n      len = this.len;\n\n    var result = new Uint8Array( len + tagSize );\n\n    asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, (len + 15) & -16 );\n    if ( len ) result.set( heap.subarray( pos, pos + len ) );\n\n    for ( var i = len; i & 15; i++ ) heap[ pos + i ] = 0;\n    asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i );\n\n    var alen = ( adata !== null ) ? adata.length : 0,\n      clen = ( (counter-1) << 4) + len;\n    heap[0] = heap[1] = heap[2] = 0,\n      heap[3] = alen>>>29,\n      heap[4] = alen>>>21,\n      heap[5] = alen>>>13&255,\n      heap[6] = alen>>>5&255,\n      heap[7] = alen<<3&255,\n      heap[8] = heap[9] = heap[10] = 0,\n      heap[11] = clen>>>29,\n      heap[12] = clen>>>21&255,\n      heap[13] = clen>>>13&255,\n      heap[14] = clen>>>5&255,\n      heap[15] = clen<<3&255;\n    asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16 );\n    asm.get_iv( AES_asm.HEAP_DATA );\n\n    asm.set_counter( 0, 0, 0, this.gamma0 );\n    asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16 );\n    result.set( heap.subarray( 0, tagSize ), len );\n\n    this.result = result;\n    this.counter = 1;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n  }\n\n  AES_GCM_Decrypt_process ( data ) {\n    if ( !is_bytes(data) )\n      throw new TypeError(\"data isn't of expected type\");\n\n    var dpos = 0,\n      dlen = data.length || 0,\n      asm = this.asm,\n      heap = this.heap,\n      counter = this.counter,\n      tagSize = this.tagSize,\n      pos = this.pos,\n      len = this.len,\n      rpos = 0,\n      rlen = len + dlen > tagSize ? ( len + dlen - tagSize ) & -16 : 0,\n      tlen = len + dlen - rlen,\n      wlen = 0;\n\n    if ( ((counter-1)<<4) + len + dlen > _AES_GCM_data_maxLength )\n      throw new RangeError(\"counter overflow\");\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > tlen ) {\n      wlen = _heap_write( heap, pos+len, data, dpos, dlen-tlen );\n      len  += wlen;\n      dpos += wlen;\n      dlen -= wlen;\n\n      wlen = asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen );\n      wlen = asm.cipher( AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, wlen );\n\n      if ( wlen ) result.set( heap.subarray( pos, pos+wlen ), rpos );\n      counter += (wlen>>>4);\n      rpos += wlen;\n\n      pos = 0;\n      len = 0;\n    }\n\n    if ( dlen > 0 ) {\n      len += _heap_write( heap, 0, data, dpos, dlen );\n    }\n\n    this.result = result;\n    this.counter = counter;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n  }\n\n  AES_GCM_Decrypt_finish () {\n    var asm = this.asm,\n      heap = this.heap,\n      tagSize = this.tagSize,\n      adata = this.adata,\n      counter = this.counter,\n      pos = this.pos,\n      len = this.len,\n      rlen = len - tagSize,\n      wlen = 0;\n\n    if (len < tagSize)\n      throw new IllegalStateError(\"authentication tag not found\");\n\n    var result = new Uint8Array(rlen),\n      atag = new Uint8Array(heap.subarray(pos + rlen, pos + len));\n\n    for (var i = rlen; i & 15; i++) heap[pos + i] = 0;\n\n    wlen = asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i);\n    wlen = asm.cipher(AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, i);\n    if (rlen) result.set(heap.subarray(pos, pos + rlen));\n\n    var alen = (adata !== null) ? adata.length : 0,\n      clen = ((counter - 1) << 4) + len - tagSize;\n    heap[0] = heap[1] = heap[2] = 0,\n      heap[3] = alen >>> 29,\n      heap[4] = alen >>> 21,\n      heap[5] = alen >>> 13 & 255,\n      heap[6] = alen >>> 5 & 255,\n      heap[7] = alen << 3 & 255,\n      heap[8] = heap[9] = heap[10] = 0,\n      heap[11] = clen >>> 29,\n      heap[12] = clen >>> 21 & 255,\n      heap[13] = clen >>> 13 & 255,\n      heap[14] = clen >>> 5 & 255,\n      heap[15] = clen << 3 & 255;\n    asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);\n    asm.get_iv(AES_asm.HEAP_DATA);\n\n    asm.set_counter(0, 0, 0, this.gamma0);\n    asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16);\n\n    var acheck = 0;\n    for (var i = 0; i < tagSize; ++i) acheck |= atag[i] ^ heap[i];\n    if (acheck)\n      throw new SecurityError(\"data integrity check failed\");\n\n    this.result = result;\n    this.counter = 1;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n  }\n\n  AES_GCM_decrypt ( data ) {\n    var result1 = this.AES_GCM_Decrypt_process( data ).result;\n    var result2 = this.AES_GCM_Decrypt_finish().result;\n\n    var result = new Uint8Array( result1.length + result2.length );\n    if ( result1.length ) result.set( result1 );\n    if ( result2.length ) result.set( result2, result1.length );\n    this.result = result;\n\n    return this;\n  }\n\n  AES_GCM_encrypt ( data ) {\n    var result1 = this.AES_GCM_Encrypt_process( data ).result;\n    var result2 = this.AES_GCM_Encrypt_finish().result;\n\n    var result = new Uint8Array( result1.length + result2.length );\n    if ( result1.length ) result.set( result1 );\n    if ( result2.length ) result.set( result2, result1.length );\n    this.result = result;\n\n    return this;\n  }\n\n  AES_GCM_reset (key, tagSize, nonce, adata, counter, iv  ) {\n    this.AES_reset(key, undefined, false);\n\n    var asm = this.asm;\n    var heap = this.heap;\n\n    asm.gcm_init();\n\n    var tagSize = tagSize;\n    if ( tagSize !== undefined ) {\n      if ( !is_number(tagSize) )\n        throw new TypeError(\"tagSize must be a number\");\n\n      if ( tagSize < 4 || tagSize > 16 )\n        throw new IllegalArgumentError(\"illegal tagSize value\");\n\n      this.tagSize = tagSize;\n    }\n    else {\n      this.tagSize = 16;\n    }\n\n    if ( nonce !== undefined ) {\n      if ( !is_bytes(nonce)) {\n        throw new TypeError(\"unexpected nonce type\");\n      }\n\n      this.nonce = nonce;\n\n      var noncelen = nonce.length || 0,\n        noncebuf = new Uint8Array(16);\n      if ( noncelen !== 12 ) {\n        this._gcm_mac_process( nonce );\n\n        heap[0] = heap[1] = heap[2] = heap[3] = heap[4] = heap[5] = heap[6] = heap[7] = heap[8] = heap[9] = heap[10] = 0,\n          heap[11] = noncelen>>>29,\n          heap[12] = noncelen>>>21&255,\n          heap[13] = noncelen>>>13&255,\n          heap[14] = noncelen>>>5&255,\n          heap[15] = noncelen<<3&255;\n        asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16 );\n\n        asm.get_iv( AES_asm.HEAP_DATA );\n        asm.set_iv();\n\n        noncebuf.set( heap.subarray( 0, 16 ) );\n      }\n      else {\n        noncebuf.set(nonce);\n        noncebuf[15] = 1;\n      }\n\n      var nonceview = new DataView( noncebuf.buffer );\n      this.gamma0 = nonceview.getUint32(12);\n\n      asm.set_nonce( nonceview.getUint32(0), nonceview.getUint32(4), nonceview.getUint32(8), 0 );\n      asm.set_mask( 0, 0, 0, 0xffffffff );\n    }\n    else {\n      throw new Error(\"nonce is required\");\n    }\n\n    if ( adata !== undefined && adata !== null ) {\n      if ( !is_bytes(adata) ){\n        throw new TypeError(\"unexpected adata type\");\n      }\n\n      if ( adata.length > _AES_GCM_data_maxLength )\n        throw new IllegalArgumentError(\"illegal adata length\");\n\n      if ( adata.length ) {\n        this.adata = adata;\n        this._gcm_mac_process( adata );\n      }\n      else {\n        this.adata = null;\n      }\n    }\n    else {\n      this.adata = null;\n    }\n\n    if ( counter !== undefined ) {\n      if ( !is_number(counter) )\n        throw new TypeError(\"counter must be a number\");\n\n      if ( counter < 1 || counter > 0xffffffff )\n        throw new RangeError(\"counter must be a positive 32-bit integer\");\n\n      this.counter = counter;\n      asm.set_counter( 0, 0, 0, this.gamma0+counter|0 );\n    }\n    else {\n      this.counter = 1;\n      asm.set_counter( 0, 0, 0, this.gamma0+1|0 );\n    }\n\n    if ( iv !== undefined ) {\n      if ( !is_number(iv) )\n        throw new TypeError(\"iv must be a number\");\n\n      this.iv = iv;\n\n      this.AES_set_iv( iv );\n    }\n\n    return this;\n  }\n\n  _gcm_mac_process ( data ) {\n    var heap = this.heap,\n      asm  = this.asm,\n      dpos = 0,\n      dlen = data.length || 0,\n      wlen = 0;\n\n    while ( dlen > 0 ) {\n      wlen = _heap_write( heap, 0, data, dpos, dlen );\n      dpos += wlen;\n      dlen -= wlen;\n\n      while ( wlen & 15 ) heap[ wlen++ ] = 0;\n\n      asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, wlen );\n    }\n  }\n}\n\nexport class AES_GCM_Encrypt extends AES_GCM {\n  constructor(key, nonce, adata, tagSize, heap, asm ) {\n    super(key, nonce, adata, tagSize, heap, asm );\n  }\n  process(data) {\n    return this.AES_GCM_Encrypt_process(data);\n  }\n  finish() {\n    return this.AES_GCM_Encrypt_finish();\n  }\n}\n\nexport class AES_GCM_Decrypt extends AES_GCM  {\n  constructor(key, nonce, adata, tagSize, heap, asm ) {\n    super(key, nonce, adata, tagSize, heap, asm );\n  }\n\n  process(data) {\n    return this.AES_GCM_Decrypt_process(data);\n  }\n  finish() {\n    return this.AES_GCM_Decrypt_finish();\n  }\n}\n","import {_heap_write, is_buffer, is_bytes, is_string, string_to_bytes} from '../utils';\nimport {IllegalStateError} from '../errors';\n\nexport function hash_reset () {\n    this.result = null;\n    this.pos = 0;\n    this.len = 0;\n\n    this.asm.reset();\n\n    return this;\n}\n\nexport function hash_process ( data ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    if ( !is_bytes(data) )\n        throw new TypeError(\"data isn't of expected type\");\n\n    var asm = this.asm,\n        heap = this.heap,\n        hpos = this.pos,\n        hlen = this.len,\n        dpos = 0,\n        dlen = data.length,\n        wlen = 0;\n\n    while ( dlen > 0 ) {\n        wlen = _heap_write( heap, hpos+hlen, data, dpos, dlen );\n        hlen += wlen;\n        dpos += wlen;\n        dlen -= wlen;\n\n        wlen = asm.process( hpos, hlen );\n\n        hpos += wlen;\n        hlen -= wlen;\n\n        if ( !hlen ) hpos = 0;\n    }\n\n    this.pos = hpos;\n    this.len = hlen;\n\n    return this;\n}\n\nexport function hash_finish () {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    this.asm.finish( this.pos, this.len, 0 );\n\n    this.result = new Uint8Array(this.HASH_SIZE);\n    this.result.set( this.heap.subarray( 0, this.HASH_SIZE ) );\n\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n}\n","/**\n * AES-GCM exports\n */\n\nimport {_AES_asm_instance, _AES_heap_instance} from '../exports';\nimport {AES_GCM, AES_GCM_Decrypt, AES_GCM_Encrypt} from './gcm';\n\n/**\n * @param {Uint8Array} data\n * @param {Uint8Array} key\n * @param {Uint8Array} nonce\n * @param {Uint8Array} [adata]\n * @param {number} [tagSize]\n * @return {Uint8Array}\n */\nfunction AES_GCM_encrypt_bytes ( data, key, nonce, adata, tagSize ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    if ( nonce === undefined ) throw new SyntaxError(\"nonce required\");\n    return new AES_GCM(key, nonce, adata, tagSize, _AES_heap_instance, _AES_asm_instance).encrypt(data).result;\n}\n\n/**\n * @param {Uint8Array} data\n * @param {Uint8Array} key\n * @param {Uint8Array} nonce\n * @param {Uint8Array} [adata]\n * @param {number} [tagSize]\n * @return {Uint8Array}\n */\nfunction AES_GCM_decrypt_bytes ( data, key, nonce, adata, tagSize ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    if ( nonce === undefined ) throw new SyntaxError(\"nonce required\");\n    return new AES_GCM(key, nonce, adata, tagSize, _AES_heap_instance, _AES_asm_instance).decrypt(data).result;\n}\n\nAES_GCM.encrypt = AES_GCM_encrypt_bytes;\nAES_GCM.decrypt = AES_GCM_decrypt_bytes;\n\nAES_GCM.Encrypt = AES_GCM_Encrypt;\nAES_GCM.Decrypt = AES_GCM_Decrypt;\n\nexport { AES_GCM };\n","import {sha1_asm} from './sha1.asm';\nimport {hash_finish, hash_process, hash_reset} from '../hash';\nimport {_heap_init} from '../../utils';\n\nexport var _sha1_block_size = 64;\nexport var _sha1_hash_size = 20;\n\nexport function sha1_constructor ( options ) {\n    options = options || {};\n\n    this.heap = _heap_init( Uint8Array, options.heap );\n    this.asm = options.asm || sha1_asm( { Uint8Array: Uint8Array }, null, this.heap.buffer );\n\n    this.BLOCK_SIZE = _sha1_block_size;\n    this.HASH_SIZE = _sha1_hash_size;\n\n    this.reset();\n}\n\nsha1_constructor.BLOCK_SIZE = _sha1_block_size;\nsha1_constructor.NAME = \"sha1\";\n\nsha1_constructor.HASH_SIZE = _sha1_hash_size;\nvar sha1_prototype = sha1_constructor.prototype;\nsha1_prototype.reset =   hash_reset;\nsha1_prototype.process = hash_process;\nsha1_prototype.finish =  hash_finish;\n\nvar sha1_instance = null;\n\nexport function get_sha1_instance () {\n    if ( sha1_instance === null ) sha1_instance = new sha1_constructor( { heapSize: 0x100000 } );\n    return sha1_instance;\n}\n","export function sha1_asm ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    // SHA256 state\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0,\n        TOTAL0 = 0, TOTAL1 = 0;\n\n    // HMAC state\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0,\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0;\n\n    // I/O buffer\n    var HEAP = new stdlib.Uint8Array(buffer);\n\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\n        w0 = w0|0;\n        w1 = w1|0;\n        w2 = w2|0;\n        w3 = w3|0;\n        w4 = w4|0;\n        w5 = w5|0;\n        w6 = w6|0;\n        w7 = w7|0;\n        w8 = w8|0;\n        w9 = w9|0;\n        w10 = w10|0;\n        w11 = w11|0;\n        w12 = w12|0;\n        w13 = w13|0;\n        w14 = w14|0;\n        w15 = w15|0;\n\n        var a = 0, b = 0, c = 0, d = 0, e = 0, n = 0, t = 0,\n            w16 = 0, w17 = 0, w18 = 0, w19 = 0,\n            w20 = 0, w21 = 0, w22 = 0, w23 = 0, w24 = 0, w25 = 0, w26 = 0, w27 = 0, w28 = 0, w29 = 0,\n            w30 = 0, w31 = 0, w32 = 0, w33 = 0, w34 = 0, w35 = 0, w36 = 0, w37 = 0, w38 = 0, w39 = 0,\n            w40 = 0, w41 = 0, w42 = 0, w43 = 0, w44 = 0, w45 = 0, w46 = 0, w47 = 0, w48 = 0, w49 = 0,\n            w50 = 0, w51 = 0, w52 = 0, w53 = 0, w54 = 0, w55 = 0, w56 = 0, w57 = 0, w58 = 0, w59 = 0,\n            w60 = 0, w61 = 0, w62 = 0, w63 = 0, w64 = 0, w65 = 0, w66 = 0, w67 = 0, w68 = 0, w69 = 0,\n            w70 = 0, w71 = 0, w72 = 0, w73 = 0, w74 = 0, w75 = 0, w76 = 0, w77 = 0, w78 = 0, w79 = 0;\n\n        a = H0;\n        b = H1;\n        c = H2;\n        d = H3;\n        e = H4;\n\n        // 0\n        t = ( w0 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 1\n        t = ( w1 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 2\n        t = ( w2 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 3\n        t = ( w3 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 4\n        t = ( w4 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 5\n        t = ( w5 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 6\n        t = ( w6 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 7\n        t = ( w7 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 8\n        t = ( w8 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 9\n        t = ( w9 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 10\n        t = ( w10 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 11\n        t = ( w11 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 12\n        t = ( w12 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 13\n        t = ( w13 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 14\n        t = ( w14 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 15\n        t = ( w15 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 16\n        n = w13 ^ w8 ^ w2 ^ w0;\n        w16 = (n << 1) | (n >>> 31);\n        t = (w16 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 17\n        n = w14 ^ w9 ^ w3 ^ w1;\n        w17 = (n << 1) | (n >>> 31);\n        t = (w17 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 18\n        n = w15 ^ w10 ^ w4 ^ w2;\n        w18 = (n << 1) | (n >>> 31);\n        t = (w18 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 19\n        n = w16 ^ w11 ^ w5 ^ w3;\n        w19 = (n << 1) | (n >>> 31);\n        t = (w19 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 20\n        n = w17 ^ w12 ^ w6 ^ w4;\n        w20 = (n << 1) | (n >>> 31);\n        t = (w20 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 21\n        n = w18 ^ w13 ^ w7 ^ w5;\n        w21 = (n << 1) | (n >>> 31);\n        t = (w21 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 22\n        n = w19 ^ w14 ^ w8 ^ w6;\n        w22 = (n << 1) | (n >>> 31);\n        t = (w22 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 23\n        n = w20 ^ w15 ^ w9 ^ w7;\n        w23 = (n << 1) | (n >>> 31);\n        t = (w23 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 24\n        n = w21 ^ w16 ^ w10 ^ w8;\n        w24 = (n << 1) | (n >>> 31);\n        t = (w24 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 25\n        n = w22 ^ w17 ^ w11 ^ w9;\n        w25 = (n << 1) | (n >>> 31);\n        t = (w25 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 26\n        n = w23 ^ w18 ^ w12 ^ w10;\n        w26 = (n << 1) | (n >>> 31);\n        t = (w26 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 27\n        n = w24 ^ w19 ^ w13 ^ w11;\n        w27 = (n << 1) | (n >>> 31);\n        t = (w27 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 28\n        n = w25 ^ w20 ^ w14 ^ w12;\n        w28 = (n << 1) | (n >>> 31);\n        t = (w28 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 29\n        n = w26 ^ w21 ^ w15 ^ w13;\n        w29 = (n << 1) | (n >>> 31);\n        t = (w29 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 30\n        n = w27 ^ w22 ^ w16 ^ w14;\n        w30 = (n << 1) | (n >>> 31);\n        t = (w30 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 31\n        n = w28 ^ w23 ^ w17 ^ w15;\n        w31 = (n << 1) | (n >>> 31);\n        t = (w31 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 32\n        n = w29 ^ w24 ^ w18 ^ w16;\n        w32 = (n << 1) | (n >>> 31);\n        t = (w32 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 33\n        n = w30 ^ w25 ^ w19 ^ w17;\n        w33 = (n << 1) | (n >>> 31);\n        t = (w33 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 34\n        n = w31 ^ w26 ^ w20 ^ w18;\n        w34 = (n << 1) | (n >>> 31);\n        t = (w34 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 35\n        n = w32 ^ w27 ^ w21 ^ w19;\n        w35 = (n << 1) | (n >>> 31);\n        t = (w35 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 36\n        n = w33 ^ w28 ^ w22 ^ w20;\n        w36 = (n << 1) | (n >>> 31);\n        t = (w36 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 37\n        n = w34 ^ w29 ^ w23 ^ w21;\n        w37 = (n << 1) | (n >>> 31);\n        t = (w37 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 38\n        n = w35 ^ w30 ^ w24 ^ w22;\n        w38 = (n << 1) | (n >>> 31);\n        t = (w38 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 39\n        n = w36 ^ w31 ^ w25 ^ w23;\n        w39 = (n << 1) | (n >>> 31);\n        t = (w39 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 40\n        n = w37 ^ w32 ^ w26 ^ w24;\n        w40 = (n << 1) | (n >>> 31);\n        t = (w40 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 41\n        n = w38 ^ w33 ^ w27 ^ w25;\n        w41 = (n << 1) | (n >>> 31);\n        t = (w41 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 42\n        n = w39 ^ w34 ^ w28 ^ w26;\n        w42 = (n << 1) | (n >>> 31);\n        t = (w42 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 43\n        n = w40 ^ w35 ^ w29 ^ w27;\n        w43 = (n << 1) | (n >>> 31);\n        t = (w43 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 44\n        n = w41 ^ w36 ^ w30 ^ w28;\n        w44 = (n << 1) | (n >>> 31);\n        t = (w44 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 45\n        n = w42 ^ w37 ^ w31 ^ w29;\n        w45 = (n << 1) | (n >>> 31);\n        t = (w45 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 46\n        n = w43 ^ w38 ^ w32 ^ w30;\n        w46 = (n << 1) | (n >>> 31);\n        t = (w46 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 47\n        n = w44 ^ w39 ^ w33 ^ w31;\n        w47 = (n << 1) | (n >>> 31);\n        t = (w47 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 48\n        n = w45 ^ w40 ^ w34 ^ w32;\n        w48 = (n << 1) | (n >>> 31);\n        t = (w48 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 49\n        n = w46 ^ w41 ^ w35 ^ w33;\n        w49 = (n << 1) | (n >>> 31);\n        t = (w49 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 50\n        n = w47 ^ w42 ^ w36 ^ w34;\n        w50 = (n << 1) | (n >>> 31);\n        t = (w50 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 51\n        n = w48 ^ w43 ^ w37 ^ w35;\n        w51 = (n << 1) | (n >>> 31);\n        t = (w51 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 52\n        n = w49 ^ w44 ^ w38 ^ w36;\n        w52 = (n << 1) | (n >>> 31);\n        t = (w52 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 53\n        n = w50 ^ w45 ^ w39 ^ w37;\n        w53 = (n << 1) | (n >>> 31);\n        t = (w53 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 54\n        n = w51 ^ w46 ^ w40 ^ w38;\n        w54 = (n << 1) | (n >>> 31);\n        t = (w54 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 55\n        n = w52 ^ w47 ^ w41 ^ w39;\n        w55 = (n << 1) | (n >>> 31);\n        t = (w55 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 56\n        n = w53 ^ w48 ^ w42 ^ w40;\n        w56 = (n << 1) | (n >>> 31);\n        t = (w56 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 57\n        n = w54 ^ w49 ^ w43 ^ w41;\n        w57 = (n << 1) | (n >>> 31);\n        t = (w57 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 58\n        n = w55 ^ w50 ^ w44 ^ w42;\n        w58 = (n << 1) | (n >>> 31);\n        t = (w58 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 59\n        n = w56 ^ w51 ^ w45 ^ w43;\n        w59 = (n << 1) | (n >>> 31);\n        t = (w59 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 60\n        n = w57 ^ w52 ^ w46 ^ w44;\n        w60 = (n << 1) | (n >>> 31);\n        t = (w60 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 61\n        n = w58 ^ w53 ^ w47 ^ w45;\n        w61 = (n << 1) | (n >>> 31);\n        t = (w61 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 62\n        n = w59 ^ w54 ^ w48 ^ w46;\n        w62 = (n << 1) | (n >>> 31);\n        t = (w62 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 63\n        n = w60 ^ w55 ^ w49 ^ w47;\n        w63 = (n << 1) | (n >>> 31);\n        t = (w63 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 64\n        n = w61 ^ w56 ^ w50 ^ w48;\n        w64 = (n << 1) | (n >>> 31);\n        t = (w64 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 65\n        n = w62 ^ w57 ^ w51 ^ w49;\n        w65 = (n << 1) | (n >>> 31);\n        t = (w65 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 66\n        n = w63 ^ w58 ^ w52 ^ w50;\n        w66 = (n << 1) | (n >>> 31);\n        t = (w66 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 67\n        n = w64 ^ w59 ^ w53 ^ w51;\n        w67 = (n << 1) | (n >>> 31);\n        t = (w67 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 68\n        n = w65 ^ w60 ^ w54 ^ w52;\n        w68 = (n << 1) | (n >>> 31);\n        t = (w68 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 69\n        n = w66 ^ w61 ^ w55 ^ w53;\n        w69 = (n << 1) | (n >>> 31);\n        t = (w69 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 70\n        n = w67 ^ w62 ^ w56 ^ w54;\n        w70 = (n << 1) | (n >>> 31);\n        t = (w70 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 71\n        n = w68 ^ w63 ^ w57 ^ w55;\n        w71 = (n << 1) | (n >>> 31);\n        t = (w71 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 72\n        n = w69 ^ w64 ^ w58 ^ w56;\n        w72 = (n << 1) | (n >>> 31);\n        t = (w72 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 73\n        n = w70 ^ w65 ^ w59 ^ w57;\n        w73 = (n << 1) | (n >>> 31);\n        t = (w73 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 74\n        n = w71 ^ w66 ^ w60 ^ w58;\n        w74 = (n << 1) | (n >>> 31);\n        t = (w74 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 75\n        n = w72 ^ w67 ^ w61 ^ w59;\n        w75 = (n << 1) | (n >>> 31);\n        t = (w75 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 76\n        n = w73 ^ w68 ^ w62 ^ w60;\n        w76 = (n << 1) | (n >>> 31);\n        t = (w76 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 77\n        n = w74 ^ w69 ^ w63 ^ w61;\n        w77 = (n << 1) | (n >>> 31);\n        t = (w77 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 78\n        n = w75 ^ w70 ^ w64 ^ w62;\n        w78 = (n << 1) | (n >>> 31);\n        t = (w78 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 79\n        n = w76 ^ w71 ^ w65 ^ w63;\n        w79 = (n << 1) | (n >>> 31);\n        t = (w79 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        H0 = ( H0 + a )|0;\n        H1 = ( H1 + b )|0;\n        H2 = ( H2 + c )|0;\n        H3 = ( H3 + d )|0;\n        H4 = ( H4 + e )|0;\n\n    }\n\n    function _core_heap ( offset ) {\n        offset = offset|0;\n\n        _core(\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\n        );\n    }\n\n    // offset — multiple of 32\n    function _state_to_heap ( output ) {\n        output = output|0;\n\n        HEAP[output|0] = H0>>>24;\n        HEAP[output|1] = H0>>>16&255;\n        HEAP[output|2] = H0>>>8&255;\n        HEAP[output|3] = H0&255;\n        HEAP[output|4] = H1>>>24;\n        HEAP[output|5] = H1>>>16&255;\n        HEAP[output|6] = H1>>>8&255;\n        HEAP[output|7] = H1&255;\n        HEAP[output|8] = H2>>>24;\n        HEAP[output|9] = H2>>>16&255;\n        HEAP[output|10] = H2>>>8&255;\n        HEAP[output|11] = H2&255;\n        HEAP[output|12] = H3>>>24;\n        HEAP[output|13] = H3>>>16&255;\n        HEAP[output|14] = H3>>>8&255;\n        HEAP[output|15] = H3&255;\n        HEAP[output|16] = H4>>>24;\n        HEAP[output|17] = H4>>>16&255;\n        HEAP[output|18] = H4>>>8&255;\n        HEAP[output|19] = H4&255;\n    }\n\n    function reset () {\n        H0 = 0x67452301;\n        H1 = 0xefcdab89;\n        H2 = 0x98badcfe;\n        H3 = 0x10325476;\n        H4 = 0xc3d2e1f0;\n        TOTAL0 = TOTAL1 = 0;\n    }\n\n    function init ( h0, h1, h2, h3, h4, total0, total1 ) {\n        h0 = h0|0;\n        h1 = h1|0;\n        h2 = h2|0;\n        h3 = h3|0;\n        h4 = h4|0;\n        total0 = total0|0;\n        total1 = total1|0;\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        TOTAL0 = total0;\n        TOTAL1 = total1;\n    }\n\n    // offset — multiple of 64\n    function process ( offset, length ) {\n        offset = offset|0;\n        length = length|0;\n\n        var hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        while ( (length|0) >= 64 ) {\n            _core_heap(offset);\n\n            offset = ( offset + 64 )|0;\n            length = ( length - 64 )|0;\n\n            hashed = ( hashed + 64 )|0;\n        }\n\n        TOTAL0 = ( TOTAL0 + hashed )|0;\n        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\n\n        return hashed|0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var hashed = 0,\n            i = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        if ( (length|0) >= 64 ) {\n            hashed = process( offset, length )|0;\n            if ( (hashed|0) == -1 )\n                return -1;\n\n            offset = ( offset + hashed )|0;\n            length = ( length - hashed )|0;\n        }\n\n        hashed = ( hashed + length )|0;\n        TOTAL0 = ( TOTAL0 + length )|0;\n        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = (TOTAL1 + 1)|0;\n\n        HEAP[offset|length] = 0x80;\n\n        if ( (length|0) >= 56 ) {\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\n                HEAP[offset|i] = 0x00;\n            _core_heap(offset);\n\n            length = 0;\n\n            HEAP[offset|0] = 0;\n        }\n\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\n            HEAP[offset|i] = 0;\n\n        HEAP[offset|56] = TOTAL1>>>21&255;\n        HEAP[offset|57] = TOTAL1>>>13&255;\n        HEAP[offset|58] = TOTAL1>>>5&255;\n        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;\n        HEAP[offset|60] = TOTAL0>>>21&255;\n        HEAP[offset|61] = TOTAL0>>>13&255;\n        HEAP[offset|62] = TOTAL0>>>5&255;\n        HEAP[offset|63] = TOTAL0<<3&255;\n        _core_heap(offset);\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    function hmac_reset () {\n        H0 = I0;\n        H1 = I1;\n        H2 = I2;\n        H3 = I3;\n        H4 = I4;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function _hmac_opad () {\n        H0 = O0;\n        H1 = O1;\n        H2 = O2;\n        H3 = O3;\n        H4 = O4;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\n        p0 = p0|0;\n        p1 = p1|0;\n        p2 = p2|0;\n        p3 = p3|0;\n        p4 = p4|0;\n        p5 = p5|0;\n        p6 = p6|0;\n        p7 = p7|0;\n        p8 = p8|0;\n        p9 = p9|0;\n        p10 = p10|0;\n        p11 = p11|0;\n        p12 = p12|0;\n        p13 = p13|0;\n        p14 = p14|0;\n        p15 = p15|0;\n\n        // opad\n        reset();\n        _core(\n            p0 ^ 0x5c5c5c5c,\n            p1 ^ 0x5c5c5c5c,\n            p2 ^ 0x5c5c5c5c,\n            p3 ^ 0x5c5c5c5c,\n            p4 ^ 0x5c5c5c5c,\n            p5 ^ 0x5c5c5c5c,\n            p6 ^ 0x5c5c5c5c,\n            p7 ^ 0x5c5c5c5c,\n            p8 ^ 0x5c5c5c5c,\n            p9 ^ 0x5c5c5c5c,\n            p10 ^ 0x5c5c5c5c,\n            p11 ^ 0x5c5c5c5c,\n            p12 ^ 0x5c5c5c5c,\n            p13 ^ 0x5c5c5c5c,\n            p14 ^ 0x5c5c5c5c,\n            p15 ^ 0x5c5c5c5c\n        );\n        O0 = H0;\n        O1 = H1;\n        O2 = H2;\n        O3 = H3;\n        O4 = H4;\n\n        // ipad\n        reset();\n        _core(\n            p0 ^ 0x36363636,\n            p1 ^ 0x36363636,\n            p2 ^ 0x36363636,\n            p3 ^ 0x36363636,\n            p4 ^ 0x36363636,\n            p5 ^ 0x36363636,\n            p6 ^ 0x36363636,\n            p7 ^ 0x36363636,\n            p8 ^ 0x36363636,\n            p9 ^ 0x36363636,\n            p10 ^ 0x36363636,\n            p11 ^ 0x36363636,\n            p12 ^ 0x36363636,\n            p13 ^ 0x36363636,\n            p14 ^ 0x36363636,\n            p15 ^ 0x36363636\n        );\n        I0 = H0;\n        I1 = H1;\n        I2 = H2;\n        I3 = H3;\n        I4 = H4;\n\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function hmac_finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        hashed = finish( offset, length, -1 )|0;\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n        _hmac_opad();\n        _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    // salt is assumed to be already processed\n    // offset — multiple of 64\n    // output — multiple of 32\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\n        offset = offset|0;\n        length = length|0;\n        block = block|0;\n        count = count|0;\n        output = output|0;\n\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0,\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        // pad block number into heap\n        // FIXME probable OOB write\n        HEAP[(offset+length)|0]   = block>>>24;\n        HEAP[(offset+length+1)|0] = block>>>16&255;\n        HEAP[(offset+length+2)|0] = block>>>8&255;\n        HEAP[(offset+length+3)|0] = block&255;\n\n        // finish first iteration\n        hmac_finish( offset, (length+4)|0, -1 )|0;\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4;\n        count = (count-1)|0;\n\n        // perform the rest iterations\n        while ( (count|0) > 0 ) {\n            hmac_reset();\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n            _hmac_opad();\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n            h0 = h0 ^ H0;\n            h1 = h1 ^ H1;\n            h2 = h2 ^ H2;\n            h3 = h3 ^ H3;\n            h4 = h4 ^ H4;\n\n            count = (count-1)|0;\n        }\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return 0;\n    }\n\n    return {\n        // SHA1\n        reset: reset,\n        init: init,\n        process: process,\n        finish: finish,\n\n        // HMAC-SHA1\n        hmac_reset: hmac_reset,\n        hmac_init: hmac_init,\n        hmac_finish: hmac_finish,\n\n        // PBKDF2-HMAC-SHA1\n        pbkdf2_generate_block: pbkdf2_generate_block\n    }\n}\n","/**\n * SHA1 exports\n */\n\nimport {get_sha1_instance, sha1_constructor} from './sha1';\nimport {bytes_to_base64, bytes_to_hex} from '../../utils';\n\nfunction sha1_bytes (data ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    return get_sha1_instance().reset().process(data).finish().result;\n}\n\nfunction sha1_hex ( data ) {\n    var result = sha1_bytes(data);\n    return bytes_to_hex(result);\n}\n\nfunction sha1_base64 ( data ) {\n    var result = sha1_bytes(data);\n    return bytes_to_base64(result);\n}\n\nexport var SHA1 = sha1_constructor;\n\nSHA1.bytes = sha1_bytes;\nSHA1.hex = sha1_hex;\nSHA1.base64 = sha1_base64;\n","import {sha256_asm} from './sha256.asm';\nimport {hash_finish, hash_process, hash_reset} from '../hash';\nimport {_heap_init} from '../../utils';\n\nexport var _sha256_block_size = 64;\nexport var _sha256_hash_size = 32;\n\nexport function sha256_constructor ( options ) {\n    options = options || {};\n\n    this.heap = _heap_init( Uint8Array, options.heap );\n    this.asm = options.asm || sha256_asm( { Uint8Array: Uint8Array }, null, this.heap.buffer );\n\n    this.BLOCK_SIZE = _sha256_block_size;\n    this.HASH_SIZE = _sha256_hash_size;\n\n    this.reset();\n}\n\nsha256_constructor.BLOCK_SIZE = _sha256_block_size;\nsha256_constructor.HASH_SIZE = _sha256_hash_size;\nsha256_constructor.NAME = \"sha256\";\n\nvar sha256_prototype = sha256_constructor.prototype;\nsha256_prototype.reset =   hash_reset;\nsha256_prototype.process = hash_process;\nsha256_prototype.finish =  hash_finish;\n\nvar sha256_instance = null;\n\nexport function get_sha256_instance () {\n    if ( sha256_instance === null ) sha256_instance = new sha256_constructor( { heapSize: 0x100000 } );\n    return sha256_instance;\n}\n","export function sha256_asm ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    // SHA256 state\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0, H5 = 0, H6 = 0, H7 = 0,\n        TOTAL0 = 0, TOTAL1 = 0;\n\n    // HMAC state\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0, I7 = 0,\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0, O5 = 0, O6 = 0, O7 = 0;\n\n    // I/O buffer\n    var HEAP = new stdlib.Uint8Array(buffer);\n\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\n        w0 = w0|0;\n        w1 = w1|0;\n        w2 = w2|0;\n        w3 = w3|0;\n        w4 = w4|0;\n        w5 = w5|0;\n        w6 = w6|0;\n        w7 = w7|0;\n        w8 = w8|0;\n        w9 = w9|0;\n        w10 = w10|0;\n        w11 = w11|0;\n        w12 = w12|0;\n        w13 = w13|0;\n        w14 = w14|0;\n        w15 = w15|0;\n\n        var a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;\n\n        a = H0;\n        b = H1;\n        c = H2;\n        d = H3;\n        e = H4;\n        f = H5;\n        g = H6;\n        h = H7;\n        \n        // 0\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x428a2f98 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 1\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x71374491 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 2\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb5c0fbcf )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 3\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xe9b5dba5 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 4\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x3956c25b )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 5\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x59f111f1 )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 6\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x923f82a4 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 7\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xab1c5ed5 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 8\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd807aa98 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 9\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x12835b01 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 10\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x243185be )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 11\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x550c7dc3 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 12\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x72be5d74 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 13\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x80deb1fe )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 14\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x9bdc06a7 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 15\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc19bf174 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 16\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xe49b69c1 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 17\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xefbe4786 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 18\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x0fc19dc6 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 19\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x240ca1cc )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 20\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x2de92c6f )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 21\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4a7484aa )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 22\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5cb0a9dc )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 23\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x76f988da )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 24\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x983e5152 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 25\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa831c66d )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 26\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb00327c8 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 27\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xbf597fc7 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 28\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xc6e00bf3 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 29\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd5a79147 )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 30\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x06ca6351 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 31\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x14292967 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 32\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x27b70a85 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 33\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x2e1b2138 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 34\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x4d2c6dfc )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 35\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x53380d13 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 36\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x650a7354 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 37\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x766a0abb )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 38\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x81c2c92e )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 39\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x92722c85 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 40\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa2bfe8a1 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 41\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa81a664b )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 42\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xc24b8b70 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 43\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xc76c51a3 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 44\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xd192e819 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 45\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd6990624 )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 46\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xf40e3585 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 47\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x106aa070 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 48\n        w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x19a4c116 )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 49\n        w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x1e376c08 )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 50\n        w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x2748774c )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 51\n        w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x34b0bcb5 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 52\n        w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x391c0cb3 )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 53\n        w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4ed8aa4a )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 54\n        w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5b9cca4f )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 55\n        w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x682e6ff3 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 56\n        w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x748f82ee )|0;\n        d = ( d + h )|0;\n        h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;\n\n        // 57\n        w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x78a5636f )|0;\n        c = ( c + g )|0;\n        g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;\n\n        // 58\n        w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x84c87814 )|0;\n        b = ( b + f )|0;\n        f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;\n\n        // 59\n        w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x8cc70208 )|0;\n        a = ( a + e )|0;\n        e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;\n\n        // 60\n        w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x90befffa )|0;\n        h = ( h + d )|0;\n        d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;\n\n        // 61\n        w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xa4506ceb )|0;\n        g = ( g + c )|0;\n        c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;\n\n        // 62\n        w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xbef9a3f7 )|0;\n        f = ( f + b )|0;\n        b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;\n\n        // 63\n        w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc67178f2 )|0;\n        e = ( e + a )|0;\n        a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        H0 = ( H0 + a )|0;\n        H1 = ( H1 + b )|0;\n        H2 = ( H2 + c )|0;\n        H3 = ( H3 + d )|0;\n        H4 = ( H4 + e )|0;\n        H5 = ( H5 + f )|0;\n        H6 = ( H6 + g )|0;\n        H7 = ( H7 + h )|0;\n    }\n\n    function _core_heap ( offset ) {\n        offset = offset|0;\n\n        _core(\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\n        );\n    }\n\n    // offset — multiple of 32\n    function _state_to_heap ( output ) {\n        output = output|0;\n\n        HEAP[output|0] = H0>>>24;\n        HEAP[output|1] = H0>>>16&255;\n        HEAP[output|2] = H0>>>8&255;\n        HEAP[output|3] = H0&255;\n        HEAP[output|4] = H1>>>24;\n        HEAP[output|5] = H1>>>16&255;\n        HEAP[output|6] = H1>>>8&255;\n        HEAP[output|7] = H1&255;\n        HEAP[output|8] = H2>>>24;\n        HEAP[output|9] = H2>>>16&255;\n        HEAP[output|10] = H2>>>8&255;\n        HEAP[output|11] = H2&255;\n        HEAP[output|12] = H3>>>24;\n        HEAP[output|13] = H3>>>16&255;\n        HEAP[output|14] = H3>>>8&255;\n        HEAP[output|15] = H3&255;\n        HEAP[output|16] = H4>>>24;\n        HEAP[output|17] = H4>>>16&255;\n        HEAP[output|18] = H4>>>8&255;\n        HEAP[output|19] = H4&255;\n        HEAP[output|20] = H5>>>24;\n        HEAP[output|21] = H5>>>16&255;\n        HEAP[output|22] = H5>>>8&255;\n        HEAP[output|23] = H5&255;\n        HEAP[output|24] = H6>>>24;\n        HEAP[output|25] = H6>>>16&255;\n        HEAP[output|26] = H6>>>8&255;\n        HEAP[output|27] = H6&255;\n        HEAP[output|28] = H7>>>24;\n        HEAP[output|29] = H7>>>16&255;\n        HEAP[output|30] = H7>>>8&255;\n        HEAP[output|31] = H7&255;\n    }\n\n    function reset () {\n        H0 = 0x6a09e667;\n        H1 = 0xbb67ae85;\n        H2 = 0x3c6ef372;\n        H3 = 0xa54ff53a;\n        H4 = 0x510e527f;\n        H5 = 0x9b05688c;\n        H6 = 0x1f83d9ab;\n        H7 = 0x5be0cd19;\n        TOTAL0 = TOTAL1 = 0;\n    }\n\n    function init ( h0, h1, h2, h3, h4, h5, h6, h7, total0, total1 ) {\n        h0 = h0|0;\n        h1 = h1|0;\n        h2 = h2|0;\n        h3 = h3|0;\n        h4 = h4|0;\n        h5 = h5|0;\n        h6 = h6|0;\n        h7 = h7|0;\n        total0 = total0|0;\n        total1 = total1|0;\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        H5 = h5;\n        H6 = h6;\n        H7 = h7;\n        TOTAL0 = total0;\n        TOTAL1 = total1;\n    }\n\n    // offset — multiple of 64\n    function process ( offset, length ) {\n        offset = offset|0;\n        length = length|0;\n\n        var hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        while ( (length|0) >= 64 ) {\n            _core_heap(offset);\n\n            offset = ( offset + 64 )|0;\n            length = ( length - 64 )|0;\n\n            hashed = ( hashed + 64 )|0;\n        }\n\n        TOTAL0 = ( TOTAL0 + hashed )|0;\n        if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\n\n        return hashed|0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var hashed = 0,\n            i = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        if ( (length|0) >= 64 ) {\n            hashed = process( offset, length )|0;\n            if ( (hashed|0) == -1 )\n                return -1;\n\n            offset = ( offset + hashed )|0;\n            length = ( length - hashed )|0;\n        }\n\n        hashed = ( hashed + length )|0;\n        TOTAL0 = ( TOTAL0 + length )|0;\n        if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;\n\n        HEAP[offset|length] = 0x80;\n\n        if ( (length|0) >= 56 ) {\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\n                HEAP[offset|i] = 0x00;\n\n            _core_heap(offset);\n\n            length = 0;\n\n            HEAP[offset|0] = 0;\n        }\n\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\n            HEAP[offset|i] = 0;\n\n        HEAP[offset|56] = TOTAL1>>>21&255;\n        HEAP[offset|57] = TOTAL1>>>13&255;\n        HEAP[offset|58] = TOTAL1>>>5&255;\n        HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;\n        HEAP[offset|60] = TOTAL0>>>21&255;\n        HEAP[offset|61] = TOTAL0>>>13&255;\n        HEAP[offset|62] = TOTAL0>>>5&255;\n        HEAP[offset|63] = TOTAL0<<3&255;\n        _core_heap(offset);\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    function hmac_reset () {\n        H0 = I0;\n        H1 = I1;\n        H2 = I2;\n        H3 = I3;\n        H4 = I4;\n        H5 = I5;\n        H6 = I6;\n        H7 = I7;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function _hmac_opad () {\n        H0 = O0;\n        H1 = O1;\n        H2 = O2;\n        H3 = O3;\n        H4 = O4;\n        H5 = O5;\n        H6 = O6;\n        H7 = O7;\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\n        p0 = p0|0;\n        p1 = p1|0;\n        p2 = p2|0;\n        p3 = p3|0;\n        p4 = p4|0;\n        p5 = p5|0;\n        p6 = p6|0;\n        p7 = p7|0;\n        p8 = p8|0;\n        p9 = p9|0;\n        p10 = p10|0;\n        p11 = p11|0;\n        p12 = p12|0;\n        p13 = p13|0;\n        p14 = p14|0;\n        p15 = p15|0;\n\n        // opad\n        reset();\n        _core(\n            p0 ^ 0x5c5c5c5c,\n            p1 ^ 0x5c5c5c5c,\n            p2 ^ 0x5c5c5c5c,\n            p3 ^ 0x5c5c5c5c,\n            p4 ^ 0x5c5c5c5c,\n            p5 ^ 0x5c5c5c5c,\n            p6 ^ 0x5c5c5c5c,\n            p7 ^ 0x5c5c5c5c,\n            p8 ^ 0x5c5c5c5c,\n            p9 ^ 0x5c5c5c5c,\n            p10 ^ 0x5c5c5c5c,\n            p11 ^ 0x5c5c5c5c,\n            p12 ^ 0x5c5c5c5c,\n            p13 ^ 0x5c5c5c5c,\n            p14 ^ 0x5c5c5c5c,\n            p15 ^ 0x5c5c5c5c\n        );\n        O0 = H0;\n        O1 = H1;\n        O2 = H2;\n        O3 = H3;\n        O4 = H4;\n        O5 = H5;\n        O6 = H6;\n        O7 = H7;\n\n        // ipad\n        reset();\n        _core(\n            p0 ^ 0x36363636,\n            p1 ^ 0x36363636,\n            p2 ^ 0x36363636,\n            p3 ^ 0x36363636,\n            p4 ^ 0x36363636,\n            p5 ^ 0x36363636,\n            p6 ^ 0x36363636,\n            p7 ^ 0x36363636,\n            p8 ^ 0x36363636,\n            p9 ^ 0x36363636,\n            p10 ^ 0x36363636,\n            p11 ^ 0x36363636,\n            p12 ^ 0x36363636,\n            p13 ^ 0x36363636,\n            p14 ^ 0x36363636,\n            p15 ^ 0x36363636\n        );\n        I0 = H0;\n        I1 = H1;\n        I2 = H2;\n        I3 = H3;\n        I4 = H4;\n        I5 = H5;\n        I6 = H6;\n        I7 = H7;\n\n        TOTAL0 = 64;\n        TOTAL1 = 0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function hmac_finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n            hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        hashed = finish( offset, length, -1 )|0;\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n        _hmac_opad();\n        _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    // salt is assumed to be already processed\n    // offset — multiple of 64\n    // output — multiple of 32\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\n        offset = offset|0;\n        length = length|0;\n        block = block|0;\n        count = count|0;\n        output = output|0;\n\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 = 0, h7 = 0,\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        // pad block number into heap\n        // FIXME probable OOB write\n        HEAP[(offset+length)|0]   = block>>>24;\n        HEAP[(offset+length+1)|0] = block>>>16&255;\n        HEAP[(offset+length+2)|0] = block>>>8&255;\n        HEAP[(offset+length+3)|0] = block&255;\n\n        // finish first iteration\n        hmac_finish( offset, (length+4)|0, -1 )|0;\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4, h5 = t5 = H5, h6 = t6 = H6, h7 = t7 = H7;\n        count = (count-1)|0;\n\n        // perform the rest iterations\n        while ( (count|0) > 0 ) {\n            hmac_reset();\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n            _hmac_opad();\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n            h0 = h0 ^ H0;\n            h1 = h1 ^ H1;\n            h2 = h2 ^ H2;\n            h3 = h3 ^ H3;\n            h4 = h4 ^ H4;\n            h5 = h5 ^ H5;\n            h6 = h6 ^ H6;\n            h7 = h7 ^ H7;\n\n            count = (count-1)|0;\n        }\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        H5 = h5;\n        H6 = h6;\n        H7 = h7;\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return 0;\n    }\n\n    return {\n        // SHA256\n        reset: reset,\n        init: init,\n        process: process,\n        finish: finish,\n\n        // HMAC-SHA256\n        hmac_reset: hmac_reset,\n        hmac_init: hmac_init,\n        hmac_finish: hmac_finish,\n\n        // PBKDF2-HMAC-SHA256\n        pbkdf2_generate_block: pbkdf2_generate_block\n    }\n}\n","/**\n * SHA256 exports\n */\n\nimport {get_sha256_instance, sha256_constructor} from './sha256';\nimport {bytes_to_base64, bytes_to_hex} from '../../utils';\n\nfunction sha256_bytes (data ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    return get_sha256_instance().reset().process(data).finish().result;\n}\n\nfunction sha256_hex ( data ) {\n    var result = sha256_bytes(data);\n    return bytes_to_hex(result);\n}\n\nfunction sha256_base64 ( data ) {\n    var result = sha256_bytes(data);\n    return bytes_to_base64(result);\n}\n\nexport var SHA256 = sha256_constructor;\nSHA256.bytes = sha256_bytes;\nSHA256.hex = sha256_hex;\nSHA256.base64 = sha256_base64;\n","import {is_buffer, is_bytes, is_string, string_to_bytes} from '../utils';\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\n\nexport function hmac_constructor (options ) {\n    options = options || {};\n\n    if ( !options.hash )\n        throw new SyntaxError(\"option 'hash' is required\");\n\n    if ( !options.hash.HASH_SIZE )\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\n\n    this.hash = options.hash;\n    this.BLOCK_SIZE = this.hash.BLOCK_SIZE;\n    this.HMAC_SIZE = this.hash.HASH_SIZE;\n\n    this.key = null;\n    this.verify = null;\n    this.result = null;\n\n    if ( options.password !== undefined || options.verify !== undefined )\n        this.reset(options);\n\n    return this;\n}\n\nexport function _hmac_key ( hash, password ) {\n    if ( is_buffer(password) )\n        password = new Uint8Array(password);\n\n    if ( is_string(password) )\n        password = string_to_bytes(password);\n\n    if ( !is_bytes(password) )\n        throw new TypeError(\"password isn't of expected type\");\n\n    var key = new Uint8Array( hash.BLOCK_SIZE );\n\n    if ( password.length > hash.BLOCK_SIZE ) {\n        key.set( hash.reset().process(password).finish().result );\n    }\n    else {\n        key.set(password);\n    }\n\n    return key;\n}\n\nexport function _hmac_init_verify ( verify ) {\n    if ( is_buffer(verify) || is_bytes(verify) ) {\n        verify = new Uint8Array(verify);\n    }\n    else if ( is_string(verify) ) {\n        verify = string_to_bytes(verify);\n    }\n    else {\n        throw new TypeError(\"verify tag isn't of expected type\");\n    }\n\n    if ( verify.length !== this.HMAC_SIZE )\n        throw new IllegalArgumentError(\"illegal verification tag size\");\n\n    this.verify = verify;\n}\n\nfunction hmac_reset ( options ) {\n    options = options || {};\n    var password = options.password;\n\n    if ( this.key === null && !is_string(password) && !password )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    this.result = null;\n    this.hash.reset();\n\n    if ( password || is_string(password) )\n        this.key = _hmac_key( this.hash, password );\n\n    var ipad = new Uint8Array(this.key);\n    for ( var i = 0; i < ipad.length; ++i )\n        ipad[i] ^= 0x36;\n\n    this.hash.process(ipad);\n\n    var verify = options.verify;\n    if ( verify !== undefined ) {\n        _hmac_init_verify.call( this, verify );\n    }\n    else {\n        this.verify = null;\n    }\n\n    return this;\n}\n\nexport function hmac_process ( data ) {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    this.hash.process(data);\n\n    return this;\n}\n\nfunction hmac_finish () {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    var inner_result = this.hash.finish().result;\n\n    var opad = new Uint8Array(this.key);\n    for ( var i = 0; i < opad.length; ++i )\n        opad[i] ^= 0x5c;\n\n    var verify = this.verify;\n    var result = this.hash.reset().process(opad).process(inner_result).finish().result;\n\n    if ( verify ) {\n        if ( verify.length === result.length ) {\n            var diff = 0;\n            for ( var i = 0; i < verify.length; i++ ) {\n                diff |= ( verify[i] ^ result[i] );\n            }\n            this.result = !diff;\n        } else {\n            this.result = false;\n        }\n    }\n    else {\n        this.result = result;\n    }\n\n    return this;\n}\n\nvar hmac_prototype = hmac_constructor.prototype;\nhmac_prototype.reset =   hmac_reset;\nhmac_prototype.process = hmac_process;\nhmac_prototype.finish =  hmac_finish;\n","import {hmac_process, hmac_constructor, _hmac_key, _hmac_init_verify} from './hmac';\nimport {_sha1_hash_size, get_sha1_instance, sha1_constructor} from '../hash/sha1/sha1';\nimport {is_string, string_to_bytes} from '../utils';\nimport {IllegalStateError} from '../errors';\n\nexport function hmac_sha1_constructor (options ) {\n    options = options || {};\n\n    if ( !( options.hash instanceof sha1_constructor ) )\n        options.hash = get_sha1_instance();\n\n    hmac_constructor.call( this, options );\n\n    return this;\n}\n\nfunction hmac_sha1_reset ( options ) {\n    options = options || {};\n\n    this.result = null;\n    this.hash.reset();\n\n    var password = options.password;\n    if ( password !== undefined ) {\n        if ( is_string(password) )\n            password = string_to_bytes(password);\n\n        var key = this.key = _hmac_key( this.hash, password );\n        this.hash.reset().asm.hmac_init(\n                (key[0]<<24)|(key[1]<<16)|(key[2]<<8)|(key[3]),\n                (key[4]<<24)|(key[5]<<16)|(key[6]<<8)|(key[7]),\n                (key[8]<<24)|(key[9]<<16)|(key[10]<<8)|(key[11]),\n                (key[12]<<24)|(key[13]<<16)|(key[14]<<8)|(key[15]),\n                (key[16]<<24)|(key[17]<<16)|(key[18]<<8)|(key[19]),\n                (key[20]<<24)|(key[21]<<16)|(key[22]<<8)|(key[23]),\n                (key[24]<<24)|(key[25]<<16)|(key[26]<<8)|(key[27]),\n                (key[28]<<24)|(key[29]<<16)|(key[30]<<8)|(key[31]),\n                (key[32]<<24)|(key[33]<<16)|(key[34]<<8)|(key[35]),\n                (key[36]<<24)|(key[37]<<16)|(key[38]<<8)|(key[39]),\n                (key[40]<<24)|(key[41]<<16)|(key[42]<<8)|(key[43]),\n                (key[44]<<24)|(key[45]<<16)|(key[46]<<8)|(key[47]),\n                (key[48]<<24)|(key[49]<<16)|(key[50]<<8)|(key[51]),\n                (key[52]<<24)|(key[53]<<16)|(key[54]<<8)|(key[55]),\n                (key[56]<<24)|(key[57]<<16)|(key[58]<<8)|(key[59]),\n                (key[60]<<24)|(key[61]<<16)|(key[62]<<8)|(key[63])\n        );\n    }\n    else {\n        this.hash.asm.hmac_reset();\n    }\n\n    var verify = options.verify;\n    if ( verify !== undefined ) {\n        _hmac_init_verify.call( this, verify );\n    }\n    else {\n        this.verify = null;\n    }\n\n    return this;\n}\n\nfunction hmac_sha1_finish () {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    var hash = this.hash,\n        asm = this.hash.asm,\n        heap = this.hash.heap;\n\n    asm.hmac_finish( hash.pos, hash.len, 0 );\n\n    var verify = this.verify;\n    var result = new Uint8Array(_sha1_hash_size);\n    result.set( heap.subarray( 0, _sha1_hash_size ) );\n\n    if ( verify ) {\n        if ( verify.length === result.length ) {\n            var diff = 0;\n            for ( var i = 0; i < verify.length; i++ ) {\n                diff |= ( verify[i] ^ result[i] );\n            }\n            this.result = !diff;\n        } else {\n            this.result = false;\n        }\n    }\n    else {\n        this.result = result;\n    }\n\n    return this;\n}\n\nhmac_sha1_constructor.BLOCK_SIZE = sha1_constructor.BLOCK_SIZE;\nhmac_sha1_constructor.HMAC_SIZE = sha1_constructor.HASH_SIZE;\n\nvar hmac_sha1_prototype = hmac_sha1_constructor.prototype;\nhmac_sha1_prototype.reset = hmac_sha1_reset;\nhmac_sha1_prototype.process = hmac_process;\nhmac_sha1_prototype.finish = hmac_sha1_finish;\n\nvar hmac_sha1_instance = null;\n\nexport function get_hmac_sha1_instance () {\n    if ( hmac_sha1_instance === null ) hmac_sha1_instance = new hmac_sha1_constructor();\n    return hmac_sha1_instance;\n}\n","/**\n * HMAC-SHA1 exports\n */\n\nimport {get_hmac_sha1_instance, hmac_sha1_constructor} from './hmac-sha1';\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\n\nfunction hmac_sha1_bytes (data, password ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    return get_hmac_sha1_instance().reset( { password: password } ).process(data).finish().result;\n}\n\nfunction hmac_sha1_hex ( data, password ) {\n    var result = hmac_sha1_bytes( data, password );\n    return bytes_to_hex(result);\n}\n\nfunction hmac_sha1_base64 ( data, password ) {\n    var result = hmac_sha1_bytes( data, password );\n    return bytes_to_base64(result);\n}\n\nexport var HMAC_SHA1 = hmac_sha1_constructor;\n\nHMAC_SHA1.bytes = hmac_sha1_bytes;\nHMAC_SHA1.hex = hmac_sha1_hex;\nHMAC_SHA1.base64 = hmac_sha1_base64;\n","import {hmac_constructor, hmac_process, _hmac_init_verify, _hmac_key} from './hmac';\nimport {_sha256_hash_size, get_sha256_instance, sha256_constructor} from '../hash/sha256/sha256';\nimport {is_string, string_to_bytes} from '../utils';\nimport {IllegalStateError} from '../errors';\n\nexport function hmac_sha256_constructor (options ) {\n    options = options || {};\n\n    if ( !( options.hash instanceof sha256_constructor ) )\n        options.hash = get_sha256_instance();\n\n    hmac_constructor.call( this, options );\n\n    return this;\n}\n\nfunction hmac_sha256_reset ( options ) {\n    options = options || {};\n\n    this.result = null;\n    this.hash.reset();\n\n    var password = options.password;\n    if ( password !== undefined ) {\n        if ( is_string(password) )\n            password = string_to_bytes(password);\n\n        var key = this.key = _hmac_key( this.hash, password );\n        this.hash.reset().asm.hmac_init(\n            (key[0]<<24)|(key[1]<<16)|(key[2]<<8)|(key[3]),\n            (key[4]<<24)|(key[5]<<16)|(key[6]<<8)|(key[7]),\n            (key[8]<<24)|(key[9]<<16)|(key[10]<<8)|(key[11]),\n            (key[12]<<24)|(key[13]<<16)|(key[14]<<8)|(key[15]),\n            (key[16]<<24)|(key[17]<<16)|(key[18]<<8)|(key[19]),\n            (key[20]<<24)|(key[21]<<16)|(key[22]<<8)|(key[23]),\n            (key[24]<<24)|(key[25]<<16)|(key[26]<<8)|(key[27]),\n            (key[28]<<24)|(key[29]<<16)|(key[30]<<8)|(key[31]),\n            (key[32]<<24)|(key[33]<<16)|(key[34]<<8)|(key[35]),\n            (key[36]<<24)|(key[37]<<16)|(key[38]<<8)|(key[39]),\n            (key[40]<<24)|(key[41]<<16)|(key[42]<<8)|(key[43]),\n            (key[44]<<24)|(key[45]<<16)|(key[46]<<8)|(key[47]),\n            (key[48]<<24)|(key[49]<<16)|(key[50]<<8)|(key[51]),\n            (key[52]<<24)|(key[53]<<16)|(key[54]<<8)|(key[55]),\n            (key[56]<<24)|(key[57]<<16)|(key[58]<<8)|(key[59]),\n            (key[60]<<24)|(key[61]<<16)|(key[62]<<8)|(key[63])\n        );\n    }\n    else {\n        this.hash.asm.hmac_reset();\n    }\n\n    var verify = options.verify;\n    if ( verify !== undefined ) {\n        _hmac_init_verify.call( this, verify );\n    }\n    else {\n        this.verify = null;\n    }\n\n    return this;\n}\n\nfunction hmac_sha256_finish () {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    var hash = this.hash,\n        asm = this.hash.asm,\n        heap = this.hash.heap;\n\n    asm.hmac_finish( hash.pos, hash.len, 0 );\n\n    var verify = this.verify;\n    var result = new Uint8Array(_sha256_hash_size);\n    result.set( heap.subarray( 0, _sha256_hash_size ) );\n\n    if ( verify ) {\n        if ( verify.length === result.length ) {\n            var diff = 0;\n            for ( var i = 0; i < verify.length; i++ ) {\n                diff |= ( verify[i] ^ result[i] );\n            }\n            this.result = !diff;\n        } else {\n            this.result = false;\n        }\n    }\n    else {\n        this.result = result;\n    }\n\n    return this;\n}\n\nhmac_sha256_constructor.BLOCK_SIZE = sha256_constructor.BLOCK_SIZE;\nhmac_sha256_constructor.HMAC_SIZE = sha256_constructor.HASH_SIZE;\n\nvar hmac_sha256_prototype = hmac_sha256_constructor.prototype;\nhmac_sha256_prototype.reset = hmac_sha256_reset;\nhmac_sha256_prototype.process = hmac_process;\nhmac_sha256_prototype.finish = hmac_sha256_finish;\n\nvar hmac_sha256_instance = null;\n\nexport function get_hmac_sha256_instance () {\n    if ( hmac_sha256_instance === null ) hmac_sha256_instance = new hmac_sha256_constructor();\n    return hmac_sha256_instance;\n}\n","/**\n * HMAC-SHA256 exports\n */\n\nimport {get_hmac_sha256_instance, hmac_sha256_constructor} from './hmac-sha256';\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\n\nfunction hmac_sha256_bytes (data, password ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    return get_hmac_sha256_instance().reset( { password: password } ).process(data).finish().result;\n}\n\nfunction hmac_sha256_hex ( data, password ) {\n    var result = hmac_sha256_bytes( data, password );\n    return bytes_to_hex(result);\n}\n\nfunction hmac_sha256_base64 ( data, password ) {\n    var result = hmac_sha256_bytes( data, password );\n    return bytes_to_base64(result);\n}\n\nexport var HMAC_SHA256 = hmac_sha256_constructor;\n\nHMAC_SHA256.bytes = hmac_sha256_bytes;\nHMAC_SHA256.hex = hmac_sha256_hex;\nHMAC_SHA256.base64 = hmac_sha256_base64;\n","import {is_string} from '../utils';\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\n\nexport function pbkdf2_constructor (options ) {\n    options = options || {};\n\n    if ( !options.hmac )\n        throw new SyntaxError(\"option 'hmac' is required\");\n\n    if ( !options.hmac.HMAC_SIZE )\n        throw new SyntaxError(\"option 'hmac' supplied doesn't seem to be a valid HMAC function\");\n\n    this.hmac = options.hmac;\n    this.count = options.count || 4096;\n    this.length = options.length || this.hmac.HMAC_SIZE;\n\n    this.result = null;\n\n    var password = options.password;\n    if ( password || is_string(password) )\n        this.reset(options);\n\n    return this;\n}\n\nexport function pbkdf2_reset ( options ) {\n    this.result = null;\n\n    this.hmac.reset(options);\n\n    return this;\n}\n\nfunction pbkdf2_generate ( salt, count, length ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( !salt && !is_string(salt) )\n        throw new IllegalArgumentError(\"bad 'salt' value\");\n\n    count = count || this.count;\n    length = length || this.length;\n\n    this.result = new Uint8Array(length);\n\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\n\n    for ( var i = 1; i <= blocks; ++i ) {\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\n        var tmp = new Uint8Array( this.hmac.reset().process(salt).process( new Uint8Array([ i>>>24&0xff, i>>>16&0xff, i>>>8&0xff, i&0xff ]) ).finish().result );\n        this.result.set( tmp.subarray( 0, l ), j );\n        for ( var k = 1; k < count; ++k ) {\n            tmp = new Uint8Array( this.hmac.reset().process(tmp).finish().result );\n            for ( var r = 0; r < l; ++r ) this.result[j+r] ^= tmp[r];\n        }\n    }\n\n    return this;\n}\n\n// methods\nvar pbkdf2_prototype = pbkdf2_constructor.prototype;\npbkdf2_prototype.reset =   pbkdf2_reset;\npbkdf2_prototype.generate = pbkdf2_generate;\n","import {get_hmac_sha1_instance, hmac_sha1_constructor} from '../hmac/hmac-sha1';\nimport {pbkdf2_constructor, pbkdf2_reset} from './pbkdf2';\nimport {is_string} from '../utils';\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\n\nexport function pbkdf2_hmac_sha1_constructor (options ) {\n    options = options || {};\n\n    if ( !( options.hmac instanceof hmac_sha1_constructor ) )\n        options.hmac = get_hmac_sha1_instance();\n\n    pbkdf2_constructor.call( this, options );\n\n    return this;\n}\n\nfunction pbkdf2_hmac_sha1_generate ( salt, count, length ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( !salt && !is_string(salt) )\n        throw new IllegalArgumentError(\"bad 'salt' value\");\n\n    count = count || this.count;\n    length = length || this.length;\n\n    this.result = new Uint8Array(length);\n\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\n\n    for ( var i = 1; i <= blocks; ++i ) {\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\n\n        this.hmac.reset().process(salt);\n        this.hmac.hash.asm.pbkdf2_generate_block( this.hmac.hash.pos, this.hmac.hash.len, i, count, 0 );\n\n        this.result.set( this.hmac.hash.heap.subarray( 0, l ), j );\n    }\n\n    return this;\n}\n\nvar pbkdf2_hmac_sha1_prototype = pbkdf2_hmac_sha1_constructor.prototype;\npbkdf2_hmac_sha1_prototype.reset =   pbkdf2_reset;\npbkdf2_hmac_sha1_prototype.generate = pbkdf2_hmac_sha1_generate;\n\nvar pbkdf2_hmac_sha1_instance = null;\n\nexport function get_pbkdf2_hmac_sha1_instance () {\n    if ( pbkdf2_hmac_sha1_instance === null ) pbkdf2_hmac_sha1_instance = new pbkdf2_hmac_sha1_constructor();\n    return pbkdf2_hmac_sha1_instance;\n}\n","/**\n * PBKDF2-HMAC-SHA1 exports\n */\n\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\nimport {get_pbkdf2_hmac_sha1_instance} from './pbkdf2-hmac-sha1';\n\nfunction pbkdf2_hmac_sha1_bytes (password, salt, iterations, dklen ) {\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    if ( salt === undefined ) throw new SyntaxError(\"salt required\");\n    return get_pbkdf2_hmac_sha1_instance().reset( { password: password } ).generate( salt, iterations, dklen ).result;\n}\n\nfunction pbkdf2_hmac_sha1_hex ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha1_bytes( password, salt, iterations, dklen );\n    return bytes_to_hex(result);\n}\n\nfunction pbkdf2_hmac_sha1_base64 ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha1_bytes( password, salt, iterations, dklen );\n    return bytes_to_base64(result);\n}\n\nexport var PBKDF2 = {\n    bytes: pbkdf2_hmac_sha1_bytes,\n    hex: pbkdf2_hmac_sha1_hex,\n    base64: pbkdf2_hmac_sha1_base64\n};\n\nexport var PBKDF2_HMAC_SHA1 = {\n  bytes: pbkdf2_hmac_sha1_bytes,\n  hex: pbkdf2_hmac_sha1_hex,\n  base64: pbkdf2_hmac_sha1_base64\n};\n","import {pbkdf2_constructor, pbkdf2_reset} from './pbkdf2';\nimport {get_hmac_sha256_instance, hmac_sha256_constructor} from '../hmac/hmac-sha256';\nimport {is_string} from '../utils';\nimport {IllegalArgumentError, IllegalStateError} from '../errors';\n\nexport function pbkdf2_hmac_sha256_constructor ( options ) {\n    options = options || {};\n\n    if ( !( options.hmac instanceof hmac_sha256_constructor ) )\n        options.hmac = get_hmac_sha256_instance();\n\n    pbkdf2_constructor.call( this, options );\n\n    return this;\n}\n\nfunction pbkdf2_hmac_sha256_generate ( salt, count, length ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( !salt && !is_string(salt) )\n        throw new IllegalArgumentError(\"bad 'salt' value\");\n\n    count = count || this.count;\n    length = length || this.length;\n\n    this.result = new Uint8Array(length);\n\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\n\n    for ( var i = 1; i <= blocks; ++i ) {\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\n\n        this.hmac.reset().process(salt);\n        this.hmac.hash.asm.pbkdf2_generate_block( this.hmac.hash.pos, this.hmac.hash.len, i, count, 0 );\n\n        this.result.set( this.hmac.hash.heap.subarray( 0, l ), j );\n    }\n\n    return this;\n}\n\nvar pbkdf2_hmac_sha256_prototype = pbkdf2_hmac_sha256_constructor.prototype;\npbkdf2_hmac_sha256_prototype.reset =   pbkdf2_reset;\npbkdf2_hmac_sha256_prototype.generate = pbkdf2_hmac_sha256_generate;\n\nvar pbkdf2_hmac_sha256_instance = null;\n\nexport function get_pbkdf2_hmac_sha256_instance () {\n    if ( pbkdf2_hmac_sha256_instance === null ) pbkdf2_hmac_sha256_instance = new pbkdf2_hmac_sha256_constructor();\n    return pbkdf2_hmac_sha256_instance;\n}\n","/**\n * PBKDF2-HMAC-SHA256 exports\n */\n\nimport {get_pbkdf2_hmac_sha256_instance} from './pbkdf2-hmac-sha256';\nimport {bytes_to_base64, bytes_to_hex} from '../utils';\n\nfunction pbkdf2_hmac_sha256_bytes (password, salt, iterations, dklen ) {\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    if ( salt === undefined ) throw new SyntaxError(\"salt required\");\n    return get_pbkdf2_hmac_sha256_instance().reset( { password: password } ).generate( salt, iterations, dklen ).result;\n}\n\nfunction pbkdf2_hmac_sha256_hex ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha256_bytes( password, salt, iterations, dklen );\n    return bytes_to_hex(result);\n}\n\nfunction pbkdf2_hmac_sha256_base64 ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha256_bytes( password, salt, iterations, dklen );\n    return bytes_to_base64(result);\n}\n\nexport var PBKDF2_HMAC_SHA256 = {\n    bytes: pbkdf2_hmac_sha256_bytes,\n    hex: pbkdf2_hmac_sha256_hex,\n    base64: pbkdf2_hmac_sha256_base64\n};\n","import { ISAAC } from './isaac';\nimport {FloatArray, is_buffer, is_typed_array} from '../utils';\nimport {get_pbkdf2_hmac_sha256_instance} from '../pbkdf2/pbkdf2-hmac-sha256';\nimport {SecurityError} from '../errors';\n\nvar _global_console = typeof console !== \"undefined\" ? console : undefined,\n    _global_date_now = Date.now,\n    _global_math_random = Math.random,\n    _global_performance = typeof performance !== \"undefined\" ? performance : undefined,\n    _global_crypto = typeof crypto !== \"undefined\" ? crypto : (typeof msCrypto !== \"undefined\" ? msCrypto : undefined),\n    _global_crypto_getRandomValues;\n\nif ( _global_crypto !== undefined )\n    _global_crypto_getRandomValues = _global_crypto.getRandomValues;\n\nvar _isaac_rand = ISAAC.rand,\n    _isaac_seed = ISAAC.seed,\n    _isaac_counter = 0,\n    _isaac_weak_seeded = false,\n    _isaac_seeded = false;\n\nvar _random_estimated_entropy = 0,\n    _random_required_entropy = 256,\n    _random_warn_callstacks = {};\n\nexport var _random_skip_system_rng_warning = false;\nexport var _random_allow_weak = false;\n\nvar _hires_now;\nif ( _global_performance !== undefined ) {\n    _hires_now = function () { return 1000 * _global_performance.now() | 0 };\n}\nelse {\n    var _hires_epoch = 1000 * _global_date_now() | 0;\n    _hires_now = function () { return 1000 * _global_date_now() - _hires_epoch | 0 };\n}\n\n/**\n * weak_seed\n *\n * Seeds RNG with native `crypto.getRandomValues` output or with high-resolution\n * time and single `Math.random()` value, and various other sources.\n *\n * We estimate this may give at least ~50 bits of unpredictableness,\n * but this has not been analysed thoroughly or precisely.\n */\nfunction Random_weak_seed () {\n    if ( _global_crypto !== undefined ) {\n        buffer = new Uint8Array(32);\n        _global_crypto_getRandomValues.call( _global_crypto, buffer );\n\n        _isaac_seed(buffer);\n    }\n    else {\n        // Some clarification about brute-force attack cost:\n        // - entire bitcoin network operates at ~10^16 hash guesses per second;\n        // - each PBKDF2 iteration requires the same number of hashing operations as bitcoin nonce guess;\n        // - attacker having such a hashing power is able to break worst-case 50 bits of the randomness in ~3 hours;\n        // Sounds sad though attacker having such a hashing power more likely would prefer to mine bitcoins.\n        var buffer = new FloatArray(3),\n            i, t;\n\n        buffer[0] = _global_math_random();\n        buffer[1] = _global_date_now();\n        buffer[2] = _hires_now();\n\n        buffer = new Uint8Array(buffer.buffer);\n\n        var salt = '';\n        if ( typeof location !== \"undefined\" ) {\n            salt += location.href;\n        }\n        else if ( typeof process !== \"undefined\" ) {\n            salt += process.pid + process.title;\n        }\n\n        var pbkdf2 = get_pbkdf2_hmac_sha256_instance();\n        for ( i = 0; i < 100; i++ ) {\n            buffer = pbkdf2.reset( { password: buffer } ).generate( salt, 1000, 32 ).result;\n            t = _hires_now();\n            buffer[0] ^= t >>> 24, buffer[1] ^= t >>> 16, buffer[2] ^= t >>> 8, buffer[3] ^= t;\n        }\n\n        _isaac_seed(buffer);\n    }\n\n    _isaac_counter = 0;\n\n    _isaac_weak_seeded = true;\n}\n\n/**\n * seed\n *\n * Seeds PRNG with supplied random values if these values have enough entropy.\n *\n * A false return value means the RNG is currently insecure; however a true\n * return value does not mean it is necessarily secure (depending on how you\n * collected the seed) though asmCrypto will be forced to assume this.\n *\n * The input buffer will be zeroed to discourage reuse. You should not copy it\n * or use it anywhere else before passing it into this function.\n *\n * **DISCLAIMER!** Seeding with a poor values is an easiest way shoot your legs, so\n * do not seed until you're know what entropy is and how to obtail high-quality random values,\n * **DO NOT SEED WITH CONSTANT VALUE! YOU'LL GET NO RANDOMNESS FROM CONSTANT!**\n */\nexport function Random_seed ( seed ) {\n    if ( !is_buffer(seed) && !is_typed_array(seed) )\n        throw new TypeError(\"bad seed type\");\n\n    var bpos = seed.byteOffset || 0,\n        blen = seed.byteLength || seed.length,\n        buff = new Uint8Array( ( seed.buffer || seed ), bpos, blen );\n\n    _isaac_seed(buff);\n\n    _isaac_counter = 0;\n\n    // don't let the user use these bytes again\n    var nonzero = 0;\n    for ( var i = 0; i < buff.length; i++ ) {\n        nonzero |= buff[i];\n        buff[i] = 0;\n    }\n\n    if ( nonzero !== 0 ) {\n        // TODO we could make a better estimate, but half-length is a prudent\n        // simple measure that seems unlikely to over-estimate\n        _random_estimated_entropy += 4 * blen;\n    }\n\n    _isaac_seeded = ( _random_estimated_entropy  >= _random_required_entropy );\n\n    return _isaac_seeded;\n}\n\n/**\n * getValues\n *\n * Populates the buffer with cryptographically secure random values. These are\n * calculated using `crypto.getRandomValues` if it is available, as well as our\n * own ISAAC PRNG implementation.\n *\n * If the former is not available (older browsers such as IE10 [1]), then the\n * latter *must* be seeded using `Random.seed`, unless `asmCrypto.random.allowWeak` is true.\n *\n * *We assume the system RNG is strong*; if you cannot afford this risk, then\n * you should also seed ISAAC using `Random.seed`. This is advisable for very\n * important situations, such as generation of long-term secrets. See also [2].\n *\n * [1] https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n * [2] https://en.wikipedia.org/wiki/Dual_EC_DRBG\n *\n * In all cases, we opportunistically seed using various arbitrary sources\n * such as high-resolution time and one single value from the insecure\n * Math.random(); however this is not reliable as a strong security measure.\n */\nexport function Random_getValues ( buffer ) {\n    // opportunistically seed ISAAC with a weak seed; this hopefully makes an\n    // attack harder in the case where the system RNG is weak *and* we haven't\n    // seeded ISAAC. but don't make any guarantees to the user about this.\n    if ( !_isaac_weak_seeded )\n        Random_weak_seed();\n\n    // if we have no strong sources then the RNG is weak, handle it\n    if ( !_isaac_seeded && _global_crypto === undefined ) {\n        if ( !_random_allow_weak )\n            throw new SecurityError(\"No strong PRNGs available. Use asmCrypto.random.seed().\");\n\n        if ( _global_console !== undefined )\n            _global_console.error(\"No strong PRNGs available; your security is greatly lowered. Use asmCrypto.random.seed().\");\n    }\n\n    // separate warning about assuming system RNG strong\n    if ( !_random_skip_system_rng_warning && !_isaac_seeded && _global_crypto !== undefined && _global_console !== undefined ) {\n        // Hacky way to get call stack\n        var s = new Error().stack;\n        _random_warn_callstacks[s] |= 0;\n        if ( !_random_warn_callstacks[s]++ )\n            _global_console.warn(\"asmCrypto PRNG not seeded; your security relies on your system PRNG. If this is not acceptable, use asmCrypto.random.seed().\");\n    }\n\n    // proceed to get random values\n    if ( !is_buffer(buffer) && !is_typed_array(buffer) )\n        throw new TypeError(\"unexpected buffer type\");\n\n    var bpos = buffer.byteOffset || 0,\n        blen = buffer.byteLength || buffer.length,\n        bytes = new Uint8Array( ( buffer.buffer || buffer ), bpos, blen ),\n        i, r;\n\n    // apply system rng\n    if ( _global_crypto !== undefined )\n        _global_crypto_getRandomValues.call( _global_crypto, bytes );\n\n    // apply isaac rng\n    for ( i = 0; i < blen; i++ ) {\n        if ( (i & 3) === 0 ) {\n            if ( _isaac_counter >= 0x10000000000 ) Random_weak_seed();\n            r = _isaac_rand();\n            _isaac_counter++;\n        }\n        bytes[i] ^= r;\n        r >>>= 8;\n    }\n\n    return buffer;\n}\n\n/**\n * getNumber\n *\n * A drop-in `Math.random` replacement.\n * Intended for prevention of random material leakage out of the user's host.\n */\nexport function Random_getNumber () {\n    if ( !_isaac_weak_seeded || _isaac_counter >= 0x10000000000 )\n        Random_weak_seed();\n\n    var n = ( 0x100000 * _isaac_rand() + ( _isaac_rand() >>> 12 ) ) / 0x10000000000000;\n    _isaac_counter += 2;\n\n    return n;\n}\n\nObject.defineProperty( Random_getNumber, 'allowWeak', {\n  get: function () { return _random_allow_weak; },\n  set: function ( a ) { _random_allow_weak = a; }\n});\n\nObject.defineProperty( Random_getNumber, 'skipSystemRNGWarning', {\n  get: function () { return _random_skip_system_rng_warning; },\n  set: function ( w ) { _random_skip_system_rng_warning = w; }\n});\n\n\nObject.defineProperty( Random_getValues, 'allowWeak', {\n  get: function () { return _random_allow_weak; },\n  set: function ( a ) { _random_allow_weak = a; }\n});\n\nObject.defineProperty( Random_getValues, 'skipSystemRNGWarning', {\n  get: function () { return _random_skip_system_rng_warning; },\n  set: function ( w ) { _random_skip_system_rng_warning = w; }\n});\n\nRandom_getNumber.seed = Random_seed;\nRandom_getValues.seed = Random_seed;\n","/* ----------------------------------------------------------------------\n * Copyright (c) 2014 Artem S Vybornov\n *\n * Copyright (c) 2012 Yves-Marie K. Rinquin\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * ----------------------------------------------------------------------\n *\n * ISAAC is a cryptographically secure pseudo-random number generator\n * (or CSPRNG for short) designed by Robert J. Jenkins Jr. in 1996 and\n * based on RC4. It is designed for speed and security.\n *\n * ISAAC's informations & analysis:\n *   http://burtleburtle.net/bob/rand/isaac.html\n * ISAAC's implementation details:\n *   http://burtleburtle.net/bob/rand/isaacafa.html\n *\n * ISAAC succesfully passed TestU01\n */\n\nimport {FloatArray, is_buffer, is_number, is_string, is_typed_array, string_to_bytes} from '../utils';\n\nexport var ISAAC =  ( function () {\n    var m = new Uint32Array(256), // internal memory\n        r = new Uint32Array(256), // result array\n        acc = 0,              // accumulator\n        brs = 0,              // last result\n        cnt = 0,              // counter\n        gnt = 0;              // generation counter\n\n    /* private: randinit function, same as ISAAC reference implementation */\n    function randinit() {\n        var a, b, c, d, e, f, g, h;\n\n        /* private mixing function */\n        function mix () {\n            a ^= b <<  11; d = (d + a)|0; b = (b + c)|0;\n            b ^= c >>>  2; e = (e + b)|0; c = (c + d)|0;\n            c ^= d <<   8; f = (f + c)|0; d = (d + e)|0;\n            d ^= e >>> 16; g = (g + d)|0; e = (e + f)|0;\n            e ^= f <<  10; h = (h + e)|0; f = (f + g)|0;\n            f ^= g >>>  4; a = (a + f)|0; g = (g + h)|0;\n            g ^= h <<   8; b = (b + g)|0; h = (h + a)|0;\n            h ^= a >>>  9; c = (c + h)|0; a = (a + b)|0;\n        }\n\n        acc = brs = cnt = 0;\n\n        // the golden ratio\n        a = b = c = d = e = f = g = h = 0x9e3779b9;\n\n        // scramble it\n        for ( var i = 0; i < 4; i++ )\n            mix();\n\n        // mix it and combine with the internal state\n        for ( var i = 0; i < 256; i += 8 ) {\n            a = (a + r[i|0])|0; b = (b + r[i|1])|0;\n            c = (c + r[i|2])|0; d = (d + r[i|3])|0;\n            e = (e + r[i|4])|0; f = (f + r[i|5])|0;\n            g = (g + r[i|6])|0; h = (h + r[i|7])|0;\n            mix();\n            m.set([a, b, c, d, e, f, g, h], i);\n        }\n\n        // mix it again\n        for ( var i = 0; i < 256; i += 8 ) {\n            a = (a + m[i|0])|0; b = (b + m[i|1])|0;\n            c = (c + m[i|2])|0; d = (d + m[i|3])|0;\n            e = (e + m[i|4])|0; f = (f + m[i|5])|0;\n            g = (g + m[i|6])|0; h = (h + m[i|7])|0;\n            mix();\n            m.set([a, b, c, d, e, f, g, h], i);\n        }\n\n        // fill in the first set of results\n        prng(1), gnt = 256;\n    }\n\n    /* public: seeding function */\n    function seed ( s ) {\n        var i, j, k, n, l;\n\n        if ( !is_typed_array(s) ) {\n            if ( is_number(s) ) {\n                n = new FloatArray(1), n[0] = s;\n                s = new Uint8Array(n.buffer);\n            }\n            else if ( is_string(s) ) {\n                s = string_to_bytes(s);\n            }\n            else if ( is_buffer(s) ) {\n                s = new Uint8Array(s);\n            }\n            else {\n                throw new TypeError(\"bad seed type\");\n            }\n        }\n        else {\n            s = new Uint8Array(s.buffer);\n        }\n\n        // preprocess the seed\n        l = s.length;\n        for ( j = 0; j < l; j += 1024 )\n        {\n            // xor each chunk of 1024 bytes with r, for randinit() to mix in\n            for ( k = j, i = 0; ( i < 1024 ) && ( k < l ); k = j | (++i) ) {\n                r[i >> 2] ^= ( s[k] << ( (i & 3) << 3 ) );\n            }\n            randinit();\n        }\n    }\n\n    /* public: isaac generator, n = number of run */\n    function prng ( n ) {\n        n = n || 1;\n\n        var i, x, y;\n\n        while ( n-- ) {\n            cnt = (cnt + 1)|0;\n            brs = (brs + cnt)|0;\n\n            for ( i = 0; i < 256; i += 4 ) {\n                acc ^= acc << 13;\n                acc = m[(i + 128) & 0xff] + acc | 0; x = m[i|0];\n                m[i|0] = y = m[(x>>>2) & 0xff] + ( acc + brs | 0 ) | 0;\n                r[i|0] = brs = m[(y>>>10) & 0xff] + x | 0;\n\n                acc ^= acc >>> 6;\n                acc = m[(i + 129) & 0xff] + acc | 0; x = m[i|1];\n                m[i|1] = y = m[(x >>> 2) & 0xff] + ( acc + brs | 0 ) | 0;\n                r[i|1] = brs = m[(y >>> 10) & 0xff] + x | 0;\n\n                acc ^= acc << 2;\n                acc = m[(i + 130) & 0xff] + acc | 0; x = m[i|2];\n                m[i|2] = y = m[(x >>> 2) & 0xff] + ( acc + brs | 0 ) | 0;\n                r[i|2] = brs = m[(y >>> 10) & 0xff] + x | 0;\n\n                acc ^= acc >>> 16;\n                acc = m[(i + 131) & 0xff] + acc | 0; x = m[i|3];\n                m[i|3] = y = m[(x >>> 2) & 0xff] + (acc + brs | 0 ) | 0;\n                r[i|3] = brs = m[(y >>> 10) & 0xff] + x | 0;\n            }\n        }\n    }\n\n    /* public: return a random number */\n    function rand() {\n        if ( !gnt-- )\n            prng(1), gnt = 255;\n\n        return r[gnt];\n    }\n\n    /* return class object */\n    return {\n        'seed':  seed,\n        'prng':  prng,\n        'rand':  rand\n    };\n})();\n","/**\n * Integers are represented as little endian array of 32-bit limbs.\n * Limbs number is a power of 2 and a multiple of 8 (256 bits).\n * Negative values use two's complement representation.\n */\nexport function bigint_asm ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    var SP = 0;\n\n    var HEAP32 = new stdlib.Uint32Array(buffer);\n\n    var imul = stdlib.Math.imul;\n\n    /**\n     * Simple stack memory allocator\n     *\n     * Methods:\n     *  sreset\n     *  salloc\n     *  sfree\n     */\n\n    function sreset ( p ) {\n        p = p|0;\n        SP = p = (p + 31) & -32;\n        return p|0;\n    }\n\n    function salloc ( l ) {\n        l = l|0;\n        var p = 0; p = SP;\n        SP = p + ((l + 31) & -32)|0;\n        return p|0;\n    }\n\n    function sfree ( l ) {\n        l = l|0;\n        SP = SP - ((l + 31) & -32)|0;\n    }\n\n    /**\n     * Utility functions:\n     *  cp\n     *  z\n     */\n\n    function cp ( l, A, B ) {\n        l = l|0;\n        A = A|0;\n        B = B|0;\n\n        var i = 0;\n\n        if ( (A|0) > (B|0) ) {\n            for ( ; (i|0) < (l|0); i = (i+4)|0 ) {\n                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];\n            }\n        }\n        else {\n            for ( i = (l-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];\n            }\n        }\n    }\n\n    function z ( l, z, A ) {\n        l = l|0;\n        z = z|0;\n        A = A|0;\n\n        var i = 0;\n\n        for ( ; (i|0) < (l|0); i = (i+4)|0 ) {\n            HEAP32[(A+i)>>2] = z;\n        }\n    }\n\n    /**\n     * Negate the argument\n     *\n     * Perform two's complement transformation:\n     *\n     *  -A = ~A + 1\n     *\n     * @param A offset of the argment being negated, 32-byte aligned\n     * @param lA length of the argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function neg ( A, lA, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var a = 0, c = 0, t = 0, r = 0, i = 0;\n\n        if ( (lR|0) <= 0 )\n            lR = lA;\n\n        if ( (lR|0) < (lA|0) )\n            lA = lR;\n\n        c = 1;\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n            a = ~HEAP32[(A+i)>>2];\n            t = (a & 0xffff) + c|0;\n            r = (a >>> 16) + (t >>> 16)|0;\n            HEAP32[(R+i)>>2] = (r << 16) | (t & 0xffff);\n            c = r >>> 16;\n        }\n\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\n            HEAP32[(R+i)>>2] = (c-1)|0;\n        }\n\n        return c|0;\n    }\n\n    function cmp ( A, lA, B, lB ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n\n        var a = 0, b = 0, i = 0;\n\n        if ( (lA|0) > (lB|0) ) {\n            for ( i = (lA-4)|0; (i|0) >= (lB|0); i = (i-4)|0 ) {\n                if ( HEAP32[(A+i)>>2]|0 ) return 1;\n            }\n        }\n        else {\n            for ( i = (lB-4)|0; (i|0) >= (lA|0); i = (i-4)|0 ) {\n                if ( HEAP32[(B+i)>>2]|0 ) return -1;\n            }\n        }\n\n        for ( ; (i|0) >= 0; i = (i-4)|0 ) {\n            a = HEAP32[(A+i)>>2]|0, b = HEAP32[(B+i)>>2]|0;\n            if ( (a>>>0) < (b>>>0) ) return -1;\n            if ( (a>>>0) > (b>>>0) ) return 1;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Test the argument\n     *\n     * Same as `cmp` with zero.\n     */\n    function tst ( A, lA ) {\n        A  =  A|0;\n        lA = lA|0;\n\n        var i = 0;\n\n        for ( i = (lA-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n            if ( HEAP32[(A+i)>>2]|0 ) return (i+4)|0;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Conventional addition\n     *\n     * @param A offset of the first argument, 32-byte aligned\n     * @param lA length of the first argument, multiple of 32\n     *\n     * @param B offset of the second argument, 32-bit aligned\n     * @param lB length of the second argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function add ( A, lA, B, lB, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;\n\n        if ( (lA|0) < (lB|0) ) {\n            t = A, A = B, B = t;\n            t = lA, lA = lB, lB = t;\n        }\n\n        if ( (lR|0) <= 0 )\n            lR = lA+4|0;\n\n        if ( (lR|0) < (lB|0) )\n            lA = lB = lR;\n\n        for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\n            a = HEAP32[(A+i)>>2]|0;\n            b = HEAP32[(B+i)>>2]|0;\n            t = ( (a & 0xffff) + (b & 0xffff)|0 ) + c|0;\n            r = ( (a >>> 16) + (b >>> 16)|0 ) + (t >>> 16)|0;\n            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n            c = r >>> 16;\n        }\n\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n            a = HEAP32[(A+i)>>2]|0;\n            t = (a & 0xffff) + c|0;\n            r = (a >>> 16) + (t >>> 16)|0;\n            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n            c = r >>> 16;\n        }\n\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\n            HEAP32[(R+i)>>2] = c|0;\n            c = 0;\n        }\n\n        return c|0;\n    }\n\n   /**\n     * Conventional subtraction\n     *\n     * @param A offset of the first argument, 32-byte aligned\n     * @param lA length of the first argument, multiple of 32\n     *\n     * @param B offset of the second argument, 32-bit aligned\n     * @param lB length of the second argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function sub ( A, lA, B, lB, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;\n\n        if ( (lR|0) <= 0 )\n            lR = (lA|0) > (lB|0) ? lA+4|0 : lB+4|0;\n\n        if ( (lR|0) < (lA|0) )\n            lA = lR;\n\n        if ( (lR|0) < (lB|0) )\n            lB = lR;\n\n        if ( (lA|0) < (lB|0) ) {\n            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n                a = HEAP32[(A+i)>>2]|0;\n                b = HEAP32[(B+i)>>2]|0;\n                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;\n                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n\n            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\n                b = HEAP32[(B+i)>>2]|0;\n                t = c - (b & 0xffff)|0;\n                r = (t >> 16) - (b >>> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n        }\n        else {\n            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\n                a = HEAP32[(A+i)>>2]|0;\n                b = HEAP32[(B+i)>>2]|0;\n                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;\n                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n\n            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n                a = HEAP32[(A+i)>>2]|0;\n                t = (a & 0xffff) + c|0;\n                r = (a >>> 16) + (t >> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n        }\n\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\n            HEAP32[(R+i)>>2] = c|0;\n        }\n\n        return c|0;\n    }\n\n    /**\n     * Conventional multiplication\n     *\n     * TODO implement Karatsuba algorithm for large multiplicands\n     *\n     * @param A offset of the first argument, 32-byte aligned\n     * @param lA length of the first argument, multiple of 32\n     *\n     * @param B offset of the second argument, 32-byte aligned\n     * @param lB length of the second argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function mul ( A, lA, B, lB, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,\n            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,\n            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,\n            u = 0, v = 0, w = 0, m = 0,\n            i = 0, Ai = 0, j = 0, Bj = 0, Rk = 0;\n\n        if ( (lA|0) > (lB|0) ) {\n            u = A, v = lA;\n            A = B, lA = lB;\n            B = u, lB = v;\n        }\n\n        m = (lA+lB)|0;\n        if ( ( (lR|0) > (m|0) ) | ( (lR|0) <= 0 ) )\n            lR = m;\n\n        if ( (lR|0) < (lA|0) )\n            lA = lR;\n\n        if ( (lR|0) < (lB|0) )\n            lB = lR;\n\n        for ( ; (i|0) < (lA|0); i = (i+32)|0 ) {\n            Ai = (A+i)|0;\n\n            ah0 = HEAP32[(Ai|0)>>2]|0,\n            ah1 = HEAP32[(Ai|4)>>2]|0,\n            ah2 = HEAP32[(Ai|8)>>2]|0,\n            ah3 = HEAP32[(Ai|12)>>2]|0,\n            ah4 = HEAP32[(Ai|16)>>2]|0,\n            ah5 = HEAP32[(Ai|20)>>2]|0,\n            ah6 = HEAP32[(Ai|24)>>2]|0,\n            ah7 = HEAP32[(Ai|28)>>2]|0,\n            al0 = ah0 & 0xffff,\n            al1 = ah1 & 0xffff,\n            al2 = ah2 & 0xffff,\n            al3 = ah3 & 0xffff,\n            al4 = ah4 & 0xffff,\n            al5 = ah5 & 0xffff,\n            al6 = ah6 & 0xffff,\n            al7 = ah7 & 0xffff,\n            ah0 = ah0 >>> 16,\n            ah1 = ah1 >>> 16,\n            ah2 = ah2 >>> 16,\n            ah3 = ah3 >>> 16,\n            ah4 = ah4 >>> 16,\n            ah5 = ah5 >>> 16,\n            ah6 = ah6 >>> 16,\n            ah7 = ah7 >>> 16;\n\n            r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = 0;\n\n            for ( j = 0; (j|0) < (lB|0); j = (j+32)|0 ) {\n                Bj = (B+j)|0;\n                Rk = (R+(i+j|0))|0;\n\n                bh0 = HEAP32[(Bj|0)>>2]|0,\n                bh1 = HEAP32[(Bj|4)>>2]|0,\n                bh2 = HEAP32[(Bj|8)>>2]|0,\n                bh3 = HEAP32[(Bj|12)>>2]|0,\n                bh4 = HEAP32[(Bj|16)>>2]|0,\n                bh5 = HEAP32[(Bj|20)>>2]|0,\n                bh6 = HEAP32[(Bj|24)>>2]|0,\n                bh7 = HEAP32[(Bj|28)>>2]|0,\n                bl0 = bh0 & 0xffff,\n                bl1 = bh1 & 0xffff,\n                bl2 = bh2 & 0xffff,\n                bl3 = bh3 & 0xffff,\n                bl4 = bh4 & 0xffff,\n                bl5 = bh5 & 0xffff,\n                bl6 = bh6 & 0xffff,\n                bl7 = bh7 & 0xffff,\n                bh0 = bh0 >>> 16,\n                bh1 = bh1 >>> 16,\n                bh2 = bh2 >>> 16,\n                bh3 = bh3 >>> 16,\n                bh4 = bh4 >>> 16,\n                bh5 = bh5 >>> 16,\n                bh6 = bh6 >>> 16,\n                bh7 = bh7 >>> 16;\n\n                r0 = HEAP32[(Rk|0)>>2]|0,\n                r1 = HEAP32[(Rk|4)>>2]|0,\n                r2 = HEAP32[(Rk|8)>>2]|0,\n                r3 = HEAP32[(Rk|12)>>2]|0,\n                r4 = HEAP32[(Rk|16)>>2]|0,\n                r5 = HEAP32[(Rk|20)>>2]|0,\n                r6 = HEAP32[(Rk|24)>>2]|0,\n                r7 = HEAP32[(Rk|28)>>2]|0;\n\n                u = ((imul(al0, bl0)|0) + (r8 & 0xffff)|0) + (r0 & 0xffff)|0;\n                v = ((imul(ah0, bl0)|0) + (r8 >>> 16)|0) + (r0 >>> 16)|0;\n                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r0 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl1)|0) + (m & 0xffff)|0) + (r1 & 0xffff)|0;\n                v = ((imul(ah0, bl1)|0) + (m >>> 16)|0) + (r1 >>> 16)|0;\n                w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r1 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl2)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;\n                v = ((imul(ah0, bl2)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;\n                w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r2 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl3)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah0, bl3)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl4)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah0, bl4)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl5)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah0, bl5)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl6)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah0, bl6)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl7)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah0, bl7)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                r8 = m;\n\n                u = ((imul(al1, bl0)|0) + (r9 & 0xffff)|0) + (r1 & 0xffff)|0;\n                v = ((imul(ah1, bl0)|0) + (r9 >>> 16)|0) + (r1 >>> 16)|0;\n                w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r1 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl1)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;\n                v = ((imul(ah1, bl1)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;\n                w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r2 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl2)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah1, bl2)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl3)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah1, bl3)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl4)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah1, bl4)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl5)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah1, bl5)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl6)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah1, bl6)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl7)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah1, bl7)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                r9 = m;\n\n                u = ((imul(al2, bl0)|0) + (r10 & 0xffff)|0) + (r2 & 0xffff)|0;\n                v = ((imul(ah2, bl0)|0) + (r10 >>> 16)|0) + (r2 >>> 16)|0;\n                w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r2 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl1)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah2, bl1)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl2)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah2, bl2)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl3)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah2, bl3)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl4)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah2, bl4)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl5)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah2, bl5)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl6)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah2, bl6)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl7)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah2, bl7)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                r10 = m;\n\n                u = ((imul(al3, bl0)|0) + (r11 & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah3, bl0)|0) + (r11 >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl1)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah3, bl1)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl2)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah3, bl2)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl3)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah3, bl3)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl4)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah3, bl4)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl5)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah3, bl5)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl6)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah3, bl6)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl7)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah3, bl7)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                r11 = m;\n\n                u = ((imul(al4, bl0)|0) + (r12 & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah4, bl0)|0) + (r12 >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl1)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah4, bl1)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl2)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah4, bl2)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl3)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah4, bl3)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl4)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah4, bl4)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl5)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah4, bl5)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl6)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah4, bl6)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl7)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah4, bl7)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                r12 = m;\n\n                u = ((imul(al5, bl0)|0) + (r13 & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah5, bl0)|0) + (r13 >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl1)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah5, bl1)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl2)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah5, bl2)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl3)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah5, bl3)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl4)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah5, bl4)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl5)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah5, bl5)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl6)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah5, bl6)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl7)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\n                v = ((imul(ah5, bl7)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\n                w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r12 = (w << 16) | (u & 0xffff);\n\n                r13 = m;\n\n                u = ((imul(al6, bl0)|0) + (r14 & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah6, bl0)|0) + (r14 >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl1)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah6, bl1)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl2)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah6, bl2)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl3)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah6, bl3)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl4)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah6, bl4)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl5)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah6, bl5)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl6)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\n                v = ((imul(ah6, bl6)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\n                w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r12 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl7)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;\n                v = ((imul(ah6, bl7)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;\n                w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r13 = (w << 16) | (u & 0xffff);\n\n                r14 = m;\n\n                u = ((imul(al7, bl0)|0) + (r15 & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah7, bl0)|0) + (r15 >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl1)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah7, bl1)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl2)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah7, bl2)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl3)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah7, bl3)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl4)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah7, bl4)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl5)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\n                v = ((imul(ah7, bl5)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\n                w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r12 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl6)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;\n                v = ((imul(ah7, bl6)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;\n                w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r13 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl7)|0) + (m & 0xffff)|0) + (r14 & 0xffff)|0;\n                v = ((imul(ah7, bl7)|0) + (m >>> 16)|0) + (r14 >>> 16)|0;\n                w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r14 = (w << 16) | (u & 0xffff);\n\n                r15 = m;\n\n                HEAP32[(Rk|0)>>2] = r0,\n                HEAP32[(Rk|4)>>2] = r1,\n                HEAP32[(Rk|8)>>2] = r2,\n                HEAP32[(Rk|12)>>2] = r3,\n                HEAP32[(Rk|16)>>2] = r4,\n                HEAP32[(Rk|20)>>2] = r5,\n                HEAP32[(Rk|24)>>2] = r6,\n                HEAP32[(Rk|28)>>2] = r7;\n            }\n\n            Rk = (R+(i+j|0))|0;\n            HEAP32[(Rk|0)>>2] = r8,\n            HEAP32[(Rk|4)>>2] = r9,\n            HEAP32[(Rk|8)>>2] = r10,\n            HEAP32[(Rk|12)>>2] = r11,\n            HEAP32[(Rk|16)>>2] = r12,\n            HEAP32[(Rk|20)>>2] = r13,\n            HEAP32[(Rk|24)>>2] = r14,\n            HEAP32[(Rk|28)>>2] = r15;\n        }\n/*\n        for ( i = lA & -32; (i|0) < (lA|0); i = (i+4)|0 ) {\n            Ai = (A+i)|0;\n\n            ah0 = HEAP32[Ai>>2]|0,\n            al0 = ah0 & 0xffff,\n            ah0 = ah0 >>> 16;\n\n            r1 = 0;\n\n            for ( j = 0; (j|0) < (lB|0); j = (j+4)|0 ) {\n                Bj = (B+j)|0;\n                Rk = (R+(i+j|0))|0;\n\n                bh0 = HEAP32[Bj>>2]|0,\n                bl0 = bh0 & 0xffff,\n                bh0 = bh0 >>> 16;\n\n                r0 = HEAP32[Rk>>2]|0;\n\n                u = ((imul(al0, bl0)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;\n                v = ((imul(ah0, bl0)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;\n                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r0 = (w << 16) | (u & 0xffff);\n\n                r1 = m;\n\n                HEAP32[Rk>>2] = r0;\n            }\n\n            Rk = (R+(i+j|0))|0;\n            HEAP32[Rk>>2] = r1;\n        }\n*/\n    }\n\n    /**\n     * Fast squaring\n     *\n     * Exploits the fact:\n     *\n     *  X² = ( X0 + X1*B )² = X0² + 2*X0*X1*B + X1²*B²,\n     *\n     * where B is a power of 2, so:\n     *\n     *  2*X0*X1*B = (X0*X1 << 1)*B\n     *\n     * @param A offset of the argument being squared, 32-byte aligned\n     * @param lA length of the argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     */\n    function sqr ( A, lA, R ) {\n        A  =  A|0;\n        lA = lA|0;\n        R  =  R|0;\n\n        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,\n            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,\n            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,\n            u = 0, v = 0, w = 0, c = 0, h = 0, m = 0, r = 0,\n            d = 0, dd = 0, p = 0, i = 0, j = 0, k = 0, Ai = 0, Aj = 0, Rk = 0;\n\n        // prepare for iterations\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n            Rk = R+(i<<1)|0;\n            ah0 = HEAP32[(A+i)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;\n            u = imul(al0,al0)|0;\n            v = (imul(al0,ah0)|0) + (u >>> 17)|0;\n            w = (imul(ah0,ah0)|0) + (v >>> 15)|0;\n            HEAP32[(Rk)>>2] = (v << 17) | (u & 0x1ffff);\n            HEAP32[(Rk|4)>>2] = w;\n        }\n\n        // unrolled 1st iteration\n        for ( p = 0; (p|0) < (lA|0); p = (p+8)|0 ) {\n            Ai = A+p|0, Rk = R+(p<<1)|0;\n\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;\n\n            bh0 = HEAP32[(Ai|4)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16;\n\n            u = imul(al0,bl0)|0;\n            v = (imul(al0,bh0)|0) + (u >>> 16)|0;\n            w = (imul(ah0,bl0)|0) + (v & 0xffff)|0;\n            m = ((imul(ah0,bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n\n            r = HEAP32[(Rk|4)>>2]|0;\n            u = (r & 0xffff) + ((u & 0xffff) << 1)|0;\n            w = ((r >>> 16) + ((w & 0xffff) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|4)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|8)>>2]|0;\n            u = ((r & 0xffff) + ((m & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((m >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            if ( c ) {\n                r = HEAP32[(Rk|12)>>2]|0;\n                u = (r & 0xffff) + c|0;\n                w = (r >>> 16) + (u >>> 16)|0;\n                HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);\n            }\n        }\n\n        // unrolled 2nd iteration\n        for ( p = 0; (p|0) < (lA|0); p = (p+16)|0 ) {\n            Ai = A+p|0, Rk = R+(p<<1)|0;\n\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\n            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16;\n\n            bh0 = HEAP32[(Ai|8)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\n            bh1 = HEAP32[(Ai|12)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16;\n\n            u = imul(al0, bl0)|0;\n            v = imul(ah0, bl0)|0;\n            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r0 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            r2 = m;\n\n            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;\n            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;\n            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            r3 = m;\n\n            r = HEAP32[(Rk|8)>>2]|0;\n            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;\n            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|12)>>2]|0;\n            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;\n            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|16)>>2]|0;\n            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|20)>>2]|0;\n            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            for ( k = 24; !!c & ( (k|0) < 32 ); k = (k+4)|0 ) {\n                r = HEAP32[(Rk|k)>>2]|0;\n                u = (r & 0xffff) + c|0;\n                w = (r >>> 16) + (u >>> 16)|0;\n                HEAP32[(Rk|k)>>2] = (w << 16) | (u & 0xffff);\n                c = w >>> 16;\n            }\n        }\n\n        // unrolled 3rd iteration\n        for ( p = 0; (p|0) < (lA|0); p = (p+32)|0 ) {\n            Ai = A+p|0, Rk = R+(p<<1)|0;\n\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\n            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,\n            ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,\n            ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16;\n\n            bh0 = HEAP32[(Ai|16)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\n            bh1 = HEAP32[(Ai|20)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,\n            bh2 = HEAP32[(Ai|24)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,\n            bh3 = HEAP32[(Ai|28)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16;\n\n            u = imul(al0, bl0)|0;\n            v = imul(ah0, bl0)|0;\n            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r0 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl2)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl2)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl3)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl3)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            r4 = m;\n\n            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;\n            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;\n            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r4 = (w << 16) | (u & 0xffff);\n\n            r5 = m;\n\n            u = (imul(al2, bl0)|0) + (r2 & 0xffff)|0;\n            v = (imul(ah2, bl0)|0) + (r2 >>> 16)|0;\n            w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r4 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r5 = (w << 16) | (u & 0xffff);\n\n            r6 = m;\n\n            u = (imul(al3, bl0)|0) + (r3 & 0xffff)|0;\n            v = (imul(ah3, bl0)|0) + (r3 >>> 16)|0;\n            w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r4 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r5 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r6 = (w << 16) | (u & 0xffff);\n\n            r7 = m;\n\n            r = HEAP32[(Rk|16)>>2]|0;\n            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;\n            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|20)>>2]|0;\n            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;\n            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|24)>>2]|0;\n            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|24)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|28)>>2]|0;\n            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|28)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+32)>>2]|0;\n            u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+32)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+36)>>2]|0;\n            u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+36)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+40)>>2]|0;\n            u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+40)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+44)>>2]|0;\n            u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+44)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            for ( k = 48; !!c & ( (k|0) < 64 ); k = (k+4)|0 ) {\n                r = HEAP32[(Rk+k)>>2]|0;\n                u = (r & 0xffff) + c|0;\n                w = (r >>> 16) + (u >>> 16)|0;\n                HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                c = w >>> 16;\n            }\n        }\n\n        // perform iterations\n        for ( d = 32; (d|0) < (lA|0); d = d << 1 ) { // depth loop\n            dd = d << 1;\n\n            for ( p = 0; (p|0) < (lA|0); p = (p+dd)|0 ) { // part loop\n                Rk = R+(p<<1)|0;\n\n                h = 0;\n                for ( i = 0; (i|0) < (d|0); i = (i+32)|0 ) { // multiply-and-add loop\n                    Ai = (A+p|0)+i|0;\n\n                    ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\n                    ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,\n                    ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,\n                    ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16,\n                    ah4 = HEAP32[(Ai|16)>>2]|0, al4 = ah4 & 0xffff, ah4 = ah4 >>> 16,\n                    ah5 = HEAP32[(Ai|20)>>2]|0, al5 = ah5 & 0xffff, ah5 = ah5 >>> 16,\n                    ah6 = HEAP32[(Ai|24)>>2]|0, al6 = ah6 & 0xffff, ah6 = ah6 >>> 16,\n                    ah7 = HEAP32[(Ai|28)>>2]|0, al7 = ah7 & 0xffff, ah7 = ah7 >>> 16;\n\n                    r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = c = 0;\n\n                    for ( j = 0; (j|0) < (d|0); j = (j+32)|0 ) {\n                        Aj = ((A+p|0)+d|0)+j|0;\n\n                        bh0 = HEAP32[(Aj)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\n                        bh1 = HEAP32[(Aj|4)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,\n                        bh2 = HEAP32[(Aj|8)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,\n                        bh3 = HEAP32[(Aj|12)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16,\n                        bh4 = HEAP32[(Aj|16)>>2]|0, bl4 = bh4 & 0xffff, bh4 = bh4 >>> 16,\n                        bh5 = HEAP32[(Aj|20)>>2]|0, bl5 = bh5 & 0xffff, bh5 = bh5 >>> 16,\n                        bh6 = HEAP32[(Aj|24)>>2]|0, bl6 = bh6 & 0xffff, bh6 = bh6 >>> 16,\n                        bh7 = HEAP32[(Aj|28)>>2]|0, bl7 = bh7 & 0xffff, bh7 = bh7 >>> 16;\n\n                        r0 = r1 = r2 = r3 = r4 = r5 = r6 = r7 = 0;\n\n                        u = ((imul(al0, bl0)|0) + (r0 & 0xffff)|0) + (r8 & 0xffff)|0;\n                        v = ((imul(ah0, bl0)|0) + (r0 >>> 16)|0) + (r8 >>> 16)|0;\n                        w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r0 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl1)|0) + (r1 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl1)|0) + (r1 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r1 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl2)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl2)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r2 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl3)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl3)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl4)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl4)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl5)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl5)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl6)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl6)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl7)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl7)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        r8 = m;\n\n                        u = ((imul(al1, bl0)|0) + (r1 & 0xffff)|0) + (r9 & 0xffff)|0;\n                        v = ((imul(ah1, bl0)|0) + (r1 >>> 16)|0) + (r9 >>> 16)|0;\n                        w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r1 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r2 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl4)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl4)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl5)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl5)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl6)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl6)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl7)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl7)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        r9 = m;\n\n                        u = ((imul(al2, bl0)|0) + (r2 & 0xffff)|0) + (r10 & 0xffff)|0;\n                        v = ((imul(ah2, bl0)|0) + (r2 >>> 16)|0) + (r10 >>> 16)|0;\n                        w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r2 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl4)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl4)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl5)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl5)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl6)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl6)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl7)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl7)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        r10 = m;\n\n                        u = ((imul(al3, bl0)|0) + (r3 & 0xffff)|0) + (r11 & 0xffff)|0;\n                        v = ((imul(ah3, bl0)|0) + (r3 >>> 16)|0) + (r11 >>> 16)|0;\n                        w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl4)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl4)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl5)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl5)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl6)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl6)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl7)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl7)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        r11 = m;\n\n                        u = ((imul(al4, bl0)|0) + (r4 & 0xffff)|0) + (r12 & 0xffff)|0;\n                        v = ((imul(ah4, bl0)|0) + (r4 >>> 16)|0) + (r12 >>> 16)|0;\n                        w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl1)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl1)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl2)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl2)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl3)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl3)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl4)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl4)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl5)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl5)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl6)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl6)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl7)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl7)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        r12 = m;\n\n                        u = ((imul(al5, bl0)|0) + (r5 & 0xffff)|0) + (r13 & 0xffff)|0;\n                        v = ((imul(ah5, bl0)|0) + (r5 >>> 16)|0) + (r13 >>> 16)|0;\n                        w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl1)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl1)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl2)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl2)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl3)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl3)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl4)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl4)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl5)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl5)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl6)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl6)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl7)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl7)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r12 = (w << 16) | (u & 0xffff);\n\n                        r13 = m;\n\n                        u = ((imul(al6, bl0)|0) + (r6 & 0xffff)|0) + (r14 & 0xffff)|0;\n                        v = ((imul(ah6, bl0)|0) + (r6 >>> 16)|0) + (r14 >>> 16)|0;\n                        w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl1)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl1)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl2)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl2)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl3)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl3)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl4)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl4)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl5)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl5)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl6)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl6)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r12 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl7)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl7)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r13 = (w << 16) | (u & 0xffff);\n\n                        r14 = m;\n\n                        u = ((imul(al7, bl0)|0) + (r7 & 0xffff)|0) + (r15 & 0xffff)|0;\n                        v = ((imul(ah7, bl0)|0) + (r7 >>> 16)|0) + (r15 >>> 16)|0;\n                        w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl1)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl1)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl2)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl2)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl3)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl3)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl4)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl4)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl5)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl5)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r12 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl6)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl6)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r13 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl7)|0) + (r14 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl7)|0) + (r14 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r14 = (w << 16) | (u & 0xffff);\n\n                        r15 = m;\n\n                        k = d+(i+j|0)|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r0 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n                    }\n\n                    k = d+(i+j|0)|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = (((r & 0xffff) + ((r8 & 0xffff) << 1)|0) + c|0) + h|0;\n                    w = ((r >>> 16) + ((r8 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r9 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r9 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r10 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r10 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r11 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r11 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r12 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r12 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r13 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r13 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r14 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r14 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r15 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r15 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    h = w >>> 16;\n                }\n\n                for ( k = k+4|0; !!h & ( (k|0) < (dd<<1) ); k = (k+4)|0 ) { // carry propagation loop\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = (r & 0xffff) + h|0;\n                    w = (r >>> 16) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    h = w >>> 16;\n                }\n            }\n        }\n    }\n\n    /**\n     * Conventional division\n     *\n     * @param A offset of the numerator, 32-byte aligned\n     * @param lA length of the numerator, multiple of 32\n     *\n     * @param B offset of the divisor, 32-byte aligned\n     * @param lB length of the divisor, multiple of 32\n     *\n     * @param R offset where to place the remainder to, 32-byte aligned\n     *\n     * @param Q offser where to place the quotient to, 32-byte aligned\n     */\n\n    function div ( N, lN, D, lD, Q ) {\n        N  =  N|0;\n        lN = lN|0\n        D  =  D|0;\n        lD = lD|0\n        Q  =  Q|0;\n\n        var n = 0, d = 0, e = 0,\n            u1 = 0, u0 = 0,\n            v0 = 0, vh = 0, vl = 0,\n            qh = 0, ql = 0, rh = 0, rl = 0,\n            t1 = 0, t2 = 0, m = 0, c = 0,\n            i = 0, j = 0, k = 0;\n\n        // number of significant limbs in `N` (multiplied by 4)\n        for ( i = (lN-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {\n            n = HEAP32[(N+i)>>2]|0;\n            if ( n ) {\n                lN = i;\n                break;\n            }\n        }\n\n        // number of significant limbs in `D` (multiplied by 4)\n        for ( i = (lD-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {\n            d = HEAP32[(D+i)>>2]|0;\n            if ( d ) {\n                lD = i;\n                break;\n            }\n        }\n\n        // `D` is zero? WTF?!\n\n        // calculate `e` — the power of 2 of the normalization factor\n        while ( (d & 0x80000000) == 0 ) {\n            d = d << 1;\n            e = e + 1|0;\n        }\n\n        // normalize `N` in place\n        u0 = HEAP32[(N+lN)>>2]|0;\n        if ( e ) {\n            u1 = u0>>>(32-e|0);\n            for ( i = (lN-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n                n = HEAP32[(N+i)>>2]|0;\n                HEAP32[(N+i+4)>>2] = (u0 << e) | ( e ? n >>> (32-e|0) : 0 );\n                u0 = n;\n            }\n            HEAP32[N>>2] = u0 << e;\n        }\n\n        // normalize `D` in place\n        if ( e ) {\n            v0 = HEAP32[(D+lD)>>2]|0;\n            for ( i = (lD-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n                d = HEAP32[(D+i)>>2]|0;\n                HEAP32[(D+i+4)>>2] = (v0 << e) | ( d >>> (32-e|0) );\n                v0 = d;\n            }\n            HEAP32[D>>2] = v0 << e;\n        }\n\n        // divisor parts won't change\n        v0 = HEAP32[(D+lD)>>2]|0;\n        vh = v0 >>> 16, vl = v0 & 0xffff;\n\n        // perform division\n        for ( i = lN; (i|0) >= (lD|0); i = (i-4)|0 ) {\n            j = (i-lD)|0;\n\n            // estimate high part of the quotient\n            u0 = HEAP32[(N+i)>>2]|0;\n            qh = ( (u1>>>0) / (vh>>>0) )|0, rh = ( (u1>>>0) % (vh>>>0) )|0, t1 = imul(qh, vl)|0;\n            while ( ( (qh|0) == 0x10000 ) | ( (t1>>>0) > (((rh << 16)|(u0 >>> 16))>>>0) ) ) {\n                qh = (qh-1)|0, rh = (rh+vh)|0, t1 = (t1-vl)|0;\n                if ( (rh|0) >= 0x10000 ) break;\n            }\n\n            // bulk multiply-and-subtract\n            // m - multiplication carry, c - subtraction carry\n            m = 0, c = 0;\n            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                d = HEAP32[(D+k)>>2]|0;\n                t1 = (imul(qh, d & 0xffff)|0) + (m >>> 16)|0;\n                t2 = (imul(qh, d >>> 16)|0) + (t1 >>> 16)|0;\n                d = (m & 0xffff) | (t1 << 16);\n                m = t2;\n                n = HEAP32[(N+j+k)>>2]|0;\n                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;\n                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;\n                HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\n                c = t2 >> 16;\n            }\n            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;\n            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;\n            u1 = (t2 << 16) | (t1 & 0xffff);\n            c = t2 >> 16;\n\n            // add `D` back if got carry-out\n            if ( c ) {\n                qh = (qh-1)|0;\n                c = 0;\n                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                    d = HEAP32[(D+k)>>2]|0;\n                    n = HEAP32[(N+j+k)>>2]|0;\n                    t1 = (n & 0xffff) + c|0;\n                    t2 = (n >>> 16) + d + (t1 >>> 16)|0;\n                    HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\n                    c = t2 >>> 16;\n                }\n                u1 = (u1+c)|0;\n            }\n\n            // estimate low part of the quotient\n            u0 = HEAP32[(N+i)>>2]|0;\n            n = (u1 << 16) | (u0 >>> 16);\n            ql = ( (n>>>0) / (vh>>>0) )|0, rl = ( (n>>>0) % (vh>>>0) )|0, t1 = imul(ql, vl)|0;\n            while ( ( (ql|0) == 0x10000 ) | ( (t1>>>0) > (((rl << 16)|(u0 & 0xffff))>>>0) ) ) {\n                ql = (ql-1)|0, rl = (rl+vh)|0, t1 = (t1-vl)|0;\n                if ( (rl|0) >= 0x10000 ) break;\n            }\n\n            // bulk multiply-and-subtract\n            // m - multiplication carry, c - subtraction carry\n            m = 0, c = 0;\n            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                d = HEAP32[(D+k)>>2]|0;\n                t1 = (imul(ql, d & 0xffff)|0) + (m & 0xffff)|0;\n                t2 = ((imul(ql, d >>> 16)|0) + (t1 >>> 16)|0) + (m >>> 16)|0;\n                d = (t1 & 0xffff) | (t2 << 16);\n                m = t2 >>> 16;\n                n = HEAP32[(N+j+k)>>2]|0;\n                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;\n                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;\n                c = t2 >> 16;\n                HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\n            }\n            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;\n            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;\n            c = t2 >> 16;\n\n            // add `D` back if got carry-out\n            if ( c ) {\n                ql = (ql-1)|0;\n                c = 0;\n                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                    d = HEAP32[(D+k)>>2]|0;\n                    n = HEAP32[(N+j+k)>>2]|0;\n                    t1 = ((n & 0xffff) + (d & 0xffff)|0) + c|0;\n                    t2 = ((n >>> 16) + (d >>> 16)|0) + (t1 >>> 16)|0;\n                    c = t2 >>> 16;\n                    HEAP32[(N+j+k)>>2] = (t1 & 0xffff) | (t2 << 16);\n                }\n            }\n\n            // got quotient limb\n            HEAP32[(Q+j)>>2] = (qh << 16) | ql;\n\n            u1 = HEAP32[(N+i)>>2]|0;\n        }\n\n        if ( e ) {\n            // TODO denormalize `D` in place\n\n            // denormalize `N` in place\n            u0 = HEAP32[N>>2]|0;\n            for ( i = 4; (i|0) <= (lD|0); i = (i+4)|0 ) {\n                n = HEAP32[(N+i)>>2]|0;\n                HEAP32[(N+i-4)>>2] = ( n << (32-e|0) ) | (u0 >>> e);\n                u0 = n;\n            }\n            HEAP32[(N+lD)>>2] = u0 >>> e;\n        }\n    }\n\n    /**\n     * Montgomery modular reduction\n     *\n     * Definition:\n     *\n     *  MREDC(A) = A × X (mod N),\n     *  M × X = N × Y + 1,\n     *\n     * where M = 2^(32*m) such that N < M and A < N×M\n     *\n     * Numbers `X` and `Y` can be calculated using Extended Euclidean Algorithm.\n     */\n    function mredc ( A, lA, N, lN, y, R ) {\n        A  =  A|0;\n        lA = lA|0;\n        N  =  N|0;\n        lN = lN|0;\n        y  =  y|0;\n        R  =  R|0;\n\n        var T = 0,\n            c = 0, uh = 0, ul = 0, vl = 0, vh = 0, w0 = 0, w1 = 0, w2 = 0, r0 = 0, r1 = 0,\n            i = 0, j = 0, k = 0;\n\n        T = salloc(lN<<1)|0;\n        z(lN<<1, 0, T);\n\n        cp( lA, A, T );\n\n        // HAC 14.32\n        for ( i = 0; (i|0) < (lN|0); i = (i+4)|0 ) {\n            uh = HEAP32[(T+i)>>2]|0, ul = uh & 0xffff, uh = uh >>> 16;\n            vh = y >>> 16, vl = y & 0xffff;\n            w0 = imul(ul,vl)|0, w1 = ( (imul(ul,vh)|0) + (imul(uh,vl)|0) | 0 ) + (w0 >>> 16) | 0;\n            ul = w0 & 0xffff, uh = w1 & 0xffff;\n            r1 = 0;\n            for ( j = 0; (j|0) < (lN|0); j = (j+4)|0 ) {\n                k = (i+j)|0;\n                vh = HEAP32[(N+j)>>2]|0, vl = vh & 0xffff, vh = vh >>> 16;\n                r0 = HEAP32[(T+k)>>2]|0;\n                w0 = ((imul(ul, vl)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;\n                w1 = ((imul(ul, vh)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;\n                w2 = ((imul(uh, vl)|0) + (w1 & 0xffff)|0) + (w0 >>> 16)|0;\n                r1 = ((imul(uh, vh)|0) + (w2 >>> 16)|0) + (w1 >>> 16)|0;\n                r0 = (w2 << 16) | (w0 & 0xffff);\n                HEAP32[(T+k)>>2] = r0;\n            }\n            k = (i+j)|0;\n            r0 = HEAP32[(T+k)>>2]|0;\n            w0 = ((r0 & 0xffff) + (r1 & 0xffff)|0) + c|0;\n            w1 = ((r0 >>> 16) + (r1 >>> 16)|0) + (w0 >>> 16)|0;\n            HEAP32[(T+k)>>2] = (w1 << 16) | (w0 & 0xffff);\n            c = w1 >>> 16;\n        }\n\n        cp( lN, (T+lN)|0, R );\n\n        sfree(lN<<1);\n\n        if ( c | ( (cmp( N, lN, R, lN )|0) <= 0 ) ) {\n            sub( R, lN, N, lN, R, lN )|0;\n        }\n    }\n\n    return {\n        sreset: sreset,\n        salloc: salloc,\n        sfree:  sfree,\n        z: z,\n        tst: tst,\n        neg: neg,\n        cmp: cmp,\n        add: add,\n        sub: sub,\n        mul: mul,\n        sqr: sqr,\n        div: div,\n        mredc: mredc\n    };\n}\n","import {bigint_asm} from './bigint.asm';\nimport {is_buffer, is_bytes, is_number, is_string, string_to_bytes} from '../utils';\nimport {IllegalArgumentError} from '../errors';\n\nexport function is_big_number ( a ) {\n    return ( a instanceof BigNumber_constructor );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nexport var _bigint_stdlib = { Uint32Array: Uint32Array, Math: Math };\nexport var _bigint_heap = new Uint32Array(0x100000);\nexport var _bigint_asm;\n\nfunction _half_imul ( a, b ) {\n    return a * b | 0;\n}\n\nif ( _bigint_stdlib.Math.imul === undefined ) {\n    _bigint_stdlib.Math.imul = _half_imul;\n    _bigint_asm = bigint_asm( _bigint_stdlib, null, _bigint_heap.buffer );\n    delete _bigint_stdlib.Math.imul;\n}\nelse {\n    _bigint_asm = bigint_asm( _bigint_stdlib, null, _bigint_heap.buffer );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nvar _BigNumber_ZERO_limbs = new Uint32Array(0);\n\nexport function BigNumber_constructor (num ) {\n    var limbs = _BigNumber_ZERO_limbs,\n        bitlen = 0,\n        sign = 0;\n\n    if ( is_string(num) )\n        num = string_to_bytes(num);\n\n    if ( is_buffer(num) )\n        num = new Uint8Array(num);\n\n    if ( num === undefined ) {\n        // do nothing\n    }\n    else if ( is_number(num) ) {\n        var absnum = Math.abs(num);\n        if ( absnum > 0xffffffff ) {\n            limbs = new Uint32Array(2);\n            limbs[0] = absnum|0;\n            limbs[1] = (absnum/0x100000000)|0;\n            bitlen = 52;\n        }\n        else if ( absnum > 0 ) {\n            limbs = new Uint32Array(1);\n            limbs[0] = absnum;\n            bitlen = 32;\n        }\n        else {\n            limbs = _BigNumber_ZERO_limbs;\n            bitlen = 0;\n        }\n        sign = num < 0 ? -1 : 1;\n    }\n    else if ( is_bytes(num) ) {\n        for ( var i = 0; !num[i]; i++ );\n\n        bitlen = ( num.length - i ) * 8;\n        if ( !bitlen )\n            return BigNumber_ZERO;\n\n        limbs = new Uint32Array( (bitlen + 31) >> 5 );\n        for ( var j = num.length-4; j >= i ; j -= 4 ) {\n            limbs[(num.length-4-j)>>2] = (num[j] << 24) | (num[j+1] << 16) | (num[j+2] << 8) | num[j+3];\n        }\n        if ( i-j === 3 ) {\n            limbs[limbs.length-1] = num[i];\n        }\n        else if ( i-j === 2 ) {\n            limbs[limbs.length-1] = (num[i] << 8) | num[i+1];\n        }\n        else if ( i-j === 1 ) {\n            limbs[limbs.length-1] = (num[i] << 16) | (num[i+1] << 8) | num[i+2];\n        }\n\n        sign = 1;\n    }\n    else if ( typeof num === 'object' && num !== null ) {\n        limbs = new Uint32Array( num.limbs );\n        bitlen = num.bitLength;\n        sign = num.sign;\n    }\n    else {\n        throw new TypeError(\"number is of unexpected type\");\n    }\n\n    this.limbs = limbs;\n    this.bitLength = bitlen;\n    this.sign = sign;\n}\n\nfunction BigNumber_toString ( radix ) {\n    radix = radix || 16;\n\n    var limbs = this.limbs,\n        bitlen = this.bitLength,\n        str = '';\n\n    if ( radix === 16 ) {\n        // FIXME clamp last limb to (bitlen % 32)\n        for ( var i = (bitlen+31>>5)-1; i >= 0; i-- ) {\n            var h = limbs[i].toString(16);\n            str += '00000000'.substr(h.length);\n            str += h;\n        }\n\n        str = str.replace( /^0+/, '' );\n\n        if ( !str.length )\n            str = '0';\n    }\n    else {\n        throw new IllegalArgumentError(\"bad radix\");\n    }\n\n    if ( this.sign < 0 )\n        str = '-' + str;\n\n    return str;\n}\n\nfunction BigNumber_toBytes () {\n    var bitlen = this.bitLength,\n        limbs = this.limbs;\n\n    if ( bitlen === 0 )\n        return new Uint8Array(0);\n\n    var bytelen = ( bitlen + 7 ) >> 3,\n        bytes = new Uint8Array(bytelen);\n    for ( var i = 0; i < bytelen; i++ ) {\n        var j = bytelen - i - 1;\n        bytes[i] = limbs[j>>2] >> ( (j & 3) << 3 );\n    }\n\n    return bytes;\n}\n\n// Downgrade to Number\nfunction BigNumber_valueOf () {\n    var limbs = this.limbs,\n        bits = this.bitLength,\n        sign = this.sign;\n\n    if ( !sign )\n        return 0;\n\n    if ( bits <= 32 )\n        return sign * (limbs[0]>>>0);\n\n    if ( bits <= 52 )\n        return sign * ( 0x100000000 * (limbs[1]>>>0) + (limbs[0]>>>0) );\n\n    // normalization\n    var i, l, e = 0;\n    for ( i = limbs.length-1; i >= 0; i-- ) {\n        if ( (l = limbs[i]) === 0 ) continue;\n        while ( ( (l << e) & 0x80000000 ) === 0 ) e++;\n        break;\n    }\n\n    if ( i === 0 )\n        return sign * (limbs[0]>>>0);\n\n    return sign * ( 0x100000 * (( (limbs[i] << e) | ( e ? limbs[i-1] >>> (32-e) : 0 ) )>>>0)\n                             + (( (limbs[i-1] << e) | ( e && i > 1 ? limbs[i-2] >>> (32-e) : 0 ) )>>>12)\n                  ) * Math.pow( 2, 32*i-e-52 );\n}\n\nfunction BigNumber_clamp ( b ) {\n    var limbs = this.limbs,\n        bitlen = this.bitLength;\n\n    // FIXME check b is number and in a valid range\n\n    if ( b >= bitlen )\n        return this;\n\n    var clamped = new BigNumber_constructor,\n        n = (b + 31) >> 5,\n        k = b % 32;\n\n    clamped.limbs = new Uint32Array( limbs.subarray(0,n) );\n    clamped.bitLength = b;\n    clamped.sign = this.sign;\n\n    if ( k ) clamped.limbs[n-1] &= (-1 >>> (32-k));\n\n    return clamped;\n}\n\nfunction BigNumber_slice ( f, b ) {\n    if ( !is_number(f) )\n        throw new TypeError(\"TODO\");\n\n    if ( b !== undefined && !is_number(b) )\n        throw new TypeError(\"TODO\");\n\n    var limbs = this.limbs,\n        bitlen = this.bitLength;\n\n    if ( f < 0 )\n        throw new RangeError(\"TODO\");\n\n    if ( f >= bitlen )\n        return BigNumber_ZERO;\n\n    if ( b === undefined || b > bitlen - f )\n        b = bitlen - f;\n\n    var sliced = new BigNumber_constructor, slimbs,\n        n = f >> 5, m = (f + b + 31) >> 5, l = (b + 31) >> 5,\n        t = f % 32, k = b % 32;\n\n    slimbs = new Uint32Array(l);\n    if ( t ) {\n        for ( var i = 0; i < m-n-1; i++ ) {\n            slimbs[i] = (limbs[n+i]>>>t) | ( limbs[n+i+1]<<(32-t) );\n        }\n        slimbs[i] = limbs[n+i]>>>t;\n    }\n    else {\n        slimbs.set( limbs.subarray(n, m) );\n    }\n\n    if ( k ) {\n        slimbs[l-1] &= (-1 >>> (32-k));\n    }\n\n    sliced.limbs = slimbs\n    sliced.bitLength = b;\n    sliced.sign = this.sign;\n\n    return sliced;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nfunction BigNumber_negate () {\n    var negative = new BigNumber_constructor;\n\n    negative.limbs = this.limbs;\n    negative.bitLength = this.bitLength;\n    negative.sign = -1 * this.sign;\n\n    return negative;\n}\n\nfunction BigNumber_compare ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber_constructor(that);\n\n    var alimbs = this.limbs, alimbcnt = alimbs.length,\n        blimbs = that.limbs, blimbcnt = blimbs.length,\n        z = 0;\n\n    if ( this.sign < that.sign )\n        return -1;\n\n    if ( this.sign > that.sign )\n        return 1;\n\n    _bigint_heap.set( alimbs, 0 );\n    _bigint_heap.set( blimbs, alimbcnt );\n    z = _bigint_asm.cmp( 0, alimbcnt<<2, alimbcnt<<2, blimbcnt<<2 );\n\n    return z * this.sign;\n}\n\nfunction BigNumber_add ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber_constructor(that);\n\n    if ( !this.sign )\n        return that;\n\n    if ( !that.sign )\n        return this;\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, asign = this.sign,\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, bsign = that.sign,\n        rbitlen, rlimbcnt, rsign, rof, result = new BigNumber_constructor;\n\n    rbitlen = ( abitlen > bbitlen ? abitlen : bbitlen ) + ( asign * bsign > 0 ? 1 : 0 );\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( blimbs, pB>>2 );\n\n    if ( asign * bsign > 0 ) {\n        _bigint_asm.add( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\n        rsign = asign;\n    }\n    else if ( asign > bsign ) {\n        rof = _bigint_asm.sub( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\n        rsign = rof ? bsign : asign;\n    }\n    else {\n        rof = _bigint_asm.sub( pB, blimbcnt<<2, pA, alimbcnt<<2, pR, rlimbcnt<<2 );\n        rsign = rof ? asign : bsign;\n    }\n\n    if ( rof )\n        _bigint_asm.neg( pR, rlimbcnt<<2, pR, rlimbcnt<<2 );\n\n    if ( _bigint_asm.tst( pR, rlimbcnt<<2 ) === 0 )\n        return BigNumber_ZERO;\n\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\n    result.bitLength = rbitlen;\n    result.sign = rsign;\n\n    return result;\n}\n\nfunction BigNumber_subtract ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber_constructor(that);\n\n    return this.add( that.negate() );\n}\n\nfunction BigNumber_multiply ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber_constructor(that);\n\n    if ( !this.sign || !that.sign )\n        return BigNumber_ZERO;\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length,\n        rbitlen, rlimbcnt, result = new BigNumber_constructor;\n\n    rbitlen = abitlen + bbitlen;\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( blimbs, pB>>2 );\n\n    _bigint_asm.mul( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\n\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\n    result.sign = this.sign * that.sign;\n    result.bitLength = rbitlen;\n\n    return result;\n}\n\nfunction BigNumber_square () {\n    if ( !this.sign )\n        return BigNumber_ZERO;\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\n        rbitlen, rlimbcnt, result = new BigNumber_constructor;\n\n    rbitlen = abitlen << 1;\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n\n    _bigint_asm.sqr( pA, alimbcnt<<2, pR );\n\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\n    result.bitLength = rbitlen;\n    result.sign = 1;\n\n    return result;\n}\n\nfunction BigNumber_divide ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber_constructor(that);\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length,\n        qlimbcnt, rlimbcnt, quotient = BigNumber_ZERO, remainder = BigNumber_ZERO;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\n        pQ = _bigint_asm.salloc( alimbcnt<<2 );\n\n    _bigint_asm.z( pQ-pA+(alimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( blimbs, pB>>2 );\n\n    _bigint_asm.div( pA, alimbcnt<<2, pB, blimbcnt<<2, pQ );\n\n    qlimbcnt = _bigint_asm.tst( pQ, alimbcnt<<2 )>>2;\n    if ( qlimbcnt ) {\n        quotient = new BigNumber_constructor;\n        quotient.limbs = new Uint32Array( _bigint_heap.subarray( pQ>>2, (pQ>>2)+qlimbcnt ) );\n        quotient.bitLength = abitlen < (qlimbcnt<<5) ? abitlen : (qlimbcnt<<5);\n        quotient.sign = this.sign * that.sign;\n    }\n\n    rlimbcnt = _bigint_asm.tst( pA, blimbcnt<<2 )>>2;\n    if ( rlimbcnt ) {\n        remainder = new BigNumber_constructor;\n        remainder.limbs = new Uint32Array( _bigint_heap.subarray( pA>>2, (pA>>2)+rlimbcnt ) );;\n        remainder.bitLength = bbitlen < (rlimbcnt<<5) ? bbitlen : (rlimbcnt<<5);\n        remainder.sign = this.sign;\n    }\n\n    return {\n        quotient: quotient,\n        remainder: remainder\n    };\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nvar BigNumberPrototype = BigNumber_constructor.prototype = new Number;\nBigNumberPrototype.toString = BigNumber_toString;\nBigNumberPrototype.toBytes = BigNumber_toBytes;\nBigNumberPrototype.valueOf = BigNumber_valueOf;\nBigNumberPrototype.clamp = BigNumber_clamp;\nBigNumberPrototype.slice = BigNumber_slice;\n\n///////////////////////////////////////////////////////////////////////////////\n\nBigNumberPrototype.negate = BigNumber_negate;\nBigNumberPrototype.compare = BigNumber_compare;\nBigNumberPrototype.add = BigNumber_add;\nBigNumberPrototype.subtract = BigNumber_subtract;\nBigNumberPrototype.multiply = BigNumber_multiply;\nBigNumberPrototype.square = BigNumber_square;\nBigNumberPrototype.divide = BigNumber_divide;\n\n///////////////////////////////////////////////////////////////////////////////\n\nexport var BigNumber_ZERO = new BigNumber_constructor(0);\nexport var BigNumber_ONE  = new BigNumber_constructor(1);\n\nObject.freeze(BigNumber_ZERO);\nObject.freeze(BigNumber_ONE);\n","import {BigNumber_constructor, BigNumber_ONE, BigNumber_ZERO, is_big_number} from './bignum';\n\nexport function Number_extGCD (a, b ) {\n    var sa = ( a < 0 ) ? -1 : 1,\n        sb = ( b < 0 ) ? -1 : 1,\n        xi = 1, xj = 0,\n        yi = 0, yj = 1,\n        r, q, t, a_cmp_b;\n\n    a *= sa;\n    b *= sb;\n\n    a_cmp_b = ( a < b );\n    if ( a_cmp_b ) {\n        t = a; a = b, b = t;\n        t = sa; sa = sb; sb = t;\n    }\n\n    q = Math.floor( a / b ), r = a - q*b;\n    while ( r ) {\n        t = xi - q*xj, xi = xj, xj = t;\n        t = yi - q*yj, yi = yj, yj = t;\n        a = b, b = r;\n\n        q = Math.floor( a / b ), r = a - q*b;\n    }\n\n    xj *= sa;\n    yj *= sb;\n\n    if ( a_cmp_b ) {\n        t = xj; xj = yj, yj = t;\n    }\n\n    return {\n        gcd: b,\n        x: xj,\n        y: yj\n    };\n}\n\nexport function BigNumber_extGCD ( a, b ) {\n    if ( !is_big_number(a) )\n        a = new BigNumber_constructor(a);\n\n    if ( !is_big_number(b) )\n        b = new BigNumber_constructor(b);\n\n    var sa = a.sign, sb = b.sign;\n\n    if ( sa < 0 )\n        a = a.negate();\n\n    if ( sb < 0 )\n        b = b.negate();\n\n    var a_cmp_b = a.compare(b);\n    if ( a_cmp_b < 0 ) {\n        var t = a; a = b, b = t;\n        t = sa; sa = sb; sb = t;\n    }\n\n    var xi = BigNumber_ONE, xj = BigNumber_ZERO, lx = b.bitLength,\n        yi = BigNumber_ZERO, yj = BigNumber_ONE, ly = a.bitLength,\n        z, r, q;\n\n    z = a.divide(b);\n    while ( (r = z.remainder) !== BigNumber_ZERO ) {\n        q = z.quotient;\n\n        z = xi.subtract( q.multiply(xj).clamp(lx) ).clamp(lx), xi = xj, xj = z;\n        z = yi.subtract( q.multiply(yj).clamp(ly) ).clamp(ly), yi = yj, yj = z;\n\n        a = b, b = r;\n\n        z = a.divide(b);\n    }\n\n    if ( sa < 0 )\n        xj = xj.negate();\n\n    if ( sb < 0 )\n        yj = yj.negate();\n\n    if ( a_cmp_b < 0 ) {\n        var t = xj; xj = yj, yj = t;\n    }\n\n    return {\n        gcd: b,\n        x: xj,\n        y: yj\n    };\n}\n","import {BigNumber_constructor, is_big_number} from './bignum';\nimport {BigNumber_extGCD, Number_extGCD} from './extgcd';\nimport {_bigint_asm, _bigint_heap} from './bignum'\n\n/**\n * Modulus\n */\nexport function Modulus () {\n    BigNumber_constructor.apply( this, arguments );\n\n    if ( this.valueOf() < 1 )\n        throw new RangeError();\n\n    if ( this.bitLength <= 32 )\n        return;\n\n    var comodulus;\n\n    if ( this.limbs[0] & 1 ) {\n        var bitlen = ( (this.bitLength+31) & -32 ) + 1, limbs = new Uint32Array( (bitlen+31) >> 5 );\n        limbs[limbs.length-1] = 1;\n        comodulus = new BigNumber_constructor();\n        comodulus.sign = 1;\n        comodulus.bitLength = bitlen;\n        comodulus.limbs = limbs;\n\n        var k = Number_extGCD( 0x100000000, this.limbs[0] ).y;\n        this.coefficient = k < 0 ? -k : 0x100000000-k;\n    }\n    else {\n        /**\n         * TODO even modulus reduction\n         * Modulus represented as `N = 2^U * V`, where `V` is odd and thus `GCD(2^U, V) = 1`.\n         * Calculation `A = TR' mod V` is made as for odd modulo using Montgomery method.\n         * Calculation `B = TR' mod 2^U` is easy as modulus is a power of 2.\n         * Using Chinese Remainder Theorem and Garner's Algorithm restore `TR' mod N` from `A` and `B`.\n         */\n        return;\n    }\n\n    this.comodulus = comodulus;\n    this.comodulusRemainder = comodulus.divide(this).remainder;\n    this.comodulusRemainderSquare = comodulus.square().divide(this).remainder;\n}\n\n/**\n * Modular reduction\n */\nfunction Modulus_reduce ( a ) {\n    if ( !is_big_number(a) )\n        a = new BigNumber_constructor(a);\n\n    if ( a.bitLength <= 32 && this.bitLength <= 32 )\n        return new BigNumber_constructor( a.valueOf() % this.valueOf() );\n\n    if ( a.compare(this) < 0 )\n        return a;\n\n    return a.divide(this).remainder;\n}\n\n/**\n * Modular inverse\n */\nfunction Modulus_inverse ( a ) {\n    a = this.reduce(a);\n\n    var r = BigNumber_extGCD( this, a );\n    if ( r.gcd.valueOf() !== 1 ) return null;\n\n    r = r.y;\n    if ( r.sign < 0 ) r = r.add(this).clamp(this.bitLength);\n\n    return r;\n}\n\n/**\n * Modular exponentiation\n */\nfunction Modulus_power ( g, e ) {\n    if ( !is_big_number(g) )\n        g = new BigNumber_constructor(g);\n\n    if ( !is_big_number(e) )\n        e = new BigNumber_constructor(e);\n\n    // count exponent set bits\n    var c = 0;\n    for ( var i = 0; i < e.limbs.length; i++ ) {\n        var t = e.limbs[i];\n        while ( t ) {\n            if ( t & 1 ) c++;\n            t >>>= 1;\n        }\n    }\n\n    // window size parameter\n    var k = 8;\n    if ( e.bitLength <= 4536 ) k = 7;\n    if ( e.bitLength <= 1736 ) k = 6;\n    if ( e.bitLength <= 630 ) k = 5;\n    if ( e.bitLength <= 210 ) k = 4;\n    if ( e.bitLength <= 60 ) k = 3;\n    if ( e.bitLength <= 12 ) k = 2;\n    if ( c <= (1 << (k-1)) ) k = 1;\n\n    // montgomerize base\n    g = _Montgomery_reduce( this.reduce(g).multiply(this.comodulusRemainderSquare), this );\n\n    // precompute odd powers\n    var g2 = _Montgomery_reduce( g.square(), this ),\n        gn = new Array( 1 << (k-1) );\n    gn[0] = g;\n    gn[1] = _Montgomery_reduce( g.multiply(g2), this );\n    for ( var i = 2; i < (1 << (k-1)); i++ ) {\n        gn[i] = _Montgomery_reduce( gn[i-1].multiply(g2), this );\n    }\n\n    // perform exponentiation\n    var u = this.comodulusRemainder,\n        r = u;\n    for ( var i = e.limbs.length-1; i >= 0; i-- ) {\n        var t = e.limbs[i];\n        for ( var j = 32; j > 0; ) {\n            if ( t & 0x80000000 ) {\n                var n = t >>> (32-k), l = k;\n                while ( (n & 1) === 0 ) { n >>>= 1; l--; }\n                var m = gn[n>>>1];\n                while ( n ) { n >>>= 1; if ( r !== u ) r = _Montgomery_reduce( r.square(), this ); }\n                r = ( r !== u ) ? _Montgomery_reduce( r.multiply(m), this ) : m;\n                t <<= l, j -= l;\n            }\n            else {\n                if ( r !== u ) r = _Montgomery_reduce( r.square(), this );\n                t <<= 1, j--;\n            }\n        }\n    }\n\n    // de-montgomerize result\n    r = _Montgomery_reduce( r, this );\n\n    return r;\n}\n\nfunction _Montgomery_reduce ( a, n ) {\n    var alimbs = a.limbs, alimbcnt = alimbs.length,\n        nlimbs = n.limbs, nlimbcnt = nlimbs.length,\n        y = n.coefficient;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pN = _bigint_asm.salloc( nlimbcnt<<2 ),\n        pR = _bigint_asm.salloc( nlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(nlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( nlimbs, pN>>2 );\n\n    _bigint_asm.mredc( pA, alimbcnt<<2, pN, nlimbcnt<<2, y, pR );\n\n    var result = new BigNumber_constructor();\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+nlimbcnt ) );\n    result.bitLength = n.bitLength;\n    result.sign = 1;\n\n    return result;\n}\n\nvar ModulusPrototype = Modulus.prototype = new BigNumber_constructor;\nModulusPrototype.reduce = Modulus_reduce;\nModulusPrototype.inverse = Modulus_inverse;\nModulusPrototype.power = Modulus_power;\n","// Tests if the number supplied is a Miller-Rabin strong probable prime\nimport {BigNumber_constructor, BigNumber_ONE} from './bignum';\nimport {pow2_ceil} from '../utils';\nimport {Random_getValues} from '../random/random';\nimport {Modulus} from './modulus';\n\nfunction _BigNumber_isMillerRabinProbablePrime (rounds ) {\n    var t = new BigNumber_constructor(this),\n        s = 0;\n    t.limbs[0] -= 1;\n    while ( t.limbs[s>>5] === 0 ) s += 32;\n    while ( ( ( t.limbs[s>>5] >> (s & 31) ) & 1 ) === 0 ) s++;\n    t = t.slice(s);\n\n    var m = new Modulus(this),\n        m1 = this.subtract(BigNumber_ONE),\n        a = new BigNumber_constructor(this),\n        l = this.limbs.length-1;\n    while ( a.limbs[l] === 0 ) l--;\n\n    while ( --rounds >= 0 ) {\n        Random_getValues(a.limbs);\n        if ( a.limbs[0] < 2 ) a.limbs[0] += 2;\n        while ( a.compare(m1) >= 0 ) a.limbs[l] >>>= 1;\n\n        var x = m.power( a, t );\n        if ( x.compare(BigNumber_ONE) === 0 ) continue;\n        if ( x.compare(m1) === 0 ) continue;\n\n        var c = s;\n        while ( --c > 0 ) {\n            x = x.square().divide(m).remainder;\n            if ( x.compare(BigNumber_ONE) === 0 ) return false;\n            if ( x.compare(m1) === 0 ) break;\n        }\n\n        if ( c === 0 ) return false;\n    }\n\n    return true;\n}\n\nfunction BigNumber_isProbablePrime ( paranoia ) {\n    paranoia = paranoia || 80;\n\n    var limbs = this.limbs,\n        i = 0;\n\n    // Oddity test\n    // (50% false positive probability)\n    if ( ( limbs[0] & 1 ) === 0 ) return false;\n    if ( paranoia <= 1 ) return true;\n\n    // Magic divisors (3, 5, 17) test\n    // (~25% false positive probability)\n    var s3 = 0, s5 = 0, s17 = 0;\n    for ( i = 0; i < limbs.length; i++ ) {\n        var l3 = limbs[i];\n        while ( l3 ) {\n            s3 += (l3 & 3);\n            l3 >>>= 2;\n        }\n\n        var l5 = limbs[i];\n        while ( l5 ) {\n            s5 += (l5 & 3);\n            l5 >>>= 2;\n            s5 -= (l5 & 3);\n            l5 >>>= 2;\n        }\n\n        var l17 = limbs[i];\n        while ( l17 ) {\n            s17 += (l17 & 15);\n            l17 >>>= 4;\n            s17 -= (l17 & 15);\n            l17 >>>= 4;\n        }\n    }\n    if ( !(s3 % 3) || !(s5 % 5) || !(s17 % 17) ) return false;\n    if ( paranoia <= 2 ) return true;\n\n    // Miller-Rabin test\n    // (≤ 4^(-k) false positive probability)\n    return _BigNumber_isMillerRabinProbablePrime.call( this, paranoia >>> 1 );\n}\n\n// Small primes for trail division\nvar _primes = [ 2, 3 /* and so on, computed lazily */ ];\n\n// Returns an array populated with first n primes.\nfunction _small_primes ( n ) {\n    if ( _primes.length >= n )\n        return _primes.slice( 0, n );\n\n    for ( var p = _primes[_primes.length-1] + 2; _primes.length < n; p += 2 ) {\n        for ( var i = 0, d = _primes[i]; d*d <= p; d = _primes[++i] ) {\n            if ( p % d == 0 ) break;\n        }\n        if ( d*d > p ) _primes.push(p);\n    }\n\n    return _primes;\n}\n\n// Returns strong pseudoprime of a specified bit length\nexport function BigNumber_randomProbablePrime ( bitlen, filter ) {\n    var limbcnt = (bitlen + 31) >> 5,\n        prime = new BigNumber_constructor({ sign: 1, bitLength: bitlen, limbs: limbcnt }),\n        limbs = prime.limbs;\n\n    // Number of small divisors to try that minimizes the total cost of the trial division\n    // along with the first round of Miller-Rabin test for a certain bit length.\n    var k = 10000;\n    if ( bitlen <= 512 ) k = 2200;\n    if ( bitlen <= 256 ) k = 600;\n\n    var divisors = _small_primes(k),\n        remainders = new Uint32Array(k);\n\n    // Number of Miller-Rabin iterations for an error rate  of less than 2^-80\n    // Damgaard, Landrock, Pomerance: Average case error estimates for the strong probable prime test.\n    var s = (bitlen * Math.LN2) | 0,\n        r = 27;\n    if ( bitlen >= 250 ) r = 12;\n    if ( bitlen >= 450 ) r = 6;\n    if ( bitlen >= 850 ) r = 3;\n    if ( bitlen >= 1300 ) r = 2;\n\n    while ( true ) {\n        // populate `prime` with random bits, clamp to the appropriate bit length\n        Random_getValues(limbs);\n        limbs[0] |= 1;\n        limbs[limbcnt-1] |= 1 << ((bitlen - 1) & 31);\n        if ( bitlen & 31 ) limbs[limbcnt-1] &= pow2_ceil((bitlen + 1) & 31) - 1;\n\n        // remainders from division to small primes\n        remainders[0] = 1;\n        for ( var i = 1; i < k; i++ ) {\n            remainders[i] = prime.divide( divisors[i] ).remainder.valueOf();\n        }\n\n        // try no more than `s` subsequent candidates\n        seek:\n        for ( var j = 0; j < s; j += 2, limbs[0] += 2 ) {\n            // check for small factors\n            for ( var i = 1; i < k; i++ ) {\n                if ( ( remainders[i] + j ) % divisors[i] === 0 ) continue seek;\n            }\n\n            // additional check just before the heavy lifting\n            if ( typeof filter === 'function' && !filter(prime) ) continue;\n\n            // proceed to Miller-Rabin test\n            if ( _BigNumber_isMillerRabinProbablePrime.call( prime, r ) ) return prime;\n        }\n    }\n}\n\nBigNumber_constructor.prototype.isProbablePrime = BigNumber_isProbablePrime;\n\nBigNumber_constructor.randomProbablePrime = BigNumber_randomProbablePrime;\n","import {BigNumber_constructor, BigNumber_ONE, BigNumber_ZERO} from './bignum';\nimport {BigNumber_extGCD} from './extgcd';\nimport \"./prime\";\n\nexport var BigNumber = BigNumber_constructor;\nBigNumber.ZERO = BigNumber_ZERO;\nBigNumber.ONE  = BigNumber_ONE;\n\nBigNumber.extGCD = BigNumber_extGCD;\n\nexport { Modulus } from \"./modulus\";\n","import {Modulus} from '../bignum/modulus';\nimport {BigNumber_constructor, is_big_number} from '../bignum/bignum';\nimport {is_buffer, is_bytes, is_string, string_to_bytes} from '../utils';\nimport {IllegalStateError} from '../errors';\n\nexport function RSA (options ) {\n    options = options || {};\n\n    this.key = null;\n    this.result = null;\n\n    this.reset(options);\n}\n\nexport function RSA_reset ( options ) {\n    options = options || {};\n\n    this.result = null;\n\n    var key = options.key\n    if ( key !== undefined ) {\n        if ( key instanceof Array ) {\n            var l = key.length;\n            if ( l !== 2 && l !== 3 && l !== 8 )\n                throw new SyntaxError(\"unexpected key type\");\n\n            var k = [];\n            k[0] = new Modulus( key[0] );\n            k[1] = new BigNumber_constructor( key[1] );\n            if ( l > 2 ) {\n                k[2] = new BigNumber_constructor( key[2] );\n            }\n            if ( l > 3 ) {\n                k[3] = new Modulus( key[3] );\n                k[4] = new Modulus( key[4] );\n                k[5] = new BigNumber_constructor( key[5] );\n                k[6] = new BigNumber_constructor( key[6] );\n                k[7] = new BigNumber_constructor( key[7] );\n            }\n\n            this.key = k;\n        }\n        else {\n            throw new TypeError(\"unexpected key type\");\n        }\n    }\n\n    return this;\n}\n\nexport function RSA_encrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    var msg;\n    if ( is_bytes(data) ) {\n        msg = new BigNumber_constructor(data);\n    }\n    else if ( is_big_number(data) ) {\n        msg = data;\n    }\n    else {\n        throw new TypeError(\"unexpected data type\");\n    }\n\n    if ( this.key[0].compare(msg) <= 0 )\n        throw new RangeError(\"data too large\");\n\n    var m = this.key[0],\n        e = this.key[1];\n\n    var result = m.power( msg, e ).toBytes();\n\n    var bytelen = m.bitLength + 7 >> 3;\n    if ( result.length < bytelen ) {\n        var r = new Uint8Array(bytelen);\n        r.set( result, bytelen - result.length );\n        result = r;\n    }\n\n    this.result = result;\n\n    return this;\n}\n\nexport function RSA_decrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.key.length < 3 )\n        throw new IllegalStateError(\"key isn't suitable for decription\");\n\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    var msg;\n    if ( is_bytes(data) ) {\n        msg = new BigNumber_constructor(data);\n    }\n    else if ( is_big_number(data) ) {\n        msg = data;\n    }\n    else {\n        throw new TypeError(\"unexpected data type\");\n    }\n\n    if ( this.key[0].compare(msg) <= 0 )\n        throw new RangeError(\"data too large\");\n\n    var result;\n    if ( this.key.length > 3 ) {\n        var m = this.key[0],\n            p = this.key[3],\n            q = this.key[4],\n            dp = this.key[5],\n            dq = this.key[6],\n            u = this.key[7];\n\n        var x = p.power( msg, dp ),\n            y = q.power( msg, dq );\n\n        var t = x.subtract(y);\n        while ( t.sign < 0 ) t = t.add(p);\n\n        var h = p.reduce( u.multiply(t) );\n\n        result = h.multiply(q).add(y).clamp(m.bitLength).toBytes();\n    }\n    else {\n        var m = this.key[0],\n            d = this.key[2];\n\n        result = m.power( msg, d ).toBytes();\n    }\n\n    var bytelen = m.bitLength + 7 >> 3;\n    if ( result.length < bytelen ) {\n        var r = new Uint8Array(bytelen);\n        r.set( result, bytelen - result.length );\n        result = r;\n    }\n\n    this.result = result;\n\n    return this;\n}\n\nvar RSA_prototype = RSA.prototype;\nRSA_prototype.reset = RSA_reset;\nRSA_prototype.encrypt = RSA_encrypt;\nRSA_prototype.decrypt = RSA_decrypt;\n","import {RSA_reset, RSA_encrypt, RSA_decrypt} from './rsa'\nimport {Random_getValues} from '../random/random';\nimport {is_buffer, is_bytes, is_number, is_string, string_to_bytes} from '../utils';\nimport {IllegalArgumentError, IllegalStateError, SecurityError} from '../errors';\n\nexport function RSA_OAEP ( options ) {\n    options = options || {};\n\n    if ( !options.hash )\n        throw new SyntaxError(\"option 'hash' is required\");\n\n    if ( !options.hash.HASH_SIZE )\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\n\n    this.hash = options.hash;\n\n    this.label = null;\n\n    this.reset(options);\n}\n\nfunction RSA_OAEP_reset ( options ) {\n    options = options || {};\n\n    var label = options.label;\n    if ( label !== undefined ) {\n        if ( is_buffer(label) || is_bytes(label) ) {\n            label = new Uint8Array(label);\n        }\n        else if ( is_string(label) ) {\n            label = string_to_bytes(label);\n        }\n        else {\n            throw new TypeError(\"unexpected label type\");\n        }\n\n        this.label = ( label.length > 0 ) ? label : null;\n    }\n    else {\n        this.label = null;\n    }\n\n    RSA_reset.call( this, options );\n}\n\nfunction RSA_OAEP_encrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_size = Math.ceil( this.key[0].bitLength / 8 ),\n        hash_size = this.hash.HASH_SIZE,\n        data_length = data.byteLength || data.length || 0,\n        ps_length = key_size - data_length - 2*hash_size - 2;\n\n    if ( data_length > key_size - 2*this.hash.HASH_SIZE - 2 )\n        throw new IllegalArgumentError(\"data too large\");\n\n    var message = new Uint8Array(key_size),\n        seed = message.subarray( 1, hash_size + 1 ),\n        data_block = message.subarray( hash_size + 1 );\n\n    if ( is_bytes(data) ) {\n        data_block.set( data, hash_size + ps_length + 1 );\n    }\n    else if ( is_buffer(data) ) {\n        data_block.set( new Uint8Array(data), hash_size + ps_length + 1 );\n    }\n    else if ( is_string(data) ) {\n        data_block.set( string_to_bytes(data), hash_size + ps_length + 1 );\n    }\n    else {\n        throw new TypeError(\"unexpected data type\");\n    }\n\n    data_block.set( this.hash.reset().process( this.label || '' ).finish().result, 0 );\n    data_block[ hash_size + ps_length ] = 1;\n\n    Random_getValues(seed);\n\n    var data_block_mask = RSA_MGF1_generate.call( this, seed, data_block.length );\n    for ( var i = 0; i < data_block.length; i++ )\n        data_block[i] ^= data_block_mask[i];\n\n    var seed_mask = RSA_MGF1_generate.call( this, data_block, seed.length );\n    for ( var i = 0; i < seed.length; i++ )\n        seed[i] ^= seed_mask[i];\n\n    RSA_encrypt.call( this, message );\n\n    return this;\n}\n\nfunction RSA_OAEP_decrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_size = Math.ceil( this.key[0].bitLength / 8 ),\n        hash_size = this.hash.HASH_SIZE,\n        data_length = data.byteLength || data.length || 0;\n\n    if ( data_length !== key_size )\n        throw new IllegalArgumentError(\"bad data\");\n\n    RSA_decrypt.call( this, data );\n\n    var z = this.result[0],\n        seed = this.result.subarray( 1, hash_size + 1 ),\n        data_block = this.result.subarray( hash_size + 1 );\n\n    if ( z !== 0 )\n        throw new SecurityError(\"decryption failed\");\n\n    var seed_mask = RSA_MGF1_generate.call( this, data_block, seed.length );\n    for ( var i = 0; i < seed.length; i++ )\n        seed[i] ^= seed_mask[i];\n\n    var data_block_mask = RSA_MGF1_generate.call( this, seed, data_block.length );\n    for ( var i = 0; i < data_block.length; i++ )\n        data_block[i] ^= data_block_mask[i];\n\n    var lhash = this.hash.reset().process( this.label || '' ).finish().result;\n    for ( var i = 0; i < hash_size; i++ ) {\n        if ( lhash[i] !== data_block[i] )\n            throw new SecurityError(\"decryption failed\");\n    }\n\n    var ps_end = hash_size;\n    for ( ; ps_end < data_block.length; ps_end++ ) {\n        var psz = data_block[ps_end];\n        if ( psz === 1 )\n            break;\n        if ( psz !== 0 )\n            throw new SecurityError(\"decryption failed\");\n    }\n    if ( ps_end === data_block.length )\n        throw new SecurityError(\"decryption failed\");\n\n    this.result = data_block.subarray( ps_end + 1 );\n\n    return this;\n}\n\nfunction RSA_MGF1_generate( seed, length ) {\n    seed = seed || '';\n    length = length || 0;\n\n    var hash_size = this.hash.HASH_SIZE;\n//    if ( length > (hash_size * 0x100000000) )\n//        throw new IllegalArgumentError(\"mask length too large\");\n\n    var mask = new Uint8Array(length),\n        counter = new Uint8Array(4),\n        chunks = Math.ceil( length / hash_size );\n    for ( var i = 0; i < chunks; i++ ) {\n        counter[0] = i >>> 24,\n        counter[1] = (i >>> 16) & 255,\n        counter[2] = (i >>> 8) & 255,\n        counter[3] = i & 255;\n\n        var submask = mask.subarray( i * hash_size );\n\n        var chunk = this.hash.reset().process(seed).process(counter).finish().result;\n        if ( chunk.length > submask.length ) chunk = chunk.subarray( 0, submask.length );\n\n        submask.set(chunk);\n    }\n\n    return mask;\n}\n\nexport function RSA_PSS ( options ) {\n    options = options || {};\n\n    if ( !options.hash )\n        throw new SyntaxError(\"option 'hash' is required\");\n\n    if ( !options.hash.HASH_SIZE )\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\n\n    this.hash = options.hash;\n\n    this.saltLength = 4;\n\n    this.reset(options);\n}\n\nfunction RSA_PSS_reset ( options ) {\n    options = options || {};\n\n    RSA_reset.call( this, options );\n\n    var slen = options.saltLength;\n    if ( slen !== undefined ) {\n        if ( !is_number(slen) || slen < 0 )\n            throw new TypeError(\"saltLength should be a non-negative number\");\n\n        if ( this.key !== null && Math.ceil( ( this.key[0].bitLength - 1 ) / 8 ) < this.hash.HASH_SIZE + slen + 2 )\n            throw new SyntaxError(\"saltLength is too large\");\n\n        this.saltLength = slen;\n    }\n    else {\n        this.saltLength = 4;\n    }\n}\n\nfunction RSA_PSS_sign ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_bits = this.key[0].bitLength,\n        hash_size = this.hash.HASH_SIZE,\n        message_length = Math.ceil( ( key_bits - 1 ) / 8 ),\n        salt_length = this.saltLength,\n        ps_length = message_length - salt_length - hash_size - 2;\n\n    var message = new Uint8Array(message_length),\n        h_block = message.subarray( message_length - hash_size - 1, message_length - 1 ),\n        d_block = message.subarray( 0, message_length - hash_size - 1 ),\n        d_salt = d_block.subarray( ps_length + 1 );\n\n    var m_block = new Uint8Array( 8 + hash_size + salt_length ),\n        m_hash = m_block.subarray( 8, 8 + hash_size ),\n        m_salt = m_block.subarray( 8 + hash_size );\n\n    m_hash.set( this.hash.reset().process(data).finish().result );\n\n    if ( salt_length > 0 )\n        Random_getValues(m_salt);\n\n    d_block[ps_length] = 1;\n    d_salt.set(m_salt);\n\n    h_block.set( this.hash.reset().process(m_block).finish().result );\n\n    var d_block_mask = RSA_MGF1_generate.call( this, h_block, d_block.length );\n    for ( var i = 0; i < d_block.length; i++ )\n        d_block[i] ^= d_block_mask[i];\n\n    message[message_length-1] = 0xbc;\n\n    var zbits = 8*message_length - key_bits + 1;\n    if ( zbits % 8 ) message[0] &= (0xff >>> zbits);\n\n    RSA_decrypt.call( this, message );\n\n    return this;\n}\n\nfunction RSA_PSS_verify ( signature, data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_bits = this.key[0].bitLength,\n        hash_size = this.hash.HASH_SIZE,\n        message_length = Math.ceil( ( key_bits - 1 ) / 8 ),\n        salt_length = this.saltLength,\n        ps_length = message_length - salt_length - hash_size - 2;\n\n    RSA_encrypt.call( this, signature );\n\n    var message = this.result;\n    if ( message[message_length-1] !== 0xbc )\n        throw new SecurityError(\"bad signature\");\n\n    var h_block = message.subarray( message_length - hash_size - 1, message_length - 1 ),\n        d_block = message.subarray( 0, message_length - hash_size - 1 ),\n        d_salt = d_block.subarray( ps_length + 1 );\n\n    var zbits = 8*message_length - key_bits + 1;\n    if ( (zbits % 8) && (message[0] >>> (8-zbits)) )\n        throw new SecurityError(\"bad signature\");\n\n    var d_block_mask = RSA_MGF1_generate.call( this, h_block, d_block.length );\n    for ( var i = 0; i < d_block.length; i++ )\n        d_block[i] ^= d_block_mask[i];\n\n    if ( zbits % 8 ) message[0] &= (0xff >>> zbits);\n\n    for ( var i = 0; i < ps_length; i++ ) {\n        if ( d_block[i] !== 0 )\n            throw new SecurityError(\"bad signature\");\n    }\n    if ( d_block[ps_length] !== 1 )\n        throw new SecurityError(\"bad signature\");\n\n    var m_block = new Uint8Array( 8 + hash_size + salt_length ),\n        m_hash = m_block.subarray( 8, 8 + hash_size ),\n        m_salt = m_block.subarray( 8 + hash_size );\n\n    m_hash.set( this.hash.reset().process(data).finish().result );\n    m_salt.set( d_salt );\n\n    var h_block_verify = this.hash.reset().process(m_block).finish().result;\n    for ( var i = 0; i < hash_size; i++ ) {\n        if ( h_block[i] !== h_block_verify[i] )\n            throw new SecurityError(\"bad signature\");\n    }\n\n    return this;\n}\n\nfunction RSA_PKCS1_v1_5(options) {\n    options = options || {};\n\n    if (!options.hash)\n        throw new SyntaxError(\"option 'hash' is required\");\n\n    if (!options.hash.HASH_SIZE)\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\n\n    this.hash = options.hash;\n\n    this.reset(options);\n}\n\nfunction RSA_PKCS1_v1_5_reset(options) {\n    options = options || {};\n\n    RSA_reset.call(this, options);\n}\n\nvar HASH_PREFIXES = {\n    \"sha1\": new Uint8Array([0x30, 0x21, 0x30, 0x09, 0x06, 0x05, 0x2b, 0x0e, 0x03, 0x02, 0x1a, 0x05, 0x00, 0x04, 0x14]),\n    \"sha256\": new Uint8Array([0x30, 0x31, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x01, 0x05, 0x00, 0x04, 0x20]),\n    \"sha384\": new Uint8Array([0x30, 0x41, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x02, 0x05, 0x00, 0x04, 0x30]),\n    \"sha512\": new Uint8Array([0x30, 0x51, 0x30, 0x0d, 0x06, 0x09, 0x60, 0x86, 0x48, 0x01, 0x65, 0x03, 0x04, 0x02, 0x03, 0x05, 0x00, 0x04, 0x40]),\n}\n\nfunction getHashPrefix(hash) {\n    var hashName = hash.constructor.NAME;\n    var prefix = HASH_PREFIXES[hashName];\n    if (!prefix) {\n        throw new Error(\"Cannot get hash prefix for hash algorithm '\" + hashName + \"'\");\n    }\n    return prefix;\n}\n\nfunction RSA_PKCS1_v1_5_sign(data) {\n    if (!this.key) {\n        throw new IllegalStateError(\"no key is associated with the instance\");\n    }\n    var prefix = getHashPrefix(this.hash);\n    var hash_size = this.hash.HASH_SIZE;\n\n    var t_len = prefix.length + hash_size;\n    var k = (this.key[0].bitLength + 7) >> 3;\n    if (k < t_len + 11) {\n        throw new Error(\"Message too long\");\n    }\n\n    var m_hash = new Uint8Array(hash_size);\n    m_hash.set(this.hash.reset().process(data).finish().result);\n\n    // EM = 0x00 || 0x01 || PS || 0x00 || T\n    var em = new Uint8Array(k);\n    var i = 0;\n    em[i++] = 0; // 0x00\n    em[i++] = 1; // 0x01\n    // PS\n    for (i; i < k - t_len - 1; i++) {\n        em[i] = 0xff;\n    }\n    em[i++] = 0;\n    em.set(prefix, i); // 0x00\n    // T\n    em.set(m_hash, em.length - hash_size);\n\n    RSA_decrypt.call(this, em);\n\n    return this;\n}\n\nfunction RSA_PKCS1_v1_5_verify(signature, data) {\n    if (!this.key) {\n        throw new IllegalStateError(\"no key is associated with the instance\");\n    }\n    var prefix = getHashPrefix(this.hash);\n    var hash_size = this.hash.HASH_SIZE;\n\n    var t_len = prefix.length + hash_size;\n    var k = (this.key[0].bitLength + 7) >> 3;\n    if (k < t_len + 11) {\n        throw new SecurityError(\"Bad signature\");\n    }\n\n    RSA_encrypt.call(this, signature);\n\n    var m_hash = new Uint8Array(hash_size);\n    m_hash.set(this.hash.reset().process(data).finish().result);\n\n    var res = 1;\n    // EM = 0x00 || 0x01 || PS || 0x00 || T\n    var decryptedSignature = this.result;\n    var i = 0;\n    res &= decryptedSignature[i++] === 0; // 0x00\n    res &= decryptedSignature[i++] === 1; // 0x01\n    // PS\n    for (i; i < k - t_len - 1; i++) {\n        res &= decryptedSignature[i] === 0xff;\n    }\n    res &= decryptedSignature[i++] === 0; // 0x00\n    // T\n    var j = 0;\n    var n = i + prefix.length;\n    // prefix\n    for (i; i < n; i++) {\n        res &= decryptedSignature[i] === prefix[j++];\n    }\n    j = 0;\n    n = i + m_hash.length;\n    // hash\n    for (i; i < n; i++) {\n        res &= decryptedSignature[i] === m_hash[j++];\n    }\n\n    if (!res) {\n        throw new SecurityError(\"Bad signature\");\n    }\n\n    return this;\n}\n\nvar RSA_OAEP_prototype = RSA_OAEP.prototype;\nRSA_OAEP_prototype.reset = RSA_OAEP_reset;\nRSA_OAEP_prototype.encrypt = RSA_OAEP_encrypt;\nRSA_OAEP_prototype.decrypt = RSA_OAEP_decrypt;\n\nvar RSA_PSS_prototype = RSA_PSS.prototype;\nRSA_PSS_prototype.reset = RSA_PSS_reset;\nRSA_PSS_prototype.sign = RSA_PSS_sign;\nRSA_PSS_prototype.verify = RSA_PSS_verify;\n\nvar RSA_PKCS1_v1_5_prototype = RSA_PKCS1_v1_5.prototype;\nRSA_PKCS1_v1_5_prototype.reset = RSA_PKCS1_v1_5_reset;\nRSA_PKCS1_v1_5_prototype.sign = RSA_PKCS1_v1_5_sign;\nRSA_PKCS1_v1_5_prototype.verify = RSA_PKCS1_v1_5_verify;\n","var _global_console = typeof console !== 'undefined' ? console : undefined;\n\nvar _secure_origin = (typeof location === \"undefined\") || !location.protocol.search( /https:|file:|chrome:|chrome-extension:|moz-extension:/ );\n\nif ( !_secure_origin && _global_console !== undefined ) {\n    _global_console.warn(\"asmCrypto seems to be load from an insecure origin; this may cause to MitM-attack vulnerability. Consider using secure transport protocol.\");\n}\n"]}