{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","fineUploaderDnd","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","file","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","removeFileRef","record","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","uploadDataRecord","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","isResumable","hasResumeRecord","debug","pauseUpload","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","_onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","enableAuto","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","warnBeforeUnload","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","resetOnStatus","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","normalizedResponse","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","_getLocalStorageId","isAttemptingResume","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","getChunkSize","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","chunkingState","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","localStorageId","forEach","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","entityToSendParams","xhrOverrides","customParams","defaultParams","xhrOverrideParams","setUploadHeaders","headersOptions","headerOverrides","headerName","headerValue","extraHeaders","uploadChunkParams","toSend","promises","endpointHandler","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","includes","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","relatedTarget","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateDom","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListEl","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.16.0-RC3\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    // adapted from https://stackoverflow.com/a/23278460/486979\n    supportsFolderDrop = supportsFileDrop && (function() {\n        var input = document.createElement(\"input\");\n\n        input.type = \"file\";\n        return !!(\"webkitdirectory\" in (input || document.querySelectorAll(\"input[type=file]\")[0]));\n    }());\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status,\n                    file: spec.file\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        removeFileRef: function(id) {\n            var record = getDataByIds(id);\n\n            if (record) {\n                delete record.file;\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            var file = this._handler.getFile(fileOrBlobId);\n            var uploadDataRecord;\n\n            if (!file) {\n                uploadDataRecord = this._uploadData.retrieve({id: fileOrBlobId});\n\n                if (uploadDataRecord) {\n                    file = uploadDataRecord.file;\n                }\n            }\n\n            return file || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        isResumable: function(id) {\n            return this._handler.hasResumeRecord(id);\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n            this._uploadData.removeFileRef(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n\n            this._customResumeDataStore.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setCustomResumeData: function(id, data) {\n            this._customResumeDataStore.set(data, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._onUploadChunkSuccess(id, chunkData);\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData, customResumeData) {\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\n                    },\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self),\n                    setStatus: function(id, status) {\n                        self._uploadData.setStatus(id, status);\n                    }\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getCustomResumeData: function(fileId) {\n            return this._customResumeDataStore.get(fileId);\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({\n                uuid: uuid,\n                name: name,\n                size: size,\n                batchId: batchId,\n                file: file\n            });\n\n            this._handler.add(id, file);\n\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadChunkSuccess: function(id, chunkData) {\n            if (!this._preventRetries[id] && this._options.retry.enableAuto) {\n                this._autoRetries[id] = 0;\n            }\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n            warnBeforeUnload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                omitDefaultParams: false,\n                params: {},\n                paramsInBody: true,\n                requireSuccessJson: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData, customResumeData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: function(id) {\n                    return 2000000;\n                },\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null,\n\n                    headers: function(id) {\n                        return null;\n                    },\n\n                    jsonPayload: false,\n\n                    method: \"POST\",\n\n                    params: function(id) {\n                        return null;\n                    },\n\n                    resetOnStatus: []\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                },\n                customKeys: function(fileId) {\n                    return [];\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._options.warnBeforeUnload && this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n\n        this._customResumeDataStore = this._createStore();\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData, customResumeData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {},\n        isInProgress: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normalizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normalizedResponse.error, \"error\");\n\n                    if (\n                        normalizedResponse.reset ||\n                        (xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0)\n                    ) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {\n                        upload.cleanup(id, normalizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n            handler._getFileState(id).attemptingResume = false;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                fileState = handler._getFileState(id),\n                resuming = fileState.attemptingResume,\n                inProgressChunks = fileState.chunking.inProgress || [];\n\n            if (fileState.loaded == null) {\n                fileState.loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n\n                onUploadChunkPromise.then(\n                    function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        }\n                        else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n\n                            handler.uploadChunk(uploadChunkData).then(\n                                // upload chunk success\n                                function success(response, xhr) {\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                                    handler.clearCachedChunk(id, chunkIdx);\n\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                        responseToReport = upload.normalizeResponse(response, true),\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                                    if (inProgressChunkIdx >= 0) {\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\n                                    }\n\n                                    handler._maybePersistChunkedState(id);\n\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                        chunked.finalize(id);\n                                    }\n                                    else if (chunked.hasMoreParts(id)) {\n                                        chunked.sendNext(id);\n                                    }\n                                    else {\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                    }\n                                },\n\n                                // upload chunk failure\n                                function failure(response, xhr) {\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\n                                }\n                            )\n                                .done(function () {\n                                    handler.clearXhr(id, chunkIdx);\n                                });\n                        }\n                    },\n\n                    function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    }\n                );\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getCustomResumeData: options.getCustomResumeData,\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name).then(\n                function(response) {\n                    if (response && response.pause) {\n                        options.setStatus(id, qq.status.PAUSED);\n                        handler.pause(id);\n                        connectionManager.free(id);\n                    }\n                    else {\n                        if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                            chunked.sendNext(id);\n                        }\n                        else {\n                            simple.send(id, name);\n                        }\n                    }\n                },\n\n                function(error) {\n                    error = error || {};\n\n                    log(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error, \"error\");\n\n                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {\n                        var response = upload.normalizeResponse(error.responseJSON, false);\n                        upload.cleanup(id, response);\n                    }\n                }\n            );\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        hasResumeRecord: function(id) {\n            var key = handler.isValid(id) &&\n                handler._getLocalStorageId &&\n                handler._getLocalStorageId(id);\n\n            if (key) {\n                return !!localStorage.getItem(key);\n            }\n\n            return false;\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        isAttemptingResume: function(id) {\n            return !!handler.isAttemptingResume && handler.isAttemptingResume(id);\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        getChunkSize = function(id) {\n            var fileState = handler._getFileState(id);\n\n            if (fileState.chunkSize) {\n                return fileState.chunkSize;\n            }\n\n            else {\n                var chunkSize = chunking.partSize;\n\n                if (qq.isFunction(chunkSize)) {\n                    chunkSize = chunkSize(id, getSize(id));\n                }\n\n                fileState.chunkSize = chunkSize;\n                return chunkSize;\n            }\n        },\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log,\n        getCustomResumeData = proxy.getCustomResumeData;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                if (uploadData.customResumeData) {\n                    data.customResumeData = uploadData.customResumeData;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isAttemptingResume: function(id) {\n            return handler._getFileState(id).attemptingResume;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) &&\n                !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var fileState = handler._getFileState(id) || {},\n                chunkingState =  fileState.chunking || {},\n                inProgress = optInProgress || chunkingState.inProgress,\n                remaining = optRemaining || chunkingState.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = getChunkSize(id),\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/FineUploader/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = getChunkSize(id),\n                endpoint = getEndpoint(id),\n                customKeys = resume.customKeys(id),\n                localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n\n            customKeys.forEach(function(key) {\n                localStorageId += \"-\" + key;\n            });\n\n            return localStorageId;\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = getChunkSize(id);\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.customResumeData = persistedData.customResumeData;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                var customResumeData = getCustomResumeData(id);\n\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now(),\n                };\n\n                if (customResumeData) {\n                    persistedData.customResumeData = customResumeData;\n                }\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.chunking.paramNames.partIndex] = chunkData.part;\n                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n                params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n                params[spec.chunking.paramNames.totalParts] = chunkData.count;\n                params[spec.totalFileSizeName] = size;\n            }\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            headers: spec.chunking.success.headers,\n            jsonPayload: spec.chunking.success.jsonPayload,\n            log: log,\n            method: spec.chunking.success.method,\n            params: spec.chunking.success.params\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                (spec.requireSuccessJson && !response.success) ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && spec.requireSuccessJson && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(entityToSendParams) {\n            var fileOrBlob = entityToSendParams.fileOrBlob;\n            var id = entityToSendParams.id;\n            var xhr = entityToSendParams.xhr;\n            var xhrOverrides = entityToSendParams.xhrOverrides || {};\n            var customParams = entityToSendParams.customParams || {};\n            var defaultParams = entityToSendParams.params || {};\n            var xhrOverrideParams = xhrOverrides.params || {};\n            var params;\n\n            var formData = multipart ? new FormData() : null,\n                method = xhrOverrides.method || spec.method,\n                endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            if (spec.omitDefaultParams) {\n                params = qq.extend({}, customParams);\n                qq.extend(params, xhrOverrideParams);\n            }\n            else {\n                params = qq.extend({}, customParams);\n                qq.extend(params, xhrOverrideParams);\n                qq.extend(params, defaultParams);\n\n                params[spec.uuidName] = getUuid(id);\n                params[spec.filenameParam] = name;\n\n                if (multipart) {\n                    params[spec.totalFileSizeName] = size;\n                }\n                else if (!spec.paramsInBody) {\n                    params[spec.inputName] = name;\n                }\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(headersOptions) {\n            var headerOverrides = headersOptions.headerOverrides;\n            var id = headersOptions.id;\n            var xhr = headersOptions.xhr;\n\n            if (headerOverrides) {\n                qq.each(headerOverrides, function(headerName, headerValue) {\n                    xhr.setRequestHeader(headerName, headerValue);\n                });\n            }\n            else {\n                var extraHeaders = spec.customHeaders.get(id),\n                    fileOrBlob = handler.getFile(id);\n\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n                if (!multipart) {\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                    //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                    xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n                }\n\n                qq.each(extraHeaders, function(name, val) {\n                    xhr.setRequestHeader(name, val);\n                });\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(uploadChunkParams) {\n            var id = uploadChunkParams.id;\n            var chunkIdx = uploadChunkParams.chunkIdx;\n            var overrides = uploadChunkParams.overrides || {};\n            var resuming = uploadChunkParams.resuming;\n\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                promise, toSend, customParams, params = {};\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            customParams = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: chunkData.blob,\n                id: id,\n                customParams: customParams,\n                params: params,\n                xhr: xhr,\n                xhrOverrides: overrides\n            });\n\n            setUploadHeaders({\n                headerOverrides: overrides.headers,\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, customParams, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            customParams = spec.paramsStore.get(id);\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: fileOrBlob,\n                id: id,\n                customParams: customParams,\n                xhr: xhr\n            });\n\n            setUploadHeaders({\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {},\n            method: \"POST\"\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                if (qq.isFunction(options.endpoint)) {\n                    return options.endpoint(id);\n                }\n\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        contentType: options.jsonPayload ? \"application/json\" : \"application/x-www-form-urlencoded\",\n        validMethods: [options.method],\n        method: options.method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(options.params(id) || params)\n                .withHeaders(options.headers(id) || headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            if (isFileDrag(e)) {\n                e.preventDefault();\n                maybeHideDropZones();\n            }\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest &&\n                (\n                    (dt.files && dt.files.length) ||                                     // Valid for drop events with files\n                    (!isSafari && dt.types.contains && dt.types.contains(\"Files\")) ||  // Valid in Chrome/Firefox\n                    (dt.types.includes && dt.types.includes(\"Files\"))               // Valid in IE\n                );\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n\n    this._testing = {};\n    this._testing.isValidFileDrag = isValidFileDrag;\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateDom,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListEl,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListEl = fileListNode.children[0].cloneNode(true);\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: tempTemplateEl,\n                fileTemplate: fileListEl\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateDom = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.appendChild(templateDom.template.cloneNode(true));\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            container.innerHTML = \"\";\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = templateDom.fileTemplate.cloneNode(true),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}