{"version":3,"sources":["?","../client/js/jquery-plugin.js","../client/js/jquery-dnd.js","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","$","init","options","xformedOpts","transformVariables","newUploaderInstance","getNewUploaderInstance","uploader","addCallbacks","$el","params","uploaderType","pluginOption","namespace","charAt","toUpperCase","slice","toLowerCase","qq","FineUploader","dataStore","key","val","data","undefined","instanceToStore","option","optionVal","transformedOpts","callbacks","each","_options","prop","nonJqueryCallback","name","callbackEventTarget","exec","substring","nonJqueryCallbackRetVal","jqueryEventCallbackRetVal","originalArgs","Array","prototype","call","arguments","transformedArgs","idx","arg","push","maybeWrapInJquery","apply","this","triggerHandler","error","log","message","source","dest","xformed","arrayVals","element","inArray","pluginOptions","isPlainObject","isArray","arrayVal","arrayObjDest","merge","isValidCommand","command","type","match","delegateCommand","retVal","xformedArgs","origArgs","transformedVal","nodeType","cloneNode","fn","fineUploader","optionsOrCommand","self","selfArgs","retVals","index","el","length","jQuery","dropZoneElements","dnd","DragAndDrop","func","$callbackEl","args","fineUploaderDnd","hide","style","display","attach","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","getFirstByClass","children","child","firstChild","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","getAttribute","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","Uint8Array","character","charCodeAt","level","console","isObject","variable","Object","toString","isFunction","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","newStr","nextIdxToReplace","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","override","target","sourceFn","super_","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","Storage","getItem","bind","oldFunc","context","newArgs","concat","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","title","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","localStorageId","forEach","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","entityToSendParams","xhrOverrides","setUploadHeaders","headersOptions","headerOverrides","headerName","headerValue","extraHeaders","uploadChunkParams","toSend","promises","endpointHandler","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"jquery.fine-uploader.min.js","sourcesContent":[null,"/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var $el,\n        pluginOptions = [\"uploaderType\", \"endpointType\"];\n\n    function init(options) {\n        var xformedOpts = transformVariables(options || {}),\n            newUploaderInstance = getNewUploaderInstance(xformedOpts);\n\n        uploader(newUploaderInstance);\n        addCallbacks(xformedOpts, newUploaderInstance);\n\n        return $el;\n    }\n\n    function getNewUploaderInstance(params) {\n        var uploaderType = pluginOption(\"uploaderType\"),\n            namespace = pluginOption(\"endpointType\");\n\n        // If the integrator has defined a specific type of uploader to load, use that, otherwise assume `qq.FineUploader`\n        if (uploaderType) {\n            // We can determine the correct constructor function to invoke by combining \"FineUploader\"\n            // with the upper camel cased `uploaderType` value.\n            uploaderType = uploaderType.charAt(0).toUpperCase() + uploaderType.slice(1).toLowerCase();\n\n            if (namespace) {\n                return new qq[namespace][\"FineUploader\" + uploaderType](params);\n            }\n\n            return new qq[\"FineUploader\" + uploaderType](params);\n        }\n        else {\n            if (namespace) {\n                return new qq[namespace].FineUploader(params);\n            }\n\n            return new qq.FineUploader(params);\n        }\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(\"fineuploader\");\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(\"fineuploader\", data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    //the underlying Fine Uploader instance is stored in jQuery's data stored, associated with the element\n    // tied to this instance of the plug-in\n    function uploader(instanceToStore) {\n        return dataStore(\"uploader\", instanceToStore);\n    }\n\n    function pluginOption(option, optionVal) {\n        return dataStore(option, optionVal);\n    }\n\n    // Implement all callbacks defined in Fine Uploader as functions that trigger appropriately names events and\n    // return the result of executing the bound handler back to Fine Uploader\n    function addCallbacks(transformedOpts, newUploaderInstance) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(newUploaderInstance._options.callbacks, function(prop, nonJqueryCallback) {\n            var name, callbackEventTarget;\n\n            name = /^on(\\w+)/.exec(prop)[1];\n            name = name.substring(0, 1).toLowerCase() + name.substring(1);\n            callbackEventTarget = $el;\n\n            callbacks[prop] = function() {\n                var originalArgs = Array.prototype.slice.call(arguments),\n                    transformedArgs = [],\n                    nonJqueryCallbackRetVal, jqueryEventCallbackRetVal;\n\n                $.each(originalArgs, function(idx, arg) {\n                    transformedArgs.push(maybeWrapInJquery(arg));\n                });\n\n                nonJqueryCallbackRetVal = nonJqueryCallback.apply(this, originalArgs);\n\n                try {\n                    jqueryEventCallbackRetVal = callbackEventTarget.triggerHandler(name, transformedArgs);\n                }\n                catch (error) {\n                    qq.log(\"Caught error in Fine Uploader jQuery event handler: \" + error.message, \"error\");\n                }\n\n                /*jshint -W116*/\n                if (nonJqueryCallbackRetVal != null) {\n                    return nonJqueryCallbackRetVal;\n                }\n                return jqueryEventCallbackRetVal;\n            };\n        });\n\n        newUploaderInstance._options.callbacks = callbacks;\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            if (source.uploaderType !== \"basic\") {\n                xformed = { element: $el[0] };\n            }\n            else {\n                xformed = {};\n            }\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if ($.inArray(prop, pluginOptions) >= 0) {\n                pluginOption(prop, val);\n            }\n            else if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    var arrayObjDest = {};\n\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else if ($.isPlainObject(arrayVal)) {\n                        transformVariables(arrayVal, arrayObjDest);\n                        arrayVals.push(arrayObjDest);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            !command.match(/^_/) && //enforce private methods convention\n            uploader()[command] !== undefined;\n    }\n\n    // Assuming we have already verified that this is a valid command, call the associated function in the underlying\n    // Fine Uploader instance (passing along the arguments from the caller) and return the result of the call back to the caller\n    function delegateCommand(command) {\n        var xformedArgs = [],\n            origArgs = Array.prototype.slice.call(arguments, 1),\n            retVal;\n\n        transformVariables(origArgs, xformedArgs);\n\n        retVal = uploader()[command].apply(uploader(), xformedArgs);\n\n        return maybeWrapInJquery(retVal);\n    }\n\n    // If the value is an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n    function maybeWrapInJquery(val) {\n        var transformedVal = val;\n\n        // If the command is returning an `HTMLElement` or `HTMLDocument`, wrap it in a `jQuery` object\n        /*jshint -W116*/\n        if (val != null && typeof val === \"object\" &&\n           (val.nodeType === 1 || val.nodeType === 9) && val.cloneNode) {\n\n            transformedVal = $(val);\n        }\n\n        return transformedVal;\n    }\n\n    $.fn.fineUploader = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (uploader() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist on jQuery.fineUploader\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals jQuery, qq*/\n(function($) {\n    \"use strict\";\n    var rootDataKey = \"fineUploaderDnd\",\n        $el;\n\n    function init(options) {\n        if (!options) {\n            options = {};\n        }\n\n        options.dropZoneElements = [$el];\n        var xformedOpts = transformVariables(options);\n        addCallbacks(xformedOpts);\n        dnd(new qq.DragAndDrop(xformedOpts));\n\n        return $el;\n    }\n\n    function dataStore(key, val) {\n        var data = $el.data(rootDataKey);\n\n        if (val) {\n            if (data === undefined) {\n                data = {};\n            }\n            data[key] = val;\n            $el.data(rootDataKey, data);\n        }\n        else {\n            if (data === undefined) {\n                return null;\n            }\n            return data[key];\n        }\n    }\n\n    function dnd(instanceToStore) {\n        return dataStore(\"dndInstance\", instanceToStore);\n    }\n\n    function addCallbacks(transformedOpts) {\n        var callbacks = transformedOpts.callbacks = {};\n\n        $.each(new qq.DragAndDrop.callbacks(), function(prop, func) {\n            var name = prop,\n                $callbackEl;\n\n            $callbackEl = $el;\n\n            callbacks[prop] = function() {\n                var args = Array.prototype.slice.call(arguments),\n                    jqueryHandlerResult = $callbackEl.triggerHandler(name, args);\n\n                return jqueryHandlerResult;\n            };\n        });\n    }\n\n    //transform jQuery objects into HTMLElements, and pass along all other option properties\n    function transformVariables(source, dest) {\n        var xformed, arrayVals;\n\n        if (dest === undefined) {\n            xformed = {};\n        }\n        else {\n            xformed = dest;\n        }\n\n        $.each(source, function(prop, val) {\n            if (val instanceof $) {\n                xformed[prop] = val[0];\n            }\n            else if ($.isPlainObject(val)) {\n                xformed[prop] = {};\n                transformVariables(val, xformed[prop]);\n            }\n            else if ($.isArray(val)) {\n                arrayVals = [];\n                $.each(val, function(idx, arrayVal) {\n                    if (arrayVal instanceof $) {\n                        $.merge(arrayVals, arrayVal);\n                    }\n                    else {\n                        arrayVals.push(arrayVal);\n                    }\n                });\n                xformed[prop] = arrayVals;\n            }\n            else {\n                xformed[prop] = val;\n            }\n        });\n\n        if (dest === undefined) {\n            return xformed;\n        }\n    }\n\n    function isValidCommand(command) {\n        return $.type(command) === \"string\" &&\n            command === \"dispose\" &&\n            dnd()[command] !== undefined;\n    }\n\n    function delegateCommand(command) {\n        var xformedArgs = [], origArgs = Array.prototype.slice.call(arguments, 1);\n        transformVariables(origArgs, xformedArgs);\n        return dnd()[command].apply(dnd(), xformedArgs);\n    }\n\n    $.fn.fineUploaderDnd = function(optionsOrCommand) {\n        var self = this, selfArgs = arguments, retVals = [];\n\n        this.each(function(index, el) {\n            $el = $(el);\n\n            if (dnd() && isValidCommand(optionsOrCommand)) {\n                retVals.push(delegateCommand.apply(self, selfArgs));\n\n                if (self.length === 1) {\n                    return false;\n                }\n            }\n            else if (typeof optionsOrCommand === \"object\" || !optionsOrCommand) {\n                init.apply(self, selfArgs);\n            }\n            else {\n                $.error(\"Method \" +  optionsOrCommand + \" does not exist in Fine Uploader's DnD module.\");\n            }\n        });\n\n        if (retVals.length === 1) {\n            return retVals[0];\n        }\n        else if (retVals.length > 1) {\n            return retVals;\n        }\n\n        return this;\n    };\n\n}(jQuery));\n","/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.16.0-alpha.3\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n\n            this._customResumeDataStore.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setCustomResumeData: function(id, data) {\n            this._customResumeDataStore.set(data, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData, customResumeData) {\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\n                    },\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self)\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getCustomResumeData: function(fileId) {\n            return this._customResumeDataStore.get(fileId);\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                omitDefaultParams: false,\n                params: {},\n                paramsInBody: true,\n                requireSuccessJson: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData, customResumeData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null,\n\n                    headers: function(id) {\n                        return null;\n                    },\n\n                    jsonPayload: false,\n\n                    method: \"POST\",\n\n                    params: function(id) {\n                        return null;\n                    }\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                },\n                customKeys: function(fileId) {\n                    return [];\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n\n        this._customResumeDataStore = this._createStore();\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData, customResumeData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {},\n        isInProgress: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                fileState = handler._getFileState(id),\n                resuming = fileState.attemptingResume,\n                inProgressChunks = fileState.chunking.inProgress || [];\n\n            if (fileState.loaded == null) {\n                fileState.loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n\n                onUploadChunkPromise.then(\n                    function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        }\n                        else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n\n                            handler.uploadChunk(uploadChunkData).then(\n                                // upload chunk success\n                                function success(response, xhr) {\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                                    handler.clearCachedChunk(id, chunkIdx);\n\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                        responseToReport = upload.normalizeResponse(response, true),\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                                    if (inProgressChunkIdx >= 0) {\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\n                                    }\n\n                                    handler._maybePersistChunkedState(id);\n\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                        chunked.finalize(id);\n                                    }\n                                    else if (chunked.hasMoreParts(id)) {\n                                        chunked.sendNext(id);\n                                    }\n                                    else {\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                    }\n                                },\n\n                                // upload chunk failure\n                                function failure(response, xhr) {\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\n                                }\n                            )\n                                .done(function () {\n                                    handler.clearXhr(id, chunkIdx);\n                                });\n                        }\n                    },\n\n                    function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    }\n                );\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getCustomResumeData: options.getCustomResumeData,\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            var onUploadPromise = options.onUpload(id, name);\n\n            onUploadPromise.then(\n                function() {\n                    if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                        chunked.sendNext(id);\n                    }\n                    else {\n                        simple.send(id, name);\n                    }\n                },\n\n                function(error) {\n                    throw new qq.Error(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error);\n                }\n            );\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log,\n        getCustomResumeData = proxy.getCustomResumeData;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id),\n                customKeys = resume.customKeys(id),\n                localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n\n            customKeys.forEach(function(key) {\n                localStorageId += \"-\" + key;\n            });\n\n            return localStorageId;\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.customResumeData = persistedData.customResumeData;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                var customResumeData = getCustomResumeData(id);\n\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now(),\n                };\n\n                if (customResumeData) {\n                    persistedData.customResumeData = customResumeData;\n                }\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.chunking.paramNames.partIndex] = chunkData.part;\n                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n                params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n                params[spec.chunking.paramNames.totalParts] = chunkData.count;\n                params[spec.totalFileSizeName] = size;\n            }\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            headers: spec.chunking.success.headers,\n            jsonPayload: spec.chunking.success.jsonPayload,\n            log: log,\n            method: spec.chunking.success.method,\n            params: spec.chunking.success.params\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                (spec.requireSuccessJson && !response.success) ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && spec.requireSuccessJson && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(entityToSendParams) {\n            var fileOrBlob = entityToSendParams.fileOrBlob;\n            var id = entityToSendParams.id;\n            var xhr = entityToSendParams.xhr;\n            var xhrOverrides = entityToSendParams.xhrOverrides || {};\n\n            var params = xhrOverrides.params || entityToSendParams.params;\n\n            var formData = multipart ? new FormData() : null,\n                method = xhrOverrides.method || spec.method,\n                endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.uuidName] = getUuid(id);\n                params[spec.filenameParam] = name;\n            }\n\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart && !spec.omitDefaultParams) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(headersOptions) {\n            var headerOverrides = headersOptions.headerOverrides;\n            var id = headersOptions.id;\n            var xhr = headersOptions.xhr;\n\n            if (headerOverrides) {\n                qq.each(headerOverrides, function(headerName, headerValue) {\n                    xhr.setRequestHeader(headerName, headerValue);\n                });\n            }\n            else {\n                var extraHeaders = spec.customHeaders.get(id),\n                    fileOrBlob = handler.getFile(id);\n\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n                if (!multipart) {\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                    //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                    xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n                }\n\n                qq.each(extraHeaders, function(name, val) {\n                    xhr.setRequestHeader(name, val);\n                });\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(uploadChunkParams) {\n            var id = uploadChunkParams.id;\n            var chunkIdx = uploadChunkParams.chunkIdx;\n            var overrides = uploadChunkParams.overrides || {};\n            var resuming = uploadChunkParams.resuming;\n\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming && !spec.omitDefaultParams) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: chunkData.blob,\n                id: id,\n                params: params,\n                xhr: xhr,\n                xhrOverrides: overrides\n            });\n\n            setUploadHeaders({\n                headerOverrides: overrides.headers,\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: fileOrBlob,\n                id: id,\n                params: params,\n                xhr: xhr\n            });\n\n            setUploadHeaders({\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {},\n            method: \"POST\"\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                if (qq.isFunction(options.endpoint)) {\n                    return options.endpoint(id);\n                }\n\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        contentType: options.jsonPayload ? \"application/json\" : \"application/x-www-form-urlencoded\",\n        validMethods: [options.method],\n        method: options.method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(options.params(id) || params)\n                .withHeaders(options.headers(id) || headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}