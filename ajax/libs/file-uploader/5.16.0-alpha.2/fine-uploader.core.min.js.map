{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","substring","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","onResume","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","recordsExpireIn","resuming","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","_getMimeType","_getPersistableData","ceil","_markNotResumable","localStorageId","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","entityToSendParams","xhrOverrides","setUploadHeaders","headersOptions","headerOverrides","headerName","headerValue","extraHeaders","uploadChunkParams","toSend","promises","endpointHandler"],"mappings":"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","file":"fine-uploader.core.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.16.0-alpha.2\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData) {\n                        return self._options.callbacks.onResume(id, name, chunkData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\n                    }\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id, name, responseJSON)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id, name, responseJSON) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                omitDefaultParams: false,\n                params: {},\n                paramsInBody: true,\n                requireSuccessJson: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null,\n\n                    headers: function(id) {\n                        return null;\n                    },\n\n                    jsonPayload: false,\n\n                    method: \"POST\",\n\n                    params: function(id) {\n                        return null;\n                    }\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {},\n        isInProgress: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normaizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normaizedResponse.error, \"error\");\n\n                    if (normaizedResponse.reset) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normaizedResponse, xhr)) {\n                        upload.cleanup(id, normaizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                resuming = handler._getFileState(id).attemptingResume,\n                inProgressChunks = handler._getFileState(id).chunking.inProgress || [];\n\n            if (handler._getFileState(id).loaded == null) {\n                handler._getFileState(id).loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n\n                onUploadChunkPromise.then(\n                    function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        }\n                        else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n\n                            handler.uploadChunk(uploadChunkData).then(\n                                // upload chunk success\n                                function success(response, xhr) {\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                                    handler.clearCachedChunk(id, chunkIdx);\n\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                        responseToReport = upload.normalizeResponse(response, true),\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                                    if (inProgressChunkIdx >= 0) {\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\n                                    }\n\n                                    handler._maybePersistChunkedState(id);\n\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                        chunked.finalize(id);\n                                    }\n                                    else if (chunked.hasMoreParts(id)) {\n                                        chunked.sendNext(id);\n                                    }\n                                    else {\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                    }\n                                },\n\n                                // upload chunk failure\n                                function failure(response, xhr) {\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\n                                }\n                            )\n                                .done(function () {\n                                    handler.clearXhr(id, chunkIdx);\n                                });\n                        }\n                    },\n\n                    function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    }\n                );\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            var onUploadPromise = options.onUpload(id, name);\n\n            onUploadPromise.then(\n                function() {\n                    if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                        chunked.sendNext(id);\n                    }\n                    else {\n                        simple.send(id, name);\n                    }\n                },\n\n                function(error) {\n                    throw new qq.Error(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error);\n                }\n            );\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) && !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id);\n\n            return qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now()\n                };\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.chunking.paramNames.partIndex] = chunkData.part;\n                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n                params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n                params[spec.chunking.paramNames.totalParts] = chunkData.count;\n                params[spec.totalFileSizeName] = size;\n            }\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            headers: spec.chunking.success.headers,\n            jsonPayload: spec.chunking.success.jsonPayload,\n            log: log,\n            method: spec.chunking.success.method,\n            params: spec.chunking.success.params\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                (spec.requireSuccessJson && !response.success) ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && spec.requireSuccessJson && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(entityToSendParams) {\n            var fileOrBlob = entityToSendParams.fileOrBlob;\n            var id = entityToSendParams.id;\n            var xhr = entityToSendParams.xhr;\n            var xhrOverrides = entityToSendParams.xhrOverrides || {};\n\n            var params = xhrOverrides.params || entityToSendParams.params;\n\n            var formData = multipart ? new FormData() : null,\n                method = xhrOverrides.method || spec.method,\n                endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.uuidName] = getUuid(id);\n                params[spec.filenameParam] = name;\n            }\n\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart && !spec.omitDefaultParams) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(headersOptions) {\n            var headerOverrides = headersOptions.headerOverrides;\n            var id = headersOptions.id;\n            var xhr = headersOptions.xhr;\n\n            if (headerOverrides) {\n                qq.each(headerOverrides, function(headerName, headerValue) {\n                    xhr.setRequestHeader(headerName, headerValue);\n                });\n            }\n            else {\n                var extraHeaders = spec.customHeaders.get(id),\n                    fileOrBlob = handler.getFile(id);\n\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n                if (!multipart) {\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                    //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                    xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n                }\n\n                qq.each(extraHeaders, function(name, val) {\n                    xhr.setRequestHeader(name, val);\n                });\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(uploadChunkParams) {\n            var id = uploadChunkParams.id;\n            var chunkIdx = uploadChunkParams.chunkIdx;\n            var overrides = uploadChunkParams.overrides || {};\n            var resuming = uploadChunkParams.resuming;\n\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming && !spec.omitDefaultParams) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: chunkData.blob,\n                id: id,\n                params: params,\n                xhr: xhr,\n                xhrOverrides: overrides\n            });\n\n            setUploadHeaders({\n                headerOverrides: overrides.headers,\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: fileOrBlob,\n                id: id,\n                params: params,\n                xhr: xhr\n            });\n\n            setUploadHeaders({\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {},\n            method: \"POST\"\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                if (qq.isFunction(options.endpoint)) {\n                    return options.endpoint(id);\n                }\n\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        contentType: options.jsonPayload ? \"application/json\" : \"application/x-www-form-urlencoded\",\n        validMethods: [options.method],\n        method: options.method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(options.params(id) || params)\n                .withHeaders(options.headers(id) || headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n"]}