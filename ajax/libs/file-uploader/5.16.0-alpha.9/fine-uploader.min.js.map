{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/traditional/traditional.form.upload.handler.js","../client/js/traditional/traditional.xhr.upload.handler.js","../client/js/traditional/all-chunks-done.ajax.requester.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","substring","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","resetOnStatus","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","normalizedResponse","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","isResumable","isAttemptingResume","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","_getLocalStorageId","localStorageId","forEach","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","getIframeContentJson","doc","innerHtml","contentWindow","nodeValue","createForm","responseFromMessage","multipart","addChunkingSpecificParams","allChunksDoneRequester","AllChunksDoneAjaxRequester","createReadyStateChangedHandler","onUploadOrChunkComplete","getChunksCompleteParams","isErrorUploadResponse","parseResponse","sendChunksCompleteRequest","complete","setParamsAndGetEntityToSend","entityToSendParams","xhrOverrides","setUploadHeaders","headersOptions","headerOverrides","headerName","headerValue","extraHeaders","uploadChunkParams","toSend","promises","endpointHandler","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","fileBatch","content","createDocumentFragment","map","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","update","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":"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","file":"fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.16.0-alpha.9\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n\n            this._customResumeDataStore.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setCustomResumeData: function(id, data) {\n            this._customResumeDataStore.set(data, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData, customResumeData) {\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\n                    },\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self)\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getCustomResumeData: function(fileId) {\n            return this._customResumeDataStore.get(fileId);\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                omitDefaultParams: false,\n                params: {},\n                paramsInBody: true,\n                requireSuccessJson: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData, customResumeData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: 2000000,\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null,\n\n                    headers: function(id) {\n                        return null;\n                    },\n\n                    jsonPayload: false,\n\n                    method: \"POST\",\n\n                    params: function(id) {\n                        return null;\n                    },\n\n                    resetOnStatus: []\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                },\n                customKeys: function(fileId) {\n                    return [];\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n\n        this._customResumeDataStore = this._createStore();\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData, customResumeData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {},\n        isInProgress: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normalizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normalizedResponse.error, \"error\");\n\n                    if (\n                        normalizedResponse.reset\n                        || (xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0)\n                    ) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {\n                        upload.cleanup(id, normalizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n            handler._getFileState(id).attemptingResume = false;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                fileState = handler._getFileState(id),\n                resuming = fileState.attemptingResume,\n                inProgressChunks = fileState.chunking.inProgress || [];\n\n            if (fileState.loaded == null) {\n                fileState.loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n\n                onUploadChunkPromise.then(\n                    function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        }\n                        else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n\n                            handler.uploadChunk(uploadChunkData).then(\n                                // upload chunk success\n                                function success(response, xhr) {\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                                    handler.clearCachedChunk(id, chunkIdx);\n\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                        responseToReport = upload.normalizeResponse(response, true),\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                                    if (inProgressChunkIdx >= 0) {\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\n                                    }\n\n                                    handler._maybePersistChunkedState(id);\n\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                        chunked.finalize(id);\n                                    }\n                                    else if (chunked.hasMoreParts(id)) {\n                                        chunked.sendNext(id);\n                                    }\n                                    else {\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                    }\n                                },\n\n                                // upload chunk failure\n                                function failure(response, xhr) {\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\n                                }\n                            )\n                                .done(function () {\n                                    handler.clearXhr(id, chunkIdx);\n                                });\n                        }\n                    },\n\n                    function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    }\n                );\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getCustomResumeData: options.getCustomResumeData,\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            var onUploadPromise = options.onUpload(id, name);\n\n            onUploadPromise.then(\n                function() {\n                    if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                        chunked.sendNext(id);\n                    }\n                    else {\n                        simple.send(id, name);\n                    }\n                },\n\n                function(error) {\n                    error = error || {};\n\n                    log(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error, \"error\");\n\n                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {\n                        var response = upload.normalizeResponse(error.responseJSON, false);\n                        upload.cleanup(id, response);\n                    }\n                }\n            );\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        isAttemptingResume: function(id) {\n            return !!handler.isAttemptingResume && handler.isAttemptingResume(id);\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log,\n        getCustomResumeData = proxy.getCustomResumeData;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                if (uploadData.customResumeData) {\n                    data.customResumeData = uploadData.customResumeData;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isAttemptingResume: function(id) {\n            return handler._getFileState(id).attemptingResume;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id)\n                && !handler._getFileState(id).notResumable\n                && handler._getFileState(id).loaded > 0;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var inProgress = optInProgress || handler._getFileState(id).chunking.inProgress,\n                remaining = optRemaining || handler._getFileState(id).chunking.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = chunking.partSize,\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = chunking.partSize,\n                endpoint = getEndpoint(id),\n                customKeys = resume.customKeys(id),\n                localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n\n            customKeys.forEach(function(key) {\n                localStorageId += \"-\" + key;\n            });\n\n            return localStorageId;\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = chunking.partSize;\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.customResumeData = persistedData.customResumeData;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                var customResumeData = getCustomResumeData(id);\n\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now(),\n                };\n\n                if (customResumeData) {\n                    persistedData.customResumeData = customResumeData;\n                }\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*globals qq*/\n/**\n * Upload handler used that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to\n * a generic server.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log;\n\n    /**\n     * Returns json object received by iframe from server.\n     */\n    function getIframeContentJson(id, iframe) {\n        /*jshint evil: true*/\n\n        var response, doc, innerHtml;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            log(\"converting iframe's innerHTML to JSON\");\n            log(\"innerHTML = \" + innerHtml);\n            //plain text response may be wrapped in <pre> tag\n            if (innerHtml && innerHtml.match(/^<pre/i)) {\n                innerHtml = doc.body.firstChild.firstChild.nodeValue;\n            }\n\n            response = handler._parseJsonResponse(innerHtml);\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n            response = {success: false};\n        }\n\n        return response;\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var params = options.paramsStore.get(id),\n            method = options.method.toLowerCase() === \"get\" ? \"GET\" : \"POST\",\n            endpoint = options.endpointStore.get(id),\n            name = getName(id);\n\n        params[options.uuidName] = getUuid(id);\n        params[options.filenameParam] = name;\n\n        return handler._initFormForUpload({\n            method: method,\n            endpoint: endpoint,\n            params: params,\n            paramsInBody: options.paramsInBody,\n            targetName: iframe.name\n        });\n    }\n\n    this.uploadFile = function(id) {\n        var input = handler.getInput(id),\n            iframe = handler._createIframe(id),\n            promise = new qq.Promise(),\n            form;\n\n        form = createForm(id, iframe);\n        form.appendChild(input);\n\n        handler._attachLoadEvent(iframe, function(responseFromMessage) {\n            log(\"iframe loaded\");\n\n            var response = responseFromMessage ? responseFromMessage : getIframeContentJson(id, iframe);\n\n            handler._detachLoadEvent(id);\n\n            //we can't remove an iframe if the iframe doesn't belong to the same domain\n            if (!options.cors.expected) {\n                qq(iframe).remove();\n            }\n\n            if (response.success) {\n                promise.success(response);\n            }\n            else {\n                promise.failure(response);\n            }\n        });\n\n        log(\"Sending upload request for \" + id);\n        form.submit();\n        qq(form).remove();\n\n        return promise;\n    };\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: options.cors.expected,\n            inputName: options.inputName\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n};\n","/*globals qq*/\n/**\n * Upload handler used to upload to traditional endpoints.  It depends on File API support, and, therefore,\n * makes use of `XMLHttpRequest` level 2 to upload `File`s and `Blob`s to a generic server.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.traditional = qq.traditional || {};\nqq.traditional.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        multipart = spec.forceMultipart || spec.paramsInBody,\n\n        addChunkingSpecificParams = function(id, params, chunkData) {\n            var size = getSize(id),\n                name = getName(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.chunking.paramNames.partIndex] = chunkData.part;\n                params[spec.chunking.paramNames.partByteOffset] = chunkData.start;\n                params[spec.chunking.paramNames.chunkSize] = chunkData.size;\n                params[spec.chunking.paramNames.totalParts] = chunkData.count;\n                params[spec.totalFileSizeName] = size;\n            }\n\n            /**\n             * When a Blob is sent in a multipart request, the filename value in the content-disposition header is either \"blob\"\n             * or an empty string.  So, we will need to include the actual file name as a param in this case.\n             */\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.filenameParam] = name;\n            }\n        },\n\n        allChunksDoneRequester = new qq.traditional.AllChunksDoneAjaxRequester({\n            cors: spec.cors,\n            endpoint: spec.chunking.success.endpoint,\n            headers: spec.chunking.success.headers,\n            jsonPayload: spec.chunking.success.jsonPayload,\n            log: log,\n            method: spec.chunking.success.method,\n            params: spec.chunking.success.params\n        }),\n\n        createReadyStateChangedHandler = function(id, xhr) {\n            var promise = new qq.Promise();\n\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    var result = onUploadOrChunkComplete(id, xhr);\n\n                    if (result.success) {\n                        promise.success(result.response, xhr);\n                    }\n                    else {\n                        promise.failure(result.response, xhr);\n                    }\n                }\n            };\n\n            return promise;\n        },\n\n        getChunksCompleteParams = function(id) {\n            var params = spec.paramsStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            params[spec.uuidName] = getUuid(id);\n            params[spec.filenameParam] = name;\n            params[spec.totalFileSizeName] = size;\n            params[spec.chunking.paramNames.totalParts] = handler._getTotalChunks(id);\n\n            return params;\n        },\n\n        isErrorUploadResponse = function(xhr, response) {\n            return qq.indexOf([200, 201, 202, 203, 204], xhr.status) < 0 ||\n                (spec.requireSuccessJson && !response.success) ||\n                response.reset;\n        },\n\n        onUploadOrChunkComplete = function(id, xhr) {\n            var response;\n\n            log(\"xhr - server response received for \" + id);\n            log(\"responseText = \" + xhr.responseText);\n\n            response = parseResponse(true, xhr);\n\n            return {\n                success: !isErrorUploadResponse(xhr, response),\n                response: response\n            };\n        },\n\n        // If this is an upload response, we require a JSON payload, otherwise, it is optional.\n        parseResponse = function(upload, xhr) {\n            var response = {};\n\n            try {\n                log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n                response = qq.parseJson(xhr.responseText);\n            }\n            catch (error) {\n                upload && spec.requireSuccessJson && log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        },\n\n        sendChunksCompleteRequest = function(id) {\n            var promise = new qq.Promise();\n\n            allChunksDoneRequester.complete(\n                    id,\n                    handler._createXhr(id),\n                    getChunksCompleteParams(id),\n                    spec.customHeaders.get(id)\n                )\n                .then(function(xhr) {\n                    promise.success(parseResponse(false, xhr), xhr);\n                }, function(xhr) {\n                    promise.failure(parseResponse(false, xhr), xhr);\n                });\n\n            return promise;\n        },\n\n        setParamsAndGetEntityToSend = function(entityToSendParams) {\n            var fileOrBlob = entityToSendParams.fileOrBlob;\n            var id = entityToSendParams.id;\n            var xhr = entityToSendParams.xhr;\n            var xhrOverrides = entityToSendParams.xhrOverrides || {};\n\n            var params = xhrOverrides.params || entityToSendParams.params;\n\n            var formData = multipart ? new FormData() : null,\n                method = xhrOverrides.method || spec.method,\n                endpoint = xhrOverrides.endpoint || spec.endpointStore.get(id),\n                name = getName(id),\n                size = getSize(id);\n\n            if (!spec.omitDefaultParams) {\n                params[spec.uuidName] = getUuid(id);\n                params[spec.filenameParam] = name;\n            }\n\n            if (multipart && !spec.omitDefaultParams) {\n                params[spec.totalFileSizeName] = size;\n            }\n\n            //build query string\n            if (!spec.paramsInBody) {\n                if (!multipart && !spec.omitDefaultParams) {\n                    params[spec.inputName] = name;\n                }\n                endpoint = qq.obj2url(params, endpoint);\n            }\n\n            xhr.open(method, endpoint, true);\n\n            if (spec.cors.expected && spec.cors.sendCredentials) {\n                xhr.withCredentials = true;\n            }\n\n            if (multipart) {\n                if (spec.paramsInBody) {\n                    qq.obj2FormData(params, formData);\n                }\n\n                formData.append(spec.inputName, fileOrBlob);\n                return formData;\n            }\n\n            return fileOrBlob;\n        },\n\n        setUploadHeaders = function(headersOptions) {\n            var headerOverrides = headersOptions.headerOverrides;\n            var id = headersOptions.id;\n            var xhr = headersOptions.xhr;\n\n            if (headerOverrides) {\n                qq.each(headerOverrides, function(headerName, headerValue) {\n                    xhr.setRequestHeader(headerName, headerValue);\n                });\n            }\n            else {\n                var extraHeaders = spec.customHeaders.get(id),\n                    fileOrBlob = handler.getFile(id);\n\n                xhr.setRequestHeader(\"Accept\", \"application/json\");\n                xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n                if (!multipart) {\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\n                    //NOTE: return mime type in xhr works on chrome 16.0.9 firefox 11.0a2\n                    xhr.setRequestHeader(\"X-Mime-Type\", fileOrBlob.type);\n                }\n\n                qq.each(extraHeaders, function(name, val) {\n                    xhr.setRequestHeader(name, val);\n                });\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: function(uploadChunkParams) {\n            var id = uploadChunkParams.id;\n            var chunkIdx = uploadChunkParams.chunkIdx;\n            var overrides = uploadChunkParams.overrides || {};\n            var resuming = uploadChunkParams.resuming;\n\n            var chunkData = handler._getChunkData(id, chunkIdx),\n                xhr = handler._createXhr(id, chunkIdx),\n                promise, toSend, params;\n\n            promise = createReadyStateChangedHandler(id, xhr);\n            handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n            params = spec.paramsStore.get(id);\n            addChunkingSpecificParams(id, params, chunkData);\n\n            if (resuming && !spec.omitDefaultParams) {\n                params[spec.resume.paramNames.resuming] = true;\n            }\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: chunkData.blob,\n                id: id,\n                params: params,\n                xhr: xhr,\n                xhrOverrides: overrides\n            });\n\n            setUploadHeaders({\n                headerOverrides: overrides.headers,\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        },\n\n        uploadFile: function(id) {\n            var fileOrBlob = handler.getFile(id),\n                promise, xhr, params, toSend;\n\n            xhr = handler._createXhr(id);\n            handler._registerProgressHandler(id);\n            promise = createReadyStateChangedHandler(id, xhr);\n            params = spec.paramsStore.get(id);\n\n            toSend = setParamsAndGetEntityToSend({\n                fileOrBlob: fileOrBlob,\n                id: id,\n                params: params,\n                xhr: xhr\n            });\n\n            setUploadHeaders({\n                id: id,\n                xhr: xhr\n            });\n\n            xhr.send(toSend);\n\n            return promise;\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"traditional\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            finalizeChunks: function(id) {\n                if (spec.chunking.success.endpoint) {\n                    return sendChunksCompleteRequest(id);\n                }\n                else {\n                    return super_.finalizeChunks(id, qq.bind(parseResponse, this, true));\n                }\n            }\n        };\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send a POST to a traditional endpoint once all chunks for a specific file have uploaded\n * successfully.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.traditional.AllChunksDoneAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            cors: {\n                allowXdr: false,\n                expected: false,\n                sendCredentials: false\n            },\n            endpoint: null,\n            log: function(str, level) {},\n            method: \"POST\"\n        },\n        promises = {},\n        endpointHandler = {\n            get: function(id) {\n                if (qq.isFunction(options.endpoint)) {\n                    return options.endpoint(id);\n                }\n\n                return options.endpoint;\n            }\n        };\n\n    qq.extend(options, o);\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        contentType: options.jsonPayload ? \"application/json\" : \"application/x-www-form-urlencoded\",\n        validMethods: [options.method],\n        method: options.method,\n        endpointStore: endpointHandler,\n        allowXRequestedWithAndCacheControl: false,\n        cors: options.cors,\n        log: options.log,\n        onComplete: function(id, xhr, isError) {\n            var promise = promises[id];\n\n            delete promises[id];\n\n            if (isError) {\n                promise.failure(xhr);\n            }\n            else {\n                promise.success(xhr);\n            }\n        }\n    }));\n\n    qq.extend(this, {\n        complete: function(id, xhr, params, headers) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting All Chunks Done request for \" + id);\n\n            promises[id] = promise;\n\n            requester.initTransport(id)\n                .withParams(options.params(id) || params)\n                .withHeaders(options.headers(id) || headers)\n                .send(xhr);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n"]}