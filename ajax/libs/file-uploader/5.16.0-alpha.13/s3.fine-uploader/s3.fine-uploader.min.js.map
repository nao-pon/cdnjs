{"version":3,"sources":["?","../client/js/util.js","../client/js/export.js","../client/js/error/error.js","../client/js/version.js","../client/js/features.js","../client/js/promise.js","../client/js/blob-proxy.js","../client/js/button.js","../client/js/upload-data.js","../client/js/uploader.basic.api.js","../client/js/uploader.basic.js","../client/js/ajax.requester.js","../client/js/upload-handler/upload.handler.js","../client/js/upload-handler/upload.handler.controller.js","../client/js/window.receive.message.js","../client/js/upload-handler/form.upload.handler.js","../client/js/upload-handler/xhr.upload.handler.js","../client/js/deletefile.ajax.requester.js","../client/js/image-support/megapix-image.js","../client/js/image-support/image.js","../client/js/image-support/exif.js","../client/js/identify.js","../client/js/image-support/validation.image.js","../client/js/session.js","../client/js/session.ajax.requester.js","../client/js/image-support/scaler.js","../client/js/third-party/ExifRestorer.js","../client/js/total-progress.js","../client/js/paste.js","../client/js/form-support.js","../client/js/third-party/crypto-js/core.js","../client/js/third-party/crypto-js/enc-base64.js","../client/js/third-party/crypto-js/hmac.js","../client/js/third-party/crypto-js/sha1.js","../client/js/third-party/crypto-js/sha256.js","../client/js/third-party/crypto-js/lib-typedarrays.js","../client/js/s3/util.js","../client/js/non-traditional-common/uploader.basic.api.js","../client/js/s3/uploader.basic.js","../client/js/s3/request-signer.js","../client/js/uploadsuccess.ajax.requester.js","../client/js/s3/multipart.initiate.ajax.requester.js","../client/js/s3/multipart.complete.ajax.requester.js","../client/js/s3/multipart.abort.ajax.requester.js","../client/js/s3/s3.xhr.upload.handler.js","../client/js/s3/s3.form.upload.handler.js","../client/js/dnd.js","../client/js/uploader.api.js","../client/js/uploader.js","../client/js/templating.js","../client/js/ui.handler.events.js","../client/js/ui.handler.click.filebuttons.js","../client/js/ui.handler.click.filename.js","../client/js/ui.handler.focusin.filenameinput.js","../client/js/ui.handler.focus.filenameinput.js","../client/js/ui.handler.edit.filename.js","../client/js/s3/uploader.js"],"names":["global","qq","element","hide","style","display","this","attach","type","fn","addEventListener","attachEvent","detach","removeEventListener","detachEvent","contains","descendant","compareDocumentPosition","insertBefore","elementB","parentNode","remove","removeChild","css","styles","Error","opacity","filter","Math","round","extend","hasClass","name","considerParent","re","RegExp","test","className","addClass","removeClass","replace","getByClass","first","candidates","result","querySelector","querySelectorAll","getElementsByTagName","each","idx","val","push","getFirstByClass","children","child","firstChild","nodeType","nextSibling","setText","text","innerText","textContent","clearText","hasAttribute","attrName","attrVal","exec","getAttribute","undefined","canvasToBlob","canvas","mime","quality","dataUriToBlob","toDataURL","dataUri","arrayBuffer","byteString","intArray","mimeString","createBlob","data","BlobBuilder","window","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","blobBuilder","append","getBlob","Blob","split","indexOf","atob","decodeURI","ArrayBuffer","length","Uint8Array","character","charCodeAt","log","message","level","console","isObject","variable","Object","prototype","toString","call","isFunction","isArray","value","buffer","constructor","isItemList","maybeItemList","isNodeList","maybeNodeList","item","namedItem","isString","maybeString","trimStr","string","String","trim","format","str","args","Array","slice","arguments","newStr","nextIdxToReplace","substring","isFile","maybeFile","File","isFileList","maybeFileList","FileList","isFileOrInput","maybeFileOrInput","isInput","maybeInput","notFile","evaluateType","normalizedType","toLowerCase","HTMLInputElement","tagName","isBlob","maybeBlob","isXhrUploadSupported","input","document","createElement","multiple","FormData","createXhrInstance","upload","XMLHttpRequest","ActiveXObject","error","isFolderDropSupported","dataTransfer","items","webkitGetAsEntry","isFileChunkingSupported","androidStock","webkitSlice","mozSlice","sliceBlob","fileOrBlob","start","end","arrayBufferToHex","bytesAsHex","bytes","byt","byteAsHexStr","readBlobToHex","blob","startOffset","initialBlob","fileReader","FileReader","promise","Promise","onload","success","onerror","failure","readAsArrayBuffer","second","extendNested","prop","override","target","sourceFn","super_","source","srcPropName","srcPropVal","arr","elt","from","len","hasOwnProperty","getUniqueId","c","r","random","ie","navigator","userAgent","ie7","ie8","ie10","ie11","edge","safari","vendor","chrome","opera","firefox","windows","platform","android","ios6","ios","ios7","ios8","ios800","iosChrome","iosSafari","iosSafariWebView","preventDefault","e","returnValue","toElement","div","html","innerHTML","iterableItem","callback","keyOrIndex","retVal","Storage","key","getItem","charAt","bind","oldFunc","context","newArgs","concat","apply","obj2url","obj","temp","prefixDone","uristrings","prefix","add","nextObj","i","nextTemp","encodeURIComponent","join","obj2FormData","formData","arrayKeyName","obj2Inputs","form","setAttribute","appendChild","parseJson","json","JSON","parse","eval","getExtension","filename","extIdx","lastIndexOf","substr","getFilename","blobOrFileInput","fileName","DisposeSupport","disposers","dispose","disposer","shift","addDisposer","disposeFunction","define","amd","module","exports","version","supportedFeatures","testSupportsFileInputElement","tempInput","supported","disabled","ex","isChrome21OrHigher","match","isChrome14OrHigher","isCrossOriginXhrSupported","withCredentials","isXdrSupported","XDomainRequest","isCrossOriginAjaxSupported","isFolderSelectionSupported","webkitdirectory","isLocalStorageSupported","localStorage","setItem","isDragAndDropSupported","span","supportsUploading","supportsUploadingBlobs","supportsFileDrop","supportsAjaxFileUploading","supportsFolderDrop","supportsChunking","supportsResume","supportsUploadViaPaste","supportsUploadCors","supportsDeleteFileXdr","supportsDeleteFileCorsXhr","supportsDeleteFileCors","supportsFolderSelection","supportsImagePreviews","supportsUploadProgress","postMessage","ajaxUploading","blobUploading","canDetermineSize","chunking","deleteFileCors","deleteFileCorsXdr","deleteFileCorsXhr","dialogElement","HTMLDialogElement","fileDrop","folderDrop","folderSelection","imagePreviews","imageValidation","itemSizeValidation","pause","progressBar","resume","scaling","tiffPreviews","unlimitedScaledImageSize","uploading","uploadCors","uploadCustomHeaders","uploadNonMultipart","uploadViaPaste","isGenericPromise","maybePromise","then","successArgs","failureArgs","successCallbacks","failureCallbacks","doneCallbacks","state","onSuccess","onFailure","done","BlobProxy","referenceBlob","onCreate","create","UploadButton","o","createInput","BUTTON_ID_ATTR_NAME","buttonId","options","title","self","setMultiple","folders","acceptFiles","position","right","top","fontFamily","fontSize","margin","padding","cursor","height","disposeSupport","onChange","hoverClass","focusClass","ios8BrowserCrashWorkaround","overflow","direction","getInput","getButtonId","isMultiple","optInput","removeAttribute","setAcceptFiles","reset","UploadData","uploaderProxy","getDataByIds","idOrIds","entries","id","getDataByUuids","uuids","uuid","byUuid","getDataByStatus","status","statusResults","statuses","index","statusEnum","statusResultIndexes","byStatus","dataIndex","byProxyGroupId","byBatchId","addFile","spec","SUBMITTING","originalName","size","batchId","proxyGroupId","onBeforeStatusChange","onStatusChange","retrieve","optionalFilter","setStatus","newStatus","oldStatus","byStatusOldStatusIndex","splice","uuidChanged","newUuid","oldUuid","updateName","newName","updateSize","newSize","setParentId","targetId","parentId","getIdsInProxyGroup","getIdsInBatch","SUBMITTED","REJECTED","QUEUED","CANCELED","PAUSED","UPLOADING","UPLOAD_RETRYING","UPLOAD_SUCCESSFUL","UPLOAD_FAILED","DELETE_FAILED","DELETING","DELETED","basePublicApi","addBlobs","blobDataOrArray","params","endpoint","addFiles","addInitialFiles","cannedFileList","cannedFile","_addCannedFile","_maybeHandleIos8SafariWorkaround","_storedIds","_currentBatchId","processBlob","_handleNewFile","_options","blobs","defaultName","verifiedFiles","processBlobData","blobData","processCanvas","processCanvasData","canvasData","normalizedQuality","processFileOrInput","fileOrInput","files","file","normalizeData","fileContainer","_prepareItemsForUpload","cancel","_handler","cancelAll","storedIdsCopy","storedFileId","clearStoredFiles","continueUpload","uploadData","_uploadData","enabled","getName","_uploadFile","deleteFile","_onSubmitDelete","doesExist","fileOrBlobId","isValid","drawThumbnail","fileId","imgOrCanvas","maxSize","fromServer","customResizeFunction","fileOrUrl","promiseToReturn","_imageGenerator","_thumbnailUrls","scale","getFile","container","generate","modifiedContainer","reason","getButton","_getButton","_buttonIdsForFileIds","getEndpoint","_endpointStore","get","getInProgress","getParentId","uploadDataEntry","getUploads","getResumableFilesData","getSize","getNetUploads","_netUploaded","getRemainingAllowedItems","allowedItems","_currentItemLimit","_netUploadedOrQueued","getUuid","isResumable","hasResumeRecord","debug","pauseUpload","removeFileRef","expunge","_autoRetries","_retryTimeouts","_preventRetries","_buttons","button","_paramsStore","_pasteHandler","session","refreshOnReset","_refreshSessionData","_succeededSinceLastAllComplete","_failedSinceLastAllComplete","_totalProgress","_customResumeDataStore","retry","_manualRetry","scaleImage","specs","Scaler","setCustomHeaders","headers","_customHeadersStore","set","setCustomResumeData","setDeleteFileCustomHeaders","_deleteFileCustomHeadersStore","setDeleteFileEndpoint","_deleteFileEndpointStore","setDeleteFileParams","_deleteFileParamsStore","setEndpoint","setForm","elementOrId","_updateFormSupportAndParams","setItemLimit","newItemLimit","setName","setParams","setUuid","_onDeleteComplete","errorMessage","uploadStoredFiles","_itemError","_uploadStoredFiles","basePrivateApi","sessionData","deleteFileEndpoint","deleteFileParams","thumbnailUrl","_annotateWithButtonId","associatedInput","qqButtonId","_getButtonId","_batchError","callbacks","onError","_createDeleteHandler","DeleteFileAjaxRequester","method","toUpperCase","maxConnections","uuidParamName","request","uuidName","customHeaders","paramsStore","endpointStore","cors","onDelete","_onDelete","onDeleteComplete","xhrOrXdr","isError","_createPasteHandler","PasteSupport","targetElement","paste","pasteReceived","_handleCheckedCallback","onPasteReceived","_handlePasteSuccess","identifier","_createStore","initialValue","_readOnlyValues_","store","catchall","perIdReadOnlyValues","readOnlyValues","copy","orig","getReadOnlyValues","includeReadOnlyValues","existing","values","addReadOnly","_createUploadDataTracker","_onUploadStatusChange","_maybeAllComplete","setTimeout","_createUploadButton","allowMultiple","workarounds","iosEmptyVideos","_isAllowedExtension","allowedExtensions","accept","validation","classes","buttonFocus","buttonHover","ios8BrowserCrash","inputName","_onInputChange","fileInputTitle","_disposeSupport","_createUploadHandler","additionalOptions","namespace","lastOnProgress","preventRetryParam","preventRetryResponseProperty","onProgress","loaded","total","_onProgress","onComplete","xhr","_onComplete","onCancel","cancelFinalizationEffort","_onCancel","onUploadPrep","_onUploadPrep","onUpload","_onUpload","onUploadResult","onUploadChunk","chunkData","_onUploadChunk","onUploadChunkResult","partIndex","onUploadChunkSuccess","onResume","customResumeData","onAutoRetry","responseJSON","_onAutoRetry","onUuidChanged","setSize","_setSize","getDataByUuid","isQueued","isInProgress","getCustomResumeData","_getCustomResumeData","UploadHandlerController","_fileOrBlobRejected","_formatSize","sizeSymbols","max","toFixed","_generateExtraButtonSpecs","_extraButtonSpecs","extraButtons","extraButtonOptionEntry","extraButtonSpec","_initExtraButton","extraButtonsSpec","_defaultButtonId","buttonOrFileInputOrFile","inputs","fileInput","fileBlobOrInput","_getNotFinished","_getValidationBase","_getValidationDescriptor","fileWrapper","_getValidationDescriptors","fileWrappers","fileDescriptors","_handleCameraAccess","camera","optionRoot","details","callbackRetVal","successParam","newFileWrapperList","actualFile","handler","_customNewFileHandler","_handleNewFileGeneric","addFileToHandler","_trackButton","fileList","extSuppliedName","extension","_handleDeleteSuccess","_handleDeleteFailed","_initFormSupportAndParams","_formSupport","FormSupport","attachedToForm","getFormInputsAsObject","autoUpload","newAutoUpload","newEndpoint","_isDeletePossible","expected","allowXdr","allowed","valid","allowedExt","extRegex","code","maybeNameOrNames","replacement","extensionsForMessage","placeholderMatch","messages","names","validationBase","allowedExtension","formatFileName","sizeLimit","minSizeLimit","placeholder","_onBeforeManualRetry","notFinished","_onAllComplete","ios8SafariUploads","alert","unsupportedBrowserIos8Safari","_maybeParseAndSendUploadError","response","errorReason","defaultResponseError","_maybeProcessNextItemAfterOnValidateCallback","validItem","stopOnFirstInvalidFile","validationDescriptor","onValidate","_onValidateCallbackSuccess","_onValidateCallbackFailure","successful","failed","onAllComplete","_shouldAutoRetry","retryWaitPeriod","autoAttemptDelay","_onBeforeAutoRetry","itemLimit","onManualRetry","clearTimeout","storedItemIndex","fileIndex","onIndividualProgress","_onSubmit","_onSubmitCallbackSuccess","_onSubmitted","onSubmitted","_storeForLater","onSuccessCallback","additionalMandatedParams","adjustedOnSuccessCallback","onSubmitDelete","_deleteHandler","sendDelete","_onTotalProgress","onTotalProgress","_onValidateBatchCallbackFailure","_onValidateBatchCallbackSuccess","validationDescriptors","proposedNetFilesUploadedOrQueued","tooManyItemsError","nextIndex","_validateFileOrBlobData","_upload","onValidateBatch","_preventLeaveInProgress","event","onLeave","Session","_session","addFileRecord","refresh","_sessionRequestComplete","onSessionRequestComplete","onNewSize","enableAuto","maxAutoAttempts","formElementOrId","onSubmit","idToUpload","stillSubmitting","validityChecker","allowEmpty","ImageValidation","validate","image","errorCode","_wrapCallbacks","safeCallback","errorMsg","exception","callbackName","callbackFunc","FineUploaderBasic","disableCancelForFormUploads","filenameParam","forceMultipart","omitDefaultParams","paramsInBody","requireSuccessJson","totalFileSizeName","maxHeight","maxWidth","minHeight","minWidth","maybeXhr","maybeXhrOrXdr","attemptNumber","fileOrBlobData","typeError","sizeError","minSizeError","emptyError","noFilesError","maxHeightImageError","maxWidthImageError","minHeightImageError","minWidthImageError","retryFailTooManyItems","concurrent","mandatory","paramNames","partByteOffset","chunkSize","totalFileSize","totalParts","partSize","jsonPayload","resetOnStatus","recordsExpireIn","resuming","customKeys","fileOrBlobName","sendCredentials","interceptSubmit","customResizer","sendOriginal","orient","defaultType","defaultQuality","failureText","includeExif","sizes","ImageGenerator","_scaler","handleNewFile","TotalProgress","entry","AjaxRequester","isSimpleMethod","containsNonSimpleHeaders","containsNonSimple","header","isXdr","getCorsAjaxTransport","ontimeout","onprogress","getXhrOrXdr","suppliedXhr","requestData","dequeue","nextId","queue","sendRequest","xdrError","isResponseSuccessful","getParams","onDemandParams","additionalParams","mandatedParams","optXhr","url","payload","onSend","createUrl","additionalQueryParams","getXdrLoadHandler","getXdrErrorHandler","onreadystatechange","getXhrReadyStateChangeHandler","registerForUploadProgress","open","setHeaders","send","shouldParamsBeInQueryString","contentType","stringify","addToPath","readyState","lengthComputable","onDemandHeaders","additionalHeaders","allHeaders","acceptHeader","setRequestHeader","allowXRequestedWithAndCacheControl","responseCode","successfulResponseCodes","prepareToSend","validMethods","DELETE","PATCH","POST","PUT","GET","initTransport","path","cacheBuster","withPath","appendToPath","withParams","withQueryParams","_additionalQueryParams_","withHeaders","withPayload","thePayload","withCacheBuster","qqtimestamp","Date","getTime","canceled","UploadHandler","proxy","fileState","fileItem","getThirdPartyFileId","_getFileState","_setThirdPartyFileId","thirdPartyFileId","_wasCanceled","preventRetryResponse","controller","chunkingPossible","concurrentChunkingPossible","chunked","chunkIdx","_getChunkData","attemptingResume","chunkProgress","_getChunkDataForCallback","finalize","finalizeChunks","normaizedResponse","normalizeResponse","_maybeDeletePersistedChunkData","cleanup","normalizedResponse","handleFailure","clearCachedChunk","inProgressIdx","responseToReport","inProgress","remaining","unshift","ignoreFailure","keys","_getXhrs","ckid","ckXhr","abort","_cancelled","moveInProgressToRemaining","connectionManager","free","hasMoreParts","nextPart","nextIdx","_getTotalChunks","reevaluateChunking","sendNext","inProgressChunks","available","requestOverrides","uploadChunkData","overrides","uploadChunk","inProgressChunkIdx","_maybePersistChunkedState","clearXhr","_open","_openChunks","_waiting","openChunkEntriesCount","openChunksCount","openChunkIndexes","dontAllowNext","allowNext","waitingIndex","connectionsIndex","getProxyOrBlob","getWaitingOrConnected","waitingOrConnected","chunks","parseInt","isUsingConnection","pop","openChunksEntry","simple","uploadFile","maybeNewUuid","_clearXhrs","getProxy","initHandler","traditional","_removeExpiredChunkingRecords","isDeferredEligibleForUpload","maybeDefer","generatedBlob","updateBlob","maybeSendDeferredFiles","errorResponse","idsInGroup","uploadedThisId","idInGroup","now","originalResponse","_shouldChunkThisFile","blobToUpload","cancelRetVal","isProxied","_getLocalStorageId","isAttemptingResume","WindowReceiveMessage","callbackWrapperDetachers","receiveMessage","onMessageCallbackWrapper","stopReceivingMessages","detacher","FormUploadHandler","expungeFile","detachLoadEvents","isCors","postMessageCallbackTimers","corsMessageReceiver","iframe","getElementById","_getIframeName","getFileIdForIframeName","iframeName","initIframeForUpload","body","registerPostMessageCallback","onloadCallbacks","onloadCallback","_parseJsonResponse","_detachLoadEvent","formHandlerInstanceId","_attachLoadEvent","responseDescriptor","contentDocument","_createIframe","_initFormForUpload","targetName","innerHtmlOrMessage","XhrUploadHandler","xhrId","ajaxRequester","_getAjaxRequester","getChunkSize","chunkFiles","resumeEnabled","blobOrProxy","_initTempState","_maybePrepareForResume","cachedChunks","tempState","xhrs","ajaxRequesters","responseParser","lastChunkIdx","_getXhr","resumableFilesData","_iterateResumeRecords","notResumable","optInProgress","optRemaining","chunkingState","reverse","paused","totalChunks","parts","newBlob","chunkId","_createXhr","optChunkIdx","_registerXhr","chunkIndex","fileSize","startBytes","endBytes","part","count","startByte","endByte","localStorageId","forEach","_getMimeType","_getPersistableData","ceil","_markNotResumable","removeItem","persistedData","lastUpdated","_registerProgressHandler","progressCalculator","totalSuccessfullyLoadedForFile","loadedForRequest","totalForRequest","estActualChunkLoaded","totalLoadedForFile","chunkLoaded","optAjaxRequester","xhrsId","expirationDays","expirationDate","setDate","getDate","getMandatedParams","_method","requester","detectSubsampling","img","ctx","iw","naturalWidth","ih","naturalHeight","width","getContext","drawImage","getImageData","detectVerticalSquash","alpha","ratio","sy","ey","py","renderImageToDataURL","doSquash","renderImageToCanvas","maybeCalculateDownsampledDimensions","origHeight","origWidth","newHeight","sqrt","newWidth","modifiedDimensions","save","resize","renderImageToCanvasWithCustomResizer","imageHeight","imageWidth","orientation","targetHeight","targetWidth","transformCoordinate","tmpCtx","sx","dx","d","tmpCanvas","vertSquashRatio","dw","dh","dy","clearRect","restore","qqImageRendered","resizeInfo","sourceCanvas","sourceCanvasContext","targetCanvas","translate","rotate","PI","MegaPixImage","srcImage","errorCallback","Image","URL","createObjectURL","webkitURL","src","listeners","imageLoadListeners","render","opt","imgWidth","imgHeight","optionsKey","optionsValue","oldTargetSrc","onrender","isImg","el","isCanvas","isImgCorsSupported","crossOrigin","isCanvasSupported","determineMimeOfFileName","nameWithPath","pathSegments","isCrossOrigin","targetProtocol","targetHostname","targetPort","targetAnchor","href","protocol","port","hostname","location","registerImgLoadListeners","registerCanvasDrawImageListener","registerThumbnailRenderedListener","registered","draw","drawPreview","Identify","megapixErrorHandler","isPreviewable","dummyExif","exif","Exif","mpImg","Orientation","failureMsg","drawOnCanvasOrImgFromUrl","canvasOrImg","tempImg","tempImgRender","drawOnImgFromUrlWithCssScaling","drawFromUrl","fileBlobOrUrl","_testing","parseLittleEndian","hex","pow","seekToApp1","offset","theOffset","thePromise","segmentLength","getApp1Offset","isLittleEndian","app1Start","getDirEntryCount","littleEndian","getIfd","dirEntries","getDirEntries","ifdHex","getTagValues","tagsToFind","TAG_IDS","vals","tagValHex","tagValLength","idHex","tagsToFindIdx","TAG_INFO","274","parser","onParseFailure","app1Offset","dirEntryCount","tagValues","isIdentifiable","magicBytes","questionableBytes","identifiable","magicBytesEntries","magicBytesArrayEntry","previewable","isPreviewableSync","PREVIEWABLE_MIME_TYPES","fileMime","isRecognizedImage","image/jpeg","image/gif","image/png","image/bmp","image/tiff","hasNonZeroLimits","limits","atLeastOne","limit","getWidthHeight","sizeDetermination","getFailingLimit","dimensions","failingLimit","limitName","limitValue","limitMatcher","dimensionPropName","actualValue","validationEffort","isJsonResponseValid","handleFileItems","fileItems","someItemsIgnored","err","refreshEffort","refreshCompleteCallback","requesterOptions","SessionAjaxRequester","queryServer","responseText","includeOriginal","failedToScaleText","_getSortedSizes","getFileRecords","originalFileUuid","originalFileName","originalBlobOrBlobData","records","originalBlob","sizeRecord","outputType","_determineOutputType","requestedType","refType","_getName","_generateScaledImage","failedText","api","scaledIds","originalId","record","blobSize","scaledId","qqparentuuid","qqparentsize","param","scalingEffort","scalingOptions","scaler","referenceType","scaledVersionProperties","startOfExt","versionType","scaledName","scaledExt","nameAppendage","sort","a","b","sourceFile","imageGenerator","scaledImageDataUri","signalSuccess","_insertExifHeader","scaledImageDataUriWithExif","originalImage","reader","insertionEffort","originalImageDataUri","ExifRestorer","readAsDataURL","_dataUriToBlob","_createBlob","KEY_STR","encode64","chr1","chr2","enc1","enc2","enc3","output","chr3","enc4","isNaN","origFileBase64","resizedFileBase64","rawImage","decode64","segments","slice2Segments","exifManipulation","exifArray","getExifArray","newImageArray","insertExif","seg","x","imageData","buf","separatePoint","mae","ato","array","rawImageArray","head","endPoint","perFileProgress","totalLoaded","totalSize","lastLoadedSent","lastTotalSent","callbackProxy","noRetryableFiles","retryable","none","failedId","updateTotalProgress","onNew","newLoaded","newTotal","oldLoaded","oldTotal","isImage","registerPasteHandler","detachPasteHandler","clipboardData","getAsFile","unregisterPasteHandler","startUpload","determineNewEndpoint","formEl","validateForm","nativeSubmit","checkValidity","maybeUploadOnSubmit","submit","determineFormEl","_form2Obj","notIrrelevantType","irrelevantTypes","radioOrCheckbox","ignoreValue","checked","selectValue","select","selected","elements","CryptoJS","C","C_lib","lib","Base","F","subtype","mixIn","init","$super","instance","properties","propertyName","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","nBytes","C_enc","enc","hexChars","bite","hexStr","hexStrLength","Latin1","latin1Chars","fromCharCode","latin1Str","latin1StrLength","Utf8","decodeURIComponent","escape","utf8Str","unescape","BufferedBlockAlgorithm","_data","_nDataBytes","_append","_process","doFlush","dataWords","dataSigBytes","blockSize","blockSizeBytes","nBlocksReady","_minBufferSize","nWordsReady","nBytesReady","min","_doProcessBlock","processedWords","C_algo","Hasher","cfg","_doReset","update","messageUpdate","_doFinalize","_createHelper","hasher","_createHmacHelper","HMAC","algo","Base64","map","_map","base64Chars","byte1","byte2","byte3","triplet","j","paddingChar","base64Str","base64StrLength","paddingIndex","bits1","bits2","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","innerHash","W","SHA1","_hash","M","H","n","t","nBitsTotal","nBitsLeft","floor","HmacSHA1","K","isPrime","sqrtN","factor","getFractionalBits","nPrime","SHA256","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","HmacSHA256","superInit","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","byteOffset","byteLength","typedArrayByteLength","s3","util","ALGORITHM_PARAM_NAME","AWS_PARAM_PREFIX","CREDENTIAL_PARAM_NAME","DATE_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_NAME","REDUCED_REDUNDANCY_PARAM_VALUE","SERVER_SIDE_ENCRYPTION_PARAM_NAME","SERVER_SIDE_ENCRYPTION_PARAM_VALUE","SESSION_TOKEN_PARAM_NAME","V4_ALGORITHM_PARAM_VALUE","V4_SIGNATURE_PARAM_NAME","CASE_SENSITIVE_PARAM_NAMES","UNSIGNABLE_REST_HEADER_NAMES","UNPREFIXED_PARAM_NAMES","getBucket","bucket","patterns","pattern","_getPrefixedParamName","getPolicy","policy","conditions","date","drift","clockDrift","accessKey","acl","expectedStatus","sessionToken","successRedirectUrl","getSuccessRedirectAbsoluteUrl","minFileSize","maxFileSize","reducedRedundancy","region","serverSideEncryption","signatureVersion","expiration","getPolicyExpirationDate","Content-Type","success_action_status","success_action_redirect","getV4CredentialsString","getV4PolicyDate","awsParamName","enforceSizeLimits","refreshPolicyCredentials","newSessionToken","sessionTokenFound","oldCondIdx","oldCondObj","oldCondName","oldCondVal","generateAwsParams","signPolicyCallback","policyJson","awsParams","customParams","AWSAccessKeyId","policyAndSignature","updatedAccessKey","updatedSessionToken","signature","minSize","adjustedMinSize","adjustedMaxSize","adjustedDate","getPolicyDate","getCredentialsDate","getUTCFullYear","getUTCMonth","getUTCDate","_minutesToAdd_","pad","minutesToAdd","setMinutes","getMinutes","toISOString","number","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseIframeResponse","doc","contentWindow","queryString","search","etag","targetAnchorContainer","encodeQueryStringParam","percentEncoded","uriEscape","uriEscapePath","nonTraditionalBasePublicApi","setUploadSuccessParams","_uploadSuccessParamsStore","setUploadSuccessEndpoint","_uploadSuccessEndpointStore","nonTraditionalBasePrivateApi","submitSuccessRequest","successAjaxRequester","onCompleteArgs","successEndpoint","successCustomHeaders","uploadSuccess","successMethod","uploadSuccessParams","fileParams","onSuccessFromServer","successRequestResult","_failedSuccessRequestCallbacks","onFailureFromServer","UploadSuccessAjaxRequester","_getEndpointSpecificParams","sendSuccessRequest","successRequestCallback","objectProperties","host","credentials","secretKey","iframeSupport","localBlankPagePath","onCredentialsExpired","setCredentials","_currentCredentials","_aclStore","_cannedKeys","_cannedBuckets","_buckets","_hosts","getKey","ignoreEmpty","setAcl","aclStore","_determineBucket","getHost","_determineHost","getKeyName","_determineKeyName","maxSizeLimit","oldParams","modifiedParams","paramName","credentialsProvider","onExpired","updateCredentials","_determineObjectPropertyValue","property","maybe","keynameLogic","onGetKeynameFailure","onGetKeynameSuccess","keyname","keynameToUse","_handleKeynameFunction","keynameFunc","successCallback","failureCallback","getResponseHeader","s3Key","s3Bucket","RequestSigner","handleSignatureReceived","responseJson","pendingSignatureData","pendingSignatures","signatureConstructor","invalid","expectingPolicy","generateHeaders","getStringToSignArtifacts","requestInfo","endOfUrl","signatureSpec","toSign","headerNames","headersStr","generateStringToSign","contentMd5","headerIndexesToRemove","headerName","headerIdx","hashedContent","v2","getStringToSign","v4","signedHeaders","getSignedHeaders","hashed","toSignRaw","raw","thisSignatureRequester","REQUEST_TYPE","MULTIPART_ABORT","uploadId","MULTIPART_INITIATE","MULTIPART_COMPLETE","MULTIPART_UPLOAD","partNum","getEncodedHashedPayload","content","Host","determineSignatureClientSide","toBeSigned","signatureEffort","updatedHeaders","getHeaders","getToSign","signatureArtifacts","signApiRequest","stringToSign","signPolicy","Authorization","getRequestDate","getEndOfUrl","headersWordArray","headersHmacSha1","policyStr","policyWordArray","base64Policy","policyHmacSha1","policyHmacSha1Base64","getCanonicalQueryString","endOfUri","encodedQueryParams","encodedQueryParamNames","queryStrings","queryParamIdx","canonicalQueryString","nameAndVal","paramVal","encodedQueryParamName","getCanonicalRequest","getCanonicalUri","onloadend","DONE","getScope","canonicalRequest","hashedRequest","scope","dateKey","dateRegionKey","dateRegionServiceKey","signingKey","headersPattern","matches","credentialPattern","credentialCondition","credential","condition","getSignature","queryParams","stringToSignRaw","constructStringToSign","artifacts","theHeaders","withUploadId","theUploadId","withContent","theContent","withContentType","theContentType","withPartNum","thePartNum","toUTCString","_artifacts_","handleSuccessResponse","parsedResponse","pendingRequests","successIndicator","failureIndicator","InitiateMultipartAjaxRequester","getSignatureAjaxRequester","getContentType","handleInitiateRequestComplete","uploadIdElements","messageElements","pendingInitiateRequests","domParser","DOMParser","responseDoc","parseFromString","CompleteMultipartAjaxRequester","handleCompleteRequestComplete","pendingCompleteRequests","bucketEls","keyEls","getCompleteRequestBody","etagEntries","implementation","createDocument","etagEntry","partEl","partNumEl","partNumTextEl","createTextNode","etagTextEl","etagEl","XMLSerializer","serializeToString","AbortMultipartAjaxRequester","handleAbortRequestComplete","awsErrorMsg","errorEls","onGetBucket","onGetHost","onGetKeyName","combine","etagMap","etags","requesters","completeMultipart","initHeaders","urlSafe","restSignature","put","domain","track","hasContentType","setup","uploadIdPromise","initiateMultipart","abortMultipart","policySignature","initParams","toSend","cachedBucket","cachedHost","shouldReset","keyName","encodedKey","parsedErrorProps","parseError","awsResponseXml","codeEls","messageEls","parsedDoc","errorDetails","existedInLocalStorage","isValidResponse","responseData","createForm","handleFinishedUpload","handleUpload","DragAndDrop","uploadDroppedFiles","uploadDropZone","filesAsArray","dropLog","dropDisabled","processingDroppedFilesComplete","getElement","traverseFileTree","parseEntryPromise","fullPath","indexOfNameInFullPath","qqPath","droppedFiles","fileError","isDirectory","getFilesInDirectory","entriesLeft","accumEntries","existingPromise","dirReader","createReader","readEntries","newEntries","handleDataTransfer","pendingFolderPromises","handleDataTransferPromise","processingDroppedFiles","allowMultipleItems","dropError","setupDropzone","dropArea","dropZone","UploadDropZone","HIDE_ZONES_EVENT_NAME","onEnter","dropActive","stopPropagation","onLeaveNotDescendants","onDrop","uploadDropZones","isFileDrag","dragEvent","fileDrag","types","leavingDocumentOut","relatedTarget","y","setupDragDrop","dropZones","dropZoneElements","maybeHideDropZones","HTMLElement","setupExtraDropzone","removeDropzone","dzs","targetEl","errorSpecifics","dragoverShouldBeCanceled","disableDropOutside","dropOutsideDisabled","dropEffect","isValidFileDrag","effectTest","dt","isSafari","effectAllowed","isOrSetDropDisabled","isDisabled","preventDrop","triggerHidezonesEvent","triggerUsingOldApi","hideZonesEvent","createEvent","initEvent","CustomEvent","dispatchEvent","attachEvents","effect","elementFromPoint","clientX","clientY","uiPublicApi","_parent","_templating","addCacheToDom","clearFiles","addExtraDropzone","_dnd","removeExtraDropzone","getItemByFileId","isHiddenForever","getFileContainer","_setupDragAndDrop","_totalFilesInBatch","_filesInBatchAddedToUi","_setupClickAndEditEventHandlers","formattedFilename","updateFilename","uploadPaused","continued","uploadContinued","getId","fileContainerOrChildEl","getFileId","getDropTarget","qqDropTarget","uiPrivateApi","_removeFileItem","removeFile","_fileButtonsClickHandler","FileButtonsClickHandler","_bindFileButtonsClickEvent","_focusinEventSupported","_isEditFilenameEnabled","_filenameClickHandler","_bindFilenameClickEvent","_filenameInputFocusInHandler","_bindFilenameInputFocusInEvent","_filenameInputFocusHandler","_bindFilenameInputFocusEvent","dragAndDrop","extraDropzones","templating","defaultDropZone","getDropZone","showDropProcessing","hideDropProcessing","errorData","lvl","onDeleteFile","onRetry","onPause","onContinue","onGetName","isEditFilenamePossible","FilenameClickHandler","FilenameInputFocusHandler","_filenameEditHandler","onGetUploadStatus","onSetName","onEditingStatusChange","isEditing","qqInput","getEditInput","qqFileContainer","hideFilename","hideEditIcon","showFilename","showEditIcon","markFilenameEditable","hideRetry","setStatusText","_classes","retrying","hidePause","FilenameInputFocusInHandler","hideSpinner","resetTotalProgress","reportDirectoryPaths","qqpath","_addToList","addHandler","updateProgress","hideCancel","hideProgress","waitingForResponse","_displayFileSize","completeUpload","_markFileAsSuccessful","fail","showCancel","isRetryPossible","showRetry","_controlFailureTextDisplay","parentRetVal","newResult","showDeleteButton","_maybeUpdateThumbnail","showSpinner","allowPause","retryNumForDisplay","maxAuto","retryNote","_showCancelLink","showAutoRetryNote","autoRetryNote","resetProgress","_onSubmitDeleteSuccess","forceConfirm","_showDeleteConfirm","_sendDeleteRequest","deletingFailedText","hideDeleteButton","deletingStatusText","confirmMessage","deleteRequestArgs","showConfirm","canned","prependData","prependIndex","dontDisplay","hideScaled","prependFiles","disableCancel","_handledProxyGroup","_clearList","addFileToCache","updateThumbnail","thumbnails","generatePreview","fileSizeOnSubmit","loadedSize","sizeForDisplay","_formatProgress","uploadedSize","formatProgress","mode","responseProperty","failureReason","failedUploadTextDisplay","failUpload","enableTooltip","_showTooltip","showMessage","_setupPastePrompt","namePromptMessage","defaultVal","showPrompt","placeholders","waitUntilResponse","FineUploader","listElement","template","editable","tooManyFilesError","unsupportedBrowser","promptForName","maxCount","notAvailablePath","waitingPath","timeBetweenThumbs","hasDialog","showDialog","confirm","defaultValue","prompt","Templating","templateIdOrEl","containerEl","fileContainerEl","maxThumbs","waitUntilUpdate","thumbnailNotAvailable","waitingForThumbnail","renderFailure","isEditElementsExist","isRetryElementExist","templateHtml","showThumbnails","serverScale","fileBatch","createDocumentFragment","isCancelDisabled","generatedThumbnails","thumbnailQueueMonitorRunning","thumbGenerationQueue","thumbnailMaxSize","selectorClasses","alertDialog","dialogCancelButton","confirmDialog","dialogMessage","dialogOkButton","promptDialog","uploader","drop","list","progressBarContainer","totalProgressBarContainer","totalProgressBar","spinner","continueButton","deleteButton","statusText","editFilenameInput","editNameIcon","dropText","dropProcessing","dropProcessingSpinner","thumbnail","previewGeneration","cachedThumbnailNotAvailableImg","cachedWaitingForThumbnailImg","cacheThumbnailPlaceholders","notAvailableUrl","waitingUrl","updatedImg","displayWaitingImg","waitingImgPlacement","maybeScalePlaceholderViaCss","show","generateNewPreview","getThumbnail","qqThumbnailId","maybeSetDisplayNotAvailableImg","generateNextQueuedPreview","queuedThumbRequest","processUpdateQueuedPreviewRequest","processNewQueuedPreviewRequest","getCancel","getTemplateEl","getContinue","getDialog","getDelete","getDropProcessing","getEditIcon","getPause","getProgress","getRetry","getSpinner","cssClass","previewing","notAvailableImgPlacement","parseAndGetTemplate","scriptEl","scriptHtml","fileListNode","tempTemplateEl","fileListHtml","defaultButton","dropTextEl","uploaderEl","fileTemplate","prependFile","parentEl","beforeEl","optFileOrBlob","relatedThumbnailId","useCachedPreview","showWaitingImg","setProgressBarWidth","percent","bar","progressBarSelector","targetThumbnailId","cachedThumbnailId","targetThumbnail","cachedThumbnail","hideTotalProgress","cantRenderEl","prependInfo","hideForever","batch","thumb","fileEl","fileNameEl","waitingImg","currentNode","getFileList","filenameEl","isFileName","icon","isEditIcon","isEditInput","isCancel","allowContinueButton","isPause","isContinueButton","isDeleteButton","isRetry","textEl","dialog","messageEl","inputEl","cancelBtn","okBtn","closeHandler","cancelClickHandler","okClickHandler","close","showModal","UiEventHandler","s","protectedApi","eventType","srcElement","onHandled","attachTo","getFileIdFromItem","qqFileId","getDisposeSupport","examineEvent","buttonHandlers","buttonType","firstLetterCapButtonType","inheritedInternalApi","handleFilenameEdit","FilenameEditHandler","handleInputFocus","getFilenameSansExtension","filenameSansExt","getOriginalExtension","origName","handleNameUpdate","newFilenameInputEl","origExtension","registerInputBlurHandler","registerInputEnterKeyHandler","keyCode","which","focusInput","focus"],"mappings":";CAAA,SAAUA,OAAOA,QCEjB,GAAIC,IAAK,SAASC,GACd,YAEA,QACIC,KAAM,WAEF,MADAD,GAAQE,MAAMC,QAAU,OACjBC,MAIXC,OAAQ,SAASC,EAAMC,GAMnB,MALIP,GAAQQ,iBACRR,EAAQQ,iBAAiBF,EAAMC,GAAI,GAC5BP,EAAQS,aACfT,EAAQS,YAAY,KAAOH,EAAMC,GAE9B,WACHR,GAAGC,GAASU,OAAOJ,EAAMC,KAIjCG,OAAQ,SAASJ,EAAMC,GAMnB,MALIP,GAAQW,oBACRX,EAAQW,oBAAoBL,EAAMC,GAAI,GAC/BP,EAAQS,aACfT,EAAQY,YAAY,KAAON,EAAMC,GAE9BH,MAGXS,SAAU,SAASC,GAKf,QAAKA,IAKDd,IAAYc,IAIZd,EAAQa,SACDb,EAAQa,SAASC,MAGgC,EAA9CA,EAAWC,wBAAwBf,OAOrDgB,aAAc,SAASC,GAEnB,MADAA,GAASC,WAAWF,aAAahB,EAASiB,GACnCb,MAGXe,OAAQ,WAEJ,MADAnB,GAAQkB,WAAWE,YAAYpB,GACxBI,MAOXiB,IAAK,SAASC,GAEV,GAAqB,MAAjBtB,EAAQE,MACR,KAAM,IAAIH,IAAGwB,MAAM,6EAWvB,OAPsB,OAAlBD,EAAOE,SAC8B,gBAA1BxB,GAAQE,MAAMsB,SAAqD,SAArBxB,EAAe,UACpEsB,EAAOG,OAAS,iBAAmBC,KAAKC,MAAM,IAAML,EAAOE,SAAW,KAG9EzB,GAAG6B,OAAO5B,EAAQE,MAAOoB,GAElBlB,MAGXyB,SAAU,SAASC,EAAMC,GACrB,GAAIC,GAAK,GAAIC,QAAO,QAAUH,EAAO,QACrC,OAAOE,GAAGE,KAAKlC,EAAQmC,eAAiBJ,IAAkBC,EAAGE,KAAKlC,EAAQkB,WAAWiB,aAGzFC,SAAU,SAASN,GAIf,MAHK/B,IAAGC,GAAS6B,SAASC,KACtB9B,EAAQmC,WAAa,IAAML,GAExB1B,MAGXiC,YAAa,SAASP,GAClB,GAAIE,GAAK,GAAIC,QAAO,QAAUH,EAAO,QAErC,OADA9B,GAAQmC,UAAYnC,EAAQmC,UAAUG,QAAQN,EAAI,KAAKM,QAAQ,aAAc,IACtElC,MAGXmC,WAAY,SAASJ,EAAWK,GAC5B,GAAIC,GACAC,IAEJ,OAAIF,IAASxC,EAAQ2C,cACV3C,EAAQ2C,cAAc,IAAMR,GAE9BnC,EAAQ4C,iBACN5C,EAAQ4C,iBAAiB,IAAMT,IAG1CM,EAAazC,EAAQ6C,qBAAqB,KAE1C9C,GAAG+C,KAAKL,EAAY,SAASM,EAAKC,GAC1BjD,GAAGiD,GAAKnB,SAASM,IACjBO,EAAOO,KAAKD,KAGbR,EAAQE,EAAO,GAAKA,IAG/BQ,gBAAiB,SAASf,GACtB,MAAOpC,IAAGC,GAASuC,WAAWJ,GAAW,IAG7CgB,SAAU,WAIN,IAHA,GAAIA,MACAC,EAAQpD,EAAQqD,WAEbD,GACoB,IAAnBA,EAAME,UACNH,EAASF,KAAKG,GAElBA,EAAQA,EAAMG,WAGlB,OAAOJ,IAGXK,QAAS,SAASC,GAGd,MAFAzD,GAAQ0D,UAAYD,EACpBzD,EAAQ2D,YAAcF,EACfrD,MAGXwD,UAAW,WACP,MAAO7D,IAAGC,GAASwD,QAAQ,KAK/BK,aAAc,SAASC,GACnB,GAAIC,EAEJ,OAAI/D,GAAQ6D,eAEH7D,EAAQ6D,aAAaC,IAKkC,MAArD,WAAaE,KAAKhE,EAAQiE,aAAaH,KAG9CC,EAAU/D,EAAQ8D,GAEFI,SAAZH,GAKiC,MAA9B,WAAaC,KAAKD,QAMxC,WACG,YAEAhE,IAAGoE,aAAe,SAASC,EAAQC,EAAMC,GACrC,MAAOvE,IAAGwE,cAAcH,EAAOI,UAAUH,EAAMC,KAGnDvE,GAAGwE,cAAgB,SAASE,GACxB,GAAIC,GAAaC,EAgBbC,EAAUC,EAfVC,EAAa,SAASC,EAAMV,GACxB,GAAIW,GAAcC,OAAOD,aACjBC,OAAOC,mBACPD,OAAOE,gBACPF,OAAOG,cACXC,EAAcL,GAAe,GAAIA,EAErC,OAAIK,IACAA,EAAYC,OAAOP,GACZM,EAAYE,QAAQlB,IAGpB,GAAImB,OAAMT,IAAQzE,KAAM+D,IAyB3C,OAlBIM,GADAF,EAAQgB,MAAM,KAAK,GAAGC,QAAQ,WAAa,EAC9BC,KAAKlB,EAAQgB,MAAM,KAAK,IAGxBG,UAAUnB,EAAQgB,MAAM,KAAK,IAI9CZ,EAAaJ,EAAQgB,MAAM,KAAK,GAC3BA,MAAM,KAAK,GACXA,MAAM,KAAK,GAGhBf,EAAc,GAAImB,aAAYlB,EAAWmB,QACzClB,EAAW,GAAImB,YAAWrB,GAC1B3E,GAAG+C,KAAK6B,EAAY,SAAS5B,EAAKiD,GAC9BpB,EAAS7B,GAAOiD,EAAUC,WAAW,KAGlCnB,EAAWJ,EAAaG,IAGnC9E,GAAGmG,IAAM,SAASC,EAASC,GACnBnB,OAAOoB,UACFD,GAAmB,SAAVA,EAKNnB,OAAOoB,QAAQD,GACfnB,OAAOoB,QAAQD,GAAOD,GAGtBlB,OAAOoB,QAAQH,IAAI,IAAME,EAAQ,KAAOD,GAR5ClB,OAAOoB,QAAQH,IAAIC,KAc/BpG,GAAGuG,SAAW,SAASC,GACnB,MAAOA,KAAaA,EAASjD,UAAyD,oBAA7CkD,OAAOC,UAAUC,SAASC,KAAKJ,IAG5ExG,GAAG6G,WAAa,SAASL,GACrB,MAA6B,kBAAf,IASlBxG,GAAG8G,QAAU,SAASC,GAClB,MAAiD,mBAA1CN,OAAOC,UAAUC,SAASC,KAAKG,IACjCA,GAAS7B,OAAOY,aAAeiB,EAAMC,QAAUD,EAAMC,OAAOC,cAAgBnB,aAIrF9F,GAAGkH,WAAa,SAASC,GACrB,MAAyD,kCAAlDV,OAAOC,UAAUC,SAASC,KAAKO,IAK1CnH,GAAGoH,WAAa,SAASC,GACrB,MAAyD,sBAAlDZ,OAAOC,UAAUC,SAASC,KAAKS,IAGjCA,EAAcC,MAAQD,EAAcE,WAG7CvH,GAAGwH,SAAW,SAASC,GACnB,MAAuD,oBAAhDhB,OAAOC,UAAUC,SAASC,KAAKa,IAG1CzH,GAAG0H,QAAU,SAASC,GAClB,MAAIC,QAAOlB,UAAUmB,KACVF,EAAOE,OAGXF,EAAOpF,QAAQ,aAAc,KAOxCvC,GAAG8H,OAAS,SAASC,GAEjB,GAAIC,GAAQC,MAAMvB,UAAUwB,MAAMtB,KAAKuB,UAAW,GAC9CC,EAASL,EACTM,EAAmBD,EAAOzC,QAAQ,KAetC,OAbA3F,IAAG+C,KAAKiF,EAAM,SAAShF,EAAKC,GAQxB,GAJAmF,EAHgBA,EAAOE,UAAU,EAAGD,GAGfpF,EAFNmF,EAAOE,UAAUD,EAAmB,GAGnDA,EAAmBD,EAAOzC,QAAQ,KAAM0C,EAAmBpF,EAAI8C,QAG3DsC,EAAmB,EACnB,OAAO,IAIRD,GAGXpI,GAAGuI,OAAS,SAASC,GACjB,MAAOtD,QAAOuD,MAAsD,kBAA9ChC,OAAOC,UAAUC,SAASC,KAAK4B,IAGzDxI,GAAG0I,WAAa,SAASC,GACrB,MAAOzD,QAAO0D,UAA8D,sBAAlDnC,OAAOC,UAAUC,SAASC,KAAK+B,IAG7D3I,GAAG6I,cAAgB,SAASC,GACxB,MAAO9I,IAAGuI,OAAOO,IAAqB9I,GAAG+I,QAAQD,IAGrD9I,GAAG+I,QAAU,SAASC,EAAYC,GAC9B,GAAIC,GAAe,SAAS3I,GACxB,GAAI4I,GAAiB5I,EAAK6I,aAE1B,OAAIH,GAC0B,SAAnBE,EAGe,SAAnBA,EAGX,UAAIjE,OAAOmE,kBAC4C,8BAA/C5C,OAAOC,UAAUC,SAASC,KAAKoC,IAC3BA,EAAWzI,MAAQ2I,EAAaF,EAAWzI,WAKnDyI,EAAWM,SAC8B,UAArCN,EAAWM,QAAQF,eACfJ,EAAWzI,MAAQ2I,EAAaF,EAAWzI,QAS3DP,GAAGuJ,OAAS,SAASC,GACjB,GAAItE,OAAOO,MAAsD,kBAA9CgB,OAAOC,UAAUC,SAASC,KAAK4C,GAC9C,OAAO,GAIfxJ,GAAGyJ,qBAAuB,WACtB,GAAIC,GAAQC,SAASC,cAAc,QAGnC,OAFAF,GAAMnJ,KAAO,OAGU4D,SAAnBuF,EAAMG,UACc,mBAATpB,OACa,mBAAbqB,WACoC,SAAnC9J,GAAG+J,oBAAqBC,QAI5ChK,GAAG+J,kBAAoB,WACnB,GAAI7E,OAAO+E,eACP,MAAO,IAAIA,eAGf,KACI,MAAO,IAAIC,eAAc,sBAE7B,MAAOC,GAEH,MADAnK,IAAGmG,IAAI,wCAAyC,SACzC,OAIfnG,GAAGoK,sBAAwB,SAASC,GAChC,MAAOA,GAAaC,OAChBD,EAAaC,MAAMvE,OAAS,GAC5BsE,EAAaC,MAAM,GAAGC,kBAG9BvK,GAAGwK,wBAA0B,WACzB,OAAQxK,GAAGyK,gBACPzK,GAAGyJ,yBACuBtF,SAAzBsE,KAAK/B,UAAUwB,OAAsD/D,SAA/BsE,KAAK/B,UAAUgE,aAAyDvG,SAA5BsE,KAAK/B,UAAUiE,WAG1G3K,GAAG4K,UAAY,SAASC,EAAYC,EAAOC,GAGvC,OAFaF,EAAW3C,OAAS2C,EAAWF,UAAYE,EAAWH,aAErD9D,KAAKiE,EAAYC,EAAOC,IAG1C/K,GAAGgL,iBAAmB,SAAShE,GAC3B,GAAIiE,GAAa,GACbC,EAAQ,GAAIlF,YAAWgB,EAY3B,OAVAhH,IAAG+C,KAAKmI,EAAO,SAASlI,EAAKmI,GACzB,GAAIC,GAAeD,EAAIxE,SAAS,GAE5ByE,GAAarF,OAAS,IACtBqF,EAAe,IAAMA,GAGzBH,GAAcG,IAGXH,GAGXjL,GAAGqL,cAAgB,SAASC,EAAMC,EAAaxF,GAC3C,GAAIyF,GAAcxL,GAAG4K,UAAUU,EAAMC,EAAaA,EAAcxF,GAC5D0F,EAAa,GAAIC,YACjBC,EAAU,GAAI3L,IAAG4L,OAUrB,OARAH,GAAWI,OAAS,WAChBF,EAAQG,QAAQ9L,GAAGgL,iBAAiBS,EAAW9I,UAGnD8I,EAAWM,QAAUJ,EAAQK,QAE7BP,EAAWQ,kBAAkBT,GAEtBG,GAGX3L,GAAG6B,OAAS,SAASY,EAAOyJ,EAAQC,GAahC,MAZAnM,IAAG+C,KAAKmJ,EAAQ,SAASE,EAAMnJ,GACvBkJ,GAAgBnM,GAAGuG,SAAStD,IACRkB,SAAhB1B,EAAM2J,KACN3J,EAAM2J,OAEVpM,GAAG6B,OAAOY,EAAM2J,GAAOnJ,GAAK,IAG5BR,EAAM2J,GAAQnJ,IAIfR,GAaXzC,GAAGqM,SAAW,SAASC,EAAQC,GAC3B,GAAIC,MACAC,EAASF,EAASC,EAUtB,OARAxM,IAAG+C,KAAK0J,EAAQ,SAASC,EAAaC,GACNxI,SAAxBmI,EAAOI,KACPF,EAAOE,GAAeJ,EAAOI,IAGjCJ,EAAOI,GAAeC,IAGnBL,GAMXtM,GAAG2F,QAAU,SAASiH,EAAKC,EAAKC,GAC5B,GAAIF,EAAIjH,QACJ,MAAOiH,GAAIjH,QAAQkH,EAAKC,EAG5BA,GAAOA,GAAQ,CACf,IAAIC,GAAMH,EAAI7G,MAMd,KAJI+G,EAAO,IACPA,GAAQC,GAGLD,EAAOC,EAAKD,GAAQ,EACvB,GAAIF,EAAII,eAAeF,IAASF,EAAIE,KAAUD,EAC1C,MAAOC,EAGf,QAAO,GAIX9M,GAAGiN,YAAc,WACb,MAAO,uCAAuC1K,QAAQ,QAAS,SAAS2K,GAEpE,GAAIC,GAAoB,GAAhBxL,KAAKyL,SAAgB,CAC7B,QADyC,KAALF,EAAWC,EAAS,EAAJA,EAAU,GACrDxG,SAAS,OAM1B3G,GAAGqN,GAAK,WACJ,MAAOC,WAAUC,UAAU5H,QAAQ,WAAY,GAC3C2H,UAAUC,UAAU5H,QAAQ,cAAe,GAGnD3F,GAAGwN,IAAM,WACL,MAAOF,WAAUC,UAAU5H,QAAQ,aAAc,GAGrD3F,GAAGyN,IAAM,WACL,MAAOH,WAAUC,UAAU5H,QAAQ,aAAc,GAGrD3F,GAAG0N,KAAO,WACN,MAAOJ,WAAUC,UAAU5H,QAAQ,cAAe,GAGtD3F,GAAG2N,KAAO,WACN,MAAO3N,IAAGqN,MAAQC,UAAUC,UAAU5H,QAAQ,YAAa,GAG/D3F,GAAG4N,KAAO,WACN,MAAON,WAAUC,UAAU5H,QAAQ,SAAW,GAGlD3F,GAAG6N,OAAS,WACR,MAA4B1J,UAArBmJ,UAAUQ,QAAwBR,UAAUQ,OAAOnI,QAAQ,YAAa,GAGnF3F,GAAG+N,OAAS,WACR,MAA4B5J,UAArBmJ,UAAUQ,QAAwBR,UAAUQ,OAAOnI,QAAQ,aAAc,GAGpF3F,GAAGgO,MAAQ,WACP,MAA4B7J,UAArBmJ,UAAUQ,QAAwBR,UAAUQ,OAAOnI,QAAQ,YAAa,GAGnF3F,GAAGiO,QAAU,WACT,OAASjO,GAAG4N,SAAW5N,GAAG2N,QAAUL,UAAUC,UAAU5H,QAAQ,cAAe,GAA2BxB,SAArBmJ,UAAUQ,QAA6C,KAArBR,UAAUQ,QAGrI9N,GAAGkO,QAAU,WACT,MAA8B,UAAvBZ,UAAUa,UAGrBnO,GAAGoO,QAAU,WACT,MAAOd,WAAUC,UAAUnE,cAAczD,QAAQ,cAAe,GAKpE3F,GAAGyK,aAAe,WACd,MAAOzK,IAAGoO,WAAad,UAAUC,UAAUnE,cAAczD,QAAQ,UAAY,GAGjF3F,GAAGqO,KAAO,WACN,MAAOrO,IAAGsO,OAAShB,UAAUC,UAAU5H,QAAQ,aAAc,GAGjE3F,GAAGuO,KAAO,WACN,MAAOvO,IAAGsO,OAAShB,UAAUC,UAAU5H,QAAQ,aAAc,GAGjE3F,GAAGwO,KAAO,WACN,MAAOxO,IAAGsO,OAAShB,UAAUC,UAAU5H,QAAQ,aAAc,GAIjE3F,GAAGyO,OAAS,WACR,MAAOzO,IAAGsO,OAAShB,UAAUC,UAAU5H,QAAQ,eAAgB,GAGnE3F,GAAGsO,IAAM,WAEL,MAAOhB,WAAUC,UAAU5H,QAAQ,WAAY,GACxC2H,UAAUC,UAAU5H,QAAQ,WAAY,GACxC2H,UAAUC,UAAU5H,QAAQ,aAAc,GAGrD3F,GAAG0O,UAAY,WACX,MAAO1O,IAAGsO,OAAShB,UAAUC,UAAU5H,QAAQ,YAAa,GAGhE3F,GAAG2O,UAAY,WACX,MAAO3O,IAAGsO,QAAUtO,GAAG0O,aAAepB,UAAUC,UAAU5H,QAAQ,aAAc,GAGpF3F,GAAG4O,iBAAmB,WAClB,MAAO5O,IAAGsO,QAAUtO,GAAG0O,cAAgB1O,GAAG2O,aAM9C3O,GAAG6O,eAAiB,SAASC,GACrBA,EAAED,eACFC,EAAED,iBAEFC,EAAEC,aAAc,GAQxB/O,GAAGgP,UAAa,WACZ,GAAIC,GAAMtF,SAASC,cAAc,MACjC,OAAO,UAASsF,GACZD,EAAIE,UAAYD,CAChB,IAAIjP,GAAUgP,EAAI3L,UAElB,OADA2L,GAAI5N,YAAYpB,GACTA,MAKfD,GAAG+C,KAAO,SAASqM,EAAcC,GAC7B,GAAIC,GAAYC,CAEhB,IAAIH,EAEA,GAAIlK,OAAOsK,SAAWJ,EAAanI,cAAgB/B,OAAOsK,QACtD,IAAKF,EAAa,EAAGA,EAAaF,EAAarJ,SAC3CwJ,EAASF,EAASD,EAAaK,IAAIH,GAAaF,EAAaM,QAAQN,EAAaK,IAAIH,KAClFC,KAAW,GAFoCD,SAStD,IAAItP,GAAG8G,QAAQsI,IAAiBpP,GAAGkH,WAAWkI,IAAiBpP,GAAGoH,WAAWgI,GAC9E,IAAKE,EAAa,EAAGA,EAAaF,EAAarJ,SAC3CwJ,EAASF,EAASC,EAAYF,EAAaE,IACvCC,KAAW,GAFoCD,SAOtD,IAAItP,GAAGwH,SAAS4H,GACjB,IAAKE,EAAa,EAAGA,EAAaF,EAAarJ,SAC3CwJ,EAASF,EAASC,EAAYF,EAAaO,OAAOL,IAC9CC,KAAW,GAFoCD,SAQvD,KAAKA,IAAcF,GACf,GAAI3I,OAAOC,UAAUsG,eAAepG,KAAKwI,EAAcE,KACnDC,EAASF,EAASC,EAAYF,EAAaE,IACvCC,KAAW,GACX,OASxBvP,GAAG4P,KAAO,SAASC,EAASC,GACxB,GAAI9P,GAAG6G,WAAWgJ,GAAU,CACxB,GAAI7H,GAAQC,MAAMvB,UAAUwB,MAAMtB,KAAKuB,UAAW,EAElD,OAAO,YACH,GAAI4H,GAAU/P,GAAG6B,UAAWmG,EAI5B,OAHIG,WAAUpC,SACVgK,EAAUA,EAAQC,OAAO/H,MAAMvB,UAAUwB,MAAMtB,KAAKuB,aAEjD0H,EAAQI,MAAMH,EAASC,IAItC,KAAM,IAAIvO,OAAM,wCAmBpBxB,GAAGkQ,QAAU,SAASC,EAAKC,EAAMC,GAE7B,GAAIC,MACAC,EAAS,IACTC,EAAM,SAASC,EAASC,GACpB,GAAIC,GAAWP,EACR,QAAQjO,KAAKiO,GACdA,EACAA,EAAO,IAAMM,EAAI,IACjBA,CACY,eAAbC,GAAoC,cAAND,GAC/BJ,EAAWpN,KACa,gBAAZuN,GACFzQ,GAAGkQ,QAAQO,EAASE,GAAU,GACe,sBAA5ClK,OAAOC,UAAUC,SAASC,KAAK6J,GAChCG,mBAAmBD,GAAY,IAAMC,mBAAmBH,KACxDG,mBAAmBD,GAAY,IAAMC,mBAAmBH,IAqB9E,QAhBKJ,GAAcD,GACfG,EAAU,KAAKpO,KAAKiO,GAAU,MAAMjO,KAAKiO,GAAS,GAAK,IAAM,IAC7DE,EAAWpN,KAAKkN,GAChBE,EAAWpN,KAAKlD,GAAGkQ,QAAQC,KACqB,mBAAxC1J,OAAOC,UAAUC,SAASC,KAAKuJ,IAA8C,SAARA,EAC7EnQ,GAAG+C,KAAKoN,EAAK,SAASnN,EAAKC,GACvBuN,EAAIvN,EAAKD,KAEU,SAARmN,GAAiC,OAARA,GAAiC,gBAARA,GACjEnQ,GAAG+C,KAAKoN,EAAK,SAAS/D,EAAMnJ,GACxBuN,EAAIvN,EAAKmJ,KAGbkE,EAAWpN,KAAK0N,mBAAmBR,GAAQ,IAAMQ,mBAAmBT,IAGpEC,EACOE,EAAWO,KAAKN,GAEhBD,EAAWO,KAAKN,GAClBhO,QAAQ,KAAM,IACdA,QAAQ,OAAQ,MAI7BvC,GAAG8Q,aAAe,SAASX,EAAKY,EAAUC,GAmBtC,MAlBKD,KACDA,EAAW,GAAIjH,WAGnB9J,GAAG+C,KAAKoN,EAAK,SAASV,EAAKxM,GACvBwM,EAAMuB,EAAeA,EAAe,IAAMvB,EAAM,IAAMA,EAElDzP,GAAGuG,SAAStD,GACZjD,GAAG8Q,aAAa7N,EAAK8N,EAAUtB,GAE1BzP,GAAG6G,WAAW5D,GACnB8N,EAASxL,OAAOkK,EAAKxM,KAGrB8N,EAASxL,OAAOkK,EAAKxM,KAItB8N,GAGX/Q,GAAGiR,WAAa,SAASd,EAAKe,GAC1B,GAAIxH,EAeJ,OAbKwH,KACDA,EAAOvH,SAASC,cAAc,SAGlC5J,GAAG8Q,aAAaX,GACZ5K,OAAQ,SAASkK,EAAKxM,GAClByG,EAAQC,SAASC,cAAc,SAC/BF,EAAMyH,aAAa,OAAQ1B,GAC3B/F,EAAMyH,aAAa,QAASlO,GAC5BiO,EAAKE,YAAY1H,MAIlBwH,GAOXlR,GAAGqR,UAAY,SAASC,MAEpB,MAAIpM,QAAOqM,MAAQvR,GAAG6G,WAAW0K,KAAKC,OAC3BD,KAAKC,MAAMF,MAEXG,KAAK,IAAMH,KAAO,MAUjCtR,GAAG0R,aAAe,SAASC,GACvB,GAAIC,GAASD,EAASE,YAAY,KAAO,CAEzC,IAAID,EAAS,EACT,MAAOD,GAASG,OAAOF,EAAQD,EAAS5L,OAAS6L,IAIzD5R,GAAG+R,YAAc,SAASC,GAGtB,MAAIhS,IAAG+I,QAAQiJ,GAEJA,EAAgBjL,MAAMxE,QAAQ,YAAa,IAE7CvC,GAAGuI,OAAOyJ,IACkB,OAA7BA,EAAgBC,UAAkD9N,SAA7B6N,EAAgBC,SAC9CD,EAAgBC,SAIxBD,EAAgBjQ,MAM3B/B,GAAGkS,eAAiB,WAChB,GAAIC,KAEJ,QAEIC,QAAS,WACL,GAAIC,EACJ,GACIA,GAAWF,EAAUG,QACjBD,GACAA,UAGDA,IAIX/R,OAAQ,WACJ,GAAI0H,GAAOG,SAEX9H,MAAKkS,YAAYvS,GAAGgI,EAAK,IAAI1H,OAAO2P,MAAM5P,KAAM4H,MAAMvB,UAAUwB,MAAMtB,KAAKuB,UAAW,MAI1FoK,YAAa,SAASC,GAClBL,EAAUjP,KAAKsP,SCt2B9B,WACG,YACsB,mBAAXC,SAAyBA,OAAOC,IACvCD,OAAO,WACH,MAAOzS,MAGY,mBAAX2S,SAA0BA,OAAOC,QAC7CD,OAAOC,QAAU5S,GAGjBD,OAAOC,GAAKA,MCRnB,WACG,YAEAA,IAAGwB,MAAQ,SAAS4E,GAChB/F,KAAK+F,QAAU,kBAAoBpG,GAAG6S,QAAU,KAAOzM,GAG3DpG,GAAGwB,MAAMkF,UAAY,GAAIlF,UCV7BxB,GAAG6S,QAAU,kBCAb7S,GAAG8S,kBAAqB,WACpB,YAkBA,SAASC,KACL,GACIC,GADAC,GAAY,CAGhB,KACID,EAAYrJ,SAASC,cAAc,SACnCoJ,EAAUzS,KAAO,OACjBP,GAAGgT,GAAW9S,OAEV8S,EAAUE,WACVD,GAAY,GAGpB,MAAOE,GACHF,GAAY,EAGhB,MAAOA,GAIX,QAASG,KACL,OAAQpT,GAAG+N,UAAY/N,GAAGgO,UAC+C7J,SAArEmJ,UAAUC,UAAU8F,MAAM,uCAIlC,QAASC,KACL,OAAQtT,GAAG+N,UAAY/N,GAAGgO,UAC+C7J,SAArEmJ,UAAUC,UAAU8F,MAAM,uCAIlC,QAASE,KACL,GAAIrO,OAAO+E,eAAgB,CAIvB,MAA+B9F,UAHrBnE,GAAG+J,oBAGFyJ,gBAGf,OAAO,EAIX,QAASC,KACL,MAAiCtP,UAA1Be,OAAOwO,eAKlB,QAASC,KACL,QAAIJ,KAIGE,IAGX,QAASG,KAEL,MAA2DzP,UAApDwF,SAASC,cAAc,SAASiK,gBAG3C,QAASC,KACL,IACI,QAAS5O,OAAO6O,cAEZ/T,GAAG6G,WAAW3B,OAAO6O,aAAaC,SAE1C,MAAO7J,GAEH,OAAO,GAIf,QAAS8J,KACL,GAAIC,GAAOvK,SAASC,cAAc,OAElC,QAAQ,aAAesK,IAAS,eAAiBA,IAAQ,UAAYA,MAChElU,GAAGoO,YAAcpO,GAAGsO,MAhG7B,GAAI6F,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CAwHJ,OAnCAd,GAAoBpB,IAEpBuB,EAA4BH,GAAqBnU,GAAGyJ,uBAEpD2K,EAAyBE,IAA8BtU,GAAGyK,eAE1D4J,EAAmBC,GAA6BL,IAEhDM,EAAqBF,GAAoBjB,IAEzCoB,EAAmBF,GAA6BtU,GAAGwK,0BAEnDiK,EAAiBH,GAA6BE,GAAoBV,IAElEY,EAAyBJ,GAA6BhB,IAEtDqB,EAAqBR,IAA6ChQ,SAAvBe,OAAOgQ,aAA6BZ,GAE/EO,EAA4BtB,IAE5BqB,EAAwBnB,IAExBqB,EAAyBnB,IAEzBoB,EAA0BnB,IAE1BoB,EAAwBV,GAAmDnQ,SAAtBe,OAAOwG,WAE5DuJ,EAA0B,WACtB,QAAIX,KACQtU,GAAGyK,iBAAmBzK,GAAG0O,iBAMrCyG,cAAeb,EACfc,cAAehB,EACfiB,iBAAkBf,EAClBgB,SAAUd,EACVe,eAAgBT,EAChBU,kBAAmBZ,EACnBa,kBAAmBZ,EACnBa,gBAAiBxQ,OAAOyQ,kBACxBC,SAAUvB,EACVwB,WAAYtB,EACZuB,gBAAiBf,EACjBgB,cAAef,EACfgB,gBAAiBhB,EACjBiB,mBAAoB3B,EACpB4B,MAAO1B,EACP2B,YAAalB,EACbmB,OAAQ3B,EACR4B,QAASrB,GAAyBZ,EAClCkC,aAActW,GAAG6N,SACjB0I,0BAA2BvW,GAAGsO,MAC9BkI,UAAWrC,EACXsC,WAAY9B,EACZ+B,oBAAqBpC,EACrBqC,mBAAoBrC,EACpBsC,eAAgBlC,MChKxB1U,GAAG6W,iBAAmB,SAASC,GAC3B,YACA,UAAUA,GAAgBA,EAAaC,MAAQ/W,GAAG6G,WAAWiQ,EAAaC,QAG9E/W,GAAG4L,QAAU,WACT,YAEA,IAAIoL,GAAaC,EACbC,KACAC,KACAC,KACAC,EAAQ,CAEZrX,IAAG6B,OAAOxB,MACN0W,KAAM,SAASO,EAAWC,GAgBtB,MAfc,KAAVF,GACIC,GACAJ,EAAiBhU,KAAKoU,GAEtBC,GACAJ,EAAiBjU,KAAKqU,IAGrBF,KAAU,EACfE,GAAaA,EAAUtH,MAAM,KAAMgH,GAE9BK,GACLA,EAAUrH,MAAM,KAAM+G,GAGnB3W,MAGXmX,KAAM,SAASnI,GAQX,MAPc,KAAVgI,EACAD,EAAclU,KAAKmM,GAGnBA,EAASY,MAAM,KAAsB9L,SAAhB8S,EAA4BD,EAAcC,GAG5D5W,MAGXyL,QAAS,WAgBL,MAfAuL,GAAQ,EACRL,EAAc7O,UAEV+O,EAAiBnR,QACjB/F,GAAG+C,KAAKmU,EAAkB,SAASlU,EAAKqM,GACpCA,EAASY,MAAM,KAAM+G,KAIzBI,EAAcrR,QACd/F,GAAG+C,KAAKqU,EAAe,SAASpU,EAAKqM,GACjCA,EAASY,MAAM,KAAM+G,KAItB3W,MAGX2L,QAAS,WAgBL,MAfAqL,IAAQ,EACRJ,EAAc9O,UAEVgP,EAAiBpR,QACjB/F,GAAG+C,KAAKoU,EAAkB,SAASnU,EAAKqM,GACpCA,EAASY,MAAM,KAAMgH,KAIzBG,EAAcrR,QACd/F,GAAG+C,KAAKqU,EAAe,SAASpU,EAAKqM,GACjCA,EAASY,MAAM,KAAMgH,KAItB5W,SC3EnBL,GAAGyX,UAAY,SAASC,EAAeC,GACnC,YAEA3X,IAAG6B,OAAOxB,MACNqX,cAAeA,EAEfE,OAAQ,WACJ,MAAOD,GAASD,OCF5B1X,GAAG6X,aAAe,SAASC,GACvB,YA0CA,SAASC,KACL,GAAIrO,GAAQC,SAASC,cAAc,QAmEnC,OAjEAF,GAAMyH,aAAanR,GAAG6X,aAAaG,oBAAqBC,GACxDvO,EAAMyH,aAAa,QAAS+G,EAAQC,OAEpCC,EAAKC,YAAYH,EAAQrO,SAAUH,GAE/BwO,EAAQI,SAAWtY,GAAG8S,kBAAkBgD,iBAExCpM,EAAMyH,aAAa,kBAAmB,IAGtC+G,EAAQK,aACR7O,EAAMyH,aAAa,SAAU+G,EAAQK,aAGzC7O,EAAMyH,aAAa,OAAQ,QAC3BzH,EAAMyH,aAAa,OAAQ+G,EAAQnW,MAEnC/B,GAAG0J,GAAOpI,KACNkX,SAAU,WAIVC,MAAO,EACPC,IAAK,EACLC,WAAY,QASZC,SAAU5Y,GAAGqN,OAASrN,GAAGyN,MAAQ,SAAW,QAC5CoL,OAAQ,EACRC,QAAS,EACTC,OAAQ,UACRtX,QAAS,KAKZzB,GAAGwN,OAASxN,GAAG0J,GAAOpI,KAAK0X,OAAQ,SAEpCd,EAAQjY,QAAQmR,YAAY1H,GAE5BuP,EAAe3Y,OAAOoJ,EAAO,SAAU,WACnCwO,EAAQgB,SAASxP,KAIrBuP,EAAe3Y,OAAOoJ,EAAO,YAAa,WACtC1J,GAAGkY,EAAQjY,SAASoC,SAAS6V,EAAQiB,cAEzCF,EAAe3Y,OAAOoJ,EAAO,WAAY,WACrC1J,GAAGkY,EAAQjY,SAASqC,YAAY4V,EAAQiB,cAG5CF,EAAe3Y,OAAOoJ,EAAO,QAAS,WAClC1J,GAAGkY,EAAQjY,SAASoC,SAAS6V,EAAQkB,cAEzCH,EAAe3Y,OAAOoJ,EAAO,OAAQ,WACjC1J,GAAGkY,EAAQjY,SAASqC,YAAY4V,EAAQkB,cAGrC1P,EA5GX,GAgCIA,GAAOuO,EAhCPG,EAAO/X,KAEP4Y,EAAiB,GAAIjZ,IAAGkS,eAExBgG,GAEIK,YAAa,KAGbtY,QAAS,KAETmZ,WAAY,yBAGZd,SAAS,EAGTa,WAAY,yBAEZE,4BAA4B,EAG5BxP,UAAU,EAGV9H,KAAM,SAGNmX,SAAU,SAASxP,KAEnByO,MAAO,KAKfnY,IAAG6B,OAAOqW,EAASJ,GAEnBG,EAAWjY,GAAGiN,cA2EdjN,GAAGkY,EAAQjY,SAASqB,KAChBkX,SAAU,WACVc,SAAU,SAEVC,UAAW,QAIfvZ,GAAG6B,OAAOxB,MACNmZ,SAAU,WACN,MAAO9P,IAGX+P,YAAa,WACT,MAAOxB,IAGXI,YAAa,SAASqB,EAAYC,GAC9B,GAAIjQ,GAAQiQ,GAAYtZ,KAAKmZ,UAKzBtB,GAAQmB,4BAA8BrZ,GAAGwO,SAAWxO,GAAG0O,aAAe1O,GAAG4O,oBACzElF,EAAMyH,aAAa,WAAY,IAI3BuI,EACAhQ,EAAMyH,aAAa,WAAY,IAG/BzH,EAAMkQ,gBAAgB,aAKlCC,eAAgB,SAAStB,GACjBA,IAAgBL,EAAQK,aACxB7O,EAAMyH,aAAa,SAAUoH,IAIrCuB,MAAO,WACCpQ,EAAMvI,YACNnB,GAAG0J,GAAOtI,SAGdpB,GAAGkY,EAAQjY,SAASqC,YAAY4V,EAAQkB,YACxC1P,EAAQ,KACRA,EAAQqO,OAIhBrO,EAAQqO,KAGZ/X,GAAG6X,aAAaG,oBAAsB,eCxLtChY,GAAG+Z,WAAa,SAASC,GACrB,YAQA,SAASC,GAAaC,GAClB,GAAIla,GAAG8G,QAAQoT,GAAU,CACrB,GAAIC,KAMJ,OAJAna,IAAG+C,KAAKmX,EAAS,SAASlX,EAAKoX,GAC3BD,EAAQjX,KAAK8B,EAAKoV,MAGfD,EAGX,MAAOnV,GAAKkV,GAGhB,QAASG,GAAeC,GACpB,GAAIta,GAAG8G,QAAQwT,GAAQ,CACnB,GAAIH,KAMJ,OAJAna,IAAG+C,KAAKuX,EAAO,SAAStX,EAAKuX,GACzBJ,EAAQjX,KAAK8B,EAAKwV,EAAOD,OAGtBJ,EAGX,MAAOnV,GAAKwV,EAAOF,IAGvB,QAASG,GAAgBC,GACrB,GAAIC,MACAC,KAAc5K,OAAO0K,EAYzB,OAVA1a,IAAG+C,KAAK6X,EAAU,SAASC,EAAOC,GAC9B,GAAIC,GAAsBC,EAASF,EAEP3W,UAAxB4W,GACA/a,GAAG+C,KAAKgY,EAAqB,SAASrK,EAAGuK,GACrCN,EAAczX,KAAK8B,EAAKiW,QAK7BN,EAhDX,GAAI3V,MACAwV,KACAQ,KACAE,KACAC,IA+CJnb,IAAG6B,OAAOxB,MAgBN+a,QAAS,SAASC,GACd,GAAIX,GAASW,EAAKX,QAAU1a,GAAG0a,OAAOY,WAClClB,EAAKpV,EAAK9B,MACNnB,KAAMsZ,EAAKtZ,KACXwZ,aAAcF,EAAKtZ,KACnBwY,KAAMc,EAAKd,KACXiB,KAAmB,MAAbH,EAAKG,MAAe,EAAKH,EAAKG,KACpCd,OAAQA,IACP,CA+BT,OA7BIW,GAAKI,UACLzW,EAAKoV,GAAIqB,QAAUJ,EAAKI,QAEQtX,SAA5BgX,EAAUE,EAAKI,WACfN,EAAUE,EAAKI,aAEnBN,EAAUE,EAAKI,SAASvY,KAAKkX,IAG7BiB,EAAKK,eACL1W,EAAKoV,GAAIsB,aAAeL,EAAKK,aAEavX,SAAtC+W,EAAeG,EAAKK,gBACpBR,EAAeG,EAAKK,kBAExBR,EAAeG,EAAKK,cAAcxY,KAAKkX,IAG3CpV,EAAKoV,GAAIA,GAAKA,EACdI,EAAOa,EAAKd,MAAQH,EAEKjW,SAArB6W,EAASN,KACTM,EAASN,OAEbM,EAASN,GAAQxX,KAAKkX,GAEtBiB,EAAKM,sBAAwBN,EAAKM,qBAAqBvB,GACvDJ,EAAc4B,eAAexB,EAAI,KAAMM,GAEhCN,GAGXyB,SAAU,SAASC,GACf,MAAI9b,IAAGuG,SAASuV,IAAmB9W,EAAKe,OACV5B,SAAtB2X,EAAe1B,GACRH,EAAa6B,EAAe1B,IAGNjW,SAAxB2X,EAAevB,KACbF,EAAeyB,EAAevB,MAGhCuB,EAAepB,OACbD,EAAgBqB,EAAepB,QADrC,OAKE1a,GAAG6B,UAAWmD,GAAM,IAInC8U,MAAO,WACH9U,KACAwV,KACAQ,KACAG,MAGJY,UAAW,SAAS3B,EAAI4B,GACpB,GAAIC,GAAYjX,EAAKoV,GAAIM,OACrBwB,EAAyBlc,GAAG2F,QAAQqV,EAASiB,GAAY7B,EAE7DY,GAASiB,GAAWE,OAAOD,EAAwB,GAEnDlX,EAAKoV,GAAIM,OAASsB,EAEU7X,SAAxB6W,EAASgB,KACThB,EAASgB,OAEbhB,EAASgB,GAAW9Y,KAAKkX,GAEzBJ,EAAc4B,eAAexB,EAAI6B,EAAWD,IAGhDI,YAAa,SAAShC,EAAIiC,GACtB,GAAIC,GAAUtX,EAAKoV,GAAIG,IAEvBvV,GAAKoV,GAAIG,KAAO8B,EAChB7B,EAAO6B,GAAWjC,QACXI,GAAO8B,IAGlBC,WAAY,SAASnC,EAAIoC,GACrBxX,EAAKoV,GAAIrY,KAAOya,GAGpBC,WAAY,SAASrC,EAAIsC,GACrB1X,EAAKoV,GAAIoB,KAAOkB,GAIpBC,YAAa,SAASC,EAAUC,GAC5B7X,EAAK4X,GAAUC,SAAWA,GAG9BC,mBAAoB,SAAS1C,GACzB,GAAIsB,GAAe1W,EAAKoV,GAAIsB,YAE5B,OAAIA,GACOR,EAAeQ,OAK9BqB,cAAe,SAAS3C,GAGpB,MAAOe,GAFOnW,EAAKoV,GAAIqB,aAOnCzb,GAAG0a,QACCY,WAAY,aACZ0B,UAAW,YACXC,SAAU,WACVC,OAAQ,SACRC,SAAU,WACVC,OAAQ,SACRC,UAAW,YACXC,gBAAiB,kBACjBC,kBAAmB,oBACnBC,cAAe,gBACfC,cAAe,gBACfC,SAAU,WACVC,QAAS,WC1MZ,WACG,YAEA3d,IAAG4d,eAECC,SAAU,SAASC,EAAiBC,EAAQC,GACxC3d,KAAK4d,SAASH,EAAiBC,EAAQC,IAG3CE,gBAAiB,SAASC,GACtB,GAAI/F,GAAO/X,IAEXL,IAAG+C,KAAKob,EAAgB,SAAStD,EAAOuD,GACpChG,EAAKiG,eAAeD,MAI5BH,SAAU,SAASjZ,EAAM+Y,EAAQC,GAC7B3d,KAAKie,kCAEL,IAAI7C,GAAqC,IAA3Bpb,KAAKke,WAAWxY,OAAe/F,GAAGiN,cAAgB5M,KAAKme,gBAEjEC,EAAcze,GAAG4P,KAAK,SAAStE,GAC3BjL,KAAKqe,gBACDpT,KAAMA,EACNvJ,KAAM1B,KAAKse,SAASC,MAAMC,aAC3BpD,EAASqD,IACbze,MAEH0e,EAAkB/e,GAAG4P,KAAK,SAASoP,GAC/B3e,KAAKqe,eAAeM,EAAUvD,EAASqD,IACxCze,MAEH4e,EAAgBjf,GAAG4P,KAAK,SAASvL,GAC7B,GAAIiH,GAAOtL,GAAGoE,aAAaC,EAE3BhE,MAAKqe,gBACDpT,KAAMA,EACNvJ,KAAM1B,KAAKse,SAASC,MAAMC,YAAc,QACzCpD,EAASqD,IACbze,MAEH6e,EAAoBlf,GAAG4P,KAAK,SAASuP,GACjC,GAAIC,GAAoBD,EAAW5a,SAAW4a,EAAW5a,QAAU,IAC/D+G,EAAOtL,GAAGoE,aAAa+a,EAAW9a,OAAQ8a,EAAW5e,KAAM6e,EAE/D/e,MAAKqe,gBACDpT,KAAMA,EACNvJ,KAAMod,EAAWpd,MAClB0Z,EAASqD,IACbze,MAEHgf,EAAqBrf,GAAG4P,KAAK,SAAS0P,GAClC,GAAItf,GAAG+I,QAAQuW,IAAgBtf,GAAG8S,kBAAkBqC,cAAe,CAC/D,GAAIoK,GAAQtX,MAAMvB,UAAUwB,MAAMtB,KAAK0Y,EAAYC,OAC/CnH,EAAO/X,IAEXL,IAAG+C,KAAKwc,EAAO,SAASvc,EAAKwc,GACzBpH,EAAKsG,eAAec,EAAM/D,EAASqD,SAIvCze,MAAKqe,eAAeY,EAAa7D,EAASqD,IAE/Cze,MAEHof,EAAgB,WACRzf,GAAG0I,WAAW1D,KACdA,EAAOiD,MAAMvB,UAAUwB,MAAMtB,KAAK5B,IAEtCA,KAAUgL,OAAOhL,IAGrBoT,EAAO/X,KACPye,IAEJze,MAAKme,gBAAkB/C,EAEnBzW,IACAya,IAEAzf,GAAG+C,KAAKiC,EAAM,SAAShC,EAAK0c,GACpB1f,GAAG6I,cAAc6W,GACjBL,EAAmBK,GAEd1f,GAAGuJ,OAAOmW,GACfjB,EAAYiB,GAEP1f,GAAGuG,SAASmZ,GACbA,EAAcpU,MAAQoU,EAAc3d,KACpCgd,EAAgBW,GAEXA,EAAcrb,QAAUqb,EAAc3d,MAC3Cmd,EAAkBQ,GAGjBA,EAAcpW,SAAmD,WAAxCoW,EAAcpW,QAAQF,cACpD6V,EAAcS,GAGdtH,EAAKjS,IAAIuZ,EAAgB,6CAA8C,UAI/Erf,KAAK8F,IAAI,YAAc2Y,EAAc/Y,OAAS,WAC9C1F,KAAKsf,uBAAuBb,EAAef,EAAQC,KAI3D4B,OAAQ,SAASxF,GACb/Z,KAAKwf,SAASD,OAAOxF,IAGzB0F,UAAW,WACP,GAAIC,MACA3H,EAAO/X,IAEXL,IAAG6B,OAAOke,EAAe1f,KAAKke,YAC9Bve,GAAG+C,KAAKgd,EAAe,SAAS/c,EAAKgd,GACjC5H,EAAKwH,OAAOI,KAGhB3f,KAAKwf,SAASC,aAGlBG,iBAAkB,WACd5f,KAAKke,eAGT2B,eAAgB,SAAS9F,GACrB,GAAI+F,GAAa9f,KAAK+f,YAAYvE,UAAUzB,GAAIA,GAEhD,UAAKpa,GAAG8S,kBAAkBoD,QAAU7V,KAAKse,SAASrJ,SAAS+K,WAIvDF,EAAWzF,SAAW1a,GAAG0a,OAAO0C,QAChC/c,KAAK8F,IAAInG,GAAG8H,OAAO,yDAA0DsS,EAAI/Z,KAAKigB,QAAQlG,KAC9F/Z,KAAKkgB,YAAYnG,IACV,IAGP/Z,KAAK8F,IAAInG,GAAG8H,OAAO,sDAAuDsS,EAAI/Z,KAAKigB,QAAQlG,IAAM,UAG9F,KAGXoG,WAAY,SAASpG,GACjB,MAAO/Z,MAAKogB,gBAAgBrG,IAIhCsG,UAAW,SAASC,GAChB,MAAOtgB,MAAKwf,SAASe,QAAQD,IAOjCE,cAAe,SAASC,EAAQC,EAAaC,EAASC,EAAYC,GAC9D,GACIC,GAAWjJ,EADXkJ,EAAkB,GAAIphB,IAAG4L,OAqC7B,OAlCIvL,MAAKghB,iBACLF,EAAY9gB,KAAKihB,eAAeR,GAChC5I,GACIgJ,qBAAsBA,EACtBF,QAASA,EAAU,EAAIA,EAAU,KACjCO,MAAOP,EAAU,IAKhBC,GAAcjhB,GAAG8S,kBAAkBiD,gBACpCoL,EAAY9gB,KAAKmhB,QAAQV,IAIZ,MAAbK,EACAC,EAAgBpV,SAASyV,UAAWV,EAAa5W,MAAO,2BAGxD9J,KAAKghB,gBAAgBK,SAASP,EAAWJ,EAAa7I,GAASnB,KAC3D,SAAiB4K,GACbP,EAAgBtV,QAAQ6V,IAG5B,SAAiBF,EAAWG,GACxBR,EAAgBpV,SAASyV,UAAWA,EAAWtX,MAAOyX,GAAU,oCAM5ER,EAAgBpV,SAASyV,UAAWV,EAAa5W,MAAO,mCAGrDiX,GAGXS,UAAW,SAASf,GAChB,MAAOzgB,MAAKyhB,WAAWzhB,KAAK0hB,qBAAqBjB,KAGrDkB,YAAa,SAASlB,GAClB,MAAOzgB,MAAK4hB,eAAeC,IAAIpB,IAGnCU,QAAS,SAASb,GACd,MAAOtgB,MAAKwf,SAAS2B,QAAQb,IAAiB,MAGlDwB,cAAe,WACX,MAAO9hB,MAAK+f,YAAYvE,UACpBnB,QACI1a,GAAG0a,OAAO2C,UACVrd,GAAG0a,OAAO4C,gBACVtd,GAAG0a,OAAOwC,UAEfnX,QAGPua,QAAS,SAASlG,GACd,MAAO/Z,MAAK+f,YAAYvE,UAAUzB,GAAIA,IAAKrY,MAI/CqgB,YAAa,SAAShI,GAClB,GAAIiI,GAAkBhiB,KAAKiiB,YAAYlI,GAAIA,IACvCyC,EAAW,IAQf,OANIwF,IACiCle,SAA7Bke,EAAgBxF,WAChBA,EAAWwF,EAAgBxF,UAI5BA,GAGX0F,sBAAuB,WACnB,MAAOliB,MAAKwf,SAAS0C,yBAGzBC,QAAS,SAASpI,GACd,MAAO/Z,MAAK+f,YAAYvE,UAAUzB,GAAIA,IAAKoB,MAG/CiH,cAAe,WACX,MAAOpiB,MAAKqiB,cAGhBC,yBAA0B,WACtB,GAAIC,GAAeviB,KAAKwiB,iBAExB,OAAID,GAAe,EACRA,EAAeviB,KAAKyiB,qBAGxB,MAGXR,WAAY,SAASxG,GACjB,MAAOzb,MAAK+f,YAAYvE,SAASC,IAGrCiH,QAAS,SAAS3I,GACd,MAAO/Z,MAAK+f,YAAYvE,UAAUzB,GAAIA,IAAKG,MAG/CyI,YAAa,SAAS5I,GAClB,MAAO/Z,MAAKwf,SAASoD,gBAAgB7I,IAGzCjU,IAAK,SAAS4B,EAAK1B,IACXhG,KAAKse,SAASuE,OAAW7c,GAAmB,SAAVA,EAG7BA,GAAmB,SAAVA,GACdrG,GAAGmG,IAAI,kBAAoBnG,GAAG6S,QAAU,KAAO9K,EAAK1B,GAHpDrG,GAAGmG,IAAI,kBAAoBnG,GAAG6S,QAAU,KAAO9K,IAQvDob,YAAa,SAAS/I,GAClB,GAAI+F,GAAa9f,KAAK+f,YAAYvE,UAAUzB,GAAIA,GAEhD,KAAKpa,GAAG8S,kBAAkBoD,QAAU7V,KAAKse,SAASrJ,SAAS+K,QACvD,OAAO,CAIX,IAAIrgB,GAAG2F,SAAS3F,GAAG0a,OAAO2C,UAAWrd,GAAG0a,OAAO4C,iBAAkB6C,EAAWzF,SAAW,EAAG,CACtF,GAAIra,KAAKwf,SAAS3J,MAAMkE,GAEpB,MADA/Z,MAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAO0C,SAClC,CAGP/c,MAAK8F,IAAInG,GAAG8H,OAAO,mCAAoCsS,EAAI/Z,KAAKigB,QAAQlG,IAAM,aAIlF/Z,MAAK8F,IAAInG,GAAG8H,OAAO,wDAAyDsS,EAAI/Z,KAAKigB,QAAQlG,IAAM,QAGvG,QAAO,GAGXgJ,cAAe,SAAShJ,GACpB/Z,KAAKwf,SAASwD,QAAQjJ,IAG1BN,MAAO,WACHzZ,KAAK8F,IAAI,yBAET9F,KAAKwf,SAAS/F,QACdzZ,KAAKke,cACLle,KAAKijB,gBACLjjB,KAAKkjB,kBACLljB,KAAKmjB,mBACLnjB,KAAKihB,kBAELthB,GAAG+C,KAAK1C,KAAKojB,SAAU,SAASzgB,EAAK0gB,GACjCA,EAAO5J,UAGXzZ,KAAKsjB,aAAa7J,QAClBzZ,KAAK4hB,eAAenI,QACpBzZ,KAAKyiB,qBAAuB,EAC5BziB,KAAKqiB,aAAe,EACpBriB,KAAK+f,YAAYtG,QACjBzZ,KAAK0hB,wBAEL1hB,KAAKujB,eAAiBvjB,KAAKujB,cAAc9J,QACzCzZ,KAAKse,SAASkF,QAAQC,gBAAkBzjB,KAAK0jB,sBAE7C1jB,KAAK2jB,kCACL3jB,KAAK4jB,+BAEL5jB,KAAK6jB,gBAAkB7jB,KAAK6jB,eAAepK,QAE3CzZ,KAAK8jB,uBAAuBrK,SAGhCsK,MAAO,SAAShK,GACZ,MAAO/Z,MAAKgkB,aAAajK,IAG7BkK,WAAY,SAASlK,EAAImK,GACrB,GAAInM,GAAO/X,IAEX,OAAOL,IAAGwkB,OAAO9d,UAAU4d,WAAWlK,EAAImK,GACtCpe,IAAKnG,GAAG4P,KAAKwI,EAAKjS,IAAKiS,GACvBoJ,QAASxhB,GAAG4P,KAAKwI,EAAKoJ,QAASpJ,GAC/B+H,WAAY/H,EAAKgI,eAIzBqE,iBAAkB,SAASC,EAAStK,GAChC/Z,KAAKskB,oBAAoBC,IAAIF,EAAStK,IAG1CyK,oBAAqB,SAASzK,EAAIpV,GAC9B3E,KAAK8jB,uBAAuBS,IAAI5f,EAAMoV,IAG1C0K,2BAA4B,SAASJ,EAAStK,GAC1C/Z,KAAK0kB,8BAA8BH,IAAIF,EAAStK,IAGpD4K,sBAAuB,SAAShH,EAAU5D,GACtC/Z,KAAK4kB,yBAAyBL,IAAI5G,EAAU5D,IAGhD8K,oBAAqB,SAASnH,EAAQ3D,GAClC/Z,KAAK8kB,uBAAuBP,IAAI7G,EAAQ3D,IAI5CgL,YAAa,SAASpH,EAAU5D,GAC5B/Z,KAAK4hB,eAAe2C,IAAI5G,EAAU5D,IAGtCiL,QAAS,SAASC,GACdjlB,KAAKklB,4BAA4BD,IAGrCE,aAAc,SAASC,GACnBplB,KAAKwiB,kBAAoB4C,GAG7BC,QAAS,SAAStL,EAAIoC,GAClBnc,KAAK+f,YAAY7D,WAAWnC,EAAIoC,IAGpCmJ,UAAW,SAAS5H,EAAQ3D,GACxB/Z,KAAKsjB,aAAaiB,IAAI7G,EAAQ3D,IAGlCwL,QAAS,SAASxL,EAAIiC,GAClB,MAAOhc,MAAK+f,YAAYhE,YAAYhC,EAAIiC,IAY5CN,UAAW,SAAS3B,EAAI4B,GAEpB,IADiB3b,KAAKiiB,YAAYlI,GAAIA,IAElC,KAAM,IAAIpa,IAAGwB,MAAM4Y,EAAK,2BAG5B,QAAQ4B,GACJ,IAAKhc,IAAG0a,OAAOiD,QACXtd,KAAKwlB,kBAAkBzL,EAAI,MAAM,EACjC,MACJ,KAAKpa,IAAG0a,OAAO+C,cACXpd,KAAKwlB,kBAAkBzL,EAAI,MAAM,EACjC,MACJ,SACI,GAAI0L,GAAe,+BAAiC/jB,KAAO,6BAA+Bia,CAE1F,MADA3b,MAAK8F,IAAI2f,GACH,GAAI9lB,IAAGwB,MAAMskB,KAI/BC,kBAAmB,WACgB,IAA3B1lB,KAAKke,WAAWxY,OAChB1F,KAAK2lB,WAAW,gBAGhB3lB,KAAK4lB,uBAQjBjmB,GAAGkmB,gBAEC7H,eAAgB,SAAS8H,GACrB,GAAI/N,GAAO/X,IAEX,OAAOA,MAAK+f,YAAYhF,SACpBb,KAAM4L,EAAY5L,KAClBxY,KAAMokB,EAAYpkB,KAClByZ,KAAM2K,EAAY3K,KAClBd,OAAQ1a,GAAG0a,OAAO6C,kBAClB5B,qBAAsB,SAASvB,GAC3B+L,EAAYC,oBAAsBhO,EAAK4M,sBAAsBmB,EAAYC,mBAAoBhM,GAC7F+L,EAAYE,kBAAoBjO,EAAK8M,oBAAoBiB,EAAYE,iBAAkBjM,GAEnF+L,EAAYG,eACZlO,EAAKkJ,eAAelH,GAAM+L,EAAYG,cAG1ClO,EAAKsK,eACLtK,EAAK0K,2BAKjByD,sBAAuB,SAAS/G,EAAMgH,GAC9BxmB,GAAGuI,OAAOiX,KACVA,EAAKiH,WAAapmB,KAAKqmB,aAAaF,KAI5CG,YAAa,SAASvgB,GAClB/F,KAAKse,SAASiI,UAAUC,QAAQ,KAAM,KAAMzgB,EAASjC,SAGzD2iB,qBAAsB,WAClB,GAAI1O,GAAO/X,IAEX,OAAO,IAAIL,IAAG+mB,yBACVC,OAAQ3mB,KAAKse,SAAS6B,WAAWwG,OAAOC,cACxCC,eAAgB7mB,KAAKse,SAASuI,eAC9BC,cAAe9mB,KAAKse,SAASyI,QAAQC,SACrCC,cAAejnB,KAAK0kB,8BACpBwC,YAAalnB,KAAK8kB,uBAClBqC,cAAennB,KAAK4kB,yBACpBwC,KAAMpnB,KAAKse,SAAS8I,KACpBthB,IAAKnG,GAAG4P,KAAKwI,EAAKjS,IAAKiS,GACvBsP,SAAU,SAAStN,GACfhC,EAAKuP,UAAUvN,GACfhC,EAAKuG,SAASiI,UAAUc,SAAStN,IAErCwN,iBAAkB,SAASxN,EAAIyN,EAAUC,GACrC1P,EAAKyN,kBAAkBzL,EAAIyN,EAAUC,GACrC1P,EAAKuG,SAASiI,UAAUgB,iBAAiBxN,EAAIyN,EAAUC,OAMnEC,oBAAqB,WACjB,GAAI3P,GAAO/X,IAEX,OAAO,IAAIL,IAAGgoB,cACVC,cAAe5nB,KAAKse,SAASuJ,MAAMD,cACnCrB,WACIzgB,IAAKnG,GAAG4P,KAAKwI,EAAKjS,IAAKiS,GACvB+P,cAAe,SAAS7c,GACpB8M,EAAKgQ,wBACDrmB,KAAM,kBACNsN,SAAUrP,GAAG4P,KAAKwI,EAAKuG,SAASiI,UAAUyB,gBAAiBjQ,EAAM9M,GACjEgM,UAAWtX,GAAG4P,KAAKwI,EAAKkQ,oBAAqBlQ,EAAM9M,GACnDid,WAAY,sBAOhCC,aAAc,SAASC,EAAcC,GACjC,GAAIC,MACAC,EAAWH,EACXI,KACAC,EAAiBJ,EACjBK,EAAO,SAASC,GACZ,MAAIhpB,IAAGuG,SAASyiB,GACLhpB,GAAG6B,UAAWmnB,GAElBA,GAEXC,EAAoB,WAChB,MAAIjpB,IAAG6G,WAAWiiB,GACPA,IAEJA,GAEXI,EAAwB,SAAS9O,EAAI+O,GAC7BL,GAAkB9oB,GAAGuG,SAAS4iB,IAC9BnpB,GAAG6B,OAAOsnB,EAAUF,KAGpBJ,EAAoBzO,IACpBpa,GAAG6B,OAAOsnB,EAAUN,EAAoBzO,IAIpD,QACIwK,IAAK,SAAS3hB,EAAKmX,GAEL,MAANA,GACAuO,KACAC,EAAWG,EAAK9lB,IAGhB0lB,EAAMvO,GAAM2O,EAAK9lB,IAIzBif,IAAK,SAAS9H,GACV,GAAIgP,EAYJ,OARIA,GADM,MAANhP,GAAcuO,EAAMvO,GACXuO,EAAMvO,GAGN2O,EAAKH,GAGlBM,EAAsB9O,EAAIgP,GAEnBL,EAAKK,IAGhBC,YAAa,SAASjP,EAAIgP,GAElBppB,GAAGuG,SAASoiB,KAED,OAAPvO,EACIpa,GAAG6G,WAAWuiB,GACdN,EAAiBM,GAGjBN,EAAiBA,MACjB9oB,GAAG6B,OAAOinB,EAAgBM,KAI9BP,EAAoBzO,GAAMyO,EAAoBzO,OAC9Cpa,GAAG6B,OAAOgnB,EAAoBzO,GAAKgP,MAK/ChoB,OAAQ,SAAS0f,GACb,aAAc6H,GAAM7H,IAGxBhH,MAAO,WACH6O,KACAE,KACAD,EAAWH,KAKvBa,yBAA0B,WACtB,GAAIlR,GAAO/X,IAEX,OAAO,IAAIL,IAAG+Z,YACVuG,QAAS,SAASlG,GACd,MAAOhC,GAAKkI,QAAQlG,IAExB2I,QAAS,SAAS3I,GACd,MAAOhC,GAAK2K,QAAQ3I,IAExBoI,QAAS,SAASpI,GACd,MAAOhC,GAAKoK,QAAQpI,IAExBwB,eAAgB,SAASxB,EAAI6B,EAAWD,GACpC5D,EAAKmR,sBAAsBnP,EAAI6B,EAAWD,GAC1C5D,EAAKuG,SAASiI,UAAUhL,eAAexB,EAAI6B,EAAWD,GACtD5D,EAAKoR,kBAAkBpP,EAAI4B,GAEvB5D,EAAK8L,gBACLuF,WAAW,WACPrR,EAAK8L,eAAetI,eAAexB,EAAI6B,EAAWD,IACnD,OAcnB0N,oBAAqB,SAASrO,GAM1B,QAASsO,KACL,QAAI3pB,GAAG8S,kBAAkBqC,kBAEjBiD,EAAKuG,SAASiL,YAAYC,gBAC1B7pB,GAAGsO,QACFtO,GAAGqO,QACJ+J,EAAK0R,oBAAoBC,EAAmB,WAK1B5lB,SAAlBkX,EAAKxR,SACEuO,EAAKuG,SAAS9U,SAGlBwR,EAAKxR,WApBpB,GAGI6Z,GAHAtL,EAAO/X,KACPkY,EAAc8C,EAAK2O,QAAU3pB,KAAKse,SAASsL,WAAW1R,YACtDwR,EAAoB1O,EAAK0O,mBAAqB1pB,KAAKse,SAASsL,WAAWF,iBA6C3E,OArBArG,GAAS,GAAI1jB,IAAG6X,cACZU,YAAaA,EACbtY,QAASob,EAAKpb,QACdmZ,WAAY/Y,KAAKse,SAASuL,QAAQC,YAClC7R,QAAS+C,EAAK/C,QACda,WAAY9Y,KAAKse,SAASuL,QAAQE,YAClC/Q,2BAA4BhZ,KAAKse,SAASiL,YAAYS,iBACtDxgB,SAAU8f,IACV5nB,KAAM1B,KAAKse,SAASyI,QAAQkD,UAC5BpR,SAAU,SAASxP,GACf0O,EAAKmS,eAAe7gB,IAExByO,MAAqB,MAAdkD,EAAKlD,MAAgB9X,KAAKse,SAASjb,KAAK8mB,eAAiBnP,EAAKlD,QAGzE9X,KAAKoqB,gBAAgBlY,YAAY,WAC7BmR,EAAOtR,YAGXgG,EAAKqL,SAASvgB,KAAKwgB,GAEZA,GAGXgH,qBAAsB,SAASC,EAAmBC,GAC9C,GAAIxS,GAAO/X,KACPwqB,KACA3S,GACIgL,MAAO7iB,KAAKse,SAASuE,MACrBgE,eAAgB7mB,KAAKse,SAASuI,eAC9BO,KAAMpnB,KAAKse,SAAS8I,KACpBF,YAAalnB,KAAKsjB,aAClB6D,cAAennB,KAAK4hB,eACpB3M,SAAUjV,KAAKse,SAASrJ,SACxBc,OAAQ/V,KAAKse,SAASvI,OACtBwI,MAAOve,KAAKse,SAASC,MACrBzY,IAAKnG,GAAG4P,KAAKwI,EAAKjS,IAAKiS,GACvB0S,kBAAmBzqB,KAAKse,SAASyF,MAAM2G,6BACvCC,WAAY,SAAS5Q,EAAIrY,EAAMkpB,EAAQC,GAC/BD,EAAS,GAAKC,EAAQ,IAItBL,EAAezQ,GACXyQ,EAAezQ,GAAI6Q,SAAWA,GAAUJ,EAAezQ,GAAI8Q,QAAUA,IACrE9S,EAAK+S,YAAY/Q,EAAIrY,EAAMkpB,EAAQC,GACnC9S,EAAKuG,SAASiI,UAAUoE,WAAW5Q,EAAIrY,EAAMkpB,EAAQC,KAIzD9S,EAAK+S,YAAY/Q,EAAIrY,EAAMkpB,EAAQC,GACnC9S,EAAKuG,SAASiI,UAAUoE,WAAW5Q,EAAIrY,EAAMkpB,EAAQC,IAGzDL,EAAezQ,IAAO6Q,OAAQA,EAAQC,MAAOA,KAGjDE,WAAY,SAAShR,EAAIrY,EAAMY,EAAQ0oB,SAC5BR,GAAezQ,EAEtB,IACI7K,GADAmL,EAAStC,EAAKkK,YAAYlI,GAAIA,IAAKM,MAOnCA,KAAW1a,GAAG0a,OAAO6C,mBAAqB7C,IAAW1a,GAAG0a,OAAO8C,gBAInEjO,EAAS6I,EAAKkT,YAAYlR,EAAIrY,EAAMY,EAAQ0oB,GAIxC9b,YAAmBvP,IAAG4L,QACtB2D,EAAOiI,KAAK,WACRY,EAAKuG,SAASiI,UAAUwE,WAAWhR,EAAIrY,EAAMY,EAAQ0oB,KAIzDjT,EAAKuG,SAASiI,UAAUwE,WAAWhR,EAAIrY,EAAMY,EAAQ0oB,KAG7DE,SAAU,SAASnR,EAAIrY,EAAMypB,GACzB,GAAI7f,GAAU,GAAI3L,IAAG4L,OAgBrB,OAdAwM,GAAKgQ,wBACDrmB,KAAM,WACNsN,SAAUrP,GAAG4P,KAAKwI,EAAKuG,SAASiI,UAAU2E,SAAUnT,EAAMgC,EAAIrY,GAC9DwV,UAAW5L,EAAQK,QACnBsL,UAAW,WACPkU,EAAyBzU,KAAK,WAC1BqB,EAAKqT,UAAUrR,EAAIrY,KAGvB4J,EAAQG,WAEZyc,WAAYnO,IAGTzO,GAEX+f,aAAc1rB,GAAG4P,KAAKvP,KAAKsrB,cAAetrB,MAC1CurB,SAAU,SAASxR,EAAIrY,GACnBqW,EAAKyT,UAAUzR,EAAIrY,EACnB,IAAI+pB,GAAiB1T,EAAKuG,SAASiI,UAAUgF,SAASxR,EAAIrY,EAE1D,OAAI/B,IAAG6W,iBAAiBiV,IACpB1T,EAAKjS,IAAInG,GAAG8H,OAAO,+DAAgEsS,IAC5E0R,IAGJ,GAAI9rB,IAAG4L,SAAUE,WAE5BigB,cAAe,SAAS3R,EAAIrY,EAAMiqB,GAC9B5T,EAAK6T,eAAe7R,EAAI4R,EACxB,IAAIE,GAAsB9T,EAAKuG,SAASiI,UAAUmF,cAAc3R,EAAIrY,EAAMiqB,EAE1E,OAAIhsB,IAAG6W,iBAAiBqV,IACpB9T,EAAKjS,IAAInG,GAAG8H,OAAO,uEAAwEsS,EAAI4R,EAAUG,YAClGD,IAGJ,GAAIlsB,IAAG4L,SAAUE,WAE5BsgB,qBAAsB,SAAShS,EAAI4R,EAAWrpB,EAAQ0oB,GAClDjT,EAAKuG,SAASiI,UAAUwF,qBAAqBnc,MAAMmI,EAAMjQ,YAE7DkkB,SAAU,SAASjS,EAAIrY,EAAMiqB,EAAWM,GACpC,MAAOlU,GAAKuG,SAASiI,UAAUyF,SAASjS,EAAIrY,EAAMiqB,EAAWM,IAEjEC,YAAa,SAASnS,EAAIrY,EAAMyqB,EAAcnB,GAC1C,MAAOjT,GAAKqU,aAAaxc,MAAMmI,EAAMjQ,YAEzCukB,cAAe,SAAStS,EAAIiC,GACxBjE,EAAKjS,IAAI,sCAAwCiS,EAAK2K,QAAQ3I,GAAM,SAAWiC,EAAU,KACzFjE,EAAKwN,QAAQxL,EAAIiC,IAErBiE,QAAStgB,GAAG4P,KAAKwI,EAAKkI,QAASlI,GAC/B2K,QAAS/iB,GAAG4P,KAAKwI,EAAK2K,QAAS3K,GAC/BoK,QAASxiB,GAAG4P,KAAKwI,EAAKoK,QAASpK,GAC/BuU,QAAS3sB,GAAG4P,KAAKwI,EAAKwU,SAAUxU,GAChCyU,cAAe,SAAStS,GACpB,MAAOnC,GAAKkK,YAAY/H,KAAMA,KAElCuS,SAAU,SAAS1S,GACf,GAAIM,GAAStC,EAAKkK,YAAYlI,GAAIA,IAAKM,MACvC,OAAOA,KAAW1a,GAAG0a,OAAOwC,QACxBxC,IAAW1a,GAAG0a,OAAOsC,WACrBtC,IAAW1a,GAAG0a,OAAO4C,iBACrB5C,IAAW1a,GAAG0a,OAAO0C,QAE7BN,mBAAoB1E,EAAKgI,YAAYtD,mBACrCC,cAAe3E,EAAKgI,YAAYrD,cAChCgQ,aAAc,SAAS3S,GACnB,MAAOhC,GAAKkK,YAAYlI,GAAIA,IAAKM,SAAW1a,GAAG0a,OAAO2C,WAE1D2P,oBAAqBhtB,GAAG4P,KAAKwI,EAAK6U,qBAAsB7U,GACxD2D,UAAW,SAAS3B,EAAIM,GACpBtC,EAAKgI,YAAYrE,UAAU3B,EAAIM,IAgB3C,OAZA1a,IAAG+C,KAAK1C,KAAKse,SAASyI,QAAS,SAAShb,EAAMnJ,GAC1CiV,EAAQ9L,GAAQnJ,IAGpBiV,EAAQoP,cAAgBjnB,KAAKskB,oBAEzBgG,GACA3qB,GAAG+C,KAAK4nB,EAAmB,SAASlb,EAAKxM,GACrCiV,EAAQzI,GAAOxM,IAIhB,GAAIjD,IAAGktB,wBAAwBhV,EAAS0S,IAGnDuC,oBAAqB,SAAS/S,GAC1B/Z,KAAKyiB,uBACLziB,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAOuC,WAG7CmQ,YAAa,SAASliB,GAClB,GAAc,IAAVA,EACA,MAAOA,GAAQ7K,KAAKse,SAASjb,KAAK2pB,YAAY,EAElD,IAAI3c,IAAI,CACR,GACIxF,IAAgB,IAChBwF,UACKxF,EAAQ,IAEjB,OAAOvJ,MAAK2rB,IAAIpiB,EAAO,IAAKqiB,QAAQ,GAAKltB,KAAKse,SAASjb,KAAK2pB,YAAY3c,IAK5E8c,0BAA2B,WACvB,GAAIpV,GAAO/X,IAEXA,MAAKotB,qBAELztB,GAAG+C,KAAK1C,KAAKse,SAAS+O,aAAc,SAAS1qB,EAAK2qB,GAC9C,GAAI9jB,GAAW8jB,EAAuB9jB,SAClCogB,EAAajqB,GAAG6B,UAAWuW,EAAKuG,SAASsL,YAAY,GACrD2D,EAAkB5tB,GAAG6B,UAAW8rB,EAEnBxpB,UAAb0F,IACAA,EAAWuO,EAAKuG,SAAS9U,UAGzB+jB,EAAgB3D,YAChBjqB,GAAG6B,OAAOooB,EAAY0D,EAAuB1D,YAAY,GAG7DjqB,GAAG6B,OAAO+rB,GACN/jB,SAAUA,EACVogB,WAAYA,IACb,GAEH7R,EAAKyV,iBAAiBD,MAI9B9L,WAAY,SAAS7J,GACjB,GAAI6V,GAAmBztB,KAAKotB,kBAAkBxV,EAE9C,OAAI6V,GACOA,EAAiB7tB,QAEnBgY,IAAa5X,KAAK0tB,iBAChB1tB,KAAKse,SAAS+E,OADpB,QAYTgD,aAAc,SAASsH,GACnB,GAAIC,GAAQC,EACRC,EAAkBH,CAQtB,IALIG,YAA2BnuB,IAAGyX,YAC9B0W,EAAkBA,EAAgBzW,eAIlCyW,IAAoBnuB,GAAGuJ,OAAO4kB,GAAkB,CAChD,GAAInuB,GAAGuI,OAAO4lB,GACV,MAAOA,GAAgB1H,UAEtB,IAA8C,UAA1C0H,EAAgB7kB,QAAQF,eACU,SAAvC+kB,EAAgB5tB,KAAK6I,cAErB,MAAO+kB,GAAgBjqB,aAAalE,GAAG6X,aAAaG,oBAYxD,IATAiW,EAASE,EAAgBrrB,qBAAqB,SAE9C9C,GAAG+C,KAAKkrB,EAAQ,SAASjrB,EAAK0G,GAC1B,GAAmC,SAA/BA,EAAMxF,aAAa,QAEnB,MADAgqB,GAAYxkB,GACL,IAIXwkB,EACA,MAAOA,GAAUhqB,aAAalE,GAAG6X,aAAaG,uBAK1DiV,qBAAsB,SAASnM,GAC3B,MAAOzgB,MAAK8jB,uBAAuBjC,IAAIpB,IAG3CsN,gBAAiB,WACb,MAAO/tB,MAAK+f,YAAYvE,UACpBnB,QACI1a,GAAG0a,OAAO2C,UACVrd,GAAG0a,OAAO4C,gBACVtd,GAAG0a,OAAOwC,OACVld,GAAG0a,OAAOY,WACVtb,GAAG0a,OAAOsC,UACVhd,GAAG0a,OAAO0C,UAEfrX,QAKPsoB,mBAAoB,SAASpW,GACzB,GAAI2V,GAAkBvtB,KAAKotB,kBAAkBxV,EAE7C,OAAO2V,GAAkBA,EAAgB3D,WAAa5pB,KAAKse,SAASsL,YAGxEqE,yBAA0B,SAASC,GAC/B,MAAIA,GAAY/O,eAAgBxf,IAAGyX,WAE3B1V,KAAM/B,GAAG+R,YAAYwc,EAAY/O,KAAK9H,eACtC8D,KAAM+S,EAAY/O,KAAK9H,cAAc8D,OAKzCzZ,KAAM1B,KAAKiiB,YAAYlI,GAAImU,EAAYnU,KAAKrY,KAC5CyZ,KAAMnb,KAAKiiB,YAAYlI,GAAImU,EAAYnU,KAAKoB,OAIpDgT,0BAA2B,SAASC,GAChC,GAAIrW,GAAO/X,KACPquB,IAMJ,OAJA1uB,IAAG+C,KAAK0rB,EAAc,SAASzrB,EAAKurB,GAChCG,EAAgBxrB,KAAKkV,EAAKkW,yBAAyBC,MAGhDG,GAIXC,oBAAqB,WACjB,GAAItuB,KAAKse,SAASiQ,OAAOtgB,KAAOtO,GAAGsO,MAAO,CACtC,GACIoV,GAASrjB,KAAKse,SAASiQ,OAAOlL,OAC9BzL,EAAWyL,EAASrjB,KAAKqmB,aAAahD,GAAUrjB,KAAK0tB,iBACrDc,EAAaxuB,KAAKse,QAGlB1G,IAAYA,IAAa5X,KAAK0tB,mBAC9Bc,EAAaxuB,KAAKotB,kBAAkBxV,IAIxC4W,EAAWhlB,UAAW,EAGoB,OAAtCglB,EAAW5E,WAAW1R,YACtBsW,EAAW5E,WAAW1R,YAfJ,yBAkBlBsW,EAAW5E,WAAW1R,aAAe;sIAIzCvY,GAAG+C,KAAK1C,KAAKojB,SAAU,SAASzgB,EAAK0gB,GACjC,GAAIA,EAAOjK,gBAAkBxB,EAIzB,MAHAyL,GAAOrL,YAAYwW,EAAWhlB,UAC9B6Z,EAAO7J,eAAegV,EAAWtW,cAE1B,MAMvB6P,uBAAwB,SAAS0G,GAC7B,GAAI1W,GAAO/X,KACP0uB,EAAiBD,EAAQzf,UAE7B,OAAIrP,IAAG6W,iBAAiBkY,IACpB1uB,KAAK8F,IAAI2oB,EAAQ/sB,KAAO,kBAAoB+sB,EAAQ/sB,KAAO,gCAAkC+sB,EAAQvG,YAC9FwG,EAAehY,KAClB,SAASiY,GACL5W,EAAKjS,IAAI2oB,EAAQ/sB,KAAO,wBAA0B+sB,EAAQvG,YAC1DuG,EAAQxX,UAAU0X,IAEtB,WACQF,EAAQvX,WACRa,EAAKjS,IAAI2oB,EAAQ/sB,KAAO,wBAA0B+sB,EAAQvG,YAC1DuG,EAAQvX,aAGRa,EAAKjS,IAAI2oB,EAAQ/sB,KAAO,wBAA0B+sB,EAAQvG,gBAKtEwG,KAAmB,EACnBD,EAAQxX,UAAUyX,GAGdD,EAAQvX,WACRlX,KAAK8F,IAAI2oB,EAAQ/sB,KAAO,mCAAqC+sB,EAAQvG,WAAa,iCAClFuG,EAAQvX,aAGRlX,KAAK8F,IAAI2oB,EAAQ/sB,KAAO,mCAAqC+sB,EAAQvG,WAAa,wBAInFwG,IAIXrQ,eAAgB,SAASc,EAAM/D,EAASwT,GACpC,GAAI7W,GAAO/X,KACPka,EAAOva,GAAGiN,cACVuO,GAAO,EACPzZ,EAAO/B,GAAG+R,YAAYyN,GACtB0P,EAAa1P,EAAKlU,MAAQkU,EAC1B2P,EAAU9uB,KAAK+uB,sBACX/uB,KAAK+uB,sBACLpvB,GAAG4P,KAAKwI,EAAKiX,sBAAuBjX,IAEvCpY,GAAG+I,QAAQmmB,IAAeA,EAAW1T,MAAQ,IAC9CA,EAAO0T,EAAW1T,MAGtB2T,EAAQD,EAAYntB,EAAMwY,EAAMiB,EAAMyT,EAAoBxT,EAASpb,KAAKse,SAASyI,QAAQC,UACrFlH,WAAY/H,EAAKgI,YACjBmH,YAAanP,EAAKuL,aAClB2L,iBAAkB,SAASlV,EAAIoF,GAC3BpH,EAAKyH,SAASrP,IAAI4J,EAAIoF,GACtBpH,EAAK0K,uBACL1K,EAAKmX,aAAanV,OAK9BiV,sBAAuB,SAAS7P,EAAMzd,EAAMwY,EAAMiB,EAAMgU,EAAU/T,GAC9D,GAAIrB,GAAK/Z,KAAK+f,YAAYhF,SAASb,KAAMA,EAAMxY,KAAMA,EAAMyZ,KAAMA,EAAMC,QAASA,GAEhFpb,MAAKwf,SAASrP,IAAI4J,EAAIoF,GACtBnf,KAAKkvB,aAAanV,GAElB/Z,KAAKyiB,uBAEL0M,EAAStsB,MAAMkX,GAAIA,EAAIoF,KAAMA,KAGjC8I,oBAAqB,SAAShd,EAAMmkB,GAChC,GAAIC,GAAYpkB,EAAK/K,KAAKmF,MAAM,KAAK,GACjC3D,EAAO0tB,CAGC,OAAR1tB,IACAA,EAAO1B,KAAKse,SAASuJ,MAAMrJ,aAG/B9c,GAAQ,IAAM2tB,EAEdrvB,KAAK4d,UACDlc,KAAMA,EACNuJ,KAAMA,KAIdqkB,qBAAsB,SAASvV,GAC3B,GAAI/Z,KAAKiiB,YAAYlI,GAAIA,IAAKM,SAAW1a,GAAG0a,OAAOiD,QAAS,CACxD,GAAI5b,GAAO1B,KAAKigB,QAAQlG,EAExB/Z,MAAKyiB,uBACLziB,KAAKqiB,eACLriB,KAAKwf,SAASwD,QAAQjJ,GACtB/Z,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAOiD,SACzCtd,KAAK8F,IAAI,uBAAyBpE,EAAO,sBAIjD6tB,oBAAqB,SAASxV,EAAIyN,GAC9B,GAAI9lB,GAAO1B,KAAKigB,QAAQlG,EAExB/Z,MAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAO+C,eACzCpd,KAAK8F,IAAI,uBAAyBpE,EAAO,gBAAiB,SAKrD8lB,GAAyC1jB,SAA7B0jB,EAASrU,gBAItBnT,KAAKse,SAASiI,UAAUC,QAAQzM,EAAIrY,EAAM,4CAA8C8lB,EAASnN,OAAQmN,GAHzGxnB,KAAKse,SAASiI,UAAUC,QAAQzM,EAAIrY,EAAM,wBAAyB8lB,IAQ3EgG,iBAAkB,SAASxS,GACvB,GAAIqI,GAASrjB,KAAKqpB,qBACdM,OAAQ3O,EAAK4O,WAAW1R,YACxBwR,kBAAmB1O,EAAK4O,WAAWF,kBACnC9pB,QAASob,EAAKpb,QACdqY,QAAS+C,EAAK/C,QACdzO,SAAUwR,EAAKxR,SACfsO,MAAOkD,EAAKmP,gBAGhBnqB,MAAKotB,kBAAkB/J,EAAOjK,eAAiB4B,GAGnDwU,0BAA2B,WACvBxvB,KAAKyvB,aAAe9vB,GAAG+vB,aAAe,GAAI/vB,IAAG+vB,YACzC1vB,KAAKse,SAASzN,KAAMlR,GAAG4P,KAAKvP,KAAK0lB,kBAAmB1lB,MAAOL,GAAG4P,KAAKvP,KAAK8F,IAAK9F,OAG7EA,KAAKyvB,cAAgBzvB,KAAKyvB,aAAaE,gBACvC3vB,KAAKsjB,aAAetjB,KAAKmoB,aACrBnoB,KAAKse,SAASyI,QAAQrJ,OAAS1d,KAAKyvB,aAAaG,uBAGrD5vB,KAAKse,SAASuR,WAAa7vB,KAAKyvB,aAAaK,cACzC9vB,KAAKyvB,aAAaM,cAClB/vB,KAAKse,SAASyI,QAAQpJ,SAAW3d,KAAKyvB,aAAaM,cAIvD/vB,KAAKsjB,aAAetjB,KAAKmoB,aAAanoB,KAAKse,SAASyI,QAAQrJ,SAIpEsS,kBAAmB,WACf,SAAKrwB,GAAG+mB,0BAA4B1mB,KAAKse,SAAS6B,WAAWH,YAIzDhgB,KAAKse,SAAS8I,KAAK6I,aACftwB,GAAG8S,kBAAkB2C,sBAIrBzV,GAAG8S,kBAAkB0C,oBAAqBnV,KAAKse,SAAS8I,KAAK8I,aAUzEzG,oBAAqB,SAAS0G,EAASve,GACnC,GAAIwe,IAAQ,CAEZ,QAAKD,EAAQzqB,SAIb/F,GAAG+C,KAAKytB,EAAS,SAASxtB,EAAK0tB,GAK3B,GAAI1wB,GAAGwH,SAASkpB,GAAa,CAEzB,GAAIC,GAAW,GAAIzuB,QAAO,MAAQwuB,EAAa,IAAK,IAEpD,IAAgC,MAA5Bze,EAASoB,MAAMsd,GAEf,MADAF,IAAQ,GACD,KAKZA,IAWXzK,WAAY,SAAS4K,EAAMC,EAAkBvpB,GASzC,QAAS6F,GAAEpL,EAAM+uB,GAAe1qB,EAAUA,EAAQ7D,QAAQR,EAAM+uB,GARhE,GAMIC,GAAsBC,EANtB5qB,EAAU/F,KAAKse,SAASsS,SAASL,GACjC7G,KACAmH,KAAWlhB,OAAO6gB,GAClB9uB,EAAOmvB,EAAM,GACbjZ,EAAW5X,KAAKqmB,aAAapf,GAC7B6pB,EAAiB9wB,KAAKguB,mBAAmBpW,EA+B7C,OA1BAjY,IAAG+C,KAAKouB,EAAepH,kBAAmB,SAAS/mB,EAAKouB,GAKhDpxB,GAAGwH,SAAS4pB,IACZrH,EAAkB7mB,KAAKkuB,KAI/BL,EAAuBhH,EAAkBlZ,KAAK,MAAMzH,cAEpD+D,EAAE,SAAU9M,KAAKse,SAAS0S,eAAetvB,IACzCoL,EAAE,eAAgB4jB,GAClB5jB,EAAE,cAAe9M,KAAK+sB,YAAY+D,EAAeG,YACjDnkB,EAAE,iBAAkB9M,KAAK+sB,YAAY+D,EAAeI,eAEpDP,EAAmB5qB,EAAQiN,MAAM,cACR,OAArB2d,GACAhxB,GAAG+C,KAAKiuB,EAAkB,SAAShuB,EAAKwuB,GACpCrkB,EAAEqkB,EAAaN,EAAMluB,MAI7B3C,KAAKse,SAASiI,UAAUC,QAAQ,KAAM9kB,EAAMqE,EAASjC,QAE9CiC,GAYXie,aAAc,SAASjK,EAAI/K,GACvB,GAAIhP,KAAKoxB,qBAAqBrX,GAW1B,MAVA/Z,MAAKyiB,uBACLziB,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAO4C,iBAErCjO,EACAA,EAAS+K,GAGT/Z,KAAKwf,SAASuE,MAAMhK,IAGjB,GAIfoP,kBAAmB,SAASpP,EAAIM,GAC5B,GAAItC,GAAO/X,KACPqxB,EAAcrxB,KAAK+tB,iBAEnB1T,KAAW1a,GAAG0a,OAAO6C,kBACrBld,KAAK2jB,+BAA+B9gB,KAAKkX,GAEpCM,IAAW1a,GAAG0a,OAAO8C,eAC1Bnd,KAAK4jB,4BAA4B/gB,KAAKkX,GAGtB,IAAhBsX,IACCrxB,KAAK2jB,+BAA+Bje,QAAU1F,KAAK4jB,4BAA4Ble,SAEhF0jB,WAAW,WACPrR,EAAKuZ,eAAevZ,EAAK4L,+BAAgC5L,EAAK6L,8BAC/D,IAIX3F,iCAAkC,WAC9B,GAAIlG,GAAO/X,IAEX,IAAIA,KAAKse,SAASiL,YAAYgI,mBAAqB5xB,GAAGyO,UAAYzO,GAAG2O,YAIjE,KAHA8a,YAAW,WACPvkB,OAAO2sB,MAAMzZ,EAAKuG,SAASsS,SAASa,+BACrC,GACG,GAAI9xB,IAAGwB,MAAMnB,KAAKse,SAASsS,SAASa,+BAIlDC,8BAA+B,SAAS3X,EAAIrY,EAAMiwB,EAAU3G,GAGxD,IAAK2G,EAASlmB,QACV,GAAIuf,GAAsB,MAAfA,EAAI3Q,SAAmBsX,EAAS7nB,MACvC9J,KAAKse,SAASiI,UAAUC,QAAQzM,EAAIrY,EAAM,8BAAgCspB,EAAI3Q,OAAQ2Q,OAErF,CACD,GAAI4G,GAAcD,EAAS7nB,MAAQ6nB,EAAS7nB,MAAQ9J,KAAKse,SAASjb,KAAKwuB,oBACvE7xB,MAAKse,SAASiI,UAAUC,QAAQzM,EAAIrY,EAAMkwB,EAAa5G,KAKnE8G,6CAA8C,SAASC,EAAW9nB,EAAOuQ,EAAOkD,EAAQC,GACpF,GAAI5F,GAAO/X,IAEX,IAAIiK,EAAMvE,OAAS8U,EACf,GAAIuX,IAAc/xB,KAAKse,SAASsL,WAAWoI,uBAEvC5I,WAAW,WACP,GAAI6I,GAAuBla,EAAKkW,yBAAyBhkB,EAAMuQ,IAC3D5C,EAAWG,EAAKsO,aAAapc,EAAMuQ,GAAO2E,MAC1CkE,EAAStL,EAAK0J,WAAW7J,EAE7BG,GAAKgQ,wBACDrmB,KAAM,aACNsN,SAAUrP,GAAG4P,KAAKwI,EAAKuG,SAASiI,UAAU2L,WAAYna,EAAMka,EAAsB5O,GAClFpM,UAAWtX,GAAG4P,KAAKwI,EAAKoa,2BAA4Bpa,EAAM9N,EAAOuQ,EAAOkD,EAAQC,GAChFzG,UAAWvX,GAAG4P,KAAKwI,EAAKqa,2BAA4Bra,EAAM9N,EAAOuQ,EAAOkD,EAAQC,GAChFuK,WAAY,SAAW+J,EAAqBvwB,KAAO,YAAcuwB,EAAqB9W,QAE3F,OAEF,KAAK4W,EACN,KAAOvX,EAAQvQ,EAAMvE,OAAQ8U,IACzBzC,EAAK+U,oBAAoB7iB,EAAMuQ,GAAOT,KAMtDuX,eAAgB,SAASe,EAAYC,GACjCtyB,KAAK6jB,gBAAkB7jB,KAAK6jB,eAAe0O,cAAcF,EAAYC,EAAQtyB,KAAKmjB,iBAElFnjB,KAAKse,SAASiI,UAAUgM,cAAc5yB,GAAG6B,UAAW6wB,GAAa1yB,GAAG6B,UAAW8wB,IAE/EtyB,KAAK2jB,kCACL3jB,KAAK4jB,gCAeTwI,aAAc,SAASrS,EAAIrY,EAAMyqB,EAAcnB,EAAKhc,GAChD,GAAI+I,GAAO/X,IAIX,IAFA+X,EAAKoL,gBAAgBpJ,GAAMoS,EAAapU,EAAKuG,SAASyF,MAAM2G,8BAExD3S,EAAKya,iBAAiBzY,GAAK,CAC3B,GAAI0Y,GAAyD,IAAvC1a,EAAKuG,SAASyF,MAAM2O,gBAkB1C,OAhBA3a,GAAK2Z,8BAA8B9hB,MAAMmI,EAAMjQ,WAC/CiQ,EAAKuG,SAASiI,UAAU2F,YAAYnS,EAAIrY,EAAMqW,EAAKkL,aAAalJ,IAChEhC,EAAK4a,mBAAmB5Y,EAAIrY,GAE5BqW,EAAKgI,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAO4C,iBACzClF,EAAKmL,eAAenJ,GAAMqP,WAAW,WACjCrR,EAAKjS,IAAI,sBAAwBpE,EAAO,OAEpCsN,EACAA,EAAS+K,GAGThC,EAAKyH,SAASuE,MAAMhK,IAEzB0Y,IAEI,IAIfE,mBAAoB,SAAS5Y,EAAIrY,GAC7B1B,KAAK8F,IAAI,WAAa9F,KAAKse,SAASyF,MAAM2O,iBAAmB,4BAA8BhxB,EAAO,QAItG0vB,qBAAsB,SAASrX,GAC3B,GACInI,GADAghB,EAAY5yB,KAAKwiB,iBAGrB,OAAIxiB,MAAKmjB,gBAAgBpJ,IACrB/Z,KAAK8F,IAAI,gCAAkCiU,EAAI,SACxC,GAEF/Z,KAAKwf,SAASe,QAAQxG,IAC3BnI,EAAW5R,KAAKigB,QAAQlG,GAEpB/Z,KAAKse,SAASiI,UAAUsM,cAAc9Y,EAAInI,MAAc,IAIxDghB,EAAY,GAAK5yB,KAAKyiB,qBAAuB,EAAImQ,GACjD5yB,KAAK2lB,WAAW,0BACT,IAGX3lB,KAAK8F,IAAI,wBAA0B8L,EAAW,UAAYmI,EAAK,SACxD,MAGP/Z,KAAK8F,IAAI,IAAMiU,EAAK,2BAA4B,UACzC,IAIfqR,UAAW,SAASrR,EAAIrY,GACpB1B,KAAKyiB,uBAELqQ,aAAa9yB,KAAKkjB,eAAenJ,GAEjC,IAAIgZ,GAAkBpzB,GAAG2F,QAAQtF,KAAKke,WAAYnE,IAC7C/Z,KAAKse,SAASuR,YAAckD,GAAmB,GAChD/yB,KAAKke,WAAWpC,OAAOiX,EAAiB,GAG5C/yB,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAOyC,WAG7CmO,YAAa,SAASlR,EAAIrY,EAAMY,EAAQ0oB,GAoBpC,MAnBK1oB,GAAOmJ,SASJnJ,EAAO2jB,eACPjmB,KAAKihB,eAAelH,GAAMzX,EAAO2jB,cAGrCjmB,KAAKqiB,eACLriB,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAO6C,qBAbzCld,KAAKyiB,uBACLziB,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAO8C,eAErC7a,EAAOtC,KAAKse,SAASyF,MAAM2G,iCAAkC,IAC7D1qB,KAAKmjB,gBAAgBpJ,IAAM,IAYnC/Z,KAAK0xB,8BAA8B3X,EAAIrY,EAAMY,EAAQ0oB,KAE9C1oB,EAAOmJ,SAGlB6b,UAAW,SAASvN,GAChB/Z,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAOgD,WAG7CmI,kBAAmB,SAASzL,EAAIyN,EAAUC,GAC3BznB,KAAKigB,QAAQlG,EAEpB0N,GACAznB,KAAKuvB,oBAAoBxV,EAAIyN,GAG7BxnB,KAAKsvB,qBAAqBvV,IAIlCmQ,eAAgB,SAAS7gB,GACrB,GAAI2pB,EAEJ,IAAIrzB,GAAG8S,kBAAkBqC,cAAe,CACpC,IAAKke,EAAY,EAAGA,EAAY3pB,EAAM6V,MAAMxZ,OAAQstB,IAChDhzB,KAAKkmB,sBAAsB7c,EAAM6V,MAAM8T,GAAY3pB,EAGvDrJ,MAAK4d,SAASvU,EAAM6V,WAGf7V,GAAM3C,MAAMhB,OAAS,GAC1B1F,KAAK4d,SAASvU,EAGlB1J,IAAG+C,KAAK1C,KAAKojB,SAAU,SAASzgB,EAAK0gB,GACjCA,EAAO5J,WAIfqR,YAAa,SAAS/Q,EAAIrY,EAAMkpB,EAAQC,GACpC7qB,KAAK6jB,gBAAkB7jB,KAAK6jB,eAAeoP,qBAAqBlZ,EAAI6Q,EAAQC,IAGhFqI,UAAW,SAASnZ,EAAIrY,KAIxByxB,yBAA0B,SAASpZ,EAAIrY,GACnC1B,KAAKkzB,UAAUtjB,MAAM5P,KAAM8H,WAC3B9H,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAOsC,WACzC3c,KAAKozB,aAAaxjB,MAAM5P,KAAM8H,WAE1B9H,KAAKse,SAASuR,YACd7vB,KAAKse,SAASiI,UAAU8M,YAAYzjB,MAAM5P,KAAM8H,WAChD9H,KAAKkgB,YAAYnG,KAGjB/Z,KAAKszB,eAAevZ,GACpB/Z,KAAKse,SAASiI,UAAU8M,YAAYzjB,MAAM5P,KAAM8H,aAIxDsY,gBAAiB,SAASrG,EAAIwZ,EAAmBC,GAC7C,GACIC,GADAvZ,EAAOla,KAAK0iB,QAAQ3I,EAOxB,OAJIwZ,KACAE,EAA4B9zB,GAAG4P,KAAKgkB,EAAmBvzB,KAAM+Z,EAAIG,EAAMsZ,IAGvExzB,KAAKgwB,qBACLhwB,KAAK+nB,wBACDrmB,KAAM,iBACNsN,SAAUrP,GAAG4P,KAAKvP,KAAKse,SAASiI,UAAUmN,eAAgB1zB,KAAM+Z,GAChE9C,UAAWwc,GACP9zB,GAAG4P,KAAKvP,KAAK2zB,eAAeC,WAAY5zB,KAAM+Z,EAAIG,EAAMsZ,GAC5DtL,WAAYnO,KAET,IAGP/Z,KAAK8F,IAAI,iCAAmCiU,EAAK,wHACuB,SACjE,IAIfqZ,aAAc,SAASrZ,KAIvB8Z,iBAAkB,SAASjJ,EAAQC,GAC/B7qB,KAAKse,SAASiI,UAAUuN,gBAAgBlJ,EAAQC,IAGpDS,cAAe,SAASvR,KAIxByR,UAAW,SAASzR,EAAIrY,GACpB1B,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAO2C,YAG7C4O,eAAgB,SAAS7R,EAAI4R,KAI7BzC,sBAAuB,SAASnP,EAAI6B,EAAWD,GAEvCA,IAAchc,GAAG0a,OAAO0C,QACxB+V,aAAa9yB,KAAKkjB,eAAenJ,KAIzCga,gCAAiC,SAAS3F,GACtC,GAAIrW,GAAO/X,IAEXL,IAAG+C,KAAK0rB,EAAc,SAASzrB,EAAKurB,GAChCnW,EAAK+U,oBAAoBoB,EAAYnU,OAI7Cia,gCAAiC,SAASC,EAAuBhqB,EAAOyT,EAAQC,EAAU0F,GACtF,GAAIoC,GACAmN,EAAY5yB,KAAKwiB,kBACjB0R,EAAmCl0B,KAAKyiB,oBAE1B,KAAdmQ,GAAmBsB,GAAoCtB,EACnD3oB,EAAMvE,OAAS,EACf1F,KAAK+nB,wBACDrmB,KAAM,aACNsN,SAAUrP,GAAG4P,KAAKvP,KAAKse,SAASiI,UAAU2L,WAAYlyB,KAAMi0B,EAAsB,GAAI5Q,GACtFpM,UAAWtX,GAAG4P,KAAKvP,KAAKmyB,2BAA4BnyB,KAAMiK,EAAO,EAAGyT,EAAQC,GAC5EzG,UAAWvX,GAAG4P,KAAKvP,KAAKoyB,2BAA4BpyB,KAAMiK,EAAO,EAAGyT,EAAQC,GAC5EuK,WAAY,SAAWje,EAAM,GAAGkV,KAAKzd,KAAO,YAAcuI,EAAM,GAAGkV,KAAKhE,OAI5Enb,KAAK2lB,WAAW,iBAIpB3lB,KAAK+zB,gCAAgC9pB,GACrCwb,EAAezlB,KAAKse,SAASsS,SAASuD,kBACjCjyB,QAAQ,gBAAiBgyB,GACzBhyB,QAAQ,iBAAkB0wB,GAC/B5yB,KAAKsmB,YAAYb,KAIzB2M,2BAA4B,SAASnoB,EAAOuQ,EAAOkD,EAAQC,GACvD,GAAIyW,GAAY5Z,EAAQ,CAExBxa,MAAK8sB,oBAAoB7iB,EAAMuQ,GAAOT,GAAI9P,EAAMuQ,GAAO2E,KAAKzd,MAE5D1B,KAAK8xB,8CAA6C,EAAO7nB,EAAOmqB,EAAW1W,EAAQC,IAGvFwU,2BAA4B,SAASloB,EAAOuQ,EAAOkD,EAAQC,GACvD,GAAI5F,GAAO/X,KACPo0B,EAAY5Z,EAAQ,EACpByX,EAAuBjyB,KAAKiuB,yBAAyBhkB,EAAMuQ,GAE/Dxa,MAAKq0B,wBAAwBpqB,EAAMuQ,GAAQyX,GACtCvb,KACD,WACIqB,EAAKuc,QAAQrqB,EAAMuQ,GAAOT,GAAI2D,EAAQC,GACtC5F,EAAK+Z,8CAA6C,EAAM7nB,EAAOmqB,EAAW1W,EAAQC,IAEtF,WACI5F,EAAK+Z,8CAA6C,EAAO7nB,EAAOmqB,EAAW1W,EAAQC,MAK/F2B,uBAAwB,SAASrV,EAAOyT,EAAQC,GAC5C,GAAqB,IAAjB1T,EAAMvE,OAEN,WADA1F,MAAK2lB,WAAW,eAIpB,IAAIsO,GAAwBj0B,KAAKmuB,0BAA0BlkB,GACvD2N,EAAW5X,KAAKqmB,aAAapc,EAAM,GAAGkV,MACtCkE,EAASrjB,KAAKyhB,WAAW7J,EAE7B5X,MAAK+nB,wBACDrmB,KAAM,kBACNsN,SAAUrP,GAAG4P,KAAKvP,KAAKse,SAASiI,UAAUgO,gBAAiBv0B,KAAMi0B,EAAuB5Q,GACxFpM,UAAWtX,GAAG4P,KAAKvP,KAAKg0B,gCAAiCh0B,KAAMi0B,EAAuBhqB,EAAOyT,EAAQC,EAAU0F,GAC/GnM,UAAWvX,GAAG4P,KAAKvP,KAAK+zB,gCAAiC/zB,KAAMiK,GAC/Die,WAAY,sBAIpBsM,wBAAyB,WACrB,GAAIzc,GAAO/X,IAEXA,MAAKoqB,gBAAgBnqB,OAAO4E,OAAQ,eAAgB,SAAS4J,GACzD,GAAIsJ,EAAK+J,gBAKL,MAJArT,GAAIA,GAAK5J,OAAO4vB,MAEhBhmB,EAAEC,YAAcqJ,EAAKuG,SAASsS,SAAS8D,QAEhC3c,EAAKuG,SAASsS,SAAS8D,WAQ1ChR,oBAAqB,WACjB,GAAI3L,GAAO/X,KACP6X,EAAU7X,KAAKse,SAASkF,OAGxB7jB,IAAGg1B,SAA6C,MAAlC30B,KAAKse,SAASkF,QAAQ7F,WAC/B3d,KAAK40B,WACNj1B,GAAG6B,OAAOqW,GAAUuP,KAAMpnB,KAAKse,SAAS8I,OAExCvP,EAAQ/R,IAAMnG,GAAG4P,KAAKvP,KAAK8F,IAAK9F,MAChC6X,EAAQgd,cAAgBl1B,GAAG4P,KAAKvP,KAAKge,eAAgBhe,MAErDA,KAAK40B,SAAW,GAAIj1B,IAAGg1B,QAAQ9c,IAGnCuR,WAAW,WACPrR,EAAK6c,SAASE,UAAUpe,KAAK,SAASib,EAAUnK,GAC5CzP,EAAKgd,0BACLhd,EAAKuG,SAASiI,UAAUyO,yBAAyBrD,GAAU,EAAMnK,IAElE,SAASmK,EAAUnK,GAElBzP,EAAKuG,SAASiI,UAAUyO,yBAAyBrD,GAAU,EAAOnK,MAEvE,KAIXuN,wBAAyB,aAEzBxI,SAAU,SAASxS,EAAIsC,GACnBrc,KAAK+f,YAAY3D,WAAWrC,EAAIsC,GAChCrc,KAAK6jB,gBAAkB7jB,KAAK6jB,eAAeoR,UAAUlb,IAGzDyY,iBAAkB,SAASzY,GACvB,GAAI+F,GAAa9f,KAAK+f,YAAYvE,UAAUzB,GAAIA,GAGhD,WAAK/Z,KAAKmjB,gBAAgBpJ,IACnB/Z,KAAKse,SAASyF,MAAMmR,YACpBpV,EAAWzF,SAAW1a,GAAG0a,OAAO0C,SAELjZ,SAA1B9D,KAAKijB,aAAalJ,KAClB/Z,KAAKijB,aAAalJ,GAAM,GAGxB/Z,KAAKijB,aAAalJ,GAAM/Z,KAAKse,SAASyF,MAAMoR,oBAC5Cn1B,KAAKijB,aAAalJ,IAAO,GAClB,IAOnBuZ,eAAgB,SAASvZ,GACrB/Z,KAAKke,WAAWrb,KAAKkX,IAIzBmV,aAAc,SAASnV,GACnB,GAAInC,EAGAA,GADAjY,GAAG8S,kBAAkBqC,cACV9U,KAAKwf,SAAS2B,QAAQpH,GAAIqM,WAG1BpmB,KAAKqmB,aAAarmB,KAAKwf,SAASrG,SAASY,IAGpDnC,IACA5X,KAAK0hB,qBAAqB3H,GAAMnC,IAIxCsN,4BAA6B,SAASkQ,GAClCp1B,KAAKse,SAASzN,KAAKjR,QAAUw1B,EAE7Bp1B,KAAKyvB,aAAe9vB,GAAG+vB,aAAe,GAAI/vB,IAAG+vB,YACrC1vB,KAAKse,SAASzN,KAAMlR,GAAG4P,KAAKvP,KAAK0lB,kBAAmB1lB,MAAOL,GAAG4P,KAAKvP,KAAK8F,IAAK9F,OAGjFA,KAAKyvB,cAAgBzvB,KAAKyvB,aAAaE,iBACvC3vB,KAAKsjB,aAAa0F,YAAY,KAAMhpB,KAAKyvB,aAAaG,uBAEtD5vB,KAAKse,SAASuR,WAAa7vB,KAAKyvB,aAAaK,cACzC9vB,KAAKyvB,aAAaM,aAClB/vB,KAAK+kB,YAAY/kB,KAAKyvB,aAAaM,eAK/CuE,QAAS,SAASva,EAAI2D,EAAQC,GAC1B,GAAIjc,GAAO1B,KAAKigB,QAAQlG,EAEpB2D,IACA1d,KAAKslB,UAAU5H,EAAQ3D,GAGvB4D,GACA3d,KAAK+kB,YAAYpH,EAAU5D,GAG/B/Z,KAAK+nB,wBACDrmB,KAAM,WACNsN,SAAUrP,GAAG4P,KAAKvP,KAAKse,SAASiI,UAAU8O,SAAUr1B,KAAM+Z,EAAIrY,GAC9DuV,UAAWtX,GAAG4P,KAAKvP,KAAKmzB,yBAA0BnzB,KAAM+Z,EAAIrY,GAC5DwV,UAAWvX,GAAG4P,KAAKvP,KAAK8sB,oBAAqB9sB,KAAM+Z,EAAIrY,GACvDwmB,WAAYnO,KAIpBmG,YAAa,SAASnG,GACb/Z,KAAKwf,SAAS7V,OAAOoQ,IACtB/Z,KAAK+f,YAAYrE,UAAU3B,EAAIpa,GAAG0a,OAAOwC,SAIjD+I,mBAAoB,WAIhB,IAHA,GAAI0P,GAAYC,EACZxd,EAAO/X,KAEJA,KAAKke,WAAWxY,QACnB4vB,EAAat1B,KAAKke,WAAWjM,QAC7BjS,KAAKkgB,YAAYoV,EAIrBC,GAAkBv1B,KAAKiiB,YAAY5H,OAAQ1a,GAAG0a,OAAOY,aAAavV,OAC9D6vB,IACA51B,GAAGmG,IAAI,qBAAuByvB,EAAkB,yEAChDnM,WAAW,WACPrR,EAAK6N,sBACN,OAYXyO,wBAAyB,SAASnG,EAAa+D,GAC3C,GAAIla,GAAO/X,KACPmf,EAAQ,WACJ,MAAI+O,GAAY/O,eAAgBxf,IAAGyX,UACxB8W,EAAY/O,KAAK9H,cAErB6W,EAAY/O,QAEvBzd,EAAOuwB,EAAqBvwB,KAC5ByZ,EAAO8W,EAAqB9W,KAC5BvD,EAAW5X,KAAKqmB,aAAa6H,EAAY/O,MACzC2R,EAAiB9wB,KAAKguB,mBAAmBpW,GACzC4d,EAAkB,GAAI71B,IAAG4L,OAQ7B,OANAiqB,GAAgB9e,KACZ,aACA,WACIqB,EAAK+U,oBAAoBoB,EAAYnU,GAAIrY,KAG7C/B,GAAG6I,cAAc2W,KAAUnf,KAAKypB,oBAAoBqH,EAAepH,kBAAmBhoB,IACtF1B,KAAK2lB,WAAW,YAAajkB,EAAMyd,GAC5BqW,EAAgB7pB,WAGtB3L,KAAKse,SAASsL,WAAW6L,YAAuB,IAATta,EAKxCA,EAAO,GAAK2V,EAAeG,WAAa9V,EAAO2V,EAAeG,WAC9DjxB,KAAK2lB,WAAW,YAAajkB,EAAMyd,GAC5BqW,EAAgB7pB,WAGvBwP,EAAO,GAAKA,EAAO2V,EAAeI,cAClClxB,KAAK2lB,WAAW,eAAgBjkB,EAAMyd,GAC/BqW,EAAgB7pB,YAGvBhM,GAAG+1B,iBAAmB/1B,GAAG8S,kBAAkBiD,eAAiB/V,GAAGuI,OAAOiX,GACtE,GAAIxf,IAAG+1B,gBAAgBvW,EAAMxf,GAAG4P,KAAKwI,EAAKjS,IAAKiS,IAAO4d,SAAS7E,EAAe8E,OAAOlf,KACjF8e,EAAgB/pB,QAChB,SAASoqB,GACL9d,EAAK4N,WAAWkQ,EAAY,aAAcn0B,EAAMyd,GAChDqW,EAAgB7pB,YAKxB6pB,EAAgB/pB,UAGb+pB,IA3BHx1B,KAAK2lB,WAAW,aAAcjkB,EAAMyd,GAC7BqW,EAAgB7pB,YA6B/BmqB,eAAgB,WACZ,GAAI/d,GAAMge,EAAchqB,CAExBgM,GAAO/X,KAEP+1B,EAAe,SAASr0B,EAAMsN,EAAUrH,GACpC,GAAIquB,EAEJ,KACI,MAAOhnB,GAASY,MAAMmI,EAAMpQ,GAEhC,MAAOsuB,GACHD,EAAWC,EAAUlwB,SAAWkwB,EAAU3vB,WAC1CyR,EAAKjS,IAAI,wBAA0BpE,EAAO,gBAAkBs0B,EAAU,UAK9E,KAAKjqB,IAAQ/L,MAAKse,SAASiI,WACtB,WACG,GAAI2P,GAAcC,CAClBD,GAAenqB,EACfoqB,EAAepe,EAAKuG,SAASiI,UAAU2P,GACvCne,EAAKuG,SAASiI,UAAU2P,GAAgB,WACpC,MAAOH,GAAaG,EAAcC,EAAcruB,oBCp5DvE,WACG,YAEAnI,IAAGy2B,kBAAoB,SAAS3e,GAC5B,GAAIM,GAAO/X,IAGXA,MAAKse,UACDuE,OAAO,EACPQ,OAAQ,KACR7Z,UAAU,EACVqd,eAAgB,EAChBwP,6BAA6B,EAC7BxG,YAAY,EAEZ9I,SACIE,iBACAtJ,SAAU,iBACV2Y,cAAe,aACfC,gBAAgB,EAChBtM,UAAW,SACXtD,OAAQ,OACR6P,mBAAmB,EACnB9Y,UACA+Y,cAAc,EACdC,oBAAoB,EACpBC,kBAAmB,kBACnB3P,SAAU,UAGd4C,YACIF,qBACAuH,UAAW,EACXC,aAAc,EACd0B,UAAW,EACXZ,wBAAwB,EACxB9Z,YAAa,KACb0d,OACIgB,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,SAAU,GAEdtB,YAAY,GAGhBlP,WACI8O,SAAU,SAAStb,EAAIrY,KACvB2xB,YAAa,SAAStZ,EAAIrY,KAC1BqpB,WAAY,SAAShR,EAAIrY,EAAMyqB,EAAc6K,KAC7CzE,cAAe,SAASF,EAAYC,KACpCpH,SAAU,SAASnR,EAAIrY,KACvB6pB,SAAU,SAASxR,EAAIrY,KACvBgqB,cAAe,SAAS3R,EAAIrY,EAAMiqB,KAClCI,qBAAsB,SAAShS,EAAI4R,EAAWQ,EAAcnB,KAC5DgB,SAAU,SAASjS,EAAInI,EAAU+Z,EAAWM,KAC5CtB,WAAY,SAAS5Q,EAAIrY,EAAMkpB,EAAQC,KACvCiJ,gBAAiB,SAASlJ,EAAQC,KAClCrE,QAAS,SAASzM,EAAIrY,EAAM6f,EAAQ0V,KACpC/K,YAAa,SAASnS,EAAIrY,EAAMw1B,KAChCrE,cAAe,SAAS9Y,EAAIrY,KAC5B6yB,gBAAiB,SAAS4C,KAC1BjF,WAAY,SAASiF,KACrBzD,eAAgB,SAAS3Z,KACzBsN,SAAU,SAAStN,KACnBwN,iBAAkB,SAASxN,EAAIyN,EAAUC,KACzCO,gBAAiB,SAAS/c,KAC1BsQ,eAAgB,SAASxB,EAAI6B,EAAWD,KACxCqZ,yBAA0B,SAASrD,EAAUlmB,EAAS+b,MAG1DoJ,UACIwG,UAAW,qEACXC,UAAW,yDACXC,aAAc,4DACdC,WAAY,yDACZC,aAAc,sBACdrD,kBAAmB,6EACnBsD,oBAAqB,qBACrBC,mBAAoB,qBACpBC,oBAAqB,4BACrBC,mBAAoB,4BACpBC,sBAAuB,mDACvBnD,QAAS,8EACTjD,6BAA8B,6KAGlC1N,OACImR,YAAY,EACZC,gBAAiB,EACjBzC,iBAAkB,EAClBhI,6BAA8B,gBAGlCb,SACIE,YAAa,yBACbD,YAAa,0BAGjB7U,UACI+K,SAAS,EACT8X,YACI9X,SAAS,GAEb+X,WAAW,EACXC,YACIlM,UAAW,cACXmM,eAAgB,mBAChBC,UAAW,cACXC,cAAe,kBACfC,WAAY,gBAEhBC,SAAU,SAASte,GACf,MAAO,MAGXtO,SACIkS,SAAU,KAEV0G,QAAS,SAAStK,GACd,MAAO,OAGXue,aAAa,EAEb3R,OAAQ,OAERjJ,OAAQ,SAAS3D,GACb,MAAO,OAGXwe,mBAIRxiB,QACIiK,SAAS,EACTwY,gBAAiB,EACjBR,YACIS,SAAU,YAEdC,WAAY,SAASjY,GACjB,WAIRuQ,eAAgB,SAAS2H,GACrB,MAAOA,IAGXt1B,MACIwuB,qBAAsB,gCACtB1H,eAAgB,aAChB6C,aAAc,KAAM,KAAM,KAAM,KAAM,KAAM,OAGhD7M,YACIH,SAAS,EACT2G,OAAQ,SACRhJ,SAAU,iBACVsJ,iBACAvJ,WAGJ0J,MACI6I,UAAU,EACV2I,iBAAiB,EACjB1I,UAAU,GAGd3R,OACIC,YAAa,aAGjBqJ,OACID,cAAe,KACfpJ,YAAa,gBAGjB+P,QACItgB,KAAK,EAGLoV,OAAQ,MASZgK,gBAIA7J,SACI7F,SAAU,KACVD,UACAuJ,iBACAxD,gBAAgB,GAIpB5S,MAEIjR,QAAS,UAGTiwB,YAAY,EAGZgJ,iBAAiB,GAIrB7iB,SACI8iB,cAAe,KAGfC,cAAc,EAGdC,QAAQ,EAIRC,YAAa,KAEbC,eAAgB,GAEhBC,YAAa,kBAEbC,aAAa,EAGbC,UAGJ9P,aACIC,gBAAgB,EAChB+H,mBAAmB,EACnBvH,kBAAkB,IAK1BrqB,GAAG6B,OAAOxB,KAAKse,SAAU7G,GAAG,GAE5BzX,KAAKojB,YACLpjB,KAAKotB,qBACLptB,KAAK0hB,wBAEL1hB,KAAK81B,iBACL91B,KAAKoqB,gBAAmB,GAAIzqB,IAAGkS,eAE/B7R,KAAKke,cACLle,KAAKijB,gBACLjjB,KAAKkjB,kBACLljB,KAAKmjB,mBACLnjB,KAAKihB,kBAELjhB,KAAKyiB,qBAAuB,EAC5BziB,KAAKqiB,aAAe,EACpBriB,KAAK+f,YAAc/f,KAAKipB,2BAExBjpB,KAAKwvB,4BAELxvB,KAAKskB,oBAAsBtkB,KAAKmoB,aAAanoB,KAAKse,SAASyI,QAAQE,eACnEjnB,KAAK0kB,8BAAgC1kB,KAAKmoB,aAAanoB,KAAKse,SAAS6B,WAAW8G,eAEhFjnB,KAAK8kB,uBAAyB9kB,KAAKmoB,aAAanoB,KAAKse,SAAS6B,WAAWzC,QAEzE1d,KAAK4hB,eAAiB5hB,KAAKmoB,aAAanoB,KAAKse,SAASyI,QAAQpJ,UAC9D3d,KAAK4kB,yBAA2B5kB,KAAKmoB,aAAanoB,KAAKse,SAAS6B,WAAWxC,UAE3E3d,KAAKwf,SAAWxf,KAAKqqB,uBAErBrqB,KAAK2zB,eAAiBh0B,GAAG+mB,yBAA2B1mB,KAAKymB,uBAErDzmB,KAAKse,SAAS+E,SACdrjB,KAAK0tB,iBAAmB1tB,KAAKqpB,qBACzBzpB,QAASI,KAAKse,SAAS+E,OACvBvL,MAAO9X,KAAKse,SAASjb,KAAK8mB,iBAC3B/Q,eAGPpZ,KAAKmtB,4BAELntB,KAAKsuB,sBAEDtuB,KAAKse,SAASuJ,MAAMD,gBAChBjoB,GAAGgoB,aACH3nB,KAAKujB,cAAgBvjB,KAAK0nB,sBAG1B1nB,KAAK8F,IAAI,iCAAkC,UAInD9F,KAAKw0B,0BAELx0B,KAAKghB,gBAAkBrhB,GAAG25B,gBAAkB,GAAI35B,IAAG25B,eAAe35B,GAAG4P,KAAKvP,KAAK8F,IAAK9F,OACpFA,KAAK0jB,sBAEL1jB,KAAK2jB,kCACL3jB,KAAK4jB,+BAEL5jB,KAAKu5B,QAAW55B,GAAGwkB,QAAU,GAAIxkB,IAAGwkB,OAAOnkB,KAAKse,SAAStI,QAASrW,GAAG4P,KAAKvP,KAAK8F,IAAK9F,WAChFA,KAAKu5B,QAAQvZ,UACbhgB,KAAK+uB,sBAAwBpvB,GAAG4P,KAAKvP,KAAKu5B,QAAQC,cAAex5B,KAAKu5B,UAGtE55B,GAAG85B,eAAiB95B,GAAG8S,kBAAkBqD,cACzC9V,KAAK6jB,eAAiB,GAAIlkB,IAAG85B,cACzB95B,GAAG4P,KAAKvP,KAAK6zB,iBAAkB7zB,MAE/B,SAAS+Z,GACL,GAAI2f,GAAQ3hB,EAAKgI,YAAYvE,UAAUzB,GAAIA,GAC3C,OAAQ2f,IAASA,EAAMve,MAAS,KAK5Cnb,KAAKwiB,kBAAoBxiB,KAAKse,SAASsL,WAAWgJ,UAElD5yB,KAAK8jB,uBAAyB9jB,KAAKmoB,gBAIvCxoB,GAAGy2B,kBAAkB/vB,UAAY1G,GAAG4d,cACpC5d,GAAG6B,OAAO7B,GAAGy2B,kBAAkB/vB,UAAW1G,GAAGkmB,mBC1UjDlmB,GAAGg6B,cAAgB,SAASliB,GACxB,YA2CA,SAASmiB,KACL,MAAOj6B,IAAG2F,SAAS,MAAO,OAAQ,QAASuS,EAAQ8O,SAAW,EAMlE,QAASkT,GAAyBxV,GAC9B,GAAIyV,IAAoB,CASxB,OAPAn6B,IAAG+C,KAAKo3B,EAAmB,SAASn3B,EAAKo3B,GACrC,GAAIp6B,GAAG2F,SAAS,SAAU,kBAAmB,mBAAoB,gBAAiBy0B,GAAU,EAExF,MADAD,IAAoB,GACb,IAIRA,EAGX,QAASE,GAAMhP,GAEX,MAAOnT,GAAQuP,KAAK6I,UAAoCnsB,SAAxBknB,EAAI7X,gBAIxC,QAAS8mB,KACL,GAAIzS,EAeJ,QAbI3iB,OAAO+E,gBAAkB/E,OAAOgF,iBAChC2d,EAAW7nB,GAAG+J,oBAEmB5F,SAA7B0jB,EAASrU,kBACTqU,EAAW,GAAInU,gBAEfmU,EAAShc,OAAS,aAClBgc,EAAS9b,QAAU,aACnB8b,EAAS0S,UAAY,aACrB1S,EAAS2S,WAAa,eAIvB3S,EAIX,QAAS4S,GAAYrgB,EAAIsgB,GACrB,GAAI7S,GAAW8S,EAAYvgB,GAAIiR,GAkB/B,OAhBKxD,KAEGA,EADA6S,EACWA,EAGPxiB,EAAQuP,KAAK6I,SACFgK,IAGAt6B,GAAG+J,oBAItB4wB,EAAYvgB,GAAIiR,IAAMxD,GAGnBA,EAIX,QAAS+S,GAAQxgB,GACb,GAEIygB,GAFAnqB,EAAI1Q,GAAG2F,QAAQm1B,EAAO1gB,GACtBkT,EAAMpV,EAAQgP,qBAGXyT,GAAYvgB,GACnB0gB,EAAM3e,OAAOzL,EAAG,GAEZoqB,EAAM/0B,QAAUunB,GAAO5c,EAAI4c,IAC3BuN,EAASC,EAAMxN,EAAM,GACrByN,EAAYF,IAIpB,QAASzP,GAAWhR,EAAI4gB,GACpB,GAAI3P,GAAMoP,EAAYrgB,GAClB4M,EAAS9O,EAAQ8O,OACjBc,EAAUkT,KAAa,CAE3BJ,GAAQxgB,GAEJ0N,EACA3hB,EAAI6gB,EAAS,gBAAkB5M,EAAK,cAAe,SAE7CigB,EAAMhP,IAAS4P,EAAqB5P,EAAI3Q,UAC9CoN,GAAU,EACV3hB,EAAI6gB,EAAS,gBAAkB5M,EAAK,+BAAiCiR,EAAI3Q,OAAQ,UAGrFxC,EAAQkT,WAAWhR,EAAIiR,EAAKvD,GAGhC,QAASoT,GAAU9gB,GACf,GAEI2D,GAFAod,EAAiBR,EAAYvgB,GAAIghB,iBACjCC,EAAiBnjB,EAAQmjB,cAqB7B,OAlBInjB,GAAQqP,YAAYrF,MACpBnE,EAAS7F,EAAQqP,YAAYrF,IAAI9H,IAGjC+gB,GACAn7B,GAAG+C,KAAKo4B,EAAgB,SAASp5B,EAAMkB,GACnC8a,EAASA,MACTA,EAAOhc,GAAQkB,IAInBo4B,GACAr7B,GAAG+C,KAAKs4B,EAAgB,SAASt5B,EAAMkB,GACnC8a,EAASA,MACTA,EAAOhc,GAAQkB,IAIhB8a,EAGX,QAASgd,GAAY3gB,EAAIkhB,GACrB,GAIIC,GAJAlQ,EAAMoP,EAAYrgB,EAAIkhB,GACtBtU,EAAS9O,EAAQ8O,OACjBjJ,EAASmd,EAAU9gB,GACnBohB,EAAUb,EAAYvgB,GAAIohB,OA+C9B,OA5CAtjB,GAAQujB,OAAOrhB,GAEfmhB,EAAMG,EAAUthB,EAAI2D,EAAQ4c,EAAYvgB,GAAIuhB,uBAGxCtB,EAAMhP,IACNA,EAAIxf,OAAS+vB,EAAkBxhB,GAC/BiR,EAAItf,QAAU8vB,EAAmBzhB,IAGjCiR,EAAIyQ,mBAAqBC,EAA8B3hB,GAG3D4hB,EAA0B5hB,GAG1BiR,EAAI4Q,KAAKjV,EAAQuU,GAAK,GAIlBrjB,EAAQuP,KAAK6I,UAAYpY,EAAQuP,KAAKwR,kBAAoBoB,EAAMhP,KAChEA,EAAI7X,iBAAkB,GAG1B0oB,EAAW9hB,GAEXjU,EAAI,WAAa6gB,EAAS,gBAAkB5M,GAExCohB,EACAnQ,EAAI8Q,KAAKX,GAEJY,IAAgCre,EACrCsN,EAAI8Q,OAECpe,GAAU7F,EAAQmkB,aAAenkB,EAAQmkB,YAAYjzB,cAAczD,QAAQ,sCAAwC,EACxH0lB,EAAI8Q,KAAKn8B,GAAGkQ,QAAQ6N,EAAQ,KAEvBA,GAAU7F,EAAQmkB,aAAenkB,EAAQmkB,YAAYjzB,cAAczD,QAAQ,qBAAuB,EACvG0lB,EAAI8Q,KAAK5qB,KAAK+qB,UAAUve,IAGxBsN,EAAI8Q,KAAKpe,GAGNsN,EAGX,QAASqQ,GAAUthB,EAAI2D,EAAQ4d,GAC3B,GAAI3d,GAAW9F,EAAQsP,cAActF,IAAI9H,GACrCmiB,EAAY5B,EAAYvgB,GAAImiB,SAehC,OAZiBp4B,SAAbo4B,IACAve,GAAY,IAAMue,GAGlBH,GAA+Bre,IAC/BC,EAAWhe,GAAGkQ,QAAQ6N,EAAQC,IAG9B2d,IACA3d,EAAWhe,GAAGkQ,QAAQyrB,EAAuB3d,IAG1CA,EAKX,QAAS+d,GAA8B3hB,GACnC,MAAO,YACgC,IAA/BqgB,EAAYrgB,GAAIoiB,YAChBpR,EAAWhR,IAKvB,QAAS4hB,GAA0B5hB,GAC/B,GAAI4Q,GAAa9S,EAAQ8S,UAErBA,KACAyP,EAAYrgB,GAAIpQ,OAAOwwB,WAAa,SAAS1rB,GACrCA,EAAE2tB,kBACFzR,EAAW5Q,EAAItL,EAAEmc,OAAQnc,EAAEoc,SAQ3C,QAAS0Q,GAAkBxhB,GACvB,MAAO,YACHgR,EAAWhR,IAMnB,QAASyhB,GAAmBzhB,GACxB,MAAO,YACHgR,EAAWhR,GAAI,IAIvB,QAAS8hB,GAAW9hB,GAChB,GAAIiR,GAAMoP,EAAYrgB,GAClBkN,EAAgBpP,EAAQoP,cACxBoV,EAAkB/B,EAAYvgB,GAAIuiB,sBAClC3V,EAAS9O,EAAQ8O,OACjB4V,IAGCvC,GAAMhP,KACPnT,EAAQ2kB,cAAgBxR,EAAIyR,iBAAiB,SAAU5kB,EAAQ2kB,cAG3D3kB,EAAQ6kB,qCAKH7kB,EAAQuP,KAAK6I,UAAc2J,MAAoBC,EAAyB5S,KACzE+D,EAAIyR,iBAAiB,mBAAoB,kBACzCzR,EAAIyR,iBAAiB,gBAAiB,eAI1C5kB,EAAQmkB,aAA2B,SAAXrV,GAAgC,QAAXA,GAC7CqE,EAAIyR,iBAAiB,eAAgB5kB,EAAQmkB,aAGjDr8B,GAAG6B,OAAO+6B,EAAY58B,GAAG6G,WAAWygB,GAAiBA,EAAclN,GAAMkN,GACzEtnB,GAAG6B,OAAO+6B,EAAYF,GAEtB18B,GAAG+C,KAAK65B,EAAY,SAAS76B,EAAMkB,GAC/BooB,EAAIyR,iBAAiB/6B,EAAMkB,MAKvC,QAASg4B,GAAqB+B,GAC1B,MAAOh9B,IAAG2F,QAAQuS,EAAQ+kB,wBAAwB/kB,EAAQ8O,QAASgW,IAAiB,EAGxF,QAASE,GAAc9iB,EAAIkhB,EAAQiB,EAAWnB,EAAkBO,EAAuBgB,EAAmBnB,GAYtG,GAXAb,EAAYvgB,IACRmiB,UAAWA,EACXnB,iBAAkBA,EAClBO,sBAAuBA,EACvBgB,kBAAmBA,EACnBnB,QAASA,GAGHV,EAAM53B,KAAKkX,IAGVlC,EAAQgP,eACf,MAAO6T,GAAY3gB,EAAIkhB,GA7U/B,GAAIn1B,GAAKi2B,EACLtB,KACAH,KACAziB,GACI2kB,aAAc,KACdM,cAAe,QAAS,OAAQ,OAChCnW,OAAQ,OACRqV,YAAa,oCACbnV,eAAgB,EAChBI,iBACAE,iBACAD,eACA8T,kBACA0B,oCAAoC,EACpCE,yBACIG,QAAS,IAAK,IAAK,KACnBC,OAAQ,IAAK,IAAK,IAAK,IAAK,KAC5BC,MAAO,IAAK,IAAK,IAAK,IAAK,KAC3BC,KAAM,IAAK,IAAK,IAAK,IAAK,KAC1BC,KAAM,MAEV/V,MACI6I,UAAU,EACV2I,iBAAiB,GAErB9yB,IAAK,SAAS4B,EAAK1B,KACnBo1B,OAAQ,SAASrhB,KACjBgR,WAAY,SAAShR,EAAIyN,EAAUC,KACnCkD,WAAY,KAMpB,IAHAhrB,GAAG6B,OAAOqW,EAASJ,GACnB3R,EAAM+R,EAAQ/R,IAEVnG,GAAG2F,QAAQuS,EAAQilB,aAAcjlB,EAAQ8O,QAAU,EACnD,KAAM,IAAIxlB,OAAM,IAAM0W,EAAQ8O,OAAS,wDA8S3CoV,GAAiD,QAAnBlkB,EAAQ8O,QAAuC,WAAnB9O,EAAQ8O,OAElEhnB,GAAG6B,OAAOxB,MAENo9B,cAAe,SAASrjB,GACpB,GAAIsjB,GAAM3f,EAAQ2G,EAAS8W,EAASmC,EAAahC,CAEjD,QAEIiC,SAAU,SAASC,GAEf,MADAH,GAAOG,EACAx9B,MAOXy9B,WAAY,SAAS1C,GAEjB,MADArd,GAASqd,EACF/6B,MAGX09B,gBAAiB,SAASC,GAEtB,MADArC,GAAwBqC,EACjB39B,MAIX49B,YAAa,SAAStB,GAElB,MADAjY,GAAUiY,EACHt8B,MAIX69B,YAAa,SAASC,GAElB,MADA3C,GAAU2C,EACH99B,MAIX+9B,gBAAiB,WAEb,MADAT,IAAc,EACPt9B,MAIX87B,KAAM,SAASb,GAKX,MAJIqC,IAAe39B,GAAG2F,SAAS,MAAO,UAAWuS,EAAQ8O,SAAW,IAChEjJ,EAAOsgB,aAAc,GAAIC,OAAOC,WAG7BrB,EAAc9iB,EAAIkhB,EAAQoC,EAAM3f,EAAQ4d,EAAuBjX,EAAS8W,MAK3FgD,SAAU,SAASpkB,GACfwgB,EAAQxgB,OC1YpBpa,GAAGy+B,cAAgB,SAASpjB,GACxB,YAEA,IAAIqjB,GAAQrjB,EAAKqjB,MACbC,KACApT,EAAWmT,EAAMnT,SACjBjL,EAAUoe,EAAMpe,OAEpBtgB,IAAG6B,OAAOxB,MACNmQ,IAAK,SAAS4J,EAAIwkB,GACdD,EAAUvkB,GAAMwkB,EAChBD,EAAUvkB,GAAIhK,SAGlBwP,OAAQ,SAASxF,GACb,GAAIhC,GAAO/X,KACPmrB,EAA2B,GAAIxrB,IAAG4L,OACjB2f,GAASnR,EAAIkG,EAAQlG,GAAKoR,GAEhCzU,KAAK,WACZqB,EAAKwI,QAAQxG,KACbukB,EAAUvkB,GAAIokB,UAAW,EACzBpmB,EAAKiL,QAAQjJ,IAEjBoR,EAAyB1f,aAIjCuX,QAAS,SAASjJ,SACPukB,GAAUvkB,IAGrBykB,oBAAqB,SAASzkB,GAC1B,MAAOukB,GAAUvkB,GAAI3K,KAGzBmR,QAAS,SAASxG,GACd,MAAyBjW,UAAlBw6B,EAAUvkB,IAGrBN,MAAO,WACH6kB,MAGJG,cAAe,SAAS1kB,GACpB,MAAOukB,GAAUvkB,IAGrB2kB,qBAAsB,SAAS3kB,EAAI4kB,GAC/BL,EAAUvkB,GAAI3K,IAAMuvB,GAGxBC,aAAc,SAAS7kB,GACnB,QAASukB,EAAUvkB,GAAIokB,aCpDnCx+B,GAAGktB,wBAA0B,SAASpV,EAAG8S,GACrC,YAEA,IAGcsU,GAAsB/4B,EAAKgpB,EAHrCgQ,EAAa9+B,KACb++B,GAAmB,EACnBC,GAA6B,EAGjCnnB,GACIqP,eACAL,eAAgB,EAChB5R,UACI+K,SAAS,EACTxW,UACIwW,SAAS,IAGjBla,IAAK,SAAS4B,EAAK1B,KACnB2kB,WAAY,SAAS5Q,EAAInI,EAAUgZ,EAAQC,KAC3CE,WAAY,SAAShR,EAAInI,EAAU+f,EAAU3G,KAC7CE,SAAU,SAASnR,EAAInI,KACvByZ,aAAc,SAAStR,KACvBwR,SAAU,SAASxR,EAAInI,KACvB8Z,cAAe,SAAS3R,EAAInI,EAAU+Z,KACtCI,qBAAsB,SAAShS,EAAI4R,EAAWgG,EAAU3G,KACxDkB,YAAa,SAASnS,EAAInI,EAAU+f,EAAU3G,KAC9CgB,SAAU,SAASjS,EAAInI,EAAU+Z,EAAWM,KAC5CI,cAAe,SAAStS,EAAIiC,KAC5BiE,QAAS,SAASlG,KAClBuS,QAAS,SAASvS,EAAIsC,KACtBoQ,SAAU,SAAS1S,KACnB0C,mBAAoB,SAAS1C,KAC7B2C,cAAe,SAAS3C,KACxB2S,aAAc,SAAS3S,MAG3BklB,GAEI9nB,KAAM,SAAS4C,EAAImlB,EAAUvN,EAAU3G,GACnC,GAAIW,GAAYmD,EAAQqQ,cAAcplB,EAAImlB,EAE1CpQ,GAAQ2P,cAAc1kB,GAAIqlB,kBAAmB,QAEtCtQ,GAAQ2P,cAAc1kB,GAAIhK,KAAKsvB,cAAcH,GACpDpQ,EAAQ2P,cAAc1kB,GAAI6Q,QAAUe,EAAUxQ,KAE9CtD,EAAQkU,qBAAqBhS,EAAI+U,EAAQwQ,yBAAyB3T,GAAYgG,EAAU3G,IAK5FuU,SAAU,SAASxlB,GACf,GAAIoB,GAAOtD,EAAQsK,QAAQpI,GACvBrY,EAAOmW,EAAQoI,QAAQlG,EAE3BjU,GAAI,qCAAuCiU,EAAK,qBAChD+U,EAAQ0Q,eAAezlB,GAAIrD,KACvB,SAASib,EAAU3G,GACfllB,EAAI,2BAA6BiU,EAEjC,IAAI0lB,GAAoB91B,EAAO+1B,kBAAkB/N,GAAU,EAE3D9Z,GAAQ8S,WAAW5Q,EAAIrY,EAAMyZ,EAAMA,GACnC2T,EAAQ6Q,+BAA+B5lB,GACvCpQ,EAAOi2B,QAAQ7lB,EAAI0lB,EAAmBzU,IAE1C,SAAS2G,EAAU3G,GACf,GAAI6U,GAAqBl2B,EAAO+1B,kBAAkB/N,GAAU,EAE5D7rB,GAAI,yCAA2CiU,EAAK,MAAQ8lB,EAAmB/1B,MAAO,UAGlF+1B,EAAmBpmB,OAClBuR,GAAOnT,EAAQ5C,SAASxJ,QAAQ8sB,cAAcjzB,QAAQ0lB,EAAI3Q,SAAW,IAEtE4kB,EAAQxlB,MAAMM,GAGblC,EAAQqU,YAAYnS,EAAIrY,EAAMm+B,EAAoB7U,IACnDrhB,EAAOi2B,QAAQ7lB,EAAI8lB,EAAoB7U,MAMvD8U,cAAe,SAASZ,EAAUnlB,EAAI4X,EAAU3G,GAC5C,GAAItpB,GAAOmW,EAAQoI,QAAQlG,EAE3BjU,GAAI,qCAAuCiU,EAAK,WAAamlB,GAE7DpQ,EAAQiR,iBAAiBhmB,EAAImlB,EAE7B,IACIc,GADAC,EAAmBt2B,EAAO+1B,kBAAkB/N,GAAU,EAGtDsO,GAAiBxmB,MACjBwlB,EAAQxlB,MAAMM,IAGdimB,EAAgBrgC,GAAG2F,QAAQwpB,EAAQ2P,cAAc1kB,GAAI9E,SAASirB,WAAYhB,GACtEc,GAAiB,IACjBlR,EAAQ2P,cAAc1kB,GAAI9E,SAASirB,WAAWpkB,OAAOkkB,EAAe,GACpElR,EAAQ2P,cAAc1kB,GAAI9E,SAASkrB,UAAUC,QAAQlB,KAMxDpQ,EAAQ2P,cAAc1kB,GAAIhK,KAAKswB,gBAG5BrB,IACAlQ,EAAQ2P,cAAc1kB,GAAIhK,KAAKswB,eAAgB,EAE/Cv6B,EAAInG,GAAG8H,OAAO,mFAAoFyJ,KAAK+qB,UAAU71B,OAAOk6B,KAAKxR,EAAQyR,SAASxmB,KAAO7I,KAAK+qB,UAAUnN,EAAQ2P,cAAc1kB,GAAI9E,SAASirB,cACvMvgC,GAAG+C,KAAKosB,EAAQyR,SAASxmB,GAAK,SAASymB,EAAMC,GACzC36B,EAAInG,GAAG8H,OAAO,sDAAuDsS,EAAIymB,EAAMC,EAAMtE,aACrFsE,EAAMC,QAGND,EAAME,YAAa,IAIvB7R,EAAQ8R,0BAA0B7mB,GAIlC8mB,EAAkBC,KAAK/mB,GAAI,IAG1BlC,EAAQqU,YAAYnS,EAAIrY,EAAMu+B,EAAkBjV,IAIjDrhB,EAAOi2B,QAAQ7lB,EAAIkmB,EAAkBjV,KAKjD+V,aAAc,SAAShnB,GACnB,QAAS+U,EAAQ2P,cAAc1kB,GAAI9E,SAASkrB,UAAUz6B,QAG1Ds7B,SAAU,SAASjnB,GACf,GAAIknB,GAAUnS,EAAQ2P,cAAc1kB,GAAI9E,SAASkrB,UAAUluB,OAM3D,OAJIgvB,IAAWnS,EAAQoS,gBAAgBnnB,KACnCknB,EAAU,MAGPA,GAGXxnB,MAAO,SAASM,GACZjU,EAAI,8FAAgGiU,EAAI,SAExG+U,EAAQ6Q,+BAA+B5lB,GACvC+U,EAAQqS,mBAAmBpnB,GAC3B+U,EAAQ2P,cAAc1kB,GAAI6Q,OAAS,EACnCkE,EAAQ2P,cAAc1kB,GAAIqlB,kBAAmB,GAGjDgC,SAAU,SAASrnB,GACf,GAAIoB,GAAOtD,EAAQsK,QAAQpI,GACvBrY,EAAOmW,EAAQoI,QAAQlG,GACvBmlB,EAAWD,EAAQ+B,SAASjnB,GAC5B4R,EAAYmD,EAAQqQ,cAAcplB,EAAImlB,GACtCZ,EAAYxP,EAAQ2P,cAAc1kB,GAClC0e,EAAW6F,EAAUc,iBACrBiC,EAAmB/C,EAAUrpB,SAASirB,cAe1C,IAbwB,MAApB5B,EAAU1T,SACV0T,EAAU1T,OAAS,GAInB6N,GAAY5gB,EAAQmU,SAASjS,EAAIrY,EAAMiqB,EAAW2S,EAAUrS,qBAAsB,IAClFgT,EAAQxlB,MAAMM,GACdmlB,EAAWD,EAAQ+B,SAASjnB,GAC5B4R,EAAYmD,EAAQqQ,cAAcplB,EAAImlB,GACtCzG,GAAW,GAIC,MAAZyG,GAAgD,IAA5BmC,EAAiB37B,OACrCu5B,EAAQM,SAASxlB,OAIhB,CACDsnB,EAAiBx+B,KAAKq8B,GACtBpQ,EAAQ2P,cAAc1kB,GAAI9E,SAASirB,WAAamB,EAE5CrC,GACA6B,EAAkBjF,KAAK7hB,EAAImlB,GAG3BF,GAA8B6B,EAAkBS,aAAexS,EAAQ2P,cAAc1kB,GAAI9E,SAASkrB,UAAUz6B,QAC5Gu5B,EAAQmC,SAASrnB,GAGO,IAAxB4R,EAAU1gB,KAAKkQ,OACfrV,EAAInG,GAAG8H,OAAO,+DAAgEy3B,EAAUnlB,GAAK,SAC7FklB,EAAQa,cAAcZ,EAAUnlB,EAAI,8BAA+B,MAG5ClC,GAAQ6T,cAAc3R,EAAIrY,EAAMotB,EAAQwQ,yBAAyB3T,IAEvEjV,KACjB,SAAS6qB,GACL,GAAK1pB,EAAQ6U,aAAa3S,GAGrB,CACDjU,EAAInG,GAAG8H,OAAO,oEAAqEsS,EAAImlB,EAAUvT,EAAUlhB,MAAQ,EAAGkhB,EAAUjhB,IAAKyQ,GAErI,IAAIqmB,IACAtC,SAAUA,EACVnlB,GAAIA,EACJ0nB,UAAWF,EACX9I,SAAUA,EAGd3J,GAAQ4S,YAAYF,GAAiB9qB,KAEjC,SAAiBib,EAAU3G,GACvBllB,EAAI,wCAA0CiU,EAAK,WAAamlB,GAEhEpQ,EAAQiR,iBAAiBhmB,EAAImlB,EAE7B,IAAImC,GAAmBvS,EAAQ2P,cAAc1kB,GAAI9E,SAASirB,eACtDD,EAAmBt2B,EAAO+1B,kBAAkB/N,GAAU,GACtDgQ,EAAqBhiC,GAAG2F,QAAQ+7B,EAAkBnC,EAEtDp5B,GAAInG,GAAG8H,OAAO,8CAA+Cy3B,EAAUnlB,IAEvEklB,EAAQ9nB,KAAK4C,EAAImlB,EAAUe,EAAkBjV,GAEzC2W,GAAsB,GACtBN,EAAiBvlB,OAAO6lB,EAAoB,GAGhD7S,EAAQ8S,0BAA0B7nB,GAE7BklB,EAAQ8B,aAAahnB,IAAmC,IAA5BsnB,EAAiB37B,OAGzCu5B,EAAQ8B,aAAahnB,GAC1BklB,EAAQmC,SAASrnB,GAGjBjU,EAAInG,GAAG8H,OAAO,oGAAqGsS,EAAI7I,KAAK+qB,UAAUoF,KANtIpC,EAAQM,SAASxlB,IAWzB,SAAiB4X,EAAU3G,GACvBiU,EAAQa,cAAcZ,EAAUnlB,EAAI4X,EAAU3G,KAGjD7T,KAAK,WACF2X,EAAQ+S,SAAS9nB,EAAImlB,SAlD7Bp5B,GAAInG,GAAG8H,OAAO,6EAA8EsS,EAAImlB,KAuDxG,SAASp1B,GACLm1B,EAAQa,cAAcZ,EAAUnlB,EAAIjQ,EAAO,WAO/D+2B,GACIiB,SACAC,eACAC,YAEAV,UAAW,WACP,GAAIrU,GAAMpV,EAAQgP,eACdob,EAAwB,EACxBC,EAAkB,CAOtB,OALAviC,IAAG+C,KAAKm+B,EAAkBkB,YAAa,SAASthB,EAAQ0hB,GACpDF,IACAC,GAAmBC,EAAiBz8B,SAGjCunB,GAAO4T,EAAkBiB,MAAMp8B,OAASu8B,EAAwBC,IAM3EpB,KAAM,SAAS/mB,EAAIqoB,GACf,GAGI5H,GAHA6H,GAAaD,EACbE,EAAe3iC,GAAG2F,QAAQu7B,EAAkBmB,SAAUjoB,GACtDwoB,EAAmB5iC,GAAG2F,QAAQu7B,EAAkBiB,MAAO/nB,SAGpD8mB,GAAkBkB,YAAYhoB,GAEjCpQ,EAAO64B,eAAezoB,YAAepa,IAAGyX,YACxCtR,EAAI,uCAAyCiU,EAAK,qCAC3C+U,GAAQ2P,cAAc1kB,GAAIoF,MAIjCmjB,GAAgB,EAChBzB,EAAkBmB,SAASlmB,OAAOwmB,EAAc,GAG3CD,GAAaE,GAAoB,IACtC1B,EAAkBiB,MAAMhmB,OAAOymB,EAAkB,GAEjD/H,EAASqG,EAAkBmB,SAAS/vB,QAChCuoB,GAAU,IACVqG,EAAkBiB,MAAMj/B,KAAK23B,GAC7B7wB,EAAOc,MAAM+vB,MAKzBiI,sBAAuB,WACnB,GAAIC,KAqBJ,OAjBA/iC,IAAG+C,KAAKm+B,EAAkBkB,YAAa,SAASthB,EAAQkiB,GAChDA,GAAUA,EAAOj9B,QACjBg9B,EAAmB7/B,KAAK+/B,SAASniB,MAMzC9gB,GAAG+C,KAAKm+B,EAAkBiB,MAAO,SAASn/B,EAAK8d,GACtCogB,EAAkBkB,YAAYthB,IAC/BiiB,EAAmB7/B,KAAK+/B,SAASniB,MAKzCiiB,EAAqBA,EAAmB/yB,OAAOkxB,EAAkBmB,WAKrEa,kBAAmB,SAAS9oB,GACxB,MAAOpa,IAAG2F,QAAQu7B,EAAkBiB,MAAO/nB,IAAO,GAGtD6hB,KAAM,SAAS7hB,EAAImlB,GAKf,MAJgB,OAAZA,GACA2B,EAAkBmB,SAASn/B,KAAKkX,KAGhC8mB,EAAkBS,cACF,MAAZpC,GACA2B,EAAkBmB,SAASc,MAC3BjC,EAAkBiB,MAAMj/B,KAAKkX,IAG5B,WACG,GAAIgpB,GAAkBlC,EAAkBkB,YAAYhoB,MACpDgpB,GAAgBlgC,KAAKq8B,GACrB2B,EAAkBkB,YAAYhoB,GAAMgpB,MAIrC,IAMftpB,MAAO,WACHonB,EAAkBmB,YAClBnB,EAAkBiB,WAI1BkB,GACIlH,KAAM,SAAS/hB,EAAIrY,GACfotB,EAAQ2P,cAAc1kB,GAAI6Q,OAAS,EAEnC9kB,EAAI,qCAAuCiU,GAC3C+U,EAAQmU,WAAWlpB,GAAIrD,KACnB,SAASib,EAAUsJ,GACfn1B,EAAI,uCAAyCiU,EAE7C,IAAIkmB,GAAmBt2B,EAAO+1B,kBAAkB/N,GAAU,GACtDxW,EAAOtD,EAAQsK,QAAQpI,EAE3BlC,GAAQ8S,WAAW5Q,EAAIrY,EAAMyZ,EAAMA,GACnCxR,EAAOu5B,aAAanpB,EAAIkmB,GACxBt2B,EAAOi2B,QAAQ7lB,EAAIkmB,EAAkBhF,IAGzC,SAAStJ,EAAUsJ,GACfn1B,EAAI,oCAAsCiU,EAE1C,IAAIkmB,GAAmBt2B,EAAO+1B,kBAAkB/N,GAAU,EAErD9Z,GAAQqU,YAAYnS,EAAIrY,EAAMu+B,EAAkBhF,IACjDtxB,EAAOi2B,QAAQ7lB,EAAIkmB,EAAkBhF,OAOzDtxB,GACI4V,OAAQ,SAASxF,GACbjU,EAAI,cAAgBiU,GACpBlC,EAAQqP,YAAYnmB,OAAOgZ,GAC3B8mB,EAAkBC,KAAK/mB,IAG3B6lB,QAAS,SAAS7lB,EAAI4X,EAAUsJ,GAC5B,GAAIv5B,GAAOmW,EAAQoI,QAAQlG,EAE3BlC,GAAQkT,WAAWhR,EAAIrY,EAAMiwB,EAAUsJ,GAEnCnM,EAAQ2P,cAAc1kB,IACtB+U,EAAQqU,YAAcrU,EAAQqU,WAAWppB,GAG7C8mB,EAAkBC,KAAK/mB,IAK3ByoB,eAAgB,SAASzoB,GACrB,MAAQ+U,GAAQsU,UAAYtU,EAAQsU,SAASrpB,IACxC+U,EAAQ3N,SAAW2N,EAAQ3N,QAAQpH,IAG5CspB,YAAa,WAITvU,EAAU,IAHQvE,EAAY5qB,GAAG4qB,GAAa5qB,GAAG2jC,cACtB3jC,GAAG8S,kBAAkBqC,cAAgB,MAAQ,QAEvB,iBAC7C+C,GAEI8U,oBAAqB9U,EAAQ8U;0CAC7BH,cAAe3U,EAAQ2U,cACvBvM,QAASpI,EAAQoI,QACjBkC,QAAStK,EAAQsK,QACjBO,QAAS7K,EAAQ6K,QACjB5c,IAAKA,EACLolB,SAAUrT,EAAQqT,SAClBP,WAAY9S,EAAQ8S,WACpB0B,cAAexU,EAAQwU,gBAI3ByC,EAAQyU,+BACRzU,EAAQyU,iCAIhBC,4BAA6B,SAASzpB,GAClC,MAAOlC,GAAQ4U,SAAS1S,IAM5B0pB,WAAY,SAAS1pB,EAAI9O,GAIrB,MAAIA,KAAS6jB,EAAQ3N,QAAQpH,IAAO9O,YAAgBtL,IAAGyX,WAKnDS,EAAQwT,aAAatR,GAErBjU,EAAI,+CAAiDiU,GACrD9O,EAAKsM,SAASb,KAAK,SAASgtB,GACxB59B,EAAI,mCAAqCiU,GAGzC+U,EAAQ6U,WAAW5pB,EAAI2pB,GAGvB7rB,EAAQyU,QAAQvS,EAAI2pB,EAAcvoB,MAGlC2T,EAAQqS,mBAAmBpnB,GAE3BpQ,EAAOi6B,uBAAuB7pB,IAIlC,SAAS0L,GACL,GAAIoe,KAEApe,KACAoe,EAAc/5B,MAAQ2b,GAG1B3f,EAAInG,GAAG8H,OAAO,yDAA0DsS,EAAI0L,GAAe,SAE3F5N,EAAQkT,WAAWhR,EAAIlC,EAAQoI,QAAQlG,GAAKpa,GAAG6B,OAAOqiC,EAAehF,GAAuB,MAC5Fl1B,EAAOi6B,uBAAuB7pB,GAC9B8mB,EAAkBC,KAAK/mB,MAOxB,GAHIpQ,EAAOi6B,uBAAuB7pB,IAO7C6pB,uBAAwB,SAAS7pB,GAC7B,GAAI+pB,GAAajsB,EAAQ4E,mBAAmB1C,GACxCgqB,GAAiB,CAoBrB,OAlBID,IAAcA,EAAWp+B,QACzBI,EAAI,0CAA4CiU,GAEhDpa,GAAG+C,KAAKohC,EAAY,SAASnhC,EAAKqhC,GAC9B,GAAIr6B,EAAO65B,4BAA4BQ,IAAgBlV,EAAQ3N,QAAQ6iB,GACnED,EAAiBC,IAAcjqB,EAC/BpQ,EAAOs6B,IAAID,OAEV,IAAIr6B,EAAO65B,4BAA4BQ,GACxC,OAAO,MAKfD,GAAiB,EACjBp6B,EAAOs6B,IAAIlqB,IAGRgqB,GAGXb,aAAc,SAASnpB,EAAI4X,GACE7tB,SAArB6tB,EAAS3V,SACTnE,EAAQwU,cAActS,EAAI4X,EAAS3V,UAO3C0jB,kBAAmB,SAASwE,EAAkB7R,GAC1C,GAAIV,GAAWuS,CAcf,OAVKvkC,IAAGuG,SAASg+B,KACbvS,KAEIhyB,GAAGwH,SAAS+8B,KAAsB7R,IAClCV,EAAS7nB,MAAQo6B,IAIzBvS,EAASlmB,QAAU4mB,EAEZV,GAGXsS,IAAK,SAASlqB,GACV,GAAIrY,GAAOmW,EAAQoI,QAAQlG,EAE3B,KAAK+kB,EAAWve,QAAQxG,GACpB,KAAM,IAAIpa,IAAGwB,MAAM4Y,EAAK,qCAG5BlC,GAAQ0T,SAASxR,EAAIrY,GAAMgV,KACvB,SAASib,GACDA,GAAYA,EAAS9b,OACrBgC,EAAQ6D,UAAU3B,EAAIpa,GAAG0a,OAAO0C,QAChC+R,EAAQjZ,MAAMkE,GACd8mB,EAAkBC,KAAK/mB,IAGnBglB,GAAoBjQ,EAAQqV,qBAAqBpqB,GACjDklB,EAAQmC,SAASrnB,GAGjBipB,EAAOlH,KAAK/hB,EAAIrY,IAK5B,SAASoI,GAKL,GAJAA,EAAQA,MAERhE,EAAIiU,EAAK,qEAAuEjQ,EAAO,UAElF+N,EAAQqU,YAAYnS,EAAIrY,EAAMoI,EAAMqiB,kBAAqB,CAC1D,GAAIwF,GAAWhoB,EAAO+1B,kBAAkB51B,EAAMqiB,cAAc,EAC5DxiB,GAAOi2B,QAAQ7lB,EAAI4X,OAMnClnB,MAAO,SAASsP,GACZ,GAAIqqB,GAAez6B,EAAO64B,eAAezoB,EAEzC,OAAIqqB,GACOz6B,EAAO85B,WAAW1pB,EAAIqqB,IAG7Bz6B,EAAOs6B,IAAIlqB,IACJ,IAKnBpa,IAAG6B,OAAOxB,MAINmQ,IAAK,SAAS4J,EAAIoF,GACd2P,EAAQ3e,IAAIP,MAAM5P,KAAM8H,YAM5B6B,OAAQ,SAASoQ,GACb,QAAI8mB,EAAkBjF,KAAK7hB,IAChBpQ,EAAOc,MAAMsP,IAK5BgK,MAAO,SAAShK,GAWZ,MANIilB,KACAlQ,EAAQ2P,cAAc1kB,GAAIhK,KAAKswB,eAAgB,GAK/CQ,EAAkBgC,kBAAkB9oB,GAC7BpQ,EAAOc,MAAMsP,GAOb+kB,EAAWn1B,OAAOoQ,IAOjCwF,OAAQ,SAASxF,GACb,GAAIsqB,GAAevV,EAAQvP,OAAOxF,EAE9Bpa,IAAG6W,iBAAiB6tB,GACpBA,EAAa3tB,KAAK,WACd/M,EAAO4V,OAAOxF,KAGbsqB,KAAiB,GACtB16B,EAAO4V,OAAOxF,IAOtB0F,UAAW,WACP,GACIpP,GADAqyB,EAAqB7B,EAAkB4B,uBAK3C,IAAIC,EAAmBh9B,OACnB,IAAK2K,EAAIqyB,EAAmBh9B,OAAS,EAAG2K,GAAK,EAAGA,IAC5CyuB,EAAWvf,OAAOmjB,EAAmBryB,GAI7CwwB,GAAkBpnB,SAKtB0H,QAAS,SAASpH,GACd,MAAI+U,GAAQsU,UAAYtU,EAAQsU,SAASrpB,GAC9B+U,EAAQsU,SAASrpB,GAAI1C,cAGzByX,EAAQ3N,SAAW2N,EAAQ3N,QAAQpH,IAI9CuqB,UAAW,SAASvqB,GAChB,SAAU+U,EAAQsU,WAAYtU,EAAQsU,SAASrpB,KAGnDZ,SAAU,SAASY,GACf,GAAI+U,EAAQ3V,SACR,MAAO2V,GAAQ3V,SAASY,IAIhCN,MAAO,WACH3T,EAAI,4BACJg5B,EAAWrf,YACXohB,EAAkBpnB,QAClBqV,EAAQrV,SAGZuJ,QAAS,SAASjJ,GACd,GAAI+kB,EAAWve,QAAQxG,GACnB,MAAO+U,GAAQ9L,QAAQjJ,IAO/BwG,QAAS,SAASxG,GACd,MAAO+U,GAAQvO,QAAQxG,IAG3B6I,gBAAiB,SAAS7I,GACtB,GAAI3K,GAAM0f,EAAQvO,QAAQxG,IACtB+U,EAAQyV,oBACRzV,EAAQyV,mBAAmBxqB,EAE/B,SAAI3K,KACSsE,aAAarE,QAAQD,IAMtC8S,sBAAuB,WACnB,MAAI4M,GAAQ5M,sBACD4M,EAAQ5M,4BAavBsc,oBAAqB,SAASzkB,GAC1B,GAAI+kB,EAAWve,QAAQxG,GACnB,MAAO+U,GAAQ0P,oBAAoBzkB,IAS3ClE,MAAO,SAASkE,GACZ,SAAI+kB,EAAWnc,YAAY5I,IAAO+U,EAAQjZ,OAASipB,EAAWve,QAAQxG,IAAO+U,EAAQjZ,MAAMkE,MACvF8mB,EAAkBC,KAAK/mB,GACvB+U,EAAQ8R,0BAA0B7mB,IAC3B,IAKfyqB,mBAAoB,SAASzqB,GACzB,QAAS+U,EAAQ0V,oBAAsB1V,EAAQ0V,mBAAmBzqB,IAItE4I,YAAa,SAAS5I,GAClB,QAAS+U,EAAQnM,aAAemM,EAAQnM,YAAY5I,MAI5Dpa,GAAG6B,OAAOqW,EAASJ,GACnB3R,EAAM+R,EAAQ/R,IACdi5B,EAAmBlnB,EAAQ5C,SAAS+K,SAAWrgB,GAAG8S,kBAAkBwC,SACpE+pB,EAA6BD,GAAoBlnB,EAAQ5C,SAAS6iB,WAAW9X,QAE7E6e,EAAwB,WACpB,GAAIlN,KAIJ,OAFAA,GAAS9Z,EAAQ4S,oBAAqB,EAE/BkH,KAGXhoB,EAAO05B,eC9yBX1jC,GAAG8kC,qBAAuB,SAAShtB,GAC/B,YAEA,IAAII,IACI/R,IAAK,SAASC,EAASC,MAE3B0+B,IAEJ/kC,IAAG6B,OAAOqW,EAASJ,GAEnB9X,GAAG6B,OAAOxB,MACN2kC,eAAgB,SAAS5qB,EAAI/K,GACzB,GAAI41B,GAA2B,SAASnQ,GAChCzlB,EAASylB,EAAM9vB,MAGnBE,QAAOgQ,YACP6vB,EAAyB3qB,GAAMpa,GAAGkF,QAAQ5E,OAAO,UAAW2kC,GAG5D9+B,IAAI,wDAAyD,UAIrE++B,sBAAuB,SAAS9qB,GAC5B,GAAIlV,OAAOgQ,YAAa,CACpB,GAAIiwB,GAAWJ,EAAyB3qB,EACpC+qB,IACAA,SCvBpBnlC,GAAGolC,kBAAoB,SAAS/pB,GAC5B,YAoBA,SAASgqB,GAAYjrB,SACVkrB,GAAiBlrB,GAKpBmrB,IACApS,aAAaqS,EAA0BprB,UAChCorB,GAA0BprB,GACjCqrB,EAAoBP,sBAAsB9qB,GAG9C,IAAIsrB,GAAS/7B,SAASg8B,eAAexW,EAAQyW,eAAexrB,GACxDsrB,KAIAA,EAAOv0B,aAAa,MAAO,qBAE3BnR,GAAG0lC,GAAQtkC,UAQnB,QAASykC,GAAuBC,GAC5B,MAAOA,GAAWpgC,MAAM,KAAK,GAUjC,QAASqgC,GAAoBhkC,GACzB,GAAI2jC,GAAS1lC,GAAGgP,UAAU,yCAA2CjN,EAAO,OAO5E,OALA2jC,GAAOv0B,aAAa,KAAMpP,GAE1B2jC,EAAOvlC,MAAMC,QAAU,OACvBuJ,SAASq8B,KAAK50B,YAAYs0B,GAEnBA,EAUX,QAASO,GAA4BP,EAAQr2B,GACzC,GAAIy2B,GAAaJ,EAAOtrB,GACpB0G,EAAS+kB,EAAuBC,EAGpCI,GAFWnjB,EAAQjC,IAEKzR,EAIxBi2B,EAAiBxkB,GAAU9gB,GAAG0lC,GAAQplC,OAAO,OAAQ,WAC7C6uB,EAAQ3V,SAASsH,KACjB3a,EAAI,mEAAqE2/B,EAAa,KAEtFN,EAA0BM,GAAcrc,WAAW,WAC/C,GAAI3D,GAAe,gEAAkEggB,CACrF3/B,GAAI2f,EAAc,SAClBzW,GACIlF,MAAO2b,KAEZ,QAMX2f,EAAoBT,eAAec,EAAY,SAAS1/B,GACpDD,EAAI,2CAA6CC,EAAU,IAC3D,IAGI+/B,GAFAnU,GADS6T,EAAuBC,GACrB3W,EAAQiX,mBAAmBhgC,IACtCmU,EAAOyX,EAASzX,IAGhBA,IAAQ2rB,EAAgB3rB,IACxBpU,EAAI,qCAAuC2/B,GAC3C3S,aAAaqS,EAA0BM,UAChCN,GAA0BM,GAEjC3W,EAAQkX,iBAAiBP,GAEzBK,EAAiBD,EAAgB3rB,SAE1B2rB,GAAgB3rB,GACvBkrB,EAAoBP,sBAAsBY,GAC1CK,EAAenU,IAETzX,GACNpU,EAAI,IAAMC,EAAU,2CAxHhC,GAAI8R,GAAUmD,EAAKnD,QACfiX,EAAU9uB,KACVq+B,EAAQrjB,EAAKqjB,MACb4H,EAAwBtmC,GAAGiN,cAC3Bi5B,KACAZ,KACAE,KACAD,EAASrtB,EAAQqtB,OACjBjb,EAAYpS,EAAQoS,UACpBvH,EAAU2b,EAAM3b,QAChB5c,EAAMu4B,EAAMv4B,IACZs/B,EAAsB,GAAIzlC,IAAG8kC,sBAAsB3+B,IAAKA,GAkH5DnG,IAAG6B,OAAOxB,KAAM,GAAIL,IAAGy+B,cAAcpjB,IAErCrb,GAAGqM,SAAShM,KAAM,SAASmM,GACvB,OAIIgE,IAAK,SAAS4J,EAAI8T,GACd1hB,EAAOgE,IAAI4J,GAAK1Q,MAAOwkB,IAEvBA,EAAU/c,aAAa,OAAQmZ,GAG3B4D,EAAU/sB,YACVnB,GAAGkuB,GAAW9sB,UAItBiiB,QAAS,SAASjJ,GACdirB,EAAYjrB,GACZ5N,EAAO6W,QAAQjJ,IAGnBwG,QAAS,SAASxG,GACd,MAAO5N,GAAOoU,QAAQxG,IACkBjW,SAApCgrB,EAAQ2P,cAAc1kB,GAAI1Q,UAK1C1J,GAAG6B,OAAOxB,MACNmZ,SAAU,SAASY,GACf,MAAO+U,GAAQ2P,cAAc1kB,GAAI1Q,OAWrC68B,iBAAkB,SAASb,EAAQr2B,GAE/B,GAAIm3B,EAEAjB,GACAU,EAA4BP,EAAQr2B,GAGpCi2B,EAAiBI,EAAOtrB,IAAMpa,GAAG0lC,GAAQplC,OAAO,OAAQ,WAMpD,GALA6F,EAAI,yBAA2Bu/B,EAAOtrB,IAKjCsrB,EAAOvkC,WAAZ,CAIA,IAEI,GAAIukC,EAAOe,iBACPf,EAAOe,gBAAgBT,MACkB,SAAzCN,EAAOe,gBAAgBT,KAAK72B,UAK5B,OAGR,MAAOhF,GAEHhE,EAAI,8EAAgFgE,EAAM/D,QAAU,IAAK,SACzGogC,GAAsB16B,SAAS,GAGnCuD,EAASm3B,OAWrBE,cAAe,SAAStsB,GAGpB,MAAO2rB,GAFU5W,EAAQyW,eAAexrB,KAU5CisB,iBAAkB,SAASjsB,GACMjW,SAAzBmhC,EAAiBlrB,KACjBkrB,EAAiBlrB,WACVkrB,GAAiBlrB,KAQhCwrB,eAAgB,SAAS9kB,GACrB,MAAOA,GAAS,IAAMwlB,GAY1BK,mBAAoB,SAAStrB,GACzB,GAAI2L,GAAS3L,EAAK2L,OACdhJ,EAAW3C,EAAK2C,SAChBD,EAAS1C,EAAK0C,OACd+Y,EAAezb,EAAKyb,aACpB8P,EAAavrB,EAAKurB,WAClB11B,EAAOlR,GAAGgP,UAAU,iBAAmBgY,EAAS,2CAChDuU,EAAMvd,CAcV,OAZI8Y,GACA92B,GAAGiR,WAAW8M,EAAQ7M,GAGtBqqB,EAAMv7B,GAAGkQ,QAAQ6N,EAAQC,GAG7B9M,EAAKC,aAAa,SAAUoqB,GAC5BrqB,EAAKC,aAAa,SAAUy1B,GAC5B11B,EAAK/Q,MAAMC,QAAU,OACrBuJ,SAASq8B,KAAK50B,YAAYF,GAEnBA,GAOXk1B,mBAAoB,SAASS,GACzB,GAAI7U,KAEJ,KACIA,EAAWhyB,GAAGqR,UAAUw1B,GAE5B,MAAO18B,GACHhE,EAAI,0DAA4DgE,EAAM/D,QAAU,IAAK,SAGzF,MAAO4rB,OCnSnBhyB,GAAG8mC,iBAAmB,SAASzrB,GAC3B,YAqCA,SAAS0lB,GAAM3mB,GACXpa,GAAG+C,KAAKosB,EAAQyR,SAASxmB,GAAK,SAAS2sB,EAAO1b,GAC1C,GAAI2b,GAAgB7X,EAAQ8X,kBAAkB7sB,EAAI2sB,EAElD1b,GAAIyQ,mBAAqB,KACzBzQ,EAAIrhB,OAAOwwB,WAAa,KACxBnP,EAAI0V,QACJiG,GAAiBA,EAAcxI,UAAYwI,EAAcxI,SAASpkB,KA1C1E,GAAI+U,GAAU9uB,KACVuqB,EAAYvP,EAAKnD,QAAQ0S,UACzB8T,EAAQrjB,EAAKqjB,MACbppB,EAAW+F,EAAKnD,QAAQ5C,SACxB4xB,EAAe,SAAS9sB,GACpB,GAAIukB,GAAYxP,EAAQ2P,cAAc1kB,EAEtC,IAAIukB,EAAUpG,UACV,MAAOoG,GAAUpG,SAIjB,IAAIA,GAAYjjB,EAASojB,QAOzB,OALI14B,IAAG6G,WAAW0xB,KACdA,EAAYA,EAAUne,EAAIoI,EAAQpI,KAGtCukB,EAAUpG,UAAYA,EACfA,GAGfniB,EAASiF,EAAKnD,QAAQ9B,OACtB+wB,EAAa7xB,GAAY+F,EAAKnD,QAAQ5C,SAAS+K,SAAWrgB,GAAG8S,kBAAkBwC,SAC/E8xB,EAAgBhxB,GAAUiF,EAAKnD,QAAQ9B,OAAOiK,SAAW8mB,GAAcnnC,GAAG8S,kBAAkBsD,OAC5FkK,EAAUoe,EAAMpe,QAChBkC,EAAUkc,EAAMlc,QAChBO,EAAU2b,EAAM3b,QAChBf,EAAc0c,EAAM1c,YACpB6K,EAAgB6R,EAAM7R,cACtBH,EAAgBgS,EAAMhS,cACtB1B,EAAa0T,EAAM1T,WACnB7kB,EAAMu4B,EAAMv4B,IACZ6mB,EAAsB0R,EAAM1R,mBAahChtB,IAAG6B,OAAOxB,KAAM,GAAIL,IAAGy+B,cAAcpjB,IAErCrb,GAAGqM,SAAShM,KAAM,SAASmM,GACvB,OAIIgE,IAAK,SAAS4J,EAAIitB,GACd,GAAIrnC,GAAGuI,OAAO8+B,IAAgBrnC,GAAGuJ,OAAO89B,GACpC76B,EAAOgE,IAAI4J,GAAKoF,KAAM6nB,QAErB,CAAA,KAAIA,YAAuBrnC,IAAGyX,WAI/B,KAAM,IAAIjW,OAAM,2CAHhBgL,GAAOgE,IAAI4J,GAAKskB,MAAO2I,IAM3BlY,EAAQmY,eAAeltB,GACvBgtB,GAAiBjY,EAAQoY,uBAAuBntB,IAGpDiJ,QAAS,SAASjJ,GACd2mB,EAAM3mB,GACN+U,EAAQ6Q,+BAA+B5lB,GACvC+U,EAAQqU,WAAWppB,GACnB5N,EAAO6W,QAAQjJ,OAK3Bpa,GAAG6B,OAAOxB,MAEN+/B,iBAAkB,SAAShmB,EAAImlB,SACpBpQ,GAAQ2P,cAAc1kB,GAAIhK,KAAKo3B,aAAajI,IAGvD2C,SAAU,SAAS9nB,EAAImlB,GACnB,GAAIkI,GAAYtY,EAAQ2P,cAAc1kB,GAAIhK,IAEtCq3B,GAAUC,YACHD,GAAUC,KAAKnI,GAEtBkI,EAAUE,sBACHF,GAAUE,eAAepI,IAMxCM,eAAgB,SAASzlB,EAAIwtB,GACzB,GAAIC,GAAe1Y,EAAQoS,gBAAgBnnB,GAAM,EAC7CiR,EAAM8D,EAAQ2Y,QAAQ1tB,EAAIytB,EAE9B,OAAID,IACO,GAAI5nC,IAAG4L,SAAUE,QAAQ87B,EAAevc,GAAMA,IAGlD,GAAIrrB,IAAG4L,SAAUE,WAAYuf,IAGxC7J,QAAS,SAASpH,GACd,MAAO+U,GAAQvO,QAAQxG,IAAO+U,EAAQ2P,cAAc1kB,GAAIoF,MAG5DikB,SAAU,SAASrpB,GACf,MAAO+U,GAAQvO,QAAQxG,IAAO+U,EAAQ2P,cAAc1kB,GAAIskB,OAO5Dnc,sBAAuB,WACnB,GAAIwlB,KAuBJ,OArBA5Y,GAAQ6Y,sBAAsB,SAASv4B,EAAK0Q,GACxCgP,EAAQ8R,0BAA0B,KAAM9gB,EAAW7K,SAASirB,WAAapgB,EAAW7K,SAASkrB,UAE7F,IAAIx7B,IACAjD,KAAMoe,EAAWpe,KACjBy+B,UAAWrgB,EAAW7K,SAASkrB,UAC/BhlB,KAAM2E,EAAW3E,KACjBjB,KAAM4F,EAAW5F,KAGjB4F,GAAW1Q,MACXzK,EAAKyK,IAAM0Q,EAAW1Q,KAGtB0Q,EAAWmM,mBACXtnB,EAAKsnB,iBAAmBnM,EAAWmM,kBAGvCyb,EAAmB7kC,KAAK8B,KAGrB+iC,GAGXlD,mBAAoB,SAASzqB,GACzB,MAAO+U,GAAQ2P,cAAc1kB,GAAIqlB,kBAGrCzc,YAAa,SAAS5I,GAClB,QAAS9E,GAAY6Z,EAAQvO,QAAQxG,KAChC+U,EAAQ2P,cAAc1kB,GAAI6tB,cAGnChH,0BAA2B,SAAS7mB,EAAI8tB,EAAeC,GACnD,GAAIxJ,GAAYxP,EAAQ2P,cAAc1kB,OAClCguB,EAAiBzJ,EAAUrpB,aAC3BirB,EAAa2H,GAAiBE,EAAc7H,WAC5CC,EAAY2H,GAAgBC,EAAc5H,SAE1CD,KACAp6B,EAAInG,GAAG8H,OAAO,yDAA0DyJ,KAAK+qB,UAAUiE,KACvFA,EAAW8H,UACXroC,GAAG+C,KAAKw9B,EAAY,SAASv9B,EAAKu8B,GAC9BiB,EAAUC,QAAQlB,KAEtBgB,EAAWx6B,OAAS,IAI5BmQ,MAAO,SAASkE,GACZ,GAAI+U,EAAQvO,QAAQxG,GAIhB,MAHAjU,GAAInG,GAAG8H,OAAO,4DAA6DsS,EAAIkG,EAAQlG,KACvF+U,EAAQ2P,cAAc1kB,GAAIkuB,QAAS,EACnCvH,EAAM3mB,IACC,GAIfonB,mBAAoB,SAASpnB,GACzB,GAAI9E,GAAY6Z,EAAQvO,QAAQxG,GAAK,CACjC,GACImuB,GACA73B,EAFA2G,EAAQ8X,EAAQ2P,cAAc1kB,EAQlC,UAJO/C,GAAM/B,SAEb+B,EAAM/B,YACNizB,EAAcpZ,EAAQoS,gBAAgBnnB,GAClCmuB,EAAc,GAAKjzB,EAAS8iB,UAAW,CAKvC,IAJA/gB,EAAM/B,SAAS+K,SAAU,EACzBhJ,EAAM/B,SAASkzB,MAAQD,EACvBlxB,EAAM/B,SAASkrB,aAEV9vB,EAAI,EAAGA,EAAI63B,EAAa73B,IACzB2G,EAAM/B,SAASkrB,UAAUt9B,KAAKwN,EAGlCye,GAAQmY,eAAeltB,OAGvB/C,GAAM/B,SAAS+K,SAAU,IAKrC2jB,WAAY,SAAS5pB,EAAIquB,GACjBtZ,EAAQvO,QAAQxG,KAChB+U,EAAQ2P,cAAc1kB,GAAIoF,KAAOipB,IAIzCjF,WAAY,SAASppB,GACjB,GAAIqtB,GAAYtY,EAAQ2P,cAAc1kB,GAAIhK,IAE1CpQ,IAAG+C,KAAK0kC,EAAUE,eAAgB,SAASe,SAChCjB,GAAUE,eAAee,KAGpC1oC,GAAG+C,KAAK0kC,EAAUC,KAAM,SAASgB,SACtBjB,GAAUC,KAAKgB,MAW9BC,WAAY,SAASvuB,EAAIwuB,GACrB,MAAOzZ,GAAQ0Z,aAAazuB,EAAIwuB,EAAa5oC,GAAG+J,sBAGpDk9B,kBAAmB,SAAS7sB,EAAIwuB,GAC5B,GAAIrJ,GAA0B,MAAfqJ,GAAsB,EAAKA,CAC1C,OAAOzZ,GAAQ2P,cAAc1kB,GAAIhK,KAAKu3B,eAAepI,IAGzDC,cAAe,SAASplB,EAAI0uB,GACxB,GAAIvQ,GAAY2O,EAAa9sB,GACzB2uB,EAAWvmB,EAAQpI,GACnBvP,EAAaskB,EAAQ3N,QAAQpH,GAC7B4uB,EAAazQ,EAAYuQ,EACzBG,EAAWD,EAAazQ,GAAawQ,EAAWA,EAAWC,EAAazQ,EACxEgQ,EAAcpZ,EAAQoS,gBAAgBnnB,GACtCotB,EAAennC,KAAKy+B,cAAc1kB,GAAIhK,KAAKo3B,aAI3Cl8B,EAAOk8B,EAAasB,IAAe9oC,GAAG4K,UAAUC,EAAYm+B,EAAYC,EAI5E,OAFAzB,GAAasB,GAAcx9B,GAGvB49B,KAAMJ,EACNh+B,MAAOk+B,EACPj+B,IAAKk+B,EACLE,MAAOZ,EACPj9B,KAAMA,EACNkQ,KAAMytB,EAAWD,IAIzBrJ,yBAA0B,SAAS3T,GAC/B,OACIG,UAAWH,EAAUkd,KACrBE,UAAWpd,EAAUlhB,MAAQ,EAC7Bu+B,QAASrd,EAAUjhB,IACnB0tB,WAAYzM,EAAUmd,QAQ9BvE,mBAAoB,SAASxqB,GACzB,GACIrY,GAAOue,EAAQlG,GACfoB,EAAOgH,EAAQpI,GACfme,EAAY2O,EAAa9sB,GACzB4D,EAAWgE,EAAY5H,GACvB2e,EAAa3iB,EAAO2iB,WAAW3e,GAC/BkvB,EAAiBtpC,GAAG8H,OAAO,2BAA4B8iB,EANvC,MAMiE7oB,EAAMyZ,EAAM+c,EAAWva,EAM5G,OAJA+a,GAAWwQ,QAAQ,SAAS95B,GACxB65B,GAAkB,IAAM75B,IAGrB65B,GAGXE,aAAc,SAASpvB,GACnB,MAAO+U,GAAQ3N,QAAQpH,GAAI7Z,MAG/BkpC,oBAAqB,SAASrvB,GAC1B,MAAO+U,GAAQ2P,cAAc1kB,GAAI9E,UAOrCisB,gBAAiB,SAASnnB,GACtB,GAAI9E,EAAU,CACV,GAAIyzB,GAAWvmB,EAAQpI,GACnBme,EAAY2O,EAAa9sB,EAE7B,OAAOzY,MAAK+nC,KAAKX,EAAWxQ,KAIpCuP,QAAS,SAAS1tB,EAAIwuB,GAClB,GAAIrJ,GAA0B,MAAfqJ,GAAsB,EAAKA,CAC1C,OAAOzZ,GAAQ2P,cAAc1kB,GAAIhK,KAAKs3B,KAAKnI,IAG/CqB,SAAU,SAASxmB,GACf,MAAO+U,GAAQ2P,cAAc1kB,GAAIhK,KAAKs3B,MAK1CM,sBAAuB,SAAS34B,GACxB+3B,GACApnC,GAAG+C,KAAKgR,aAAc,SAAStE,EAAKnI,GAChC,GAAwD,IAApDmI,EAAI9J,QAAQ3F,GAAG8H,OAAO,aAAc8iB,IAAmB,CAEvDvb,EAASI,EADQ8B,KAAKC,MAAMlK,QAO5CggC,eAAgB,SAASltB,GACrB+U,EAAQ2P,cAAc1kB,GAAIhK,MACtBu3B,kBACAjI,iBACAgI,QACAF,kBAIRmC,kBAAmB,SAASvvB,GACxB+U,EAAQ2P,cAAc1kB,GAAI6tB,cAAe,GAK7CjI,+BAAgC,SAAS5lB,GACrC,GAAIkvB,EAEJ,UAAIlC,GAAiBjY,EAAQnM,YAAY5I,KACrCkvB,EAAiBna,EAAQyV,mBAAmBxqB,GAExCkvB,GAAkBv1B,aAAarE,QAAQ45B,OACvCv1B,aAAa61B,WAAWN,IACjB,IASnB/B,uBAAwB,SAASntB,GAC7B,GACIkvB,GAAgBO,EADhBxyB,EAAQ8X,EAAQ2P,cAAc1kB,EAK9BgtB,IAA+BjjC,SAAdkT,EAAM5H,MACvB65B,EAAiBna,EAAQyV,mBAAmBxqB,GAC5CyvB,EAAgB91B,aAAarE,QAAQ45B,GAGjCO,IACAA,EAAgBt4B,KAAKC,MAAMq4B,GAIvBhd,EAAcgd,EAActvB,MAC5B4U,EAAQwa,kBAAkBvvB,IAG1BjU,EAAInG,GAAG8H,OAAO,0DAA2DsS,EAAIkG,EAAQlG,KAErFsS,EAActS,EAAIyvB,EAActvB,MAEhClD,EAAM5H,IAAMo6B,EAAcp6B,IAC1B4H,EAAM/B,SAAWu0B,EAAcv0B,SAC/B+B,EAAM4T,OAAS4e,EAAc5e,OAC7B5T,EAAMiV,iBAAmBud,EAAcvd,iBACvCjV,EAAMooB,kBAAmB,EAEzBtQ,EAAQ8R,0BAA0B7mB,OAOlD6nB,0BAA2B,SAAS7nB,GAChC,GACIkvB,GAAgBO,EADhBxyB,EAAQ8X,EAAQ2P,cAAc1kB,EAIlC,IAAIgtB,GAAiBjY,EAAQnM,YAAY5I,GAAK,CAC1C,GAAIkS,GAAmBU,EAAoB5S,EAE3CkvB,GAAiBna,EAAQyV,mBAAmBxqB,GAE5CyvB,GACI9nC,KAAMue,EAAQlG,GACdoB,KAAMgH,EAAQpI,GACdG,KAAMwI,EAAQ3I,GACd3K,IAAK4H,EAAM5H,IACX6F,SAAU+B,EAAM/B,SAChB2V,OAAQ5T,EAAM4T,OACd6e,YAAaxL,KAAKgG,OAGlBhY,IACAud,EAAcvd,iBAAmBA,EAGrC,KACIvY,aAAaC,QAAQs1B,EAAgB/3B,KAAK+qB,UAAUuN,IAExD,MAAO1/B,GACHhE,EAAInG,GAAG8H,OAAO,0DAA2DsS,EAAIjQ,EAAMxD,YAAa,WAK5GojC,yBAA0B,SAAS3vB,EAAImlB,EAAUhH,GAC7C,GAAIlN,GAAM8D,EAAQ2Y,QAAQ1tB,EAAImlB,GAC1Bx9B,EAAOue,EAAQlG,GACf4vB,GACI3G,OAAQ,SAASpY,EAAQC,GACrB,GAAI6d,GAAWvmB,EAAQpI,EAEnB6Q,KAAWC,EACXF,EAAW5Q,EAAIrY,EAAMgnC,EAAUA,GAG/B/d,EAAW5Q,EAAIrY,EAAOkpB,GAAU8d,EAAWA,EAAW,EAAI9d,EAAS8d,IAI3EzJ,QAAS,SAASrU,EAAQC,GACtB,GAAIwU,GAAgBvQ,EAAQ2P,cAAc1kB,GAAIhK,KAAKsvB,cAC/CuK,EAAiC9a,EAAQ2P,cAAc1kB,GAAI6Q,OAC3Dif,EAAmBjf,EACnBkf,EAAkBjf,EAClBsN,EAAgBhW,EAAQpI,GACxBgwB,EAAuBF,GAAoBC,EAAkB5R,GAC7D8R,EAAqBJ,CAEzBvK,GAAcH,GAAY6K,EAE1BpqC,GAAG+C,KAAK28B,EAAe,SAASH,EAAU+K,GACtCD,GAAsBC,IAG1Btf,EAAW5Q,EAAIrY,EAAMsoC,EAAoB7R,IAIrDnN,GAAIrhB,OAAOwwB,WAAa,SAAS1rB,GAC7B,GAAIA,EAAE2tB,iBAAkB,CAGpBuN,EADwB,MAAbzR,EAAoB,SAAW,WACjBzpB,EAAEmc,OAAQnc,EAAEoc,UAcjD2d,aAAc,SAASzuB,EAAIwuB,EAAavd,EAAKkf,GACzC,GAAIC,GAAwB,MAAf5B,GAAsB,EAAKA,EACpCnB,EAAYtY,EAAQ2P,cAAc1kB,GAAIhK,IAW1C,OATAq3B,GAAUC,KAAOD,EAAUC,SAC3BD,EAAUE,eAAiBF,EAAUE,mBAErCF,EAAUC,KAAK8C,GAAUnf,EAErBkf,IACA9C,EAAUE,eAAe6C,GAAUD,GAGhClf,GAIXuY,8BAA+B,WAC3B,GAAI6G,GAAiBr0B,EAAOyiB,eAE5B1J,GAAQ6Y,sBAAsB,SAASv4B,EAAK0Q,GACxC,GAAIuqB,GAAiB,GAAIpM,MAAKne,EAAW2pB,YAGzCY,GAAeC,QAAQD,EAAeE,UAAYH,GAE9CC,EAAenM,WAAaD,KAAKgG,QACjCn+B,EAAI,2CAA6CsJ,GACjDsE,aAAa61B,WAAWn6B,OAWpC+0B,qBAAsB,SAASpqB,GAC3B,GAAI/C,GAAQ8X,EAAQ2P,cAAc1kB,EAMlC,OAJK/C,GAAM/B,UACP6Z,EAAQqS,mBAAmBpnB,GAGxB/C,EAAM/B,SAAS+K,YCniBlCrgB,GAAG+mB,wBAA0B,SAASjP,GAClC,YAqBA,SAAS+yB,KACL,MAAqC,SAAjC3yB,EAAQ8O,OAAOC,eAEX6jB,QAAS,aAtBrB,GAAIC,GACA7yB,GACI8O,OAAQ,SACRG,cAAe,SACfK,iBACAN,eAAgB,EAChBI,cAAe,SAASlN,GAAK,UAC7BmN,eACAE,MACI6I,UAAU,EACV2I,iBAAiB,GAErB9yB,IAAK,SAAS4B,EAAK1B,KACnBqhB,SAAU,SAAStN,KACnBwN,iBAAkB,SAASxN,EAAIyN,EAAUC,KAGjD9nB,IAAG6B,OAAOqW,EAASJ,GAYnBizB,EAAY/qC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGg6B,eAC/B6C,aAAc,mBACdM,cAAe,OAAQ,UACvBnW,OAAQ9O,EAAQ8O,OAChBQ,cAAetP,EAAQsP,cACvBD,YAAarP,EAAQqP,YACrB8T,eAAgBwP,IAChB3jB,eAAgBhP,EAAQgP,eACxBI,cAAe,SAASlN,GACpB,MAAOlC,GAAQoP,cAAcpF,IAAI9H,IAErCjU,IAAK+R,EAAQ/R,IACbs1B,OAAQvjB,EAAQwP,SAChB0D,WAAYlT,EAAQ0P,iBACpBH,KAAMvP,EAAQuP,QAGlBznB,GAAG6B,OAAOxB,MACN4zB,WAAY,SAAS7Z,EAAIG,EAAMsZ,GAC3B,GAAIlJ,GAAoBkJ,KAExB3b,GAAQ/R,IAAI,sCAAwCiU,GAE7B,WAAnBlC,EAAQ8O,OACR+jB,EAAUtN,cAAcrjB,GACnBwjB,SAASrjB,GACTujB,WAAWnT,GACXwR,QAGLxR,EAAkBzS,EAAQiP,eAAiB5M,EAC3CwwB,EAAUtN,cAAcrjB,GACnB0jB,WAAWnT,GACXwR,YCpDrB,WAMI,QAAS6O,GAAkBC,GACvB,GAGIC,GAHAC,EAAKF,EAAIG,aACTC,EAAKJ,EAAIK,cACTjnC,EAASsF,SAASC,cAAc,SAGpC,OAAIuhC,GAAKE,EAAK,UACVhnC,EAAOknC,MAAQlnC,EAAO2U,OAAS,EAC/BkyB,EAAM7mC,EAAOmnC,WAAW,MACxBN,EAAIO,UAAUR,GAAME,EAAK,EAAG,GAIoB,IAAzCD,EAAIQ,aAAa,EAAG,EAAG,EAAG,GAAG1mC,KAAK,IAUjD,QAAS2mC,GAAqBV,EAAKE,EAAIE,GACnC,GAIIH,GAAKlmC,EAAM4mC,EAAOC,EAJlBxnC,EAASsF,SAASC,cAAc,UAChCkiC,EAAK,EACLC,EAAKV,EACLW,EAAKX,CAUT,KAPAhnC,EAAOknC,MAAQ,EACflnC,EAAO2U,OAASqyB,EAChBH,EAAM7mC,EAAOmnC,WAAW,MACxBN,EAAIO,UAAUR,EAAK,EAAG,GACtBjmC,EAAOkmC,EAAIQ,aAAa,EAAG,EAAG,EAAGL,GAAIrmC,KAG9BgnC,EAAKF,GACRF,EAAQ5mC,EAAgB,GAAVgnC,EAAK,GAAS,GACd,IAAVJ,EACAG,EAAKC,EAELF,EAAKE,EAETA,EAAMD,EAAKD,GAAO,CAItB,OADAD,GAASG,EAAKX,EACI,IAAVQ,EAAe,EAAIA,EAM/B,QAASI,GAAqBhB,EAAK3/B,EAAM4M,EAASg0B,GAC9C,GAAI7nC,GAASsF,SAASC,cAAc,UAChCtF,EAAO4T,EAAQ5T,MAAQ,aACvBqH,EAAU,GAAI3L,IAAG4L,OASrB,OAPAugC,GAAoBlB,EAAK3/B,EAAMjH,EAAQ6T,EAASg0B,GAC3Cn1B,KAAK,WACFpL,EAAQG,QACJzH,EAAOI,UAAUH,EAAM4T,EAAQ3T,SAAW,OAI/CoH,EAGX,QAASygC,GAAoC/wB,GAGzC,IAAKrb,GAAGsO,MACJ,KAAM,IAAItO,IAAGwB,MAAM,kEAGvB,IAAI6Z,EAAKgxB,WAAahxB,EAAKixB,UANX,OAOZ,OACIC,UAAW5qC,KAAKC,MAAMD,KAAK6qC,KARnB,QAQqCnxB,EAAKgxB,WAAahxB,EAAKixB,aACpEG,SAAU9qC,KAAKC,MAAMD,KAAK6qC,KATlB,QASoCnxB,EAAKixB,UAAYjxB,EAAKgxB,eAQ9E,QAASF,GAAoBlB,EAAK3/B,EAAMjH,EAAQ6T,EAASg0B,GACrD,GAMIQ,GANAvB,EAAKF,EAAIG,aACTC,EAAKJ,EAAIK,cACTC,EAAQrzB,EAAQqzB,MAChBvyB,EAASd,EAAQc,OACjBkyB,EAAM7mC,EAAOmnC,WAAW,MACxB7/B,EAAU,GAAI3L,IAAG4L,OAKrB,OAFAs/B,GAAIyB,OAEAz0B,EAAQ00B,OACDC,GACHvhC,KAAMA,EACNjH,OAAQA,EACR4xB,MAAOgV,EACP6B,YAAazB,EACb0B,WAAY5B,EACZ6B,YAAa90B,EAAQ80B,YACrBJ,OAAQ10B,EAAQ00B,OAChBK,aAAcj0B,EACdk0B,YAAa3B,KAIhBvrC,GAAG8S,kBAAkByD,2BACtBm2B,EAAqBN,GACjBE,UAAWf,EACXc,WAAYrzB,IAGZ0zB,IACA1sC,GAAGmG,IAAInG,GAAG8H,OAAO,iFACbyjC,EAAOvyB,EAAQ0zB,EAAmBD,SAAUC,EAAmBH,WAC/D,QAEJhB,EAAQmB,EAAmBD,SAC3BzzB,EAAS0zB,EAAmBH,YAIpCY,EAAoB9oC,EAAQknC,EAAOvyB,EAAQd,EAAQ80B,aAI/ChtC,GAAGsO,MACF,WACO08B,EAAkBC,KAClBE,GAAM,EACNE,GAAM,EAGV,IAOI+B,GAAQC,EAAIC,EAPZC,EAAI,KACJC,EAAY7jC,SAASC,cAAc,UACnC6jC,EAAkBvB,EAAWP,EAAqBV,EAAKE,EAAIE,GAAM,EACjEqC,EAAK/rC,KAAK+nC,KAAK6D,EAAIhC,EAAQJ,GAC3BwC,EAAKhsC,KAAK+nC,KAAK6D,EAAIv0B,EAASqyB,EAAKoC,GACjC3B,EAAK,EACL8B,EAAK,CAMT,KAHAJ,EAAUjC,MAAQiC,EAAUx0B,OAASu0B,EACrCH,EAASI,EAAUhC,WAAW,MAEvBM,EAAKT,GAAI,CAGZ,IAFAgC,EAAK,EACLC,EAAK,EACED,EAAKlC,GACRiC,EAAOS,UAAU,EAAG,EAAGN,EAAGA,GAC1BH,EAAO3B,UAAUR,GAAMoC,GAAKvB,GAC5BZ,EAAIO,UAAU+B,EAAW,EAAG,EAAGD,EAAGA,EAAGD,EAAIM,EAAIF,EAAIC,GACjDN,GAAME,EACND,GAAMI,CAEV5B,IAAMyB,EACNK,GAAMD,EAEVzC,EAAI4C,UACJN,EAAYJ,EAAS,QAIzBlC,EAAIO,UAAUR,EAAK,EAAG,EAAGM,EAAOvyB,GAGpC3U,EAAO0pC,iBAAmB1pC,EAAO0pC,kBACjCpiC,EAAQG,UAEDH,GAGX,QAASkhC,GAAqCmB,GAC1C,GAAI1iC,GAAO0iC,EAAW1iC,KAClB2qB,EAAQ+X,EAAW/X,MACnB6W,EAAckB,EAAWlB,YACzBC,EAAaiB,EAAWjB,WACxBC,EAAcgB,EAAWhB,YACzBrhC,EAAU,GAAI3L,IAAG4L,QACjBghC,EAASoB,EAAWpB,OACpBqB,EAAetkC,SAASC,cAAc,UACtCskC,EAAsBD,EAAazC,WAAW,MAC9C2C,EAAeH,EAAW3pC,OAC1B4oC,EAAee,EAAWf,aAC1BC,EAAcc,EAAWd,WAyB7B,OAvBAC,GAAoBc,EAAclB,EAAYD,EAAaE,GAE3DmB,EAAan1B,OAASi0B,EACtBkB,EAAa5C,MAAQ2B,EAErBgB,EAAoBzC,UAAUxV,EAAO,EAAG,GAExC2W,GACIthC,KAAMA,EACN0N,OAAQi0B,EACRhX,MAAOA,EACPgY,aAAcA,EACdE,aAAcA,EACd5C,MAAO2B,IAENn2B,KACG,WACIo3B,EAAaJ,iBAAmBI,EAAaJ,kBAC7CpiC,EAAQG,WAEZH,EAAQK,SAGTL,EAOX,QAASwhC,GAAoB9oC,EAAQknC,EAAOvyB,EAAQg0B,GAChD,OAAQA,GACJ,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,GACD3oC,EAAOknC,MAAQvyB,EACf3U,EAAO2U,OAASuyB,CAChB,MACJ,SACIlnC,EAAOknC,MAAQA,EACflnC,EAAO2U,OAASA,EAExB,GAAIkyB,GAAM7mC,EAAOmnC,WAAW,KAC5B,QAAQwB,GACJ,IAAK,GAED9B,EAAIkD,UAAU7C,EAAO,GACrBL,EAAI3pB,OAAM,EAAI,EACd,MACJ,KAAK,GAED2pB,EAAIkD,UAAU7C,EAAOvyB,GACrBkyB,EAAImD,OAAO1sC,KAAK2sC,GAChB,MACJ,KAAK,GAEDpD,EAAIkD,UAAU,EAAGp1B,GACjBkyB,EAAI3pB,MAAM,GAAG,EACb,MACJ,KAAK,GAED2pB,EAAImD,OAAO,GAAM1sC,KAAK2sC,IACtBpD,EAAI3pB,MAAM,GAAG,EACb,MACJ,KAAK,GAED2pB,EAAImD,OAAO,GAAM1sC,KAAK2sC,IACtBpD,EAAIkD,UAAU,GAAIp1B,EAClB,MACJ,KAAK,GAEDkyB,EAAImD,OAAO,GAAM1sC,KAAK2sC,IACtBpD,EAAIkD,UAAU7C,GAAQvyB,GACtBkyB,EAAI3pB,OAAM,EAAI,EACd,MACJ,KAAK,GAED2pB,EAAImD,QAAO,GAAO1sC,KAAK2sC,IACvBpD,EAAIkD,WAAW7C,EAAO,IAUlC,QAASgD,GAAaC,EAAUC,GAC5B,GAAIr2B,GAAO/X,IAEP6E,QAAOO,MAAQ+oC,YAAoB/oC,OAClC,WACG,GAAIwlC,GAAM,GAAIyD,OACVC,EAAMzpC,OAAOypC,KAAOzpC,OAAOypC,IAAIC,gBAAkB1pC,OAAOypC,IACpDzpC,OAAO2pC,WAAa3pC,OAAO2pC,UAAUD,gBAAkB1pC,OAAO2pC,UAAY,IAClF,KAAKF,EAAO,KAAMntC,OAAM,uDACxBypC,GAAI6D,IAAMH,EAAIC,gBAAgBJ,GAC9Bp2B,EAAK9M,KAAOkjC,EACZA,EAAWvD,KAGduD,EAASpD,cAAiBoD,EAASlD,gBACpCkD,EAAS3iC,OAAS,WACd,GAAIkjC,GAAY32B,EAAK42B,kBACjBD,KACA32B,EAAK42B,mBAAqB,KAG1BvlB,WAAW,WACP,IAAK,GAAI/Y,GAAI,EAAG3D,EAAMgiC,EAAUhpC,OAAQ2K,EAAI3D,EAAK2D,IAC7Cq+B,EAAUr+B,MAEf,KAGX89B,EAASziC,QAAU0iC,EACnBpuC,KAAK2uC,uBAET3uC,KAAKmuC,SAAWA,EAMpBD,EAAa7nC,UAAUuoC,OAAS,SAAS3iC,EAAQ4L,GAC7CA,EAAUA,KAEV,IASIg3B,GATA92B,EAAO/X,KACP8uC,EAAW9uC,KAAKmuC,SAASpD,aACzBgE,EAAY/uC,KAAKmuC,SAASlD,cAC1BC,EAAQrzB,EAAQqzB,MAChBvyB,EAASd,EAAQc,OACjBke,EAAWhf,EAAQgf,SACnBD,EAAY/e,EAAQ+e,UACpBiV,GAAY7rC,KAAKiL,MAA2B,eAAnBjL,KAAKiL,KAAK/K,KACnC+I,EAAUgD,EAAOhD,QAAQF,aAG7B,IAAI/I,KAAK2uC,mBAEL,WADA3uC,MAAK2uC,mBAAmB9rC,KAAK,WAAakV,EAAK62B,OAAO3iC,EAAQ4L,IAI9DqzB,KAAUvyB,EACVA,EAAUo2B,EAAY7D,EAAQ4D,GAAa,EACpCn2B,IAAWuyB,EAClBA,EAAS4D,EAAWn2B,EAASo2B,GAAc,GAE3C7D,EAAQ4D,EACRn2B,EAASo2B,GAETlY,GAAYqU,EAAQrU,IACpBqU,EAAQrU,EACRle,EAAUo2B,EAAY7D,EAAQ4D,GAAa,GAE3ClY,GAAaje,EAASie,IACtBje,EAASie,EACTsU,EAAS4D,EAAWn2B,EAASo2B,GAAc,GAG/CF,GAAQ3D,MAAOA,EAAOvyB,OAAQA,GAC9BhZ,GAAG+C,KAAKmV,EAAS,SAASm3B,EAAYC,GAClCJ,EAAIG,GAAcC,IAGN,QAAZhmC,EACC,WACG,GAAIimC,GAAejjC,EAAOwiC,GAC1B7C,GAAqB7zB,EAAKo2B,SAAUp2B,EAAK9M,KAAM4jC,EAAKhD,GAC/Cn1B,KAAK,SAASrS,GACX4H,EAAOwiC,IAAMpqC,EACb6qC,IAAiBjjC,EAAOwiC,KAAOxiC,EAAOT,cAG/B,WAAZvC,GACP6iC,EAAoB9rC,KAAKmuC,SAAUnuC,KAAKiL,KAAMgB,EAAQ4iC,EAAKhD,GAElC,kBAAlB7rC,MAAKmvC,UACZnvC,KAAKmvC,SAASljC,IAItBtM,GAAGuuC,aAAeA,KCtYtBvuC,GAAG25B,eAAiB,SAASxzB,GACzB,YAEA,SAASspC,GAAMC,GACX,MAAoC,QAA7BA,EAAGpmC,QAAQF,cAGtB,QAASumC,GAASD,GACd,MAAoC,WAA7BA,EAAGpmC,QAAQF,cAGtB,QAASwmC,KACL,MAAmCzrC,WAA5B,GAAIuqC,QAAQmB,YAGvB,QAASC,KACL,GAAIzrC,GAASsF,SAASC,cAAc,SAEpC,OAAOvF,GAAOmnC,YAAcnnC,EAAOmnC,WAAW,MAMlD,QAASuE,GAAwBC,GAE7B,GAAIC,GAAeD,EAAatqC,MAAM,KAClC3D,EAAOkuC,EAAaA,EAAalqC,OAAS,GAAGL,MAAM,KAAK,GACxDgqB,EAAY1vB,GAAG0R,aAAa3P,EAIhC,QAFA2tB,EAAYA,GAAaA,EAAUtmB,eAG/B,IAAK,OACL,IAAK,MACD,MAAO,YACX,KAAK,MACD,MAAO,WACX,KAAK,MACD,MAAO,WACX,KAAK,MACD,MAAO,WACX,KAAK,OACL,IAAK,MACD,MAAO,cASnB,QAAS8mC,GAAc3U,GACnB,GACI4U,GAAgBC,EAAgBC,EADhCC,EAAe3mC,SAASC,cAAc,IAS1C,OANA0mC,GAAaC,KAAOhV,EAEpB4U,EAAiBG,EAAaE,SAC9BH,EAAaC,EAAaG,KAC1BL,EAAiBE,EAAaI,SAE1BP,EAAe/mC,gBAAkBlE,OAAOyrC,SAASH,SAASpnC,gBAI1DgnC,EAAehnC,gBAAkBlE,OAAOyrC,SAASD,SAAStnC,eAK1DinC,IAAenrC,OAAOyrC,SAASF,OAASzwC,GAAGqN,MAOnD,QAASujC,GAAyB3F,EAAKt/B,GACnCs/B,EAAIp/B,OAAS,WACTo/B,EAAIp/B,OAAS,KACbo/B,EAAIl/B,QAAU,KACdJ,EAAQG,QAAQm/B,IAGpBA,EAAIl/B,QAAU,WACVk/B,EAAIp/B,OAAS,KACbo/B,EAAIl/B,QAAU,KACd5F,EAAI,6BAA8B,SAClCwF,EAAQK,QAAQi/B,EAAK,+BAI7B,QAAS4F,GAAgCxsC,EAAQsH,GAO7CtH,EAAO0pC,gBAAkB,WACrBpiC,EAAQG,QAAQzH,IAQxB,QAASysC,GAAkC/vB,EAAapV,GACpD,GAAIolC,GAAatB,EAAM1uB,IAAgB4uB,EAAS5uB,EAahD,OAXI0uB,GAAM1uB,GACN6vB,EAAyB7vB,EAAapV,GAEjCgkC,EAAS5uB,GACd8vB,EAAgC9vB,EAAapV,IAG7CA,EAAQK,QAAQ+U,GAChB5a,EAAInG,GAAG8H,OAAO,iDAAkDiZ,EAAYzX,SAAU,UAGnFynC,EAKX,QAASC,GAAKnmC,EAAY4W,EAAWvJ,GACjC,GAAI+4B,GAAc,GAAIjxC,IAAG4L,QACrB2c,EAAa,GAAIvoB,IAAGkxC,SAASrmC,EAAY1E,GACzC6a,EAAU9I,EAAQ8I,QAElBqY,EAA2B,MAAlBnhB,EAAQmhB,QAAwBnhB,EAAQmhB,OACjD8X,EAAsB,WAClB1vB,EAAU1V,QAAU,KACpB0V,EAAU5V,OAAS,KACnB1F,EAAI,mDAAoD,SACxD8qC,EAAYjlC,QAAQyV,EAAW,gCAiDvC,OA9CA8G,GAAW6oB,gBAAgBr6B,KACvB,SAASzS,GAGL,GAAI+sC,IACI7/B,MAAO,WACH,OAAO,GAAIxR,IAAG4L,SAAUE,YAGhCwlC,EAAOjY,EAAS,GAAIr5B,IAAGuxC,KAAK1mC,EAAY1E,GAAOkrC,EAC/CG,EAAQ,GAAIxxC,IAAGuuC,aAAa1jC,EAAYsmC,EAExCL,GAAkCrvB,EAAWwvB,IAC7CK,EAAK9/B,QAAQuF,KACT,SAASu6B,GACL,GAAItE,GAAcsE,GAAQA,EAAKG,WAE/BD,GAAMvC,OAAOxtB,GACTyV,SAAUlW,EACViW,UAAWjW,EACXgsB,YAAaA,EACb1oC,KAAMA,EACNsoC,OAAQ10B,EAAQgJ,wBAIxB,SAASwwB,GACLvrC,EAAInG,GAAG8H,OAAO,iEAAkE4pC,IAEhFF,EAAMvC,OAAOxtB,GACTyV,SAAUlW,EACViW,UAAWjW,EACX1c,KAAMA,EACNsoC,OAAQ10B,EAAQgJ,0BAOpC,WACI/a,EAAI,mBACJ8qC,EAAYjlC,QAAQyV,EAAW,qBAIhCwvB,EAGX,QAASU,GAAyBpW,EAAKqW,EAAaZ,EAAMhwB,EAASE,GAC/D,GAAI2wB,GAAU,GAAInD,OACdoD,EAAgB,GAAI9xC,IAAG4L,OAE3BklC,GAAkCe,EAASC,GAEvC5B,EAAc3U,KACdsW,EAAQhC,YAAc,aAG1BgC,EAAQ/C,IAAMvT,EAEduW,EAAc/6B,KACV,WACI+5B,EAAkCc,EAAaZ,GAEnC,GAAIhxC,IAAGuuC,aAAasD,GAC1B5C,OAAO2C,GACT1a,SAAUlW,EACViW,UAAWjW,EACX1c,KAAMyrC,EAAwBxU,GAC9BqR,OAAQ1rB,KAIhB8vB,EAAKhlC,SAIb,QAAS+lC,GAA+BxW,EAAK0P,EAAK+F,EAAMhwB,GACpD8vB,EAAkC7F,EAAK+F,GAKvChxC,GAAGirC,GAAK3pC,KACJ41B,SAAUlW,EAAU,KACpBiW,UAAWjW,EAAU,OAGzBiqB,EAAI6D,IAAMvT,EAWd,QAASyW,GAAYzW,EAAK9Z,EAAWvJ,GACjC,GAAI84B,GAAO,GAAIhxC,IAAG4L,QACd2V,EAAQrJ,EAAQqJ,MAChBP,EAAUO,EAAQrJ,EAAQ8I,QAAU,IA8BxC,OA3BIO,IAASkuB,EAAMhuB,GAGXquB,IAIII,EAAc3U,KAASqU,IACvBmC,EAA+BxW,EAAK9Z,EAAWuvB,EAAMhwB,GAGrD2wB,EAAyBpW,EAAK9Z,EAAWuvB,EAAMhwB,GAInD+wB,EAA+BxW,EAAK9Z,EAAWuvB,EAAMhwB,GAIpD2uB,EAASluB,GACdkwB,EAAyBpW,EAAK9Z,EAAWuvB,EAAMhwB,GAG1C8vB,EAAkCrvB,EAAWuvB,KAClDvvB,EAAUqtB,IAAMvT,GAGbyV,EAGXhxC,GAAG6B,OAAOxB,MAWNqhB,SAAU,SAASuwB,EAAexwB,EAAWvJ,GACzC,MAAIlY,IAAGwH,SAASyqC,IACZ9rC,EAAI,4DACG6rC,EAAYC,EAAexwB,EAAWvJ,SAG7C/R,EAAI,iDACG6qC,EAAKiB,EAAexwB,EAAWvJ,WAMlD7X,KAAK6xC,YACL7xC,KAAK6xC,SAASzC,MAAQA,EACtBpvC,KAAK6xC,SAASvC,SAAWA,EACzBtvC,KAAK6xC,SAAShC,cAAgBA,EAC9B7vC,KAAK6xC,SAASnC,wBAA0BA,GChT5C/vC,GAAGuxC,KAAO,SAAS1mC,EAAY1E,GAC3B,YAYA,SAASgsC,GAAkBC,GAIvB,IAHA,GAAIzvC,GAAS,EACT0vC,EAAM,EAEHD,EAAIrsC,OAAS,GAChBpD,GAAUsgC,SAASmP,EAAI9pC,UAAU,EAAG,GAAI,IAAM3G,KAAK0wC,IAAI,EAAGA,GAC1DD,EAAMA,EAAI9pC,UAAU,EAAG8pC,EAAIrsC,QAC3BssC,GAAO,CAGX,OAAO1vC,GAKX,QAAS2vC,GAAWC,EAAQ5mC,GACxB,GAAI6mC,GAAYD,EACZE,EAAa9mC,CAwBjB,OAvBkBxH,UAAdquC,IACAA,EAAY,EACZC,EAAa,GAAIzyC,IAAG4L,SAGxB5L,GAAGqL,cAAcR,EAAY2nC,EAAW,GAAGz7B,KAAK,SAASq7B,GACrD,GACIM,GADAr/B,EAAQ,cAAcpP,KAAKmuC,EAG3B/+B,GACiB,MAAbA,EAAM,IACNq/B,EAAgBzP,SAASmP,EAAIlqC,MAAM,EAAG,GAAI,IAC1CoqC,EAAWE,EAAYE,EAAgB,EAAGD,IAG1CA,EAAW3mC,QAAQ0mC,GAIvBC,EAAWzmC,QAAQ,iCAIpBymC,EAIX,QAASE,KACL,GAAIhnC,GAAU,GAAI3L,IAAG4L,OAgBrB,OAdA5L,IAAGqL,cAAcR,EAAY,EAAG,GAAGkM,KAAK,SAASq7B,GACjB,IAAxBA,EAAIzsC,QAAQ,QACZgG,EAAQK,QAAQ,qBAGhBsmC,IAAav7B,KAAK,SAASw7B,GACvB5mC,EAAQG,QAAQymC,IAEpB,SAASpoC,GACLwB,EAAQK,QAAQ7B,OAKrBwB,EAIX,QAASinC,GAAeC,GACpB,GAAIlnC,GAAU,GAAI3L,IAAG4L,OAMrB,OAJA5L,IAAGqL,cAAcR,EAAYgoC,EAAY,GAAI,GAAG97B,KAAK,SAASq7B,GAC1DzmC,EAAQG,QAAgB,SAARsmC,KAGbzmC,EAIX,QAASmnC,GAAiBD,EAAWE,GACjC,GAAIpnC,GAAU,GAAI3L,IAAG4L,OAWrB,OATA5L,IAAGqL,cAAcR,EAAYgoC,EAAY,GAAI,GAAG97B,KAAK,SAASq7B,GAC1D,GAAIW,EACA,MAAOpnC,GAAQG,QAAQqmC,EAAkBC,GAGzCzmC,GAAQG,QAAQm3B,SAASmP,EAAK,OAI/BzmC,EAIX,QAASqnC,GAAOH,EAAWI,GACvB,GAAIV,GAASM,EAAY,GACrB3nC,EAAqB,GAAb+nC,CAEZ,OAAOjzC,IAAGqL,cAAcR,EAAY0nC,EAAQrnC,GAIhD,QAASgoC,GAAcC,GAInB,IAHA,GAAIh5B,MACAo4B,EAAS,EAENA,EAAS,IAAMY,EAAOptC,QACzBoU,EAAQjX,KAAKiwC,EAAOjrC,MAAMqqC,EAAQA,EAAS,KAC3CA,GAAU,EAGd,OAAOp4B,GAIX,QAASi5B,GAAaL,EAAcE,GAChC,GACII,GAAarzC,GAAG6B,UAAWyxC,GAC3BC,IAsBJ,OApBAvzC,IAAG+C,KAAKkwC,EAAY,SAASjwC,EAAK+2B,GAC9B,GAGIyZ,GAAWlqC,EAASmqC,EAHpBC,EAAQ3Z,EAAM7xB,MAAM,EAAG,GACvBkS,EAAK24B,EAAeZ,EAAkBuB,GAASzQ,SAASyQ,EAAO,IAC/DC,EAAgBN,EAAW1tC,QAAQyU,EAYvC,IATIu5B,GAAiB,IACjBrqC,EAAUsqC,EAASx5B,GAAIrY,KACvB0xC,EAAeG,EAASx5B,GAAIlP,MAC5BsoC,EAAYzZ,EAAM7xB,MAbL,GAAA,GAa4D,EAAfurC,GAC1DF,EAAKjqC,GAAWypC,EAAeZ,EAAkBqB,GAAavQ,SAASuQ,EAAW,IAElFH,EAAWl3B,OAAOw3B,EAAe,IAGX,IAAtBN,EAAWttC,OACX,OAAO,IAIRwtC,EApJX,GAAID,IAAW,KACXM,GACIC,KACI9xC,KAAM,cACNmJ,MAAO,GAmJnBlL,IAAG6B,OAAOxB,MAONmR,MAAO,WACH,GAAIsiC,GAAS,GAAI9zC,IAAG4L,QAChBmoC,EAAiB,SAAS3tC,GACtBD,EAAInG,GAAG8H,OAAO,kCAAmC1B,IACjD0tC,EAAO9nC,QAAQ5F,GA0BvB,OAvBAusC,KAAgB57B,KAAK,SAASi9B,GAC1B7tC,EAAInG,GAAG8H,OAAO,mDAAwE3D,SAApB0G,EAAW9I,KAAqB,OAAS8I,EAAW9I,OAEtH6wC,EAAeoB,GAAYj9B,KAAK,SAASg8B,GAErC5sC,EAAInG,GAAG8H,OAAO,+BAAgCirC,EAAe,SAAW,QAExED,EAAiBkB,EAAYjB,GAAch8B,KAAK,SAASk9B,GAErD9tC,EAAInG,GAAG8H,OAAO,kCAAmCmsC,IAEjDjB,EAAOgB,EAAYC,GAAel9B,KAAK,SAASo8B,GAC5C,GAAIF,GAAaC,EAAcC,GAC3Be,EAAYd,EAAaL,EAAcE,EAE3C9sC,GAAI,sCAEJ2tC,EAAOhoC,QAAQooC,IAChBH,IACJA,IACJA,IACJA,GAEID,KAKfzzC,KAAK6xC,YACL7xC,KAAK6xC,SAASC,kBAAoBA,GC7MtCnyC,GAAGkxC,SAAW,SAASrmC,EAAY1E,GAC/B,YAEA,SAASguC,GAAeC,EAAYC,GAChC,GAAIC,IAAe,EACfC,KAAuBvkC,OAAOokC,EASlC,OAPAp0C,IAAG+C,KAAKwxC,EAAmB,SAASvxC,EAAKwxC,GACrC,GAAwD,IAApDH,EAAkB1uC,QAAQ6uC,GAE1B,MADAF,IAAe,GACR,IAIRA,EAGXt0C,GAAG6B,OAAOxB,MASN+wC,cAAe,WACX,GAAIh5B,GAAO/X,KACPkoB,EAAa,GAAIvoB,IAAG4L,QACpB6oC,GAAc,EACd1yC,EAA2BoC,SAApB0G,EAAW9I,KAAqB,OAAS8I,EAAW9I,IAsC/D,OApCAoE,GAAInG,GAAG8H,OAAO,gEAAiE/F,IAE/EoE,EAAI,oDAEA9F,KAAKq0C,qBACLvuC,EAAI,sDAEJnG,GAAGqL,cAAcR,EAAY,EAAG,GAAGkM,KAAK,SAASq7B,GAC7CpyC,GAAG+C,KAAKqV,EAAKu8B,uBAAwB,SAASrwC,EAAM4G,GAChD,GAAIipC,EAAejpC,EAAOknC,GAQtB,OALa,eAAT9tC,GAAyBtE,GAAG8S,kBAAkBwD,gBAC9Cm+B,GAAc,EACdlsB,EAAWzc,QAAQxH,KAGhB,IAIf6B,EAAInG,GAAG8H,OAAO,iDAAkD/F,EAAM0yC,EAAc,GAAK,QAEpFA,GACDlsB,EAAWvc,WAGnB,WACI7F,EAAI,+BAAiCpE,EAAO,gDAC5CwmB,EAAWvc,aAIfuc,EAAWvc,UAGRuc,GAWXmsB,kBAAmB,WACf,GAAIE,GAAW/pC,EAAWtK,KAEtBs0C,EAAoB70C,GAAG2F,QAAQc,OAAOk6B,KAAKtgC,KAAKs0C,wBAAyBC,IAAa,EACtFH,GAAc,EACd1yC,EAA2BoC,SAApB0G,EAAW9I,KAAqB,OAAS8I,EAAW9I,IAa/D,OAXI8yC,KAEIJ,EADa,eAAbG,GACc50C,GAAG8S,kBAAkBwD,eAO1Cm+B,GAAetuC,EAAIpE,EAAO,gEAEpB0yC,MAKnBz0C,GAAGkxC,SAASxqC,UAAUiuC,wBAClBG,aAAc,SACdC,YAAa,SACbC,YAAa,SACbC,YAAa,OACbC,cAAe,WAAY,aCpG/Bl1C,GAAG+1B,gBAAkB,SAASzqB,EAAMnF,GAChC,YAMA,SAASgvC,GAAiBC,GACtB,GAAIC,IAAa,CASjB,OAPAr1C,IAAG+C,KAAKqyC,EAAQ,SAASE,EAAOvuC,GAC5B,GAAIA,EAAQ,EAER,MADAsuC,IAAa,GACN,IAIRA,EAQX,QAASE,KACL,GAAIC,GAAoB,GAAIx1C,IAAG4L,OA6B/B,OA3BA,IAAI5L,IAAGkxC,SAAS5lC,EAAMnF,GAAKirC,gBAAgBr6B,KAAK,WAC5C,GAAIkf,GAAQ,GAAIyY,OACZnT,EAAMr2B,OAAOypC,KAAOzpC,OAAOypC,IAAIC,gBAAkB1pC,OAAOypC,IAClDzpC,OAAO2pC,WAAa3pC,OAAO2pC,UAAUD,gBAAkB1pC,OAAO2pC,UAC9D,IAENtT,IACAtF,EAAMlqB,QAAU,WACZ5F,EAAI,4DAA6D,SACjEqvC,EAAkBxpC,WAGtBiqB,EAAMpqB,OAAS,WACX2pC,EAAkB1pC,SACdy/B,MAAOlrC,KAAKkrC,MACZvyB,OAAQ3Y,KAAK2Y,UAIrBid,EAAM6Y,IAAMvT,EAAIqT,gBAAgBtjC,KAGhCnF,EAAI,+DAAgE,SACpEqvC,EAAkBxpC,YAEvBwpC,EAAkBxpC,SAEdwpC,EASX,QAASC,GAAgBL,EAAQM,GAC7B,GAAIC,EA0BJ,OAxBA31C,IAAG+C,KAAKqyC,EAAQ,SAASQ,EAAWC,GAChC,GAAIA,EAAa,EAAG,CAChB,GAAIC,GAAe,0BAA0B7xC,KAAK2xC,GAC9CG,EAAoBD,EAAa,GAAGnmC,OAAO,GAAGvG,cAAgB0sC,EAAa,GAAG5tC,MAAM,GACpF8tC,EAAcN,EAAWK,EAG7B,QAAQD,EAAa,IACjB,IAAK,MACD,GAAIE,EAAcH,EAEd,MADAF,GAAeC,GACR,CAEX,MACJ,KAAK,MACD,GAAII,EAAcH,EAEd,MADAF,GAAeC,GACR,MAOpBD,EAWXt1C,KAAK21B,SAAW,SAASof,GACrB,GAAIa,GAAmB,GAAIj2C,IAAG4L,OAoB9B,OAlBAzF,GAAI,iCAEAgvC,EAAiBC,GACjBG,IAAiBx+B,KAAK,SAAS2+B,GAC3B,GAAIC,GAAeF,EAAgBL,EAAQM,EAEvCC,GACAM,EAAiBjqC,QAAQ2pC,GAGzBM,EAAiBnqC,WAEtBmqC,EAAiBnqC,SAGpBmqC,EAAiBnqC,UAGdmqC,IC7Hfj2C,GAAGg1B,QAAU,SAAS3Z,GAClB,YAaA,SAAS66B,GAAoBlkB,GACzB,GAAIhyB,GAAG8G,QAAQkrB,GACX,OAAO,CAGX9Z,GAAQ/R,IAAI,oCAAqC,SAGrD,QAASgwC,GAAgBC,EAAWtqC,EAAS+b,EAAUlc,GACnD,GAAI0qC,IAAmB,CAEvBvqC,GAAUA,GAAWoqC,EAAoBE,GAErCtqC,GACA9L,GAAG+C,KAAKqzC,EAAW,SAASpzC,EAAK47B,GAE7B,GAAqB,MAAjBA,EAASrkB,KACT87B,GAAmB,EACnBn+B,EAAQ/R,IAAInG,GAAG8H,OAAO,oEAAqE9E,GAAM,aAEhG,IAAqB,MAAjB47B,EAAS78B,KACds0C,GAAmB,EACnBn+B,EAAQ/R,IAAInG,GAAG8H,OAAO,oEAAqE9E,GAAM,aAGjG,KAEI,MADAkV,GAAQgd,cAAc0J,IACf,EAEX,MAAO0X,GACHD,GAAmB,EACnBn+B,EAAQ/R,IAAImwC,EAAIlwC,QAAS,SAIjC,OAAO,IAIfuF,EAAQG,IAAYuqC,EAAmB,UAAY,WAAWD,EAAWvuB,GAlD7E,GAAI3P,IACA8F,SAAU,KACVD,UACAuJ,iBACAG,QACAyN,cAAe,SAAS/O,KACxBhgB,IAAK,SAASC,EAASC,KAG3BrG,IAAG6B,OAAOqW,EAASmD,GAAM,GA8CzBhb,KAAK80B,QAAU,WAEX,GAAIohB,GAAgB,GAAIv2C,IAAG4L,QACvB4qC,EAA0B,SAASxkB,EAAUlmB,EAAS+b,GAClDsuB,EAAgBnkB,EAAUlmB,EAAS+b,EAAU0uB,IAEjDE,EAAmBz2C,GAAG6B,UAAWqW,EAOrC,OANgB,IAAIlY,IAAG02C,qBACf12C,GAAG6B,OAAO40C,GAAmBrrB,WAAYorB,KAGvCG,cAEHJ,ICrEfv2C,GAAG02C,qBAAuB,SAASr7B,GAC/B,YAiBA,SAAS+P,GAAWhR,EAAIyN,EAAUC,GAC9B,GAAIkK,GAAW,IAGf,IAA6B,MAAzBnK,EAAS+uB,aACT,IACI5kB,EAAWhyB,GAAGqR,UAAUwW,EAAS+uB,cAErC,MAAON,GACHp+B,EAAQ/R,IAAI,qCAAuCmwC,EAAIlwC,QAAS,SAChE0hB,GAAU,EAIlB5P,EAAQkT,WAAW4G,GAAWlK,EAASD,GA7B3C,GAAIkjB,GACA7yB,GACI8F,SAAU,KACVsJ,iBACAvJ,UACA0J,MACI6I,UAAU,EACV2I,iBAAiB,GAErB7N,WAAY,SAAS4G,EAAUlmB,EAAS+b,KACxC1hB,IAAK,SAAS4B,EAAK1B,KAG3BrG,IAAG6B,OAAOqW,EAASmD,GAmBnB0vB,EAAY/qC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGg6B,eAC/B6C,aAAc,mBACdM,cAAe,OACfnW,OAAQ,MACRQ,eACItF,IAAK,WACD,MAAOhK,GAAQ8F,WAGvBsJ,cAAepP,EAAQoP,cACvBnhB,IAAK+R,EAAQ/R,IACbilB,WAAYA,EACZ3D,KAAMvP,EAAQuP,QAGlBznB,GAAG6B,OAAOxB,MACNs2C,YAAa,WACT,GAAI54B,GAAS/d,GAAG6B,UAAWqW,EAAQ6F,OAEnC7F,GAAQ/R,IAAI,0BAEZ4kC,EAAUtN,cAAc,kBACnBK,WAAW/f,GACXqgB,kBACAjC,WCzDjBn8B,GAAGwkB,OAAS,SAASnJ,EAAMlV,GACvB,YAEA,IACI+a,GAAuB7F,EAAK8d,cAC5B0d,EAAkBx7B,EAAK+d,aACvBC,EAAShe,EAAKge,OACdC,EAAcje,EAAKie,YACnBC,EAAiBle,EAAKke,eAAiB,IACvCud,EAAoBz7B,EAAKme,YACzBC,EAAcpe,EAAKoe,YACnBC,EAAQr5B,KAAK02C,gBAAgB17B,EAAKqe,MAGtC15B,IAAG6B,OAAOxB,MAGNggB,QAASrgB,GAAG8S,kBAAkBuD,SAAWqjB,EAAM3zB,OAAS,EAExDixC,eAAgB,SAASC,EAAkBC,EAAkBC,GACzD,GAAI/+B,GAAO/X,KACP+2C,KACAC,EAAeF,EAAuB7rC,KAAO6rC,EAAuB7rC,KAAO6rC,CAkD/E,OAjDiB,IAAIn3C,IAAGkxC,SAASmG,EAAclxC,GAGhCuuC,qBAEX10C,GAAG+C,KAAK22B,EAAO,SAAS12B,EAAKs0C,GACzB,GAAIC,GAAan/B,EAAKo/B,sBAClBle,YAAaA,EACbme,cAAeH,EAAW/2C,KAC1Bm3C,QAASL,EAAa92C,MAG1B62C,GAAQl0C,MACJqX,KAAMva,GAAGiN,cACTlL,KAAMqW,EAAKu/B,SAAST,GAChBn1C,KAAMu1C,EAAWv1C,KACjBxB,KAAMg3C,EACNG,QAASL,EAAa92C,OAE1B+K,KAAM,GAAItL,IAAGyX,UAAU4/B,EACvBr3C,GAAG4P,KAAKwI,EAAKw/B,qBAAsBx/B,GAC/B8I,qBAAsBA,EACtBF,QAASs2B,EAAWt2B,QACpBqY,OAAQA,EACR94B,KAAMg3C,EACNhzC,QAASg1B,EACTse,WAAYf,EACZrd,YAAaA,EACbtzB,IAAKA,SAKjBixC,EAAQl0C,MACJqX,KAAM08B,EACNl1C,KAAMm1C,EACN17B,KAAM67B,EAAa77B,KACnBlQ,KAAMurC,EAAkBQ,EAAe,QAI3CD,EAAQl0C,MACJqX,KAAM08B,EACNl1C,KAAMm1C,EACN17B,KAAM67B,EAAa77B,KACnBlQ,KAAM+rC,IAIPD,GAGXvd,cAAe,SAASra,EAAMzd,EAAMwY,EAAMiB,EAAMgU,EAAU/T,EAAS0L,EAAe2wB,GAC9E,GAAI1/B,GAAO/X,KAEP03C,GADWv4B,EAAKiH,YAAejH,EAAKlU,MAAQkU,EAAKlU,KAAKmb,eAEtDuxB,EAAa,KACb1oB,EAAmBwoB,EAAIxoB,iBACvBnP,EAAa23B,EAAI33B,WACjBoH,EAAcuwB,EAAIvwB,YAClB7L,EAAe1b,GAAGiN,aAEtBjN,IAAG+C,KAAKqV,EAAK4+B,eAAez8B,EAAMxY,EAAMyd,GAAO,SAASxc,EAAKi1C,GACzD,GACI79B,GADA89B,EAAWD,EAAOz8B,IAGlBy8B,GAAO3sC,eAAgBtL,IAAGyX,YAC1BygC,GAAW,GAGf99B,EAAK+F,EAAW/E,SACZb,KAAM09B,EAAO19B,KACbxY,KAAMk2C,EAAOl2C,KACbyZ,KAAM08B,EACNz8B,QAASA,EACTC,aAAcA,IAGdu8B,EAAO3sC,eAAgBtL,IAAGyX,UAC1BsgC,EAAU70C,KAAKkX,GAGf49B,EAAa59B,EAGb69B,EAAO3sC,MACPgkB,EAAiBlV,EAAI69B,EAAO3sC,MAC5BkkB,EAAStsB,MAAMkX,GAAIA,EAAIoF,KAAMy4B,EAAO3sC,QAGpC6U,EAAWpE,UAAU3B,EAAIpa,GAAG0a,OAAOuC,YAOxB,OAAf+6B,IACAh4C,GAAG+C,KAAKg1C,EAAW,SAAS/0C,EAAKm1C,GAC7B,GAAIp6B,IACAq6B,aAAcj4B,EAAWtE,UAAUzB,GAAI49B,IAAaz9B,KACpD89B,aAAcl4B,EAAWtE,UAAUzB,GAAI49B,IAAax8B,KAKxDuC,GAAOoJ,GAAiBhH,EAAWtE,UAAUzB,GAAI+9B,IAAW59B,KAE5D4F,EAAWxD,YAAYw7B,EAAUH,GACjCzwB,EAAY8B,YAAY8uB,EAAUp6B,KAKlCg6B,EAAUhyC,QACT,WACG,GAAIuyC,KACJA,GAAMnxB,GAAiBhH,EAAWtE,UAAUzB,GAAI49B,IAAaz9B,KAC7DgN,EAAY8B,YAAY2uB,EAAYM,WAQ5Dt4C,GAAG6B,OAAO7B,GAAGwkB,OAAO9d,WAChB4d,WAAY,SAASlK,EAAImK,EAAOuzB,GAC5B,YAEA,KAAK93C,GAAG8S,kBAAkBuD,QACtB,KAAM,IAAIrW,IAAGwB,MAAM,4CAGvB,IAAI+2C,GAAgB,GAAIv4C,IAAG4L,QACvBzF,EAAM2xC,EAAI3xC,IACVqZ,EAAOs4B,EAAIt2B,QAAQpH,GACnB+F,EAAa23B,EAAI33B,WAAWtE,UAAUzB,GAAIA,IAC1CrY,EAAOoe,GAAcA,EAAWpe,KAChCwY,EAAO4F,GAAcA,EAAW5F,KAChCi+B,GACIrf,cAAe5U,EAAM4U,cACrBC,cAAc,EACdC,OAAQ9U,EAAM8U,OACdC,YAAa/U,EAAMhkB,MAAQ,KAC3Bg5B,eAAgBhV,EAAMhgB,QACtBuyC,kBAAmB,kBACnBpd,QAAS33B,KAAM,GAAIif,QAASuD,EAAMvD,WAEtCy3B,EAAS,GAAIz4C,IAAGwkB,OAAOg0B,EAAgBryC,EAuB3C,OArBKnG,IAAGwkB,QAAWxkB,GAAG8S,kBAAkBiD,eAAkByJ,EAOrDxf,GAAG4P,KAAK,WAEL,GAAIqoC,GAASQ,EAAOzB,eAAez8B,EAAMxY,EAAMyd,GAAM,EAEjDy4B,IAAUA,EAAO3sC,eAAgBtL,IAAGyX,UACpCwgC,EAAO3sC,KAAKsM,SAASb,KAAKwhC,EAAczsC,QAASysC,EAAcvsC,UAG/D7F,EAAIiU,EAAK,4BAA6B,SACtCm+B,EAAcvsC,YAEnB3L,SAjBHk4C,EAAcvsC,UAEd7F,EAAI,iDAAmDiU,EAAK,uFAC6B,UAiBtFm+B,GAKXf,qBAAsB,SAASn8B,GAC3B,YAEA,IAAIo8B,GAAgBp8B,EAAKo8B,cACrBne,EAAcje,EAAKie,YACnBof,EAAgBr9B,EAAKq8B,OAIzB,OAAKpe,IAAgBme,EAQhBA,GAKDz3C,GAAG2F,QAAQc,OAAOk6B,KAAK3gC,GAAGkxC,SAASxqC,UAAUiuC,wBAAyB8C,IAAkB,EAClE,eAAlBA,EACOz3C,GAAG8S,kBAAkBwD,aAAemhC,EAAgBne,EAGxDme,EATAne,EARe,eAAlBof,EACO,YAEJA,GAqBff,SAAU,SAASp8B,EAAco9B,GAC7B,YAEA,IAAIC,GAAar9B,EAAa1J,YAAY,KACtCgnC,EAAcF,EAAwBp4C,MAAQ,YAC9Cm4C,EAAgBC,EAAwBjB,QACxCoB,EAAa,GACbC,EAAY/4C,GAAG0R,aAAa6J,GAC5By9B,EAAgB,EAmBpB,OAjBIL,GAAwB52C,MAAQ42C,EAAwB52C,KAAK8F,OAAO9B,SACpEizC,EAAgB,KAAOL,EAAwB52C,KAAO,KAGtD62C,GAAc,GACdE,EAAav9B,EAAazJ,OAAO,EAAG8mC,GAEhCF,IAAkBG,IAClBE,EAAYF,EAAYnzC,MAAM,KAAK,IAGvCozC,GAAcE,EAAgB,IAAMD,GAGpCD,EAAav9B,EAAey9B,EAGzBF,GAIX/B,gBAAiB,SAASrd,GACtB,YAIA,OAFAA,GAAQ15B,GAAG6B,UAAW63B,GAEfA,EAAMuf,KAAK,SAASC,EAAGC,GAC1B,MAAID,GAAEl4B,QAAUm4B,EAAEn4B,QACP,EAEPk4B,EAAEl4B,QAAUm4B,EAAEn4B,SACP,EAEJ,KAIf42B,qBAAsB,SAASv8B,EAAM+9B,GACjC,YAEA,IAAIhhC,GAAO/X,KACP6gB,EAAuB7F,EAAK6F,qBAC5B/a,EAAMkV,EAAKlV,IACX6a,EAAU3F,EAAK2F,QACfqY,EAAShe,EAAKge,OACd94B,EAAO8a,EAAK9a,KACZgE,EAAU8W,EAAK9W,QACfszC,EAAax8B,EAAKw8B,WAClBpe,EAAcpe,EAAKoe,aAAmC,eAApB2f,EAAW74C,MAAkC,eAATA,EACtEg4C,EAAgB,GAAIv4C,IAAG4L,QACvBytC,EAAiB,GAAIr5C,IAAG25B,eAAexzB,GACvC9B,EAASsF,SAASC,cAAc,SA8BpC,OA5BAzD,GAAI,6CAA+CizC,EAAWr3C,MAE9Ds3C,EAAe33B,SAAS03B,EAAY/0C,GAAS2c,QAASA,EAASqY,OAAQA,EAAQnY,qBAAsBA,IAAuBnK,KAAK,WAC7H,GAAIuiC,GAAqBj1C,EAAOI,UAAUlE,EAAMgE,GAC5Cg1C,EAAgB,WACZpzC,EAAI,yCAA2CizC,EAAWr3C,KAC1D,IAAIuJ,GAAOtL,GAAGwE,cAAc80C,EAC5Bf,GAAczsC,QAAQR,GAG1BmuB,GACArhB,EAAKohC,kBAAkBJ,EAAYE,EAAoBnzC,GAAK4Q,KAAK,SAAS0iC,GACtEH,EAAqBG,EACrBF,KAEJ,WACIpzC,EAAI,wFAAyF,SAC7FozC,MAIJA,KAEL,WACCpzC,EAAI,iDAAmDizC,EAAWr3C,KAAM,SACxEw2C,EAAcvsC,QAAQ6rC,KAGnBU,GAIXiB,kBAAmB,SAASE,EAAeJ,EAAoBnzC,GAC3D,YAEA,IAAIwzC,GAAS,GAAIjuC,YACbkuC,EAAkB,GAAI55C,IAAG4L,QACzBiuC,EAAuB,EAc3B,OAZAF,GAAO9tC,OAAS,WACZguC,EAAuBF,EAAOh3C,OAC9Bi3C,EAAgB9tC,QAAQ9L,GAAG85C,aAAahM,QAAQ+L,EAAsBP,KAG1EK,EAAO5tC,QAAU,WACb5F,EAAI,mBAAqBuzC,EAAc33C,KAAO,2DAA4D,SAC1G63C,EAAgB5tC,WAGpB2tC,EAAOI,cAAcL,GAEdE,GAGXI,eAAgB,SAASt1C,GACrB,YAEA,IAAIE,GAAYE,EAAYH,EAAaE,CAsBzC,OAlBID,GADAF,EAAQgB,MAAM,KAAK,GAAGC,QAAQ,WAAa,EAC9BC,KAAKlB,EAAQgB,MAAM,KAAK,IAGxBG,UAAUnB,EAAQgB,MAAM,KAAK,IAI9CZ,EAAaJ,EAAQgB,MAAM,KAAK,GAC3BA,MAAM,KAAK,GACXA,MAAM,KAAK,GAGhBf,EAAc,GAAImB,aAAYlB,EAAWmB,QACzClB,EAAW,GAAImB,YAAWrB,GAC1B3E,GAAG+C,KAAK6B,EAAY,SAAS5B,EAAKiD,GAC9BpB,EAAS7B,GAAOiD,EAAUC,WAAW,KAGlC7F,KAAK45C,YAAYt1C,EAAaG,IAGzCm1C,YAAa,SAASj1C,EAAMV,GACxB,YAEA,IAAIW,GAAcC,OAAOD,aACjBC,OAAOC,mBACPD,OAAOE,gBACPF,OAAOG,cACXC,EAAcL,GAAe,GAAIA,EAErC,OAAIK,IACAA,EAAYC,OAAOP,GACZM,EAAYE,QAAQlB,IAGpB,GAAImB,OAAMT,IAAQzE,KAAM+D,OChZ3CtE,GAAG85C,aAAe,WAGjB,GAAIA,KA+KD,OA7KAA,GAAaI,QAAU,oEAMvBJ,EAAaK,SAAW,SAASzwC,GAE7B,GACI0wC,GAAMC,EACNC,EAAMC,EAAMC,EAFZC,EAAS,GACGC,EAAO,GACDC,EAAO,GACzBjqC,EAAI,CAER,GACI0pC,GAAO1wC,EAAMgH,KACb2pC,EAAO3wC,EAAMgH,KACbgqC,EAAOhxC,EAAMgH,KAEb4pC,EAAOF,GAAQ,EACfG,GAAgB,EAAPH,IAAa,EAAMC,GAAQ,EACpCG,GAAgB,GAAPH,IAAc,EAAMK,GAAQ;iBACrCC,EAAc,GAAPD,EAEHE,MAAMP,GACPG,EAAOG,EAAO,GACNC,MAAMF,KACdC,EAAO,IAGVF,EAASA,EACNp6C,KAAK65C,QAAQvqC,OAAO2qC,GACpBj6C,KAAK65C,QAAQvqC,OAAO4qC,GACpBl6C,KAAK65C,QAAQvqC,OAAO6qC,GACpBn6C,KAAK65C,QAAQvqC,OAAOgrC,GACvBP,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,SACvBjqC,EAAIhH,EAAM3D,OAEnB,OAAO00C,IAGXX,EAAahM,QAAU,SAAS+M,EAAgBC,GAI5C,IAAKD,EAAexnC,MAFO,2BAI1B,MAAOynC,EAGR,IAAIC,GAAW16C,KAAK26C,SAASH,EAAet4C,QAPjB,0BAO+C,KACtE04C,EAAW56C,KAAK66C,eAAeH,GAE/B9kB,EAAQ51B,KAAK86C,iBAAiBL,EAAmBG,EAErD,OAZ2B,0BAYG56C,KAAK85C,SAASlkB,IAKhD6jB,EAAaqB,iBAAmB,SAASL,EAAmBG,GAEpD,GAAIG,GAAY/6C,KAAKg7C,aAAaJ,GAC9BK,EAAgBj7C,KAAKk7C,WAAWT,EAAmBM,EAGvD,OAFc,IAAIp1C,YAAWs1C,IAMrCxB,EAAauB,aAAe,SAASJ,GAG7B,IAAK,GADDO,GACKC,EAAI,EAAGA,EAAIR,EAASl1C,OAAQ01C,IAGjC,GADAD,EAAMP,EAASQ,GACD,KAAVD,EAAI,GAAsB,KAAVA,EAAI,GAEpB,MAAOA,EAGf,WAIR1B,EAAayB,WAAa,SAAST,EAAmBM,GAE9C,GAAIM,GAAYZ,EAAkBv4C,QAAQ,0BAA2B,IACjEo5C,EAAMt7C,KAAK26C,SAASU,GACpBE,EAAgBD,EAAIh2C,QAAQ,IAAI,GAChCk2C,EAAMF,EAAIzzC,MAAM,EAAG0zC,GACnBE,EAAMH,EAAIzzC,MAAM0zC,GAChBG,EAAQF,CAIb,OAFCE,GAAQA,EAAM/rC,OAAOorC,GACrBW,EAAQA,EAAM/rC,OAAO8rC,IAM7BhC,EAAaoB,eAAiB,SAASc,GAKnC,IAHA,GAAIC,GAAO,EACPhB,OAGJ,CACI,GAA2B,KAAvBe,EAAcC,GAA0C,KAA3BD,EAAcC,EAAO,GAAW,KACjE,IAA2B,KAAvBD,EAAcC,GAA0C,KAA3BD,EAAcC,EAAO,GAElDA,GAAQ,MAGZ,CACI,GAAIl2C,GAAmC,IAA1Bi2C,EAAcC,EAAO,GAAWD,EAAcC,EAAO,GAC9DC,EAAWD,EAAOl2C,EAAS,EAC3By1C,EAAMQ,EAAc9zC,MAAM+zC,EAAMC,EACpCjB,GAAS/3C,KAAKs4C,GACdS,EAAOC,EAEX,GAAID,EAAOD,EAAcj2C,OAAQ,MAGrC,MAAOk1C,IAKXnB,EAAakB,SAAW,SAAStxC,GAE7B,GACI0wC,GAAMC,EACNC,EAAMC,EAAMC,EADAE,EAAO,GACDC,EAAO,GACzBjqC,EAAI,EACJirC,IAIJ,IADiB,sBACF13C,KAAKyF,GAChB,KAAM,IAAIlI,OAAM,uHAGpBkI,GAAQA,EAAMnH,QAAQ,sBAAuB,GAE7C,GACI+3C,GAAOj6C,KAAK65C,QAAQv0C,QAAQ+D,EAAMiG,OAAOe,MACzC6pC,EAAOl6C,KAAK65C,QAAQv0C,QAAQ+D,EAAMiG,OAAOe,MACzC8pC,EAAOn6C,KAAK65C,QAAQv0C,QAAQ+D,EAAMiG,OAAOe,MACzCiqC,EAAOt6C,KAAK65C,QAAQv0C,QAAQ+D,EAAMiG,OAAOe,MAEzC0pC,EAAQE,GAAQ,EAAMC,GAAQ,EAC9BF,GAAgB,GAAPE,IAAc,EAAMC,GAAQ,EACrCE,GAAgB,EAAPF,IAAa,EAAKG,EAE3BgB,EAAIz4C,KAAKk3C,GAEG,IAARI,GACDmB,EAAIz4C,KAAKm3C,GAEA,IAARM,GACDgB,EAAIz4C,KAAKw3C,GAGZN,EAAOC,EAAOK,EAAO,GACrBJ,EAAOC,EAAOC,EAAOG,EAAO,SAEvBjqC,EAAIhH,EAAM3D,OAEnB,OAAO41C,IAIJ7B,KC7KX95C,GAAG85B,cAAgB,SAASzqB,EAAUmT,GAClC,YAEA,IAAI25B,MACAC,EAAc,EACdC,EAAY,EAEZC,GAAiB,EACjBC,GAAgB,EAChBC,EAAgB,SAASvxB,EAAQC,GACzBD,IAAWqxB,GAAkBpxB,IAAUqxB,GACvCltC,EAAS4b,EAAQC,GAGrBoxB,EAAiBrxB,EACjBsxB,EAAgBrxB,GAQpBuxB,EAAmB,SAAS9pB,EAAQ+pB,GAChC,GAAIC,IAAO,CASX,OAPA38C,IAAG+C,KAAK4vB,EAAQ,SAAS3vB,EAAK45C,GAC1B,GAAI58C,GAAG2F,QAAQ+2C,EAAWE,IAAa,EAEnC,MADAD,IAAO,GACA,IAIRA,GAGXpxB,EAAW,SAASnR,GAChByiC,EAAoBziC,GAAI,GAAI,SACrB+hC,GAAgB/hC,IAG3BwY,EAAgB,SAASF,EAAYC,EAAQ+pB,IACnB,IAAlB/pB,EAAO5sB,QAAgB02C,EAAiB9pB,EAAQ+pB,MAChDF,EAAcH,EAAWA,GACzBh8C,KAAKyZ,UAIbgjC,EAAQ,SAAS1iC,GACb,GAAIoB,GAAOgH,EAAQpI,EAGfoB,GAAO,IACPqhC,EAAoBziC,EAAI,EAAGoB,GAC3B2gC,EAAgB/hC,IAAO6Q,OAAQ,EAAGC,MAAO1P,KAYjDqhC,EAAsB,SAASziC,EAAI2iC,EAAWC,GAC1C,GAAIC,GAAYd,EAAgB/hC,GAAM+hC,EAAgB/hC,GAAI6Q,OAAS,EAC/DiyB,EAAWf,EAAgB/hC,GAAM+hC,EAAgB/hC,GAAI8Q,MAAQ,CAE7D6xB,MAAc,GAAMC,KAAa,GACjCZ,GAAea,EACfZ,GAAaa,IAGTH,IACAX,GAAeW,EAAYE,GAE3BD,IACAX,GAAaW,EAAWE,IAIhCV,EAAcJ,EAAaC,GAGnCr8C,IAAG6B,OAAOxB,MAENuyB,cAAeA,EAGfhX,eAAgB,SAASxB,EAAI6B,EAAWD,GAChCA,IAAchc,GAAG0a,OAAOyC,UAAYnB,IAAchc,GAAG0a,OAAOuC,SAC5DsO,EAASnR,GAEJ4B,IAAchc,GAAG0a,OAAOY,YAC7BwhC,EAAM1iC,IAKdkZ,qBAAsB,SAASlZ,EAAI6Q,EAAQC,GACvC2xB,EAAoBziC,EAAI6Q,EAAQC,GAChCixB,EAAgB/hC,IAAO6Q,OAAQA,EAAQC,MAAOA,IAIlDoK,UAAW,SAASlb,GAChB0iC,EAAM1iC,IAGVN,MAAO,WACHqiC,KACAC,EAAc,EACdC,EAAY,MCzHxBr8C,GAAGgoB,aAAe,SAASlQ,GACvB,YAYA,SAASqlC,GAAQ71C,GACb,MAAOA,GAAK/G,MACwB,IAAhC+G,EAAK/G,KAAKoF,QAAQ,UAG1B,QAASy3C,KACLC,EAAqBr9C,GAAGkY,EAAQ+P,eAAe3nB,OAAO,QAAS,SAASw0B,GACpE,GAAIwoB,GAAgBxoB,EAAMwoB,aAEtBA,IACAt9C,GAAG+C,KAAKu6C,EAAchzC,MAAO,SAAStH,EAAKsE,GACvC,GAAI61C,EAAQ71C,GAAO,CACf,GAAIgE,GAAOhE,EAAKi2C,WAChBrlC,GAAQ0O,UAAUuB,cAAc7c,QAOpD,QAASkyC,KACDH,GACAA,IAhCR,GAAInlC,GAASmlC,CAEbnlC,IACI+P,cAAe,KACfrB,WACIzgB,IAAK,SAASC,EAASC,KACvB8hB,cAAe,SAAS7c,OA8BhCtL,GAAG6B,OAAOqW,EAASJ,GACnBslC,IAEAp9C,GAAG6B,OAAOxB,MACNyZ,MAAO,WACH0jC,QCpCZx9C,GAAG+vB,YAAc,SAAS7X,EAASulC,EAAat3C,GAC5C,YAgCA,SAASu3C,GAAqBC,GACtBA,EAAOz5C,aAAa,YACpBkU,EAAKgY,YAAcutB,EAAOz5C,aAAa,WAM/C,QAAS05C,GAAaD,EAAQE,GAC1B,IAAIF,EAAOG,eAAkBH,EAAOG,gBAKhC,OAAO,CAJP33C,GAAI,yDAA0D,SAC9D03C,IAQR,QAASE,GAAoBJ,GACzB,GAAIE,GAAeF,EAAOK,MAG1Bh+C,IAAG29C,GAAQr9C,OAAO,SAAU,SAASw0B,GACjCA,EAAQA,GAAS5vB,OAAO4vB,MAEpBA,EAAMjmB,eACNimB,EAAMjmB,iBAGNimB,EAAM/lB,aAAc,EAGxB6uC,EAAaD,EAAQE,IAAiBJ,MAK1CE,EAAOK,OAAS,WACZJ,EAAaD,EAAQE,IAAiBJ,KAM9C,QAASQ,GAAgBN,GAarB,MAZIA,KACI39C,GAAGwH,SAASm2C,KACZA,EAASh0C,SAASg8B,eAAegY,IAGjCA,IACAx3C,EAAI,8BACJu3C,EAAqBC,GACrBzkB,GAAmB6kB,EAAoBJ,KAIxCA,EAzFX,GAAIvlC,GAAQ/X,KACR64B,EAAkBhhB,EAAQghB,gBAC1BykB,EAASzlC,EAAQjY,QACjBiwB,EAAahY,EAAQgY,UAGzBlwB,IAAG6B,OAAOxB,MAIN+vB,YAAa,KAIbD,cAAeD,EAGfF,gBAAgB,EAGhBC,sBAAuB,WAEnB,MAAc,OAAV0tB,EACO,KAGJvlC,EAAK8lC,UAAUP,MAkE9BA,EAASM,EAAgBN,GACzBt9C,KAAK2vB,iBAAmB2tB,GAG5B39C,GAAG6B,OAAO7B,GAAG+vB,YAAYrpB,WAGrBw3C,UAAW,SAAShtC,GAChB,YACA,IAAIf,MACAguC,EAAoB,SAAS59C,GACzB,GAAI69C,IACA,SACA,QACA,QACA,SAGJ,OAAOp+C,IAAG2F,QAAQy4C,EAAiB79C,EAAK6I,eAAiB,GAE7Di1C,EAAkB,SAAS99C,GACvB,MAAOP,IAAG2F,SAAS,WAAY,SAAUpF,EAAK6I,gBAAkB,GAEpEk1C,EAAc,SAAS5O,GACnB,SAAI2O,EAAgB3O,EAAGnvC,OAAUmvC,EAAG6O,UAI7B7O,EAAGx8B,UAAsC,WAA1Bw8B,EAAGnvC,KAAK6I,eAElCo1C,EAAc,SAASC,GACnB,GAAI13C,GAAQ,IASZ,OAPA/G,IAAG+C,KAAK/C,GAAGy+C,GAAQr7C,WAAY,SAASJ,EAAKK,GACzC,GAAoC,WAAhCA,EAAMiG,QAAQF,eAA8B/F,EAAMq7C,SAElD,MADA33C,GAAQ1D,EAAM0D,OACP,IAIRA,EAmBf,OAhBA/G,IAAG+C,KAAKmO,EAAKytC,SAAU,SAAS37C,EAAK0sC,GACjC,IAAK1vC,GAAG+I,QAAQ2mC,GAAI,IAAsC,aAA7BA,EAAGpmC,QAAQF,gBACpC+0C,EAAkBzO,EAAGnvC,OACpB+9C,EAAY5O,IAIZ,GAAiC,WAA7BA,EAAGpmC,QAAQF,gBAA+Bk1C,EAAY5O,GAAK,CAChE,GAAI3oC,GAAQy3C,EAAY9O,EAEV,QAAV3oC,IACAoJ,EAAIu/B,EAAG3tC,MAAQgF,QANnBoJ,GAAIu/B,EAAG3tC,MAAQ2tC,EAAG3oC,QAWnBoJ,KCzJfnQ,GAAG4+C,SAAY,SAAUj9C,EAAMwC,GAI3B,GAAI06C,MAKAC,EAAQD,EAAEE,OAKVC,EAAOF,EAAME,KAAQ,WACrB,QAASC,MAET,OAmBIp9C,OAAQ,SAAUigC,GAEdmd,EAAEv4C,UAAYrG,IACd,IAAI6+C,GAAU,GAAID,EAoBlB,OAjBInd,IACAod,EAAQC,MAAMrd,GAIbod,EAAQlyC,eAAe,UACxBkyC,EAAQE,KAAO,WACXF,EAAQG,OAAOD,KAAKnvC,MAAM5P,KAAM8H,aAKxC+2C,EAAQE,KAAK14C,UAAYw4C,EAGzBA,EAAQG,OAASh/C,KAEV6+C,GAeXtnC,OAAQ,WACJ,GAAI0nC,GAAWj/C,KAAKwB,QAGpB,OAFAy9C,GAASF,KAAKnvC,MAAMqvC,EAAUn3C,WAEvBm3C,GAeXF,KAAM,aAcND,MAAO,SAAUI,GACb,IAAK,GAAIC,KAAgBD,GACjBA,EAAWvyC,eAAewyC,KAC1Bn/C,KAAKm/C,GAAgBD,EAAWC,GAKpCD,GAAWvyC,eAAe,cAC1B3M,KAAKsG,SAAW44C,EAAW54C,WAanC84C,MAAO,WACH,MAAOp/C,MAAK++C,KAAK14C,UAAU7E,OAAOxB,WAW1Cq/C,EAAYZ,EAAMY,UAAYV,EAAKn9C,QAanCu9C,KAAM,SAAUO,EAAOC,GACnBD,EAAQt/C,KAAKs/C,MAAQA,MAGjBt/C,KAAKu/C,SA9JP,QA6JEA,EACgBA,EAEe,EAAfD,EAAM55C,QAiB9BY,SAAU,SAAUk5C,GAChB,OAAQA,GAAWC,GAAKxjB,UAAUj8B,OActC2P,OAAQ,SAAU+vC,GAEd,GAAIC,GAAY3/C,KAAKs/C,MACjBM,EAAYF,EAAUJ,MACtBO,EAAe7/C,KAAKu/C,SACpBO,EAAeJ,EAAUH,QAM7B,IAHAv/C,KAAK+/C,QAGDF,EAAe,EAEf,IAAK,GAAIxvC,GAAI,EAAGA,EAAIyvC,EAAczvC,IAAK,CACnC,GAAI2vC,GAAYJ,EAAUvvC,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,GAC7DsvC,GAAWE,EAAexvC,IAAO,IAAM2vC,GAAa,IAAOH,EAAexvC,GAAK,EAAK,MAErF,IAAIuvC,EAAUl6C,OAAS,MAE1B,IAAK,GAAI2K,GAAI,EAAGA,EAAIyvC,EAAczvC,GAAK,EACnCsvC,EAAWE,EAAexvC,IAAO,GAAKuvC,EAAUvvC,IAAM,OAI1DsvC,GAAU98C,KAAK+M,MAAM+vC,EAAWC,EAKpC,OAHA5/C,MAAKu/C,UAAYO,EAGV9/C,MAUX+/C,MAAO,WAEH,GAAIT,GAAQt/C,KAAKs/C,MACbC,EAAWv/C,KAAKu/C,QAGpBD,GAAMC,IAAa,IAAM,YAAe,GAAMA,EAAW,EAAK,EAC9DD,EAAM55C,OAASpE,EAAK+nC,KAAKkW,EAAW,IAYxCH,MAAO,WACH,GAAIA,GAAQT,EAAKS,MAAM74C,KAAKvG,KAG5B,OAFAo/C,GAAME,MAAQt/C,KAAKs/C,MAAMz3C,MAAM,GAExBu3C,GAgBXryC,OAAQ,SAAUkzC,GAEd,IAAK,GADDX,MACKjvC,EAAI,EAAGA,EAAI4vC,EAAQ5vC,GAAK,EAC7BivC,EAAMz8C,KAAsB,WAAhBvB,EAAKyL,SAA0B,EAG/C,OAAO,IAAIsyC,GAAUN,KAAKO,EAAOW,MAOrCC,EAAQ1B,EAAE2B,OAKVV,EAAMS,EAAMT,KAcZxjB,UAAW,SAAUyjB,GAOjB,IAAK,GALDJ,GAAQI,EAAUJ,MAClBC,EAAWG,EAAUH,SAGrBa,KACK/vC,EAAI,EAAGA,EAAIkvC,EAAUlvC,IAAK,CAC/B,GAAIgwC,GAAQf,EAAMjvC,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,GACrD+vC,GAASv9C,MAAMw9C,IAAS,GAAG/5C,SAAS,KACpC85C,EAASv9C,MAAa,GAAPw9C,GAAa/5C,SAAS,KAGzC,MAAO85C,GAAS5vC,KAAK,KAgBzBW,MAAO,SAAUmvC,GAMb,IAAK,GAJDC,GAAeD,EAAO56C,OAGtB45C,KACKjvC,EAAI,EAAGA,EAAIkwC,EAAclwC,GAAK,EACnCivC,EAAMjvC,IAAM,IAAMuyB,SAAS0d,EAAO7uC,OAAOpB,EAAG,GAAI,KAAQ,GAAMA,EAAI,EAAK,CAG3E,OAAO,IAAIgvC,GAAUN,KAAKO,EAAOiB,EAAe,KAOpDC,EAASN,EAAMM,QAcfvkB,UAAW,SAAUyjB,GAOjB,IAAK,GALDJ,GAAQI,EAAUJ,MAClBC,EAAWG,EAAUH,SAGrBkB,KACKpwC,EAAI,EAAGA,EAAIkvC,EAAUlvC,IAAK,CAC/B,GAAIgwC,GAAQf,EAAMjvC,IAAM,KAAQ,GAAMA,EAAI,EAAK,EAAM,GACrDowC,GAAY59C,KAAK0E,OAAOm5C,aAAaL,IAGzC,MAAOI,GAAYjwC,KAAK,KAgB5BW,MAAO,SAAUwvC,GAMb,IAAK,GAJDC,GAAkBD,EAAUj7C,OAG5B45C,KACKjvC,EAAI,EAAGA,EAAIuwC,EAAiBvwC,IACjCivC,EAAMjvC,IAAM,KAAiC,IAA1BswC,EAAU96C,WAAWwK,KAAe,GAAMA,EAAI,EAAK,CAG1E,OAAO,IAAIgvC,GAAUN,KAAKO,EAAOsB,KAOrCC,EAAOX,EAAMW,MAcb5kB,UAAW,SAAUyjB,GACjB,IACI,MAAOoB,oBAAmBC,OAAOP,EAAOvkB,UAAUyjB,KACpD,MAAOjxC,GACL,KAAM,IAAItN,OAAM,0BAiBxBgQ,MAAO,SAAU6vC,GACb,MAAOR,GAAOrvC,MAAM8vC,SAAS1wC,mBAAmBywC,OAWpDE,EAAyBzC,EAAMyC,uBAAyBvC,EAAKn9C,QAQ7DiY,MAAO,WAEHzZ,KAAKmhD,MAAQ,GAAI9B,GAAUN,KAC3B/+C,KAAKohD,YAAc,GAavBC,QAAS,SAAU18C,GAEI,gBAARA,KACPA,EAAOk8C,EAAK1vC,MAAMxM,IAItB3E,KAAKmhD,MAAMxxC,OAAOhL,GAClB3E,KAAKohD,aAAez8C,EAAK46C,UAiB7B+B,SAAU,SAAUC,GAEhB,GAAI58C,GAAO3E,KAAKmhD,MACZK,EAAY78C,EAAK26C,MACjBmC,EAAe98C,EAAK46C,SACpBmC,EAAY1hD,KAAK0hD,UACjBC,EAA6B,EAAZD,EAGjBE,EAAeH,EAAeE,CAG9BC,GAFAL,EAEejgD,EAAK+nC,KAAKuY,GAIVtgD,EAAK2rB,KAAoB,EAAf20B,GAAoB5hD,KAAK6hD,eAAgB,EAItE,IAAIC,GAAcF,EAAeF,EAG7BK,EAAczgD,EAAK0gD,IAAkB,EAAdF,EAAiBL,EAG5C,IAAIK,EAAa,CACb,IAAK,GAAI5P,GAAS,EAAGA,EAAS4P,EAAa5P,GAAUwP,EAEjD1hD,KAAKiiD,gBAAgBT,EAAWtP,EAIpC,IAAIgQ,GAAiBV,EAAU1lC,OAAO,EAAGgmC,EACzCn9C,GAAK46C,UAAYwC,EAIrB,MAAO,IAAI1C,GAAUN,KAAKmD,EAAgBH,IAY9C3C,MAAO,WACH,GAAIA,GAAQT,EAAKS,MAAM74C,KAAKvG,KAG5B,OAFAo/C,GAAM+B,MAAQnhD,KAAKmhD,MAAM/B,QAElBA,GAGXyC,eAAgB,IA2IhBM,GAnIS1D,EAAM2D,OAASlB,EAAuB1/C,QAI/C6gD,IAAK1D,EAAKn9C,SAWVu9C,KAAM,SAAUsD,GAEZriD,KAAKqiD,IAAMriD,KAAKqiD,IAAI7gD,OAAO6gD,GAG3BriD,KAAKyZ,SAUTA,MAAO,WAEHynC,EAAuBznC,MAAMlT,KAAKvG,MAGlCA,KAAKsiD,YAeTC,OAAQ,SAAUC,GAQd,MANAxiD,MAAKqhD,QAAQmB,GAGbxiD,KAAKshD,WAGEthD,MAiBXu/B,SAAU,SAAUijB,GAShB,MAPIA,IACAxiD,KAAKqhD,QAAQmB,GAINxiD,KAAKyiD,eAKpBf,UAAW,GAeXgB,cAAe,SAAUC,GACrB,MAAO,UAAU58C,EAASs8C,GACtB,MAAO,IAAIM,GAAO5D,KAAKsD,GAAK9iB,SAASx5B,KAiB7C68C,kBAAmB,SAAUD,GACzB,MAAO,UAAU58C,EAASqJ,GACtB,MAAO,IAAI+yC,GAAOU,KAAK9D,KAAK4D,EAAQvzC,GAAKmwB,SAASx5B,OAQjDy4C,EAAEsE,QAEf,OAAOtE,IACTl9C,MCjsBD,WAEG,GAAIk9C,GAAI7+C,GAAG4+C,SACPE,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAClBa,EAAQ1B,EAAE2B,GAKDD,GAAM6C,QAcf9mB,UAAW,SAAUyjB,GAEjB,GAAIJ,GAAQI,EAAUJ,MAClBC,EAAWG,EAAUH,SACrByD,EAAMhjD,KAAKijD,IAGfvD,GAAUK,OAIV,KAAK,GADDmD,MACK7yC,EAAI,EAAGA,EAAIkvC,EAAUlvC,GAAK,EAO/B,IAAK,GAND8yC,GAAS7D,EAAMjvC,IAAM,KAAc,GAAMA,EAAI,EAAK,EAAY,IAC9D+yC,EAAS9D,EAAOjvC,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAC9DgzC,EAAS/D,EAAOjvC,EAAI,IAAO,KAAQ,IAAOA,EAAI,GAAK,EAAK,EAAM,IAE9DizC,EAAWH,GAAS,GAAOC,GAAS,EAAKC,EAEpCE,EAAI,EAAIA,EAAI,GAAOlzC,EAAQ,IAAJkzC,EAAWhE,EAAWgE,IAClDL,EAAYrgD,KAAKmgD,EAAI1zC,OAAQg0C,IAAa,GAAK,EAAIC,GAAO,IAKlE,IAAIC,GAAcR,EAAI1zC,OAAO,GAC7B,IAAIk0C,EACA,KAAON,EAAYx9C,OAAS,GACxBw9C,EAAYrgD,KAAK2gD,EAIzB,OAAON,GAAY1yC,KAAK,KAgB5BW,MAAO,SAAUsyC,GAEb,GAAIC,GAAkBD,EAAU/9C,OAC5Bs9C,EAAMhjD,KAAKijD,KAGXO,EAAcR,EAAI1zC,OAAO,GAC7B,IAAIk0C,EAAa,CACb,GAAIG,GAAeF,EAAUn+C,QAAQk+C,EACjCG,KAAgB,IAChBD,EAAkBC,GAO1B,IAAK,GAFDrE,MACAW,EAAS,EACJ5vC,EAAI,EAAGA,EAAIqzC,EAAiBrzC,IACjC,GAAIA,EAAI,EAAG,CACP,GAAIuzC,GAAQZ,EAAI19C,QAAQm+C,EAAUn0C,OAAOe,EAAI,KAASA,EAAI,EAAK,EAC3DwzC,EAAQb,EAAI19C,QAAQm+C,EAAUn0C,OAAOe,MAAS,EAAKA,EAAI,EAAK,CAChEivC,GAAMW,IAAW,KAAO2D,EAAQC,IAAW,GAAM5D,EAAS,EAAK,EAC/DA,IAIR,MAAOZ,GAAU9nC,OAAO+nC,EAAOW,IAGnCgD,KAAM,wECpGb,WAEG,GAAIzE,GAAI7+C,GAAG4+C,SACPE,EAAQD,EAAEE,IACVC,EAAOF,EAAME,KACbuB,EAAQ1B,EAAE2B,IACVU,EAAOX,EAAMW,KACbsB,EAAS3D,EAAEsE,IAKJX,GAAOU,KAAOlE,EAAKn9C,QAW1Bu9C,KAAM,SAAU4D,EAAQvzC,GAEpBuzC,EAAS3iD,KAAK8jD,QAAU,GAAInB,GAAO5D,KAGjB,gBAAP3vC,KACPA,EAAMyxC,EAAK1vC,MAAM/B,GAIrB,IAAI20C,GAAkBpB,EAAOjB,UACzBsC,EAAyC,EAAlBD,CAGvB30C,GAAImwC,SAAWyE,IACf50C,EAAMuzC,EAAOpjB,SAASnwB,IAI1BA,EAAI2wC,OAWJ,KAAK,GARDkE,GAAOjkD,KAAKkkD,MAAQ90C,EAAIgwC,QACxB+E,EAAOnkD,KAAKokD,MAAQh1C,EAAIgwC,QAGxBiF,EAAYJ,EAAK3E,MACjBgF,EAAYH,EAAK7E,MAGZjvC,EAAI,EAAGA,EAAI0zC,EAAiB1zC,IACjCg0C,EAAUh0C,IAAM,WAChBi0C,EAAUj0C,IAAM,SAEpB4zC,GAAK1E,SAAW4E,EAAK5E,SAAWyE,EAGhChkD,KAAKyZ,SAUTA,MAAO,WAEH,GAAIkpC,GAAS3iD,KAAK8jD,OAGlBnB,GAAOlpC,QACPkpC,EAAOJ,OAAOviD,KAAKokD,QAevB7B,OAAQ,SAAUC,GAId,MAHAxiD,MAAK8jD,QAAQvB,OAAOC,GAGbxiD,MAiBXu/B,SAAU,SAAUijB,GAEhB,GAAIG,GAAS3iD,KAAK8jD,QAGdS,EAAY5B,EAAOpjB,SAASijB,EAIhC,OAHAG,GAAOlpC,QACIkpC,EAAOpjB,SAASv/B,KAAKkkD,MAAM9E,QAAQzvC,OAAO40C,UCvHhE,WAEG,GAAI/F,GAAI7+C,GAAG4+C,SACPE,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAClB+C,EAAS3D,EAAM2D,OACfD,EAAS3D,EAAEsE,KAGX0B,KAKAC,EAAOtC,EAAOsC,KAAOrC,EAAO5gD,QAC5B8gD,SAAU,WACNtiD,KAAK0kD,MAAQ,GAAIrF,GAAUN,MACvB,WAAY,WACZ,WAAY,UACZ,cAIRkD,gBAAiB,SAAU0C,EAAGzS,GAY1B,IAAK,GAVD0S,GAAI5kD,KAAK0kD,MAAMpF,MAGfzG,EAAI+L,EAAE,GACN9L,EAAI8L,EAAE,GACN/3C,EAAI+3C,EAAE,GACN1X,EAAI0X,EAAE,GACNn2C,EAAIm2C,EAAE,GAGDv0C,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIA,EAAI,GACJm0C,EAAEn0C,GAAqB,EAAhBs0C,EAAEzS,EAAS7hC,OACf,CACH,GAAIw0C,GAAIL,EAAEn0C,EAAI,GAAKm0C,EAAEn0C,EAAI,GAAKm0C,EAAEn0C,EAAI,IAAMm0C,EAAEn0C,EAAI,GAChDm0C,GAAEn0C,GAAMw0C,GAAK,EAAMA,IAAM,GAG7B,GAAIC,IAAMjM,GAAK,EAAMA,IAAM,IAAOpqC,EAAI+1C,EAAEn0C,EAEpCy0C,IADAz0C,EAAI,IACGyoC,EAAIjsC,GAAOisC,EAAI5L,GAAM,WACrB78B,EAAI,IACLyoC,EAAIjsC,EAAIqgC,GAAK,WACZ78B,EAAI,IACJyoC,EAAIjsC,EAAMisC,EAAI5L,EAAMrgC,EAAIqgC,GAAM,YAE/B4L,EAAIjsC,EAAIqgC,GAAK,UAGvBz+B,EAAIy+B,EACJA,EAAIrgC,EACJA,EAAKisC,GAAK,GAAOA,IAAM,EACvBA,EAAID,EACJA,EAAIiM,EAIRF,EAAE,GAAMA,EAAE,GAAK/L,EAAK,EACpB+L,EAAE,GAAMA,EAAE,GAAK9L,EAAK,EACpB8L,EAAE,GAAMA,EAAE,GAAK/3C,EAAK,EACpB+3C,EAAE,GAAMA,EAAE,GAAK1X,EAAK,EACpB0X,EAAE,GAAMA,EAAE,GAAKn2C,EAAK,GAGxBg0C,YAAa,WAET,GAAI99C,GAAO3E,KAAKmhD,MACZK,EAAY78C,EAAK26C,MAEjByF,EAAgC,EAAnB/kD,KAAKohD,YAClB4D,EAA4B,EAAhBrgD,EAAK46C,QAYrB,OATAiC,GAAUwD,IAAc,IAAM,KAAS,GAAKA,EAAY,GACxDxD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAM1jD,KAAK2jD,MAAMF,EAAa,YAC1EvD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAMD,EAClDpgD,EAAK46C,SAA8B,EAAnBiC,EAAU97C,OAG1B1F,KAAKshD,WAGEthD,KAAK0kD,OAGhBtF,MAAO,WACH,GAAIA,GAAQgD,EAAOhD,MAAM74C,KAAKvG,KAG9B,OAFAo/C,GAAMsF,MAAQ1kD,KAAK0kD,MAAMtF,QAElBA,IAkBfZ,GAAEiG,KAAOrC,EAAOM,cAAc+B,GAgB9BjG,EAAE0G,SAAW9C,EAAOQ,kBAAkB6B,MChIzC,SAAUnjD,GAEP,GAAIk9C,GAAI7+C,GAAG4+C,SACPE,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAClB+C,EAAS3D,EAAM2D,OACfD,EAAS3D,EAAEsE,KAGX8B,KACAO,MAGH,WACG,QAASC,GAAQP,GAEb,IAAK,GADDQ,GAAQ/jD,EAAK6qC,KAAK0Y,GACbS,EAAS,EAAGA,GAAUD,EAAOC,IAClC,KAAMT,EAAIS,GACN,OAAO,CAIf,QAAO,EAGX,QAASC,GAAkBV,GACvB,MAAwB,aAAfA,GAAS,EAAJA,IAAyB,EAK3C,IAFA,GAAIA,GAAI,EACJW,EAAS,EACNA,EAAS,IACRJ,EAAQP,KACJW,EAAS,IACTZ,EAAEY,GAAUD,EAAkBjkD,EAAK0wC,IAAI6S,EAAG,MAE9CM,EAAEK,GAAUD,EAAkBjkD,EAAK0wC,IAAI6S,EAAG,EAAI,IAE9CW,KAGJX,MAKR,IAAIL,MAKAiB,EAAStD,EAAOsD,OAASrD,EAAO5gD,QAChC8gD,SAAU,WACNtiD,KAAK0kD,MAAQ,GAAIrF,GAAUN,KAAK6F,EAAE/8C,MAAM,KAG5Co6C,gBAAiB,SAAU0C,EAAGzS,GAe1B,IAAK,GAbD0S,GAAI5kD,KAAK0kD,MAAMpF,MAGfzG,EAAI+L,EAAE,GACN9L,EAAI8L,EAAE,GACN/3C,EAAI+3C,EAAE,GACN1X,EAAI0X,EAAE,GACNn2C,EAAIm2C,EAAE,GACNc,EAAId,EAAE,GACNe,EAAIf,EAAE,GACNgB,EAAIhB,EAAE,GAGDv0C,EAAI,EAAGA,EAAI,GAAIA,IAAK,CACzB,GAAIA,EAAI,GACJm0C,EAAEn0C,GAAqB,EAAhBs0C,EAAEzS,EAAS7hC,OACf,CACH,GAAIw1C,GAAUrB,EAAEn0C,EAAI,IAChBy1C,GAAYD,GAAW,GAAOA,IAAY,IAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY,EAExBE,EAAUvB,EAAEn0C,EAAI,GAChB21C,GAAYD,GAAW,GAAOA,IAAY,KAC9BA,GAAW,GAAOA,IAAY,IAC9BA,IAAY,EAE5BvB,GAAEn0C,GAAKy1C,EAAStB,EAAEn0C,EAAI,GAAK21C,EAASxB,EAAEn0C,EAAI,IAG9C,GAAI41C,GAAOx3C,EAAIi3C,GAAOj3C,EAAIk3C,EACtBO,EAAOrN,EAAIC,EAAMD,EAAIhsC,EAAMisC,EAAIjsC,EAE/Bs5C,GAAWtN,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,GAAOA,IAAM,IAClFuN,GAAW33C,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,EAAOA,IAAM,IAElF43C,EAAKT,EAAIQ,EAASH,EAAKd,EAAE90C,GAAKm0C,EAAEn0C,GAChCi2C,EAAKH,EAASD,CAElBN,GAAID,EACJA,EAAID,EACJA,EAAIj3C,EACJA,EAAKy+B,EAAImZ,EAAM,EACfnZ,EAAIrgC,EACJA,EAAIisC,EACJA,EAAID,EACJA,EAAKwN,EAAKC,EAAM,EAIpB1B,EAAE,GAAMA,EAAE,GAAK/L,EAAK,EACpB+L,EAAE,GAAMA,EAAE,GAAK9L,EAAK,EACpB8L,EAAE,GAAMA,EAAE,GAAK/3C,EAAK,EACpB+3C,EAAE,GAAMA,EAAE,GAAK1X,EAAK,EACpB0X,EAAE,GAAMA,EAAE,GAAKn2C,EAAK,EACpBm2C,EAAE,GAAMA,EAAE,GAAKc,EAAK,EACpBd,EAAE,GAAMA,EAAE,GAAKe,EAAK,EACpBf,EAAE,GAAMA,EAAE,GAAKgB,EAAK,GAGxBnD,YAAa,WAET,GAAI99C,GAAO3E,KAAKmhD,MACZK,EAAY78C,EAAK26C,MAEjByF,EAAgC,EAAnB/kD,KAAKohD,YAClB4D,EAA4B,EAAhBrgD,EAAK46C,QAYrB,OATAiC,GAAUwD,IAAc,IAAM,KAAS,GAAKA,EAAY,GACxDxD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAM1jD,EAAK2jD,MAAMF,EAAa,YAC1EvD,GAAawD,EAAY,KAAQ,GAAM,GAAK,IAAMD,EAClDpgD,EAAK46C,SAA8B,EAAnBiC,EAAU97C,OAG1B1F,KAAKshD,WAGEthD,KAAK0kD,OAGhBtF,MAAO,WACH,GAAIA,GAAQgD,EAAOhD,MAAM74C,KAAKvG,KAG9B,OAFAo/C,GAAMsF,MAAQ1kD,KAAK0kD,MAAMtF,QAElBA,IAkBfZ,GAAEiH,OAASrD,EAAOM,cAAc+C,GAgBhCjH,EAAE+H,WAAanE,EAAOQ,kBAAkB6C,IAC1CnkD,MClLD,WAEG,GAA0B,kBAAfmE,aAAX,CAKA,GAAI+4C,GAAI7+C,GAAG4+C,SACPE,EAAQD,EAAEE,IACVW,EAAYZ,EAAMY,UAGlBmH,EAAYnH,EAAUN,MAGZM,EAAUN,KAAO,SAAU0H,GAqBrC,GAnBIA,YAAsBhhD,eACtBghD,EAAa,GAAI9gD,YAAW8gD,KAK5BA,YAAsBC,YACtBD,YAAsBE,oBACtBF,YAAsBG,aACtBH,YAAsBI,cACtBJ,YAAsBK,aACtBL,YAAsBM,cACtBN,YAAsBO,eACtBP,YAAsBQ,iBAEtBR,EAAa,GAAI9gD,YAAW8gD,EAAW9/C,OAAQ8/C,EAAWS,WAAYT,EAAWU,aAIjFV,YAAsB9gD,YAAY,CAMlC,IAAK,GAJDyhD,GAAuBX,EAAWU,WAGlC7H,KACKjvC,EAAI,EAAGA,EAAI+2C,EAAsB/2C,IACtCivC,EAAMjvC,IAAM,IAAMo2C,EAAWp2C,IAAO,GAAMA,EAAI,EAAK,CAIvDm2C,GAAUjgD,KAAKvG,KAAMs/C,EAAO8H,OAG5BZ,GAAU52C,MAAM5P,KAAM8H,aAItBzB,UAAYg5C,MC3DxB1/C,GAAG0nD,GAAK1nD,GAAG0nD,OAEX1nD,GAAG0nD,GAAGC,KAAO3nD,GAAG0nD,GAAGC,MAAS,WACxB,YAEA,QACIC,qBAAsB,kBAEtBC,iBAAkB,cAElBC,sBAAuB,mBAEvBC,gBAAiB,aAEjBC,8BAA+B,sBAC/BC,+BAAgC,qBAEhCC,kCAAmC,+BACnCC,mCAAoC,SAEpCC,yBAA0B,uBAE1BC,yBAA0B,mBAE1BC,wBAAyB,kBAEzBC,4BACI,gBACA,sBACA,mBACA,eAGJC,8BACI,gBACA,sBACA,mBACA,eAGJC,wBACI,gBACA,sBACA,mBACA,cACA,kDACA,4CACA,iDAkBJC,UAAW,SAAS1qC,GAChB,GAQI2qC,GARAC,GAEI,yEAEA,yEAEA,oCAaR,OATA5oD,IAAG+C,KAAK6lD,EAAU,SAAS5lD,EAAK6lD,GAC5B,GAAIx1C,GAAQw1C,EAAQ5kD,KAAK+Z,EAEzB,IAAI3K,EAEA,MADAs1C,GAASt1C,EAAM,IACR,IAIRs1C,GAUXG,sBAAuB,SAAS/mD,GAC5B,MAAI/B,IAAG2F,QAAQ3F,GAAG0nD,GAAGC,KAAKc,uBAAwB1mD,IAAS,EAChDA,EAEJ/B,GAAG0nD,GAAGC,KAAKE,iBAAmB9lD,GASzCgnD,UAAW,SAAS1tC,GAChB,GAAI2tC,MACAC,KACAN,EAASttC,EAAKstC,OACdO,EAAO7tC,EAAK6tC,KACZC,EAAQ9tC,EAAK+tC,WACb35C,EAAM4L,EAAK5L,IACX45C,EAAYhuC,EAAKguC,UACjBC,EAAMjuC,EAAKiuC,IACX/oD,EAAO8a,EAAK9a,KACZgpD,EAAiBluC,EAAKkuC,eACtBC,EAAenuC,EAAKmuC,aACpBzrC,EAAS1C,EAAK0C,OACd0rC,EAAqBzpD,GAAG0nD,GAAGC,KAAK+B,8BAA8BruC,EAAKouC,oBACnEE,EAActuC,EAAKsuC,YACnBC,EAAcvuC,EAAKuuC,YACnBC,EAAoBxuC,EAAKwuC,kBACzBC,EAASzuC,EAAKyuC,OACdC,EAAuB1uC,EAAK0uC,qBAC5BC,EAAmB3uC,EAAK2uC,gBAyE5B,OAvEAhB,GAAOiB,WAAajqD,GAAG0nD,GAAGC,KAAKuC,wBAAwBhB,EAAMC,GAE7DF,EAAW/lD,MAAMomD,IAAKA,IACtBL,EAAW/lD,MAAMylD,OAAQA,IAErBpoD,GACA0oD,EAAW/lD,MAAMinD,eAAgB5pD,IAIjCgpD,GACAN,EAAW/lD,MAAMknD,sBAAuBb,EAAe5iD,aAGvD8iD,GACAR,EAAW/lD,MAAMmnD,wBAAyBZ,IAG1CI,IACAZ,EAAW/lD,SACX+lD,EAAWA,EAAWljD,OAAS,GAAG/F,GAAG0nD,GAAGC,KAAKK,+BAAiChoD,GAAG0nD,GAAGC,KAAKM,gCAGzFuB,IACAP,EAAW/lD,SACX+lD,EAAWA,EAAWljD,OAAS,GAAG/F,GAAG0nD,GAAGC,KAAKS,0BAA4BoB,GAGzEO,IACAd,EAAW/lD,SACX+lD,EAAWA,EAAWljD,OAAS,GAAG/F,GAAG0nD,GAAGC,KAAKO,mCAAqCloD,GAAG0nD,GAAGC,KAAKQ,oCAGxE,IAArB6B,EACAf,EAAW/lD,MAAMuM,IAAKA,IAEI,IAArBu6C,IACLf,EAAW/lD,SACX+lD,EAAWA,EAAWljD,OAAS,GAAG/F,GAAG0nD,GAAGC,KAAKC,sBAAwB5nD,GAAG0nD,GAAGC,KAAKU,yBAEhFY,EAAW/lD,SACX+lD,EAAWA,EAAWljD,OAAS,GAAG0J,IAAMA,EAExCw5C,EAAW/lD,SACX+lD,EAAWA,EAAWljD,OAAS,GAAG/F,GAAG0nD,GAAGC,KAAKG,uBACzC9nD,GAAG0nD,GAAGC,KAAK2C,wBAAwBpB,KAAMA,EAAMz5C,IAAK45C,EAAWS,OAAQA,IAE3Eb,EAAW/lD,SACX+lD,EAAWA,EAAWljD,OAAS,GAAG/F,GAAG0nD,GAAGC,KAAKI,iBACzC/nD,GAAG0nD,GAAGC,KAAK4C,gBAAgBrB,EAAMC,IAIzCnpD,GAAG+C,KAAKgb,EAAQ,SAAShc,EAAMkB,GAC3B,GAAIunD,GAAexqD,GAAG0nD,GAAGC,KAAKmB,sBAAsB/mD,GAChDu2C,IAEAt4C,IAAG2F,QAAQ3F,GAAG0nD,GAAGC,KAAKc,uBAAwB+B,IAAiB,EAC/DlS,EAAMkS,GAAgBvnD,EAGtBq1C,EAAMkS,GAAgB55C,mBAAmB3N,GAG7CgmD,EAAW/lD,KAAKo1C,KAGpB0Q,EAAOC,WAAaA,EAEpBjpD,GAAG0nD,GAAGC,KAAK8C,kBAAkBzB,EAAQW,EAAaC,GAE3CZ,GAUX0B,yBAA0B,SAAS1B,EAAQ2B,GACvC,GAAIC,IAAoB,CAExB5qD,IAAG+C,KAAKimD,EAAOC,WAAY,SAAS4B,EAAYC,GAC5C9qD,GAAG+C,KAAK+nD,EAAY,SAASC,EAAaC,GAClCD,IAAgB/qD,GAAG0nD,GAAGC,KAAKS,2BAC3B0C,EAAWC,GAAeJ,EAC1BC,GAAoB,OAK3BA,IACD5B,EAAOC,WAAW/lD,SAClB8lD,EAAOC,WAAWD,EAAOC,WAAWljD,OAAS,GAAG/F,GAAG0nD,GAAGC,KAAKS,0BAA4BuC,IAe/FM,kBAAmB,SAAS5vC,EAAM6vC,GAC9B,GAiBIC,GAjBAC,KACAC,EAAehwC,EAAK0C,OACpBpS,EAAU,GAAI3L,IAAG4L,QACjB49C,EAAenuC,EAAKmuC,aACpBL,EAAQ9tC,EAAK+tC,WACb7oD,EAAO8a,EAAK9a,KACZkP,EAAM4L,EAAK5L,IACX45C,EAAYhuC,EAAKguC,UACjBC,EAAMjuC,EAAKiuC,IACXC,EAAiBluC,EAAKkuC,eACtBE,EAAqBzpD,GAAG0nD,GAAGC,KAAK+B,8BAA8BruC,EAAKouC,oBACnEI,EAAoBxuC,EAAKwuC,kBACzBC,EAASzuC,EAAKyuC,OACdC,EAAuB1uC,EAAK0uC,qBAC5BC,EAAmB3uC,EAAK2uC,iBACxB1lB,EAAM,GAAIhG,MACVn4B,EAAMkV,EAAKlV,GAyFf,OAtFAkV,GAAK6tC,KAAO5kB,EACZ6mB,EAAanrD,GAAG0nD,GAAGC,KAAKoB,UAAU1tC,GAElC+vC,EAAU37C,IAAMA,EAEZlP,IACA6qD,EAAU,gBAAkB7qD,GAG5BgpD,IACA6B,EAAUhB,sBAAwBb,GAGlCE,IACA2B,EAAUf,wBAA0BZ,GAGpCI,IACAuB,EAAUprD,GAAG0nD,GAAGC,KAAKK,+BAAiChoD,GAAG0nD,GAAGC,KAAKM,gCAGjE8B,IACAqB,EAAUprD,GAAG0nD,GAAGC,KAAKO,mCAAqCloD,GAAG0nD,GAAGC,KAAKQ,oCAGrEqB,IACA4B,EAAUprD,GAAG0nD,GAAGC,KAAKS,0BAA4BoB,GAGrD4B,EAAU9B,IAAMA,EAKhBtpD,GAAG+C,KAAKsoD,EAAc,SAAStpD,EAAMkB,GACjC,GAAIunD,GAAexqD,GAAG0nD,GAAGC,KAAKmB,sBAAsB/mD,EAEhD/B,IAAG2F,QAAQ3F,GAAG0nD,GAAGC,KAAKc,uBAAwB+B,IAAiB,EAC/DY,EAAUZ,GAAgBvnD,EAG1BmoD,EAAUZ,GAAgB55C,mBAAmB3N,KAI5B,IAArB+mD,EACAoB,EAAUE,eAAiBjC,EAED,IAArBW,IACLoB,EAAUprD,GAAG0nD,GAAGC,KAAKC,sBAAwB5nD,GAAG0nD,GAAGC,KAAKU,yBACxD+C,EAAUprD,GAAG0nD,GAAGC,KAAKG,uBAAyB9nD,GAAG0nD,GAAGC,KAAK2C,wBAAwBpB,KAAM5kB,EAAK70B,IAAK45C,EAAWS,OAAQA,IACpHsB,EAAUprD,GAAG0nD,GAAGC,KAAKI,iBAAmB/nD,GAAG0nD,GAAGC,KAAK4C,gBAAgBjmB,EAAK6kB,IAK5E+B,EAAmBC,GAAYp0C,KAC3B,SAASw0C,EAAoBC,EAAkBC,GAC3CL,EAAUpC,OAASuC,EAAmBvC,OAER,IAA1B3tC,EAAK2uC,kBACLoB,EAAUM,UAAYH,EAAmBG,UAErCF,IACAJ,EAAUE,eAAiBE,IAGA,IAA1BnwC,EAAK2uC,mBACVoB,EAAUprD,GAAG0nD,GAAGC,KAAKW,yBAA2BiD,EAAmBG,WAGnED,IACAL,EAAUprD,GAAG0nD,GAAGC,KAAKS,0BAA4BqD,GAGrD9/C,EAAQG,QAAQs/C,IAEpB,SAAStlC,GACLA,EAAeA,GAAgB,gHAG/B3f,EAAI,2BAA6B2f,EAAc,SAC/Cna,EAAQK,QAAQ8Z,KAIjBna,GAYX8+C,kBAAmB,SAASzB,EAAQ2C,EAAS3qC,GACzC,GAAI4qC,GAAkBD,EAAU,EAAI,EAAIA,EAEpCE,EAAkB7qC,GAAW,EAAI,iBAAmBA,GAEpD2qC,EAAU,GAAK3qC,EAAU,IACzBgoC,EAAOC,WAAW/lD,MAAM,uBAAwB0oD,EAAgBjlD,WAAYklD,EAAgBllD,cAIpGujD,wBAAyB,SAAShB,EAAMC,GACpC,GAAI2C,GAAe,GAAIxtB,MAAK4qB,EAAK3qB,UAAY4qB,EAC7C,OAAOnpD,IAAG0nD,GAAGC,KAAKoE,cAAcD,EAAc,IAGlDE,mBAAoB,SAAS9C,GACzB,MAAOA,GAAK+C,iBAAmB,IAC1B,KAAO/C,EAAKgD,cAAgB,IAAIhkD,OAAM,IACtC,IAAMghD,EAAKiD,cAAcjkD,OAAM,IAGxC6jD,cAAe,SAAS7C,EAAMkD,GAC1B,GACIC,GAAKl/C,EADLm/C,EAAeF,GAAkB,CAOrC,OAFAlD,GAAKqD,WAAWrD,EAAKsD,cAAgBF,GAAgB,IAEjDhuB,KAAK53B,UAAU+lD,YACRvD,EAAKuD,eAGZJ,EAAM,SAASK,GAOX,MANAv/C,GAAIvF,OAAO8kD,GAEM,IAAbv/C,EAAEpH,SACFoH,EAAI,IAAMA,GAGPA,GAGJ+7C,EAAK+C,iBACN,IAAMI,EAAInD,EAAKgD,cAAgB,GAC/B,IAAMG,EAAInD,EAAKiD,cACf,IAAME,EAAInD,EAAKyD,eACf,IAAMN,EAAInD,EAAK0D,iBACf,IAAMP,EAAInD,EAAK2D,iBACf,IAAMjlD,QAAQshD,EAAK4D,qBAAuB,KAAMv/B,QAAQ,IAAIrlB,MAAM,EAAG,GACrE,MAWd6kD,oBAAqB,SAASrnB,GAC1B,GAAIsnB,GAAMtnB,EAAOe,iBAAmBf,EAAOunB,cAActjD,SACrDujD,EAAcF,EAAIrc,SAASwc,OAC3B95C,EAAQ,iCAAiCpP,KAAKipD,EAElD,IAAI75C,EACA,OACIs1C,OAAQt1C,EAAM,GACd5D,IAAK4D,EAAM,GACX+5C,KAAM/5C,EAAM,GAAG9Q,QAAQ,OAAQ,MAS3CmnD,8BAA+B,SAASD,GACpC,GAAIA,EAAoB,CACpB,GACInZ,GADA+c,EAAwB1jD,SAASC,cAAc,MAGnD,OAAI5J,IAAGwN,OAIH6/C,EAAsBl+C,UAAY,YAAcs6C,EAAqB,SACrEnZ,EAAe+c,EAAsB/pD,WAC9BgtC,EAAaC,OAOpBD,EAAe3mC,SAASC,cAAc,KACtC0mC,EAAaC,KAAOkZ,EACpBnZ,EAAaC,KAAOD,EAAaC,KAC1BD,EAAaC,QAKhC+Z,uBAAwB,SAASjvC,GAC7B,MAAOA,GAAK5L,IAAM,IACdzP,GAAG0nD,GAAGC,KAAKqE,mBAAmB3wC,EAAK6tC,MAAQ,IAC3C7tC,EAAKyuC,OAAS,oBAGtBS,gBAAiB,SAASrB,EAAMC,GAC5B,GAAI2C,GAAe,GAAIxtB,MAAK4qB,EAAK3qB,UAAY4qB,EAE7C,OAAOnpD,IAAG0nD,GAAGC,KAAKqE,mBAAmBF,GAAgB,KAC5C,IAAMA,EAAaa,eAAezkD,OAAM,IACxC,IAAM4jD,EAAac,iBAAiB1kD,OAAM,IAC1C,IAAM4jD,EAAae,iBAAiB3kD,OAAM,GAC3C,KAMZolD,uBAAwB,SAAShV,GAC7B,GAAIiV,GAAiB38C,mBAAmB0nC,EASxC,OANAiV,GAAiBA,EAAehrD,QAAQ,UAAW6+C,QAGnDmM,EAAiBA,EAAehrD,QAAQ,MAAO,OAGxCgrD,EAAehrD,QAAQ,OAAQ,MAM1CirD,UAAW,SAAS7lD,GAChB,GAAI8yC,GAAS7pC,mBAAmBjJ,EAKhC,OAJA8yC,GAASA,EAAOl4C,QAAQ,uBAAwB6+C,QAChD3G,EAASA,EAAOl4C,QAAQ,OAAQ,SAAS+jD,GACrC,MAAO,IAAMA,EAAGpgD,WAAW,GAAGS,SAAS,IAAIsgB,iBAQnDwmC,cAAe,SAAS/vB,GACpB,GAAI8K,KAIJ,OAHAxoC,IAAG+C,KAAK26B,EAAKh4B,MAAM,KAAM,SAAS1C,EAAKsE,GACnCkhC,EAAMtlC,KAAKlD,GAAG0nD,GAAGC,KAAK6F,UAAUlmD,MAE7BkhC,EAAM33B,KAAK,UC/f7B,WACG,YAEA7Q,IAAG0tD,6BACCC,uBAAwB,SAAS5vC,EAAQ3D,GACrC/Z,KAAKutD,0BAA0BhpC,IAAI7G,EAAQ3D,IAE/CyzC,yBAA0B,SAAS7vC,EAAU5D,GACzC/Z,KAAKytD,4BAA4BlpC,IAAI5G,EAAU5D,KAIvDpa,GAAG+tD,8BAcCziC,YAAa,SAASlR,EAAIrY,EAAMY,EAAQ0oB,GACpC,GA6CI2iC,GACAC,EA9CAniD,IAAUnJ,EAAOmJ,QACjBsM,EAAO/X,KACP6tD,EAAiB/lD,UACjBgmD,EAAkB9tD,KAAKytD,4BAA4B5rC,IAAI9H,GACvDg0C,EAAuB/tD,KAAKse,SAAS0vC,cAAc/mC,cACnDgnC,EAAgBjuD,KAAKse,SAAS0vC,cAAcrnC,OAC5CS,EAAOpnB,KAAKse,SAAS8I,KACrB9b,EAAU,GAAI3L,IAAG4L,QACjB2iD,EAAsBluD,KAAKutD,0BAA0B1rC,IAAI9H,GACzDo0C,EAAanuD,KAAKsjB,aAAazB,IAAI9H,GAMnCq0C,EAAsB,SAASC,SACpBt2C,GAAKu2C,+BAA+Bv0C,GAC3Cpa,GAAG6B,OAAOc,EAAQ+rD,GAClB1uD,GAAGy2B,kBAAkB/vB,UAAU4kB,YAAYrb,MAAMmI,EAAM81C,GACvDviD,EAAQG,QAAQ4iD,IAKpBE,EAAsB,SAASF,GAC3B,GAAIr/C,GAAW2+C,CAEfhuD,IAAG6B,OAAOc,EAAQ+rD,GAEd/rD,GAAUA,EAAOmX,QACjBzK,EAAW,MAGVA,EAID+I,EAAKu2C,+BAA+Bv0C,GAAM/K,QAHnC+I,GAAKu2C,+BAA+Bv0C,GAM1ChC,EAAKqU,aAAarS,EAAIrY,EAAMY,EAAQ0oB,EAAKhc,KAC1CrP,GAAGy2B,kBAAkB/vB,UAAU4kB,YAAYrb,MAAMmI,EAAM81C,GACvDviD,EAAQK,QAAQ0iD,IAO5B,OAAI5iD,IAAWqiD,GACXF,EAAuB,GAAIjuD,IAAG6uD,4BAC1B7wC,SAAUmwC,EACVnnC,OAAQsnC,EACRhnC,cAAe8mC,EACf3mC,KAAMA,EACNthB,IAAKnG,GAAG4P,KAAKvP,KAAK8F,IAAK9F,QAI3BL,GAAG6B,OAAO0sD,EAAqBn2C,EAAK02C,2BAA2B10C,EAAIzX,EAAQ0oB,IAAM,GAGjFmjC,GAAcxuD,GAAG6B,OAAO0sD,EAAqBC,GAAY,GAEzDR,EAAuBhuD,GAAG4P,KAAK,WAC3Bq+C,EAAqBc,mBAAmB30C,EAAIm0C,GACvCx3C,KAAK03C,EAAqBG,IAChCx2C,GAEH41C,IAEOriD,GAIJ3L,GAAGy2B,kBAAkB/vB,UAAU4kB,YAAYrb,MAAM5P,KAAM8H,YAIlEkc,aAAc,SAASjK,GACnB,GAAI40C,GAAyB3uD,KAAKsuD,+BAA+Bv0C,EAEjE,OAAOpa,IAAGy2B,kBAAkB/vB,UAAU2d,aAAazd,KAAKvG,KAAM+Z,EAAI40C,QC3G7E,WACG,YAEAhvD,IAAG0nD,GAAGjxB,kBAAoB,SAAS3e,GAC/B,GAAII,IACAkP,SAEIiiC,UAAW,KAGXD,WAAY,GAGhB6F,kBACI3F,IAAK,UAGLX,OAAQ3oD,GAAG4P,KAAK,SAASwK,GACrB,MAAOpa,IAAG0nD,GAAGC,KAAKe,UAAUroD,KAAK2hB,YAAY5H,KAC9C/Z,MAGH6uD,KAAMlvD,GAAG4P,KAAK,SAASwK,GACnB,MAAO,mCAAqCnW,KAAK5D,KAAK4hB,eAAeC,IAAI9H,IAAK,IAC/E/Z,MAGHoP,IAAK,OAELo6C,mBAAmB,EAGnBC,OAAQ,YAERC,sBAAsB,GAG1BoF,aAEI9F,UAAW,KAEX+F,UAAW,KAEXnF,WAAY,KAGZT,aAAc,MAIlBkC,WACIpkC,iBACAtJ,SAAU,KACVnL,QAAS,GAGbw7C,eACIrwC,SAAU,KAEVgJ,OAAQ,OAGRjJ,UAEAuJ,kBAIJ+nC,eACIC,mBAAoB,MAGxBh6C,UAEIojB,SAAU,SAGdjR,MACI8I,UAAU,GAGd3J,WACI2oC,qBAAsB,cAK9BvvD,IAAG6B,OAAOqW,EAASJ,GAAG,GAEjBzX,KAAKmvD,eAAet3C,EAAQi3C,aAAa,KAC1C9uD,KAAKovD,oBAAoBpG,UAAYnxC,EAAQkP,QAAQiiC,WAGzDhpD,KAAKqvD,UAAYrvD,KAAKmoB,aAAatQ,EAAQ+2C,iBAAiB3F,KAG5DtpD,GAAGy2B,kBAAkB7vB,KAAKvG,KAAM6X,GAEhC7X,KAAKutD,0BAA4BvtD,KAAKmoB,aAAanoB,KAAKse,SAAS0vC,cAActwC,QAC/E1d,KAAKytD,4BAA8BztD,KAAKmoB,aAAanoB,KAAKse,SAAS0vC,cAAcrwC,UAIjF3d,KAAKsuD,kCAGLtuD,KAAKsvD,eAELtvD,KAAKuvD,kBAELvvD,KAAKwvD,YACLxvD,KAAKyvD,WAIT9vD,GAAG6B,OAAO7B,GAAG0nD,GAAGjxB,kBAAkB/vB,UAAW1G,GAAG4d,eAChD5d,GAAG6B,OAAO7B,GAAG0nD,GAAGjxB,kBAAkB/vB,UAAW1G,GAAGkmB,gBAChDlmB,GAAG6B,OAAO7B,GAAG0nD,GAAGjxB,kBAAkB/vB,UAAW1G,GAAG0tD,6BAChD1tD,GAAG6B,OAAO7B,GAAG0nD,GAAGjxB,kBAAkB/vB,UAAW1G,GAAG+tD,8BAGhD/tD,GAAG6B,OAAO7B,GAAG0nD,GAAGjxB,kBAAkB/vB,WAC9BgiD,UAAW,SAAStuC,GAChB,MAA+B,OAA3B/Z,KAAKuvD,eAAex1C,GACb/Z,KAAKwvD,SAASz1C,GAElB/Z,KAAKuvD,eAAex1C,IAO/B21C,OAAQ,SAAS31C,GAEb,MAA4B,OAAxB/Z,KAAKsvD,YAAYv1C,GACV/Z,KAAKwf,SAASgf,oBAAoBzkB,GAGtC/Z,KAAKsvD,YAAYv1C,IAM5BN,MAAO,WACH9Z,GAAGy2B,kBAAkB/vB,UAAUoT,MAAMlT,KAAKvG,MAC1CA,KAAKsuD,kCACLtuD,KAAKwvD,YACLxvD,KAAKyvD,WAGTN,eAAgB,SAASL,EAAaa,GAClC,GAAIb,GAAeA,EAAYC,UAAW,CACtC,IAAKD,EAAY9F,UACb,KAAM,IAAIrpD,IAAGwB,MAAM,oCAElB,KAAK2tD,EAAYlF,WAClB,KAAM,IAAIjqD,IAAGwB,MAAM,qCAWvB,OARInB,MAAKovD,oBAAsBzvD,GAAG6B,UAAWstD,GAGrCnvD,GAAGwH,SAAS2nD,EAAYlF,cACxB5pD,KAAKovD,oBAAoBxF,WAAa,GAAI3rB,MAAK6wB,EAAYlF,cAI5D,EAEN,IAAK+F,EACN,KAAM,IAAIhwD,IAAGwB,MAAM,iCAGnBnB,MAAKovD,wBAIbQ,OAAQ,SAAS3G,EAAKlvC,GAClB/Z,KAAKqvD,UAAU9qC,IAAI0kC,EAAKlvC,IAU5BsQ,qBAAsB,WAClB,GAAItS,GAAO/X,KACPsqB,GACIulC,SAAU7vD,KAAKqvD,UACfhH,UAAW1oD,GAAG4P,KAAKvP,KAAK8vD,iBAAkB9vD,MAC1C+vD,QAASpwD,GAAG4P,KAAKvP,KAAKgwD,eAAgBhwD,MACtCiwD,WAAYtwD,GAAG4P,KAAKvP,KAAKkwD,kBAAmBlwD,MAC5CgvD,cAAehvD,KAAKse,SAAS0wC,cAC7BJ,iBAAkB5uD,KAAKse,SAASswC,iBAChCvD,UAAWrrD,KAAKse,SAAS+sC,UACzBtC,WAAY/oD,KAAKse,SAASyI,QAAQgiC,WAElCn/B,YACIsH,aAAclxB,KAAKse,SAASsL,WAAWsH,aACvCi/B,aAAcnwD,KAAKse,SAASsL,WAAWqH,WA0EnD,OArEAtxB,IAAGqM,SAAShM,KAAK4hB,eAAgB,SAASzV,GACtC,OACI0V,IAAK,SAAS9H,GACV,GAAI4D,GAAWxR,EAAO0V,IAAI9H,EAE1B,OAAI4D,GAASrY,QAAQ,QAAU,EACpB,UAAYqY,EAGhBA,MAMnBhe,GAAGqM,SAAShM,KAAKsjB,aAAc,SAASnX,GACpC,OACI0V,IAAK,SAAS9H,GACV,GAAIq2C,GAAYjkD,EAAO0V,IAAI9H,GACvBs2C,IAYJ,OAVA1wD,IAAG+C,KAAK0tD,EAAW,SAAS1uD,EAAMkB,GAC9B,GAAI0tD,GAAY5uD,CAEZ/B,IAAG2F,QAAQ3F,GAAG0nD,GAAGC,KAAKY,2BAA4BoI,GAAa,IAC/DA,EAAYA,EAAUvnD,eAG1BsnD,EAAeC,GAAa3wD,GAAG6G,WAAW5D,GAAOA,IAAQA,IAGtDytD,MAKnB/lC,EAAkB+gC,UAAUkF,qBACxB1uC,IAAK,WACD,MAAO9J,GAAKq3C,qBAGhBoB,UAAW,WACP,GAAIC,GAAoB,GAAI9wD,IAAG4L,QAC3BmjB,EAAiB3W,EAAKuG,SAASiI,UAAU2oC,sBAsB7C,OApBIvvD,IAAG6W,iBAAiBkY,GACpBA,EAAehY,KAAK,SAASo4C,GACzB,IACI/2C,EAAKo3C,eAAeL,GACpB2B,EAAkBhlD,UAEtB,MAAO3B,GACHiO,EAAKjS,IAAI,qEAAuEgE,EAAM/D,QAAU,IAAK,SACrG0qD,EAAkB9kD,QAAQ,4DAE/B,SAASqqB,GACRje,EAAKjS,IAAI,qDAAuDkwB,EAAW,IAAK,SAChFy6B,EAAkB9kD,QAAQ,4CAI9BoM,EAAKjS,IAAI,0DAA2D,SACpE2qD,EAAkB9kD,QAAQ,sDAGvB8kD,IAIR9wD,GAAGy2B,kBAAkB/vB,UAAUgkB,qBAAqB9jB,KAAKvG,KAAMsqB,EAAmB,OAG7FomC,8BAA+B,SAAS32C,EAAI42C,GACxC,GAAIC,GAAQ5wD,KAAKse,SAASswC,iBAAiB+B,GACvCrlD,EAAU,GAAI3L,IAAG4L,QACjBwM,EAAO/X,IAyBX,OAvBIL,IAAG6G,WAAWoqD,IACdA,EAAQA,EAAM72C,GACVpa,GAAG6W,iBAAiBo6C,GACpBtlD,EAAUslD,EAGVtlD,EAAQG,QAAQmlD,IAGfjxD,GAAGwH,SAASypD,IACjBtlD,EAAQG,QAAQmlD,GAGpBtlD,EAAQoL,KACJ,SAAiBhQ,GACbqR,EAAK,IAAM44C,EAAW,KAAK52C,GAAMrT,GAGrC,SAAiBsvB,GACbr2B,GAAGmG,IAAI,uBAAyB6qD,EAAW,WAAa52C,EAAK,KAAOic,EAAW,IAAK,WAIrF1qB,GAGXwkD,iBAAkB,SAAS/1C,GACvB,MAAO/Z,MAAK0wD,8BAA8B32C,EAAI,WAGlDi2C,eAAgB,SAASj2C,GACrB,MAAO/Z,MAAK0wD,8BAA8B32C,EAAI,SAalDm2C,kBAAmB,SAASn2C,EAAIzI,GAE5B,GAAIhG,GAAU,GAAI3L,IAAG4L,QACjBslD,EAAe7wD,KAAKse,SAASswC,iBAAiBx/C,IAC9CigB,EAAY1vB,GAAG0R,aAAaC,GAC5Bw/C,EAAsBxlD,EAAQK,QAC9BolD,EAAsB,SAASC,EAAS3hC,GACpC,GAAI4hC,GAAeD,CAEDltD,UAAdurB,IACA4hC,GAAgB,IAAM5hC,GAG1B/jB,EAAQG,QAAQwlD,GAGxB,QAAQJ,GACJ,IAAK,OACDE,EAAoB/wD,KAAK0iB,QAAQ3I,GAAKsV,EACtC,MACJ,KAAK,WACD0hC,EAAoBz/C,EACpB,MACJ,SACQ3R,GAAG6G,WAAWqqD,GACd7wD,KAAKkxD,uBAAuBL,EAAc92C,EAAIg3C,EAAqBD,IAGnE9wD,KAAK8F,IAAI+qD,EAAe,mDAAoD,SAC5EC,KAIZ,MAAOxlD,IAcX4lD,uBAAwB,SAASC,EAAap3C,EAAIq3C,EAAiBC,GAC/D,GAAIt5C,GAAO/X,KACPiX,EAAY,SAAS+5C,GACjBI,EAAgBJ,IAEpB95C,EAAY,SAASqK,GACjBxJ,EAAKjS,IAAInG,GAAG8H,OAAO,kDAAmDsS,EAAIwH,GAAU,QAAS,SAC7F8vC,EAAgB9vC,IAEpByvC,EAAUG,EAAY5qD,KAAKvG,KAAM+Z,EAEjCpa,IAAG6W,iBAAiBw6C,GACpBA,EAAQt6C,KAAKO,EAAWC,GAGR,MAAX85C,EACL95C,IAGAD,EAAU+5C,IAIlBvC,2BAA4B,SAAS10C,EAAI4X,EAAUqF,GAC/C,GAAItZ,IACAtO,IAAKpP,KAAK0vD,OAAO31C,GACjBG,KAAMla,KAAK0iB,QAAQ3I,GACnBrY,KAAM1B,KAAKigB,QAAQlG,GACnBuuC,OAAQtoD,KAAKqoD,UAAUtuC,GAU3B,OAPIid,IAAYA,EAASs6B,kBAAkB,QACvC5zC,EAAOqvC,KAAO/1B,EAASs6B,kBAAkB,QAEpC3/B,EAASo7B,OACdrvC,EAAOqvC,KAAOp7B,EAASo7B,MAGpBrvC,GAIX0C,gBAAiB,SAASrG,EAAIwZ,GAC1B,GAAIC,IACApkB,IAAKpP,KAAK0vD,OAAO31C,GACjBuuC,OAAQtoD,KAAKqoD,UAAUtuC,GAG3B,OAAOpa,IAAGy2B,kBAAkB/vB,UAAU+Z,gBAAgB7Z,KAAKvG,KAAM+Z,EAAIwZ,EAAmBC,IAG5FxV,eAAgB,SAAS8H,GACrB,GAAI/L,EAGJ,IAAyB,MAArB+L,EAAYyrC,MACZ,KAAM,IAAI5xD,IAAGwB,MAAM,6EAQvB,OALI4Y,GAAKpa,GAAGy2B,kBAAkB/vB,UAAU2X,eAAepO,MAAM5P,KAAM8H,WAC/D9H,KAAKsvD,YAAYv1C,GAAM+L,EAAYyrC,MACnCvxD,KAAKuvD,eAAex1C,GAAM+L,EAAY0rC,SAGnCz3C,QC3bdlV,OAAO8hD,oBACR9hD,OAAO8hD,kBAAoB,cAgB/BhnD,GAAG0nD,GAAGoK,cAAgB,SAASh6C,GAC3B,YAgPA,SAASi6C,GAAwB33C,EAAIyN,EAAUC,GAC3C,GAIIhC,GAAckM,EAJdggC,EAAenqC,EAAS+uB,aACxBqb,EAAuBC,EAAkB93C,GACzCzO,EAAUsmD,EAAqBtmD,QAC/BwmD,EAAuBF,EAAqBE,oBAMhD,UAHOD,GAAkB93C,GAGrB43C,EACA,IACIhgC,EAAWhyB,GAAGqR,UAAU2gD,GAE5B,MAAO7nD,GACH+N,EAAQ/R,IAAI,iDAAmDgE,EAAO,SAK1E6nB,GAAYA,EAAS7nB,OACrB2d,GAAU,EACVhC,EAAekM,EAAS7nB,OAInB6nB,GAAYA,EAASogC,SAC1BtqC,GAAU,EACVhC,EAAe,+CAGVkM,EACD9Z,EAAQm6C,kBAAoBrgC,EAASg3B,QACrClhC,GAAU,EACVhC,EAAe,wDAETkM,EAAS05B,YACf5jC,GAAU,EACVhC,EAAe,6CAKnBgC,GAAU,EACVhC,EAAe,0DAGfgC,GACIhC,GACA5N,EAAQ/R,IAAI2f,EAAc,SAG9Bna,EAAQK,QAAQ8Z,IAEXqsC,EACLG,EAAgBH,EAAsBngC,EAAS05B,UAAW//C,GAG1DA,EAAQG,QAAQkmB,GAIxB,QAASugC,GAAyBn4C,EAAIvH,EAAS2/C,GAC3C,GAKIC,GAAUC,EAAeC,EALzBhnD,EAAU,GAAI3L,IAAG4L,QACjBob,EAAS,OACT4rC,KACAC,EAAa,GACbvuB,EAAM,GAAIhG,MAGVw0B,EAAuB,SAASN,GAC5B,GAAIO,GACAC,IAsCJ,OApCAhzD,IAAG+C,KAAKyvD,EAAY9tC,QAAS,SAAS3iB,GAClC6wD,EAAY1vD,KAAKnB,KAErB6wD,EAAY3Z,OAEZj5C,GAAG+C,KAAK6vD,EAAa,SAAS5vD,EAAKiwD,GAC3BjzD,GAAG2F,QAAQ3F,GAAG0nD,GAAGC,KAAKa,6BAA8ByK,GAAc,EAClEJ,GAAcI,EAAW7pD,cAAgB,IAAMopD,EAAY9tC,QAAQuuC,GAAYprD,OAAS,KAEpE,gBAAforD,EACLF,EAAaP,EAAY9tC,QAAQuuC,GAGjCD,EAAsBvyB,QAAQz9B,KAItChD,GAAG+C,KAAKiwD,EAAuB,SAAShwD,EAAKkwD,GACzCN,EAAYz2C,OAAO+2C,EAAW,KAGlCR,GACI/J,OAAQ6J,EAAY7J,OACpBoK,WAAYA,EACZ12B,YAAam2B,EAAYn2B,YACzB6sB,KAAM5kB,EACN6kB,MAAOjxC,EAAQw6C,cAAcvJ,MAC7BsJ,SAAUA,EACVU,cAAeX,EAAYW,cAC3BP,YAAaA,EACbC,WAAYA,EACZ7rC,OAAQA,GAGZ2rC,EAAqB,IAAZ9/C,EAAgBugD,EAAGC,gBAAgBX,GAAiBY,EAAGD,gBAAgBX,IAG5ExJ,KAAM5kB,EACNmuB,SAAUA,EACVc,cAA2B,IAAZ1gD,EAAgBygD,EAAGE,iBAAiBd,EAAcE,aAAe,KAChFD,OAAoB,IAAZ9/C,EAAgB8/C,EAAOc,OAASd,EACxCe,UAAuB,IAAZ7gD,EAAgB8/C,EAAOgB,IAAMhB,GAKpD,QAAQH,EAAYjyD,MAChB,IAAKqzD,GAAuBC,aAAaC,gBACrC9sC,EAAS,SACTyrC,EAAWzyD,GAAG8H,OAAO,cAAe0qD,EAAYuB,SAChD,MACJ,KAAKH,GAAuBC,aAAaG,mBACrCvB,EAAW,SACX,MACJ,KAAKmB,GAAuBC,aAAaI,mBACrCxB,EAAWzyD,GAAG8H,OAAO,cAAe0qD,EAAYuB,SAChD,MACJ,KAAKH,GAAuBC,aAAaK,iBACrCltC,EAAS,MACTyrC,EAAWzyD,GAAG8H,OAAO,4BAA6B0qD,EAAY2B,QAAS3B,EAAYuB,UAsB3F,MAlBAtB,GAAWD,EAAY/iD,IAAM,IAAMgjD,EAEnB,IAAZ5/C,EACAygD,EAAGc,wBAAwB5B,EAAY6B,SAASt9C,KAAK,SAASo8C,GAC1DX,EAAY9tC,QAAQ,wBAA0ByuC,EAC9CX,EAAY9tC,QAAQ4vC,KAAO9B,EAAYtD,KACvCsD,EAAY9tC,QAAQ,cAAgB1kB,GAAG0nD,GAAGC,KAAK4C,gBAAgBjmB,EAAKpsB,EAAQw6C,cAAcvJ,OAC1FqJ,EAAYW,cAAgBA,EAE5BxnD,EAAQG,QAAQgnD,EAAqBN,KACtC,SAAUlc,GACT3qC,EAAQK,QAAQsqC,KAIpB3qC,EAAQG,QAAQgnD,EAAqBN,IAGlC7mD,EAGX,QAAS4oD,GAA6Bn6C,EAAIo6C,EAAYC,EAAiBjJ,EAAkBC,GACrF,GAAIiJ,EAGAF,GAAWrC,sBACP1G,IACAiJ,EAAiBF,EAAWrC,qBAAqBwC,aACjDD,EAAe10D,GAAG0nD,GAAGC,KAAKS,0BAA4BqD,EACtD+I,EAAWrC,qBAAqBl0B,YAAYy2B,IAGhDF,EAAWrC,qBAAqByC,UAAUx6C,GAAIrD,KAAK,SAAS89C,GACxDC,EAAeN,EAAWrC,qBAAsB0C,EAAmBE,aAAcN,IAClF,SAAUne,GACTme,EAAgBzoD,QAAQsqC,OAK5BmV,GAAuBzrD,GAAG0nD,GAAGC,KAAK+C,yBAAyB8J,EAAY/I,GACvEuJ,EAAWR,EAAYC,EAAiBjJ,EAAkBC,IAIlE,QAASuJ,GAAWhM,EAAQyL,EAAiBjJ,EAAkBC,GACrB,IAAlCvzC,EAAQw6C,cAAc7/C,QACtBygD,EAAG0B,WAAWhM,EAAQyL,EAAiBjJ,EAAkBC,GAGzD2H,EAAG4B,WAAWhM,EAAQyL,EAAiBjJ,EAAkBC,GAIjE,QAASqJ,GAAe3C,EAAsBU,EAAY4B,GAChB,IAAlCv8C,EAAQw6C,cAAc7/C,QACtBygD,EAAGwB,eAAe3C,EAAsBU,EAAY4B,GAGpDrB,EAAG0B,eAAe3C,EAAsBU,EAAY4B,GAlb5D,GAAI1pB,GAsBA6lB,EArBAgD,EAAyBvzD,KACzB6xD,KACAh6C,GACIm6C,iBAAiB,EACjBrrC,OAAQ,OACR0rC,eACIvJ,MAAO,EACPyH,uBACA5yC,SAAU,KACVsJ,iBACAzU,QAAS,GAEbqU,eAAgB,EAChBM,iBACAD,eACAE,MACI6I,UAAU,EACV2I,iBAAiB,GAErB9yB,IAAK,SAAS4B,EAAK1B,MAIvBisD,EAAkB,SAASH,EAAsBzG,EAAW//C,GACxD,GAAI+Y,GAAUytC,EAAqBwC,YAEG,KAAlCz8C,EAAQw6C,cAAc7/C,QACtB6R,EAAQuwC,cAAgBj1D,GAAG0nD,GAAGC,KAAKU,yBAC/B,eAAiBnwC,EAAQw6C,cAAc9B,oBAAoB1uC,MAAMmnC,UAAY,IAC7ErpD,GAAG0nD,GAAGC,KAAKqE,mBAAmBmG,EAAqB+C,kBAAoB,IACvEh9C,EAAQw6C,cAAc5I,OAAS,kCAEZqI,EAAqBqB,mBAAqB,cAC9C9H,EAGnBhnC,EAAQuwC,cAAgB,OAAS/8C,EAAQw6C,cAAc9B,oBAAoB1uC,MAAMmnC,UAAY,IAAMqC,EAGvG//C,EAAQG,QAAQ4Y,EAASytC,EAAqBgD,gBAGlD/B,GACIC,gBAAiB,SAASX,GACtB,MAAO1yD,IAAG8H,OAAO,yBACb4qD,EAAc1rC,OACd0rC,EAAcK,YAAc,GAC5BL,EAAcr2B,aAAe,GAC7Bq2B,EAAcG,YAAc,KAC5BH,EAAc/J,OACd+J,EAAcD,WAGtBqC,eAAgB,SAAS3C,EAAsBU,EAAY4B,GACvD,GAAIW,GAAmBp1D,GAAG4+C,SAAS4B,IAAIU,KAAK1vC,MAAMqhD,GAC9CwC,EAAkBr1D,GAAG4+C,SAAS2G,SAAS6P,EAAkBxE,EAAoB1uC,MAAMktC,UAGvFkD,GAAgBH,EAFYnyD,GAAG4+C,SAAS4B,IAAI4C,OAAO9mB,UAAU+4B,GAEAZ,IAGjEO,WAAY,SAAShM,EAAQyL,EAAiBjJ,EAAkBC,GAC5D,GAAI6J,GAAY/jD,KAAK+qB,UAAU0sB,GAC3BuM,EAAkBv1D,GAAG4+C,SAAS4B,IAAIU,KAAK1vC,MAAM8jD,GAC7CE,EAAex1D,GAAG4+C,SAAS4B,IAAI4C,OAAO9mB,UAAUi5B,GAChDE,EAAiBz1D,GAAG4+C,SAAS2G,SAASiQ,EAAc5E,EAAoB1uC,MAAMktC,WAC9EsG,EAAuB11D,GAAG4+C,SAAS4B,IAAI4C,OAAO9mB,UAAUm5B,EAE5DhB,GAAgB3oD,SACZk9C,OAAQwM,EACR9J,UAAWgK,GACZlK,EAAkBC,KAI7B6H,GACIqC,wBAAyB,SAASC,GAC9B,GAEIC,GAAoBC,EAAwBC,EAF5CC,EAAgBJ,EAASjwD,QAAQ,KACjCswD,EAAuB,EA2B3B,OAxBID,IAAiB,IACjBH,KACAE,EAAeH,EAAS9jD,OAAOkkD,EAAgB,GAAGtwD,MAAM,KAExD1F,GAAG+C,KAAKgzD,EAAc,SAAS/yD,EAAKkqD,GAChC,GAAIgJ,GAAahJ,EAAYxnD,MAAM,KAC/BywD,EAAWD,EAAW,EAEV,OAAZC,IACAA,EAAW,IAGfN,EAAmBjlD,mBAAmBslD,EAAW,KAAOtlD,mBAAmBulD,KAG/EL,EAAyBrvD,OAAOk6B,KAAKk1B,GAAoB5c,OACzD6c,EAAuBvsB,QAAQ,SAAS6sB,EAAuBpzD,GAC3DizD,GAAwBG,EAAwB,IAAMP,EAAmBO,GACrEpzD,EAAM8yD,EAAuB/vD,OAAS,IACtCkwD,GAAwB,QAK7BA,GAGXI,oBAAqB,SAAS3D,GAC1B,MAAO1yD,IAAG8H,OAAO,yBACb4qD,EAAc1rC,OACdssC,EAAGgD,gBAAgB5D,EAAcD,UACjCa,EAAGqC,wBAAwBjD,EAAcD,UACzCC,EAAcG,YAAc,KAC5BS,EAAGE,iBAAiBd,EAAcE,aAClCF,EAAcS,gBAGtBmD,gBAAiB,SAASV,GACtB,GAAIl4B,GAAOk4B,EACPI,EAAgBJ,EAASjwD,QAAQ,IAKrC,OAHIqwD,GAAgB,IAChBt4B,EAAOk4B,EAAS9jD,OAAO,EAAGkkD,IAEvB,IAAMt4B,GAGjB02B,wBAAyB,SAASpuB,GAC9B,GACI2T,GADAhuC,EAAU,GAAI3L,IAAG4L,OAwBrB,OArBI5L,IAAGuJ,OAAOy8B,IAEV2T,EAAS,GAAIjuC,YACbiuC,EAAO4c,UAAY,SAASznD,GACxB,GAAIA,EAAExC,OAAOkwB,aAAe9wB,WAAW8qD,KACnC,GAAI1nD,EAAExC,OAAOnC,MACTwB,EAAQK,QAAQ8C,EAAExC,OAAOnC,WAExB,CACD,GAAI41C,GAAY//C,GAAG4+C,SAASG,IAAIW,UAAU9nC,OAAO9I,EAAExC,OAAO3J,OAC1DgJ,GAAQG,QAAQ9L,GAAG4+C,SAASkH,OAAO/F,GAAWp5C,cAI1DgzC,EAAO1tC,kBAAkB+5B,KAGzBA,EAAOA,GAAQ,GACfr6B,EAAQG,QAAQ9L,GAAG4+C,SAASkH,OAAO9f,GAAMr/B,aAGtCgF,GAGX8qD,SAAU,SAASvN,EAAMY,GACrB,MAAO9pD,IAAG0nD,GAAGC,KAAKqE,mBAAmB9C,GAAQ,IACzCY,EAAS,oBAGjBuJ,gBAAiB,SAASX,GACtB,GAAIgE,GAAmBpD,EAAG+C,oBAAoB3D,GAC1CxJ,EAAOlpD,GAAG0nD,GAAGC,KAAK4C,gBAAgBmI,EAAcxJ,KAAMwJ,EAAcvJ,OACpEwN,EAAgB32D,GAAG4+C,SAASkH,OAAO4Q,GAAkB/vD,WACrDiwD,EAAQtD,EAAGmD,SAAS/D,EAAcxJ,KAAMhxC,EAAQw6C,cAAc5I,OAGlE,QACI2J,OAAQzzD,GAAG8H,OAHY,+BAGiBohD,EAAM0N,EAAOD,GACrDhD,IAAK3zD,GAAG8H,OAJe,+BAIcohD,EAAM0N,EAAOF,KAI1DlD,iBAAkB,SAASZ,GACvB,GAAIW,GAAgB,EAUpB,OARAX,GAAYrpB,QAAQ,SAAS0pB,EAAYjwD,GACrCuwD,GAAiBN,EAAW7pD,cAExBpG,EAAM4vD,EAAY7sD,OAAS,IAC3BwtD,GAAiB,OAIlBA,GAGXuB,eAAgB,SAAS3C,EAAsBU,EAAY4B,GACvD,GAGIoC,GAASC,EAAeC,EAAsBC,EAH9C5H,EAAYwB,EAAoB1uC,MAAMktC,UACtC6H,EAAiB,oCACjBC,EAAUD,EAAehzD,KAAK4uD,EAGlCgE,GAAU72D,GAAG4+C,SAASgI,WAAWsQ,EAAQ,GAAI,OAAS9H,GACtD0H,EAAgB92D,GAAG4+C,SAASgI,WAAWsQ,EAAQ,GAAIL,GACnDE,EAAuB/2D,GAAG4+C,SAASgI,WAAW,KAAMkQ,GACpDE,EAAah3D,GAAG4+C,SAASgI,WAAW,eAAgBmQ,GAEpDzE,EAAgBH,EAAsBnyD,GAAG4+C,SAASgI,WAAWiM,EAAYmE,GAAavC,IAG1FO,WAAY,SAAShM,EAAQyL,EAAiBjJ,EAAkBC,GAC5D,GAgBIyL,GAASL,EAASC,EAAeC,EAAsBC,EAhBvD1B,EAAY/jD,KAAK+qB,UAAU0sB,GAC3BuM,EAAkBv1D,GAAG4+C,SAAS4B,IAAIU,KAAK1vC,MAAM8jD,GAC7CE,EAAex1D,GAAG4+C,SAAS4B,IAAI4C,OAAO9mB,UAAUi5B,GAChDnG,EAAYwB,EAAoB1uC,MAAMktC,UACtC+H,EAAoB,mCACpBC,EAAuB,WACnB,GAAIC,GAAa,IAQjB,OAPAr3D,IAAG+C,KAAKimD,EAAOC,WAAY,SAASx5C,EAAK6nD,GACrC,GAAIr0D,GAAMq0D,EAAU,mBACpB,IAAIr0D,EAEA,MADAo0D,GAAap0D,GACN,IAGRo0D,IAIfH,GAAUC,EAAkBlzD,KAAKmzD,GACjCP,EAAU72D,GAAG4+C,SAASgI,WAAWsQ,EAAQ,GAAI,OAAS9H,GACtD0H,EAAgB92D,GAAG4+C,SAASgI,WAAWsQ,EAAQ,GAAIL,GACnDE,EAAuB/2D,GAAG4+C,SAASgI,WAAW,KAAMkQ,GACpDE,EAAah3D,GAAG4+C,SAASgI,WAAW,eAAgBmQ,GAEpDtC,EAAgB3oD,SACZk9C,OAAQwM,EACR9J,UAAW1rD,GAAG4+C,SAASgI,WAAW4O,EAAcwB,GAAYrwD,YAC7D6kD,EAAkBC,IAIjCzrD,IAAG6B,OAAOqW,EAASJ,GAAG;mBACtB84C,EAAsB14C,EAAQw6C,cAAc9B,oBA0M5C7lB,EAAY/qC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGg6B,eAC/B6C,aAAc,mBACd7V,OAAQ9O,EAAQ8O,OAChBqV,YAAa,kCACb7U,eACItF,IAAK,WACD,MAAOhK,GAAQw6C,cAAc10C,WAGrCuJ,YAAarP,EAAQqP,YACrBL,eAAgBhP,EAAQgP,eACxBI,cAAepP,EAAQw6C,cAAcprC,cACrCnhB,IAAK+R,EAAQ/R,IACbilB,WAAY2mC,EACZtqC,KAAMvP,EAAQuP,QAGlBznB,GAAG6B,OAAOxB,MASNk3D,aAAc,SAASn9C,EAAIo6C,GACvB,GAGIgD,GAHAz5C,EAASy2C,EACTrC,EAAuBqC,EAAWrC,qBAClCsC,EAAkB,GAAIz0D,IAAG4L,OAoD7B,OAjDsC,KAAlCsM,EAAQw6C,cAAc7/C,UACtB2kD,GAAelE,IAAI,IAGnB1C,EAAoB1uC,MAAMktC,WAAapvD,GAAG4+C,SACtCgS,EAAoB1uC,MAAM+nC,WAAW1rB,UAAYD,KAAKgG,MACtDiwB,EAA6Bn6C,EAAIo6C,EAAYC,GAI7C7D,EAAoBC,YAAY95C,KAAK,WACjCw9C,EAA6Bn6C,EAAIo6C,EAC7BC,EACA7D,EAAoB1uC,MAAMmnC,UAC1BuH,EAAoB1uC,MAAMsnC,eAC/B,SAASnzB,GACRne,EAAQ/R,IAAI,qFAAsF,SAClGsuD,EAAgBzoD,QAAQ,oDAKhCkM,EAAQ/R,IAAI,uCAAyCiU,GAEjD+3C,EACAA,EAAqByC,UAAUx6C,GAAIrD,KAAK,SAAS89C,GAC7C92C,GAAU2G,QAASmwC,EAAmB4C,iBACtC1sB,EAAUtN,cAAcrjB,GACnB0jB,WAAW/f,GACXggB,gBAAgBy5B,GAChBr7B,QACN,SAAUma,GACTp+B,EAAQ/R,IAAI,kCAAmC,SAC/CsuD,EAAgBzoD,QAAQ,oCAI5B++B,EAAUtN,cAAcrjB,GACnB0jB,WAAW/f,GACXggB,gBAAgBy5B,GAChBr7B,OAGT+1B,EAAkB93C,IACdzO,QAAS8oD,EACTtC,qBAAsBA,IAIvBsC,GAGXiD,sBAAuB,SAASn3D,EAAMooD,EAAQuG,EAAMz/C,GAChD,GACIskD,GAAUM,EAASh4B,EAAa83B,EAASwD,EADzCjzC,IAGJ,QACIuZ,YAAa,SAAS25B,GAElB,MADAlzC,GAAUkzC,EACHv3D,MAGXw3D,aAAc,SAASC,GAEnB,MADA/D,GAAW+D,EACJz3D,MAGX03D,YAAa,SAASC,GAElB,MADA3D,GAAU2D,EACH33D,MAGX43D,gBAAiB,SAASC,GAEtB,MADA77B,GAAc67B,EACP73D,MAGX83D,YAAa,SAASC,GAElB,MADAjE,GAAUiE,EACH/3D,MAGXu0D,UAAW,SAASx6C,GAChB,GAAIovC,GAAeoH,EAAoB1uC,MAAMsnC,aACzC79C,EAAU,GAAI3L,IAAG4L,QACjBkgD,EAAe,GAAIxtB,MAAKA,KAAKgG,MAAQpsB,EAAQw6C,cAAcvJ,MAuC/D,OArCAzkC,GAAQ,cAAgBonC,EAAauM,cAEjC7O,IACA9kC,EAAQ1kB,GAAG0nD,GAAGC,KAAKS,0BAA4BoB,GAGnD+I,EAAyBn4C,EAAIlC,EAAQw6C,cAAc7/C,SAC/C81C,OAAQA,EACR0L,QAASA,EACTh4B,YAAaA,EACb3X,QAASA,EACTwqC,KAAMA,EACNz/C,IAAKA,EACL0kD,QAASA,EACT5zD,KAAMA,EACNwzD,SAAUA,IACXh9C,KAAK,SAASuhD,GACbX,EAAYW,EACZ3sD,EAAQG,SACJ4Y,QAAU,WAMN,MALI2X,KACA3X,EAAQ,gBAAkB2X,SAGvB3X,GAAQ4vC,KACR5vC,KAEXwkC,KAAMyO,EAAUzO,KAChBuJ,SAAUkF,EAAUlF,SACpBc,cAAeoE,EAAUpE,cACzBwB,aAAc4C,EAAUhF,OACxB8E,gBAAiBE,EAAUjE,aAEhC,SAAUpd,GACT3qC,EAAQK,QAAQsqC,KAGb3qC,GAGXgpD,WAAY,WACR,MAAO30D,IAAG6B,UAAW6iB,IAGzBywC,YAAa,WACT,MAAOwC,IAAaA,EAAUlF,UAGlCyC,eAAgB,WACZ,MAAOyC,IAAaA,EAAUzO,MAGlCsK,iBAAkB,WACd,MAAOmE,IAAaA,EAAUpE,oBAOlDvzD,GAAG0nD,GAAGoK,cAAcprD,UAAUmtD,cAC1BG,mBAAoB,qBACpBC,mBAAoB,qBACpBH,gBAAiB,kBACjBI,iBAAkB,oBC5nBtBl0D,GAAG6uD,2BAA6B,SAAS/2C,GACrC,YAmBA,SAASygD,GAAsBn+C,EAAIyN,EAAUC,GACzC,GAII0wC,GAJA7sD,EAAU8sD,EAAgBr+C,GAC1B43C,EAAenqC,EAAS+uB,aACxB8hB,GAAoB5sD,SAAS,GAC7B6sD,GAAoB7sD,SAAS,SAG1B2sD,GAAgBr+C,GAEvBlC,EAAQ/R,IAAInG,GAAG8H,OAAO,kFAAmFsS,EAAI43C,GAE7G,KACIwG,EAAiBx4D,GAAGqR,UAAU2gD,GAM1BlqC,GAAY0wC,IAAmBA,EAAeruD,OAASquD,EAAe1sD,WAAY,IAClFoM,EAAQ/R,IAAI,qDAAsD,SAClEwF,EAAQK,QAAQhM,GAAG6B,OAAO22D,EAAgBG,MAG1CzgD,EAAQ/R,IAAI,kDACZwF,EAAQG,QAAQ9L,GAAG6B,OAAO22D,EAAgBE,KAGlD,MAAOvuD,GAEC2d,GACA5P,EAAQ/R,IAAInG,GAAG8H,OAAO,kFAAmFsS,GAAK,SAC9GzO,EAAQK,QAAQ2sD,KAGhBzgD,EAAQ/R,IAAI,kDACZwF,EAAQG,QAAQ4sD,KApD5B,GAAI3tB,GACA0tB,KACAvgD,GACI8O,OAAQ,OACRhJ,SAAU,KACVkJ,eAAgB,EAChBI,iBACAC,eACAE,MACI6I,UAAU,EACV2I,iBAAiB,GAErB9yB,IAAK,SAAS4B,EAAK1B,KAG3BrG,IAAG6B,OAAOqW,EAASJ,GA0CnBizB,EAAY/qC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGg6B,eAC/B6C,aAAc,mBACd7V,OAAQ9O,EAAQ8O,OAChBQ,eACItF,IAAK,WACD,MAAOhK,GAAQ8F,WAGvBuJ,YAAarP,EAAQqP,YACrBL,eAAgBhP,EAAQgP,eACxBI,cAAepP,EAAQoP,cACvBnhB,IAAK+R,EAAQ/R,IACbilB,WAAYmtC,EACZ9wC,KAAMvP,EAAQuP,QAGlBznB,GAAG6B,OAAOxB,MAUN0uD,mBAAoB,SAAS30C,EAAIiB,GAC7B,GAAI1P,GAAU,GAAI3L,IAAG4L,OAUrB,OARAsM,GAAQ/R,IAAI,sDAAwDiU,GAEpE2wB,EAAUtN,cAAcrjB,GACnB0jB,WAAWziB,GACX8gB,OAELs8B,EAAgBr+C,GAAMzO,EAEfA,MClGnB3L,GAAG0nD,GAAGkR,+BAAiC,SAAS9gD,GAC5C,YAyCA,SAAS68C,GAAWv6C,GAChB,GAKI+3C,GALAxJ,EAASzwC,EAAQwwC,UAAUtuC,GAC3B80C,EAAOh3C,EAAQk4C,QAAQh2C,GACvBsK,KACA/Y,EAAU,GAAI3L,IAAG4L,QACjB6D,EAAMyI,EAAQ63C,OAAO31C,EAgCzB,OA7BAsK,GAAQ,aAAexM,EAAQg4C,SAAShuC,IAAI9H,GAExClC,EAAQ2xC,oBACRnlC,EAAQ1kB,GAAG0nD,GAAGC,KAAKK,+BAAiChoD,GAAG0nD,GAAGC,KAAKM,gCAG/D/vC,EAAQ6xC,uBACRrlC,EAAQ1kB,GAAG0nD,GAAGC,KAAKO,mCAAqCloD,GAAG0nD,GAAGC,KAAKQ,oCAGvEzjC,EAAQ1kB,GAAG0nD,GAAGC,KAAKE,iBAAmB3vC,EAAQye,eAAiB/lB,mBAAmBsH,EAAQoI,QAAQlG,IAElGpa,GAAG+C,KAAKmV,EAAQqP,YAAYrF,IAAI9H,GAAK,SAASrY,EAAMkB,GAC5CjD,GAAG2F,QAAQ3F,GAAG0nD,GAAGC,KAAKc,uBAAwB1mD,IAAS,EACvD2iB,EAAQ3iB,GAAQkB,EAGhByhB,EAAQ1kB,GAAG0nD,GAAGC,KAAKE,iBAAmB9lD,GAAQ6O,mBAAmB3N,KAIzEkvD,EAAuB0G,EAA0BnB,sBAC5CmB,EAA0BhF,aAAaG,mBAAoBrL,EAAQuG,EAAMz/C,GACzEwoD,gBAAgB//C,EAAQ4gD,eAAe1+C,IACvC6jB,YAAYvZ,GAGjBm0C,EAA0BtB,aAAan9C,GAAK+3C,qBAAsBA,IAAuBp7C,KAAKpL,EAAQG,QAASH,EAAQK,SAEhHL,EAWX,QAASotD,GAA8B3+C,EAAIiR,EAAKvD,GAC5C,GAGIkxC,GAAkBC,EAAiBlF,EAAUjuC,EAAcpL,EAH3D/O,EAAUutD,EAAwB9+C,GAClC++C,EAAY,GAAIC,WAChBC,EAAcF,EAAUG,gBAAgBjuC,EAAIurB,aAAc,yBAGvDsiB,GAAwB9+C,GAG3B0N,GACApN,EAAS2Q,EAAI3Q,OAEbu+C,EAAkBI,EAAYv2D,qBAAqB,WAC/Cm2D,EAAgBlzD,OAAS,IACzB+f,EAAemzC,EAAgB,GAAGr1D,eAKtCo1D,EAAmBK,EAAYv2D,qBAAqB,YAChDk2D,EAAiBjzD,OAAS,EAC1BguD,EAAWiF,EAAiB,GAAGp1D,YAG/BkiB,EAAe,kCAKN3hB,SAAb4vD,GACIjuC,EACA5N,EAAQ/R,IAAInG,GAAG8H,OAAO,8EAA+EsS,EAAI0L,GAAe,SAGxH5N,EAAQ/R,IAAInG,GAAG8H,OAAO,oFAAqFsS,EAAIM,GAAS,SAG5H/O,EAAQK,QAAQ,qCAAsCqf,KAGtDnT,EAAQ/R,IAAInG,GAAG8H,OAAO,wEAAyEsS,EAAI25C,IACnGpoD,EAAQG,QAAQioD,EAAU1oC,IAhIlC,GAAI0f,GAmBA8tB,EAlBAK,KACAhhD,GACIye,cAAe,aACf3P,OAAQ,OACRQ,cAAe,KACfD,YAAa,KACbmrC,cAAe,KACfxC,SAAU,KACVrG,mBAAmB,EACnBE,sBAAsB,EACtB7iC,eAAgB,EAChB4xC,eAAgB,SAAS1+C,KACzBsuC,UAAW,SAAStuC,KACpBg2C,QAAS,SAASh2C,KAClB21C,OAAQ,SAAS31C,KACjBkG,QAAS,SAASlG,KAClBjU,IAAK,SAAS4B,EAAK1B,KAI3BrG,IAAG6B,OAAOqW,EAASJ,GAEnB+gD,EAA4B,GAAI74D,IAAG0nD,GAAGoK,eAClCtqC,cAAetP,EAAQsP,cACvBkrC,cAAex6C,EAAQw6C,cACvBjrC,KAAMvP,EAAQuP,KACdthB,IAAK+R,EAAQ/R,MAyGjB4kC,EAAY/qC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGg6B,eAC/BhT,OAAQ9O,EAAQ8O,OAChBqV,YAAa,KACb7U,cAAetP,EAAQsP,cACvBN,eAAgBhP,EAAQgP,eACxB6V,oCAAoC,EACpC52B,IAAK+R,EAAQ/R,IACbilB,WAAY2tC,EACZ97B,yBACIK,MAAO,SAIft9B,GAAG6B,OAAOxB,MASN87B,KAAM,SAAS/hB,GACX,GAAIzO,GAAU,GAAI3L,IAAG4L,OAYrB,OAVA+oD,GAAWv6C,GAAIrD,KAAK,SAAS2N,EAAS+tC,GAClCv6C,EAAQ/R,IAAI,uDAAyDiU,GAErE8+C,EAAwB9+C,GAAMzO,EAC9Bo/B,EAAUtN,cAAcrjB,GACnBwjB,SAAS60B,GACTx0B,YAAYvZ,GACZyX,QACNxwB,EAAQK,SAEJL,MC1KnB3L,GAAG0nD,GAAG6R,+BAAiC,SAASzhD,GAC5C,YAkCA,SAAS68C,GAAWv6C,EAAI25C,EAAU/tB,GAC9B,GACIr6B,GAAU,GAAI3L,IAAG4L,QACjB+8C,EAASzwC,EAAQwwC,UAAUtuC,GAC3B80C,EAAOh3C,EAAQk4C,QAAQh2C,GACvB+3C,EAAuB0G,EAA0BnB,sBAC5CmB,EAA0BhF,aAAaI,mBAAoBtL,EAAQuG,EAAMh3C,EAAQ63C,OAAO31C,IACxFy9C,aAAa9D,GACbgE,YAAY/xB,GACZiyB,gBAAgB,iCAKzB,OAFAY,GAA0BtB,aAAan9C,GAAK+3C,qBAAsBA,IAAuBp7C,KAAKpL,EAAQG,QAASH,EAAQK,SAEhHL,EAWX,QAAS6tD,GAA8Bp/C,EAAIiR,EAAKvD,GAC5C,GAAInc,GAAU8tD,EAAwBr/C,GAClC++C,EAAY,GAAIC,WAChBzQ,EAASzwC,EAAQwwC,UAAUtuC,GAE3Bi/C,GADMnhD,EAAQ63C,OAAO31C,GACP++C,EAAUG,gBAAgBjuC,EAAIurB,aAAc,oBAC1D8iB,EAAYL,EAAYv2D,qBAAqB,UAC7C62D,EAASN,EAAYv2D,qBAAqB,aAEvC22D,GAAwBr/C,GAE/BlC,EAAQ/R,IAAInG,GAAG8H,OAAO,yCAA0CujB,EAAI3Q,OAAQ2Q,EAAIurB,eAG5E9uB,EACA5P,EAAQ/R,IAAInG,GAAG8H,OAAO,kEAAmEsS,EAAIiR,EAAI3Q,QAAS,SAItGg/C,EAAU3zD,QAAU4zD,EAAO5zD,OACvB2zD,EAAU,GAAG91D,cAAgB+kD,IAC7B7gC,GAAU,EACV5P,EAAQ/R,IAAInG,GAAG8H,OAAO,wEAAyEsS,GAAK,WAMxG0N,GAAU,EACV5P,EAAQ/R,IAAInG,GAAG8H,OAAO,qFAAsFsS,GAAK,UAIrH0N,EACAnc,EAAQK,QAAQ,oCAAqCqf,GAGrD1f,EAAQG,WAAYuf,GAQ5B,QAASuuC,GAAuBC,GAC5B,GAAI7M,GAAMrjD,SAASmwD,eAAeC,eAAe,KAAM,0BAA2B,KAyBlF,OAtBAF,GAAY5gB,KAAK,SAASC,EAAGC,GACzB,MAAOD,GAAEhQ,KAAOiQ,EAAEjQ,OAItBlpC,GAAG+C,KAAK82D,EAAa,SAAS72D,EAAKg3D,GAC/B,GAAI9wB,GAAO8wB,EAAU9wB,KACjBkkB,EAAO4M,EAAU5M,KACjB6M,EAASjN,EAAIpjD,cAAc,QAC3BswD,EAAYlN,EAAIpjD,cAAc,cAC9BuwD,EAAgBnN,EAAIoN,eAAelxB,GACnCmxB,EAAarN,EAAIoN,eAAehN,GAChCkN,EAAStN,EAAIpjD,cAAc,OAE/B0wD,GAAOlpD,YAAYipD,GACnBH,EAAU9oD,YAAY+oD,GACtBF,EAAO7oD,YAAY8oD,GACnBD,EAAO7oD,YAAYkpD,GACnBt6D,GAAGgtD,GAAK5pD,WAAW,GAAGgO,YAAY6oD,MAI/B,GAAIM,gBAAgBC,kBAAkBxN,GAhIjD,GAAIjiB,GAaA8tB,EAZAY,KACAvhD,GACI8O,OAAQ,OACRqV,YAAa,WACb7U,cAAe,KACfkrC,cAAe,KACfxrC,eAAgB,EAChBwhC,UAAW,SAAStuC,KACpBg2C,QAAS,SAASh2C,KAClB21C,OAAQ,SAAS31C,KACjBjU,IAAK,SAAS4B,EAAK1B,KAI3BrG,IAAG6B,OAAOqW,EAASJ,GAGnB+gD,EAA4B,GAAI74D,IAAG0nD,GAAGoK,eAClCtqC,cAAetP,EAAQsP,cACvBkrC,cAAex6C,EAAQw6C,cACvBjrC,KAAMvP,EAAQuP,KACdthB,IAAK+R,EAAQ/R,MA6GjB4kC,EAAY/qC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGg6B,eAC/BhT,OAAQ9O,EAAQ8O,OAChBqV,YAAa,iCACb7U,cAAetP,EAAQsP,cACvBN,eAAgBhP,EAAQgP,eACxB6V,oCAAoC,EACpC52B,IAAK+R,EAAQ/R,IACbilB,WAAYouC,EACZv8B,yBACIK,MAAO,SAIft9B,GAAG6B,OAAOxB,MASN87B,KAAM,SAAS/hB,EAAI25C,EAAU8F,GACzB,GAAIluD,GAAU,GAAI3L,IAAG4L,QACjBo6B,EAAO4zB,EAAuBC,EAelC,OAbAlF,GAAWv6C,EAAI25C,EAAU/tB,GAAMjvB,KAAK,SAAS2N,EAAS+tC,GAClDv6C,EAAQ/R,IAAI,uDAAyDiU,GAErEq/C,EAAwBr/C,GAAMzO,QACvB+Y,GAAQ,gBAEfqmB,EAAUtN,cAAcrjB,GACnBwjB,SAAS60B,GACTx0B,YAAYvZ,GACZwZ,YAAY8H,GACZ7J,QACNxwB,EAAQK,SAEJL,MC7KnB3L,GAAG0nD,GAAG+S,4BAA8B,SAAS3iD,GACzC,YAkCA,SAAS68C,GAAWv6C,EAAI25C,GACpB,GACIpoD,GAAU,GAAI3L,IAAG4L,QACjB+8C,EAASzwC,EAAQwwC,UAAUtuC,GAC3B80C,EAAOh3C,EAAQk4C,QAAQh2C,GACvB+3C,EAAuB0G,EAA0BnB,sBAC5CmB,EAA0BhF,aAAaC,gBAAiBnL,EAAQuG,EAAMh3C,EAAQ63C,OAAO31C,IACrFy9C,aAAa9D,EAKtB,OAFA8E,GAA0BtB,aAAan9C,GAAK+3C,qBAAsBA,IAAuBp7C,KAAKpL,EAAQG,QAASH,EAAQK,SAEhHL,EAWX,QAAS+uD,GAA2BtgD,EAAIiR,EAAKvD,GACzC,GAGI6yC,GAHAxB,EAAY,GAAIC,WAChBC,EAAcF,EAAUG,gBAAgBjuC,EAAIurB,aAAc,mBAC1DgkB,EAAWvB,EAAYv2D,qBAAqB,QAGhDoV,GAAQ/R,IAAInG,GAAG8H,OAAO,sCAAuCujB,EAAI3Q,OAAQ2Q,EAAIurB,eAGzE9uB,EACA5P,EAAQ/R,IAAInG,GAAG8H,OAAO,+DAAgEsS,EAAIiR,EAAI3Q,QAAS,SAInGkgD,EAAS70D,QACT+hB,GAAU,EACV6yC,EAActB,EAAYv2D,qBAAqB,WAAW,GAAGc,YAC7DsU,EAAQ/R,IAAInG,GAAG8H,OAAO,8DAA+DsS,EAAIugD,GAAc,UAGvGziD,EAAQ/R,IAAInG,GAAG8H,OAAO,8CAA+CsS,IA3EjF,GAAI2wB,GAWA8tB,EAVA3gD,GACI8O,OAAQ,SACRQ,cAAe,KACfkrC,cAAe,KACfxrC,eAAgB,EAChBwhC,UAAW,SAAStuC,KACpBg2C,QAAS,SAASh2C,KAClB21C,OAAQ,SAAS31C,KACjBjU,IAAK,SAAS4B,EAAK1B,KAI3BrG,IAAG6B,OAAOqW,EAASJ,GAGnB+gD,EAA4B,GAAI74D,IAAG0nD,GAAGoK,eAClCtqC,cAAetP,EAAQsP,cACvBkrC,cAAex6C,EAAQw6C,cACvBjrC,KAAMvP,EAAQuP,KACdthB,IAAK+R,EAAQ/R,MA4DjB4kC,EAAY/qC,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGg6B,eAC/BmD,cAAe,UACfnW,OAAQ9O,EAAQ8O,OAChBqV,YAAa,KACb7U,cAAetP,EAAQsP,cACvBN,eAAgBhP,EAAQgP,eACxB6V,oCAAoC,EACpC52B,IAAK+R,EAAQ/R,IACbilB,WAAYsvC,EACZz9B,yBACIG,QAAS,SAIjBp9B,GAAG6B,OAAOxB,MAON87B,KAAM,SAAS/hB,EAAI25C,GACfY,EAAWv6C,EAAI25C,GAAUh9C,KAAK,SAAS2N,EAAS+tC,GAC5Cv6C,EAAQ/R,IAAI,oDAAsDiU,GAClE2wB,EAAUtN,cAAcrjB,GACnBwjB,SAAS60B,GACTx0B,YAAYvZ,GACZyX,aC5GrBn8B,GAAG0nD,GAAG5gB,iBAAmB,SAASzrB,EAAMqjB,GACpC,YAEA,IAAIpe,GAAUoe,EAAMpe,QAChBna,EAAMu4B,EAAMv4B,IACZijD,EAAa/tC,EAAK+tC,WAElByR,EAAcx/C,EAAKqtC,UACnBoS,EAAYz/C,EAAK+0C,QACjB2K,EAAe1/C,EAAKi1C,WACpB35B,EAAgBtb,EAAKsb,cACrBpP,EAAclM,EAAKkM,YACnBC,EAAgBnM,EAAKmM,cACrB0oC,EAAW70C,EAAK60C,SAChBrG,EAAoBxuC,EAAK4zC,iBAAiBpF,kBAC1CC,EAASzuC,EAAK4zC,iBAAiBnF,OAC/BC,EAAuB1uC,EAAK4zC,iBAAiBlF,qBAC7C9/B,EAAa5O,EAAK4O,WAClByhC,EAAY1rD,GAAG6B,QAAQioD,OAAQA,EAAQX,MAAOC,GAAa/tC,EAAKqwC,WAChEv8B,EAAU9uB,KACVuwD,EAAsBv1C,EAAKqwC,UAAUkF,oBAErCtxB,GAGI07B,QAAS,SAAS5gD,GACd,GAAI25C,GAAW5kC,EAAQsa,oBAAoBrvB,GAAI25C,SAC3CkH,EAAU9rC,EAAQsa,oBAAoBrvB,GAAI8gD,MAC1Cv4D,EAAS,GAAI3C,IAAG4L,OAUpB,OARAuvD,GAAWC,kBAAkBj/B,KAAK/hB,EAAI25C,EAAUkH,GAASlkD,KACrDpU,EAAOmJ,QAEP,SAAiB8V,EAAQyJ,GACrB1oB,EAAOqJ,QAAQhC,EAAOwN,KAAK4C,EAAIiR,GAAK2G,SAAU3G,KAI/C1oB,GAOX6U,KAAM,SAAS4C,EAAIiR,EAAKkU,GACpB,GACI6tB,GADAp7B,EAAWhoB,EAAOgoB,SAASxgB,MAAM4I,EAAIiR,EAGrC2G,GAASlmB,UACTshD,EAAO/hC,EAAIsmC,kBAAkB,QAExBxiC,EAAQsa,oBAAoBrvB,GAAI8gD,QACjC/rC,EAAQsa,oBAAoBrvB,GAAI8gD,UAEpC/rC,EAAQsa,oBAAoBrvB,GAAI8gD,MAAMh4D,MAAMgmC,KAAM3J,EAAW,EAAG6tB,KAAMA,MAe9EiO,YAAa,SAASjhD,EAAImlB,EAAUj0B,GAChC,GACIq9C,GAAS3+C,EAAO2+C,OAAOroC,QAAQlG,GAC/B80C,EAAOllD,EAAOklD,KAAK5uC,QAAQlG,GAC3B3K,EAAMzF,EAAOyF,IAAI6rD,QAAQlhD,GACzBzO,EAAU,GAAI3L,IAAG4L,QACjBumD,EAAuBgJ,EAAWI,cAAc7D,sBAC3CyD,EAAWI,cAAc1H,aAAaK,iBAAkBvL,EAAQuG,EAAMz/C,GACtE0oD,YAAY54B,EAAW,GACvBw4B,YAAYzsD,GACZusD,aAAa1oC,EAAQsa,oBAAoBrvB,GAAI25C,SAKtD,OAFAoH,GAAWI,cAAchE,aAAan9C,EAAK,IAAMmlB,GAAW4yB,qBAAsBA,IAAuBp7C,KAAKpL,EAAQG,QAASH,EAAQK,SAEhIL,GAGX6vD,IAAK,SAASphD,EAAImlB,GACd,GAAIlU,GAAM8D,EAAQwZ,WAAWvuB,EAAImlB,GAC7BvT,EAAYmD,EAAQqQ,cAAcplB,EAAImlB,GACtCk8B,EAASpgD,EAAKmM,cAActF,IAAI9H,GAChCzO,EAAU,GAAI3L,IAAG4L,OAmCrB,OA/BA0zB,GAAQ+7B,YAAYjhD,EAAImlB,EAAUvT,EAAU1gB,MAAMyL,KAAK,SAAS2N,EAAS+tC,GACrE,GAAIpnC,EAAI2V,WACJ76B,EAAInG,GAAG8H,OAAO,4FAA6FsS,EAAImlB,IAC/G5zB,EAAQK,SAAS7B,MAAO,+BAEvB,CACD,GAAIoxB,GAAMkgC,EAAS,IAAMhJ,CACzBtjC,GAAQ4a,yBAAyB3vB,EAAImlB,EAAUvT,EAAUxQ,MACzDxR,EAAO0xD,MAAMthD,EAAIiR,EAAKkU,GAAUxoB,KAAKpL,EAAQG,QAASH,EAAQK,SAC9Dqf,EAAI4Q,KAAK,MAAOV,GAAK,EAErB,IAAIogC,IAAiB,CACrB37D,IAAG+C,KAAK2hB,EAAS,SAAS3iB,EAAMkB,GACf,iBAATlB,IACA45D,GAAiB,GAGrBtwC,EAAIyR,iBAAiB/6B,EAAMkB,KAI1B04D,GACDtwC,EAAIyR,iBAAiB,eAAgB,IAGzCzR,EAAI8Q,KAAKnQ,EAAU1gB,QAExB,WACCK,EAAQK,SAAS7B,MAAO,8BAA+BkhB,KAGpD1f,GAGXwwB,KAAM,SAAS/hB,EAAImlB,GACf,GAAI5zB,GAAU,GAAI3L,IAAG4L,OAcrB,OAZA0zB,GAAQs8B,MAAMxhD,GAAIrD,KAEd,WACIuoB,EAAQk8B,IAAIphD,EAAImlB,GAAUxoB,KAAKpL,EAAQG,QAASH,EAAQK,UAI5D,SAAS8Z,EAAcuF,GACnB1f,EAAQK,SAAS7B,MAAO2b,GAAeuF,KAIxC1f,GAUXiwD,MAAO,SAASxhD,GACZ,GAAIzO,GAAU,GAAI3L,IAAG4L,QACjBmoD,EAAW5kC,EAAQsa,oBAAoBrvB,GAAI25C,SAC3C8H,EAAkB,GAAI77D,IAAG4L,OA0B7B,OAxBKmoD,GAeIA,YAAoB/zD,IAAG4L,QAC5BmoD,EAASh9C,KAAK,SAASg9C,GACnBpoD,EAAQG,QAAQioD,KAIpBpoD,EAAQG,QAAQioD,IApBhB5kC,EAAQsa,oBAAoBrvB,GAAI25C,SAAW8H,EAC3CV,EAAWW,kBAAkB3/B,KAAK/hB,GAAIrD,KAClC,SAASg9C,GACL5kC,EAAQsa,oBAAoBrvB,GAAI25C,SAAWA,EAC3C8H,EAAgB/vD,QAAQioD,GACxBpoD,EAAQG,QAAQioD,IAEpB,SAAS19B,EAAUhL,GACf8D,EAAQsa,oBAAoBrvB,GAAI25C,SAAW,KAC3CpoD,EAAQK,QAAQqqB,EAAUhL,GAC1BwwC,EAAgB7vD,QAAQqqB,EAAUhL,MAavC1f,IAIfwvD,GACIY,eAAgB,GAAI/7D,IAAG0nD,GAAG+S,6BACtBjzC,cAAeA,EACfkrC,cAAehH,EACfjkC,KAAMpM,EAAKoM,KACXthB,IAAKA,EACLuiD,UAAW,SAAStuC,GAChB,MAAOpQ,GAAO2+C,OAAOroC,QAAQlG,IAEjCg2C,QAAS,SAASh2C,GACd,MAAOpQ,GAAOklD,KAAK5uC,QAAQlG,IAE/B21C,OAAQ,SAAS31C,GACb,MAAOpQ,GAAOyF,IAAI6rD,QAAQlhD,MAIlCghD,kBAAmB,GAAIp7D,IAAG0nD,GAAG6R,gCACzB/xC,cAAeA,EACfkrC,cAAehH,EACfjkC,KAAMpM,EAAKoM,KACXthB,IAAKA,EACLuiD,UAAW,SAAStuC,GAChB,MAAOpQ,GAAO2+C,OAAOroC,QAAQlG,IAEjCg2C,QAAS,SAASh2C,GACd,MAAOpQ,GAAOklD,KAAK5uC,QAAQlG,IAE/B21C,OAAQ,SAAS31C,GACb,MAAOpQ,GAAOyF,IAAI6rD,QAAQlhD,MAIlC0hD,kBAAmB,GAAI97D,IAAG0nD,GAAGkR,gCACzBjiC,cAAeA,EACfnP,cAAeA,EACfD,YAAaA,EACbmrC,cAAehH,EACfwE,SAAUA,EACVrG,kBAAmBA,EACnBE,qBAAsBA,EACtBtiC,KAAMpM,EAAKoM,KACXthB,IAAKA,EACL2yD,eAAgB,SAAS1+C,GACrB,MAAO+U,GAAQqa,aAAapvB,IAEhCsuC,UAAW,SAAStuC,GAChB,MAAOpQ,GAAO2+C,OAAOroC,QAAQlG,IAEjCg2C,QAAS,SAASh2C,GACd,MAAOpQ,GAAOklD,KAAK5uC,QAAQlG,IAE/B21C,OAAQ,SAAS31C,GACb,MAAOpQ,GAAOyF,IAAI6rD,QAAQlhD,IAE9BkG,QAAS,SAASlG,GACd,MAAOkG,GAAQlG,MAIvB4hD,gBAAiB,GAAIh8D,IAAG0nD,GAAGoK,eACvBO,iBAAiB,EACjBK,cAAehH,EACfjkC,KAAMpM,EAAKoM,KACXthB,IAAKA,IAGTo1D,cAAe,GAAIv7D,IAAG0nD,GAAGoK,eACrBtqC,cAAeA,EACfkrC,cAAehH,EACfjkC,KAAMpM,EAAKoM,KACXthB,IAAKA,KAIbk9B,GAUI44B,WAAY,SAAS7hD,GAEjB,GAAIixC,GAAe9jC,EAAYrF,IAAI9H,EAGnC,OAFAixC,GAAa10B,GAAiBrW,EAAQlG,GAE/Bpa,GAAG0nD,GAAGC,KAAKsD,mBACdjtC,SAAUwJ,EAActF,IAAI9H,GAC5BgvC,WAAYA,EACZrrC,OAAQstC,EACR9qD,KAAM4uB,EAAQqa,aAAapvB,GAC3BuuC,OAAQ3+C,EAAO2+C,OAAOroC,QAAQlG,GAC9B3K,IAAK0f,EAAQ0P,oBAAoBzkB,GACjCivC,UAAWuH,EAAoB1uC,MAAMmnC,UACrCG,aAAcoH,EAAoB1uC,MAAMsnC,aACxCF,IAAK4G,EAAShuC,IAAI9H,GAClBmvC,eA1RK,IA2RLI,YAAa1/B,EAAWsH,aACxBq4B,YAAa3/B,EAAWumC,aACxB3G,kBAAmBA,EACnBC,OAAQA,EACRC,qBAAsBA,EACtBC,iBAAkB0B,EAAU74C,QAC5B1M,IAAKA,GAETnG,GAAG4P,KAAKurD,EAAWa,gBAAgBzE,aAAcl3D,KAAM+Z,KAG3D+hB,KAAM,SAAS/hB,GACX,GAAIzO,GAAU,GAAI3L,IAAG4L,QACjByf,EAAM8D,EAAQwZ,WAAWvuB,GACzBvP,EAAaskB,EAAQ3N,QAAQpH,EAWjC,OATA+U,GAAQ4a,yBAAyB3vB,GACjCpQ,EAAO0xD,MAAMthD,EAAIiR,GAAKtU,KAAKpL,EAAQG,QAASH,EAAQK,SAGpDq3B,EAAOu4B,MAAMxhD,EAAIiR,EAAKxgB,GAAYkM,KAAK,SAASmlD,GAC5C/1D,EAAI,8BAAgCiU,GACpCiR,EAAI8Q,KAAK+/B,IACVvwD,EAAQK,SAEJL,GAgBXiwD,MAAO,SAASxhD,EAAIiR,EAAKxgB,GACrB,GAAIkG,GAAW,GAAIjH,UACfkU,EAAWwJ,EAActF,IAAI9H,GAC7BmhB,EAAMvd,EACNrS,EAAU,GAAI3L,IAAG4L,OAqBrB,OAnBAy3B,GAAO44B,WAAW7hD,GAAIrD,KAElB,SAASq0C,GACL//B,EAAI4Q,KAAK,OAAQV,GAAK,GAEtBv7B,GAAG8Q,aAAas6C,EAAWr6C,GAG3BA,EAASxL,OAAO,OAAQsF,GAExBc,EAAQG,QAAQiF,IAIpB,SAAS+U,GACLna,EAAQK,SAAS7B,MAAO2b,MAIzBna,IAIf3B,GAQI2+C,QACIh9C,QAAS,SAASyO,GACd,GAAIzO,GAAU,GAAI3L,IAAG4L,QACjBuwD,EAAehtC,EAAQ2P,cAAc1kB,GAAIuuC,MAY7C,OAVIwT,GACAxwD,EAAQG,QAAQqwD,GAGhBtB,EAAYzgD,GAAIrD,KAAK,SAAS4xC,GAC1Bx5B,EAAQ2P,cAAc1kB,GAAIuuC,OAASA,EACnCh9C,EAAQG,QAAQ68C,IACjBh9C,EAAQK,SAGRL,GAGX2U,QAAS,SAASlG,GACd,MAAO+U,GAAQ2P,cAAc1kB,GAAIuuC,SAIzCuG,MACIvjD,QAAS,SAASyO,GACd,GAAIzO,GAAU,GAAI3L,IAAG4L,QACjBwwD,EAAajtC,EAAQ2P,cAAc1kB,GAAI80C,IAY3C,OAVIkN,GACAzwD,EAAQG,QAAQswD,GAGhBtB,EAAU1gD,GAAIrD,KAAK,SAASm4C,GACxB//B,EAAQ2P,cAAc1kB,GAAI80C,KAAOA,EACjCvjD,EAAQG,QAAQojD,IACjBvjD,EAAQK,SAGRL,GAGX2U,QAAS,SAASlG,GACd,MAAO+U,GAAQ2P,cAAc1kB,GAAI80C,OAIzC13C,KAAM,SAAS4C,EAAIiR,GACf,GAAI2G,GAAWhoB,EAAOgoB,SAASxgB,MAAM4I,EAAIiR,GACrCvD,EAAUkK,EAASlmB,WAAY,CAOnC,OALIgc,IAAW9d,EAAOgoB,SAASqqC,YAAYrqC,EAASpB,QAChDzqB,EAAI,iGAAkG,SACtG6rB,EAASlY,OAAQ,IAIjBhO,SAAUgc,EACVkK,SAAUA,IAIlBviB,KACI9D,QAAS,SAASyO,GACd,GAAIzO,GAAU,GAAI3L,IAAG4L,QACjB6D,EAAM0f,EAAQ0P,oBAAoBzkB,EAuBtC,OApBW,OAAP3K,GACA0f,EAAQ4P,qBAAqB3kB,EAAIzO,GACjCovD,EAAa3gD,EAAIkG,EAAQlG,IAAKrD,KAC1B,SAASulD,GACLntC,EAAQ4P,qBAAqB3kB,EAAIkiD,GACjC3wD,EAAQG,QAAQwwD,IAEpB,SAASrqC,GACL9C,EAAQ4P,qBAAqB3kB,EAAI,MACjCzO,EAAQK,QAAQimB,MAInBjyB,GAAG6W,iBAAiBpH,GACzBA,EAAIsH,KAAKpL,EAAQG,QAASH,EAAQK,SAGlCL,EAAQG,QAAQ2D,GAGb9D,GAGX2vD,QAAS,SAASlhD,GACd,GAAImiD,GAAaptC,EAAQ0P,oBAAoBzkB,EAC7C,OAAOpa,IAAG0nD,GAAGC,KAAK8F,cAAc8O,KAIxCvqC,UACIxgB,MAAO,SAAS4I,EAAIiR,GAChB,GACImxC,GADAxqC,IAGJ,KACI7rB,EAAInG,GAAG8H,OAAO,4CAA6CujB,EAAI3Q,OAAQ2Q,EAAIurB,eA/c1E,MAidGvrB,EAAI3Q,OACJsX,EAASlmB,SAAU,GAGnB0wD,EAAmBxyD,EAAOgoB,SAASyqC,WAAWpxC,EAAIurB,cAE9C4lB,IACAxqC,EAAS7nB,MAAQqyD,EAAiBp2D,QAClC4rB,EAASpB,KAAO4rC,EAAiB5rC,OAI7C,MAAOzmB,GACHhE,EAAI,qDAAuDgE,EAAM/D,QAAU,IAAK,SAGpF,MAAO4rB,IASXyqC,WAAY,SAASC,GACjB,GAIIC,GAASC,EAJT9oB,EAAS,GAAIslB,WACbyD,EAAY/oB,EAAOwlB,gBAAgBoD,EAAgB,mBACnD9B,EAAWiC,EAAU/5D,qBAAqB,SAC1Cg6D,IAGJ,IAAIlC,EAAS70D,OAYT,MAXA42D,GAAUE,EAAU/5D,qBAAqB,QACzC85D,EAAaC,EAAU/5D,qBAAqB,WAExC85D,EAAW72D,SACX+2D,EAAa12D,QAAUw2D,EAAW,GAAGh5D,aAGrC+4D,EAAQ52D,SACR+2D,EAAalsC,KAAO+rC,EAAQ,GAAG/4D,aAG5Bk5D,GAMfT,YAAa,SAASnmC,GAElB,MAAqB,mBAAdA,GACc,gBAAdA,GACc,qBAAdA,GACc,iBAAdA,IAIfprB,MAAO,SAASiT,GACZ,GAAI3D,GAAK2D,EAAO3D,GACZwuB,EAAc7qB,EAAOwhB,SAErB5zB,EAAU,GAAI3L,IAAG4L,OAmBrB,OAjBA5B,GAAOyF,IAAI9D,QAAQyO,GAAIrD,KAAK,WACxB/M,EAAO2+C,OAAOh9C,QAAQyO,GAAIrD,KAAK,WAC3B/M,EAAOklD,KAAKvjD,QAAQyO,GAAIrD,KAAK,WAEN,MAAf6xB,EACAvF,EAAOlH,KAAK/hB,GAAIrD,KAAKpL,EAAQG,QAASH,EAAQK,SAG9CszB,EAAQnD,KAAK/hB,EAAIwuB,GAAa7xB,KAAKpL,EAAQG,QAASH,EAAQK,cAK5E,SAASimB,GACLtmB,EAAQK,SAAS7B,MAAO8nB,MAGrBtmB,GAGX+vD,MAAO,SAASthD,EAAIiR,EAAKud,GACrB,GAAIj9B,GAAU,GAAI3L,IAAG4L,OAmBrB,OAjBAyf,GAAIyQ,mBAAqB,WACrB,GAAuB,IAAnBzQ,EAAImR,WAAkB,CACtB,GAAI75B,EAGe,OAAfimC,GACAjmC,EAASqH,EAAOwN,KAAK4C,EAAIiR,GACzB1f,EAAQhJ,EAAOmJ,QAAU,UAAY,WAAWnJ,EAAOqvB,SAAU3G,KAGjEiU,EAAQ9nB,KAAK4C,EAAIiR,EAAKud,GACtBjmC,EAASqH,EAAOwN,KAAK4C,EAAIiR,GACzB1f,EAAQhJ,EAAOmJ,QAAU,UAAY,WAAWnJ,EAAOqvB,SAAU3G,MAKtE1f,GAInB3L,IAAG6B,OAAOxB,MACN0hC,YAAa/3B,EAAOc,MACpBw4B,WAAY,SAASlpB,GACjB,MAAOpQ,GAAOc,OAAQsP,GAAIA,OAIlCpa,GAAG6B,OAAOxB,KAAM,GAAIL,IAAG8mC,kBACnB5uB,QAASlY,GAAG6B,QAAQ+oB,UAAW,MAAOvP,GACtCqjB,MAAO1+B,GAAG6B,QAAQmgB,YAAa3G,EAAKmM,cAActF,KAAMwc,MAG5D1+B,GAAGqM,SAAShM,KAAM,SAASmM,GACvB,OACI6W,QAAS,SAASjJ,GACd,GAAI25C,GAAW5kC,EAAQsa,oBAAoBrvB,IAAO+U,EAAQsa,oBAAoBrvB,GAAI25C,SAC9EgJ,EAAwB5tC,EAAQ6Q,+BAA+B5lB,EAElDjW,UAAb4vD,GAA0BgJ,GAC1B5B,EAAWY,eAAe5/B,KAAK/hB,EAAI25C,GAGvCvnD,EAAO6W,QAAQjJ,IAGnBylB,eAAgB,SAASzlB,GACrB,MAAOklB,GAAQ07B,QAAQ5gD,IAG3BwqB,mBAAoB,SAASxqB,GAIzB,MAHoB5N,GAAOo4B,mBAAmBxqB,GAGvB,IAFNpQ,EAAO2+C,OAAOroC,QAAQlG,QCpmBvDpa,GAAG0nD,GAAGtiB,kBAAoB,SAASltB,EAASwmB,GACxC,YAwCA,SAASs+B,GAAgB5iD,EAAIsrB,GACzB,GAGIsnB,GAEAiQ,EAHAtU,GADWzwC,EAAQsP,cAActF,IAAI9H,GAC5B+U,EAAQ2P,cAAc1kB,GAAIuuC,OAMvC,KAMI,GAJAqE,EAAMtnB,EAAOe,iBAAmBf,EAAOunB,cAActjD,SACzCqjD,EAAIhnB,KAAK72B,UAErB8tD,EAAej9D,GAAG0nD,GAAGC,KAAKoF,oBAAoBrnB,GAC1Cu3B,EAAatU,SAAWA,GACxBsU,EAAaxtD,MAAQzP,GAAG0nD,GAAGC,KAAK2F,uBAAuBn+B,EAAQ0P,oBAAoBzkB,IAEnF,OAAO,CAGXjU,GAAI,+DAAgE,SAGxE,MAAOgE,GACHhE,EAAI,wDAA0DgE,EAAM/D,QAAU,IAAK,SAGvF,OAAO,EAGX,QAAS6kD,GAAkB7wC,GAEvB,GAAIixC,GAAe9jC,EAAYrF,IAAI9H,EAInC,OAFAixC,GAAa10B,GAAiBrW,EAAQlG,GAE/Bpa,GAAG0nD,GAAGC,KAAKsD,mBACdjtC,SAAUwJ,EAActF,IAAI9H,GAC5BgvC,WAAYA,EACZrrC,OAAQstC,EACR1C,OAAQx5B,EAAQ2P,cAAc1kB,GAAIuuC,OAClCl5C,IAAK0f,EAAQ0P,oBAAoBzkB,GACjCivC,UAAWuH,EAAoB1uC,MAAMmnC,UACrCG,aAAcoH,EAAoB1uC,MAAMsnC,aACxCF,IAAK4G,EAAShuC,IAAI9H,GAClBuvC,YAAa1/B,EAAWsH,aACxBq4B,YAAa3/B,EAAWumC,aACxB/G,mBAAoBA,EACpBI,kBAAmBA,EACnBC,OAAQA,EACRC,qBAAsBA,EACtBC,iBAAkB0B,EAAU74C,QAC5B1M,IAAKA,GAETnG,GAAG4P,KAAKipD,EAA0BtB,aAAcl3D,KAAM+Z,IAM1D,QAAS8iD,GAAW9iD,EAAIsrB,GACpB,GAAI/5B,GAAU,GAAI3L,IAAG4L,QAEjBoS,EAAW9F,EAAQsP,cAActF,IAAI9H,GACrCnI,EAAWqO,EAAQlG,EAiBvB,OAfA6wC,GAAkB7wC,GAAIrD,KAAK,SAASgH,GAChC,GAAI7M,GAAOie,EAAQwX,oBACf3f,OANK,OAOLhJ,SAAUA,EACVD,OAAQA,EACR+Y,cAAc,EACd8P,WAAYlB,EAAO3jC,MAGvB4J,GAAQG,QAAQoF,IACjB,SAAS4U,GACRna,EAAQK,QAAQ8Z,GAChBq3C,EAAqB/iD,EAAIsrB,EAAQzzB,GAAW9H,MAAO2b,MAGhDna,EAGX,QAASyxD,GAAahjD,GAClB,GAAIsrB,GAASvW,EAAQuX,cAActsB,GAC/B1Q,EAAQylB,EAAQ3V,SAASY,GACzBzO,EAAU,GAAI3L,IAAG4L,OAyCrB,OAvCAsxD,GAAW9iD,EAAIsrB,GAAQ3uB,KAAK,SAAS7F,GACjCA,EAAKE,YAAY1H,GAGjBylB,EAAQoX,iBAAiBb,EAAQ,SAAS1T,GACtC7rB,EAAI,iBAGA6rB,EAEIA,EAASlmB,WAAY,IACrB3F,EAAI,4CAA6C,SACjDwF,EAAQK,QAAQgmB,KAKpBA,KACAA,EAASlmB,QAAUkxD,EAAgB5iD,EAAIsrB,GAGnC1T,EAASlmB,WAAY,GACrB3F,EAAI,6EAA8E,SAClFwF,EAAQK,QAAQgmB,KAGhBhyB,GAAG6B,OAAOmwB,EAAUhyB,GAAG0nD,GAAGC,KAAKoF,oBAAoBrnB,IACnD/5B,EAAQG,QAAQkmB,KAIxBmrC,EAAqB/iD,EAAIsrB,KAG7Bv/B,EAAI,8BAAgCiU,GACpClJ,EAAK8sC,SACLh+C,GAAGkR,GAAM9P,UACVuK,EAAQK,SAEJL,EAGX,QAASwxD,GAAqB/iD,EAAIsrB,GAC9BvW,EAAQkX,iBAAiBjsB,GACzBsrB,GAAU1lC,GAAG0lC,GAAQtkC,SA5KzB,GAAI+tB,GAAU9uB,KACV+oD,EAAalxC,EAAQkxC,WACrB18B,EAAgBgS,EAAMhS,cACtBpM,EAAUoe,EAAMpe,QAChByC,EAAU2b,EAAM3b,QAChB5c,EAAMu4B,EAAMv4B,IACZ00D,EAAc3iD,EAAQwwC,UACtBqS,EAAe7iD,EAAQo4C,WACvB35B,EAAgBze,EAAQye,cACxBpP,EAAcrP,EAAQqP,YACtBC,EAAgBtP,EAAQsP,cACxB0oC,EAAWh4C,EAAQg4C,SACnBrG,EAAoB3xC,EAAQ+2C,iBAAiBpF,kBAC7CC,EAAS5xC,EAAQ+2C,iBAAiBnF,OAClCC,EAAuB7xC,EAAQ+2C,iBAAiBlF,qBAChD9/B,EAAa/R,EAAQ+R,WACrByhC,EAAYxzC,EAAQwzC,UACpBjC,EAAqBvxC,EAAQm3C,cAAcC,mBAC3CsB,EAAsB14C,EAAQwzC,UAAUkF,oBACxCiI,EAA4B,GAAI74D,IAAG0nD,GAAGoK,eAClCY,cAAehH,EACfjkC,KAAMvP,EAAQuP,KACdthB,IAAKA,GAGb,IAA2BhC,SAAvBslD,EACA,KAAM,IAAIjoD,OAAM,0GAqJpBxB,IAAG6B,OAAOxB,KAAM,GAAIL,IAAGolC,mBACnBltB,SACIqtB,QAAQ,EACRjb,UAAW,QAGfoU,OACInT,SAAUrT,EAAQqT,SAClBmB,cAAeA,EACfpM,QAASA,EACTyC,QAASA,EACT5c,IAAKA,MAIbnG,GAAG6B,OAAOxB,MACNijC,WAAY,SAASlpB,GACjB,GAAIrY,GAAOue,EAAQlG,GACfzO,EAAU,GAAI3L,IAAG4L,OA6BrB,OA3BIujB,GAAQ0P,oBAAoBzkB,GACxB+U,EAAQ2P,cAAc1kB,GAAIuuC,OAC1ByU,EAAahjD,GAAIrD,KAAKpL,EAAQG,QAASH,EAAQK,SAG/C6uD,EAAYzgD,GAAIrD,KAAK,SAAS4xC,GAC1Bx5B,EAAQ2P,cAAc1kB,GAAIuuC,OAASA,EACnCyU,EAAahjD,GAAIrD,KAAKpL,EAAQG,QAASH,EAAQK,WAOvD+uD,EAAa3gD,EAAIrY,GAAMgV,KAAK,SAAStH,GACjCorD,EAAYzgD,GAAIrD,KAAK,SAAS4xC,GAC1Bx5B,EAAQ2P,cAAc1kB,GAAIuuC,OAASA,EACnCx5B,EAAQ4P,qBAAqB3kB,EAAI3K,GACjC2tD,EAAahjD,GAAIrD,KAAKpL,EAAQG,QAASH,EAAQK,UAChD,SAASimB,GACRtmB,EAAQK,SAAS7B,MAAO8nB,OAE7B,SAASA,GACRtmB,EAAQK,SAAS7B,MAAO8nB,MAIzBtmB,MCzOnB3L,GAAGq9D,YAAc,SAASvlD,GACtB,YAoBA,SAASwlD,GAAmB/9C,EAAOg+C,GAE/B,GAAIC,GAAev1D,MAAMvB,UAAUwB,MAAMtB,KAAK2Y,EAE9CrH,GAAQ0O,UAAU62C,QAAQ,WAAal+C,EAAMxZ,OAAS,mBACtDw3D,EAAeG,cAAa,GAC5BxlD,EAAQ0O,UAAU+2C,+BAA+BH,EAAcD,EAAeK,cAGlF,QAASC,GAAiB9jC,GACtB,GAAI+jC,GAAoB,GAAI99D,IAAG4L,OAoD/B,OAlDImuB,GAAMxxB,OACNwxB,EAAMva,KAAK,SAASA,GAChB,GAAIzd,GAAOg4B,EAAMh4B,KACbg8D,EAAWhkC,EAAMgkC,SACjBC,EAAwBD,EAASp4D,QAAQ5D,EAG7Cg8D,GAAWA,EAASjsD,OAAO,EAAGksD,GAGH,MAAvBD,EAASpuD,OAAO,KAChBouD,EAAWA,EAASjsD,OAAO,IAG/B0N,EAAKy+C,OAASF,EACdG,EAAah7D,KAAKsc,GAClBs+C,EAAkBhyD,WAEtB,SAASqyD,GACLjmD,EAAQ0O,UAAU62C,QAAQ,oBAAsB1jC,EAAMgkC,SAAW,sBAAwBI,EAAUvtC,KAAO,IAAK,SAC/GktC,EAAkB9xD,YAGjB+tB,EAAMqkC,aACXC,EAAoBtkC,GAAOhjB,KACvB,SAAwBoD,GACpB,GAAImkD,GAAcnkD,EAAQpU,MAE1B/F,IAAG+C,KAAKoX,EAAS,SAASnX,EAAK+2B,GAC3B8jC,EAAiB9jC,GAAOviB,KAAK,WACzB8mD,GAAe,EAEK,IAAhBA,GACAR,EAAkBhyD,cAKzBqO,EAAQpU,QACT+3D,EAAkBhyD,WAI1B,SAAqBqyD,GACjBjmD,EAAQ0O,UAAU62C,QAAQ,oBAAsB1jC,EAAMgkC,SAAW,sBAAwBI,EAAUvtC,KAAO,IAAK,SAC/GktC,EAAkB9xD,YAKvB8xD,EAIX,QAASO,GAAoBtkC,EAAO4f,EAAQ4kB,EAAcC,GACtD,GAAI7yD,GAAU6yD,GAAmB,GAAIx+D,IAAG4L,QACpC6yD,EAAY9kB,GAAU5f,EAAM2kC,cAmBhC,OAjBAD,GAAUE,YACN,SAAqBxkD,GACjB,GAAIykD,GAAaL,EAAeA,EAAavuD,OAAOmK,GAAWA,CAE3DA,GAAQpU,OACR0jB,WAAW,WACP40C,EAAoBtkC,EAAO0kC,EAAWG,EAAYjzD,IACnD,GAGHA,EAAQG,QAAQ8yD,IAIxBjzD,EAAQK,SAGLL,EAGX,QAASkzD,GAAmBx0D,EAAckzD,GACtC,GAAIuB,MACAC,EAA4B,GAAI/+D,IAAG4L,OA4CvC,OA1CAsM,GAAQ0O,UAAUo4C,yBAClBzB,EAAeG,cAAa,GAExBrzD,EAAakV,MAAMxZ,OAAS,IAAMmS,EAAQ+mD,oBAC1C/mD,EAAQ0O,UAAU+2C,mCAClBzlD,EAAQ0O,UAAUs4C,UAAU,oBAAqB,IACjD3B,EAAeG,cAAa,GAC5BqB,EAA0B/yD,YAG1BkyD,KAEIl+D,GAAGoK,sBAAsBC,GACzBrK,GAAG+C,KAAKsH,EAAaC,MAAO,SAAStH,EAAKsE,GACtC,GAAIyyB,GAAQzyB,EAAKiD,kBAEbwvB,KAEIA,EAAMxxB,OACN21D,EAAah7D,KAAKoE,EAAKi2C,aAIvBuhB,EAAsB57D,KAAK26D,EAAiB9jC,GAAOviB,KAAK,WACpDsnD,EAAsB37B,MACe,IAAjC27B,EAAsB/4D,QACtBg5D,EAA0BjzD,gBAQ9CoyD,EAAe7zD,EAAakV,MAGK,IAAjCu/C,EAAsB/4D,QACtBg5D,EAA0BjzD,WAI3BizD,EAGX,QAASI,GAAcC,GACnB,GAAIC,GAAW,GAAIr/D,IAAGs/D,gBAClBC,sBA9JoB,eA+JpBt/D,QAASm/D,EACTI,QAAS,SAAS1wD,GACd9O,GAAGo/D,GAAU/8D,SAAS6V,EAAQgS,QAAQu1C,YACtC3wD,EAAE4wD,mBAENC,sBAAuB,SAAS7wD,GAC5B9O,GAAGo/D,GAAU98D,YAAY4V,EAAQgS,QAAQu1C,aAE7CG,OAAQ,SAAS9wD,GACb+vD,EAAmB/vD,EAAEzE,aAAcg1D,GAAUtoD,KACzC,WACIumD,EAAmBY,EAAcmB,IAErC,WACInnD,EAAQ0O,UAAU62C,QAAQ,sEAAuE,aAcjH,OARAxkD,GAAe1G,YAAY,WACvB8sD,EAASjtD,YAGbpS,GAAGo/D,GAAUt7D,aAtLY,qBAsL4B9D,GAAGo/D,GAAUl/D,OAElE2/D,EAAgB38D,KAAKm8D,GAEdA,EAGX,QAASS,GAAWC,GAChB,GAAIC,EASJ,OAPAhgE,IAAG+C,KAAKg9D,EAAU11D,aAAa41D,MAAO,SAASxwD,EAAKxM,GAChD,GAAY,UAARA,EAEA,MADA+8D,IAAW,GACJ,IAIRA,EAWX,QAASE,GAAmBpxD,GACxB,MAAI9O,IAAGiO,WACKa,EAAEqxD,cAGVngE,GAAG6N,SACIiB,EAAE2sC,EAAI,GAAK3sC,EAAEsxD,EAAI,EAGb,IAARtxD,EAAE2sC,GAAmB,IAAR3sC,EAAEsxD,EAG1B,QAASC,KACL,GAAIC,GAAYpoD,EAAQqoD,iBAEpBC,EAAqB,WACjB/2C,WAAW,WACPzpB,GAAG+C,KAAKu9D,EAAW,SAASt9D,EAAKq8D,GAC7Br/D,GAAGq/D,GAAUv7D,aApOJ,qBAoO4C9D,GAAGq/D,GAAUn/D,OAClEF,GAAGq/D,GAAU/8D,YAAY4V,EAAQgS,QAAQu1C,eAE9C,IAGXz/D,IAAG+C,KAAKu9D,EAAW,SAASt9D,EAAKq8D,GAC7B,GAAI9B,GAAiB4B,EAAcE,EAG/BiB,GAAUv6D,QAAU/F,GAAG8S,kBAAkB8C,UACzCqD,EAAe3Y,OAAOqJ,SAAU,YAAa,SAASmF,IAC7CyuD,EAAeG,gBAAkBoC,EAAWhxD,IAC7C9O,GAAG+C,KAAKu9D,EAAW,SAASt9D,EAAKq8D,GAGzBA,YAAoBoB,cACpBzgE,GAAGq/D,GAAUv7D,aArPZ,qBAuPD9D,GAAGq/D,GAAU/9D,KAAKlB,QAAS,gBAQnD6Y,EAAe3Y,OAAOqJ,SAAU,YAAa,SAASmF,GAC9CoxD,EAAmBpxD,IACnB0xD,MAORvnD,EAAe3Y,OAAON,GAAG2J,UAAUvG,WAAW,GAAI,aAAc,SAAS0L,GACrE0xD,MAGJvnD,EAAe3Y,OAAOqJ,SAAU,OAAQ,SAASmF,GAC7CA,EAAED,iBACF2xD,MAGJvnD,EAAe3Y,OAAOqJ,SAlRE,eAkR+B62D,GAnR3D,GAAItoD,GAGA2nD,KACA3B,KACAjlD,EAAiB,GAAIjZ,IAAGkS,cAE5BgG,IACIqoD,oBACAtB,oBAAoB,EACpB/0C,SACIu1C,WAAY,MAEhB74C,UAAW,GAAI5mB,IAAGq9D,YAAYz2C,WAGlC5mB,GAAG6B,OAAOqW,EAASJ,GAAG,GAsQtBuoD,IAEArgE,GAAG6B,OAAOxB,MACNqgE,mBAAoB,SAASzgE,GACzBiY,EAAQqoD,iBAAiBr9D,KAAKjD,GAC9Bk/D,EAAcl/D,IAGlB0gE,eAAgB,SAAS1gE,GACrB,GAAIyQ,GACAkwD,EAAM1oD,EAAQqoD,gBAElB,KAAK7vD,IAAKkwD,GACN,GAAIA,EAAIlwD,KAAOzQ,EACX,MAAO2gE,GAAIzkD,OAAOzL,EAAG,IAKjC0B,QAAS,WACL6G,EAAe7G,UACfpS,GAAG+C,KAAK88D,EAAiB,SAAS78D,EAAKq8D,GACnCA,EAASjtD,gBAMzBpS,GAAGq9D,YAAYz2C,UAAY,WACvB,YAEA,QACIo4C,uBAAwB,aACxBrB,+BAAgC,SAASp+C,EAAOshD,KAChD3B,UAAW,SAAStuC,EAAMkwC,GACtB9gE,GAAGmG,IAAI,2BAA6ByqB,EAAO,2BAA6BkwC,EAAiB,IAAK,UAElGrD,QAAS,SAASr3D,EAASC,GACvBrG,GAAGmG,IAAIC,EAASC,MAK5BrG,GAAGs/D,eAAiB,SAASxnD,GACzB,YAiBA,SAASipD,KACL,MAAO/gE,IAAG6N,UAAa7N,GAAGiO,WAAajO,GAAGkO,UAG9C,QAAS8yD,GAAmBlyD,GAEnBmyD,IAGGF,EACA9nD,EAAe3Y,OAAOqJ,SAAU,WAAY,SAASmF,GACjDA,EAAED,mBAGNoK,EAAe3Y,OAAOqJ,SAAU,WAAY,SAASmF,GAC7CA,EAAEzE,eACFyE,EAAEzE,aAAa62D,WAAa,OAC5BpyD,EAAED,oBAKdoyD,GAAsB,GAI9B,QAASE,GAAgBryD,GAGrB,IAAK9O,GAAG8S,kBAAkB8C,SACtB,OAAO,CAGX,IAAIwrD,GAAYC,EAAKvyD,EAAEzE,aAEvBi3D,EAAWthE,GAAG6N,QAQd,OADAuzD,MAAaphE,GAAGqN,OAAQrN,GAAG8S,kBAAkB8C,WAAuC,SAArByrD,EAAGE,cAC3DF,GAAMD,IAAeC,EAAG9hD,QAAW+hD,GAAYD,EAAGpB,MAAMn/D,UAAYugE,EAAGpB,MAAMn/D,SAAS,UAGjG,QAAS0gE,GAAoBC,GAIzB,MAHmBt9D,UAAfs9D,IACAC,EAAcD,GAEXC,EAGX,QAASC,KAGL,QAASC,KACLC,EAAiBl4D,SAASm4D,YAAY,SACtCD,EAAeE,UAAU7pD,EAAQqnD,uBAAuB,GAAM,GAJlE,GAAIsC,EAOJ,IAAI38D,OAAO88D,YACP,IACIH,EAAiB,GAAIG,aAAY9pD,EAAQqnD,uBAE7C,MAAOjpB,GACHsrB,QAIJA,IAGJj4D,UAASs4D,cAAcJ,GAG3B,QAASK,KACLjpD,EAAe3Y,OAAOL,EAAS,WAAY,SAAS6O,GAChD,GAAKqyD,EAAgBryD,GAArB,CAMA,GAAIqzD,GAASniE,GAAGqN,MAAQrN,GAAG8S,kBAAkB8C,SAAW,KAAO9G,EAAEzE,aAAak3D,aAE1EzyD,GAAEzE,aAAa62D,WADJ,SAAXiB,GAAgC,aAAXA,EACO,OAEA,OAGhCrzD,EAAE4wD,kBACF5wD,EAAED,oBAGNoK,EAAe3Y,OAAOL,EAAS,YAAa,SAAS6O,GACjD,IAAK0yD,IAAuB,CACxB,IAAKL,EAAgBryD,GACjB,MAEJoJ,GAAQsnD,QAAQ1wD,MAIxBmK,EAAe3Y,OAAOL,EAAS,YAAa,SAAS6O,GACjD,GAAKqyD,EAAgBryD,GAArB,CAIAoJ,EAAQ6c,QAAQjmB,EAEhB,IAAIqxD,GAAgBx2D,SAASy4D,iBAAiBtzD,EAAEuzD,QAASvzD,EAAEwzD,QAEvDtiE,IAAGK,MAAMS,SAASq/D,IAItBjoD,EAAQynD,sBAAsB7wD,MAGlCmK,EAAe3Y,OAAOL,EAAS,OAAQ,SAAS6O,GAC5C,IAAK0yD,IAAuB,CACxB,IAAKL,EAAgBryD,GACjB,MAGJA,GAAED,iBACFC,EAAE4wD,kBACFxnD,EAAQ0nD,OAAO9wD,GAEf6yD,OAjJZ,GACIzpD,GAASjY,EAASyhE,EAAaT,EAD/BhoD,EAAiB,GAAIjZ,IAAGkS,cAG5BgG,IACIjY,QAAS,KACTu/D,QAAS,SAAS1wD,KAClBimB,QAAS,SAASjmB,KAElB6wD,sBAAuB,SAAS7wD,KAChC8wD,OAAQ,SAAS9wD,MAGrB9O,GAAG6B,OAAOqW,EAASJ,GACnB7X,EAAUiY,EAAQjY,QAyIlB+gE,IACAkB,IAEAliE,GAAG6B,OAAOxB,MACNq9D,aAAc,SAAS+D,GACnB,MAAOD,GAAoBC,IAG/BrvD,QAAS,WACL6G,EAAe7G,WAGnBwrD,WAAY,WACR,MAAO39D,OCvelB,WACG,YAEAD,IAAGuiE,aACCrkD,gBAAiB,SAASC,GACtB9d,KAAKmiE,QAAQ97D,UAAUwX,gBAAgBjO,MAAM5P,KAAM8H,WACnD9H,KAAKoiE,YAAYC,iBAGrBziD,iBAAkB,WACd5f,KAAKmiE,QAAQ97D,UAAUuZ,iBAAiBhQ,MAAM5P,KAAM8H,WACpD9H,KAAKoiE,YAAYE,cAGrBC,iBAAkB,SAAS3iE,GACvBI,KAAKwiE,MAAQxiE,KAAKwiE,KAAKnC,mBAAmBzgE,IAG9C6iE,oBAAqB,SAAS7iE,GAC1B,GAAII,KAAKwiE,KACL,MAAOxiE,MAAKwiE,KAAKlC,eAAe1gE,IAIxC8iE,gBAAiB,SAAS3oD,GACtB,IAAK/Z,KAAKoiE,YAAYO,gBAAgB5oD,GAClC,MAAO/Z,MAAKoiE,YAAYQ,iBAAiB7oD,IAIjDN,MAAO,WACHzZ,KAAKmiE,QAAQ97D,UAAUoT,MAAM7J,MAAM5P,KAAM8H,WACzC9H,KAAKoiE,YAAY3oD,SAEZzZ,KAAKse,SAAS+E,QAAUrjB,KAAKoiE,YAAY5gD,cAC1CxhB,KAAK0tB,iBAAmB1tB,KAAKqpB,qBACzBzpB,QAASI,KAAKoiE,YAAY5gD,YAC1B1J,MAAO9X,KAAKse,SAASjb,KAAK8mB,iBAC3B/Q,eAGHpZ,KAAKwiE,OACLxiE,KAAKwiE,KAAKzwD,UACV/R,KAAKwiE,KAAOxiE,KAAK6iE,qBAGrB7iE,KAAK8iE,mBAAqB,EAC1B9iE,KAAK+iE,uBAAyB,EAE9B/iE,KAAKgjE,mCAGT39C,QAAS,SAAStL,EAAIoC,GAClB,GAAI8mD,GAAoBjjE,KAAKse,SAAS0S,eAAe7U,EAErDnc,MAAKmiE,QAAQ97D,UAAUgf,QAAQzV,MAAM5P,KAAM8H,WAC3C9H,KAAKoiE,YAAYc,eAAenpD,EAAIkpD,IAGxCngD,YAAa,SAAS/I,GAClB,GAAIkuB,GAASjoC,KAAKmiE,QAAQ97D,UAAUyc,YAAYlT,MAAM5P,KAAM8H,UAG5D,OADAmgC,IAAUjoC,KAAKoiE,YAAYe,aAAappD,GACjCkuB,GAGXpoB,eAAgB,SAAS9F,GACrB,GAAIqpD,GAAYpjE,KAAKmiE,QAAQ97D,UAAUwZ,eAAejQ,MAAM5P,KAAM8H,UAGlE,OADAs7D,IAAapjE,KAAKoiE,YAAYiB,gBAAgBtpD,GACvCqpD,GAGXE,MAAO,SAASC,GACZ,MAAOvjE,MAAKoiE,YAAYoB,UAAUD,IAGtCE,cAAe,SAAShjD,GAGpB,MAFWzgB,MAAKmhB,QAAQV,GAEZijD,eAOpB/jE,GAAGgkE,cACCliD,WAAY,SAAS7J,GACjB,GAAIyL,GAASrjB,KAAKmiE,QAAQ97D,UAAUob,WAAW7R,MAAM5P,KAAM8H,UAQ3D,OANKub,IACGzL,IAAa5X,KAAK0tB,mBAClBrK,EAASrjB,KAAKoiE,YAAY5gD,aAI3B6B,GAGXugD,gBAAiB,SAASnjD,GACtBzgB,KAAKoiE,YAAYyB,WAAWpjD,IAGhCuiD,gCAAiC,WAC7BhjE,KAAK8jE,yBAA2BnkE,GAAGokE,yBAA2B/jE,KAAKgkE,6BAInEhkE,KAAKikE,wBAA0BtkE,GAAGiO,UAE9B5N,KAAKkkE,2BAELlkE,KAAKmkE,sBAAwBnkE,KAAKokE,0BAClCpkE,KAAKqkE,6BAA+BrkE,KAAKskE,iCACzCtkE,KAAKukE,2BAA6BvkE,KAAKwkE,iCAI/C3B,kBAAmB,WACf,GAAI9qD,GAAO/X,KACPkgE,EAAmBlgE,KAAKse,SAASmmD,YAAYC,eAC7CC,EAAa3kE,KAAKoiE,YAClBwC,EAAkBD,EAAWE,aAIjC,OAFAD,IAAmB1E,EAAiBr9D,KAAK+hE,GAElC,GAAIjlE,IAAGq9D,aACVkD,iBAAkBA,EAClBtB,mBAAoB5+D,KAAKse,SAAS9U,SAClCqgB,SACIu1C,WAAYp/D,KAAKse,SAASuL,QAAQu1C,YAEtC74C,WACIo4C,uBAAwB,WACpBgG,EAAWG,sBAEfxH,+BAAgC,SAASp+C,EAAOshD,GAC5CmE,EAAWI,qBAEXplE,GAAG+C,KAAKwc,EAAO,SAASvc,EAAKwc,GACzBA,EAAKukD,aAAelD,IAGpBthD,EAAMxZ,QACNqS,EAAK6F,SAASsB,EAAO,KAAM,OAGnC2/C,UAAW,SAAStuC,EAAMy0C,GACtBjtD,EAAK4N,WAAW4K,EAAMy0C,IAE1B5H,QAAS,SAASr3D,EAASC,GACvB+R,EAAKjS,IAAIC,EAASC,QAMlCg+D,2BAA4B,WACxB,GAAIjsD,GAAO/X,IAEX,OAAO,IAAIL,IAAGokE,yBACVY,WAAY3kE,KAAKoiE,YAEjBt8D,IAAK,SAASC,EAASk/D,GACnBltD,EAAKjS,IAAIC,EAASk/D,IAGtBC,aAAc,SAASzkD,GACnB1I,EAAKoI,WAAWM,IAGpByK,SAAU,SAASzK,GACf1I,EAAKwH,OAAOkB,IAGhB0kD,QAAS,SAAS1kD,GACd1I,EAAKgM,MAAMtD,IAGf2kD,QAAS,SAAS3kD,GACd1I,EAAK+K,YAAYrC,IAGrB4kD,WAAY,SAAS5kD,GACjB1I,EAAK8H,eAAeY,IAGxB6kD,UAAW,SAAS7kD,GAChB,MAAO1I,GAAKkI,QAAQQ,OAKhCyjD,uBAAwB,WAEpB,MAAOlkE,MAAKoiE,YAAYmD,2BAChBvlE,KAAKse,SAASuR,YACflwB,GAAG6lE,sBACH7lE,GAAG8lE,2BACH9lE,GAAG8lE,2BAGdC,qBAAsB,WAClB,GAAI3tD,GAAO/X,KACP2kE,EAAa3kE,KAAKoiE,WAEtB,QACIuC,WAAYA,EACZ7+D,IAAK,SAASC,EAASk/D,GACnBltD,EAAKjS,IAAIC,EAASk/D,IAEtBU,kBAAmB,SAASllD,GACxB,MAAO1I,GAAKkK,YAAYlI,GAAI0G,IAASpG,QAEzCirD,UAAW,SAAS7kD,GAChB,MAAO1I,GAAKkI,QAAQQ,IAExBmlD,UAAW,SAAS7rD,EAAIoC,GACpBpE,EAAKsN,QAAQtL,EAAIoC,IAErB0pD,sBAAuB,SAAS9rD,EAAI+rD,GAChC,GAAIC,GAAUpmE,GAAGglE,EAAWqB,aAAajsD,IACrCksD,EAAkBtmE,GAAGglE,EAAW/B,iBAAiB7oD,GAEjD+rD,IACAC,EAAQ/jE,SAAS,cACjB2iE,EAAWuB,aAAansD,GACxB4qD,EAAWwB,aAAapsD,KAGxBgsD,EAAQ9jE,YAAY,cACpB0iE,EAAWyB,aAAarsD,GACxB4qD,EAAW0B,aAAatsD,IAI5BksD,EAAgBjkE,SAAS,WAAWC,YAAY,cAK5DinB,sBAAuB,SAASnP,EAAI6B,EAAWD,GAC3C3b,KAAKmiE,QAAQ97D,UAAU6iB,sBAAsBtZ,MAAM5P,KAAM8H,WAErD9H,KAAKkkE,0BAEDlkE,KAAKoiE,YAAYQ,iBAAiB7oD,IAAO4B,IAAchc,GAAG0a,OAAOsC,YACjE3c,KAAKoiE,YAAYkE,qBAAqBvsD,GACtC/Z,KAAKoiE,YAAY+D,aAAapsD,IAIlC6B,IAAcjc,GAAG0a,OAAO4C,iBAAmBtB,IAAchc,GAAG0a,OAAO2C,WACnEhd,KAAKoiE,YAAYmE,UAAUxsD,GAC3B/Z,KAAKoiE,YAAYoE,cAAczsD,GAC/Bpa,GAAGK,KAAKoiE,YAAYQ,iBAAiB7oD,IAAK9X,YAAYjC,KAAKymE,SAASC,WAE/D/qD,IAAchc,GAAG0a,OAAO8C,eAC7Bnd,KAAKoiE,YAAYuE,UAAU5sD,IAInCuqD,+BAAgC,WAC5B,GAAItpD,GAAOrb,GAAG6B,UAAWxB,KAAK0lE,uBAE9B,OAAO,IAAI/lE,IAAGinE,4BAA4B5rD,IAG9CwpD,6BAA8B,WAC1B,GAAIxpD,GAAOrb,GAAG6B,UAAWxB,KAAK0lE,uBAE9B,OAAO,IAAI/lE,IAAG8lE,0BAA0BzqD,IAG5CopD,wBAAyB,WACrB,GAAIppD,GAAOrb,GAAG6B,UAAWxB,KAAK0lE,uBAE9B,OAAO,IAAI/lE,IAAG6lE,qBAAqBxqD,IAGvCsY,eAAgB,SAASvZ,GACrB/Z,KAAKmiE,QAAQ97D,UAAUitB,eAAe1jB,MAAM5P,KAAM8H,WAClD9H,KAAKoiE,YAAYyE,YAAY9sD,IAGjCuX,eAAgB,SAASe,EAAYC,GACjCtyB,KAAKmiE,QAAQ97D,UAAUirB,eAAe1hB,MAAM5P,KAAM8H,WAClD9H,KAAKoiE,YAAY0E,sBAGrB5zC,UAAW,SAASnZ,EAAIrY,GACpB,GAAIyd,GAAOnf,KAAKmhB,QAAQpH,EAEpBoF,IAAQA,EAAKy+C,QAAU59D,KAAKse,SAASmmD,YAAYsC,sBACjD/mE,KAAKsjB,aAAa0F,YAAYjP,GAC1BitD,OAAQ7nD,EAAKy+C,SAIrB59D,KAAKmiE,QAAQ97D,UAAU6sB,UAAUtjB,MAAM5P,KAAM8H,WAC7C9H,KAAKinE,WAAWltD,EAAIrY,IAIxB0xB,aAAc,SAASrZ,GAEf/Z,KAAKkkE,2BACLlkE,KAAKoiE,YAAYkE,qBAAqBvsD,GACtC/Z,KAAKoiE,YAAYiE,aAAatsD,GAGzB/Z,KAAKikE,wBACNjkE,KAAKukE,2BAA2B2C,WAAWlnE,KAAKoiE,YAAY4D,aAAajsD,MAMrF+Q,YAAa,SAAS/Q,EAAIrY,EAAMkpB,EAAQC,GACpC7qB,KAAKmiE,QAAQ97D,UAAUykB,YAAYlb,MAAM5P,KAAM8H,WAE/C9H,KAAKoiE,YAAY+E,eAAeptD,EAAI6Q,EAAQC,GAE9B,IAAVA,GAAoD,MAArCvpB,KAAKC,MAAMqpB,EAASC,EAAQ,MAC3C7qB,KAAKoiE,YAAYgF,WAAWrtD,GAC5B/Z,KAAKoiE,YAAYuE,UAAU5sD,GAC3B/Z,KAAKoiE,YAAYiF,aAAattD,GAC9B/Z,KAAKoiE,YAAYoE,cAAczsD,EAAI/Z,KAAKse,SAASjb,KAAKikE,oBAGtDtnE,KAAKunE,iBAAiBxtD,IAItB/Z,KAAKunE,iBAAiBxtD,EAAI6Q,EAAQC,IAI1CgJ,iBAAkB,SAASjJ,EAAQC;+BAC/B7qB,KAAKmiE,QAAQ97D,UAAUwtB,iBAAiBjkB,MAAM5P,KAAM8H,WACpD9H,KAAKoiE,YAAY5lB,oBAAoB5xB,EAAQC,IAGjDI,YAAa,SAASlR,EAAIrY,EAAMY,EAAQ0oB,GAMpC,QAASw8C,GAAellE,GAGf+c,IAILslD,EAAW6B,cAAczsD,GAEzBpa,GAAG0f,GAAepd,YAAY8V,EAAK0uD,SAASC,UAC5C/B,EAAW0C,aAAattD,GAEpBhC,EAAKkK,YAAYlI,GAAIA,IAAKM,SAAW1a,GAAG0a,OAAO8C,eAC/CwnD,EAAWyC,WAAWrtD,GAE1B4qD,EAAWkC,YAAY9sD,GAEnBzX,EAAOmJ,QACPsM,EAAK0vD,sBAAsB1tD,IAG3Bpa,GAAG0f,GAAerd,SAAS+V,EAAK0uD,SAASiB,MACzC/C,EAAWgD,WAAW5tD,GAElB4qD,EAAWiD,oBAAsB7vD,EAAKoL,gBAAgBpJ,KACtDpa,GAAG0f,GAAerd,SAAS+V,EAAK0uD,SAASpqB,WACzCsoB,EAAWkD,UAAU9tD,IAEzBhC,EAAK+vD,2BAA2B/tD,EAAIzX,KAjC5C,GAAIylE,GAAe/nE,KAAKmiE,QAAQ97D,UAAU4kB,YAAYrb,MAAM5P,KAAM8H,WAC9D68D,EAAa3kE,KAAKoiE,YAClB/iD,EAAgBslD,EAAW/B,iBAAiB7oD,GAC5ChC,EAAO/X,IA6CX,OAVI+nE,aAAwBpoE,IAAG4L,QAC3Bw8D,EAAa5wD,KAAK,SAAS6wD,GACvBR,EAAeQ,KAKnBR,EAAellE,GAGZylE,GAGXN,sBAAuB,SAAS1tD,GAC5B,GAAI4qD,GAAa3kE,KAAKoiE,WAElBpiE,MAAKgwB,qBACL20C,EAAWsD,iBAAiBluD,GAGhCpa,GAAGglE,EAAW/B,iBAAiB7oD,IAAK/X,SAAShC,KAAKymE,SAASh7D,SAE3DzL,KAAKkoE,sBAAsBnuD,IAG/BuR,cAAe,SAASvR,GACpB/Z,KAAKmiE,QAAQ97D,UAAUilB,cAAc1b,MAAM5P,KAAM8H,WACjD9H,KAAKoiE,YAAY+F,YAAYpuD,IAGjCyR,UAAW,SAASzR,EAAIrY,GACpB,GAAIqmE,GAAe/nE,KAAKmiE,QAAQ97D,UAAUmlB,UAAU5b,MAAM5P,KAAM8H,UAIhE,OAFA9H,MAAKoiE,YAAY+F,YAAYpuD,GAEtBguD,GAGXn8C,eAAgB,SAAS7R,EAAI4R,GACzB3rB,KAAKmiE,QAAQ97D,UAAUulB,eAAehc,MAAM5P,KAAM8H,WAI9C6jB,EAAUG,UAAY,GAAK9rB,KAAKwf,SAASmD,YAAY5I,IACrD/Z,KAAKoiE,YAAYgG,WAAWruD,IAIpCqR,UAAW,SAASrR,EAAIrY,GACpB1B,KAAKmiE,QAAQ97D,UAAU+kB,UAAUxb,MAAM5P,KAAM8H,WAC7C9H,KAAK4jE,gBAAgB7pD,GAEU,IAA3B/Z,KAAK+tB,mBACL/tB,KAAKoiE,YAAY0E,sBAIzBn0C,mBAAoB,SAAS5Y,GACzB,GAAIsuD,GAAoBC,EAASC,CAEjCvoE,MAAKmiE,QAAQ97D,UAAUssB,mBAAmB/iB,MAAM5P,KAAM8H,WAEtD9H,KAAKwoE,gBAAgBzuD,GAEjB/Z,KAAKse,SAASyF,MAAM0kD,oBACpBJ,EAAqBroE,KAAKijB,aAAalJ,GACvCuuD,EAAUtoE,KAAKse,SAASyF,MAAMoR,gBAE9BozC,EAAYvoE,KAAKse,SAASyF,MAAM2kD,cAAcxmE,QAAQ,gBAAiBmmE,GACvEE,EAAYA,EAAUrmE,QAAQ,eAAgBomE,GAE9CtoE,KAAKoiE,YAAYoE,cAAczsD,EAAIwuD,GACnC5oE,GAAGK,KAAKoiE,YAAYQ,iBAAiB7oD,IAAK/X,SAAShC,KAAKymE,SAASC,YAKzEt1C,qBAAsB,SAASrX,GAC3B,MAAI/Z,MAAKmiE,QAAQ97D,UAAU+qB,qBAAqBxhB,MAAM5P,KAAM8H,YACxD9H,KAAKoiE,YAAYuG,cAAc5uD,GAC/Bpa,GAAGK,KAAKoiE,YAAYQ,iBAAiB7oD,IAAK9X,YAAYjC,KAAKymE,SAASiB,MACpE1nE,KAAKoiE,YAAYoE,cAAczsD,GAC/B/Z,KAAKoiE,YAAY+F,YAAYpuD,GAC7B/Z,KAAKwoE,gBAAgBzuD,IACd,IAGPpa,GAAGK,KAAKoiE,YAAYQ,iBAAiB7oD,IAAK/X,SAAShC,KAAKymE,SAASpqB,WACjEr8C,KAAKoiE,YAAYyF,UAAU9tD,IACpB,IAIfqG,gBAAiB,SAASrG,GACtB,GAAIwZ,GAAoB5zB,GAAG4P,KAAKvP,KAAK4oE,uBAAwB5oE,KAE7DA,MAAKmiE,QAAQ97D,UAAU+Z,gBAAgB7Z,KAAKvG,KAAM+Z,EAAIwZ,IAG1Dq1C,uBAAwB,SAAS7uD,EAAIG,EAAMsZ,GACnCxzB,KAAKse,SAAS6B,WAAW0oD,aACzB7oE,KAAK8oE,mBAAmBl5D,MAAM5P,KAAM8H,WAGpC9H,KAAK+oE,mBAAmBn5D,MAAM5P,KAAM8H,YAI5C0d,kBAAmB,SAASzL,EAAIiR,EAAKvD,GACjCznB,KAAKmiE,QAAQ97D,UAAUmf,kBAAkB5V,MAAM5P,KAAM8H,WAErD9H,KAAKoiE,YAAYyE,YAAY9sD,GAEzB0N,GACAznB,KAAKoiE,YAAYoE,cAAczsD,EAAI/Z,KAAKse,SAAS6B,WAAW6oD,oBAC5DhpE,KAAKoiE,YAAY6F,iBAAiBluD,IAGlC/Z,KAAK4jE,gBAAgB7pD,IAI7BgvD,mBAAoB,SAAShvD,EAAIG,EAAMsZ,GACnCxzB,KAAKoiE,YAAY6G,iBAAiBlvD,GAClC/Z,KAAKoiE,YAAY+F,YAAYpuD,GAC7B/Z,KAAKoiE,YAAYoE,cAAczsD,EAAI/Z,KAAKse,SAAS6B,WAAW+oD,oBAC5DlpE,KAAK2zB,eAAeC,WAAWhkB,MAAM5P,KAAM8H,YAG/CghE,mBAAoB,SAAS/uD,EAAIG,EAAM8gB,GAEnC,GAKI9rB,GALA0C,EAAW5R,KAAKigB,QAAQlG,GACxBovD,EAAiBnpE,KAAKse,SAAS6B,WAAWgpD,eAAejnE,QAAQ,gBAAiB0P,GAElFw3D,GADOppE,KAAK0iB,QAAQ3I,GACAjS,WACpBiQ,EAAO/X,IAGXkP,GAASlP,KAAKse,SAAS+qD,YAAYF,GAE/BxpE,GAAG6W,iBAAiBtH,GACpBA,EAAOwH,KAAK,WACRqB,EAAKgxD,mBAAmBn5D,MAAMmI,EAAMqxD,KAGnCl6D,KAAW,GAChB6I,EAAKgxD,mBAAmBn5D,MAAMmI,EAAMqxD,IAI5CnC,WAAY,SAASltD,EAAIrY,EAAM4nE,GAC3B,GAAIC,GAGA3xB,EAFA4xB,EAAe,EACfC,EAAczpE,KAAKwf,SAAS8kB,UAAUvqB,IAAO/Z,KAAKse,SAAStI,QAAQ0zD,UAGnE1pE,MAAKse,SAASve,QAAQ4pE,eAClB3pE,KAAK8iE,mBAAqB,GAAK9iE,KAAK+iE,uBAAyB,IAC7DyG,EAAexpE,KAAK+iE,uBAAyB,GAGjDwG,GACI/uD,MAAOgvD,IAIVF,IACGtpE,KAAKse,SAAS+X,8BAAgC12B,GAAG8S,kBAAkBqC,eACnE9U,KAAKoiE,YAAYwH,gBAMhB5pE,KAAKse,SAAS9U,WACfouC,EAAS53C,KAAKiiB,YAAYlI,GAAIA,IAE9B/Z,KAAK6pE,mBAAqB7pE,KAAK6pE,oBAAsBjyB,EAAOv8B,aAExDu8B,EAAOv8B,eAAiBrb,KAAK6pE,oBAAuBjyB,EAAOv8B,eAC3Drb,KAAKwf,SAASC,YACdzf,KAAK8pE,aACL9pE,KAAK6pE,mBAAqB,QAKlCP,GACAtpE,KAAKoiE,YAAY2H,eAAehwD,EAAI/Z,KAAKse,SAAS0S,eAAetvB,GAAO6nE,EAAaE,GACrFzpE,KAAKoiE,YAAY4H,gBAAgBjwD,EAAI/Z,KAAKihB,eAAelH,IAAK,EAAM/Z,KAAKse,SAAS2rD,WAAWnxC,iBAG7F94B,KAAKoiE,YAAYrnD,QAAQhB,EAAI/Z,KAAKse,SAAS0S,eAAetvB,GAAO6nE,EAAaE,GAC9EzpE,KAAKoiE,YAAY8H,gBAAgBnwD,EAAI/Z,KAAKmhB,QAAQpH,GAAK/Z,KAAKse,SAAS2rD,WAAWnxC,gBAGpF94B,KAAK+iE,wBAA0B,GAE3BuG,GACCtpE,KAAKse,SAASve,QAAQoqE,kBAAoBxqE,GAAG8S,kBAAkBqC,gBAEhE9U,KAAKunE,iBAAiBxtD,IAI9B+vD,WAAY,WACR9pE,KAAKoiE,YAAYE,aACjBtiE,KAAK4f,oBAGT2nD,iBAAkB,SAASxtD,EAAIqwD,EAAYpuB,GACvC,GAAI7gC,GAAOnb,KAAKmiB,QAAQpI,GACpBswD,EAAiBrqE,KAAK+sB,YAAY5R,EAElCA,IAAQ,IACWrX,SAAfsmE,GAA0CtmE,SAAdk4C,IAC5BquB,EAAiBrqE,KAAKsqE,gBAAgBF,EAAYpuB,IAGtDh8C,KAAKoiE,YAAYhmD,WAAWrC,EAAIswD,KAIxCC,gBAAiB,SAASC,EAAcvuB,GAEpC,QAASlvC,GAAEpL,EAAM+uB,GAAe1qB,EAAUA,EAAQ7D,QAAQR,EAAM+uB,GADhE,GAAI1qB,GAAU/F,KAAKse,SAASjb,KAAKmnE,cAKjC,OAFA19D,GAAE,YAAaxL,KAAKC,MAAMgpE,EAAevuB,EAAY,MACrDlvC,EAAE,eAAgB9M,KAAK+sB,YAAYivB,IAC5Bj2C,GAGX+hE,2BAA4B,SAAS/tD,EAAI4X,GACrC,GAAI84C,GAAMC,EAAkBC,CAE5BF,GAAOzqE,KAAKse,SAASssD,wBAAwBH,KAC7CC,EAAmB1qE,KAAKse,SAASssD,wBAAwBF,iBAE5C,WAATD,GACAE,EAAgBh5C,EAAS+4C,GACpBC,IACDA,EAAgB3qE,KAAKse,SAASjb,KAAKwnE,YAGvC7qE,KAAKoiE,YAAYoE,cAAczsD,EAAI4wD,GAE/B3qE,KAAKse,SAASssD,wBAAwBE,eACtC9qE,KAAK+qE,aAAahxD,EAAI4wD,IAGZ,YAATF,EACLzqE,KAAKoiE,YAAYoE,cAAczsD,EAAI/Z,KAAKse,SAASjb,KAAKwnE,YAExC,SAATJ,GACLzqE,KAAK8F,IAAI,0CAA4C2kE,EAAO,iBAAkB,SAItFM,aAAc,SAAShxD,EAAI1W,GACvBrD,KAAKoiE,YAAYQ,iBAAiB7oD,GAAIjC,MAAQzU,GAGlDmlE,gBAAiB,SAASzuD,GACjB/Z,KAAKse,SAAS+X,8BAA+B12B,GAAG8S,kBAAkBqC,eACnE9U,KAAKoiE,YAAYuF,WAAW5tD,IAIpC4L,WAAY,SAAS4K,EAAM7uB,EAAMuF,GAC7B,GAAIlB,GAAU/F,KAAKmiE,QAAQ97D,UAAUsf,WAAW/V,MAAM5P,KAAM8H,UAC5D9H,MAAKse,SAAS0sD,YAAYjlE,IAG9BugB,YAAa,SAASvgB,GAClB/F,KAAKmiE,QAAQ97D,UAAUigB,YAAY1W,MAAM5P,KAAM8H,WAC/C9H,KAAKse,SAAS0sD,YAAYjlE,IAG9BklE,kBAAmB,WACf,GAAIlzD,GAAO/X,IAEXA,MAAKse,SAASiI,UAAUyB,gBAAkB,WACtC,GAAIjiB,GAAUgS,EAAKuG,SAASuJ,MAAMqjD,kBAC9BC,EAAapzD,EAAKuG,SAASuJ,MAAMrJ,WAErC,OAAOzG,GAAKuG,SAAS8sD,WAAWrlE,EAASolE,KAIjDr+C,oBAAqB,SAAS/S,EAAIrY,GAC9B1B,KAAK8iE,oBAAsB,EAC3B9iE,KAAKmiE,QAAQ97D,UAAUymB,oBAAoBld,MAAM5P,KAAM8H,YAG3DwX,uBAAwB,SAASrV,EAAOyT,EAAQC,GAC5C3d,KAAK8iE,mBAAqB74D,EAAMvE,OAChC1F,KAAK+iE,uBAAyB,EAC9B/iE,KAAKmiE,QAAQ97D,UAAUiZ,uBAAuB1P,MAAM5P,KAAM8H,YAG9DogE,sBAAuB,SAASznD,GAC5B,GAAIwF,GAAejmB,KAAKihB,eAAeR,EACtBzgB,MAAKiiB,YAAYlI,GAAI0G,IAASpG,SAE5B1a,GAAG0a,OAAOiD,UACxB2I,IACDjmB,KAAKse,SAAS2rD,WAAWoB,aAAaC,mBACrC3rE,GAAG8S,kBAAkBiD,eAItB1V,KAAKoiE,YAAY4H,gBAAgBvpD,EAAQwF,EAAcjmB,KAAKse,SAAS2rD,WAAWnxC,gBAIxF9a,eAAgB,SAAS8H,GACrB,GAAI/L,GAAK/Z,KAAKmiE,QAAQ97D,UAAU2X,eAAepO,MAAM5P,KAAM8H,UAO3D,OALA9H,MAAKinE,WAAWltD,EAAI/Z,KAAKigB,QAAQlG,IAAK,GACtC/Z,KAAKoiE,YAAYyE,YAAY9sD,GAC7B/Z,KAAKoiE,YAAYgF,WAAWrtD,GAC5B/Z,KAAKynE,sBAAsB1tD,GAEpBA,GAGXwS,SAAU,SAASxS,EAAIsC,GACnBrc,KAAKmiE,QAAQ97D,UAAUkmB,SAAS3c,MAAM5P,KAAM8H,WAE5C9H,KAAKoiE,YAAYhmD,WAAWrC,EAAI/Z,KAAK+sB,YAAY1Q,KAGrD0Y,wBAAyB,WACrB/0B,KAAKoiE,YAAYC,gBACjBriE,KAAKmiE,QAAQ97D,UAAU0uB,wBAAwBnlB,MAAM5P,KAAM8H,gBC7sBvEnI,GAAG4rE,aAAe,SAAS9zD,EAAG8S,GAC1B,YAEA,IAAIxS,GAAO/X,IAKXA,MAAKmiE,QAAU53C,EAAY5qB,GAAG4qB,GAAW6L,kBAAoBz2B,GAAGy2B,kBAChEp2B,KAAKmiE,QAAQvyD,MAAM5P,KAAM8H,WAGzBnI,GAAG6B,OAAOxB,KAAKse,UACX1e,QAAS,KAETyjB,OAAQ,KAERmoD,YAAa,KAEb/G,aACIC,kBACAqC,sBAAsB,GAG1B1jE,MACImnE,eAAgB,6BAChBK,WAAY,gBACZvD,mBAAoB,gBACpBr/B,OAAQ,UAGZwjC,SAAU,cAEV5hD,SACI68C,SAAU,qBACVrqB,UAAW,sBACX5wC,QAAS,oBACTi8D,KAAM,iBACNgE,SAAU,cACV7rE,KAAM,UACNu/D,WAAY,8BAGhBwL,yBACIH,KAAM,UACNC,iBAAkB,QAClBI,eAAe,GAGnBl6C,UACI+6C,kBAAmB,6BACnBC,mBAAoB,kFAGxB7nD,OACI0kD,mBAAmB,EACnBC,cAAe,oCAGnBvoD,YACI0oD,cAAc,EACdM,eAAgB,8CAChBD,mBAAoB,cACpBF,mBAAoB,iBAIxBjpE,SACIoqE,kBAAkB,EAClBR,cAAc,GAGlB9hD,OACIgkD,eAAe,EACfX,kBAAmB,0BAGvBjB,YACInxC,cAAe,KACfgzC,SAAU,EACVT,cACIC,mBAAmB,EACnBS,iBAAkB,KAClBC,YAAa,MAEjBC,kBAAmB,KAGvBj2D,SACI0zD,YAAY,GAGhBsB,YAAa,SAASjlE,GAClB,GAAIgS,EAAKqqD,YAAY8J,UAAU,SAC3B,MAAOn0D,GAAKqqD,YAAY+J,WAAW,QAASpmE,EAG5CqjB,YAAW,WACPvkB,OAAO2sB,MAAMzrB,IACd,IAIXsjE,YAAa,SAAStjE,GAClB,MAAIgS,GAAKqqD,YAAY8J,UAAU,WACpBn0D,EAAKqqD,YAAY+J,WAAW,UAAWpmE,GAGvClB,OAAOunE,QAAQrmE,IAI9BqlE,WAAY,SAASrlE,EAASsmE,GAC1B,MAAIt0D,GAAKqqD,YAAY8J,UAAU,UACpBn0D,EAAKqqD,YAAY+J,WAAW,SAAUpmE,EAASsmE,GAG/CxnE,OAAOynE,OAAOvmE,EAASsmE,MAGvC,GAGH1sE,GAAG6B,OAAOxB,KAAKse,SAAU7G,GAAG,GAE5BzX,KAAKoiE,YAAc,GAAIziE,IAAG4sE,YACtBzmE,IAAKnG,GAAG4P,KAAKvP,KAAK8F,IAAK9F,MACvBwsE,eAAgBxsE,KAAKse,SAASmtD,SAC9BgB,YAAazsE,KAAKse,SAAS1e,QAC3B8sE,gBAAiB1sE,KAAKse,SAASktD,YAC/BnoD,OAAQrjB,KAAKse,SAAS+E,OACtB21B,eAAgBh5C,KAAKghB,gBACrB6I,SACIhqB,KAAMG,KAAKse,SAASuL,QAAQhqB,KAC5B6rE,SAAU1rE,KAAKse,SAASuL,QAAQ6hD,UAEpC32B,QACI43B,UAAW3sE,KAAKse,SAAS2rD,WAAW6B,SACpCG,kBAAmBjsE,KAAKse,SAAS2rD,WAAWgC,mBAEhDZ,cACIuB,gBAAiB5sE,KAAKse,SAAS2rD,WAAWoB,aAAaC,kBACvDuB,sBAAuB7sE,KAAKse,SAAS2rD,WAAWoB,aAAaU,iBAC7De,oBAAqB9sE,KAAKse,SAAS2rD,WAAWoB,aAAaW,aAE/D3oE,KAAMrD,KAAKse,SAASjb,OAGpBrD,KAAKse,SAASiL,YAAYgI,mBAAqB5xB,GAAGyO,UAAYzO,GAAG2O,YACjEtO,KAAKoiE,YAAY2K,cAAc/sE,KAAKse,SAASsS,SAASa,+BAEhD9xB,GAAG8S,kBAAkB0D,WAAcnW,KAAKse,SAAS8I,KAAK6I,WAAatwB,GAAG8S,kBAAkB2D,WAC9FpW,KAAKoiE,YAAY2K,cAAc/sE,KAAKse,SAASsS,SAASg7C,qBAGtD5rE,KAAK81B,iBAEL91B,KAAKoiE,YAAYxzB,SAEjB5uC,KAAKymE,SAAWzmE,KAAKse,SAASuL,SAEzB7pB,KAAKse,SAAS+E,QAAUrjB,KAAKoiE,YAAY5gD,cAC1CxhB,KAAK0tB,iBAAmB1tB,KAAKqpB,qBACzBzpB,QAASI,KAAKoiE,YAAY5gD,YAC1B1J,MAAO9X,KAAKse,SAASjb,KAAK8mB,iBAC3B/Q,eAGPpZ,KAAKgjE,kCAEDrjE,GAAGq9D,aAAer9D,GAAG8S,kBAAkB8C,WACvCvV,KAAKwiE,KAAOxiE,KAAK6iE,qBAGjB7iE,KAAKse,SAASuJ,MAAMD,eAAiB5nB,KAAKse,SAASuJ,MAAMgkD,gBACrDlsE,GAAGgoB,aACH3nB,KAAKirE,oBAGLjrE,KAAK8F,IAAI,kCAAmC,UAIpD9F,KAAK8iE,mBAAqB,EAC1B9iE,KAAK+iE,uBAAyB,IAKtCpjE,GAAG6B,OAAO7B,GAAG4rE,aAAallE,UAAW1G,GAAG4d,eACxC5d,GAAG6B,OAAO7B,GAAG4rE,aAAallE,UAAW1G,GAAGkmB,gBAGxClmB,GAAG6B,OAAO7B,GAAG4rE,aAAallE,UAAW1G,GAAGuiE,aACxCviE,GAAG6B,OAAO7B,GAAG4rE,aAAallE,UAAW1G,GAAGgkE,cC5LxChkE,GAAG4sE,WAAa,SAASvxD,GACrB,YAEA,IA4EIlV,GACAknE,EACAC,EACAC,EACA9rD,EACA+N,EACAg+C,EACAC,EA1EAC,GACIrZ,QAAS1qD,SAASgkE,yBAClBtqB,QAEJuqB,GAAmB,EACnBC,EAAsB,EACtBC,GAA+B,EAC/BC,KACAC,GAAmB,EACnB91D,GACI/R,IAAK,KACLivC,QACI43B,UAAW,EACXV,kBAAmB,KAEvBO,eAAgB,cAChBC,YAAa,KACbC,gBAAiB,KACjBrpD,OAAQ,KACR21B,eAAgB,KAChBnvB,SACIhqB,KAAM,UACN6rE,SAAU,eAEdL,cACIuB,iBAAiB,EACjBC,sBAAuB,KACvBC,oBAAqB,MAEzBzpE,MACI4kC,OAAQ,WAGhB2lC,GACIvqD,OAAQ,4BACRwqD,YAAa,2BACbC,mBAAoB,4BACpBC,cAAe,6BACfC,cAAe,6BACfC,eAAgB,wBAChBC,aAAc,4BACdC,SAAU,uBACVC,KAAM,+BACNC,KAAM,0BACNC,qBAAsB,qCACtBx4D,YAAa,2BACby4D,0BAA2B,2CAC3BC,iBAAkB,iCAClBrvD,KAAM,0BACNsvD,QAAS,6BACTtzD,KAAM,0BACNoE,OAAQ,4BACR1J,MAAO,2BACP64D,eAAgB,8BAChBC,aAAc,4BACd5qD,MAAO,2BACP6qD,WAAY,iCACZC,kBAAmB,4BACnBC,aAAc,iCACdC,SAAU,oCACVC,eAAgB,8BAChBC,sBAAuB,sCACvBC,UAAW,yBAEfC,KACAC,EAAiC,GAAIzvE,IAAG4L,QACxC8jE,EAA+B,GAAI1vE,IAAG4L,QAatC+jE,EAA6B,WACzB,GAAIC,GAAmB13D,EAAQwzD,aAAawB,sBACxC2C,EAAa33D,EAAQwzD,aAAayB,oBAClC9xD,GACI2F,QAASgtD,EACTzsD,MAAOksD,EAGXD,KACIoC,EACA13D,EAAQmhC,eAAe33B,SAASkuD,EAAiB,GAAIlhC,OAASrzB,GAAMtE,KAChE,SAAS+4D,GACLL,EAA+B3jE,QAAQgkE,IAE3C,WACIL,EAA+BzjE,UAC/B7F,EAAI,wDAA0DypE,EAAiB,WAKvFH,EAA+BzjE,UAG/B6jE,EACA33D,EAAQmhC,eAAe33B,SAASmuD,EAAY,GAAInhC,OAASrzB,GAAMtE,KAC3D,SAAS+4D,GACLJ,EAA6B5jE,QAAQgkE,IAEzC,WACIJ,EAA6B1jE,UAC7B7F,EAAI,gEAAkE0pE,EAAY,WAK1FH,EAA6B1jE,YAOzC+jE,EAAoB,SAASR,GACzB,GAAIS,GAAsB,GAAIhwE,IAAG4L,OAwBjC,OAtBA8jE,GAA6B34D,KAAK,SAASk0B,GACvCglC,EAA4BhlC,EAAKskC,GAE5BA,EAAUzgC,IASXkhC,EAAoBlkE,WARpByjE,EAAUzgC,IAAM7D,EAAI6D,IACpBygC,EAAU1jE,OAAS,WACf0jE,EAAU1jE,OAAS,KACnBqkE,EAAKX,GACLS,EAAoBlkE,aAM7B,WAIC5L,EAAKqvE,GACLS,EAAoBlkE,YAGjBkkE,GAGXG,EAAqB,SAAS/1D,EAAI9O,EAAM+P,GACpC,GAAIk0D,GAAYa,EAAah2D,EAK7B,OAHAjU,GAAI,gCAAkCiU,GACtC9O,EAAK+kE,cAAgBj2D,EAEdlC,EAAQmhC,eAAe33B,SAASpW,EAAMikE,EAAWl0D,GAAMtE,KAC1D,WACI82D,IACAqC,EAAKX,GACLC,EAAkBp1D,GAAItO,WAE1B,WACI0jE,EAAkBp1D,GAAIpO,UAIjBkM,EAAQwzD,aAAauB,iBACtBqD,EAA+Bl2D,EAAIm1D,MAKnDgB,EAA4B,WACxB,GAAIxC,EAAqBhoE,OAAQ,CAC7B+nE,GAA+B,CAE/B,IAAI0C,GAAqBzC,EAAqBz7D,OAE1Ck+D,GAAmB5tB,OACnB6tB,EAAkCD,GAGlCE,EAA+BF,OAInC1C,IAA+B,GAIvC6C,EAAY,SAASv2D,GACjB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBruD,SAGtDixD,EAAc,SAASz2D,GACnB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBc,iBAGtD+B,EAAY,SAASvwE,GACjB,MAAOqwE,GAAcnvD,EAAWwsD,EAAgB1tE,EAAO,YAG3DwwE,EAAY,SAAS32D,GACjB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBe,eAGtDgC,EAAoB,WAChB,MAAOJ,GAAcnvD,EAAWwsD,EAAgBoB,iBAGpD4B,EAAc,SAAS72D,GACnB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBkB,eAGtD3tD,EAAU,SAASpH,GACf,MAAOszD,GAAUrqB,IAAIjpC,IAAOpa,GAAGwvB,GAAUrsB,gBAhOzB,cAgO6DiX,IAGjFrI,EAAc,SAASqI,GACnB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBzuD,OAGtD0xD,EAAW,SAAS92D,GAChB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgB/3D,QAGtDi7D,EAAc,SAAS/2D,GAGnB,MAAU,OAANA,EACOw2D,EAAcnvD,EAAWwsD,EAAgBW,4BAC5CgC,EAAcnvD,EAAWwsD,EAAgBY,kBAI1C+B,EAAcpvD,EAAQpH,GAAK6zD,EAAgBU,uBAC9CiC,EAAcpvD,EAAQpH,GAAK6zD,EAAgB93D,cAGnDi7D,EAAW,SAASh3D,GAChB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgB7pD,QAGtD5B,EAAU,SAASpI,GACf,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBzyD,OAGtD61D,EAAa,SAASj3D,GAClB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBa,UAGtD8B,EAAgB,SAAS9gE,EAASwhE,GAC9B,MAAOxhE,IAAW9P,GAAG8P,GAAS3M,gBAAgBmuE,IAGlDlB,EAAe,SAASh2D,GACpB,MAAOozD,IAAkBoD,EAAcpvD,EAAQpH,GAAK6zD,EAAgBsB,YAGxErvE,EAAO,SAASwvC,GACZA,GAAM1vC,GAAG0vC,GAAIrtC,SAAS6V,EAAQgS,QAAQhqB,OAM1C+vE,EAA8B,SAASz+C,EAAa+9C,GAChD,GAAIr4C,GAAW1F,EAAYrxB,MAAM+2B,SAC7BD,EAAYzF,EAAYrxB,MAAM82B,SAE9BA,IAAaC,IAAaq4C,EAAUpvE,MAAM+2B,WAAaq4C,EAAUpvE,MAAM82B,WACvEj3B,GAAGuvE,GAAWjuE,KACV41B,SAAUA,EACVD,UAAWA,KAQvBq5C,EAAiC,SAASl2D,EAAIm1D,GAC1C,GAAIgC,GAAa/B,EAAkBp1D,KAAO,GAAIpa,IAAG4L,SAAUI,UACvDwlE,EAA2B,GAAIxxE,IAAG4L,OAqBtC,OAnBA6jE,GAA+B14D,KAAK,SAASk0B,GACzCsmC,EAAWx6D,KACP,WACIy6D,EAAyB1lE,WAE7B,WACImkE,EAA4BhlC,EAAKskC,GAEjCA,EAAU1jE,OAAS,WACf0jE,EAAU1jE,OAAS,KACnB2lE,EAAyB1lE,WAG7ByjE,EAAUzgC,IAAM7D,EAAI6D,IACpBohC,EAAKX,OAKViC,GAWXC,EAAsB,WAClB,GAAIC,GACAC,EACAC,EACAC,EACAC,EACAC,EACA3S,EACAmQ,EACAF,EACA2C,EACAC,CAKJ,IAHA9rE,EAAI,oBAG0B,MAA1B+R,EAAQ20D,eACR,KAAM,IAAIrrE,OAAM,oDAIpB,IAAIxB,GAAGwH,SAAS0Q,EAAQ20D,gBAAiB,CAGrC,GAFA6E,EAAW/nE,SAASg8B,eAAeztB,EAAQ20D,gBAE1B,OAAb6E,EACA,KAAM,IAAIlwE,OAAMxB,GAAG8H,OAAO,0CAA2CoQ,EAAQ20D,gBAGjF8E,GAAaD,EAASviE,cAErB,CACD,GAAyChL,SAArC+T,EAAQ20D,eAAe19D,UACvB,KAAM,IAAI3N,OAAM,gGAIpBmwE,GAAaz5D,EAAQ20D,eAAe19D,UA4ExC,GAzEAwiE,EAAa3xE,GAAG0H,QAAQiqE,GACxBE,EAAiBloE,SAASC,cAAc,OACxCioE,EAAezgE,YAAYpR,GAAGgP,UAAU2iE,IACxCM,EAAajyE,GAAG6xE,GAAgB1uE,gBAAgB8qE,EAAgBO,UAI5Dt2D,EAAQwL,SACRquD,EAAgB/xE,GAAG6xE,GAAgB1uE,gBAAgB8qE,EAAgBvqD,QAC/DquD,GACA/xE,GAAG+xE,GAAe3wE,UASrBpB,GAAGq9D,aAAgBr9D,GAAG8S,kBAAkB8C,WACzCy5D,EAAiBrvE,GAAG6xE,GAAgB1uE,gBAAgB8qE,EAAgBoB,gBAChEA,GACArvE,GAAGqvE,GAAgBjuE,UAI3Bg+D,EAAWp/D,GAAG6xE,GAAgB1uE,gBAAgB8qE,EAAgBQ,MAI1DrP,IAAap/D,GAAGq9D,cAChBl3D,EAAI,0BAA2B,QAC/BnG,GAAGo/D,GAAUh+D,UAGZpB,GAAG8S,kBAAkB8C,SAajB5V,GAAGiyE,GAAYnuE,aAtZN,sBAsZ2Cs7D,IACzD4S,EAAahyE,GAAGo/D,GAAUj8D,gBAAgB8qE,EAAgBmB,UAC1D4C,GAAchyE,GAAGgyE,GAAY5wE,WAb7B6wE,EAAWr4D,gBA3YG,qBA6YVwlD,GAAYp/D,GAAGo/D,GAAUt7D,aA9YhB,qBAkZT9D,GAAGo/D,GAAU99D,KACTlB,QAAS,UAWrBmvE,EAAYvvE,GAAG6xE,GAAgB1uE,gBAAgB8qE,EAAgBsB,WAC1D/B,EAGI+B,IACLvB,EAAmB/qC,SAASssC,EAAUrrE,aAtapB,gBAwalB8pE,EAAmBA,EAAmB,EAAIA,EAAmB,KAE7DP,EAAcztE,GAAGuvE,GAAWzrE,aAzaN,oBAkatByrE,GAAavvE,GAAGuvE,GAAWnuE,SAS/BosE,EAAiBA,GAAkB+B,EAEnClC,EAAsBrtE,GAAG6xE,GAAgBrvE,WAAWyrE,EAAgBiB,mBAAmBnpE,OAAS,EAChGunE,EAAsBttE,GAAG6xE,GAAgBrvE,WAAWyrE,EAAgB7pD,OAAOre,OAAS,EAEpF6rE,EAAe5xE,GAAG6xE,GAAgB1uE,gBAAgB8qE,EAAgBS,MAE9C,MAAhBkD,EACA,KAAM,IAAIpwE,OAAM,0DAapB,OAVAswE,GAAeF,EAAaziE,UAC5ByiE,EAAaziE,UAAY,GAGrB0iE,EAAe/uE,qBAAqB,UAAUiD,QAC9C4D,SAASC,cAAc,UAG3BzD,EAAI,8BAGA2lE,SAAU9rE,GAAG0H,QAAQmqE,EAAe1iE,WACpC+iE,aAAclyE,GAAG0H,QAAQoqE,KAIjCK,EAAc,SAASziC,EAAI70B,EAAO2U,GAC9B,GAAI4iD,GAAW5iD,EACX6iD,EAAWD,EAAS9uE,UAEpBuX,GAAQ,IACRw3D,EAAWryE,GAAGoyE,GAAUhvE,WAAWyX,GAAOrX,aAI9C4uE,EAASnxE,aAAayuC,EAAI2iC,IAG9B3B,EAAiC,SAASF,GACtC,GAAIp2D,GAAKo2D,EAAmBp2D,GACxBk4D,EAAgB9B,EAAmB8B,cACnCC,EAAqBD,GAAiBA,EAAcjC,cACpDd,EAAYa,EAAah2D,GACzBiB,GACI6F,qBAAsBsvD,EAAmBtvD,qBACzCF,QAASgtD,EACT30C,QAAQ,EACR9X,OAAO,EAGXvhB,IAAG8S,kBAAkBiD,cACjBw5D,EACIr3D,EAAQk9B,OAAO43B,WAAa90D,EAAQk9B,OAAO43B,WAAaa,GACxDyC,EAA+Bl2D,EAAIm1D,GACnCgB,KAGAR,EAAkBR,GAAW/3D,KAAK,WAC9Bg4D,EAAkBp1D,GAAM,GAAIpa,IAAG4L,QAE/B4jE,EAAkBp1D,GAAI5C,KAAK,WACvBiS,WAAW8mD,EAA2Br4D,EAAQk9B,OAAOk3B,qBAM/B,MAAtBiG,EACAC,EAAiBp4D,EAAIm4D,GAGrBpC,EAAmB/1D,EAAIk4D,EAAej3D,KAOlDk1D,IAGChB,IACLQ,EAAkBR,GAClBgB,MAIRE,EAAoC,SAASD,GACzC,GAAIp2D,GAAKo2D,EAAmBp2D,GACxBkM,EAAekqD,EAAmBlqD,aAClCmsD,EAAiBjC,EAAmBiC,eACpClD,EAAYa,EAAah2D,GACzBiB,GACI6F,qBAAsBsvD,EAAmBtvD,qBACzCK,MAAOksD,EACPzsD,QAASgtD,EAGjB,IAAIuB,EACA,GAAIjpD,EAAc,CACd,KAAIpO,EAAQk9B,OAAO43B,WAAa90D,EAAQk9B,OAAO43B,WAAaa,GASxD,MAJI4E,IACA1C,EAAkBR,GAGfr3D,EAAQmhC,eAAe33B,SAAS4E,EAAcipD,EAAWl0D,GAAMtE,KAClE,WACIm5D,EAAKX,GACL1B,IACApkD,WAAW8mD,EAA2Br4D,EAAQk9B,OAAOk3B,oBAGzD,WACIgE,EAA+Bl2D,EAAIm1D,GACnC9lD,WAAW8mD,EAA2Br4D,EAAQk9B,OAAOk3B,oBAjB7DgE,GAA+Bl2D,EAAIm1D,GACnCgB,QAsBJD,GAA+Bl2D,EAAIm1D,GACnCgB,KAKZmC,EAAsB,SAASt4D,EAAIu4D,GAC/B,GAAIC,GAAMzB,EAAY/2D,GAElBy4D,EAA4B,MAANz4D,EAAa6zD,EAAgBY,iBAAmBZ,EAAgB93D,WAEtFy8D,KAAQ5yE,GAAG4yE,GAAK9wE,SAAS+wE,KACzBD,EAAM5yE,GAAG4yE,GAAKzvE,gBAAgB0vE,IAG9BD,IACA5yE,GAAG4yE,GAAKtxE,KAAKiqC,MAAOonC,EAAU,MAC9BC,EAAIzhE,aAAa,gBAAiBwhE,KAI1CzC,EAAO,SAASxgC,GACZA,GAAM1vC,GAAG0vC,GAAIptC,YAAY4V,EAAQgS,QAAQhqB,OAG7CsyE,EAAmB,SAASM,EAAmBC,GAC3C,GAAIC,GAAkB5C,EAAa0C,GAC/BG,EAAkB7C,EAAa2C,EAEnC5sE,GAAInG,GAAG8H,OAAO,qFAAsFgrE,EAAmBC,EAAmBA,IAG1IvD,EAAkBuD,GAAmBh8D,KAAK,WACtC82D,IACA2B,EAAkBsD,GAAmBhnE,UACrC3F,EAAInG,GAAG8H,OAAO,uEAAwEirE,EAAmBD,IACzGE,EAAgBlkC,IAAMmkC,EAAgBnkC,IACtCohC,EAAK8C,IAET,WACIxD,EAAkBsD,GAAmB9mE,UAChCkM,EAAQwzD,aAAauB,iBACtBqD,EAA+BwC,EAAmBE,KAKlEhzE,IAAG6B,OAAOqW,EAASmD,GACnBlV,EAAM+R,EAAQ/R,IAITnG,GAAG8S,kBAAkBiD,gBACtBmC,EAAQk9B,OAAOk3B,kBAAoB,EACnCp0D,EAAQk9B,OAAO43B,UAAY,GAG/BvrD,EAAYvJ,EAAQ40D,YACpBU,EAA4CrpE,SAA3B+T,EAAQmhC,eACzBk0B,EAAekE,IAEf9B,IAEA3vE,GAAG6B,OAAOxB,MACN4uC,OAAQ,WACJ9oC,EAAI,8BAEJ0nE,EAAsB,EAEtBpsD,EAAUtS,UAAYo+D,EAAazB,SACnC5rE,EAAK8wE,KACL3wE,KAAK6yE,oBACL1jD,EAAWtX,EAAQ60D,iBAAmB6D,EAAcnvD,EAAWwsD,EAAgBS,MAE/EvoE,EAAI,gCAGRinE,cAAe,SAAShnE,GACpB,GAAI+sE,GAAenzE,GAAGgP,UAAU5I,EAChCqb,GAAUtS,UAAY,GACtBsS,EAAUrQ,YAAY+hE,IAG1Br5D,MAAO,WACHzZ,KAAK4uC,UAGT0zB,WAAY,WACRnzC,EAASrgB,UAAY,IAGzB86D,cAAe,WACX2D,GAAmB,GAGvBxyD,QAAS,SAAShB,EAAIrY,EAAMqxE,EAAaC,EAAaC,GAClD,GAIIC,GAJAC,EAASxzE,GAAGgP,UAAUu+D,EAAa2E,cACnCuB,EAAa7C,EAAc4C,EAAQvF,EAAgBzuD,MACnDyyD,EAAarB,EAAcnvD,EAAWwsD,EAAgBO,UACtD9uD,EAAgB4zD,EAAQ5F,EAAUrZ,QAAU7kC,CAG5C8jD,KACA5F,EAAUrqB,IAAIjpC,GAAMo5D,GAGxBxzE,GAAGwzE,GAAQnxE,SAppBK,cAopBwB+X,GACxC63D,EAAWr4D,gBAhpBO,qBAkpBd65D,IACAzzE,GAAGyzE,GAAYhwE,QAAQ1B,GACvB0xE,EAAWtiE,aAAa,QAASpP,IAGrCyxE,EAAOriE,aA7pBI,aA6pBuBiJ,GAE9Bg5D,EACAjB,EAAYqB,EAAQJ,EAAYv4D,MAAO6E,GAGvCA,EAActO,YAAYoiE,GAG1BH,GACAG,EAAOrzE,MAAMC,QAAU,OACvBJ,GAAGwzE,GAAQnxE,SAhqBI,uBAmqBfnC,EAAKixE,EAAY/2D,IACjBla,EAAKsiB,EAAQpI,IACbla,EAAK6wE,EAAU32D,IACfla,EAAKkxE,EAASh3D,IACdla,EAAKgxE,EAAS92D,IACdla,EAAK2wE,EAAYz2D,IAEbwzD,GACAvtE,KAAKonE,WAAWrtD,GAGpBm5D,EAAQnD,EAAah2D,GACjBm5D,IAAUA,EAAMzkC,KAChB4gC,EAA6B34D,KAAK,SAAS28D,GACvCH,EAAMzkC,IAAM4kC,EAAW5kC,IACnB4kC,EAAWvzE,MAAM82B,WAAay8C,EAAWvzE,MAAM+2B,UAC/Cl3B,GAAGuzE,GAAOjyE,KACN21B,UAAWy8C,EAAWvzE,MAAM82B,UAC5BC,SAAUw8C,EAAWvzE,MAAM+2B,WAInCg5C,EAAKqD,OAMrBnJ,eAAgB,SAAShwD,EAAIrY,EAAMqxE,EAAaC,GAC5ChzE,KAAK+a,QAAQhB,EAAIrY,EAAMqxE,EAAaC,GAAa,IAGrD3Q,cAAe,WACXlzC,EAASpe,YAAYs8D,EAAUrZ,SAC/BqZ,EAAUrZ,QAAU1qD,SAASgkE,yBAC7BD,EAAUrqB,QAGd6gB,WAAY,SAAS9pD,GACjBpa,GAAGwhB,EAAQpH,IAAKhZ,UAGpByiE,UAAW,SAASn0B,GAChB,GAAIikC,GAAcjkC,CAElB,IAAIikC,EAAa,CAEb,KAAiD,MAA1CA,EAAYzvE,aA1tBZ,eA2tBHyvE,EAAcA,EAAYxyE,UAG9B,OAAO8hC,UAAS0wC,EAAYzvE,aA9tBrB,iBAkuBf0vE,YAAa,WACT,MAAOpkD,IAGXm3C,qBAAsB,SAASvsD,GAC3B,GAAIzI,GAAWI,EAAYqI,EAE3BzI,IAAY3R,GAAG2R,GAAUtP,SAAS6V,EAAQgS,QAAQ6hD,WAGtDxI,eAAgB,SAASnpD,EAAIrY,GACzB,GAAI8xE,GAAa9hE,EAAYqI,EAEzBy5D,KACA7zE,GAAG6zE,GAAYpwE,QAAQ1B,GACvB8xE,EAAW1iE,aAAa,QAASpP,KAIzCwkE,aAAc,SAASnsD,GACnBla,EAAK6R,EAAYqI,KAGrBqsD,aAAc,SAASrsD,GACnB81D,EAAKn+D,EAAYqI,KAGrB05D,WAAY,SAASpkC,GACjB,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgBzuD,OAG3CqC,UAAW,WACP,MAAO3J,GAAQwL,QAAUktD,EAAcnvD,EAAWwsD,EAAgBvqD,SAGtE0hD,mBAAoB,WAChBllE,EAAK8wE,MAGT7L,mBAAoB,WAChB+K,EAAKc,MAGT9L,YAAa,WACT,MAAO0L,GAAcnvD,EAAWwsD,EAAgBQ,OAGpD7I,uBAAwB,WACpB,MAAOyH,IAGXzG,UAAW,SAASxsD,GAChBla,EAAKkxE,EAASh3D,KAGlB6tD,gBAAiB,WACb,MAAOqF,IAGXpF,UAAW,SAAS9tD,GAChB81D,EAAKkB,EAASh3D,KAGlB6oD,iBAAkB,SAAS7oD,GACvB,MAAOoH,GAAQpH,IAGnBssD,aAAc,SAAStsD,GACnB,GAAI25D,GAAO9C,EAAY72D,EAEvB25D,IAAQ/zE,GAAG+zE,GAAM1xE,SAAS6V,EAAQgS,QAAQ6hD,WAG9C/I,gBAAiB,SAAS5oD,GACtB,MAAOpa,IAAGwhB,EAAQpH,IAAKtY,SApyBJ,sBAuyBvB0kE,aAAc,SAASpsD,GACnB,GAAI25D,GAAO9C,EAAY72D,EAEvB25D,IAAQ/zE,GAAG+zE,GAAMzxE,YAAY4V,EAAQgS,QAAQ6hD,WAGjDiI,WAAY,SAAStkC,GACjB,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgBkB,cAAc,IAGzD9I,aAAc,SAASjsD,GACnB,MAAOw2D,GAAcpvD,EAAQpH,GAAK6zD,EAAgBiB,oBAGtD+E,YAAa,SAASvkC,GAClB,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgBiB,mBAAmB,IAG9D1H,eAAgB,SAASptD,EAAI6Q,EAAQC,GACjC,GACIynD,GADAC,EAAMzB,EAAY/2D,EAGlBw4D,IAAO1nD,EAAQ,IACfynD,EAAUhxE,KAAKC,MAAMqpB,EAASC,EAAQ,KAEtB,MAAZynD,EACAzyE,EAAK0yE,GAGL1C,EAAK0C,GAGTF,EAAoBt4D,EAAIu4D,KAIhC91B,oBAAqB,SAAS5xB,EAAQC,GAClC7qB,KAAKmnE,eAAe,KAAMv8C,EAAQC,IAGtCw8C,aAAc,SAASttD,GACnB,GAAIw4D,GAAMzB,EAAY/2D,EAEtBw4D,IAAO1yE,EAAK0yE,IAGhBM,kBAAmB,WACf7yE,KAAKqnE,gBAGTsB,cAAe,SAAS5uD,GACpBs4D,EAAoBt4D,EAAI,GACxB/Z,KAAK6yE,kBAAkB94D,IAG3B+sD,mBAAoB,WAChB9mE,KAAK2oE,iBAGThB,WAAY,SAAS5tD,GACjB,IAAKwzD,EAAkB,CACnB,GAAIhuD,GAAS+wD,EAAUv2D,EAEvBwF,IAAU5f,GAAG4f,GAAQtd,YAAY4V,EAAQgS,QAAQhqB,QAIzDunE,WAAY,SAASrtD,GACjBla,EAAKywE,EAAUv2D,KAGnB85D,SAAU,SAASxkC,GACf,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgBruD,QAAQ,IAGnD6oD,WAAY,SAASruD,GACjB81D,EAAKgB,EAAS92D,IACdla,EAAK2wE,EAAYz2D,KAGrBopD,aAAc,SAASppD,GACnB/Z,KAAKwmE,cAAczsD,EAAIlC,EAAQxU,KAAK4kC,QACpCjoC,KAAK8zE,oBAAoB/5D,GACzBla,EAAKmxE,EAAWj3D,KAGpB4sD,UAAW,SAAS5sD,GAChBla,EAAKgxE,EAAS92D,KAGlBg6D,QAAS,SAAS1kC,GACd,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgB/3D,OAAO,IAGlDm+D,iBAAkB,SAAS3kC,GACvB,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgBc,gBAAgB,IAG3DoF,oBAAqB,SAAS/5D,GAC1B81D,EAAKW,EAAYz2D,IACjBla,EAAKgxE,EAAS92D,KAGlBspD,gBAAiB,SAAStpD,GACtB/Z,KAAKwmE,cAAczsD,EAAI,IACvB/Z,KAAKooE,WAAWruD,GAChB81D,EAAKmB,EAAWj3D,KAGpBkuD,iBAAkB,SAASluD,GACvB81D,EAAKa,EAAU32D,KAGnBkvD,iBAAkB,SAASlvD,GACvBla,EAAK6wE,EAAU32D,KAGnBk6D,eAAgB,SAAS5kC,GACrB,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgBe,cAAc,IAGzDuF,QAAS,SAAS7kC,GACd,MAAO1vC,IAAG0vC,GAAI5tC,SAASmsE,EAAgB7pD,OAAO,IAGlD3H,WAAY,SAASrC,EAAI1W,GACrB,GAAI8X,GAAOgH,EAAQpI,EAEfoB,KACA00D,EAAK10D,GACLxb,GAAGwb,GAAM/X,QAAQC,KAIzBmjE,cAAe,SAASzsD,EAAI1W,GACxB,GAAI8wE,GAAS5D,EAAcpvD,EAAQpH,GAAK6zD,EAAgBgB,WAEpDuF,KAEY,MAAR9wE,EACA1D,GAAGw0E,GAAQ3wE,YAGX7D,GAAGw0E,GAAQ/wE,QAAQC,KAK/BwjE,YAAa,SAAS9sD,GAClBpa,GAAGwhB,EAAQpH,IAAK9X,YA77BA,kBA87BhBpC,EAAKmxE,EAAWj3D,KAGpBouD,YAAa,SAASpuD,GAClBpa,GAAGwhB,EAAQpH,IAAK/X,SAl8BA,kBAm8BhB6tE,EAAKmB,EAAWj3D,KAGpBmwD,gBAAiB,SAASnwD,EAAIk4D,EAAepxD,GACpC7gB,KAAK2iE,gBAAgB5oD,KACtB2zD,EAAqB7qE,MAAMkX,GAAIA,EAAI8G,qBAAsBA,EAAsBoxD,cAAeA,KAC7FxE,GAAgCyC,MAIzClG,gBAAiB,SAASjwD,EAAIkM,EAAcmsD,EAAgBvxD,GACnD7gB,KAAK2iE,gBAAgB5oD,KACtB2zD,EAAqB7qE,MAAMge,qBAAsBA,EAAsB0hC,QAAQ,EAAMxoC,GAAIA,EAAIkM,aAAcA,EAAcmsD,eAAgBA,KACxI3E,GAAgCyC,MAIzChE,UAAW,SAAShsE,GAChB,MAAOP,IAAG8S,kBAAkB4C,iBAAmBo7D,EAAUvwE,IAG7DisE,WAAY,SAASjsE,EAAM6F,EAASsmE,GAChC,GAAI+H,GAAS3D,EAAUvwE,GACnBm0E,EAAY9D,EAAc6D,EAAQxG,EAAgBI,eAClDsG,EAAUF,EAAO3xE,qBAAqB,SAAS,GAC/C8xE,EAAYhE,EAAc6D,EAAQxG,EAAgBE,oBAClD0G,EAAQjE,EAAc6D,EAAQxG,EAAgBK,gBAC9C3iE,EAAU,GAAI3L,IAAG4L,QAEjBkpE,EAAe,WACXF,EAAUh0E,oBAAoB,QAASm0E,GACvCF,GAASA,EAAMj0E,oBAAoB,QAASo0E,GAC5CrpE,EAAQK,WAGZ+oE,EAAqB,WACjBH,EAAUh0E,oBAAoB,QAASm0E,GACvCN,EAAOQ,SAGXD,EAAiB,WACbP,EAAO7zE,oBAAoB,QAASk0E,GACpCD,EAAMj0E,oBAAoB,QAASo0E,GACnCP,EAAOQ,QAEPtpE,EAAQG,QAAQ6oE,GAAWA,EAAQ5tE,OAc3C,OAXA0tE,GAAOh0E,iBAAiB,QAASq0E,GACjCF,EAAUn0E,iBAAiB,QAASs0E,GACpCF,GAASA,EAAMp0E,iBAAiB,QAASu0E,GAErCL,IACAA,EAAQ5tE,MAAQ2lE,GAEpBgI,EAAU9wE,YAAcwC,EAExBquE,EAAOS,YAEAvpE,MC/gCnB3L,GAAGm1E,eAAiB,SAASC,EAAGC,GAC5B,YAqBA,SAAS9N,GAAWtnE,GAChBoS,EAAS/R,OAAOL,EAASob,EAAKi6D,UAAW,SAASxgD,GAE9CA,EAAQA,GAAS5vB,OAAO4vB,KAGxB,IAAIxoB,GAASwoB,EAAMxoB,QAAUwoB,EAAMygD,UAEnCl6D,GAAKm6D,UAAUlpE,EAAQwoB,KA3B/B,GAAIziB,GAAW,GAAIrS,IAAGkS,eAClBmJ,GACIi6D,UAAW,QACXG,SAAU,KACVD,UAAW,SAASlpE,EAAQwoB,KAKpC90B,IAAG6B,OAAOxB,MACNknE,WAAY,SAAStnE,GACjBsnE,EAAWtnE,IAGfmS,QAAS,WACLC,EAASD,aAiBjBpS,GAAG6B,OAAOwzE,GACNK,kBAAmB,SAASpuE,GACxB,MAAOA,GAAKquE,UAGhBC,kBAAmB,WACf,MAAOvjE,MAIfrS,GAAG6B,OAAOwZ,EAAM+5D,GAEZ/5D,EAAKo6D,UACLlO,EAAWlsD,EAAKo6D,WClDxBz1E,GAAGokE,wBAA0B,SAASgR,GAClC,YAqBA,SAASS,GAAavpE,EAAQwoB,GAC1B90B,GAAG+C,KAAK+yE,EAAgB,SAASC,EAAY5mD,GACzC,GACIrO,GADAk1D,EAA2BD,EAAWpmE,OAAO,GAAGsX,cAAgB8uD,EAAW7tE,MAAM,EAGrF,IAAImT,EAAK2pD,WAAW,KAAOgR,GAA0B1pE,GAKjD,MAJAwU,GAASzF,EAAK2pD,WAAWnB,UAAUv3D,GACnCtM,GAAG6O,eAAeimB,GAClBzZ,EAAKlV,IAAInG,GAAG8H,OAAO,+DAAgEuT,EAAKsqD,UAAU7kD,GAASA,IAC3GqO,EAAQrO,IACD,IA7BnB,GAAIm1D,MACA56D,GACI2pD,WAAY,KACZ7+D,IAAK,SAASC,EAASk/D,KACvBC,aAAc,SAASzkD,KACvByK,SAAU,SAASzK,KACnB0kD,QAAS,SAAS1kD,KAClB2kD,QAAS,SAAS3kD,KAClB4kD,WAAY,SAAS5kD,KACrB6kD,UAAW,SAAS7kD,MAExBg1D,GACIl2D,OAAQ,SAASxF,GAAMiB,EAAKkQ,SAASnR,IACrCgK,MAAQ,SAAShK,GAAMiB,EAAKmqD,QAAQprD,IACpC40D,aAAc,SAAS50D,GAAMiB,EAAKkqD,aAAanrD,IAC/ClE,MAAO,SAASkE,GAAMiB,EAAKoqD,QAAQrrD,IACnC20D,eAAgB,SAAS30D,GAAMiB,EAAKqqD,WAAWtrD,IAkBvDpa,IAAG6B,OAAOwZ,EAAM+5D,GAEhB/5D,EAAKi6D,UAAY,QACjBj6D,EAAKm6D,UAAYK,EACjBx6D,EAAKo6D,SAAWp6D,EAAK2pD,WAAW4O,cAEhC5zE,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGm1E,eAAe95D,EAAM46D,KC1ChDj2E,GAAG6lE,qBAAuB,SAASuP,GAC/B,YAiBA,SAASS,GAAavpE,EAAQwoB,GAC1B,GAAIzZ,EAAK2pD,WAAW8O,WAAWxnE,IAAW+O,EAAK2pD,WAAWgP,WAAW1nE,GAAS,CAC1E,GAAIwU,GAASzF,EAAK2pD,WAAWnB,UAAUv3D,EAC1B+O,GAAK2qD,kBAAkBllD,KAGrB9gB,GAAG0a,OAAOsC,YACrB3B,EAAKlV,IAAInG,GAAG8H,OAAO,4DAA6DuT,EAAKsqD,UAAU7kD,GAASA,IACxG9gB,GAAG6O,eAAeimB,GAElBmhD,EAAqBC,mBAAmBp1D,EAAQxU,GAAQ,KAzBpE,GAAI2pE,MACA56D,GACI2pD,WAAY,KACZ7+D,IAAK,SAASC,EAASk/D,KACvBp7C,SACI1K,KAAM,iBACN2vD,aAAc,yBAElBnJ,kBAAmB,SAASllD,KAC5B6kD,UAAW,SAAS7kD,KAG5B9gB,IAAG6B,OAAOwZ,EAAM+5D,GAkBhB/5D,EAAKi6D,UAAY,QACjBj6D,EAAKm6D,UAAYK,EAEjB71E,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGm2E,oBAAoB96D,EAAM46D,KCpCrDj2E,GAAGinE,4BAA8B,SAASmO,EAAGa,GACzC,YAaA,SAASG,GAAiB9pE,EAAQwoB,GAC9B,GAAIzZ,EAAK2pD,WAAWiP,YAAY3nE,GAAS,CACrC,GAAIwU,GAASzF,EAAK2pD,WAAWnB,UAAUv3D,EAC1B+O,GAAK2qD,kBAAkBllD,KAErB9gB,GAAG0a,OAAOsC,YACrB3B,EAAKlV,IAAInG,GAAG8H,OAAO,kEAAmEuT,EAAKsqD,UAAU7kD,GAASA,IAC9Gm1D,EAAqBC,mBAAmBp1D,EAAQxU,KAlB5D,GAAI+O,IACI2pD,WAAY,KACZgB,kBAAmB,SAASllD,KAC5B3a,IAAK,SAASC,EAASk/D,KAG1B2Q,KACDA,MAgBJ56D,EAAKi6D,UAAY,UACjBj6D,EAAKm6D,UAAYY,EAEjBp2E,GAAG6B,OAAOwZ,EAAM+5D,GAChBp1E,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGm2E,oBAAoB96D,EAAM46D,KCzBrDj2E,GAAG8lE,0BAA4B,SAASzqD,GACpC,YAEAA,GAAKi6D,UAAY,QACjBj6D,EAAKo6D,SAAW,KAEhBz1E,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGinE,4BAA4B5rD,QCVvDrb,GAAGm2E,oBAAsB,SAASf,EAAGa,GACjC,YAWA,SAASI,GAAyBv1D,GAC9B,GAAIw1D,GAAkBj7D,EAAKsqD,UAAU7kD,GACjClP,EAAS0kE,EAAgBzkE,YAAY,IAMzC,OAJID,GAAS,IACT0kE,EAAkBA,EAAgBxkE,OAAO,EAAGF,IAGzC0kE,EAGX,QAASC,GAAqBz1D,GAC1B,GAAI01D,GAAWn7D,EAAKsqD,UAAU7kD,EAC9B,OAAO9gB,IAAG0R,aAAa8kE,GAI3B,QAASC,GAAiBC,EAAoB51D,GAC1C,GACI61D,GADAn6D,EAAUk6D,EAAmB3vE,KAGjB5C,UAAZqY,GAAyBxc,GAAG0H,QAAQ8U,GAASzW,OAAS,IACtD4wE,EAAgBJ,EAAqBz1D,GAEf3c,SAAlBwyE,IACAn6D,EAAUA,EAAU,IAAMm6D,GAG9Bt7D,EAAK4qD,UAAUnlD,EAAQtE,IAG3BnB,EAAK6qD,sBAAsBplD,GAAQ,GAIvC,QAAS81D,GAAyBjC,EAAS7zD,GACvCm1D,EAAqBL,oBAAoBt1E,OAAOq0E,EAAS,OAAQ,WAC7D8B,EAAiB9B,EAAS7zD,KAKlC,QAAS+1D,GAA6BlC,EAAS7zD,GAC3Cm1D,EAAqBL,oBAAoBt1E,OAAOq0E,EAAS,QAAS,SAAS7/C,GAI1D,MAFFA,EAAMgiD,SAAWhiD,EAAMiiD,QAG9BN,EAAiB9B,EAAS7zD,KAzDtC,GAAIzF,IACI2pD,WAAY,KACZ7+D,IAAK,SAASC,EAASk/D,KACvBU,kBAAmB,SAASllD,KAC5B6kD,UAAW,SAAS7kD,KACpBmlD,UAAW,SAASnlD,EAAQtE,KAC5B0pD,sBAAuB,SAASplD,EAAQqlD,KAwDhDnmE,IAAG6B,OAAOwZ,EAAM+5D,GAEhB/5D,EAAKo6D,SAAWp6D,EAAK2pD,WAAW4O,cAEhC5zE,GAAG6B,OAAOxB,KAAM,GAAIL,IAAGm1E,eAAe95D,EAAM46D,IAE5Cj2E,GAAG6B,OAAOo0E,GACNC,mBAAoB,SAAS97D,EAAI9N,EAAQ0qE,GACrC,GAAIN,GAAqBr7D,EAAK2pD,WAAWqB,aAAajsD,EAEtDiB,GAAK6qD,sBAAsB9rD,GAAI,GAE/Bs8D,EAAmB3vE,MAAQsvE,EAAyBj8D,GAEhD48D,GACAN,EAAmBO,QAGvBL,EAAyBF,EAAoBt8D,GAC7Cy8D,EAA6BH,EAAoBt8D,OC/E5D,WACG,YAEApa,IAAG0nD,GAAGkkB,aAAe,SAAS9zD,GAC1B,GAAII,IACA+yD,yBACIH,KAAM,UAKd9qE,IAAG6B,OAAOqW,EAASJ,GAAG,GAGtB9X,GAAG4rE,aAAahlE,KAAKvG,KAAM6X,EAAS,MAE/BlY,GAAG8S,kBAAkBqC,eAA8DhR,SAA7C+T,EAAQm3C,cAAcC,qBAC7DjvD,KAAKse,SAAS1e,QAAQkP,UAAY,oKAM1CnP,GAAG6B,OAAO7B,GAAG0nD,GAAGkkB,aAAallE,UAAW1G,GAAG0nD,GAAGjxB,kBAAkB/vB,WAGhE1G,GAAG6B,OAAO7B,GAAG0nD,GAAGkkB,aAAallE,UAAW1G,GAAGuiE,aAC3CviE,GAAG6B,OAAO7B,GAAG0nD,GAAGkkB,aAAallE,UAAW1G,GAAGgkE,kBzDnCT9+D,OAAOA","file":"s3.fine-uploader.min.js","sourcesContent":[null,"/*globals window, navigator, document, FormData, File, HTMLInputElement, XMLHttpRequest, Blob, Storage, ActiveXObject */\n/* jshint -W079 */\nvar qq = function(element) {\n    \"use strict\";\n\n    return {\n        hide: function() {\n            element.style.display = \"none\";\n            return this;\n        },\n\n        /** Returns the function which detaches attached event */\n        attach: function(type, fn) {\n            if (element.addEventListener) {\n                element.addEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.attachEvent(\"on\" + type, fn);\n            }\n            return function() {\n                qq(element).detach(type, fn);\n            };\n        },\n\n        detach: function(type, fn) {\n            if (element.removeEventListener) {\n                element.removeEventListener(type, fn, false);\n            } else if (element.attachEvent) {\n                element.detachEvent(\"on\" + type, fn);\n            }\n            return this;\n        },\n\n        contains: function(descendant) {\n            // The [W3C spec](http://www.w3.org/TR/domcore/#dom-node-contains)\n            // says a `null` (or ostensibly `undefined`) parameter\n            // passed into `Node.contains` should result in a false return value.\n            // IE7 throws an exception if the parameter is `undefined` though.\n            if (!descendant) {\n                return false;\n            }\n\n            // compareposition returns false in this case\n            if (element === descendant) {\n                return true;\n            }\n\n            if (element.contains) {\n                return element.contains(descendant);\n            } else {\n                /*jslint bitwise: true*/\n                return !!(descendant.compareDocumentPosition(element) & 8);\n            }\n        },\n\n        /**\n         * Insert this element before elementB.\n         */\n        insertBefore: function(elementB) {\n            elementB.parentNode.insertBefore(element, elementB);\n            return this;\n        },\n\n        remove: function() {\n            element.parentNode.removeChild(element);\n            return this;\n        },\n\n        /**\n         * Sets styles for an element.\n         * Fixes opacity in IE6-8.\n         */\n        css: function(styles) {\n            /*jshint eqnull: true*/\n            if (element.style == null) {\n                throw new qq.Error(\"Can't apply style to node as it is not on the HTMLElement prototype chain!\");\n            }\n\n            /*jshint -W116*/\n            if (styles.opacity != null) {\n                if (typeof element.style.opacity !== \"string\" && typeof (element.filters) !== \"undefined\") {\n                    styles.filter = \"alpha(opacity=\" + Math.round(100 * styles.opacity) + \")\";\n                }\n            }\n            qq.extend(element.style, styles);\n\n            return this;\n        },\n\n        hasClass: function(name, considerParent) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            return re.test(element.className) || !!(considerParent && re.test(element.parentNode.className));\n        },\n\n        addClass: function(name) {\n            if (!qq(element).hasClass(name)) {\n                element.className += \" \" + name;\n            }\n            return this;\n        },\n\n        removeClass: function(name) {\n            var re = new RegExp(\"(^| )\" + name + \"( |$)\");\n            element.className = element.className.replace(re, \" \").replace(/^\\s+|\\s+$/g, \"\");\n            return this;\n        },\n\n        getByClass: function(className, first) {\n            var candidates,\n                result = [];\n\n            if (first && element.querySelector) {\n                return element.querySelector(\".\" + className);\n            }\n            else if (element.querySelectorAll) {\n                return element.querySelectorAll(\".\" + className);\n            }\n\n            candidates = element.getElementsByTagName(\"*\");\n\n            qq.each(candidates, function(idx, val) {\n                if (qq(val).hasClass(className)) {\n                    result.push(val);\n                }\n            });\n            return first ? result[0] : result;\n        },\n\n        getFirstByClass: function(className) {\n            return qq(element).getByClass(className, true);\n        },\n\n        children: function() {\n            var children = [],\n                child = element.firstChild;\n\n            while (child) {\n                if (child.nodeType === 1) {\n                    children.push(child);\n                }\n                child = child.nextSibling;\n            }\n\n            return children;\n        },\n\n        setText: function(text) {\n            element.innerText = text;\n            element.textContent = text;\n            return this;\n        },\n\n        clearText: function() {\n            return qq(element).setText(\"\");\n        },\n\n        // Returns true if the attribute exists on the element\n        // AND the value of the attribute is NOT \"false\" (case-insensitive)\n        hasAttribute: function(attrName) {\n            var attrVal;\n\n            if (element.hasAttribute) {\n\n                if (!element.hasAttribute(attrName)) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(element.getAttribute(attrName)) == null;\n            }\n            else {\n                attrVal = element[attrName];\n\n                if (attrVal === undefined) {\n                    return false;\n                }\n\n                /*jshint -W116*/\n                return (/^false$/i).exec(attrVal) == null;\n            }\n        }\n    };\n};\n\n(function() {\n    \"use strict\";\n\n    qq.canvasToBlob = function(canvas, mime, quality) {\n        return qq.dataUriToBlob(canvas.toDataURL(mime, quality));\n    };\n\n    qq.dataUriToBlob = function(dataUri) {\n        var arrayBuffer, byteString,\n            createBlob = function(data, mime) {\n                var BlobBuilder = window.BlobBuilder ||\n                        window.WebKitBlobBuilder ||\n                        window.MozBlobBuilder ||\n                        window.MSBlobBuilder,\n                    blobBuilder = BlobBuilder && new BlobBuilder();\n\n                if (blobBuilder) {\n                    blobBuilder.append(data);\n                    return blobBuilder.getBlob(mime);\n                }\n                else {\n                    return new Blob([data], {type: mime});\n                }\n            },\n            intArray, mimeString;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return createBlob(arrayBuffer, mimeString);\n    };\n\n    qq.log = function(message, level) {\n        if (window.console) {\n            if (!level || level === \"info\") {\n                window.console.log(message);\n            }\n            else\n            {\n                if (window.console[level]) {\n                    window.console[level](message);\n                }\n                else {\n                    window.console.log(\"<\" + level + \"> \" + message);\n                }\n            }\n        }\n    };\n\n    qq.isObject = function(variable) {\n        return variable && !variable.nodeType && Object.prototype.toString.call(variable) === \"[object Object]\";\n    };\n\n    qq.isFunction = function(variable) {\n        return typeof (variable) === \"function\";\n    };\n\n    /**\n     * Check the type of a value.  Is it an \"array\"?\n     *\n     * @param value value to test.\n     * @returns true if the value is an array or associated with an `ArrayBuffer`\n     */\n    qq.isArray = function(value) {\n        return Object.prototype.toString.call(value) === \"[object Array]\" ||\n            (value && window.ArrayBuffer && value.buffer && value.buffer.constructor === ArrayBuffer);\n    };\n\n    // Looks for an object on a `DataTransfer` object that is associated with drop events when utilizing the Filesystem API.\n    qq.isItemList = function(maybeItemList) {\n        return Object.prototype.toString.call(maybeItemList) === \"[object DataTransferItemList]\";\n    };\n\n    // Looks for an object on a `NodeList` or an `HTMLCollection`|`HTMLFormElement`|`HTMLSelectElement`\n    // object that is associated with collections of Nodes.\n    qq.isNodeList = function(maybeNodeList) {\n        return Object.prototype.toString.call(maybeNodeList) === \"[object NodeList]\" ||\n            // If `HTMLCollection` is the actual type of the object, we must determine this\n            // by checking for expected properties/methods on the object\n            (maybeNodeList.item && maybeNodeList.namedItem);\n    };\n\n    qq.isString = function(maybeString) {\n        return Object.prototype.toString.call(maybeString) === \"[object String]\";\n    };\n\n    qq.trimStr = function(string) {\n        if (String.prototype.trim) {\n            return string.trim();\n        }\n\n        return string.replace(/^\\s+|\\s+$/g, \"\");\n    };\n\n    /**\n     * @param str String to format.\n     * @returns {string} A string, swapping argument values with the associated occurrence of {} in the passed string.\n     */\n    qq.format = function(str) {\n\n        var args =  Array.prototype.slice.call(arguments, 1),\n            newStr = str,\n            nextIdxToReplace = newStr.indexOf(\"{}\");\n\n        qq.each(args, function(idx, val) {\n            var strBefore = newStr.substring(0, nextIdxToReplace),\n                strAfter = newStr.substring(nextIdxToReplace + 2);\n\n            newStr = strBefore + val + strAfter;\n            nextIdxToReplace = newStr.indexOf(\"{}\", nextIdxToReplace + val.length);\n\n            // End the loop if we have run out of tokens (when the arguments exceed the # of tokens)\n            if (nextIdxToReplace < 0) {\n                return false;\n            }\n        });\n\n        return newStr;\n    };\n\n    qq.isFile = function(maybeFile) {\n        return window.File && Object.prototype.toString.call(maybeFile) === \"[object File]\";\n    };\n\n    qq.isFileList = function(maybeFileList) {\n        return window.FileList && Object.prototype.toString.call(maybeFileList) === \"[object FileList]\";\n    };\n\n    qq.isFileOrInput = function(maybeFileOrInput) {\n        return qq.isFile(maybeFileOrInput) || qq.isInput(maybeFileOrInput);\n    };\n\n    qq.isInput = function(maybeInput, notFile) {\n        var evaluateType = function(type) {\n            var normalizedType = type.toLowerCase();\n\n            if (notFile) {\n                return normalizedType !== \"file\";\n            }\n\n            return normalizedType === \"file\";\n        };\n\n        if (window.HTMLInputElement) {\n            if (Object.prototype.toString.call(maybeInput) === \"[object HTMLInputElement]\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n        if (maybeInput.tagName) {\n            if (maybeInput.tagName.toLowerCase() === \"input\") {\n                if (maybeInput.type && evaluateType(maybeInput.type)) {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    qq.isBlob = function(maybeBlob) {\n        if (window.Blob && Object.prototype.toString.call(maybeBlob) === \"[object Blob]\") {\n            return true;\n        }\n    };\n\n    qq.isXhrUploadSupported = function() {\n        var input = document.createElement(\"input\");\n        input.type = \"file\";\n\n        return (\n            input.multiple !== undefined &&\n                typeof File !== \"undefined\" &&\n                typeof FormData !== \"undefined\" &&\n                typeof (qq.createXhrInstance()).upload !== \"undefined\");\n    };\n\n    // Fall back to ActiveX is native XHR is disabled (possible in any version of IE).\n    qq.createXhrInstance = function() {\n        if (window.XMLHttpRequest) {\n            return new XMLHttpRequest();\n        }\n\n        try {\n            return new ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        }\n        catch (error) {\n            qq.log(\"Neither XHR or ActiveX are supported!\", \"error\");\n            return null;\n        }\n    };\n\n    qq.isFolderDropSupported = function(dataTransfer) {\n        return dataTransfer.items &&\n            dataTransfer.items.length > 0 &&\n            dataTransfer.items[0].webkitGetAsEntry;\n    };\n\n    qq.isFileChunkingSupported = function() {\n        return !qq.androidStock() && //Android's stock browser cannot upload Blobs correctly\n            qq.isXhrUploadSupported() &&\n            (File.prototype.slice !== undefined || File.prototype.webkitSlice !== undefined || File.prototype.mozSlice !== undefined);\n    };\n\n    qq.sliceBlob = function(fileOrBlob, start, end) {\n        var slicer = fileOrBlob.slice || fileOrBlob.mozSlice || fileOrBlob.webkitSlice;\n\n        return slicer.call(fileOrBlob, start, end);\n    };\n\n    qq.arrayBufferToHex = function(buffer) {\n        var bytesAsHex = \"\",\n            bytes = new Uint8Array(buffer);\n\n        qq.each(bytes, function(idx, byt) {\n            var byteAsHexStr = byt.toString(16);\n\n            if (byteAsHexStr.length < 2) {\n                byteAsHexStr = \"0\" + byteAsHexStr;\n            }\n\n            bytesAsHex += byteAsHexStr;\n        });\n\n        return bytesAsHex;\n    };\n\n    qq.readBlobToHex = function(blob, startOffset, length) {\n        var initialBlob = qq.sliceBlob(blob, startOffset, startOffset + length),\n            fileReader = new FileReader(),\n            promise = new qq.Promise();\n\n        fileReader.onload = function() {\n            promise.success(qq.arrayBufferToHex(fileReader.result));\n        };\n\n        fileReader.onerror = promise.failure;\n\n        fileReader.readAsArrayBuffer(initialBlob);\n\n        return promise;\n    };\n\n    qq.extend = function(first, second, extendNested) {\n        qq.each(second, function(prop, val) {\n            if (extendNested && qq.isObject(val)) {\n                if (first[prop] === undefined) {\n                    first[prop] = {};\n                }\n                qq.extend(first[prop], val, true);\n            }\n            else {\n                first[prop] = val;\n            }\n        });\n\n        return first;\n    };\n\n    /**\n     * Allow properties in one object to override properties in another,\n     * keeping track of the original values from the target object.\n     *\n     * Note that the pre-overriden properties to be overriden by the source will be passed into the `sourceFn` when it is invoked.\n     *\n     * @param target Update properties in this object from some source\n     * @param sourceFn A function that, when invoked, will return properties that will replace properties with the same name in the target.\n     * @returns {object} The target object\n     */\n    qq.override = function(target, sourceFn) {\n        var super_ = {},\n            source = sourceFn(super_);\n\n        qq.each(source, function(srcPropName, srcPropVal) {\n            if (target[srcPropName] !== undefined) {\n                super_[srcPropName] = target[srcPropName];\n            }\n\n            target[srcPropName] = srcPropVal;\n        });\n\n        return target;\n    };\n\n    /**\n     * Searches for a given element (elt) in the array, returns -1 if it is not present.\n     */\n    qq.indexOf = function(arr, elt, from) {\n        if (arr.indexOf) {\n            return arr.indexOf(elt, from);\n        }\n\n        from = from || 0;\n        var len = arr.length;\n\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from += 1) {\n            if (arr.hasOwnProperty(from) && arr[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n\n    //this is a version 4 UUID\n    qq.getUniqueId = function() {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n            /*jslint eqeq: true, bitwise: true*/\n            var r = Math.random() * 16 | 0, v = c == \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    };\n\n    //\n    // Browsers and platforms detection\n    qq.ie = function() {\n        return navigator.userAgent.indexOf(\"MSIE\") !== -1 ||\n            navigator.userAgent.indexOf(\"Trident\") !== -1;\n    };\n\n    qq.ie7 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 7\") !== -1;\n    };\n\n    qq.ie8 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 8\") !== -1;\n    };\n\n    qq.ie10 = function() {\n        return navigator.userAgent.indexOf(\"MSIE 10\") !== -1;\n    };\n\n    qq.ie11 = function() {\n        return qq.ie() && navigator.userAgent.indexOf(\"rv:11\") !== -1;\n    };\n\n    qq.edge = function() {\n        return navigator.userAgent.indexOf(\"Edge\") >= 0;\n    };\n\n    qq.safari = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Apple\") !== -1;\n    };\n\n    qq.chrome = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Google\") !== -1;\n    };\n\n    qq.opera = function() {\n        return navigator.vendor !== undefined && navigator.vendor.indexOf(\"Opera\") !== -1;\n    };\n\n    qq.firefox = function() {\n        return (!qq.edge() && !qq.ie11() && navigator.userAgent.indexOf(\"Mozilla\") !== -1 && navigator.vendor !== undefined && navigator.vendor === \"\");\n    };\n\n    qq.windows = function() {\n        return navigator.platform === \"Win32\";\n    };\n\n    qq.android = function() {\n        return navigator.userAgent.toLowerCase().indexOf(\"android\") !== -1;\n    };\n\n    // We need to identify the Android stock browser via the UA string to work around various bugs in this browser,\n    // such as the one that prevents a `Blob` from being uploaded.\n    qq.androidStock = function() {\n        return qq.android() && navigator.userAgent.toLowerCase().indexOf(\"chrome\") < 0;\n    };\n\n    qq.ios6 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 6_\") !== -1;\n    };\n\n    qq.ios7 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 7_\") !== -1;\n    };\n\n    qq.ios8 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_\") !== -1;\n    };\n\n    // iOS 8.0.0\n    qq.ios800 = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\" OS 8_0 \") !== -1;\n    };\n\n    qq.ios = function() {\n        /*jshint -W014 */\n        return navigator.userAgent.indexOf(\"iPad\") !== -1\n            || navigator.userAgent.indexOf(\"iPod\") !== -1\n            || navigator.userAgent.indexOf(\"iPhone\") !== -1;\n    };\n\n    qq.iosChrome = function() {\n        return qq.ios() && navigator.userAgent.indexOf(\"CriOS\") !== -1;\n    };\n\n    qq.iosSafari = function() {\n        return qq.ios() && !qq.iosChrome() && navigator.userAgent.indexOf(\"Safari\") !== -1;\n    };\n\n    qq.iosSafariWebView = function() {\n        return qq.ios() && !qq.iosChrome() && !qq.iosSafari();\n    };\n\n    //\n    // Events\n\n    qq.preventDefault = function(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n        } else {\n            e.returnValue = false;\n        }\n    };\n\n    /**\n     * Creates and returns element from html string\n     * Uses innerHTML to create an element\n     */\n    qq.toElement = (function() {\n        var div = document.createElement(\"div\");\n        return function(html) {\n            div.innerHTML = html;\n            var element = div.firstChild;\n            div.removeChild(element);\n            return element;\n        };\n    }());\n\n    //key and value are passed to callback for each entry in the iterable item\n    qq.each = function(iterableItem, callback) {\n        var keyOrIndex, retVal;\n\n        if (iterableItem) {\n            // Iterate through [`Storage`](http://www.w3.org/TR/webstorage/#the-storage-interface) items\n            if (window.Storage && iterableItem.constructor === window.Storage) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(iterableItem.key(keyOrIndex), iterableItem.getItem(iterableItem.key(keyOrIndex)));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            // `DataTransferItemList` & `NodeList` objects are array-like and should be treated as arrays\n            // when iterating over items inside the object.\n            else if (qq.isArray(iterableItem) || qq.isItemList(iterableItem) || qq.isNodeList(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else if (qq.isString(iterableItem)) {\n                for (keyOrIndex = 0; keyOrIndex < iterableItem.length; keyOrIndex++) {\n                    retVal = callback(keyOrIndex, iterableItem.charAt(keyOrIndex));\n                    if (retVal === false) {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (keyOrIndex in iterableItem) {\n                    if (Object.prototype.hasOwnProperty.call(iterableItem, keyOrIndex)) {\n                        retVal = callback(keyOrIndex, iterableItem[keyOrIndex]);\n                        if (retVal === false) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    //include any args that should be passed to the new function after the context arg\n    qq.bind = function(oldFunc, context) {\n        if (qq.isFunction(oldFunc)) {\n            var args =  Array.prototype.slice.call(arguments, 2);\n\n            return function() {\n                var newArgs = qq.extend([], args);\n                if (arguments.length) {\n                    newArgs = newArgs.concat(Array.prototype.slice.call(arguments));\n                }\n                return oldFunc.apply(context, newArgs);\n            };\n        }\n\n        throw new Error(\"first parameter must be a function!\");\n    };\n\n    /**\n     * obj2url() takes a json-object as argument and generates\n     * a querystring. pretty much like jQuery.param()\n     *\n     * how to use:\n     *\n     *    `qq.obj2url({a:'b',c:'d'},'http://any.url/upload?otherParam=value');`\n     *\n     * will result in:\n     *\n     *    `http://any.url/upload?otherParam=value&a=b&c=d`\n     *\n     * @param  Object JSON-Object\n     * @param  String current querystring-part\n     * @return String encoded querystring\n     */\n    qq.obj2url = function(obj, temp, prefixDone) {\n        /*jshint laxbreak: true*/\n        var uristrings = [],\n            prefix = \"&\",\n            add = function(nextObj, i) {\n                var nextTemp = temp\n                    ? (/\\[\\]$/.test(temp)) // prevent double-encoding\n                    ? temp\n                    : temp + \"[\" + i + \"]\"\n                    : i;\n                if ((nextTemp !== \"undefined\") && (i !== \"undefined\")) {\n                    uristrings.push(\n                        (typeof nextObj === \"object\")\n                            ? qq.obj2url(nextObj, nextTemp, true)\n                            : (Object.prototype.toString.call(nextObj) === \"[object Function]\")\n                            ? encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj())\n                            : encodeURIComponent(nextTemp) + \"=\" + encodeURIComponent(nextObj)\n                    );\n                }\n            };\n\n        if (!prefixDone && temp) {\n            prefix = (/\\?/.test(temp)) ? (/\\?$/.test(temp)) ? \"\" : \"&\" : \"?\";\n            uristrings.push(temp);\n            uristrings.push(qq.obj2url(obj));\n        } else if ((Object.prototype.toString.call(obj) === \"[object Array]\") && (typeof obj !== \"undefined\")) {\n            qq.each(obj, function(idx, val) {\n                add(val, idx);\n            });\n        } else if ((typeof obj !== \"undefined\") && (obj !== null) && (typeof obj === \"object\")) {\n            qq.each(obj, function(prop, val) {\n                add(val, prop);\n            });\n        } else {\n            uristrings.push(encodeURIComponent(temp) + \"=\" + encodeURIComponent(obj));\n        }\n\n        if (temp) {\n            return uristrings.join(prefix);\n        } else {\n            return uristrings.join(prefix)\n                .replace(/^&/, \"\")\n                .replace(/%20/g, \"+\");\n        }\n    };\n\n    qq.obj2FormData = function(obj, formData, arrayKeyName) {\n        if (!formData) {\n            formData = new FormData();\n        }\n\n        qq.each(obj, function(key, val) {\n            key = arrayKeyName ? arrayKeyName + \"[\" + key + \"]\" : key;\n\n            if (qq.isObject(val)) {\n                qq.obj2FormData(val, formData, key);\n            }\n            else if (qq.isFunction(val)) {\n                formData.append(key, val());\n            }\n            else {\n                formData.append(key, val);\n            }\n        });\n\n        return formData;\n    };\n\n    qq.obj2Inputs = function(obj, form) {\n        var input;\n\n        if (!form) {\n            form = document.createElement(\"form\");\n        }\n\n        qq.obj2FormData(obj, {\n            append: function(key, val) {\n                input = document.createElement(\"input\");\n                input.setAttribute(\"name\", key);\n                input.setAttribute(\"value\", val);\n                form.appendChild(input);\n            }\n        });\n\n        return form;\n    };\n\n    /**\n     * Not recommended for use outside of Fine Uploader since this falls back to an unchecked eval if JSON.parse is not\n     * implemented.  For a more secure JSON.parse polyfill, use Douglas Crockford's json2.js.\n     */\n    qq.parseJson = function(json) {\n        /*jshint evil: true*/\n        if (window.JSON && qq.isFunction(JSON.parse)) {\n            return JSON.parse(json);\n        } else {\n            return eval(\"(\" + json + \")\");\n        }\n    };\n\n    /**\n     * Retrieve the extension of a file, if it exists.\n     *\n     * @param filename\n     * @returns {string || undefined}\n     */\n    qq.getExtension = function(filename) {\n        var extIdx = filename.lastIndexOf(\".\") + 1;\n\n        if (extIdx > 0) {\n            return filename.substr(extIdx, filename.length - extIdx);\n        }\n    };\n\n    qq.getFilename = function(blobOrFileInput) {\n        /*jslint regexp: true*/\n\n        if (qq.isInput(blobOrFileInput)) {\n            // get input value and remove path to normalize\n            return blobOrFileInput.value.replace(/.*(\\/|\\\\)/, \"\");\n        }\n        else if (qq.isFile(blobOrFileInput)) {\n            if (blobOrFileInput.fileName !== null && blobOrFileInput.fileName !== undefined) {\n                return blobOrFileInput.fileName;\n            }\n        }\n\n        return blobOrFileInput.name;\n    };\n\n    /**\n     * A generic module which supports object disposing in dispose() method.\n     * */\n    qq.DisposeSupport = function() {\n        var disposers = [];\n\n        return {\n            /** Run all registered disposers */\n            dispose: function() {\n                var disposer;\n                do {\n                    disposer = disposers.shift();\n                    if (disposer) {\n                        disposer();\n                    }\n                }\n                while (disposer);\n            },\n\n            /** Attach event handler and register de-attacher as a disposer */\n            attach: function() {\n                var args = arguments;\n                /*jslint undef:true*/\n                this.addDisposer(qq(args[0]).attach.apply(this, Array.prototype.slice.call(arguments, 1)));\n            },\n\n            /** Add disposer to the collection */\n            addDisposer: function(disposeFunction) {\n                disposers.push(disposeFunction);\n            }\n        };\n    };\n}());\n","/* globals define, module, global, qq */\n(function() {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return qq;\n        });\n    }\n    else if (typeof module !== \"undefined\" && module.exports) {\n        module.exports = qq;\n    }\n    else {\n        global.qq = qq;\n    }\n}());\n","/* globals qq */\n/**\n * Fine Uploader top-level Error container.  Inherits from `Error`.\n */\n(function() {\n    \"use strict\";\n\n    qq.Error = function(message) {\n        this.message = \"[Fine Uploader \" + qq.version + \"] \" + message;\n    };\n\n    qq.Error.prototype = new Error();\n}());\n","/*global qq */\nqq.version = \"5.16.0-alpha.13\";\n","/* globals qq */\nqq.supportedFeatures = (function() {\n    \"use strict\";\n\n    var supportsUploading,\n        supportsUploadingBlobs,\n        supportsFileDrop,\n        supportsAjaxFileUploading,\n        supportsFolderDrop,\n        supportsChunking,\n        supportsResume,\n        supportsUploadViaPaste,\n        supportsUploadCors,\n        supportsDeleteFileXdr,\n        supportsDeleteFileCorsXhr,\n        supportsDeleteFileCors,\n        supportsFolderSelection,\n        supportsImagePreviews,\n        supportsUploadProgress;\n\n    function testSupportsFileInputElement() {\n        var supported = true,\n            tempInput;\n\n        try {\n            tempInput = document.createElement(\"input\");\n            tempInput.type = \"file\";\n            qq(tempInput).hide();\n\n            if (tempInput.disabled) {\n                supported = false;\n            }\n        }\n        catch (ex) {\n            supported = false;\n        }\n\n        return supported;\n    }\n\n    //only way to test for Filesystem API support since webkit does not expose the DataTransfer interface\n    function isChrome21OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[2][1-9]|Chrome\\/[3-9][0-9]/) !== undefined;\n    }\n\n    //only way to test for complete Clipboard API support at this time\n    function isChrome14OrHigher() {\n        return (qq.chrome() || qq.opera()) &&\n            navigator.userAgent.match(/Chrome\\/[1][4-9]|Chrome\\/[2-9][0-9]/) !== undefined;\n    }\n\n    //Ensure we can send cross-origin `XMLHttpRequest`s\n    function isCrossOriginXhrSupported() {\n        if (window.XMLHttpRequest) {\n            var xhr = qq.createXhrInstance();\n\n            //Commonly accepted test for XHR CORS support.\n            return xhr.withCredentials !== undefined;\n        }\n\n        return false;\n    }\n\n    //Test for (terrible) cross-origin ajax transport fallback for IE9 and IE8\n    function isXdrSupported() {\n        return window.XDomainRequest !== undefined;\n    }\n\n    // CORS Ajax requests are supported if it is either possible to send credentialed `XMLHttpRequest`s,\n    // or if `XDomainRequest` is an available alternative.\n    function isCrossOriginAjaxSupported() {\n        if (isCrossOriginXhrSupported()) {\n            return true;\n        }\n\n        return isXdrSupported();\n    }\n\n    function isFolderSelectionSupported() {\n        // We know that folder selection is only supported in Chrome via this proprietary attribute for now\n        return document.createElement(\"input\").webkitdirectory !== undefined;\n    }\n\n    function isLocalStorageSupported() {\n        try {\n            return !!window.localStorage &&\n                // unpatched versions of IE10/11 have buggy impls of localStorage where setItem is a string\n                qq.isFunction(window.localStorage.setItem);\n        }\n        catch (error) {\n            // probably caught a security exception, so no localStorage for you\n            return false;\n        }\n    }\n\n    function isDragAndDropSupported() {\n        var span = document.createElement(\"span\");\n\n        return (\"draggable\" in span || (\"ondragstart\" in span && \"ondrop\" in span)) &&\n            !qq.android() && !qq.ios();\n    }\n\n    supportsUploading = testSupportsFileInputElement();\n\n    supportsAjaxFileUploading = supportsUploading && qq.isXhrUploadSupported();\n\n    supportsUploadingBlobs = supportsAjaxFileUploading && !qq.androidStock();\n\n    supportsFileDrop = supportsAjaxFileUploading && isDragAndDropSupported();\n\n    supportsFolderDrop = supportsFileDrop && isChrome21OrHigher();\n\n    supportsChunking = supportsAjaxFileUploading && qq.isFileChunkingSupported();\n\n    supportsResume = supportsAjaxFileUploading && supportsChunking && isLocalStorageSupported();\n\n    supportsUploadViaPaste = supportsAjaxFileUploading && isChrome14OrHigher();\n\n    supportsUploadCors = supportsUploading && (window.postMessage !== undefined || supportsAjaxFileUploading);\n\n    supportsDeleteFileCorsXhr = isCrossOriginXhrSupported();\n\n    supportsDeleteFileXdr = isXdrSupported();\n\n    supportsDeleteFileCors = isCrossOriginAjaxSupported();\n\n    supportsFolderSelection = isFolderSelectionSupported();\n\n    supportsImagePreviews = supportsAjaxFileUploading && window.FileReader !== undefined;\n\n    supportsUploadProgress = (function() {\n        if (supportsAjaxFileUploading) {\n            return !qq.androidStock() && !qq.iosChrome();\n        }\n        return false;\n    }());\n\n    return {\n        ajaxUploading: supportsAjaxFileUploading,\n        blobUploading: supportsUploadingBlobs,\n        canDetermineSize: supportsAjaxFileUploading,\n        chunking: supportsChunking,\n        deleteFileCors: supportsDeleteFileCors,\n        deleteFileCorsXdr: supportsDeleteFileXdr, //NOTE: will also return true in IE10, where XDR is also supported\n        deleteFileCorsXhr: supportsDeleteFileCorsXhr,\n        dialogElement: !!window.HTMLDialogElement,\n        fileDrop: supportsFileDrop,\n        folderDrop: supportsFolderDrop,\n        folderSelection: supportsFolderSelection,\n        imagePreviews: supportsImagePreviews,\n        imageValidation: supportsImagePreviews,\n        itemSizeValidation: supportsAjaxFileUploading,\n        pause: supportsChunking,\n        progressBar: supportsUploadProgress,\n        resume: supportsResume,\n        scaling: supportsImagePreviews && supportsUploadingBlobs,\n        tiffPreviews: qq.safari(), // Not the best solution, but simple and probably accurate enough (for now)\n        unlimitedScaledImageSize: !qq.ios(), // false simply indicates that there is some known limit\n        uploading: supportsUploading,\n        uploadCors: supportsUploadCors,\n        uploadCustomHeaders: supportsAjaxFileUploading,\n        uploadNonMultipart: supportsAjaxFileUploading,\n        uploadViaPaste: supportsUploadViaPaste\n    };\n\n}());\n","/*globals qq*/\n\n// Is the passed object a promise instance?\nqq.isGenericPromise = function(maybePromise) {\n    \"use strict\";\n    return !!(maybePromise && maybePromise.then && qq.isFunction(maybePromise.then));\n};\n\nqq.Promise = function() {\n    \"use strict\";\n\n    var successArgs, failureArgs,\n        successCallbacks = [],\n        failureCallbacks = [],\n        doneCallbacks = [],\n        state = 0;\n\n    qq.extend(this, {\n        then: function(onSuccess, onFailure) {\n            if (state === 0) {\n                if (onSuccess) {\n                    successCallbacks.push(onSuccess);\n                }\n                if (onFailure) {\n                    failureCallbacks.push(onFailure);\n                }\n            }\n            else if (state === -1) {\n                onFailure && onFailure.apply(null, failureArgs);\n            }\n            else if (onSuccess) {\n                onSuccess.apply(null, successArgs);\n            }\n\n            return this;\n        },\n\n        done: function(callback) {\n            if (state === 0) {\n                doneCallbacks.push(callback);\n            }\n            else {\n                callback.apply(null, failureArgs === undefined ? successArgs : failureArgs);\n            }\n\n            return this;\n        },\n\n        success: function() {\n            state = 1;\n            successArgs = arguments;\n\n            if (successCallbacks.length) {\n                qq.each(successCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, successArgs);\n                });\n            }\n\n            return this;\n        },\n\n        failure: function() {\n            state = -1;\n            failureArgs = arguments;\n\n            if (failureCallbacks.length) {\n                qq.each(failureCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            if (doneCallbacks.length) {\n                qq.each(doneCallbacks, function(idx, callback) {\n                    callback.apply(null, failureArgs);\n                });\n            }\n\n            return this;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Placeholder for a Blob that will be generated on-demand.\n *\n * @param referenceBlob Parent of the generated blob\n * @param onCreate Function to invoke when the blob must be created.  Must be promissory.\n * @constructor\n */\nqq.BlobProxy = function(referenceBlob, onCreate) {\n    \"use strict\";\n\n    qq.extend(this, {\n        referenceBlob: referenceBlob,\n\n        create: function() {\n            return onCreate(referenceBlob);\n        }\n    });\n};\n","/*globals qq*/\n\n/**\n * This module represents an upload or \"Select File(s)\" button.  It's job is to embed an opaque `<input type=\"file\">`\n * element as a child of a provided \"container\" element.  This \"container\" element (`options.element`) is used to provide\n * a custom style for the `<input type=\"file\">` element.  The ability to change the style of the container element is also\n * provided here by adding CSS classes to the container on hover/focus.\n *\n * TODO Eliminate the mouseover and mouseout event handlers since the :hover CSS pseudo-class should now be\n * available on all supported browsers.\n *\n * @param o Options to override the default values\n */\nqq.UploadButton = function(o) {\n    \"use strict\";\n\n    var self = this,\n\n        disposeSupport = new qq.DisposeSupport(),\n\n        options = {\n            // Corresponds to the `accept` attribute on the associated `<input type=\"file\">`\n            acceptFiles: null,\n\n            // \"Container\" element\n            element: null,\n\n            focusClass: \"qq-upload-button-focus\",\n\n            // A true value allows folders to be selected, if supported by the UA\n            folders: false,\n\n            // **This option will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n            hoverClass: \"qq-upload-button-hover\",\n\n            ios8BrowserCrashWorkaround: false,\n\n            // If true adds `multiple` attribute to `<input type=\"file\">`\n            multiple: false,\n\n            // `name` attribute of `<input type=\"file\">`\n            name: \"qqfile\",\n\n            // Called when the browser invokes the onchange handler on the `<input type=\"file\">`\n            onChange: function(input) {},\n\n            title: null\n        },\n        input, buttonId;\n\n    // Overrides any of the default option values with any option values passed in during construction.\n    qq.extend(options, o);\n\n    buttonId = qq.getUniqueId();\n\n    // Embed an opaque `<input type=\"file\">` element as a child of `options.element`.\n    function createInput() {\n        var input = document.createElement(\"input\");\n\n        input.setAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME, buttonId);\n        input.setAttribute(\"title\", options.title);\n\n        self.setMultiple(options.multiple, input);\n\n        if (options.folders && qq.supportedFeatures.folderSelection) {\n            // selecting directories is only possible in Chrome now, via a vendor-specific prefixed attribute\n            input.setAttribute(\"webkitdirectory\", \"\");\n        }\n\n        if (options.acceptFiles) {\n            input.setAttribute(\"accept\", options.acceptFiles);\n        }\n\n        input.setAttribute(\"type\", \"file\");\n        input.setAttribute(\"name\", options.name);\n\n        qq(input).css({\n            position: \"absolute\",\n            // in Opera only 'browse' button\n            // is clickable and it is located at\n            // the right side of the input\n            right: 0,\n            top: 0,\n            fontFamily: \"Arial\",\n            // It's especially important to make this an arbitrarily large value\n            // to ensure the rendered input button in IE takes up the entire\n            // space of the container element.  Otherwise, the left side of the\n            // button will require a double-click to invoke the file chooser.\n            // In other browsers, this might cause other issues, so a large font-size\n            // is only used in IE.  There is a bug in IE8 where the opacity style is  ignored\n            // in some cases when the font-size is large.  So, this workaround is not applied\n            // to IE8.\n            fontSize: qq.ie() && !qq.ie8() ? \"3500px\" : \"118px\",\n            margin: 0,\n            padding: 0,\n            cursor: \"pointer\",\n            opacity: 0\n        });\n\n        // Setting the file input's height to 100% in IE7 causes\n        // most of the visible button to be unclickable.\n        !qq.ie7() && qq(input).css({height: \"100%\"});\n\n        options.element.appendChild(input);\n\n        disposeSupport.attach(input, \"change\", function() {\n            options.onChange(input);\n        });\n\n        // **These event handlers will be removed** in the future as the :hover CSS pseudo-class is available on all supported browsers\n        disposeSupport.attach(input, \"mouseover\", function() {\n            qq(options.element).addClass(options.hoverClass);\n        });\n        disposeSupport.attach(input, \"mouseout\", function() {\n            qq(options.element).removeClass(options.hoverClass);\n        });\n\n        disposeSupport.attach(input, \"focus\", function() {\n            qq(options.element).addClass(options.focusClass);\n        });\n        disposeSupport.attach(input, \"blur\", function() {\n            qq(options.element).removeClass(options.focusClass);\n        });\n\n        return input;\n    }\n\n    // Make button suitable container for input\n    qq(options.element).css({\n        position: \"relative\",\n        overflow: \"hidden\",\n        // Make sure browse button is in the right side in Internet Explorer\n        direction: \"ltr\"\n    });\n\n    // Exposed API\n    qq.extend(this, {\n        getInput: function() {\n            return input;\n        },\n\n        getButtonId: function() {\n            return buttonId;\n        },\n\n        setMultiple: function(isMultiple, optInput) {\n            var input = optInput || this.getInput();\n\n            // Temporary workaround for bug in in iOS8 UIWebView that causes the browser to crash\n            // before the file chooser appears if the file input doesn't contain a multiple attribute.\n            // See #1283.\n            if (options.ios8BrowserCrashWorkaround && qq.ios8() && (qq.iosChrome() || qq.iosSafariWebView())) {\n                input.setAttribute(\"multiple\", \"\");\n            }\n\n            else {\n                if (isMultiple) {\n                    input.setAttribute(\"multiple\", \"\");\n                }\n                else {\n                    input.removeAttribute(\"multiple\");\n                }\n            }\n        },\n\n        setAcceptFiles: function(acceptFiles) {\n            if (acceptFiles !== options.acceptFiles) {\n                input.setAttribute(\"accept\", acceptFiles);\n            }\n        },\n\n        reset: function() {\n            if (input.parentNode) {\n                qq(input).remove();\n            }\n\n            qq(options.element).removeClass(options.focusClass);\n            input = null;\n            input = createInput();\n        }\n    });\n\n    input = createInput();\n};\n\nqq.UploadButton.BUTTON_ID_ATTR_NAME = \"qq-button-id\";\n","/*globals qq */\nqq.UploadData = function(uploaderProxy) {\n    \"use strict\";\n\n    var data = [],\n        byUuid = {},\n        byStatus = {},\n        byProxyGroupId = {},\n        byBatchId = {};\n\n    function getDataByIds(idOrIds) {\n        if (qq.isArray(idOrIds)) {\n            var entries = [];\n\n            qq.each(idOrIds, function(idx, id) {\n                entries.push(data[id]);\n            });\n\n            return entries;\n        }\n\n        return data[idOrIds];\n    }\n\n    function getDataByUuids(uuids) {\n        if (qq.isArray(uuids)) {\n            var entries = [];\n\n            qq.each(uuids, function(idx, uuid) {\n                entries.push(data[byUuid[uuid]]);\n            });\n\n            return entries;\n        }\n\n        return data[byUuid[uuids]];\n    }\n\n    function getDataByStatus(status) {\n        var statusResults = [],\n            statuses = [].concat(status);\n\n        qq.each(statuses, function(index, statusEnum) {\n            var statusResultIndexes = byStatus[statusEnum];\n\n            if (statusResultIndexes !== undefined) {\n                qq.each(statusResultIndexes, function(i, dataIndex) {\n                    statusResults.push(data[dataIndex]);\n                });\n            }\n        });\n\n        return statusResults;\n    }\n\n    qq.extend(this, {\n        /**\n         * Adds a new file to the data cache for tracking purposes.\n         *\n         * @param spec Data that describes this file.  Possible properties are:\n         *\n         * - uuid: Initial UUID for this file.\n         * - name: Initial name of this file.\n         * - size: Size of this file, omit if this cannot be determined\n         * - status: Initial `qq.status` for this file.  Omit for `qq.status.SUBMITTING`.\n         * - batchId: ID of the batch this file belongs to\n         * - proxyGroupId: ID of the proxy group associated with this file\n         * - onBeforeStatusChange(fileId): callback that is executed before the status change is broadcast\n         *\n         * @returns {number} Internal ID for this file.\n         */\n        addFile: function(spec) {\n            var status = spec.status || qq.status.SUBMITTING,\n                id = data.push({\n                    name: spec.name,\n                    originalName: spec.name,\n                    uuid: spec.uuid,\n                    size: spec.size == null ? -1 : spec.size,\n                    status: status\n                }) - 1;\n\n            if (spec.batchId) {\n                data[id].batchId = spec.batchId;\n\n                if (byBatchId[spec.batchId] === undefined) {\n                    byBatchId[spec.batchId] = [];\n                }\n                byBatchId[spec.batchId].push(id);\n            }\n\n            if (spec.proxyGroupId) {\n                data[id].proxyGroupId = spec.proxyGroupId;\n\n                if (byProxyGroupId[spec.proxyGroupId] === undefined) {\n                    byProxyGroupId[spec.proxyGroupId] = [];\n                }\n                byProxyGroupId[spec.proxyGroupId].push(id);\n            }\n\n            data[id].id = id;\n            byUuid[spec.uuid] = id;\n\n            if (byStatus[status] === undefined) {\n                byStatus[status] = [];\n            }\n            byStatus[status].push(id);\n\n            spec.onBeforeStatusChange && spec.onBeforeStatusChange(id);\n            uploaderProxy.onStatusChange(id, null, status);\n\n            return id;\n        },\n\n        retrieve: function(optionalFilter) {\n            if (qq.isObject(optionalFilter) && data.length)  {\n                if (optionalFilter.id !== undefined) {\n                    return getDataByIds(optionalFilter.id);\n                }\n\n                else if (optionalFilter.uuid !== undefined) {\n                    return getDataByUuids(optionalFilter.uuid);\n                }\n\n                else if (optionalFilter.status) {\n                    return getDataByStatus(optionalFilter.status);\n                }\n            }\n            else {\n                return qq.extend([], data, true);\n            }\n        },\n\n        reset: function() {\n            data = [];\n            byUuid = {};\n            byStatus = {};\n            byBatchId = {};\n        },\n\n        setStatus: function(id, newStatus) {\n            var oldStatus = data[id].status,\n                byStatusOldStatusIndex = qq.indexOf(byStatus[oldStatus], id);\n\n            byStatus[oldStatus].splice(byStatusOldStatusIndex, 1);\n\n            data[id].status = newStatus;\n\n            if (byStatus[newStatus] === undefined) {\n                byStatus[newStatus] = [];\n            }\n            byStatus[newStatus].push(id);\n\n            uploaderProxy.onStatusChange(id, oldStatus, newStatus);\n        },\n\n        uuidChanged: function(id, newUuid) {\n            var oldUuid = data[id].uuid;\n\n            data[id].uuid = newUuid;\n            byUuid[newUuid] = id;\n            delete byUuid[oldUuid];\n        },\n\n        updateName: function(id, newName) {\n            data[id].name = newName;\n        },\n\n        updateSize: function(id, newSize) {\n            data[id].size = newSize;\n        },\n\n        // Only applicable if this file has a parent that we may want to reference later.\n        setParentId: function(targetId, parentId) {\n            data[targetId].parentId = parentId;\n        },\n\n        getIdsInProxyGroup: function(id) {\n            var proxyGroupId = data[id].proxyGroupId;\n\n            if (proxyGroupId) {\n                return byProxyGroupId[proxyGroupId];\n            }\n            return [];\n        },\n\n        getIdsInBatch: function(id) {\n            var batchId = data[id].batchId;\n\n            return byBatchId[batchId];\n        }\n    });\n};\n\nqq.status = {\n    SUBMITTING: \"submitting\",\n    SUBMITTED: \"submitted\",\n    REJECTED: \"rejected\",\n    QUEUED: \"queued\",\n    CANCELED: \"canceled\",\n    PAUSED: \"paused\",\n    UPLOADING: \"uploading\",\n    UPLOAD_RETRYING: \"retrying upload\",\n    UPLOAD_SUCCESSFUL: \"upload successful\",\n    UPLOAD_FAILED: \"upload failed\",\n    DELETE_FAILED: \"delete failed\",\n    DELETING: \"deleting\",\n    DELETED: \"deleted\"\n};\n","/*globals qq*/\n/**\n * Defines the public API for FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.basePublicApi = {\n        // DEPRECATED - TODO REMOVE IN NEXT MAJOR RELEASE (replaced by addFiles)\n        addBlobs: function(blobDataOrArray, params, endpoint) {\n            this.addFiles(blobDataOrArray, params, endpoint);\n        },\n\n        addInitialFiles: function(cannedFileList) {\n            var self = this;\n\n            qq.each(cannedFileList, function(index, cannedFile) {\n                self._addCannedFile(cannedFile);\n            });\n        },\n\n        addFiles: function(data, params, endpoint) {\n            this._maybeHandleIos8SafariWorkaround();\n\n            var batchId = this._storedIds.length === 0 ? qq.getUniqueId() : this._currentBatchId,\n\n                processBlob = qq.bind(function(blob) {\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processBlobData = qq.bind(function(blobData) {\n                    this._handleNewFile(blobData, batchId, verifiedFiles);\n                }, this),\n\n                processCanvas = qq.bind(function(canvas) {\n                    var blob = qq.canvasToBlob(canvas);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: this._options.blobs.defaultName + \".png\"\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processCanvasData = qq.bind(function(canvasData) {\n                    var normalizedQuality = canvasData.quality && canvasData.quality / 100,\n                        blob = qq.canvasToBlob(canvasData.canvas, canvasData.type, normalizedQuality);\n\n                    this._handleNewFile({\n                        blob: blob,\n                        name: canvasData.name\n                    }, batchId, verifiedFiles);\n                }, this),\n\n                processFileOrInput = qq.bind(function(fileOrInput) {\n                    if (qq.isInput(fileOrInput) && qq.supportedFeatures.ajaxUploading) {\n                        var files = Array.prototype.slice.call(fileOrInput.files),\n                            self = this;\n\n                        qq.each(files, function(idx, file) {\n                            self._handleNewFile(file, batchId, verifiedFiles);\n                        });\n                    }\n                    else {\n                        this._handleNewFile(fileOrInput, batchId, verifiedFiles);\n                    }\n                }, this),\n\n                normalizeData = function() {\n                    if (qq.isFileList(data)) {\n                        data = Array.prototype.slice.call(data);\n                    }\n                    data = [].concat(data);\n                },\n\n                self = this,\n                verifiedFiles = [];\n\n            this._currentBatchId = batchId;\n\n            if (data) {\n                normalizeData();\n\n                qq.each(data, function(idx, fileContainer) {\n                    if (qq.isFileOrInput(fileContainer)) {\n                        processFileOrInput(fileContainer);\n                    }\n                    else if (qq.isBlob(fileContainer)) {\n                        processBlob(fileContainer);\n                    }\n                    else if (qq.isObject(fileContainer)) {\n                        if (fileContainer.blob && fileContainer.name) {\n                            processBlobData(fileContainer);\n                        }\n                        else if (fileContainer.canvas && fileContainer.name) {\n                            processCanvasData(fileContainer);\n                        }\n                    }\n                    else if (fileContainer.tagName && fileContainer.tagName.toLowerCase() === \"canvas\") {\n                        processCanvas(fileContainer);\n                    }\n                    else {\n                        self.log(fileContainer + \" is not a valid file container!  Ignoring!\", \"warn\");\n                    }\n                });\n\n                this.log(\"Received \" + verifiedFiles.length + \" files.\");\n                this._prepareItemsForUpload(verifiedFiles, params, endpoint);\n            }\n        },\n\n        cancel: function(id) {\n            this._handler.cancel(id);\n        },\n\n        cancelAll: function() {\n            var storedIdsCopy = [],\n                self = this;\n\n            qq.extend(storedIdsCopy, this._storedIds);\n            qq.each(storedIdsCopy, function(idx, storedFileId) {\n                self.cancel(storedFileId);\n            });\n\n            this._handler.cancelAll();\n        },\n\n        clearStoredFiles: function() {\n            this._storedIds = [];\n        },\n\n        continueUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            if (uploadData.status === qq.status.PAUSED) {\n                this.log(qq.format(\"Paused file ID {} ({}) will be continued.  Not paused.\", id, this.getName(id)));\n                this._uploadFile(id);\n                return true;\n            }\n            else {\n                this.log(qq.format(\"Ignoring continue for file ID {} ({}).  Not paused.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        deleteFile: function(id) {\n            return this._onSubmitDelete(id);\n        },\n\n        // TODO document?\n        doesExist: function(fileOrBlobId) {\n            return this._handler.isValid(fileOrBlobId);\n        },\n\n        // Generate a variable size thumbnail on an img or canvas,\n        // returning a promise that is fulfilled when the attempt completes.\n        // Thumbnail can either be based off of a URL for an image returned\n        // by the server in the upload response, or the associated `Blob`.\n        drawThumbnail: function(fileId, imgOrCanvas, maxSize, fromServer, customResizeFunction) {\n            var promiseToReturn = new qq.Promise(),\n                fileOrUrl, options;\n\n            if (this._imageGenerator) {\n                fileOrUrl = this._thumbnailUrls[fileId];\n                options = {\n                    customResizeFunction: customResizeFunction,\n                    maxSize: maxSize > 0 ? maxSize : null,\n                    scale: maxSize > 0\n                };\n\n                // If client-side preview generation is possible\n                // and we are not specifically looking for the image URl returned by the server...\n                if (!fromServer && qq.supportedFeatures.imagePreviews) {\n                    fileOrUrl = this.getFile(fileId);\n                }\n\n                /* jshint eqeqeq:false,eqnull:true */\n                if (fileOrUrl == null) {\n                    promiseToReturn.failure({container: imgOrCanvas, error: \"File or URL not found.\"});\n                }\n                else {\n                    this._imageGenerator.generate(fileOrUrl, imgOrCanvas, options).then(\n                        function success(modifiedContainer) {\n                            promiseToReturn.success(modifiedContainer);\n                        },\n\n                        function failure(container, reason) {\n                            promiseToReturn.failure({container: container, error: reason || \"Problem generating thumbnail\"});\n                        }\n                    );\n                }\n            }\n            else {\n                promiseToReturn.failure({container: imgOrCanvas, error: \"Missing image generator module\"});\n            }\n\n            return promiseToReturn;\n        },\n\n        getButton: function(fileId) {\n            return this._getButton(this._buttonIdsForFileIds[fileId]);\n        },\n\n        getEndpoint: function(fileId) {\n            return this._endpointStore.get(fileId);\n        },\n\n        getFile: function(fileOrBlobId) {\n            return this._handler.getFile(fileOrBlobId) || null;\n        },\n\n        getInProgress: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED\n                ]\n            }).length;\n        },\n\n        getName: function(id) {\n            return this._uploadData.retrieve({id: id}).name;\n        },\n\n        // Parent ID for a specific file, or null if this is the parent, or if it has no parent.\n        getParentId: function(id) {\n            var uploadDataEntry = this.getUploads({id: id}),\n                parentId = null;\n\n            if (uploadDataEntry) {\n                if (uploadDataEntry.parentId !== undefined) {\n                    parentId = uploadDataEntry.parentId;\n                }\n            }\n\n            return parentId;\n        },\n\n        getResumableFilesData: function() {\n            return this._handler.getResumableFilesData();\n        },\n\n        getSize: function(id) {\n            return this._uploadData.retrieve({id: id}).size;\n        },\n\n        getNetUploads: function() {\n            return this._netUploaded;\n        },\n\n        getRemainingAllowedItems: function() {\n            var allowedItems = this._currentItemLimit;\n\n            if (allowedItems > 0) {\n                return allowedItems - this._netUploadedOrQueued;\n            }\n\n            return null;\n        },\n\n        getUploads: function(optionalFilter) {\n            return this._uploadData.retrieve(optionalFilter);\n        },\n\n        getUuid: function(id) {\n            return this._uploadData.retrieve({id: id}).uuid;\n        },\n\n        isResumable: function(id) {\n            return this._handler.hasResumeRecord(id);\n        },\n\n        log: function(str, level) {\n            if (this._options.debug && (!level || level === \"info\")) {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str);\n            }\n            else if (level && level !== \"info\") {\n                qq.log(\"[Fine Uploader \" + qq.version + \"] \" + str, level);\n\n            }\n        },\n\n        pauseUpload: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            if (!qq.supportedFeatures.pause || !this._options.chunking.enabled) {\n                return false;\n            }\n\n            // Pause only really makes sense if the file is uploading or retrying\n            if (qq.indexOf([qq.status.UPLOADING, qq.status.UPLOAD_RETRYING], uploadData.status) >= 0) {\n                if (this._handler.pause(id)) {\n                    this._uploadData.setStatus(id, qq.status.PAUSED);\n                    return true;\n                }\n                else {\n                    this.log(qq.format(\"Unable to pause file ID {} ({}).\", id, this.getName(id)), \"error\");\n                }\n            }\n            else {\n                this.log(qq.format(\"Ignoring pause for file ID {} ({}).  Not in progress.\", id, this.getName(id)), \"error\");\n            }\n\n            return false;\n        },\n\n        removeFileRef: function(id) {\n            this._handler.expunge(id);\n        },\n\n        reset: function() {\n            this.log(\"Resetting uploader...\");\n\n            this._handler.reset();\n            this._storedIds = [];\n            this._autoRetries = [];\n            this._retryTimeouts = [];\n            this._preventRetries = [];\n            this._thumbnailUrls = [];\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n\n            this._paramsStore.reset();\n            this._endpointStore.reset();\n            this._netUploadedOrQueued = 0;\n            this._netUploaded = 0;\n            this._uploadData.reset();\n            this._buttonIdsForFileIds = [];\n\n            this._pasteHandler && this._pasteHandler.reset();\n            this._options.session.refreshOnReset && this._refreshSessionData();\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n\n            this._totalProgress && this._totalProgress.reset();\n\n            this._customResumeDataStore.reset();\n        },\n\n        retry: function(id) {\n            return this._manualRetry(id);\n        },\n\n        scaleImage: function(id, specs) {\n            var self = this;\n\n            return qq.Scaler.prototype.scaleImage(id, specs, {\n                log: qq.bind(self.log, self),\n                getFile: qq.bind(self.getFile, self),\n                uploadData: self._uploadData\n            });\n        },\n\n        setCustomHeaders: function(headers, id) {\n            this._customHeadersStore.set(headers, id);\n        },\n\n        setCustomResumeData: function(id, data) {\n            this._customResumeDataStore.set(data, id);\n        },\n\n        setDeleteFileCustomHeaders: function(headers, id) {\n            this._deleteFileCustomHeadersStore.set(headers, id);\n        },\n\n        setDeleteFileEndpoint: function(endpoint, id) {\n            this._deleteFileEndpointStore.set(endpoint, id);\n        },\n\n        setDeleteFileParams: function(params, id) {\n            this._deleteFileParamsStore.set(params, id);\n        },\n\n        // Re-sets the default endpoint, an endpoint for a specific file, or an endpoint for a specific button\n        setEndpoint: function(endpoint, id) {\n            this._endpointStore.set(endpoint, id);\n        },\n\n        setForm: function(elementOrId) {\n            this._updateFormSupportAndParams(elementOrId);\n        },\n\n        setItemLimit: function(newItemLimit) {\n            this._currentItemLimit = newItemLimit;\n        },\n\n        setName: function(id, newName) {\n            this._uploadData.updateName(id, newName);\n        },\n\n        setParams: function(params, id) {\n            this._paramsStore.set(params, id);\n        },\n\n        setUuid: function(id, newUuid) {\n            return this._uploadData.uuidChanged(id, newUuid);\n        },\n\n        /**\n         * Expose the internal status of a file id to the public api for manual state changes\n         * @public\n         *\n         * @param {Number} id,\n         * @param {String} newStatus\n         *\n         * @todo Implement the remaining methods\n         */\n        setStatus: function(id, newStatus) {\n            var fileRecord = this.getUploads({id: id});\n            if (!fileRecord) {\n                throw new qq.Error(id + \" is not a valid file ID.\");\n            }\n\n            switch (newStatus) {\n                case qq.status.DELETED:\n                    this._onDeleteComplete(id, null, false);\n                    break;\n                case qq.status.DELETE_FAILED:\n                    this._onDeleteComplete(id, null, true);\n                    break;\n                default:\n                    var errorMessage = \"Method setStatus called on '\" + name + \"' not implemented yet for \" + newStatus;\n                    this.log(errorMessage);\n                    throw new qq.Error(errorMessage);\n            }\n        },\n\n        uploadStoredFiles: function() {\n            if (this._storedIds.length === 0) {\n                this._itemError(\"noFilesError\");\n            }\n            else {\n                this._uploadStoredFiles();\n            }\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploaderBasic mode.\n     */\n    qq.basePrivateApi = {\n        // Updates internal state with a file record (not backed by a live file).  Returns the assigned ID.\n        _addCannedFile: function(sessionData) {\n            var self = this;\n\n            return this._uploadData.addFile({\n                uuid: sessionData.uuid,\n                name: sessionData.name,\n                size: sessionData.size,\n                status: qq.status.UPLOAD_SUCCESSFUL,\n                onBeforeStatusChange: function(id) {\n                    sessionData.deleteFileEndpoint && self.setDeleteFileEndpoint(sessionData.deleteFileEndpoint, id);\n                    sessionData.deleteFileParams && self.setDeleteFileParams(sessionData.deleteFileParams, id);\n\n                    if (sessionData.thumbnailUrl) {\n                        self._thumbnailUrls[id] = sessionData.thumbnailUrl;\n                    }\n\n                    self._netUploaded++;\n                    self._netUploadedOrQueued++;\n                }\n            });\n        },\n\n        _annotateWithButtonId: function(file, associatedInput) {\n            if (qq.isFile(file)) {\n                file.qqButtonId = this._getButtonId(associatedInput);\n            }\n        },\n\n        _batchError: function(message) {\n            this._options.callbacks.onError(null, null, message, undefined);\n        },\n\n        _createDeleteHandler: function() {\n            var self = this;\n\n            return new qq.DeleteFileAjaxRequester({\n                method: this._options.deleteFile.method.toUpperCase(),\n                maxConnections: this._options.maxConnections,\n                uuidParamName: this._options.request.uuidName,\n                customHeaders: this._deleteFileCustomHeadersStore,\n                paramsStore: this._deleteFileParamsStore,\n                endpointStore: this._deleteFileEndpointStore,\n                cors: this._options.cors,\n                log: qq.bind(self.log, self),\n                onDelete: function(id) {\n                    self._onDelete(id);\n                    self._options.callbacks.onDelete(id);\n                },\n                onDeleteComplete: function(id, xhrOrXdr, isError) {\n                    self._onDeleteComplete(id, xhrOrXdr, isError);\n                    self._options.callbacks.onDeleteComplete(id, xhrOrXdr, isError);\n                }\n\n            });\n        },\n\n        _createPasteHandler: function() {\n            var self = this;\n\n            return new qq.PasteSupport({\n                targetElement: this._options.paste.targetElement,\n                callbacks: {\n                    log: qq.bind(self.log, self),\n                    pasteReceived: function(blob) {\n                        self._handleCheckedCallback({\n                            name: \"onPasteReceived\",\n                            callback: qq.bind(self._options.callbacks.onPasteReceived, self, blob),\n                            onSuccess: qq.bind(self._handlePasteSuccess, self, blob),\n                            identifier: \"pasted image\"\n                        });\n                    }\n                }\n            });\n        },\n\n        _createStore: function(initialValue, _readOnlyValues_) {\n            var store = {},\n                catchall = initialValue,\n                perIdReadOnlyValues = {},\n                readOnlyValues = _readOnlyValues_,\n                copy = function(orig) {\n                    if (qq.isObject(orig)) {\n                        return qq.extend({}, orig);\n                    }\n                    return orig;\n                },\n                getReadOnlyValues = function() {\n                    if (qq.isFunction(readOnlyValues)) {\n                        return readOnlyValues();\n                    }\n                    return readOnlyValues;\n                },\n                includeReadOnlyValues = function(id, existing) {\n                    if (readOnlyValues && qq.isObject(existing)) {\n                        qq.extend(existing, getReadOnlyValues());\n                    }\n\n                    if (perIdReadOnlyValues[id]) {\n                        qq.extend(existing, perIdReadOnlyValues[id]);\n                    }\n                };\n\n            return {\n                set: function(val, id) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id == null) {\n                        store = {};\n                        catchall = copy(val);\n                    }\n                    else {\n                        store[id] = copy(val);\n                    }\n                },\n\n                get: function(id) {\n                    var values;\n\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    if (id != null && store[id]) {\n                        values = store[id];\n                    }\n                    else {\n                        values = copy(catchall);\n                    }\n\n                    includeReadOnlyValues(id, values);\n\n                    return copy(values);\n                },\n\n                addReadOnly: function(id, values) {\n                    // Only applicable to Object stores\n                    if (qq.isObject(store)) {\n                        // If null ID, apply readonly values to all files\n                        if (id === null) {\n                            if (qq.isFunction(values)) {\n                                readOnlyValues = values;\n                            }\n                            else {\n                                readOnlyValues = readOnlyValues || {};\n                                qq.extend(readOnlyValues, values);\n                            }\n                        }\n                        else {\n                            perIdReadOnlyValues[id] = perIdReadOnlyValues[id] || {};\n                            qq.extend(perIdReadOnlyValues[id], values);\n                        }\n                    }\n                },\n\n                remove: function(fileId) {\n                    return delete store[fileId];\n                },\n\n                reset: function() {\n                    store = {};\n                    perIdReadOnlyValues = {};\n                    catchall = initialValue;\n                }\n            };\n        },\n\n        _createUploadDataTracker: function() {\n            var self = this;\n\n            return new qq.UploadData({\n                getName: function(id) {\n                    return self.getName(id);\n                },\n                getUuid: function(id) {\n                    return self.getUuid(id);\n                },\n                getSize: function(id) {\n                    return self.getSize(id);\n                },\n                onStatusChange: function(id, oldStatus, newStatus) {\n                    self._onUploadStatusChange(id, oldStatus, newStatus);\n                    self._options.callbacks.onStatusChange(id, oldStatus, newStatus);\n                    self._maybeAllComplete(id, newStatus);\n\n                    if (self._totalProgress) {\n                        setTimeout(function() {\n                            self._totalProgress.onStatusChange(id, oldStatus, newStatus);\n                        }, 0);\n                    }\n                }\n            });\n        },\n\n        /**\n         * Generate a tracked upload button.\n         *\n         * @param spec Object containing a required `element` property\n         * along with optional `multiple`, `accept`, and `folders`.\n         * @returns {qq.UploadButton}\n         * @private\n         */\n        _createUploadButton: function(spec) {\n            var self = this,\n                acceptFiles = spec.accept || this._options.validation.acceptFiles,\n                allowedExtensions = spec.allowedExtensions || this._options.validation.allowedExtensions,\n                button;\n\n            function allowMultiple() {\n                if (qq.supportedFeatures.ajaxUploading) {\n                    // Workaround for bug in iOS7+ (see #1039)\n                    if (self._options.workarounds.iosEmptyVideos &&\n                        qq.ios() &&\n                        !qq.ios6() &&\n                        self._isAllowedExtension(allowedExtensions, \".mov\")) {\n\n                        return false;\n                    }\n\n                    if (spec.multiple === undefined) {\n                        return self._options.multiple;\n                    }\n\n                    return spec.multiple;\n                }\n\n                return false;\n            }\n\n            button = new qq.UploadButton({\n                acceptFiles: acceptFiles,\n                element: spec.element,\n                focusClass: this._options.classes.buttonFocus,\n                folders: spec.folders,\n                hoverClass: this._options.classes.buttonHover,\n                ios8BrowserCrashWorkaround: this._options.workarounds.ios8BrowserCrash,\n                multiple: allowMultiple(),\n                name: this._options.request.inputName,\n                onChange: function(input) {\n                    self._onInputChange(input);\n                },\n                title: spec.title == null ? this._options.text.fileInputTitle : spec.title\n            });\n\n            this._disposeSupport.addDisposer(function() {\n                button.dispose();\n            });\n\n            self._buttons.push(button);\n\n            return button;\n        },\n\n        _createUploadHandler: function(additionalOptions, namespace) {\n            var self = this,\n                lastOnProgress = {},\n                options = {\n                    debug: this._options.debug,\n                    maxConnections: this._options.maxConnections,\n                    cors: this._options.cors,\n                    paramsStore: this._paramsStore,\n                    endpointStore: this._endpointStore,\n                    chunking: this._options.chunking,\n                    resume: this._options.resume,\n                    blobs: this._options.blobs,\n                    log: qq.bind(self.log, self),\n                    preventRetryParam: this._options.retry.preventRetryResponseProperty,\n                    onProgress: function(id, name, loaded, total) {\n                        if (loaded < 0 || total < 0) {\n                            return;\n                        }\n\n                        if (lastOnProgress[id]) {\n                            if (lastOnProgress[id].loaded !== loaded || lastOnProgress[id].total !== total) {\n                                self._onProgress(id, name, loaded, total);\n                                self._options.callbacks.onProgress(id, name, loaded, total);\n                            }\n                        }\n                        else {\n                            self._onProgress(id, name, loaded, total);\n                            self._options.callbacks.onProgress(id, name, loaded, total);\n                        }\n\n                        lastOnProgress[id] = {loaded: loaded, total: total};\n\n                    },\n                    onComplete: function(id, name, result, xhr) {\n                        delete lastOnProgress[id];\n\n                        var status = self.getUploads({id: id}).status,\n                            retVal;\n\n                        // This is to deal with some observed cases where the XHR readyStateChange handler is\n                        // invoked by the browser multiple times for the same XHR instance with the same state\n                        // readyState value.  Higher level: don't invoke complete-related code if we've already\n                        // done this.\n                        if (status === qq.status.UPLOAD_SUCCESSFUL || status === qq.status.UPLOAD_FAILED) {\n                            return;\n                        }\n\n                        retVal = self._onComplete(id, name, result, xhr);\n\n                        // If the internal `_onComplete` handler returns a promise, don't invoke the `onComplete` callback\n                        // until the promise has been fulfilled.\n                        if (retVal instanceof  qq.Promise) {\n                            retVal.done(function() {\n                                self._options.callbacks.onComplete(id, name, result, xhr);\n                            });\n                        }\n                        else {\n                            self._options.callbacks.onComplete(id, name, result, xhr);\n                        }\n                    },\n                    onCancel: function(id, name, cancelFinalizationEffort) {\n                        var promise = new qq.Promise();\n\n                        self._handleCheckedCallback({\n                            name: \"onCancel\",\n                            callback: qq.bind(self._options.callbacks.onCancel, self, id, name),\n                            onFailure: promise.failure,\n                            onSuccess: function() {\n                                cancelFinalizationEffort.then(function() {\n                                    self._onCancel(id, name);\n                                });\n\n                                promise.success();\n                            },\n                            identifier: id\n                        });\n\n                        return promise;\n                    },\n                    onUploadPrep: qq.bind(this._onUploadPrep, this),\n                    onUpload: function(id, name) {\n                        self._onUpload(id, name);\n                        var onUploadResult = self._options.callbacks.onUpload(id, name);\n\n                        if (qq.isGenericPromise(onUploadResult)) {\n                            self.log(qq.format(\"onUpload for {} returned a Promise - waiting for resolution.\", id));\n                            return onUploadResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunk: function(id, name, chunkData) {\n                        self._onUploadChunk(id, chunkData);\n                        var onUploadChunkResult = self._options.callbacks.onUploadChunk(id, name, chunkData);\n\n                        if (qq.isGenericPromise(onUploadChunkResult)) {\n                            self.log(qq.format(\"onUploadChunk for {}.{} returned a Promise - waiting for resolution.\", id, chunkData.partIndex));\n                            return onUploadChunkResult;\n                        }\n\n                        return new qq.Promise().success();\n                    },\n                    onUploadChunkSuccess: function(id, chunkData, result, xhr) {\n                        self._options.callbacks.onUploadChunkSuccess.apply(self, arguments);\n                    },\n                    onResume: function(id, name, chunkData, customResumeData) {\n                        return self._options.callbacks.onResume(id, name, chunkData, customResumeData);\n                    },\n                    onAutoRetry: function(id, name, responseJSON, xhr) {\n                        return self._onAutoRetry.apply(self, arguments);\n                    },\n                    onUuidChanged: function(id, newUuid) {\n                        self.log(\"Server requested UUID change from '\" + self.getUuid(id) + \"' to '\" + newUuid + \"'\");\n                        self.setUuid(id, newUuid);\n                    },\n                    getName: qq.bind(self.getName, self),\n                    getUuid: qq.bind(self.getUuid, self),\n                    getSize: qq.bind(self.getSize, self),\n                    setSize: qq.bind(self._setSize, self),\n                    getDataByUuid: function(uuid) {\n                        return self.getUploads({uuid: uuid});\n                    },\n                    isQueued: function(id) {\n                        var status = self.getUploads({id: id}).status;\n                        return status === qq.status.QUEUED ||\n                            status === qq.status.SUBMITTED ||\n                            status === qq.status.UPLOAD_RETRYING ||\n                            status === qq.status.PAUSED;\n                    },\n                    getIdsInProxyGroup: self._uploadData.getIdsInProxyGroup,\n                    getIdsInBatch: self._uploadData.getIdsInBatch,\n                    isInProgress: function(id) {\n                        return self.getUploads({id: id}).status === qq.status.UPLOADING;\n                    },\n                    getCustomResumeData: qq.bind(self._getCustomResumeData, self),\n                    setStatus: function(id, status) {\n                        self._uploadData.setStatus(id, status);\n                    }\n                };\n\n            qq.each(this._options.request, function(prop, val) {\n                options[prop] = val;\n            });\n\n            options.customHeaders = this._customHeadersStore;\n\n            if (additionalOptions) {\n                qq.each(additionalOptions, function(key, val) {\n                    options[key] = val;\n                });\n            }\n\n            return new qq.UploadHandlerController(options, namespace);\n        },\n\n        _fileOrBlobRejected: function(id) {\n            this._netUploadedOrQueued--;\n            this._uploadData.setStatus(id, qq.status.REJECTED);\n        },\n\n        _formatSize: function(bytes) {\n            if (bytes === 0) {\n                return bytes + this._options.text.sizeSymbols[0];\n            }\n            var i = -1;\n            do {\n                bytes = bytes / 1000;\n                i++;\n            } while (bytes > 999);\n\n            return Math.max(bytes, 0.1).toFixed(1) + this._options.text.sizeSymbols[i];\n        },\n\n        // Creates an internal object that tracks various properties of each extra button,\n        // and then actually creates the extra button.\n        _generateExtraButtonSpecs: function() {\n            var self = this;\n\n            this._extraButtonSpecs = {};\n\n            qq.each(this._options.extraButtons, function(idx, extraButtonOptionEntry) {\n                var multiple = extraButtonOptionEntry.multiple,\n                    validation = qq.extend({}, self._options.validation, true),\n                    extraButtonSpec = qq.extend({}, extraButtonOptionEntry);\n\n                if (multiple === undefined) {\n                    multiple = self._options.multiple;\n                }\n\n                if (extraButtonSpec.validation) {\n                    qq.extend(validation, extraButtonOptionEntry.validation, true);\n                }\n\n                qq.extend(extraButtonSpec, {\n                    multiple: multiple,\n                    validation: validation\n                }, true);\n\n                self._initExtraButton(extraButtonSpec);\n            });\n        },\n\n        _getButton: function(buttonId) {\n            var extraButtonsSpec = this._extraButtonSpecs[buttonId];\n\n            if (extraButtonsSpec) {\n                return extraButtonsSpec.element;\n            }\n            else if (buttonId === this._defaultButtonId) {\n                return this._options.button;\n            }\n        },\n\n        /**\n         * Gets the internally used tracking ID for a button.\n         *\n         * @param buttonOrFileInputOrFile `File`, `<input type=\"file\">`, or a button container element\n         * @returns {*} The button's ID, or undefined if no ID is recoverable\n         * @private\n         */\n        _getButtonId: function(buttonOrFileInputOrFile) {\n            var inputs, fileInput,\n                fileBlobOrInput = buttonOrFileInputOrFile;\n\n            // We want the reference file/blob here if this is a proxy (a file that will be generated on-demand later)\n            if (fileBlobOrInput instanceof qq.BlobProxy) {\n                fileBlobOrInput = fileBlobOrInput.referenceBlob;\n            }\n\n            // If the item is a `Blob` it will never be associated with a button or drop zone.\n            if (fileBlobOrInput && !qq.isBlob(fileBlobOrInput)) {\n                if (qq.isFile(fileBlobOrInput)) {\n                    return fileBlobOrInput.qqButtonId;\n                }\n                else if (fileBlobOrInput.tagName.toLowerCase() === \"input\" &&\n                    fileBlobOrInput.type.toLowerCase() === \"file\") {\n\n                    return fileBlobOrInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n\n                inputs = fileBlobOrInput.getElementsByTagName(\"input\");\n\n                qq.each(inputs, function(idx, input) {\n                    if (input.getAttribute(\"type\") === \"file\") {\n                        fileInput = input;\n                        return false;\n                    }\n                });\n\n                if (fileInput) {\n                    return fileInput.getAttribute(qq.UploadButton.BUTTON_ID_ATTR_NAME);\n                }\n            }\n        },\n\n        _getCustomResumeData: function(fileId) {\n            return this._customResumeDataStore.get(fileId);\n        },\n\n        _getNotFinished: function() {\n            return this._uploadData.retrieve({\n                status: [\n                    qq.status.UPLOADING,\n                    qq.status.UPLOAD_RETRYING,\n                    qq.status.QUEUED,\n                    qq.status.SUBMITTING,\n                    qq.status.SUBMITTED,\n                    qq.status.PAUSED\n                ]\n            }).length;\n        },\n\n        // Get the validation options for this button.  Could be the default validation option\n        // or a specific one assigned to this particular button.\n        _getValidationBase: function(buttonId) {\n            var extraButtonSpec = this._extraButtonSpecs[buttonId];\n\n            return extraButtonSpec ? extraButtonSpec.validation : this._options.validation;\n        },\n\n        _getValidationDescriptor: function(fileWrapper) {\n            if (fileWrapper.file instanceof qq.BlobProxy) {\n                return {\n                    name: qq.getFilename(fileWrapper.file.referenceBlob),\n                    size: fileWrapper.file.referenceBlob.size\n                };\n            }\n\n            return {\n                name: this.getUploads({id: fileWrapper.id}).name,\n                size: this.getUploads({id: fileWrapper.id}).size\n            };\n        },\n\n        _getValidationDescriptors: function(fileWrappers) {\n            var self = this,\n                fileDescriptors = [];\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                fileDescriptors.push(self._getValidationDescriptor(fileWrapper));\n            });\n\n            return fileDescriptors;\n        },\n\n        // Allows camera access on either the default or an extra button for iOS devices.\n        _handleCameraAccess: function() {\n            if (this._options.camera.ios && qq.ios()) {\n                var acceptIosCamera = \"image/*;capture=camera\",\n                    button = this._options.camera.button,\n                    buttonId = button ? this._getButtonId(button) : this._defaultButtonId,\n                    optionRoot = this._options;\n\n                // If we are not targeting the default button, it is an \"extra\" button\n                if (buttonId && buttonId !== this._defaultButtonId) {\n                    optionRoot = this._extraButtonSpecs[buttonId];\n                }\n\n                // Camera access won't work in iOS if the `multiple` attribute is present on the file input\n                optionRoot.multiple = false;\n\n                // update the options\n                if (optionRoot.validation.acceptFiles === null) {\n                    optionRoot.validation.acceptFiles = acceptIosCamera;\n                }\n                else {\n                    optionRoot.validation.acceptFiles += \",\" + acceptIosCamera;\n                }\n\n                // update the already-created button\n                qq.each(this._buttons, function(idx, button) {\n                    if (button.getButtonId() === buttonId) {\n                        button.setMultiple(optionRoot.multiple);\n                        button.setAcceptFiles(optionRoot.acceptFiles);\n\n                        return false;\n                    }\n                });\n            }\n        },\n\n        _handleCheckedCallback: function(details) {\n            var self = this,\n                callbackRetVal = details.callback();\n\n            if (qq.isGenericPromise(callbackRetVal)) {\n                this.log(details.name + \" - waiting for \" + details.name + \" promise to be fulfilled for \" + details.identifier);\n                return callbackRetVal.then(\n                    function(successParam) {\n                        self.log(details.name + \" promise success for \" + details.identifier);\n                        details.onSuccess(successParam);\n                    },\n                    function() {\n                        if (details.onFailure) {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                            details.onFailure();\n                        }\n                        else {\n                            self.log(details.name + \" promise failure for \" + details.identifier);\n                        }\n                    });\n            }\n\n            if (callbackRetVal !== false) {\n                details.onSuccess(callbackRetVal);\n            }\n            else {\n                if (details.onFailure) {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Invoking failure callback.\");\n                    details.onFailure();\n                }\n                else {\n                    this.log(details.name + \" - return value was 'false' for \" + details.identifier + \".  Will not proceed.\");\n                }\n            }\n\n            return callbackRetVal;\n        },\n\n        // Updates internal state when a new file has been received, and adds it along with its ID to a passed array.\n        _handleNewFile: function(file, batchId, newFileWrapperList) {\n            var self = this,\n                uuid = qq.getUniqueId(),\n                size = -1,\n                name = qq.getFilename(file),\n                actualFile = file.blob || file,\n                handler = this._customNewFileHandler ?\n                    this._customNewFileHandler :\n                    qq.bind(self._handleNewFileGeneric, self);\n\n            if (!qq.isInput(actualFile) && actualFile.size >= 0) {\n                size = actualFile.size;\n            }\n\n            handler(actualFile, name, uuid, size, newFileWrapperList, batchId, this._options.request.uuidName, {\n                uploadData: self._uploadData,\n                paramsStore: self._paramsStore,\n                addFileToHandler: function(id, file) {\n                    self._handler.add(id, file);\n                    self._netUploadedOrQueued++;\n                    self._trackButton(id);\n                }\n            });\n        },\n\n        _handleNewFileGeneric: function(file, name, uuid, size, fileList, batchId) {\n            var id = this._uploadData.addFile({uuid: uuid, name: name, size: size, batchId: batchId});\n\n            this._handler.add(id, file);\n            this._trackButton(id);\n\n            this._netUploadedOrQueued++;\n\n            fileList.push({id: id, file: file});\n        },\n\n        _handlePasteSuccess: function(blob, extSuppliedName) {\n            var extension = blob.type.split(\"/\")[1],\n                name = extSuppliedName;\n\n            /*jshint eqeqeq: true, eqnull: true*/\n            if (name == null) {\n                name = this._options.paste.defaultName;\n            }\n\n            name += \".\" + extension;\n\n            this.addFiles({\n                name: name,\n                blob: blob\n            });\n        },\n\n        _handleDeleteSuccess: function(id) {\n            if (this.getUploads({id: id}).status !== qq.status.DELETED) {\n                var name = this.getName(id);\n\n                this._netUploadedOrQueued--;\n                this._netUploaded--;\n                this._handler.expunge(id);\n                this._uploadData.setStatus(id, qq.status.DELETED);\n                this.log(\"Delete request for '\" + name + \"' has succeeded.\");\n            }\n        },\n\n        _handleDeleteFailed: function(id, xhrOrXdr) {\n            var name = this.getName(id);\n\n            this._uploadData.setStatus(id, qq.status.DELETE_FAILED);\n            this.log(\"Delete request for '\" + name + \"' has failed.\", \"error\");\n\n            // Check first if xhrOrXdr is actually passed or valid\n            // For error reporting, we only have access to the response status if this is not\n            // an `XDomainRequest`.\n            if (!xhrOrXdr || xhrOrXdr.withCredentials === undefined) {\n                this._options.callbacks.onError(id, name, \"Delete request failed\", xhrOrXdr);\n            }\n            else {\n                this._options.callbacks.onError(id, name, \"Delete request failed with response code \" + xhrOrXdr.status, xhrOrXdr);\n            }\n        },\n\n        // Creates an extra button element\n        _initExtraButton: function(spec) {\n            var button = this._createUploadButton({\n                accept: spec.validation.acceptFiles,\n                allowedExtensions: spec.validation.allowedExtensions,\n                element: spec.element,\n                folders: spec.folders,\n                multiple: spec.multiple,\n                title: spec.fileInputTitle\n            });\n\n            this._extraButtonSpecs[button.getButtonId()] = spec;\n        },\n\n        _initFormSupportAndParams: function() {\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n            );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore = this._createStore(\n                    this._options.request.params,  this._formSupport.getFormInputsAsObject\n                );\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this._options.request.endpoint = this._formSupport.newEndpoint;\n                }\n            }\n            else {\n                this._paramsStore = this._createStore(this._options.request.params);\n            }\n        },\n\n        _isDeletePossible: function() {\n            if (!qq.DeleteFileAjaxRequester || !this._options.deleteFile.enabled) {\n                return false;\n            }\n\n            if (this._options.cors.expected) {\n                if (qq.supportedFeatures.deleteFileCorsXhr) {\n                    return true;\n                }\n\n                if (qq.supportedFeatures.deleteFileCorsXdr && this._options.cors.allowXdr) {\n                    return true;\n                }\n\n                return false;\n            }\n\n            return true;\n        },\n\n        _isAllowedExtension: function(allowed, fileName) {\n            var valid = false;\n\n            if (!allowed.length) {\n                return true;\n            }\n\n            qq.each(allowed, function(idx, allowedExt) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExt)) {\n                    /*jshint eqeqeq: true, eqnull: true*/\n                    var extRegex = new RegExp(\"\\\\.\" + allowedExt + \"$\", \"i\");\n\n                    if (fileName.match(extRegex) != null) {\n                        valid = true;\n                        return false;\n                    }\n                }\n            });\n\n            return valid;\n        },\n\n        /**\n         * Constructs and returns a message that describes an item/file error.  Also calls `onError` callback.\n         *\n         * @param code REQUIRED - a code that corresponds to a stock message describing this type of error\n         * @param maybeNameOrNames names of the items that have failed, if applicable\n         * @param item `File`, `Blob`, or `<input type=\"file\">`\n         * @private\n         */\n        _itemError: function(code, maybeNameOrNames, item) {\n            var message = this._options.messages[code],\n                allowedExtensions = [],\n                names = [].concat(maybeNameOrNames),\n                name = names[0],\n                buttonId = this._getButtonId(item),\n                validationBase = this._getValidationBase(buttonId),\n                extensionsForMessage, placeholderMatch;\n\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            qq.each(validationBase.allowedExtensions, function(idx, allowedExtension) {\n                /**\n                 * If an argument is not a string, ignore it.  Added when a possible issue with MooTools hijacking the\n                 * `allowedExtensions` array was discovered.  See case #735 in the issue tracker for more details.\n                 */\n                if (qq.isString(allowedExtension)) {\n                    allowedExtensions.push(allowedExtension);\n                }\n            });\n\n            extensionsForMessage = allowedExtensions.join(\", \").toLowerCase();\n\n            r(\"{file}\", this._options.formatFileName(name));\n            r(\"{extensions}\", extensionsForMessage);\n            r(\"{sizeLimit}\", this._formatSize(validationBase.sizeLimit));\n            r(\"{minSizeLimit}\", this._formatSize(validationBase.minSizeLimit));\n\n            placeholderMatch = message.match(/(\\{\\w+\\})/g);\n            if (placeholderMatch !== null) {\n                qq.each(placeholderMatch, function(idx, placeholder) {\n                    r(placeholder, names[idx]);\n                });\n            }\n\n            this._options.callbacks.onError(null, name, message, undefined);\n\n            return message;\n        },\n\n        /**\n         * Conditionally orders a manual retry of a failed upload.\n         *\n         * @param id File ID of the failed upload\n         * @param callback Optional callback to invoke if a retry is prudent.\n         * In lieu of asking the upload handler to retry.\n         * @returns {boolean} true if a manual retry will occur\n         * @private\n         */\n        _manualRetry: function(id, callback) {\n            if (this._onBeforeManualRetry(id)) {\n                this._netUploadedOrQueued++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n\n                if (callback) {\n                    callback(id);\n                }\n                else {\n                    this._handler.retry(id);\n                }\n\n                return true;\n            }\n        },\n\n        _maybeAllComplete: function(id, status) {\n            var self = this,\n                notFinished = this._getNotFinished();\n\n            if (status === qq.status.UPLOAD_SUCCESSFUL) {\n                this._succeededSinceLastAllComplete.push(id);\n            }\n            else if (status === qq.status.UPLOAD_FAILED) {\n                this._failedSinceLastAllComplete.push(id);\n            }\n\n            if (notFinished === 0 &&\n                (this._succeededSinceLastAllComplete.length || this._failedSinceLastAllComplete.length)) {\n                // Attempt to ensure onAllComplete is not invoked before other callbacks, such as onCancel & onComplete\n                setTimeout(function() {\n                    self._onAllComplete(self._succeededSinceLastAllComplete, self._failedSinceLastAllComplete);\n                }, 0);\n            }\n        },\n\n        _maybeHandleIos8SafariWorkaround: function() {\n            var self = this;\n\n            if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n                setTimeout(function() {\n                    window.alert(self._options.messages.unsupportedBrowserIos8Safari);\n                }, 0);\n                throw new qq.Error(this._options.messages.unsupportedBrowserIos8Safari);\n            }\n        },\n\n        _maybeParseAndSendUploadError: function(id, name, response, xhr) {\n            // Assuming no one will actually set the response code to something other than 200\n            // and still set 'success' to true...\n            if (!response.success) {\n                if (xhr && xhr.status !== 200 && !response.error) {\n                    this._options.callbacks.onError(id, name, \"XHR returned response code \" + xhr.status, xhr);\n                }\n                else {\n                    var errorReason = response.error ? response.error : this._options.text.defaultResponseError;\n                    this._options.callbacks.onError(id, name, errorReason, xhr);\n                }\n            }\n        },\n\n        _maybeProcessNextItemAfterOnValidateCallback: function(validItem, items, index, params, endpoint) {\n            var self = this;\n\n            if (items.length > index) {\n                if (validItem || !this._options.validation.stopOnFirstInvalidFile) {\n                    //use setTimeout to prevent a stack overflow with a large number of files in the batch & non-promissory callbacks\n                    setTimeout(function() {\n                        var validationDescriptor = self._getValidationDescriptor(items[index]),\n                            buttonId = self._getButtonId(items[index].file),\n                            button = self._getButton(buttonId);\n\n                        self._handleCheckedCallback({\n                            name: \"onValidate\",\n                            callback: qq.bind(self._options.callbacks.onValidate, self, validationDescriptor, button),\n                            onSuccess: qq.bind(self._onValidateCallbackSuccess, self, items, index, params, endpoint),\n                            onFailure: qq.bind(self._onValidateCallbackFailure, self, items, index, params, endpoint),\n                            identifier: \"Item '\" + validationDescriptor.name + \"', size: \" + validationDescriptor.size\n                        });\n                    }, 0);\n                }\n                else if (!validItem) {\n                    for (; index < items.length; index++) {\n                        self._fileOrBlobRejected(items[index].id);\n                    }\n                }\n            }\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._totalProgress && this._totalProgress.onAllComplete(successful, failed, this._preventRetries);\n\n            this._options.callbacks.onAllComplete(qq.extend([], successful), qq.extend([], failed));\n\n            this._succeededSinceLastAllComplete = [];\n            this._failedSinceLastAllComplete = [];\n        },\n\n        /**\n         * Attempt to automatically retry a failed upload.\n         *\n         * @param id The file ID of the failed upload\n         * @param name The name of the file associated with the failed upload\n         * @param responseJSON Response from the server, parsed into a javascript object\n         * @param xhr Ajax transport used to send the failed request\n         * @param callback Optional callback to be invoked if a retry is prudent.\n         * Invoked in lieu of asking the upload handler to retry.\n         * @returns {boolean} true if an auto-retry will occur\n         * @private\n         */\n        _onAutoRetry: function(id, name, responseJSON, xhr, callback) {\n            var self = this;\n\n            self._preventRetries[id] = responseJSON[self._options.retry.preventRetryResponseProperty];\n\n            if (self._shouldAutoRetry(id)) {\n                var retryWaitPeriod = self._options.retry.autoAttemptDelay * 1000;\n\n                self._maybeParseAndSendUploadError.apply(self, arguments);\n                self._options.callbacks.onAutoRetry(id, name, self._autoRetries[id]);\n                self._onBeforeAutoRetry(id, name);\n\n                self._uploadData.setStatus(id, qq.status.UPLOAD_RETRYING);\n                self._retryTimeouts[id] = setTimeout(function() {\n                    self.log(\"Starting retry for \" + name + \"...\");\n\n                    if (callback) {\n                        callback(id);\n                    }\n                    else {\n                        self._handler.retry(id);\n                    }\n                }, retryWaitPeriod);\n\n                return true;\n            }\n        },\n\n        _onBeforeAutoRetry: function(id, name) {\n            this.log(\"Waiting \" + this._options.retry.autoAttemptDelay + \" seconds before retrying \" + name + \"...\");\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            var itemLimit = this._currentItemLimit,\n                fileName;\n\n            if (this._preventRetries[id]) {\n                this.log(\"Retries are forbidden for id \" + id, \"warn\");\n                return false;\n            }\n            else if (this._handler.isValid(id)) {\n                fileName = this.getName(id);\n\n                if (this._options.callbacks.onManualRetry(id, fileName) === false) {\n                    return false;\n                }\n\n                if (itemLimit > 0 && this._netUploadedOrQueued + 1 > itemLimit) {\n                    this._itemError(\"retryFailTooManyItems\");\n                    return false;\n                }\n\n                this.log(\"Retrying upload for '\" + fileName + \"' (id: \" + id + \")...\");\n                return true;\n            }\n            else {\n                this.log(\"'\" + id + \"' is not a valid file ID\", \"error\");\n                return false;\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._netUploadedOrQueued--;\n\n            clearTimeout(this._retryTimeouts[id]);\n\n            var storedItemIndex = qq.indexOf(this._storedIds, id);\n            if (!this._options.autoUpload && storedItemIndex >= 0) {\n                this._storedIds.splice(storedItemIndex, 1);\n            }\n\n            this._uploadData.setStatus(id, qq.status.CANCELED);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            if (!result.success) {\n                this._netUploadedOrQueued--;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_FAILED);\n\n                if (result[this._options.retry.preventRetryResponseProperty] === true) {\n                    this._preventRetries[id] = true;\n                }\n            }\n            else {\n                if (result.thumbnailUrl) {\n                    this._thumbnailUrls[id] = result.thumbnailUrl;\n                }\n\n                this._netUploaded++;\n                this._uploadData.setStatus(id, qq.status.UPLOAD_SUCCESSFUL);\n            }\n\n            this._maybeParseAndSendUploadError(id, name, result, xhr);\n\n            return result.success ? true : false;\n        },\n\n        _onDelete: function(id) {\n            this._uploadData.setStatus(id, qq.status.DELETING);\n        },\n\n        _onDeleteComplete: function(id, xhrOrXdr, isError) {\n            var name = this.getName(id);\n\n            if (isError) {\n                this._handleDeleteFailed(id, xhrOrXdr);\n            }\n            else {\n                this._handleDeleteSuccess(id);\n            }\n        },\n\n        _onInputChange: function(input) {\n            var fileIndex;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                for (fileIndex = 0; fileIndex < input.files.length; fileIndex++) {\n                    this._annotateWithButtonId(input.files[fileIndex], input);\n                }\n\n                this.addFiles(input.files);\n            }\n            // Android 2.3.x will fire `onchange` even if no file has been selected\n            else if (input.value.length > 0) {\n                this.addFiles(input);\n            }\n\n            qq.each(this._buttons, function(idx, button) {\n                button.reset();\n            });\n        },\n\n        _onProgress: function(id, name, loaded, total) {\n            this._totalProgress && this._totalProgress.onIndividualProgress(id, loaded, total);\n        },\n\n        _onSubmit: function(id, name) {\n            //nothing to do yet in core uploader\n        },\n\n        _onSubmitCallbackSuccess: function(id, name) {\n            this._onSubmit.apply(this, arguments);\n            this._uploadData.setStatus(id, qq.status.SUBMITTED);\n            this._onSubmitted.apply(this, arguments);\n\n            if (this._options.autoUpload) {\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n                this._uploadFile(id);\n            }\n            else {\n                this._storeForLater(id);\n                this._options.callbacks.onSubmitted.apply(this, arguments);\n            }\n        },\n\n        _onSubmitDelete: function(id, onSuccessCallback, additionalMandatedParams) {\n            var uuid = this.getUuid(id),\n                adjustedOnSuccessCallback;\n\n            if (onSuccessCallback) {\n                adjustedOnSuccessCallback = qq.bind(onSuccessCallback, this, id, uuid, additionalMandatedParams);\n            }\n\n            if (this._isDeletePossible()) {\n                this._handleCheckedCallback({\n                    name: \"onSubmitDelete\",\n                    callback: qq.bind(this._options.callbacks.onSubmitDelete, this, id),\n                    onSuccess: adjustedOnSuccessCallback ||\n                        qq.bind(this._deleteHandler.sendDelete, this, id, uuid, additionalMandatedParams),\n                    identifier: id\n                });\n                return true;\n            }\n            else {\n                this.log(\"Delete request ignored for ID \" + id + \", delete feature is disabled or request not possible \" +\n                    \"due to CORS on a user agent that does not support pre-flighting.\", \"warn\");\n                return false;\n            }\n        },\n\n        _onSubmitted: function(id) {\n            //nothing to do in the base uploader\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._options.callbacks.onTotalProgress(loaded, total);\n        },\n\n        _onUploadPrep: function(id) {\n            // nothing to do in the core uploader for now\n        },\n\n        _onUpload: function(id, name) {\n            this._uploadData.setStatus(id, qq.status.UPLOADING);\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            //nothing to do in the base uploader\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            // Make sure a \"queued\" retry attempt is canceled if the upload has been paused\n            if (newStatus === qq.status.PAUSED) {\n                clearTimeout(this._retryTimeouts[id]);\n            }\n        },\n\n        _onValidateBatchCallbackFailure: function(fileWrappers) {\n            var self = this;\n\n            qq.each(fileWrappers, function(idx, fileWrapper) {\n                self._fileOrBlobRejected(fileWrapper.id);\n            });\n        },\n\n        _onValidateBatchCallbackSuccess: function(validationDescriptors, items, params, endpoint, button) {\n            var errorMessage,\n                itemLimit = this._currentItemLimit,\n                proposedNetFilesUploadedOrQueued = this._netUploadedOrQueued;\n\n            if (itemLimit === 0 || proposedNetFilesUploadedOrQueued <= itemLimit) {\n                if (items.length > 0) {\n                    this._handleCheckedCallback({\n                        name: \"onValidate\",\n                        callback: qq.bind(this._options.callbacks.onValidate, this, validationDescriptors[0], button),\n                        onSuccess: qq.bind(this._onValidateCallbackSuccess, this, items, 0, params, endpoint),\n                        onFailure: qq.bind(this._onValidateCallbackFailure, this, items, 0, params, endpoint),\n                        identifier: \"Item '\" + items[0].file.name + \"', size: \" + items[0].file.size\n                    });\n                }\n                else {\n                    this._itemError(\"noFilesError\");\n                }\n            }\n            else {\n                this._onValidateBatchCallbackFailure(items);\n                errorMessage = this._options.messages.tooManyItemsError\n                    .replace(/\\{netItems\\}/g, proposedNetFilesUploadedOrQueued)\n                    .replace(/\\{itemLimit\\}/g, itemLimit);\n                this._batchError(errorMessage);\n            }\n        },\n\n        _onValidateCallbackFailure: function(items, index, params, endpoint) {\n            var nextIndex = index + 1;\n\n            this._fileOrBlobRejected(items[index].id, items[index].file.name);\n\n            this._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n        },\n\n        _onValidateCallbackSuccess: function(items, index, params, endpoint) {\n            var self = this,\n                nextIndex = index + 1,\n                validationDescriptor = this._getValidationDescriptor(items[index]);\n\n            this._validateFileOrBlobData(items[index], validationDescriptor)\n                .then(\n                function() {\n                    self._upload(items[index].id, params, endpoint);\n                    self._maybeProcessNextItemAfterOnValidateCallback(true, items, nextIndex, params, endpoint);\n                },\n                function() {\n                    self._maybeProcessNextItemAfterOnValidateCallback(false, items, nextIndex, params, endpoint);\n                }\n            );\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            if (items.length === 0) {\n                this._itemError(\"noFilesError\");\n                return;\n            }\n\n            var validationDescriptors = this._getValidationDescriptors(items),\n                buttonId = this._getButtonId(items[0].file),\n                button = this._getButton(buttonId);\n\n            this._handleCheckedCallback({\n                name: \"onValidateBatch\",\n                callback: qq.bind(this._options.callbacks.onValidateBatch, this, validationDescriptors, button),\n                onSuccess: qq.bind(this._onValidateBatchCallbackSuccess, this, validationDescriptors, items, params, endpoint, button),\n                onFailure: qq.bind(this._onValidateBatchCallbackFailure, this, items),\n                identifier: \"batch validation\"\n            });\n        },\n\n        _preventLeaveInProgress: function() {\n            var self = this;\n\n            this._disposeSupport.attach(window, \"beforeunload\", function(e) {\n                if (self.getInProgress()) {\n                    e = e || window.event;\n                    // for ie, ff\n                    e.returnValue = self._options.messages.onLeave;\n                    // for webkit\n                    return self._options.messages.onLeave;\n                }\n            });\n        },\n\n        // Attempts to refresh session data only if the `qq.Session` module exists\n        // and a session endpoint has been specified.  The `onSessionRequestComplete`\n        // callback will be invoked once the refresh is complete.\n        _refreshSessionData: function() {\n            var self = this,\n                options = this._options.session;\n\n            /* jshint eqnull:true */\n            if (qq.Session && this._options.session.endpoint != null) {\n                if (!this._session) {\n                    qq.extend(options, {cors: this._options.cors});\n\n                    options.log = qq.bind(this.log, this);\n                    options.addFileRecord = qq.bind(this._addCannedFile, this);\n\n                    this._session = new qq.Session(options);\n                }\n\n                setTimeout(function() {\n                    self._session.refresh().then(function(response, xhrOrXdr) {\n                        self._sessionRequestComplete();\n                        self._options.callbacks.onSessionRequestComplete(response, true, xhrOrXdr);\n\n                    }, function(response, xhrOrXdr) {\n\n                        self._options.callbacks.onSessionRequestComplete(response, false, xhrOrXdr);\n                    });\n                }, 0);\n            }\n        },\n\n        _sessionRequestComplete: function() {},\n\n        _setSize: function(id, newSize) {\n            this._uploadData.updateSize(id, newSize);\n            this._totalProgress && this._totalProgress.onNewSize(id);\n        },\n\n        _shouldAutoRetry: function(id) {\n            var uploadData = this._uploadData.retrieve({id: id});\n\n            /*jshint laxbreak: true */\n            if (!this._preventRetries[id]\n                && this._options.retry.enableAuto\n                && uploadData.status !== qq.status.PAUSED) {\n\n                if (this._autoRetries[id] === undefined) {\n                    this._autoRetries[id] = 0;\n                }\n\n                if (this._autoRetries[id] < this._options.retry.maxAutoAttempts) {\n                    this._autoRetries[id] += 1;\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        _storeForLater: function(id) {\n            this._storedIds.push(id);\n        },\n\n        // Maps a file with the button that was used to select it.\n        _trackButton: function(id) {\n            var buttonId;\n\n            if (qq.supportedFeatures.ajaxUploading) {\n                buttonId = this._handler.getFile(id).qqButtonId;\n            }\n            else {\n                buttonId = this._getButtonId(this._handler.getInput(id));\n            }\n\n            if (buttonId) {\n                this._buttonIdsForFileIds[id] = buttonId;\n            }\n        },\n\n        _updateFormSupportAndParams: function(formElementOrId) {\n            this._options.form.element = formElementOrId;\n\n            this._formSupport = qq.FormSupport && new qq.FormSupport(\n                    this._options.form, qq.bind(this.uploadStoredFiles, this), qq.bind(this.log, this)\n                );\n\n            if (this._formSupport && this._formSupport.attachedToForm) {\n                this._paramsStore.addReadOnly(null, this._formSupport.getFormInputsAsObject);\n\n                this._options.autoUpload = this._formSupport.newAutoUpload;\n                if (this._formSupport.newEndpoint) {\n                    this.setEndpoint(this._formSupport.newEndpoint);\n                }\n            }\n        },\n\n        _upload: function(id, params, endpoint) {\n            var name = this.getName(id);\n\n            if (params) {\n                this.setParams(params, id);\n            }\n\n            if (endpoint) {\n                this.setEndpoint(endpoint, id);\n            }\n\n            this._handleCheckedCallback({\n                name: \"onSubmit\",\n                callback: qq.bind(this._options.callbacks.onSubmit, this, id, name),\n                onSuccess: qq.bind(this._onSubmitCallbackSuccess, this, id, name),\n                onFailure: qq.bind(this._fileOrBlobRejected, this, id, name),\n                identifier: id\n            });\n        },\n\n        _uploadFile: function(id) {\n            if (!this._handler.upload(id)) {\n                this._uploadData.setStatus(id, qq.status.QUEUED);\n            }\n        },\n\n        _uploadStoredFiles: function() {\n            var idToUpload, stillSubmitting,\n                self = this;\n\n            while (this._storedIds.length) {\n                idToUpload = this._storedIds.shift();\n                this._uploadFile(idToUpload);\n            }\n\n            // If we are still waiting for some files to clear validation, attempt to upload these again in a bit\n            stillSubmitting = this.getUploads({status: qq.status.SUBMITTING}).length;\n            if (stillSubmitting) {\n                qq.log(\"Still waiting for \" + stillSubmitting + \" files to clear submit queue. Will re-parse stored IDs array shortly.\");\n                setTimeout(function() {\n                    self._uploadStoredFiles();\n                }, 1000);\n            }\n        },\n\n        /**\n         * Performs some internal validation checks on an item, defined in the `validation` option.\n         *\n         * @param fileWrapper Wrapper containing a `file` along with an `id`\n         * @param validationDescriptor Normalized information about the item (`size`, `name`).\n         * @returns qq.Promise with appropriate callbacks invoked depending on the validity of the file\n         * @private\n         */\n        _validateFileOrBlobData: function(fileWrapper, validationDescriptor) {\n            var self = this,\n                file = (function() {\n                    if (fileWrapper.file instanceof qq.BlobProxy) {\n                        return fileWrapper.file.referenceBlob;\n                    }\n                    return fileWrapper.file;\n                }()),\n                name = validationDescriptor.name,\n                size = validationDescriptor.size,\n                buttonId = this._getButtonId(fileWrapper.file),\n                validationBase = this._getValidationBase(buttonId),\n                validityChecker = new qq.Promise();\n\n            validityChecker.then(\n                function() {},\n                function() {\n                    self._fileOrBlobRejected(fileWrapper.id, name);\n                });\n\n            if (qq.isFileOrInput(file) && !this._isAllowedExtension(validationBase.allowedExtensions, name)) {\n                this._itemError(\"typeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (!this._options.validation.allowEmpty && size === 0) {\n                this._itemError(\"emptyError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && validationBase.sizeLimit && size > validationBase.sizeLimit) {\n                this._itemError(\"sizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (size > 0 && size < validationBase.minSizeLimit) {\n                this._itemError(\"minSizeError\", name, file);\n                return validityChecker.failure();\n            }\n\n            if (qq.ImageValidation && qq.supportedFeatures.imagePreviews && qq.isFile(file)) {\n                new qq.ImageValidation(file, qq.bind(self.log, self)).validate(validationBase.image).then(\n                    validityChecker.success,\n                    function(errorCode) {\n                        self._itemError(errorCode + \"ImageError\", name, file);\n                        validityChecker.failure();\n                    }\n                );\n            }\n            else {\n                validityChecker.success();\n            }\n\n            return validityChecker;\n        },\n\n        _wrapCallbacks: function() {\n            var self, safeCallback, prop;\n\n            self = this;\n\n            safeCallback = function(name, callback, args) {\n                var errorMsg;\n\n                try {\n                    return callback.apply(self, args);\n                }\n                catch (exception) {\n                    errorMsg = exception.message || exception.toString();\n                    self.log(\"Caught exception in '\" + name + \"' callback - \" + errorMsg, \"error\");\n                }\n            };\n\n            /* jshint forin: false, loopfunc: true */\n            for (prop in this._options.callbacks) {\n                (function() {\n                    var callbackName, callbackFunc;\n                    callbackName = prop;\n                    callbackFunc = self._options.callbacks[callbackName];\n                    self._options.callbacks[callbackName] = function() {\n                        return safeCallback(callbackName, callbackFunc, arguments);\n                    };\n                }());\n            }\n        }\n    };\n}());\n","/*globals qq*/\n(function() {\n    \"use strict\";\n\n    qq.FineUploaderBasic = function(o) {\n        var self = this;\n\n        // These options define FineUploaderBasic mode.\n        this._options = {\n            debug: false,\n            button: null,\n            multiple: true,\n            maxConnections: 3,\n            disableCancelForFormUploads: false,\n            autoUpload: true,\n\n            request: {\n                customHeaders: {},\n                endpoint: \"/server/upload\",\n                filenameParam: \"qqfilename\",\n                forceMultipart: true,\n                inputName: \"qqfile\",\n                method: \"POST\",\n                omitDefaultParams: false,\n                params: {},\n                paramsInBody: true,\n                requireSuccessJson: true,\n                totalFileSizeName: \"qqtotalfilesize\",\n                uuidName: \"qquuid\"\n            },\n\n            validation: {\n                allowedExtensions: [],\n                sizeLimit: 0,\n                minSizeLimit: 0,\n                itemLimit: 0,\n                stopOnFirstInvalidFile: true,\n                acceptFiles: null,\n                image: {\n                    maxHeight: 0,\n                    maxWidth: 0,\n                    minHeight: 0,\n                    minWidth: 0\n                },\n                allowEmpty: false\n            },\n\n            callbacks: {\n                onSubmit: function(id, name) {},\n                onSubmitted: function(id, name) {},\n                onComplete: function(id, name, responseJSON, maybeXhr) {},\n                onAllComplete: function(successful, failed) {},\n                onCancel: function(id, name) {},\n                onUpload: function(id, name) {},\n                onUploadChunk: function(id, name, chunkData) {},\n                onUploadChunkSuccess: function(id, chunkData, responseJSON, xhr) {},\n                onResume: function(id, fileName, chunkData, customResumeData) {},\n                onProgress: function(id, name, loaded, total) {},\n                onTotalProgress: function(loaded, total) {},\n                onError: function(id, name, reason, maybeXhrOrXdr) {},\n                onAutoRetry: function(id, name, attemptNumber) {},\n                onManualRetry: function(id, name) {},\n                onValidateBatch: function(fileOrBlobData) {},\n                onValidate: function(fileOrBlobData) {},\n                onSubmitDelete: function(id) {},\n                onDelete: function(id) {},\n                onDeleteComplete: function(id, xhrOrXdr, isError) {},\n                onPasteReceived: function(blob) {},\n                onStatusChange: function(id, oldStatus, newStatus) {},\n                onSessionRequestComplete: function(response, success, xhrOrXdr) {}\n            },\n\n            messages: {\n                typeError: \"{file} has an invalid extension. Valid extension(s): {extensions}.\",\n                sizeError: \"{file} is too large, maximum file size is {sizeLimit}.\",\n                minSizeError: \"{file} is too small, minimum file size is {minSizeLimit}.\",\n                emptyError: \"{file} is empty, please select files again without it.\",\n                noFilesError: \"No files to upload.\",\n                tooManyItemsError: \"Too many items ({netItems}) would be uploaded.  Item limit is {itemLimit}.\",\n                maxHeightImageError: \"Image is too tall.\",\n                maxWidthImageError: \"Image is too wide.\",\n                minHeightImageError: \"Image is not tall enough.\",\n                minWidthImageError: \"Image is not wide enough.\",\n                retryFailTooManyItems: \"Retry failed - you have reached your file limit.\",\n                onLeave: \"The files are being uploaded, if you leave now the upload will be canceled.\",\n                unsupportedBrowserIos8Safari: \"Unrecoverable error - this browser does not permit file uploading of any kind due to serious bugs in iOS8 Safari.  Please use iOS8 Chrome until Apple fixes these issues.\"\n            },\n\n            retry: {\n                enableAuto: false,\n                maxAutoAttempts: 3,\n                autoAttemptDelay: 5,\n                preventRetryResponseProperty: \"preventRetry\"\n            },\n\n            classes: {\n                buttonHover: \"qq-upload-button-hover\",\n                buttonFocus: \"qq-upload-button-focus\"\n            },\n\n            chunking: {\n                enabled: false,\n                concurrent: {\n                    enabled: false\n                },\n                mandatory: false,\n                paramNames: {\n                    partIndex: \"qqpartindex\",\n                    partByteOffset: \"qqpartbyteoffset\",\n                    chunkSize: \"qqchunksize\",\n                    totalFileSize: \"qqtotalfilesize\",\n                    totalParts: \"qqtotalparts\"\n                },\n                partSize: function(id) {\n                    return 2000000;\n                },\n                // only relevant for traditional endpoints, only required when concurrent.enabled === true\n                success: {\n                    endpoint: null,\n\n                    headers: function(id) {\n                        return null;\n                    },\n\n                    jsonPayload: false,\n\n                    method: \"POST\",\n\n                    params: function(id) {\n                        return null;\n                    },\n\n                    resetOnStatus: []\n                }\n            },\n\n            resume: {\n                enabled: false,\n                recordsExpireIn: 7, //days\n                paramNames: {\n                    resuming: \"qqresume\"\n                },\n                customKeys: function(fileId) {\n                    return [];\n                }\n            },\n\n            formatFileName: function(fileOrBlobName) {\n                return fileOrBlobName;\n            },\n\n            text: {\n                defaultResponseError: \"Upload failure reason unknown\",\n                fileInputTitle: \"file input\",\n                sizeSymbols: [\"kB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\"]\n            },\n\n            deleteFile: {\n                enabled: false,\n                method: \"DELETE\",\n                endpoint: \"/server/upload\",\n                customHeaders: {},\n                params: {}\n            },\n\n            cors: {\n                expected: false,\n                sendCredentials: false,\n                allowXdr: false\n            },\n\n            blobs: {\n                defaultName: \"misc_data\"\n            },\n\n            paste: {\n                targetElement: null,\n                defaultName: \"pasted_image\"\n            },\n\n            camera: {\n                ios: false,\n\n                // if ios is true: button is null means target the default button, otherwise target the button specified\n                button: null\n            },\n\n            // This refers to additional upload buttons to be handled by Fine Uploader.\n            // Each element is an object, containing `element` as the only required\n            // property.  The `element` must be a container that will ultimately\n            // contain an invisible `<input type=\"file\">` created by Fine Uploader.\n            // Optional properties of each object include `multiple`, `validation`,\n            // and `folders`.\n            extraButtons: [],\n\n            // Depends on the session module.  Used to query the server for an initial file list\n            // during initialization and optionally after a `reset`.\n            session: {\n                endpoint: null,\n                params: {},\n                customHeaders: {},\n                refreshOnReset: true\n            },\n\n            // Send parameters associated with an existing form along with the files\n            form: {\n                // Element ID, HTMLElement, or null\n                element: \"qq-form\",\n\n                // Overrides the base `autoUpload`, unless `element` is null.\n                autoUpload: false,\n\n                // true = upload files on form submission (and squelch submit event)\n                interceptSubmit: true\n            },\n\n            // scale images client side, upload a new file for each scaled version\n            scaling: {\n                customResizer: null,\n\n                // send the original file as well\n                sendOriginal: true,\n\n                // fox orientation for scaled images\n                orient: true,\n\n                // If null, scaled image type will match reference image type.  This value will be referred to\n                // for any size record that does not specific a type.\n                defaultType: null,\n\n                defaultQuality: 80,\n\n                failureText: \"Failed to scale\",\n\n                includeExif: false,\n\n                // metadata about each requested scaled version\n                sizes: []\n            },\n\n            workarounds: {\n                iosEmptyVideos: true,\n                ios8SafariUploads: true,\n                ios8BrowserCrash: false\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(this._options, o, true);\n\n        this._buttons = [];\n        this._extraButtonSpecs = {};\n        this._buttonIdsForFileIds = [];\n\n        this._wrapCallbacks();\n        this._disposeSupport =  new qq.DisposeSupport();\n\n        this._storedIds = [];\n        this._autoRetries = [];\n        this._retryTimeouts = [];\n        this._preventRetries = [];\n        this._thumbnailUrls = [];\n\n        this._netUploadedOrQueued = 0;\n        this._netUploaded = 0;\n        this._uploadData = this._createUploadDataTracker();\n\n        this._initFormSupportAndParams();\n\n        this._customHeadersStore = this._createStore(this._options.request.customHeaders);\n        this._deleteFileCustomHeadersStore = this._createStore(this._options.deleteFile.customHeaders);\n\n        this._deleteFileParamsStore = this._createStore(this._options.deleteFile.params);\n\n        this._endpointStore = this._createStore(this._options.request.endpoint);\n        this._deleteFileEndpointStore = this._createStore(this._options.deleteFile.endpoint);\n\n        this._handler = this._createUploadHandler();\n\n        this._deleteHandler = qq.DeleteFileAjaxRequester && this._createDeleteHandler();\n\n        if (this._options.button) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._options.button,\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._generateExtraButtonSpecs();\n\n        this._handleCameraAccess();\n\n        if (this._options.paste.targetElement) {\n            if (qq.PasteSupport) {\n                this._pasteHandler = this._createPasteHandler();\n            }\n            else {\n                this.log(\"Paste support module not found\", \"error\");\n            }\n        }\n\n        this._preventLeaveInProgress();\n\n        this._imageGenerator = qq.ImageGenerator && new qq.ImageGenerator(qq.bind(this.log, this));\n        this._refreshSessionData();\n\n        this._succeededSinceLastAllComplete = [];\n        this._failedSinceLastAllComplete = [];\n\n        this._scaler = (qq.Scaler && new qq.Scaler(this._options.scaling, qq.bind(this.log, this))) || {};\n        if (this._scaler.enabled) {\n            this._customNewFileHandler = qq.bind(this._scaler.handleNewFile, this._scaler);\n        }\n\n        if (qq.TotalProgress && qq.supportedFeatures.progressBar) {\n            this._totalProgress = new qq.TotalProgress(\n                qq.bind(this._onTotalProgress, this),\n\n                function(id) {\n                    var entry = self._uploadData.retrieve({id: id});\n                    return (entry && entry.size) || 0;\n                }\n            );\n        }\n\n        this._currentItemLimit = this._options.validation.itemLimit;\n\n        this._customResumeDataStore = this._createStore();\n    };\n\n    // Define the private & public API methods.\n    qq.FineUploaderBasic.prototype = qq.basePublicApi;\n    qq.extend(qq.FineUploaderBasic.prototype, qq.basePrivateApi);\n}());\n","/*globals qq, XDomainRequest*/\n/** Generic class for sending non-upload ajax requests and handling the associated responses **/\nqq.AjaxRequester = function(o) {\n    \"use strict\";\n\n    var log, shouldParamsBeInQueryString,\n        queue = [],\n        requestData = {},\n        options = {\n            acceptHeader: null,\n            validMethods: [\"PATCH\", \"POST\", \"PUT\"],\n            method: \"POST\",\n            contentType: \"application/x-www-form-urlencoded\",\n            maxConnections: 3,\n            customHeaders: {},\n            endpointStore: {},\n            paramsStore: {},\n            mandatedParams: {},\n            allowXRequestedWithAndCacheControl: true,\n            successfulResponseCodes: {\n                DELETE: [200, 202, 204],\n                PATCH: [200, 201, 202, 203, 204],\n                POST: [200, 201, 202, 203, 204],\n                PUT: [200, 201, 202, 203, 204],\n                GET: [200]\n            },\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onSend: function(id) {},\n            onComplete: function(id, xhrOrXdr, isError) {},\n            onProgress: null\n        };\n\n    qq.extend(options, o);\n    log = options.log;\n\n    if (qq.indexOf(options.validMethods, options.method) < 0) {\n        throw new Error(\"'\" + options.method + \"' is not a supported method for this type of request!\");\n    }\n\n    // [Simple methods](http://www.w3.org/TR/cors/#simple-method)\n    // are defined by the W3C in the CORS spec as a list of methods that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function isSimpleMethod() {\n        return qq.indexOf([\"GET\", \"POST\", \"HEAD\"], options.method) >= 0;\n    }\n\n    // [Simple headers](http://www.w3.org/TR/cors/#simple-header)\n    // are defined by the W3C in the CORS spec as a list of headers that, in part,\n    // make a CORS request eligible to be exempt from preflighting.\n    function containsNonSimpleHeaders(headers) {\n        var containsNonSimple = false;\n\n        qq.each(containsNonSimple, function(idx, header) {\n            if (qq.indexOf([\"Accept\", \"Accept-Language\", \"Content-Language\", \"Content-Type\"], header) < 0) {\n                containsNonSimple = true;\n                return false;\n            }\n        });\n\n        return containsNonSimple;\n    }\n\n    function isXdr(xhr) {\n        //The `withCredentials` test is a commonly accepted way to determine if XHR supports CORS.\n        return options.cors.expected && xhr.withCredentials === undefined;\n    }\n\n    // Returns either a new `XMLHttpRequest` or `XDomainRequest` instance.\n    function getCorsAjaxTransport() {\n        var xhrOrXdr;\n\n        if (window.XMLHttpRequest || window.ActiveXObject) {\n            xhrOrXdr = qq.createXhrInstance();\n\n            if (xhrOrXdr.withCredentials === undefined) {\n                xhrOrXdr = new XDomainRequest();\n                // Workaround for XDR bug in IE9 - https://social.msdn.microsoft.com/Forums/ie/en-US/30ef3add-767c-4436-b8a9-f1ca19b4812e/ie9-rtm-xdomainrequest-issued-requests-may-abort-if-all-event-handlers-not-specified?forum=iewebdevelopment\n                xhrOrXdr.onload = function() {};\n                xhrOrXdr.onerror = function() {};\n                xhrOrXdr.ontimeout = function() {};\n                xhrOrXdr.onprogress = function() {};\n            }\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Returns either a new XHR/XDR instance, or an existing one for the associated `File` or `Blob`.\n    function getXhrOrXdr(id, suppliedXhr) {\n        var xhrOrXdr = requestData[id].xhr;\n\n        if (!xhrOrXdr) {\n            if (suppliedXhr) {\n                xhrOrXdr = suppliedXhr;\n            }\n            else {\n                if (options.cors.expected) {\n                    xhrOrXdr = getCorsAjaxTransport();\n                }\n                else {\n                    xhrOrXdr = qq.createXhrInstance();\n                }\n            }\n\n            requestData[id].xhr = xhrOrXdr;\n        }\n\n        return xhrOrXdr;\n    }\n\n    // Removes element from queue, sends next request\n    function dequeue(id) {\n        var i = qq.indexOf(queue, id),\n            max = options.maxConnections,\n            nextId;\n\n        delete requestData[id];\n        queue.splice(i, 1);\n\n        if (queue.length >= max && i < max) {\n            nextId = queue[max - 1];\n            sendRequest(nextId);\n        }\n    }\n\n    function onComplete(id, xdrError) {\n        var xhr = getXhrOrXdr(id),\n            method = options.method,\n            isError = xdrError === true;\n\n        dequeue(id);\n\n        if (isError) {\n            log(method + \" request for \" + id + \" has failed\", \"error\");\n        }\n        else if (!isXdr(xhr) && !isResponseSuccessful(xhr.status)) {\n            isError = true;\n            log(method + \" request for \" + id + \" has failed - response code \" + xhr.status, \"error\");\n        }\n\n        options.onComplete(id, xhr, isError);\n    }\n\n    function getParams(id) {\n        var onDemandParams = requestData[id].additionalParams,\n            mandatedParams = options.mandatedParams,\n            params;\n\n        if (options.paramsStore.get) {\n            params = options.paramsStore.get(id);\n        }\n\n        if (onDemandParams) {\n            qq.each(onDemandParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        if (mandatedParams) {\n            qq.each(mandatedParams, function(name, val) {\n                params = params || {};\n                params[name] = val;\n            });\n        }\n\n        return params;\n    }\n\n    function sendRequest(id, optXhr) {\n        var xhr = getXhrOrXdr(id, optXhr),\n            method = options.method,\n            params = getParams(id),\n            payload = requestData[id].payload,\n            url;\n\n        options.onSend(id);\n\n        url = createUrl(id, params, requestData[id].additionalQueryParams);\n\n        // XDR and XHR status detection APIs differ a bit.\n        if (isXdr(xhr)) {\n            xhr.onload = getXdrLoadHandler(id);\n            xhr.onerror = getXdrErrorHandler(id);\n        }\n        else {\n            xhr.onreadystatechange = getXhrReadyStateChangeHandler(id);\n        }\n\n        registerForUploadProgress(id);\n\n        // The last parameter is assumed to be ignored if we are actually using `XDomainRequest`.\n        xhr.open(method, url, true);\n\n        // Instruct the transport to send cookies along with the CORS request,\n        // unless we are using `XDomainRequest`, which is not capable of this.\n        if (options.cors.expected && options.cors.sendCredentials && !isXdr(xhr)) {\n            xhr.withCredentials = true;\n        }\n\n        setHeaders(id);\n\n        log(\"Sending \" + method + \" request for \" + id);\n\n        if (payload) {\n            xhr.send(payload);\n        }\n        else if (shouldParamsBeInQueryString || !params) {\n            xhr.send();\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/x-www-form-urlencoded\") >= 0) {\n            xhr.send(qq.obj2url(params, \"\"));\n        }\n        else if (params && options.contentType && options.contentType.toLowerCase().indexOf(\"application/json\") >= 0) {\n            xhr.send(JSON.stringify(params));\n        }\n        else {\n            xhr.send(params);\n        }\n\n        return xhr;\n    }\n\n    function createUrl(id, params, additionalQueryParams) {\n        var endpoint = options.endpointStore.get(id),\n            addToPath = requestData[id].addToPath;\n\n        /*jshint -W116,-W041 */\n        if (addToPath != undefined) {\n            endpoint += \"/\" + addToPath;\n        }\n\n        if (shouldParamsBeInQueryString && params) {\n            endpoint = qq.obj2url(params, endpoint);\n        }\n\n        if (additionalQueryParams) {\n            endpoint = qq.obj2url(additionalQueryParams, endpoint);\n        }\n\n        return endpoint;\n    }\n\n    // Invoked by the UA to indicate a number of possible states that describe\n    // a live `XMLHttpRequest` transport.\n    function getXhrReadyStateChangeHandler(id) {\n        return function() {\n            if (getXhrOrXdr(id).readyState === 4) {\n                onComplete(id);\n            }\n        };\n    }\n\n    function registerForUploadProgress(id) {\n        var onProgress = options.onProgress;\n\n        if (onProgress) {\n            getXhrOrXdr(id).upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    onProgress(id, e.loaded, e.total);\n                }\n            };\n        }\n    }\n\n    // This will be called by IE to indicate **success** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrLoadHandler(id) {\n        return function() {\n            onComplete(id);\n        };\n    }\n\n    // This will be called by IE to indicate **failure** for an associated\n    // `XDomainRequest` transported request.\n    function getXdrErrorHandler(id) {\n        return function() {\n            onComplete(id, true);\n        };\n    }\n\n    function setHeaders(id) {\n        var xhr = getXhrOrXdr(id),\n            customHeaders = options.customHeaders,\n            onDemandHeaders = requestData[id].additionalHeaders || {},\n            method = options.method,\n            allHeaders = {};\n\n        // If XDomainRequest is being used, we can't set headers, so just ignore this block.\n        if (!isXdr(xhr)) {\n            options.acceptHeader && xhr.setRequestHeader(\"Accept\", options.acceptHeader);\n\n            // Only attempt to add X-Requested-With & Cache-Control if permitted\n            if (options.allowXRequestedWithAndCacheControl) {\n                // Do not add X-Requested-With & Cache-Control if this is a cross-origin request\n                // OR the cross-origin request contains a non-simple method or header.\n                // This is done to ensure a preflight is not triggered exclusively based on the\n                // addition of these 2 non-simple headers.\n                if (!options.cors.expected || (!isSimpleMethod() || containsNonSimpleHeaders(customHeaders))) {\n                    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n                    xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n                }\n            }\n\n            if (options.contentType && (method === \"POST\" || method === \"PUT\")) {\n                xhr.setRequestHeader(\"Content-Type\", options.contentType);\n            }\n\n            qq.extend(allHeaders, qq.isFunction(customHeaders) ? customHeaders(id) : customHeaders);\n            qq.extend(allHeaders, onDemandHeaders);\n\n            qq.each(allHeaders, function(name, val) {\n                xhr.setRequestHeader(name, val);\n            });\n        }\n    }\n\n    function isResponseSuccessful(responseCode) {\n        return qq.indexOf(options.successfulResponseCodes[options.method], responseCode) >= 0;\n    }\n\n    function prepareToSend(id, optXhr, addToPath, additionalParams, additionalQueryParams, additionalHeaders, payload) {\n        requestData[id] = {\n            addToPath: addToPath,\n            additionalParams: additionalParams,\n            additionalQueryParams: additionalQueryParams,\n            additionalHeaders: additionalHeaders,\n            payload: payload\n        };\n\n        var len = queue.push(id);\n\n        // if too many active connections, wait...\n        if (len <= options.maxConnections) {\n            return sendRequest(id, optXhr);\n        }\n    }\n\n    shouldParamsBeInQueryString = options.method === \"GET\" || options.method === \"DELETE\";\n\n    qq.extend(this, {\n        // Start the process of sending the request.  The ID refers to the file associated with the request.\n        initTransport: function(id) {\n            var path, params, headers, payload, cacheBuster, additionalQueryParams;\n\n            return {\n                // Optionally specify the end of the endpoint path for the request.\n                withPath: function(appendToPath) {\n                    path = appendToPath;\n                    return this;\n                },\n\n                // Optionally specify additional parameters to send along with the request.\n                // These will be added to the query string for GET/DELETE requests or the payload\n                // for POST/PUT requests.  The Content-Type of the request will be used to determine\n                // how these parameters should be formatted as well.\n                withParams: function(additionalParams) {\n                    params = additionalParams;\n                    return this;\n                },\n\n                withQueryParams: function(_additionalQueryParams_) {\n                    additionalQueryParams = _additionalQueryParams_;\n                    return this;\n                },\n\n                // Optionally specify additional headers to send along with the request.\n                withHeaders: function(additionalHeaders) {\n                    headers = additionalHeaders;\n                    return this;\n                },\n\n                // Optionally specify a payload/body for the request.\n                withPayload: function(thePayload) {\n                    payload = thePayload;\n                    return this;\n                },\n\n                // Appends a cache buster (timestamp) to the request URL as a query parameter (only if GET or DELETE)\n                withCacheBuster: function() {\n                    cacheBuster = true;\n                    return this;\n                },\n\n                // Send the constructed request.\n                send: function(optXhr) {\n                    if (cacheBuster && qq.indexOf([\"GET\", \"DELETE\"], options.method) >= 0) {\n                        params.qqtimestamp = new Date().getTime();\n                    }\n\n                    return prepareToSend(id, optXhr, path, params, additionalQueryParams, headers, payload);\n                }\n            };\n        },\n\n        canceled: function(id) {\n            dequeue(id);\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common upload handler functions.\n *\n * @constructor\n */\nqq.UploadHandler = function(spec) {\n    \"use strict\";\n\n    var proxy = spec.proxy,\n        fileState = {},\n        onCancel = proxy.onCancel,\n        getName = proxy.getName;\n\n    qq.extend(this, {\n        add: function(id, fileItem) {\n            fileState[id] = fileItem;\n            fileState[id].temp = {};\n        },\n\n        cancel: function(id) {\n            var self = this,\n                cancelFinalizationEffort = new qq.Promise(),\n                onCancelRetVal = onCancel(id, getName(id), cancelFinalizationEffort);\n\n            onCancelRetVal.then(function() {\n                if (self.isValid(id)) {\n                    fileState[id].canceled = true;\n                    self.expunge(id);\n                }\n                cancelFinalizationEffort.success();\n            });\n        },\n\n        expunge: function(id) {\n            delete fileState[id];\n        },\n\n        getThirdPartyFileId: function(id) {\n            return fileState[id].key;\n        },\n\n        isValid: function(id) {\n            return fileState[id] !== undefined;\n        },\n\n        reset: function() {\n            fileState = {};\n        },\n\n        _getFileState: function(id) {\n            return fileState[id];\n        },\n\n        _setThirdPartyFileId: function(id, thirdPartyFileId) {\n            fileState[id].key = thirdPartyFileId;\n        },\n\n        _wasCanceled: function(id) {\n            return !!fileState[id].canceled;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Base upload handler module.  Controls more specific handlers.\n *\n * @param o Options.  Passed along to the specific handler submodule as well.\n * @param namespace [optional] Namespace for the specific handler.\n */\nqq.UploadHandlerController = function(o, namespace) {\n    \"use strict\";\n\n    var controller = this,\n        chunkingPossible = false,\n        concurrentChunkingPossible = false,\n        chunking, preventRetryResponse, log, handler,\n\n    options = {\n        paramsStore: {},\n        maxConnections: 3, // maximum number of concurrent uploads\n        chunking: {\n            enabled: false,\n            multiple: {\n                enabled: false\n            }\n        },\n        log: function(str, level) {},\n        onProgress: function(id, fileName, loaded, total) {},\n        onComplete: function(id, fileName, response, xhr) {},\n        onCancel: function(id, fileName) {},\n        onUploadPrep: function(id) {}, // Called if non-trivial operations will be performed before onUpload\n        onUpload: function(id, fileName) {},\n        onUploadChunk: function(id, fileName, chunkData) {},\n        onUploadChunkSuccess: function(id, chunkData, response, xhr) {},\n        onAutoRetry: function(id, fileName, response, xhr) {},\n        onResume: function(id, fileName, chunkData, customResumeData) {},\n        onUuidChanged: function(id, newUuid) {},\n        getName: function(id) {},\n        setSize: function(id, newSize) {},\n        isQueued: function(id) {},\n        getIdsInProxyGroup: function(id) {},\n        getIdsInBatch: function(id) {},\n        isInProgress: function(id) {}\n    },\n\n    chunked = {\n        // Called when each chunk has uploaded successfully\n        done: function(id, chunkIdx, response, xhr) {\n            var chunkData = handler._getChunkData(id, chunkIdx);\n\n            handler._getFileState(id).attemptingResume = false;\n\n            delete handler._getFileState(id).temp.chunkProgress[chunkIdx];\n            handler._getFileState(id).loaded += chunkData.size;\n\n            options.onUploadChunkSuccess(id, handler._getChunkDataForCallback(chunkData), response, xhr);\n        },\n\n        // Called when all chunks have been successfully uploaded and we want to ask the handler to perform any\n        // logic associated with closing out the file, such as combining the chunks.\n        finalize: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id);\n\n            log(\"All chunks have been uploaded for \" + id + \" - finalizing....\");\n            handler.finalizeChunks(id).then(\n                function(response, xhr) {\n                    log(\"Finalize successful for \" + id);\n\n                    var normaizedResponse = upload.normalizeResponse(response, true);\n\n                    options.onProgress(id, name, size, size);\n                    handler._maybeDeletePersistedChunkData(id);\n                    upload.cleanup(id, normaizedResponse, xhr);\n                },\n                function(response, xhr) {\n                    var normalizedResponse = upload.normalizeResponse(response, false);\n\n                    log(\"Problem finalizing chunks for file ID \" + id + \" - \" + normalizedResponse.error, \"error\");\n\n                    if (\n                        normalizedResponse.reset ||\n                        (xhr && options.chunking.success.resetOnStatus.indexOf(xhr.status) >= 0)\n                    ) {\n                        chunked.reset(id);\n                    }\n\n                    if (!options.onAutoRetry(id, name, normalizedResponse, xhr)) {\n                        upload.cleanup(id, normalizedResponse, xhr);\n                    }\n                }\n            );\n        },\n\n        handleFailure: function(chunkIdx, id, response, xhr) {\n            var name = options.getName(id);\n\n            log(\"Chunked upload request failed for \" + id + \", chunk \" + chunkIdx);\n\n            handler.clearCachedChunk(id, chunkIdx);\n\n            var responseToReport = upload.normalizeResponse(response, false),\n                inProgressIdx;\n\n            if (responseToReport.reset) {\n                chunked.reset(id);\n            }\n            else {\n                inProgressIdx = qq.indexOf(handler._getFileState(id).chunking.inProgress, chunkIdx);\n                if (inProgressIdx >= 0) {\n                    handler._getFileState(id).chunking.inProgress.splice(inProgressIdx, 1);\n                    handler._getFileState(id).chunking.remaining.unshift(chunkIdx);\n                }\n            }\n\n            // We may have aborted all other in-progress chunks for this file due to a failure.\n            // If so, ignore the failures associated with those aborts.\n            if (!handler._getFileState(id).temp.ignoreFailure) {\n                // If this chunk has failed, we want to ignore all other failures of currently in-progress\n                // chunks since they will be explicitly aborted\n                if (concurrentChunkingPossible) {\n                    handler._getFileState(id).temp.ignoreFailure = true;\n\n                    log(qq.format(\"Going to attempt to abort these chunks: {}. These are currently in-progress: {}.\", JSON.stringify(Object.keys(handler._getXhrs(id))), JSON.stringify(handler._getFileState(id).chunking.inProgress)));\n                    qq.each(handler._getXhrs(id), function(ckid, ckXhr) {\n                        log(qq.format(\"Attempting to abort file {}.{}. XHR readyState {}. \", id, ckid, ckXhr.readyState));\n                        ckXhr.abort();\n                        // Flag the transport, in case we are waiting for some other async operation\n                        // to complete before attempting to upload the chunk\n                        ckXhr._cancelled = true;\n                    });\n\n                    // We must indicate that all aborted chunks are no longer in progress\n                    handler.moveInProgressToRemaining(id);\n\n                    // Free up any connections used by these chunks, but don't allow any\n                    // other files to take up the connections (until we have exhausted all auto-retries)\n                    connectionManager.free(id, true);\n                }\n\n                if (!options.onAutoRetry(id, name, responseToReport, xhr)) {\n                    // If one chunk fails, abort all of the others to avoid odd race conditions that occur\n                    // if a chunk succeeds immediately after one fails before we have determined if the upload\n                    // is a failure or not.\n                    upload.cleanup(id, responseToReport, xhr);\n                }\n            }\n        },\n\n        hasMoreParts: function(id) {\n            return !!handler._getFileState(id).chunking.remaining.length;\n        },\n\n        nextPart: function(id) {\n            var nextIdx = handler._getFileState(id).chunking.remaining.shift();\n\n            if (nextIdx >= handler._getTotalChunks(id)) {\n                nextIdx = null;\n            }\n\n            return nextIdx;\n        },\n\n        reset: function(id) {\n            log(\"Server or callback has ordered chunking effort to be restarted on next attempt for item ID \" + id, \"error\");\n\n            handler._maybeDeletePersistedChunkData(id);\n            handler.reevaluateChunking(id);\n            handler._getFileState(id).loaded = 0;\n            handler._getFileState(id).attemptingResume = false;\n        },\n\n        sendNext: function(id) {\n            var size = options.getSize(id),\n                name = options.getName(id),\n                chunkIdx = chunked.nextPart(id),\n                chunkData = handler._getChunkData(id, chunkIdx),\n                fileState = handler._getFileState(id),\n                resuming = fileState.attemptingResume,\n                inProgressChunks = fileState.chunking.inProgress || [];\n\n            if (fileState.loaded == null) {\n                fileState.loaded = 0;\n            }\n\n            // Don't follow-through with the resume attempt if the integrator returns false from onResume\n            if (resuming && options.onResume(id, name, chunkData, fileState.customResumeData) === false) {\n                chunked.reset(id);\n                chunkIdx = chunked.nextPart(id);\n                chunkData = handler._getChunkData(id, chunkIdx);\n                resuming = false;\n            }\n\n            // If all chunks have already uploaded successfully, we must be re-attempting the finalize step.\n            if (chunkIdx == null && inProgressChunks.length === 0) {\n                chunked.finalize(id);\n            }\n\n            // Send the next chunk\n            else {\n                inProgressChunks.push(chunkIdx);\n                handler._getFileState(id).chunking.inProgress = inProgressChunks;\n\n                if (concurrentChunkingPossible) {\n                    connectionManager.open(id, chunkIdx);\n                }\n\n                if (concurrentChunkingPossible && connectionManager.available() && handler._getFileState(id).chunking.remaining.length) {\n                    chunked.sendNext(id);\n                }\n\n                if (chunkData.blob.size === 0) {\n                    log(qq.format(\"Chunk {} for file {} will not be uploaded, zero sized chunk.\", chunkIdx, id), \"error\");\n                    chunked.handleFailure(chunkIdx, id, \"File is no longer available\", null);\n                }\n\n                var onUploadChunkPromise = options.onUploadChunk(id, name, handler._getChunkDataForCallback(chunkData));\n\n                onUploadChunkPromise.then(\n                    function(requestOverrides) {\n                        if (!options.isInProgress(id)) {\n                            log(qq.format(\"Not sending chunked upload request for item {}.{} - no longer in progress.\", id, chunkIdx));\n                        }\n                        else {\n                            log(qq.format(\"Sending chunked upload request for item {}.{}, bytes {}-{} of {}.\", id, chunkIdx, chunkData.start + 1, chunkData.end, size));\n\n                            var uploadChunkData = {\n                                chunkIdx: chunkIdx,\n                                id: id,\n                                overrides: requestOverrides,\n                                resuming: resuming\n                            };\n\n                            handler.uploadChunk(uploadChunkData).then(\n                                // upload chunk success\n                                function success(response, xhr) {\n                                    log(\"Chunked upload request succeeded for \" + id + \", chunk \" + chunkIdx);\n\n                                    handler.clearCachedChunk(id, chunkIdx);\n\n                                    var inProgressChunks = handler._getFileState(id).chunking.inProgress || [],\n                                        responseToReport = upload.normalizeResponse(response, true),\n                                        inProgressChunkIdx = qq.indexOf(inProgressChunks, chunkIdx);\n\n                                    log(qq.format(\"Chunk {} for file {} uploaded successfully.\", chunkIdx, id));\n\n                                    chunked.done(id, chunkIdx, responseToReport, xhr);\n\n                                    if (inProgressChunkIdx >= 0) {\n                                        inProgressChunks.splice(inProgressChunkIdx, 1);\n                                    }\n\n                                    handler._maybePersistChunkedState(id);\n\n                                    if (!chunked.hasMoreParts(id) && inProgressChunks.length === 0) {\n                                        chunked.finalize(id);\n                                    }\n                                    else if (chunked.hasMoreParts(id)) {\n                                        chunked.sendNext(id);\n                                    }\n                                    else {\n                                        log(qq.format(\"File ID {} has no more chunks to send and these chunk indexes are still marked as in-progress: {}\", id, JSON.stringify(inProgressChunks)));\n                                    }\n                                },\n\n                                // upload chunk failure\n                                function failure(response, xhr) {\n                                    chunked.handleFailure(chunkIdx, id, response, xhr);\n                                }\n                            )\n                                .done(function () {\n                                    handler.clearXhr(id, chunkIdx);\n                                });\n                        }\n                    },\n\n                    function(error) {\n                        chunked.handleFailure(chunkIdx, id, error, null);\n                    }\n                );\n            }\n        }\n    },\n\n    connectionManager = {\n        _open: [],\n        _openChunks: {},\n        _waiting: [],\n\n        available: function() {\n            var max = options.maxConnections,\n                openChunkEntriesCount = 0,\n                openChunksCount = 0;\n\n            qq.each(connectionManager._openChunks, function(fileId, openChunkIndexes) {\n                openChunkEntriesCount++;\n                openChunksCount += openChunkIndexes.length;\n            });\n\n            return max - (connectionManager._open.length - openChunkEntriesCount + openChunksCount);\n        },\n\n        /**\n         * Removes element from queue, starts upload of next\n         */\n        free: function(id, dontAllowNext) {\n            var allowNext = !dontAllowNext,\n                waitingIndex = qq.indexOf(connectionManager._waiting, id),\n                connectionsIndex = qq.indexOf(connectionManager._open, id),\n                nextId;\n\n            delete connectionManager._openChunks[id];\n\n            if (upload.getProxyOrBlob(id) instanceof qq.BlobProxy) {\n                log(\"Generated blob upload has ended for \" + id + \", disposing generated blob.\");\n                delete handler._getFileState(id).file;\n            }\n\n            // If this file was not consuming a connection, it was just waiting, so remove it from the waiting array\n            if (waitingIndex >= 0) {\n                connectionManager._waiting.splice(waitingIndex, 1);\n            }\n            // If this file was consuming a connection, allow the next file to be uploaded\n            else if (allowNext && connectionsIndex >= 0) {\n                connectionManager._open.splice(connectionsIndex, 1);\n\n                nextId = connectionManager._waiting.shift();\n                if (nextId >= 0) {\n                    connectionManager._open.push(nextId);\n                    upload.start(nextId);\n                }\n            }\n        },\n\n        getWaitingOrConnected: function() {\n            var waitingOrConnected = [];\n\n            // Chunked files may have multiple connections open per chunk (if concurrent chunking is enabled)\n            // We need to grab the file ID of any file that has at least one chunk consuming a connection.\n            qq.each(connectionManager._openChunks, function(fileId, chunks) {\n                if (chunks && chunks.length) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // For non-chunked files, only one connection will be consumed per file.\n            // This is where we aggregate those file IDs.\n            qq.each(connectionManager._open, function(idx, fileId) {\n                if (!connectionManager._openChunks[fileId]) {\n                    waitingOrConnected.push(parseInt(fileId));\n                }\n            });\n\n            // There may be files waiting for a connection.\n            waitingOrConnected = waitingOrConnected.concat(connectionManager._waiting);\n\n            return waitingOrConnected;\n        },\n\n        isUsingConnection: function(id) {\n            return qq.indexOf(connectionManager._open, id) >= 0;\n        },\n\n        open: function(id, chunkIdx) {\n            if (chunkIdx == null) {\n                connectionManager._waiting.push(id);\n            }\n\n            if (connectionManager.available()) {\n                if (chunkIdx == null) {\n                    connectionManager._waiting.pop();\n                    connectionManager._open.push(id);\n                }\n                else {\n                    (function() {\n                        var openChunksEntry = connectionManager._openChunks[id] || [];\n                        openChunksEntry.push(chunkIdx);\n                        connectionManager._openChunks[id] = openChunksEntry;\n                    }());\n                }\n\n                return true;\n            }\n\n            return false;\n        },\n\n        reset: function() {\n            connectionManager._waiting = [];\n            connectionManager._open = [];\n        }\n    },\n\n    simple = {\n        send: function(id, name) {\n            handler._getFileState(id).loaded = 0;\n\n            log(\"Sending simple upload request for \" + id);\n            handler.uploadFile(id).then(\n                function(response, optXhr) {\n                    log(\"Simple upload request succeeded for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, true),\n                        size = options.getSize(id);\n\n                    options.onProgress(id, name, size, size);\n                    upload.maybeNewUuid(id, responseToReport);\n                    upload.cleanup(id, responseToReport, optXhr);\n                },\n\n                function(response, optXhr) {\n                    log(\"Simple upload request failed for \" + id);\n\n                    var responseToReport = upload.normalizeResponse(response, false);\n\n                    if (!options.onAutoRetry(id, name, responseToReport, optXhr)) {\n                        upload.cleanup(id, responseToReport, optXhr);\n                    }\n                }\n            );\n        }\n    },\n\n    upload = {\n        cancel: function(id) {\n            log(\"Cancelling \" + id);\n            options.paramsStore.remove(id);\n            connectionManager.free(id);\n        },\n\n        cleanup: function(id, response, optXhr) {\n            var name = options.getName(id);\n\n            options.onComplete(id, name, response, optXhr);\n\n            if (handler._getFileState(id)) {\n                handler._clearXhrs && handler._clearXhrs(id);\n            }\n\n            connectionManager.free(id);\n        },\n\n        // Returns a qq.BlobProxy, or an actual File/Blob if no proxy is involved, or undefined\n        // if none of these are available for the ID\n        getProxyOrBlob: function(id) {\n            return (handler.getProxy && handler.getProxy(id)) ||\n                (handler.getFile && handler.getFile(id));\n        },\n\n        initHandler: function() {\n            var handlerType = namespace ? qq[namespace] : qq.traditional,\n                handlerModuleSubtype = qq.supportedFeatures.ajaxUploading ? \"Xhr\" : \"Form\";\n\n            handler = new handlerType[handlerModuleSubtype + \"UploadHandler\"](\n                options,\n                {\n                    getCustomResumeData: options.getCustomResumeData,\n                    getDataByUuid: options.getDataByUuid,\n                    getName: options.getName,\n                    getSize: options.getSize,\n                    getUuid: options.getUuid,\n                    log: log,\n                    onCancel: options.onCancel,\n                    onProgress: options.onProgress,\n                    onUuidChanged: options.onUuidChanged\n                }\n            );\n\n            if (handler._removeExpiredChunkingRecords) {\n                handler._removeExpiredChunkingRecords();\n            }\n        },\n\n        isDeferredEligibleForUpload: function(id) {\n            return options.isQueued(id);\n        },\n\n        // For Blobs that are part of a group of generated images, along with a reference image,\n        // this will ensure the blobs in the group are uploaded in the order they were triggered,\n        // even if some async processing must be completed on one or more Blobs first.\n        maybeDefer: function(id, blob) {\n            // If we don't have a file/blob yet & no file/blob exists for this item, request it,\n            // and then submit the upload to the specific handler once the blob is available.\n            // ASSUMPTION: This condition will only ever be true if XHR uploading is supported.\n            if (blob && !handler.getFile(id) && blob instanceof qq.BlobProxy) {\n\n                // Blob creation may take some time, so the caller may want to update the\n                // UI to indicate that an operation is in progress, even before the actual\n                // upload begins and an onUpload callback is invoked.\n                options.onUploadPrep(id);\n\n                log(\"Attempting to generate a blob on-demand for \" + id);\n                blob.create().then(function(generatedBlob) {\n                    log(\"Generated an on-demand blob for \" + id);\n\n                    // Update record associated with this file by providing the generated Blob\n                    handler.updateBlob(id, generatedBlob);\n\n                    // Propagate the size for this generated Blob\n                    options.setSize(id, generatedBlob.size);\n\n                    // Order handler to recalculate chunking possibility, if applicable\n                    handler.reevaluateChunking(id);\n\n                    upload.maybeSendDeferredFiles(id);\n                },\n\n                // Blob could not be generated.  Fail the upload & attempt to prevent retries.  Also bubble error message.\n                function(errorMessage) {\n                    var errorResponse = {};\n\n                    if (errorMessage) {\n                        errorResponse.error = errorMessage;\n                    }\n\n                    log(qq.format(\"Failed to generate blob for ID {}.  Error message: {}.\", id, errorMessage), \"error\");\n\n                    options.onComplete(id, options.getName(id), qq.extend(errorResponse, preventRetryResponse), null);\n                    upload.maybeSendDeferredFiles(id);\n                    connectionManager.free(id);\n                });\n            }\n            else {\n                return upload.maybeSendDeferredFiles(id);\n            }\n\n            return false;\n        },\n\n        // Upload any grouped blobs, in the proper order, that are ready to be uploaded\n        maybeSendDeferredFiles: function(id) {\n            var idsInGroup = options.getIdsInProxyGroup(id),\n                uploadedThisId = false;\n\n            if (idsInGroup && idsInGroup.length) {\n                log(\"Maybe ready to upload proxy group file \" + id);\n\n                qq.each(idsInGroup, function(idx, idInGroup) {\n                    if (upload.isDeferredEligibleForUpload(idInGroup) && !!handler.getFile(idInGroup)) {\n                        uploadedThisId = idInGroup === id;\n                        upload.now(idInGroup);\n                    }\n                    else if (upload.isDeferredEligibleForUpload(idInGroup)) {\n                        return false;\n                    }\n                });\n            }\n            else {\n                uploadedThisId = true;\n                upload.now(id);\n            }\n\n            return uploadedThisId;\n        },\n\n        maybeNewUuid: function(id, response) {\n            if (response.newUuid !== undefined) {\n                options.onUuidChanged(id, response.newUuid);\n            }\n        },\n\n        // The response coming from handler implementations may be in various formats.\n        // Instead of hoping a promise nested 5 levels deep will always return an object\n        // as its first param, let's just normalize the response here.\n        normalizeResponse: function(originalResponse, successful) {\n            var response = originalResponse;\n\n            // The passed \"response\" param may not be a response at all.\n            // It could be a string, detailing the error, for example.\n            if (!qq.isObject(originalResponse)) {\n                response = {};\n\n                if (qq.isString(originalResponse) && !successful) {\n                    response.error = originalResponse;\n                }\n            }\n\n            response.success = successful;\n\n            return response;\n        },\n\n        now: function(id) {\n            var name = options.getName(id);\n\n            if (!controller.isValid(id)) {\n                throw new qq.Error(id + \" is not a valid file ID to upload!\");\n            }\n\n            options.onUpload(id, name).then(\n                function(response) {\n                    if (response && response.pause) {\n                        options.setStatus(id, qq.status.PAUSED);\n                        handler.pause(id);\n                        connectionManager.free(id);\n                    }\n                    else {\n                        if (chunkingPossible && handler._shouldChunkThisFile(id)) {\n                            chunked.sendNext(id);\n                        }\n                        else {\n                            simple.send(id, name);\n                        }\n                    }\n                },\n\n                function(error) {\n                    error = error || {};\n\n                    log(id + \" upload start aborted due to rejected onUpload Promise - details: \" + error, \"error\");\n\n                    if (!options.onAutoRetry(id, name, error.responseJSON || {})) {\n                        var response = upload.normalizeResponse(error.responseJSON, false);\n                        upload.cleanup(id, response);\n                    }\n                }\n            );\n        },\n\n        start: function(id) {\n            var blobToUpload = upload.getProxyOrBlob(id);\n\n            if (blobToUpload) {\n                return upload.maybeDefer(id, blobToUpload);\n            }\n            else {\n                upload.now(id);\n                return true;\n            }\n        }\n    };\n\n    qq.extend(this, {\n        /**\n         * Adds file or file input to the queue\n         **/\n        add: function(id, file) {\n            handler.add.apply(this, arguments);\n        },\n\n        /**\n         * Sends the file identified by id\n         */\n        upload: function(id) {\n            if (connectionManager.open(id)) {\n                return upload.start(id);\n            }\n            return false;\n        },\n\n        retry: function(id) {\n            // On retry, if concurrent chunking has been enabled, we may have aborted all other in-progress chunks\n            // for a file when encountering a failed chunk upload.  We then signaled the controller to ignore\n            // all failures associated with these aborts.  We are now retrying, so we don't want to ignore\n            // any more failures at this point.\n            if (concurrentChunkingPossible) {\n                handler._getFileState(id).temp.ignoreFailure = false;\n            }\n\n            // If we are attempting to retry a file that is already consuming a connection, this is likely an auto-retry.\n            // Just go ahead and ask the handler to upload again.\n            if (connectionManager.isUsingConnection(id)) {\n                return upload.start(id);\n            }\n\n            // If we are attempting to retry a file that is not currently consuming a connection,\n            // this is likely a manual retry attempt.  We will need to ensure a connection is available\n            // before the retry commences.\n            else {\n                return controller.upload(id);\n            }\n        },\n\n        /**\n         * Cancels file upload by id\n         */\n        cancel: function(id) {\n            var cancelRetVal = handler.cancel(id);\n\n            if (qq.isGenericPromise(cancelRetVal)) {\n                cancelRetVal.then(function() {\n                    upload.cancel(id);\n                });\n            }\n            else if (cancelRetVal !== false) {\n                upload.cancel(id);\n            }\n        },\n\n        /**\n         * Cancels all queued or in-progress uploads\n         */\n        cancelAll: function() {\n            var waitingOrConnected = connectionManager.getWaitingOrConnected(),\n                i;\n\n            // ensure files are cancelled in reverse order which they were added\n            // to avoid a flash of time where a queued file begins to upload before it is canceled\n            if (waitingOrConnected.length) {\n                for (i = waitingOrConnected.length - 1; i >= 0; i--) {\n                    controller.cancel(waitingOrConnected[i]);\n                }\n            }\n\n            connectionManager.reset();\n        },\n\n        // Returns a File, Blob, or the Blob/File for the reference/parent file if the targeted blob is a proxy.\n        // Undefined if no file record is available.\n        getFile: function(id) {\n            if (handler.getProxy && handler.getProxy(id)) {\n                return handler.getProxy(id).referenceBlob;\n            }\n\n            return handler.getFile && handler.getFile(id);\n        },\n\n        // Returns true if the Blob associated with the ID is related to a proxy s\n        isProxied: function(id) {\n            return !!(handler.getProxy && handler.getProxy(id));\n        },\n\n        getInput: function(id) {\n            if (handler.getInput) {\n                return handler.getInput(id);\n            }\n        },\n\n        reset: function() {\n            log(\"Resetting upload handler\");\n            controller.cancelAll();\n            connectionManager.reset();\n            handler.reset();\n        },\n\n        expunge: function(id) {\n            if (controller.isValid(id)) {\n                return handler.expunge(id);\n            }\n        },\n\n        /**\n         * Determine if the file exists.\n         */\n        isValid: function(id) {\n            return handler.isValid(id);\n        },\n\n        hasResumeRecord: function(id) {\n            var key = handler.isValid(id) &&\n                handler._getLocalStorageId &&\n                handler._getLocalStorageId(id);\n\n            if (key) {\n                return !!localStorage.getItem(key);\n            }\n\n            return false;\n        },\n\n        getResumableFilesData: function() {\n            if (handler.getResumableFilesData) {\n                return handler.getResumableFilesData();\n            }\n            return [];\n        },\n\n        /**\n         * This may or may not be implemented, depending on the handler.  For handlers where a third-party ID is\n         * available (such as the \"key\" for Amazon S3), this will return that value.  Otherwise, the return value\n         * will be undefined.\n         *\n         * @param id Internal file ID\n         * @returns {*} Some identifier used by a 3rd-party service involved in the upload process\n         */\n        getThirdPartyFileId: function(id) {\n            if (controller.isValid(id)) {\n                return handler.getThirdPartyFileId(id);\n            }\n        },\n\n        /**\n         * Attempts to pause the associated upload if the specific handler supports this and the file is \"valid\".\n         * @param id ID of the upload/file to pause\n         * @returns {boolean} true if the upload was paused\n         */\n        pause: function(id) {\n            if (controller.isResumable(id) && handler.pause && controller.isValid(id) && handler.pause(id)) {\n                connectionManager.free(id);\n                handler.moveInProgressToRemaining(id);\n                return true;\n            }\n            return false;\n        },\n\n        isAttemptingResume: function(id) {\n            return !!handler.isAttemptingResume && handler.isAttemptingResume(id);\n        },\n\n        // True if the file is eligible for pause/resume.\n        isResumable: function(id) {\n            return !!handler.isResumable && handler.isResumable(id);\n        }\n    });\n\n    qq.extend(options, o);\n    log = options.log;\n    chunkingPossible = options.chunking.enabled && qq.supportedFeatures.chunking;\n    concurrentChunkingPossible = chunkingPossible && options.chunking.concurrent.enabled;\n\n    preventRetryResponse = (function() {\n        var response = {};\n\n        response[options.preventRetryParam] = true;\n\n        return response;\n    }());\n\n    upload.initHandler();\n};\n","/*globals qq */\n/*jshint -W117 */\nqq.WindowReceiveMessage = function(o) {\n    \"use strict\";\n\n    var options = {\n            log: function(message, level) {}\n        },\n        callbackWrapperDetachers = {};\n\n    qq.extend(options, o);\n\n    qq.extend(this, {\n        receiveMessage: function(id, callback) {\n            var onMessageCallbackWrapper = function(event) {\n                    callback(event.data);\n                };\n\n            if (window.postMessage) {\n                callbackWrapperDetachers[id] = qq(window).attach(\"message\", onMessageCallbackWrapper);\n            }\n            else {\n                log(\"iframe message passing not supported in this browser!\", \"error\");\n            }\n        },\n\n        stopReceivingMessages: function(id) {\n            if (window.postMessage) {\n                var detacher = callbackWrapperDetachers[id];\n                if (detacher) {\n                    detacher();\n                }\n            }\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common APIs exposed to creators of upload via form/iframe handlers.  This is reused and possibly overridden\n * in some cases by specific form upload handlers.\n *\n * @constructor\n */\nqq.FormUploadHandler = function(spec) {\n    \"use strict\";\n\n    var options = spec.options,\n        handler = this,\n        proxy = spec.proxy,\n        formHandlerInstanceId = qq.getUniqueId(),\n        onloadCallbacks = {},\n        detachLoadEvents = {},\n        postMessageCallbackTimers = {},\n        isCors = options.isCors,\n        inputName = options.inputName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        corsMessageReceiver = new qq.WindowReceiveMessage({log: log});\n\n    /**\n     * Remove any trace of the file from the handler.\n     *\n     * @param id ID of the associated file\n     */\n    function expungeFile(id) {\n        delete detachLoadEvents[id];\n\n        // If we are dealing with CORS, we might still be waiting for a response from a loaded iframe.\n        // In that case, terminate the timer waiting for a message from the loaded iframe\n        // and stop listening for any more messages coming from this iframe.\n        if (isCors) {\n            clearTimeout(postMessageCallbackTimers[id]);\n            delete postMessageCallbackTimers[id];\n            corsMessageReceiver.stopReceivingMessages(id);\n        }\n\n        var iframe = document.getElementById(handler._getIframeName(id));\n        if (iframe) {\n            // To cancel request set src to something else.  We use src=\"javascript:false;\"\n            // because it doesn't trigger ie6 prompt on https\n            /* jshint scripturl:true */\n            iframe.setAttribute(\"src\", \"javascript:false;\");\n\n            qq(iframe).remove();\n        }\n    }\n\n    /**\n     * @param iframeName `document`-unique Name of the associated iframe\n     * @returns {*} ID of the associated file\n     */\n    function getFileIdForIframeName(iframeName) {\n        return iframeName.split(\"_\")[0];\n    }\n\n    /**\n     * Generates an iframe to be used as a target for upload-related form submits.  This also adds the iframe\n     * to the current `document`.  Note that the iframe is hidden from view.\n     *\n     * @param name Name of the iframe.\n     * @returns {HTMLIFrameElement} The created iframe\n     */\n    function initIframeForUpload(name) {\n        var iframe = qq.toElement(\"<iframe src='javascript:false;' name='\" + name + \"' />\");\n\n        iframe.setAttribute(\"id\", name);\n\n        iframe.style.display = \"none\";\n        document.body.appendChild(iframe);\n\n        return iframe;\n    }\n\n    /**\n     * If we are in CORS mode, we must listen for messages (containing the server response) from the associated\n     * iframe, since we cannot directly parse the content of the iframe due to cross-origin restrictions.\n     *\n     * @param iframe Listen for messages on this iframe.\n     * @param callback Invoke this callback with the message from the iframe.\n     */\n    function registerPostMessageCallback(iframe, callback) {\n        var iframeName = iframe.id,\n            fileId = getFileIdForIframeName(iframeName),\n            uuid = getUuid(fileId);\n\n        onloadCallbacks[uuid] = callback;\n\n        // When the iframe has loaded (after the server responds to an upload request)\n        // declare the attempt a failure if we don't receive a valid message shortly after the response comes in.\n        detachLoadEvents[fileId] = qq(iframe).attach(\"load\", function() {\n            if (handler.getInput(fileId)) {\n                log(\"Received iframe load event for CORS upload request (iframe name \" + iframeName + \")\");\n\n                postMessageCallbackTimers[iframeName] = setTimeout(function() {\n                    var errorMessage = \"No valid message received from loaded iframe for iframe name \" + iframeName;\n                    log(errorMessage, \"error\");\n                    callback({\n                        error: errorMessage\n                    });\n                }, 1000);\n            }\n        });\n\n        // Listen for messages coming from this iframe.  When a message has been received, cancel the timer\n        // that declares the upload a failure if a message is not received within a reasonable amount of time.\n        corsMessageReceiver.receiveMessage(iframeName, function(message) {\n            log(\"Received the following window message: '\" + message + \"'\");\n            var fileId = getFileIdForIframeName(iframeName),\n                response = handler._parseJsonResponse(message),\n                uuid = response.uuid,\n                onloadCallback;\n\n            if (uuid && onloadCallbacks[uuid]) {\n                log(\"Handling response for iframe name \" + iframeName);\n                clearTimeout(postMessageCallbackTimers[iframeName]);\n                delete postMessageCallbackTimers[iframeName];\n\n                handler._detachLoadEvent(iframeName);\n\n                onloadCallback = onloadCallbacks[uuid];\n\n                delete onloadCallbacks[uuid];\n                corsMessageReceiver.stopReceivingMessages(iframeName);\n                onloadCallback(response);\n            }\n            else if (!uuid) {\n                log(\"'\" + message + \"' does not contain a UUID - ignoring.\");\n            }\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, fileInput) {\n                super_.add(id, {input: fileInput});\n\n                fileInput.setAttribute(\"name\", inputName);\n\n                // remove file input from DOM\n                if (fileInput.parentNode) {\n                    qq(fileInput).remove();\n                }\n            },\n\n            expunge: function(id) {\n                expungeFile(id);\n                super_.expunge(id);\n            },\n\n            isValid: function(id) {\n                return super_.isValid(id) &&\n                    handler._getFileState(id).input !== undefined;\n            }\n        };\n    });\n\n    qq.extend(this, {\n        getInput: function(id) {\n            return handler._getFileState(id).input;\n        },\n\n        /**\n         * This function either delegates to a more specific message handler if CORS is involved,\n         * or simply registers a callback when the iframe has been loaded that invokes the passed callback\n         * after determining if the content of the iframe is accessible.\n         *\n         * @param iframe Associated iframe\n         * @param callback Callback to invoke after we have determined if the iframe content is accessible.\n         */\n        _attachLoadEvent: function(iframe, callback) {\n            /*jslint eqeq: true*/\n            var responseDescriptor;\n\n            if (isCors) {\n                registerPostMessageCallback(iframe, callback);\n            }\n            else {\n                detachLoadEvents[iframe.id] = qq(iframe).attach(\"load\", function() {\n                    log(\"Received response for \" + iframe.id);\n\n                    // when we remove iframe from dom\n                    // the request stops, but in IE load\n                    // event fires\n                    if (!iframe.parentNode) {\n                        return;\n                    }\n\n                    try {\n                        // fixing Opera 10.53\n                        if (iframe.contentDocument &&\n                            iframe.contentDocument.body &&\n                            iframe.contentDocument.body.innerHTML == \"false\") {\n                            // In Opera event is fired second time\n                            // when body.innerHTML changed from false\n                            // to server response approx. after 1 sec\n                            // when we upload file with iframe\n                            return;\n                        }\n                    }\n                    catch (error) {\n                        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n                        log(\"Error when attempting to access iframe during handling of upload response (\" + error.message + \")\", \"error\");\n                        responseDescriptor = {success: false};\n                    }\n\n                    callback(responseDescriptor);\n                });\n            }\n        },\n\n        /**\n         * Creates an iframe with a specific document-unique name.\n         *\n         * @param id ID of the associated file\n         * @returns {HTMLIFrameElement}\n         */\n        _createIframe: function(id) {\n            var iframeName = handler._getIframeName(id);\n\n            return initIframeForUpload(iframeName);\n        },\n\n        /**\n         * Called when we are no longer interested in being notified when an iframe has loaded.\n         *\n         * @param id Associated file ID\n         */\n        _detachLoadEvent: function(id) {\n            if (detachLoadEvents[id] !== undefined) {\n                detachLoadEvents[id]();\n                delete detachLoadEvents[id];\n            }\n        },\n\n        /**\n         * @param fileId ID of the associated file\n         * @returns {string} The `document`-unique name of the iframe\n         */\n        _getIframeName: function(fileId) {\n            return fileId + \"_\" + formHandlerInstanceId;\n        },\n\n        /**\n         * Generates a form element and appends it to the `document`.  When the form is submitted, a specific iframe is targeted.\n         * The name of the iframe is passed in as a property of the spec parameter, and must be unique in the `document`.  Note\n         * that the form is hidden from view.\n         *\n         * @param spec An object containing various properties to be used when constructing the form.  Required properties are\n         * currently: `method`, `endpoint`, `params`, `paramsInBody`, and `targetName`.\n         * @returns {HTMLFormElement} The created form\n         */\n        _initFormForUpload: function(spec) {\n            var method = spec.method,\n                endpoint = spec.endpoint,\n                params = spec.params,\n                paramsInBody = spec.paramsInBody,\n                targetName = spec.targetName,\n                form = qq.toElement(\"<form method='\" + method + \"' enctype='multipart/form-data'></form>\"),\n                url = endpoint;\n\n            if (paramsInBody) {\n                qq.obj2Inputs(params, form);\n            }\n            else {\n                url = qq.obj2url(params, endpoint);\n            }\n\n            form.setAttribute(\"action\", url);\n            form.setAttribute(\"target\", targetName);\n            form.style.display = \"none\";\n            document.body.appendChild(form);\n\n            return form;\n        },\n\n        /**\n         * @param innerHtmlOrMessage JSON message\n         * @returns {*} The parsed response, or an empty object if the response could not be parsed\n         */\n        _parseJsonResponse: function(innerHtmlOrMessage) {\n            var response = {};\n\n            try {\n                response = qq.parseJson(innerHtmlOrMessage);\n            }\n            catch (error) {\n                log(\"Error when attempting to parse iframe upload response (\" + error.message + \")\", \"error\");\n            }\n\n            return response;\n        }\n    });\n};\n","/* globals qq */\n/**\n * Common API exposed to creators of XHR handlers.  This is reused and possibly overriding in some cases by specific\n * XHR upload handlers.\n *\n * @constructor\n */\nqq.XhrUploadHandler = function(spec) {\n    \"use strict\";\n\n    var handler = this,\n        namespace = spec.options.namespace,\n        proxy = spec.proxy,\n        chunking = spec.options.chunking,\n        getChunkSize = function(id) {\n            var fileState = handler._getFileState(id);\n\n            if (fileState.chunkSize) {\n                return fileState.chunkSize;\n            }\n\n            else {\n                var chunkSize = chunking.partSize;\n\n                if (qq.isFunction(chunkSize)) {\n                    chunkSize = chunkSize(id, getSize(id));\n                }\n\n                fileState.chunkSize = chunkSize;\n                return chunkSize;\n            }\n        },\n        resume = spec.options.resume,\n        chunkFiles = chunking && spec.options.chunking.enabled && qq.supportedFeatures.chunking,\n        resumeEnabled = resume && spec.options.resume.enabled && chunkFiles && qq.supportedFeatures.resume,\n        getName = proxy.getName,\n        getSize = proxy.getSize,\n        getUuid = proxy.getUuid,\n        getEndpoint = proxy.getEndpoint,\n        getDataByUuid = proxy.getDataByUuid,\n        onUuidChanged = proxy.onUuidChanged,\n        onProgress = proxy.onProgress,\n        log = proxy.log,\n        getCustomResumeData = proxy.getCustomResumeData;\n\n    function abort(id) {\n        qq.each(handler._getXhrs(id), function(xhrId, xhr) {\n            var ajaxRequester = handler._getAjaxRequester(id, xhrId);\n\n            xhr.onreadystatechange = null;\n            xhr.upload.onprogress = null;\n            xhr.abort();\n            ajaxRequester && ajaxRequester.canceled && ajaxRequester.canceled(id);\n        });\n    }\n\n    qq.extend(this, new qq.UploadHandler(spec));\n\n    qq.override(this, function(super_) {\n        return {\n            /**\n             * Adds File or Blob to the queue\n             **/\n            add: function(id, blobOrProxy) {\n                if (qq.isFile(blobOrProxy) || qq.isBlob(blobOrProxy)) {\n                    super_.add(id, {file: blobOrProxy});\n                }\n                else if (blobOrProxy instanceof qq.BlobProxy) {\n                    super_.add(id, {proxy: blobOrProxy});\n                }\n                else {\n                    throw new Error(\"Passed obj is not a File, Blob, or proxy\");\n                }\n\n                handler._initTempState(id);\n                resumeEnabled && handler._maybePrepareForResume(id);\n            },\n\n            expunge: function(id) {\n                abort(id);\n                handler._maybeDeletePersistedChunkData(id);\n                handler._clearXhrs(id);\n                super_.expunge(id);\n            }\n        };\n    });\n\n    qq.extend(this, {\n        // Clear the cached chunk `Blob` after we are done with it, just in case the `Blob` bytes are stored in memory.\n        clearCachedChunk: function(id, chunkIdx) {\n            delete handler._getFileState(id).temp.cachedChunks[chunkIdx];\n        },\n\n        clearXhr: function(id, chunkIdx) {\n            var tempState = handler._getFileState(id).temp;\n\n            if (tempState.xhrs) {\n                delete tempState.xhrs[chunkIdx];\n            }\n            if (tempState.ajaxRequesters) {\n                delete tempState.ajaxRequesters[chunkIdx];\n            }\n        },\n\n        // Called when all chunks have been successfully uploaded.  Expected promissory return type.\n        // This defines the default behavior if nothing further is required when all chunks have been uploaded.\n        finalizeChunks: function(id, responseParser) {\n            var lastChunkIdx = handler._getTotalChunks(id) - 1,\n                xhr = handler._getXhr(id, lastChunkIdx);\n\n            if (responseParser) {\n                return new qq.Promise().success(responseParser(xhr), xhr);\n            }\n\n            return new qq.Promise().success({}, xhr);\n        },\n\n        getFile: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).file;\n        },\n\n        getProxy: function(id) {\n            return handler.isValid(id) && handler._getFileState(id).proxy;\n        },\n\n        /**\n         * @returns {Array} Array of objects containing properties useful to integrators\n         * when it is important to determine which files are potentially resumable.\n         */\n        getResumableFilesData: function() {\n            var resumableFilesData = [];\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                handler.moveInProgressToRemaining(null, uploadData.chunking.inProgress,  uploadData.chunking.remaining);\n\n                var data = {\n                    name: uploadData.name,\n                    remaining: uploadData.chunking.remaining,\n                    size: uploadData.size,\n                    uuid: uploadData.uuid\n                };\n\n                if (uploadData.key) {\n                    data.key = uploadData.key;\n                }\n\n                if (uploadData.customResumeData) {\n                    data.customResumeData = uploadData.customResumeData;\n                }\n\n                resumableFilesData.push(data);\n            });\n\n            return resumableFilesData;\n        },\n\n        isAttemptingResume: function(id) {\n            return handler._getFileState(id).attemptingResume;\n        },\n\n        isResumable: function(id) {\n            return !!chunking && handler.isValid(id) &&\n                !handler._getFileState(id).notResumable;\n        },\n\n        moveInProgressToRemaining: function(id, optInProgress, optRemaining) {\n            var fileState = handler._getFileState(id) || {},\n                chunkingState =  fileState.chunking || {},\n                inProgress = optInProgress || chunkingState.inProgress,\n                remaining = optRemaining || chunkingState.remaining;\n\n            if (inProgress) {\n                log(qq.format(\"Moving these chunks from in-progress {}, to remaining.\", JSON.stringify(inProgress)));\n                inProgress.reverse();\n                qq.each(inProgress, function(idx, chunkIdx) {\n                    remaining.unshift(chunkIdx);\n                });\n                inProgress.length = 0;\n            }\n        },\n\n        pause: function(id) {\n            if (handler.isValid(id)) {\n                log(qq.format(\"Aborting XHR upload for {} '{}' due to pause instruction.\", id, getName(id)));\n                handler._getFileState(id).paused = true;\n                abort(id);\n                return true;\n            }\n        },\n\n        reevaluateChunking: function(id) {\n            if (chunking && handler.isValid(id)) {\n                var state = handler._getFileState(id),\n                    totalChunks,\n                    i;\n\n                delete state.chunking;\n\n                state.chunking = {};\n                totalChunks = handler._getTotalChunks(id);\n                if (totalChunks > 1 || chunking.mandatory) {\n                    state.chunking.enabled = true;\n                    state.chunking.parts = totalChunks;\n                    state.chunking.remaining = [];\n\n                    for (i = 0; i < totalChunks; i++) {\n                        state.chunking.remaining.push(i);\n                    }\n\n                    handler._initTempState(id);\n                }\n                else {\n                    state.chunking.enabled = false;\n                }\n            }\n        },\n\n        updateBlob: function(id, newBlob) {\n            if (handler.isValid(id)) {\n                handler._getFileState(id).file = newBlob;\n            }\n        },\n\n        _clearXhrs: function(id) {\n            var tempState = handler._getFileState(id).temp;\n\n            qq.each(tempState.ajaxRequesters, function(chunkId) {\n                delete tempState.ajaxRequesters[chunkId];\n            });\n\n            qq.each(tempState.xhrs, function(chunkId) {\n                delete tempState.xhrs[chunkId];\n            });\n        },\n\n        /**\n         * Creates an XHR instance for this file and stores it in the fileState.\n         *\n         * @param id File ID\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @returns {XMLHttpRequest}\n         */\n        _createXhr: function(id, optChunkIdx) {\n            return handler._registerXhr(id, optChunkIdx, qq.createXhrInstance());\n        },\n\n        _getAjaxRequester: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.ajaxRequesters[chunkIdx];\n        },\n\n        _getChunkData: function(id, chunkIndex) {\n            var chunkSize = getChunkSize(id),\n                fileSize = getSize(id),\n                fileOrBlob = handler.getFile(id),\n                startBytes = chunkSize * chunkIndex,\n                endBytes = startBytes + chunkSize >= fileSize ? fileSize : startBytes + chunkSize,\n                totalChunks = handler._getTotalChunks(id),\n                cachedChunks = this._getFileState(id).temp.cachedChunks,\n\n            // To work around a Webkit GC bug, we must keep each chunk `Blob` in scope until we are done with it.\n            // See https://github.com/Widen/fine-uploader/issues/937#issuecomment-41418760\n                blob = cachedChunks[chunkIndex] || qq.sliceBlob(fileOrBlob, startBytes, endBytes);\n\n            cachedChunks[chunkIndex] = blob;\n\n            return {\n                part: chunkIndex,\n                start: startBytes,\n                end: endBytes,\n                count: totalChunks,\n                blob: blob,\n                size: endBytes - startBytes\n            };\n        },\n\n        _getChunkDataForCallback: function(chunkData) {\n            return {\n                partIndex: chunkData.part,\n                startByte: chunkData.start + 1,\n                endByte: chunkData.end,\n                totalParts: chunkData.count\n            };\n        },\n\n        /**\n         * @param id File ID\n         * @returns {string} Identifier for this item that may appear in the browser's local storage\n         */\n        _getLocalStorageId: function(id) {\n            var formatVersion = \"5.0\",\n                name = getName(id),\n                size = getSize(id),\n                chunkSize = getChunkSize(id),\n                endpoint = getEndpoint(id),\n                customKeys = resume.customKeys(id),\n                localStorageId = qq.format(\"qq{}resume{}-{}-{}-{}-{}\", namespace, formatVersion, name, size, chunkSize, endpoint);\n\n            customKeys.forEach(function(key) {\n                localStorageId += \"-\" + key;\n            });\n\n            return localStorageId;\n        },\n\n        _getMimeType: function(id) {\n            return handler.getFile(id).type;\n        },\n\n        _getPersistableData: function(id) {\n            return handler._getFileState(id).chunking;\n        },\n\n        /**\n         * @param id ID of the associated file\n         * @returns {number} Number of parts this file can be divided into, or undefined if chunking is not supported in this UA\n         */\n        _getTotalChunks: function(id) {\n            if (chunking) {\n                var fileSize = getSize(id),\n                    chunkSize = getChunkSize(id);\n\n                return Math.ceil(fileSize / chunkSize);\n            }\n        },\n\n        _getXhr: function(id, optChunkIdx) {\n            var chunkIdx = optChunkIdx == null ? -1 : optChunkIdx;\n            return handler._getFileState(id).temp.xhrs[chunkIdx];\n        },\n\n        _getXhrs: function(id) {\n            return handler._getFileState(id).temp.xhrs;\n        },\n\n        // Iterates through all XHR handler-created resume records (in local storage),\n        // invoking the passed callback and passing in the key and value of each local storage record.\n        _iterateResumeRecords: function(callback) {\n            if (resumeEnabled) {\n                qq.each(localStorage, function(key, item) {\n                    if (key.indexOf(qq.format(\"qq{}resume\", namespace)) === 0) {\n                        var uploadData = JSON.parse(item);\n                        callback(key, uploadData);\n                    }\n                });\n            }\n        },\n\n        _initTempState: function(id) {\n            handler._getFileState(id).temp = {\n                ajaxRequesters: {},\n                chunkProgress: {},\n                xhrs: {},\n                cachedChunks: {}\n            };\n        },\n\n        _markNotResumable: function(id) {\n            handler._getFileState(id).notResumable = true;\n        },\n\n        // Removes a chunked upload record from local storage, if possible.\n        // Returns true if the item was removed, false otherwise.\n        _maybeDeletePersistedChunkData: function(id) {\n            var localStorageId;\n\n            if (resumeEnabled && handler.isResumable(id)) {\n                localStorageId = handler._getLocalStorageId(id);\n\n                if (localStorageId && localStorage.getItem(localStorageId)) {\n                    localStorage.removeItem(localStorageId);\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        // If this is a resumable upload, grab the relevant data from storage and items in memory that track this upload\n        // so we can pick up from where we left off.\n        _maybePrepareForResume: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // Resume is enabled and possible and this is the first time we've tried to upload this file in this session,\n            // so prepare for a resume attempt.\n            if (resumeEnabled && state.key === undefined) {\n                localStorageId = handler._getLocalStorageId(id);\n                persistedData = localStorage.getItem(localStorageId);\n\n                // If we found this item in local storage, maybe we should resume it.\n                if (persistedData) {\n                    persistedData = JSON.parse(persistedData);\n\n                    // If we found a resume record but we have already handled this file in this session,\n                    // don't try to resume it & ensure we don't persist future check data\n                    if (getDataByUuid(persistedData.uuid)) {\n                        handler._markNotResumable(id);\n                    }\n                    else {\n                        log(qq.format(\"Identified file with ID {} and name of {} as resumable.\", id, getName(id)));\n\n                        onUuidChanged(id, persistedData.uuid);\n\n                        state.key = persistedData.key;\n                        state.chunking = persistedData.chunking;\n                        state.loaded = persistedData.loaded;\n                        state.customResumeData = persistedData.customResumeData;\n                        state.attemptingResume = true;\n\n                        handler.moveInProgressToRemaining(id);\n                    }\n                }\n            }\n        },\n\n        // Persist any data needed to resume this upload in a new session.\n        _maybePersistChunkedState: function(id) {\n            var state = handler._getFileState(id),\n                localStorageId, persistedData;\n\n            // If local storage isn't supported by the browser, or if resume isn't enabled or possible, give up\n            if (resumeEnabled && handler.isResumable(id)) {\n                var customResumeData = getCustomResumeData(id);\n\n                localStorageId = handler._getLocalStorageId(id);\n\n                persistedData = {\n                    name: getName(id),\n                    size: getSize(id),\n                    uuid: getUuid(id),\n                    key: state.key,\n                    chunking: state.chunking,\n                    loaded: state.loaded,\n                    lastUpdated: Date.now(),\n                };\n\n                if (customResumeData) {\n                    persistedData.customResumeData = customResumeData;\n                }\n\n                try {\n                    localStorage.setItem(localStorageId, JSON.stringify(persistedData));\n                }\n                catch (error) {\n                    log(qq.format(\"Unable to save resume data for '{}' due to error: '{}'.\", id, error.toString()), \"warn\");\n                }\n            }\n        },\n\n        _registerProgressHandler: function(id, chunkIdx, chunkSize) {\n            var xhr = handler._getXhr(id, chunkIdx),\n                name = getName(id),\n                progressCalculator = {\n                    simple: function(loaded, total) {\n                        var fileSize = getSize(id);\n\n                        if (loaded === total) {\n                            onProgress(id, name, fileSize, fileSize);\n                        }\n                        else {\n                            onProgress(id, name, (loaded >= fileSize ? fileSize - 1 : loaded), fileSize);\n                        }\n                    },\n\n                    chunked: function(loaded, total) {\n                        var chunkProgress = handler._getFileState(id).temp.chunkProgress,\n                            totalSuccessfullyLoadedForFile = handler._getFileState(id).loaded,\n                            loadedForRequest = loaded,\n                            totalForRequest = total,\n                            totalFileSize = getSize(id),\n                            estActualChunkLoaded = loadedForRequest - (totalForRequest - chunkSize),\n                            totalLoadedForFile = totalSuccessfullyLoadedForFile;\n\n                        chunkProgress[chunkIdx] = estActualChunkLoaded;\n\n                        qq.each(chunkProgress, function(chunkIdx, chunkLoaded) {\n                            totalLoadedForFile += chunkLoaded;\n                        });\n\n                        onProgress(id, name, totalLoadedForFile, totalFileSize);\n                    }\n                };\n\n            xhr.upload.onprogress = function(e) {\n                if (e.lengthComputable) {\n                    /* jshint eqnull: true */\n                    var type = chunkSize == null ? \"simple\" : \"chunked\";\n                    progressCalculator[type](e.loaded, e.total);\n                }\n            };\n        },\n\n        /**\n         * Registers an XHR transport instance created elsewhere.\n         *\n         * @param id ID of the associated file\n         * @param optChunkIdx The chunk index associated with this XHR, if applicable\n         * @param xhr XMLHttpRequest object instance\n         * @param optAjaxRequester `qq.AjaxRequester` associated with this request, if applicable.\n         * @returns {XMLHttpRequest}\n         */\n        _registerXhr: function(id, optChunkIdx, xhr, optAjaxRequester) {\n            var xhrsId = optChunkIdx == null ? -1 : optChunkIdx,\n                tempState = handler._getFileState(id).temp;\n\n            tempState.xhrs = tempState.xhrs || {};\n            tempState.ajaxRequesters = tempState.ajaxRequesters || {};\n\n            tempState.xhrs[xhrsId] = xhr;\n\n            if (optAjaxRequester) {\n                tempState.ajaxRequesters[xhrsId] = optAjaxRequester;\n            }\n\n            return xhr;\n        },\n\n        // Deletes any local storage records that are \"expired\".\n        _removeExpiredChunkingRecords: function() {\n            var expirationDays = resume.recordsExpireIn;\n\n            handler._iterateResumeRecords(function(key, uploadData) {\n                var expirationDate = new Date(uploadData.lastUpdated);\n\n                // transform updated date into expiration date\n                expirationDate.setDate(expirationDate.getDate() + expirationDays);\n\n                if (expirationDate.getTime() <= Date.now()) {\n                    log(\"Removing expired resume record with key \" + key);\n                    localStorage.removeItem(key);\n                }\n            });\n        },\n\n        /**\n         * Determine if the associated file should be chunked.\n         *\n         * @param id ID of the associated file\n         * @returns {*} true if chunking is enabled, possible, and the file can be split into more than 1 part\n         */\n        _shouldChunkThisFile: function(id) {\n            var state = handler._getFileState(id);\n\n            if (!state.chunking) {\n                handler.reevaluateChunking(id);\n            }\n\n            return state.chunking.enabled;\n        }\n    });\n};\n","/*globals qq, XMLHttpRequest*/\nqq.DeleteFileAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            uuidParamName: \"qquuid\",\n            endpointStore: {},\n            maxConnections: 3,\n            customHeaders: function(id) {return {};},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {},\n            onDelete: function(id) {},\n            onDeleteComplete: function(id, xhrOrXdr, isError) {}\n        };\n\n    qq.extend(options, o);\n\n    function getMandatedParams() {\n        if (options.method.toUpperCase() === \"POST\") {\n            return {\n                _method: \"DELETE\"\n            };\n        }\n\n        return {};\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"POST\", \"DELETE\"],\n        method: options.method,\n        endpointStore: options.endpointStore,\n        paramsStore: options.paramsStore,\n        mandatedParams: getMandatedParams(),\n        maxConnections: options.maxConnections,\n        customHeaders: function(id) {\n            return options.customHeaders.get(id);\n        },\n        log: options.log,\n        onSend: options.onDelete,\n        onComplete: options.onDeleteComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        sendDelete: function(id, uuid, additionalMandatedParams) {\n            var additionalOptions = additionalMandatedParams || {};\n\n            options.log(\"Submitting delete file request for \" + id);\n\n            if (options.method === \"DELETE\") {\n                requester.initTransport(id)\n                    .withPath(uuid)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n            else {\n                additionalOptions[options.uuidParamName] = uuid;\n                requester.initTransport(id)\n                    .withParams(additionalOptions)\n                    .send();\n            }\n        }\n    });\n};\n","/*global qq, define */\n/*jshint strict:false,bitwise:false,nonew:false,asi:true,-W064,-W116,-W089 */\n/**\n * Mega pixel image rendering library for iOS6+\n *\n * Fixes iOS6+'s image file rendering issue for large size image (over mega-pixel),\n * which causes unexpected subsampling when drawing it in canvas.\n * By using this library, you can safely render the image with proper stretching.\n *\n * Copyright (c) 2012 Shinichi Tomita <shinichi.tomita@gmail.com>\n * Released under the MIT license\n *\n * Heavily modified by Widen for Fine Uploader\n */\n(function() {\n\n    /**\n     * Detect subsampling in loaded image.\n     * In iOS, larger images than 2M pixels may be subsampled in rendering.\n     */\n    function detectSubsampling(img) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            canvas = document.createElement(\"canvas\"),\n            ctx;\n\n        if (iw * ih > 1024 * 1024) { // subsampling may happen over megapixel image\n            canvas.width = canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            ctx.drawImage(img, -iw + 1, 0);\n            // subsampled image becomes half smaller in rendering size.\n            // check alpha channel value to confirm image is covering edge pixel or not.\n            // if alpha value is 0 image is not covering, hence subsampled.\n            return ctx.getImageData(0, 0, 1, 1).data[3] === 0;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * Detecting vertical squash in loaded image.\n     * Fixes a bug which squash image vertically while drawing into canvas for some images.\n     */\n    function detectVerticalSquash(img, iw, ih) {\n        var canvas = document.createElement(\"canvas\"),\n            sy = 0,\n            ey = ih,\n            py = ih,\n            ctx, data, alpha, ratio;\n\n        canvas.width = 1;\n        canvas.height = ih;\n        ctx = canvas.getContext(\"2d\");\n        ctx.drawImage(img, 0, 0);\n        data = ctx.getImageData(0, 0, 1, ih).data;\n\n        // search image edge pixel position in case it is squashed vertically.\n        while (py > sy) {\n            alpha = data[(py - 1) * 4 + 3];\n            if (alpha === 0) {\n                ey = py;\n            } else {\n                sy = py;\n            }\n            py = (ey + sy) >> 1;\n        }\n\n        ratio = (py / ih);\n        return (ratio === 0) ? 1 : ratio;\n    }\n\n    /**\n     * Rendering image element (with resizing) and get its data URL\n     */\n    function renderImageToDataURL(img, blob, options, doSquash) {\n        var canvas = document.createElement(\"canvas\"),\n            mime = options.mime || \"image/jpeg\",\n            promise = new qq.Promise();\n\n        renderImageToCanvas(img, blob, canvas, options, doSquash)\n            .then(function() {\n                promise.success(\n                    canvas.toDataURL(mime, options.quality || 0.8)\n                );\n            });\n\n        return promise;\n    }\n\n    function maybeCalculateDownsampledDimensions(spec) {\n        var maxPixels = 5241000; //iOS specific value\n\n        if (!qq.ios()) {\n            throw new qq.Error(\"Downsampled dimensions can only be reliably calculated for iOS!\");\n        }\n\n        if (spec.origHeight * spec.origWidth > maxPixels) {\n            return {\n                newHeight: Math.round(Math.sqrt(maxPixels * (spec.origHeight / spec.origWidth))),\n                newWidth: Math.round(Math.sqrt(maxPixels * (spec.origWidth / spec.origHeight)))\n            };\n        }\n    }\n\n    /**\n     * Rendering image element (with resizing) into the canvas element\n     */\n    function renderImageToCanvas(img, blob, canvas, options, doSquash) {\n        var iw = img.naturalWidth,\n            ih = img.naturalHeight,\n            width = options.width,\n            height = options.height,\n            ctx = canvas.getContext(\"2d\"),\n            promise = new qq.Promise(),\n            modifiedDimensions;\n\n        ctx.save();\n\n        if (options.resize) {\n            return renderImageToCanvasWithCustomResizer({\n                blob: blob,\n                canvas: canvas,\n                image: img,\n                imageHeight: ih,\n                imageWidth: iw,\n                orientation: options.orientation,\n                resize: options.resize,\n                targetHeight: height,\n                targetWidth: width\n            });\n        }\n\n        if (!qq.supportedFeatures.unlimitedScaledImageSize) {\n            modifiedDimensions = maybeCalculateDownsampledDimensions({\n                origWidth: width,\n                origHeight: height\n            });\n\n            if (modifiedDimensions) {\n                qq.log(qq.format(\"Had to reduce dimensions due to device limitations from {}w / {}h to {}w / {}h\",\n                    width, height, modifiedDimensions.newWidth, modifiedDimensions.newHeight),\n                    \"warn\");\n\n                width = modifiedDimensions.newWidth;\n                height = modifiedDimensions.newHeight;\n            }\n        }\n\n        transformCoordinate(canvas, width, height, options.orientation);\n\n        // Fine Uploader specific: Save some CPU cycles if not using iOS\n        // Assumption: This logic is only needed to overcome iOS image sampling issues\n        if (qq.ios()) {\n            (function() {\n                if (detectSubsampling(img)) {\n                    iw /= 2;\n                    ih /= 2;\n                }\n\n                var d = 1024, // size of tiling canvas\n                    tmpCanvas = document.createElement(\"canvas\"),\n                    vertSquashRatio = doSquash ? detectVerticalSquash(img, iw, ih) : 1,\n                    dw = Math.ceil(d * width / iw),\n                    dh = Math.ceil(d * height / ih / vertSquashRatio),\n                    sy = 0,\n                    dy = 0,\n                    tmpCtx, sx, dx;\n\n                tmpCanvas.width = tmpCanvas.height = d;\n                tmpCtx = tmpCanvas.getContext(\"2d\");\n\n                while (sy < ih) {\n                    sx = 0;\n                    dx = 0;\n                    while (sx < iw) {\n                        tmpCtx.clearRect(0, 0, d, d);\n                        tmpCtx.drawImage(img, -sx, -sy);\n                        ctx.drawImage(tmpCanvas, 0, 0, d, d, dx, dy, dw, dh);\n                        sx += d;\n                        dx += dw;\n                    }\n                    sy += d;\n                    dy += dh;\n                }\n                ctx.restore();\n                tmpCanvas = tmpCtx = null;\n            }());\n        }\n        else {\n            ctx.drawImage(img, 0, 0, width, height);\n        }\n\n        canvas.qqImageRendered && canvas.qqImageRendered();\n        promise.success();\n\n        return promise;\n    }\n\n    function renderImageToCanvasWithCustomResizer(resizeInfo) {\n        var blob = resizeInfo.blob,\n            image = resizeInfo.image,\n            imageHeight = resizeInfo.imageHeight,\n            imageWidth = resizeInfo.imageWidth,\n            orientation = resizeInfo.orientation,\n            promise = new qq.Promise(),\n            resize = resizeInfo.resize,\n            sourceCanvas = document.createElement(\"canvas\"),\n            sourceCanvasContext = sourceCanvas.getContext(\"2d\"),\n            targetCanvas = resizeInfo.canvas,\n            targetHeight = resizeInfo.targetHeight,\n            targetWidth = resizeInfo.targetWidth;\n\n        transformCoordinate(sourceCanvas, imageWidth, imageHeight, orientation);\n\n        targetCanvas.height = targetHeight;\n        targetCanvas.width = targetWidth;\n\n        sourceCanvasContext.drawImage(image, 0, 0);\n\n        resize({\n            blob: blob,\n            height: targetHeight,\n            image: image,\n            sourceCanvas: sourceCanvas,\n            targetCanvas: targetCanvas,\n            width: targetWidth\n        })\n            .then(\n                function success() {\n                    targetCanvas.qqImageRendered && targetCanvas.qqImageRendered();\n                    promise.success();\n                },\n                promise.failure\n            );\n\n        return promise;\n    }\n\n    /**\n     * Transform canvas coordination according to specified frame size and orientation\n     * Orientation value is from EXIF tag\n     */\n    function transformCoordinate(canvas, width, height, orientation) {\n        switch (orientation) {\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                canvas.width = height;\n                canvas.height = width;\n                break;\n            default:\n                canvas.width = width;\n                canvas.height = height;\n        }\n        var ctx = canvas.getContext(\"2d\");\n        switch (orientation) {\n            case 2:\n                // horizontal flip\n                ctx.translate(width, 0);\n                ctx.scale(-1, 1);\n                break;\n            case 3:\n                // 180 rotate left\n                ctx.translate(width, height);\n                ctx.rotate(Math.PI);\n                break;\n            case 4:\n                // vertical flip\n                ctx.translate(0, height);\n                ctx.scale(1, -1);\n                break;\n            case 5:\n                // vertical flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.scale(1, -1);\n                break;\n            case 6:\n                // 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(0, -height);\n                break;\n            case 7:\n                // horizontal flip + 90 rotate right\n                ctx.rotate(0.5 * Math.PI);\n                ctx.translate(width, -height);\n                ctx.scale(-1, 1);\n                break;\n            case 8:\n                // 90 rotate left\n                ctx.rotate(-0.5 * Math.PI);\n                ctx.translate(-width, 0);\n                break;\n            default:\n                break;\n        }\n    }\n\n    /**\n     * MegaPixImage class\n     */\n    function MegaPixImage(srcImage, errorCallback) {\n        var self = this;\n\n        if (window.Blob && srcImage instanceof Blob) {\n            (function() {\n                var img = new Image(),\n                    URL = window.URL && window.URL.createObjectURL ? window.URL :\n                        window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL : null;\n                if (!URL) { throw Error(\"No createObjectURL function found to create blob url\"); }\n                img.src = URL.createObjectURL(srcImage);\n                self.blob = srcImage;\n                srcImage = img;\n            }());\n        }\n        if (!srcImage.naturalWidth && !srcImage.naturalHeight) {\n            srcImage.onload = function() {\n                var listeners = self.imageLoadListeners;\n                if (listeners) {\n                    self.imageLoadListeners = null;\n                    // IE11 doesn't reliably report actual image dimensions immediately after onload for small files,\n                    // so let's push this to the end of the UI thread queue.\n                    setTimeout(function() {\n                        for (var i = 0, len = listeners.length; i < len; i++) {\n                            listeners[i]();\n                        }\n                    }, 0);\n                }\n            };\n            srcImage.onerror = errorCallback;\n            this.imageLoadListeners = [];\n        }\n        this.srcImage = srcImage;\n    }\n\n    /**\n     * Rendering megapix image into specified target element\n     */\n    MegaPixImage.prototype.render = function(target, options) {\n        options = options || {};\n\n        var self = this,\n            imgWidth = this.srcImage.naturalWidth,\n            imgHeight = this.srcImage.naturalHeight,\n            width = options.width,\n            height = options.height,\n            maxWidth = options.maxWidth,\n            maxHeight = options.maxHeight,\n            doSquash = !this.blob || this.blob.type === \"image/jpeg\",\n            tagName = target.tagName.toLowerCase(),\n            opt;\n\n        if (this.imageLoadListeners) {\n            this.imageLoadListeners.push(function() { self.render(target, options); });\n            return;\n        }\n\n        if (width && !height) {\n            height = (imgHeight * width / imgWidth) << 0;\n        } else if (height && !width) {\n            width = (imgWidth * height / imgHeight) << 0;\n        } else {\n            width = imgWidth;\n            height = imgHeight;\n        }\n        if (maxWidth && width > maxWidth) {\n            width = maxWidth;\n            height = (imgHeight * width / imgWidth) << 0;\n        }\n        if (maxHeight && height > maxHeight) {\n            height = maxHeight;\n            width = (imgWidth * height / imgHeight) << 0;\n        }\n\n        opt = { width: width, height: height },\n        qq.each(options, function(optionsKey, optionsValue) {\n            opt[optionsKey] = optionsValue;\n        });\n\n        if (tagName === \"img\") {\n            (function() {\n                var oldTargetSrc = target.src;\n                renderImageToDataURL(self.srcImage, self.blob, opt, doSquash)\n                    .then(function(dataUri) {\n                        target.src = dataUri;\n                        oldTargetSrc === target.src && target.onload();\n                    });\n            }());\n        } else if (tagName === \"canvas\") {\n            renderImageToCanvas(this.srcImage, this.blob, target, opt, doSquash);\n        }\n        if (typeof this.onrender === \"function\") {\n            this.onrender(target);\n        }\n    };\n\n    qq.MegaPixImage = MegaPixImage;\n})();\n","/*globals qq */\n/**\n * Draws a thumbnail of a Blob/File/URL onto an <img> or <canvas>.\n *\n * @constructor\n */\nqq.ImageGenerator = function(log) {\n    \"use strict\";\n\n    function isImg(el) {\n        return el.tagName.toLowerCase() === \"img\";\n    }\n\n    function isCanvas(el) {\n        return el.tagName.toLowerCase() === \"canvas\";\n    }\n\n    function isImgCorsSupported() {\n        return new Image().crossOrigin !== undefined;\n    }\n\n    function isCanvasSupported() {\n        var canvas = document.createElement(\"canvas\");\n\n        return canvas.getContext && canvas.getContext(\"2d\");\n    }\n\n    // This is only meant to determine the MIME type of a renderable image file.\n    // It is used to ensure images drawn from a URL that have transparent backgrounds\n    // are rendered correctly, among other things.\n    function determineMimeOfFileName(nameWithPath) {\n        /*jshint -W015 */\n        var pathSegments = nameWithPath.split(\"/\"),\n            name = pathSegments[pathSegments.length - 1].split(\"?\")[0],\n            extension = qq.getExtension(name);\n\n        extension = extension && extension.toLowerCase();\n\n        switch (extension) {\n            case \"jpeg\":\n            case \"jpg\":\n                return \"image/jpeg\";\n            case \"png\":\n                return \"image/png\";\n            case \"bmp\":\n                return \"image/bmp\";\n            case \"gif\":\n                return \"image/gif\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n        }\n    }\n\n    // This will likely not work correctly in IE8 and older.\n    // It's only used as part of a formula to determine\n    // if a canvas can be used to scale a server-hosted thumbnail.\n    // If canvas isn't supported by the UA (IE8 and older)\n    // this method should not even be called.\n    function isCrossOrigin(url) {\n        var targetAnchor = document.createElement(\"a\"),\n            targetProtocol, targetHostname, targetPort;\n\n        targetAnchor.href = url;\n\n        targetProtocol = targetAnchor.protocol;\n        targetPort = targetAnchor.port;\n        targetHostname = targetAnchor.hostname;\n\n        if (targetProtocol.toLowerCase() !== window.location.protocol.toLowerCase()) {\n            return true;\n        }\n\n        if (targetHostname.toLowerCase() !== window.location.hostname.toLowerCase()) {\n            return true;\n        }\n\n        // IE doesn't take ports into consideration when determining if two endpoints are same origin.\n        if (targetPort !== window.location.port && !qq.ie()) {\n            return true;\n        }\n\n        return false;\n    }\n\n    function registerImgLoadListeners(img, promise) {\n        img.onload = function() {\n            img.onload = null;\n            img.onerror = null;\n            promise.success(img);\n        };\n\n        img.onerror = function() {\n            img.onload = null;\n            img.onerror = null;\n            log(\"Problem drawing thumbnail!\", \"error\");\n            promise.failure(img, \"Problem drawing thumbnail!\");\n        };\n    }\n\n    function registerCanvasDrawImageListener(canvas, promise) {\n        // The image is drawn on the canvas by a third-party library,\n        // and we want to know when this is completed.  Since the library\n        // may invoke drawImage many times in a loop, we need to be called\n        // back when the image is fully rendered.  So, we are expecting the\n        // code that draws this image to follow a convention that involves a\n        // function attached to the canvas instance be invoked when it is done.\n        canvas.qqImageRendered = function() {\n            promise.success(canvas);\n        };\n    }\n\n    // Fulfills a `qq.Promise` when an image has been drawn onto the target,\n    // whether that is a <canvas> or an <img>.  The attempt is considered a\n    // failure if the target is not an <img> or a <canvas>, or if the drawing\n    // attempt was not successful.\n    function registerThumbnailRenderedListener(imgOrCanvas, promise) {\n        var registered = isImg(imgOrCanvas) || isCanvas(imgOrCanvas);\n\n        if (isImg(imgOrCanvas)) {\n            registerImgLoadListeners(imgOrCanvas, promise);\n        }\n        else if (isCanvas(imgOrCanvas)) {\n            registerCanvasDrawImageListener(imgOrCanvas, promise);\n        }\n        else {\n            promise.failure(imgOrCanvas);\n            log(qq.format(\"Element container of type {} is not supported!\", imgOrCanvas.tagName), \"error\");\n        }\n\n        return registered;\n    }\n\n    // Draw a preview iff the current UA can natively display it.\n    // Also rotate the image if necessary.\n    function draw(fileOrBlob, container, options) {\n        var drawPreview = new qq.Promise(),\n            identifier = new qq.Identify(fileOrBlob, log),\n            maxSize = options.maxSize,\n            // jshint eqnull:true\n            orient = options.orient == null ? true : options.orient,\n            megapixErrorHandler = function() {\n                container.onerror = null;\n                container.onload = null;\n                log(\"Could not render preview, file may be too large!\", \"error\");\n                drawPreview.failure(container, \"Browser cannot render image!\");\n            };\n\n        identifier.isPreviewable().then(\n            function(mime) {\n                // If options explicitly specify that Orientation is not desired,\n                // replace the orient task with a dummy promise that \"succeeds\" immediately.\n                var dummyExif = {\n                        parse: function() {\n                            return new qq.Promise().success();\n                        }\n                    },\n                    exif = orient ? new qq.Exif(fileOrBlob, log) : dummyExif,\n                    mpImg = new qq.MegaPixImage(fileOrBlob, megapixErrorHandler);\n\n                if (registerThumbnailRenderedListener(container, drawPreview)) {\n                    exif.parse().then(\n                        function(exif) {\n                            var orientation = exif && exif.Orientation;\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                orientation: orientation,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        },\n\n                        function(failureMsg) {\n                            log(qq.format(\"EXIF data could not be parsed ({}).  Assuming orientation = 1.\", failureMsg));\n\n                            mpImg.render(container, {\n                                maxWidth: maxSize,\n                                maxHeight: maxSize,\n                                mime: mime,\n                                resize: options.customResizeFunction\n                            });\n                        }\n                    );\n                }\n            },\n\n            function() {\n                log(\"Not previewable\");\n                drawPreview.failure(container, \"Not previewable\");\n            }\n        );\n\n        return drawPreview;\n    }\n\n    function drawOnCanvasOrImgFromUrl(url, canvasOrImg, draw, maxSize, customResizeFunction) {\n        var tempImg = new Image(),\n            tempImgRender = new qq.Promise();\n\n        registerThumbnailRenderedListener(tempImg, tempImgRender);\n\n        if (isCrossOrigin(url)) {\n            tempImg.crossOrigin = \"anonymous\";\n        }\n\n        tempImg.src = url;\n\n        tempImgRender.then(\n            function rendered() {\n                registerThumbnailRenderedListener(canvasOrImg, draw);\n\n                var mpImg = new qq.MegaPixImage(tempImg);\n                mpImg.render(canvasOrImg, {\n                    maxWidth: maxSize,\n                    maxHeight: maxSize,\n                    mime: determineMimeOfFileName(url),\n                    resize: customResizeFunction\n                });\n            },\n\n            draw.failure\n        );\n    }\n\n    function drawOnImgFromUrlWithCssScaling(url, img, draw, maxSize) {\n        registerThumbnailRenderedListener(img, draw);\n        // NOTE: The fact that maxWidth/height is set on the thumbnail for scaled images\n        // that must drop back to CSS is known and exploited by the templating module.\n        // In this module, we pre-render \"waiting\" thumbs for all files immediately after they\n        // are submitted, and we must be sure to pass any style associated with the \"waiting\" preview.\n        qq(img).css({\n            maxWidth: maxSize + \"px\",\n            maxHeight: maxSize + \"px\"\n        });\n\n        img.src = url;\n    }\n\n    // Draw a (server-hosted) thumbnail given a URL.\n    // This will optionally scale the thumbnail as well.\n    // It attempts to use <canvas> to scale, but will fall back\n    // to max-width and max-height style properties if the UA\n    // doesn't support canvas or if the images is cross-domain and\n    // the UA doesn't support the crossorigin attribute on img tags,\n    // which is required to scale a cross-origin image using <canvas> &\n    // then export it back to an <img>.\n    function drawFromUrl(url, container, options) {\n        var draw = new qq.Promise(),\n            scale = options.scale,\n            maxSize = scale ? options.maxSize : null;\n\n        // container is an img, scaling needed\n        if (scale && isImg(container)) {\n            // Iff canvas is available in this UA, try to use it for scaling.\n            // Otherwise, fall back to CSS scaling\n            if (isCanvasSupported()) {\n                // Attempt to use <canvas> for image scaling,\n                // but we must fall back to scaling via CSS/styles\n                // if this is a cross-origin image and the UA doesn't support <img> CORS.\n                if (isCrossOrigin(url) && !isImgCorsSupported()) {\n                    drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n                }\n                else {\n                    drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n                }\n            }\n            else {\n                drawOnImgFromUrlWithCssScaling(url, container, draw, maxSize);\n            }\n        }\n        // container is a canvas, scaling optional\n        else if (isCanvas(container)) {\n            drawOnCanvasOrImgFromUrl(url, container, draw, maxSize);\n        }\n        // container is an img & no scaling: just set the src attr to the passed url\n        else if (registerThumbnailRenderedListener(container, draw)) {\n            container.src = url;\n        }\n\n        return draw;\n    }\n\n    qq.extend(this, {\n        /**\n         * Generate a thumbnail.  Depending on the arguments, this may either result in\n         * a client-side rendering of an image (if a `Blob` is supplied) or a server-generated\n         * image that may optionally be scaled client-side using <canvas> or CSS/styles (as a fallback).\n         *\n         * @param fileBlobOrUrl a `File`, `Blob`, or a URL pointing to the image\n         * @param container <img> or <canvas> to contain the preview\n         * @param options possible properties include `maxSize` (int), `orient` (bool - default true), resize` (bool - default true), and `customResizeFunction`.\n         * @returns qq.Promise fulfilled when the preview has been drawn, or the attempt has failed\n         */\n        generate: function(fileBlobOrUrl, container, options) {\n            if (qq.isString(fileBlobOrUrl)) {\n                log(\"Attempting to update thumbnail based on server response.\");\n                return drawFromUrl(fileBlobOrUrl, container, options || {});\n            }\n            else {\n                log(\"Attempting to draw client-side image preview.\");\n                return draw(fileBlobOrUrl, container, options || {});\n            }\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.isImg = isImg;\n    this._testing.isCanvas = isCanvas;\n    this._testing.isCrossOrigin = isCrossOrigin;\n    this._testing.determineMimeOfFileName = determineMimeOfFileName;\n    /*</testing>*/\n};\n","/*globals qq */\n/**\n * EXIF image data parser.  Currently only parses the Orientation tag value,\n * but this may be expanded to other tags in the future.\n *\n * @param fileOrBlob Attempt to parse EXIF data in this `Blob`\n * @constructor\n */\nqq.Exif = function(fileOrBlob, log) {\n    \"use strict\";\n\n    // Orientation is the only tag parsed here at this time.\n    var TAG_IDS = [274],\n        TAG_INFO = {\n            274: {\n                name: \"Orientation\",\n                bytes: 2\n            }\n        };\n\n    // Convert a little endian (hex string) to big endian (decimal).\n    function parseLittleEndian(hex) {\n        var result = 0,\n            pow = 0;\n\n        while (hex.length > 0) {\n            result += parseInt(hex.substring(0, 2), 16) * Math.pow(2, pow);\n            hex = hex.substring(2, hex.length);\n            pow += 8;\n        }\n\n        return result;\n    }\n\n    // Find the byte offset, of Application Segment 1 (EXIF).\n    // External callers need not supply any arguments.\n    function seekToApp1(offset, promise) {\n        var theOffset = offset,\n            thePromise = promise;\n        if (theOffset === undefined) {\n            theOffset = 2;\n            thePromise = new qq.Promise();\n        }\n\n        qq.readBlobToHex(fileOrBlob, theOffset, 4).then(function(hex) {\n            var match = /^ffe([0-9])/.exec(hex),\n                segmentLength;\n\n            if (match) {\n                if (match[1] !== \"1\") {\n                    segmentLength = parseInt(hex.slice(4, 8), 16);\n                    seekToApp1(theOffset + segmentLength + 2, thePromise);\n                }\n                else {\n                    thePromise.success(theOffset);\n                }\n            }\n            else {\n                thePromise.failure(\"No EXIF header to be found!\");\n            }\n        });\n\n        return thePromise;\n    }\n\n    // Find the byte offset of Application Segment 1 (EXIF) for valid JPEGs only.\n    function getApp1Offset() {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, 0, 6).then(function(hex) {\n            if (hex.indexOf(\"ffd8\") !== 0) {\n                promise.failure(\"Not a valid JPEG!\");\n            }\n            else {\n                seekToApp1().then(function(offset) {\n                    promise.success(offset);\n                },\n                function(error) {\n                    promise.failure(error);\n                });\n            }\n        });\n\n        return promise;\n    }\n\n    // Determine the byte ordering of the EXIF header.\n    function isLittleEndian(app1Start) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 10, 2).then(function(hex) {\n            promise.success(hex === \"4949\");\n        });\n\n        return promise;\n    }\n\n    // Determine the number of directory entries in the EXIF header.\n    function getDirEntryCount(app1Start, littleEndian) {\n        var promise = new qq.Promise();\n\n        qq.readBlobToHex(fileOrBlob, app1Start + 18, 2).then(function(hex) {\n            if (littleEndian) {\n                return promise.success(parseLittleEndian(hex));\n            }\n            else {\n                promise.success(parseInt(hex, 16));\n            }\n        });\n\n        return promise;\n    }\n\n    // Get the IFD portion of the EXIF header as a hex string.\n    function getIfd(app1Start, dirEntries) {\n        var offset = app1Start + 20,\n            bytes = dirEntries * 12;\n\n        return qq.readBlobToHex(fileOrBlob, offset, bytes);\n    }\n\n    // Obtain an array of all directory entries (as hex strings) in the EXIF header.\n    function getDirEntries(ifdHex) {\n        var entries = [],\n            offset = 0;\n\n        while (offset + 24 <= ifdHex.length) {\n            entries.push(ifdHex.slice(offset, offset + 24));\n            offset += 24;\n        }\n\n        return entries;\n    }\n\n    // Obtain values for all relevant tags and return them.\n    function getTagValues(littleEndian, dirEntries) {\n        var TAG_VAL_OFFSET = 16,\n            tagsToFind = qq.extend([], TAG_IDS),\n            vals = {};\n\n        qq.each(dirEntries, function(idx, entry) {\n            var idHex = entry.slice(0, 4),\n                id = littleEndian ? parseLittleEndian(idHex) : parseInt(idHex, 16),\n                tagsToFindIdx = tagsToFind.indexOf(id),\n                tagValHex, tagName, tagValLength;\n\n            if (tagsToFindIdx >= 0) {\n                tagName = TAG_INFO[id].name;\n                tagValLength = TAG_INFO[id].bytes;\n                tagValHex = entry.slice(TAG_VAL_OFFSET, TAG_VAL_OFFSET + (tagValLength * 2));\n                vals[tagName] = littleEndian ? parseLittleEndian(tagValHex) : parseInt(tagValHex, 16);\n\n                tagsToFind.splice(tagsToFindIdx, 1);\n            }\n\n            if (tagsToFind.length === 0) {\n                return false;\n            }\n        });\n\n        return vals;\n    }\n\n    qq.extend(this, {\n        /**\n         * Attempt to parse the EXIF header for the `Blob` associated with this instance.\n         *\n         * @returns {qq.Promise} To be fulfilled when the parsing is complete.\n         * If successful, the parsed EXIF header as an object will be included.\n         */\n        parse: function() {\n            var parser = new qq.Promise(),\n                onParseFailure = function(message) {\n                    log(qq.format(\"EXIF header parse failed: '{}' \", message));\n                    parser.failure(message);\n                };\n\n            getApp1Offset().then(function(app1Offset) {\n                log(qq.format(\"Moving forward with EXIF header parsing for '{}'\", fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name));\n\n                isLittleEndian(app1Offset).then(function(littleEndian) {\n\n                    log(qq.format(\"EXIF Byte order is {} endian\", littleEndian ? \"little\" : \"big\"));\n\n                    getDirEntryCount(app1Offset, littleEndian).then(function(dirEntryCount) {\n\n                        log(qq.format(\"Found {} APP1 directory entries\", dirEntryCount));\n\n                        getIfd(app1Offset, dirEntryCount).then(function(ifdHex) {\n                            var dirEntries = getDirEntries(ifdHex),\n                                tagValues = getTagValues(littleEndian, dirEntries);\n\n                            log(\"Successfully parsed some EXIF tags\");\n\n                            parser.success(tagValues);\n                        }, onParseFailure);\n                    }, onParseFailure);\n                }, onParseFailure);\n            }, onParseFailure);\n\n            return parser;\n        }\n    });\n\n    /*<testing>*/\n    this._testing = {};\n    this._testing.parseLittleEndian = parseLittleEndian;\n    /*</testing>*/\n};\n","/*globals qq */\nqq.Identify = function(fileOrBlob, log) {\n    \"use strict\";\n\n    function isIdentifiable(magicBytes, questionableBytes) {\n        var identifiable = false,\n            magicBytesEntries = [].concat(magicBytes);\n\n        qq.each(magicBytesEntries, function(idx, magicBytesArrayEntry) {\n            if (questionableBytes.indexOf(magicBytesArrayEntry) === 0) {\n                identifiable = true;\n                return false;\n            }\n        });\n\n        return identifiable;\n    }\n\n    qq.extend(this, {\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by reading magic\n         * bytes in the beginning of the file, so this is an asynchronous operation.  Before we attempt to read the\n         * file, we will examine the blob's type attribute to save CPU cycles.\n         *\n         * @returns {qq.Promise} Promise that is fulfilled when identification is complete.\n         * If successful, the MIME string is passed to the success handler.\n         */\n        isPreviewable: function() {\n            var self = this,\n                identifier = new qq.Promise(),\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            log(qq.format(\"Attempting to determine if {} can be rendered in this browser\", name));\n\n            log(\"First pass: check type attribute of blob object.\");\n\n            if (this.isPreviewableSync()) {\n                log(\"Second pass: check for magic bytes in file header.\");\n\n                qq.readBlobToHex(fileOrBlob, 0, 4).then(function(hex) {\n                    qq.each(self.PREVIEWABLE_MIME_TYPES, function(mime, bytes) {\n                        if (isIdentifiable(bytes, hex)) {\n                            // Safari is the only supported browser that can deal with TIFFs natively,\n                            // so, if this is a TIFF and the UA isn't Safari, declare this file \"non-previewable\".\n                            if (mime !== \"image/tiff\" || qq.supportedFeatures.tiffPreviews) {\n                                previewable = true;\n                                identifier.success(mime);\n                            }\n\n                            return false;\n                        }\n                    });\n\n                    log(qq.format(\"'{}' is {} able to be rendered in this browser\", name, previewable ? \"\" : \"NOT\"));\n\n                    if (!previewable) {\n                        identifier.failure();\n                    }\n                },\n                function() {\n                    log(\"Error reading file w/ name '\" + name + \"'.  Not able to be rendered in this browser.\");\n                    identifier.failure();\n                });\n            }\n            else {\n                identifier.failure();\n            }\n\n            return identifier;\n        },\n\n        /**\n         * Determines if a Blob can be displayed natively in the current browser.  This is done by checking the\n         * blob's type attribute.  This is a synchronous operation, useful for situations where an asynchronous operation\n         * would be challenging to support.  Note that the blob's type property is not as accurate as reading the\n         * file's magic bytes.\n         *\n         * @returns {Boolean} true if the blob can be rendered in the current browser\n         */\n        isPreviewableSync: function() {\n            var fileMime = fileOrBlob.type,\n                // Assumption: This will only ever be executed in browsers that support `Object.keys`.\n                isRecognizedImage = qq.indexOf(Object.keys(this.PREVIEWABLE_MIME_TYPES), fileMime) >= 0,\n                previewable = false,\n                name = fileOrBlob.name === undefined ? \"blob\" : fileOrBlob.name;\n\n            if (isRecognizedImage) {\n                if (fileMime === \"image/tiff\") {\n                    previewable = qq.supportedFeatures.tiffPreviews;\n                }\n                else {\n                    previewable = true;\n                }\n            }\n\n            !previewable && log(name + \" is not previewable in this browser per the blob's type attr\");\n\n            return previewable;\n        }\n    });\n};\n\nqq.Identify.prototype.PREVIEWABLE_MIME_TYPES = {\n    \"image/jpeg\": \"ffd8ff\",\n    \"image/gif\": \"474946\",\n    \"image/png\": \"89504e\",\n    \"image/bmp\": \"424d\",\n    \"image/tiff\": [\"49492a00\", \"4d4d002a\"]\n};\n","/*globals qq*/\n/**\n * Attempts to validate an image, wherever possible.\n *\n * @param blob File or Blob representing a user-selecting image.\n * @param log Uses this to post log messages to the console.\n * @constructor\n */\nqq.ImageValidation = function(blob, log) {\n    \"use strict\";\n\n    /**\n     * @param limits Object with possible image-related limits to enforce.\n     * @returns {boolean} true if at least one of the limits has a non-zero value\n     */\n    function hasNonZeroLimits(limits) {\n        var atLeastOne = false;\n\n        qq.each(limits, function(limit, value) {\n            if (value > 0) {\n                atLeastOne = true;\n                return false;\n            }\n        });\n\n        return atLeastOne;\n    }\n\n    /**\n     * @returns {qq.Promise} The promise is a failure if we can't obtain the width & height.\n     * Otherwise, `success` is called on the returned promise with an object containing\n     * `width` and `height` properties.\n     */\n    function getWidthHeight() {\n        var sizeDetermination = new qq.Promise();\n\n        new qq.Identify(blob, log).isPreviewable().then(function() {\n            var image = new Image(),\n                url = window.URL && window.URL.createObjectURL ? window.URL :\n                      window.webkitURL && window.webkitURL.createObjectURL ? window.webkitURL :\n                      null;\n\n            if (url) {\n                image.onerror = function() {\n                    log(\"Cannot determine dimensions for image.  May be too large.\", \"error\");\n                    sizeDetermination.failure();\n                };\n\n                image.onload = function() {\n                    sizeDetermination.success({\n                        width: this.width,\n                        height: this.height\n                    });\n                };\n\n                image.src = url.createObjectURL(blob);\n            }\n            else {\n                log(\"No createObjectURL function available to generate image URL!\", \"error\");\n                sizeDetermination.failure();\n            }\n        }, sizeDetermination.failure);\n\n        return sizeDetermination;\n    }\n\n    /**\n     *\n     * @param limits Object with possible image-related limits to enforce.\n     * @param dimensions Object containing `width` & `height` properties for the image to test.\n     * @returns {String || undefined} The name of the failing limit.  Undefined if no failing limits.\n     */\n    function getFailingLimit(limits, dimensions) {\n        var failingLimit;\n\n        qq.each(limits, function(limitName, limitValue) {\n            if (limitValue > 0) {\n                var limitMatcher = /(max|min)(Width|Height)/.exec(limitName),\n                    dimensionPropName = limitMatcher[2].charAt(0).toLowerCase() + limitMatcher[2].slice(1),\n                    actualValue = dimensions[dimensionPropName];\n\n                /*jshint -W015*/\n                switch (limitMatcher[1]) {\n                    case \"min\":\n                        if (actualValue < limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                    case \"max\":\n                        if (actualValue > limitValue) {\n                            failingLimit = limitName;\n                            return false;\n                        }\n                        break;\n                }\n            }\n        });\n\n        return failingLimit;\n    }\n\n    /**\n     * Validate the associated blob.\n     *\n     * @param limits\n     * @returns {qq.Promise} `success` is called on the promise is the image is valid or\n     * if the blob is not an image, or if the image is not verifiable.\n     * Otherwise, `failure` with the name of the failing limit.\n     */\n    this.validate = function(limits) {\n        var validationEffort = new qq.Promise();\n\n        log(\"Attempting to validate image.\");\n\n        if (hasNonZeroLimits(limits)) {\n            getWidthHeight().then(function(dimensions) {\n                var failingLimit = getFailingLimit(limits, dimensions);\n\n                if (failingLimit) {\n                    validationEffort.failure(failingLimit);\n                }\n                else {\n                    validationEffort.success();\n                }\n            }, validationEffort.success);\n        }\n        else {\n            validationEffort.success();\n        }\n\n        return validationEffort;\n    };\n};\n","/* globals qq */\n/**\n * Module used to control populating the initial list of files.\n *\n * @constructor\n */\nqq.Session = function(spec) {\n    \"use strict\";\n\n    var options = {\n        endpoint: null,\n        params: {},\n        customHeaders: {},\n        cors: {},\n        addFileRecord: function(sessionData) {},\n        log: function(message, level) {}\n    };\n\n    qq.extend(options, spec, true);\n\n    function isJsonResponseValid(response) {\n        if (qq.isArray(response)) {\n            return true;\n        }\n\n        options.log(\"Session response is not an array.\", \"error\");\n    }\n\n    function handleFileItems(fileItems, success, xhrOrXdr, promise) {\n        var someItemsIgnored = false;\n\n        success = success && isJsonResponseValid(fileItems);\n\n        if (success) {\n            qq.each(fileItems, function(idx, fileItem) {\n                /* jshint eqnull:true */\n                if (fileItem.uuid == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid UUID - ignoring.\", idx), \"error\");\n                }\n                else if (fileItem.name == null) {\n                    someItemsIgnored = true;\n                    options.log(qq.format(\"Session response item {} did not include a valid name - ignoring.\", idx), \"error\");\n                }\n                else {\n                    try {\n                        options.addFileRecord(fileItem);\n                        return true;\n                    }\n                    catch (err) {\n                        someItemsIgnored = true;\n                        options.log(err.message, \"error\");\n                    }\n                }\n\n                return false;\n            });\n        }\n\n        promise[success && !someItemsIgnored ? \"success\" : \"failure\"](fileItems, xhrOrXdr);\n    }\n\n    // Initiate a call to the server that will be used to populate the initial file list.\n    // Returns a `qq.Promise`.\n    this.refresh = function() {\n        /*jshint indent:false */\n        var refreshEffort = new qq.Promise(),\n            refreshCompleteCallback = function(response, success, xhrOrXdr) {\n                handleFileItems(response, success, xhrOrXdr, refreshEffort);\n            },\n            requesterOptions = qq.extend({}, options),\n            requester = new qq.SessionAjaxRequester(\n                qq.extend(requesterOptions, {onComplete: refreshCompleteCallback})\n            );\n\n        requester.queryServer();\n\n        return refreshEffort;\n    };\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Thin module used to send GET requests to the server, expecting information about session\n * data used to initialize an uploader instance.\n *\n * @param spec Various options used to influence the associated request.\n * @constructor\n */\nqq.SessionAjaxRequester = function(spec) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            endpoint: null,\n            customHeaders: {},\n            params: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            onComplete: function(response, success, xhrOrXdr) {},\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, spec);\n\n    function onComplete(id, xhrOrXdr, isError) {\n        var response = null;\n\n        /* jshint eqnull:true */\n        if (xhrOrXdr.responseText != null) {\n            try {\n                response = qq.parseJson(xhrOrXdr.responseText);\n            }\n            catch (err) {\n                options.log(\"Problem parsing session response: \" + err.message, \"error\");\n                isError = true;\n            }\n        }\n\n        options.onComplete(response, !isError, xhrOrXdr);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        validMethods: [\"GET\"],\n        method: \"GET\",\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: onComplete,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        queryServer: function() {\n            var params = qq.extend({}, options.params);\n\n            options.log(\"Session query request.\");\n\n            requester.initTransport(\"sessionRefresh\")\n                .withParams(params)\n                .withCacheBuster()\n                .send();\n        }\n    });\n};\n","/* globals qq, ExifRestorer */\n/**\n * Controls generation of scaled images based on a reference image encapsulated in a `File` or `Blob`.\n * Scaled images are generated and converted to blobs on-demand.\n * Multiple scaled images per reference image with varying sizes and other properties are supported.\n *\n * @param spec Information about the scaled images to generate.\n * @param log Logger instance\n * @constructor\n */\nqq.Scaler = function(spec, log) {\n    \"use strict\";\n\n    var self = this,\n        customResizeFunction = spec.customResizer,\n        includeOriginal = spec.sendOriginal,\n        orient = spec.orient,\n        defaultType = spec.defaultType,\n        defaultQuality = spec.defaultQuality / 100,\n        failedToScaleText = spec.failureText,\n        includeExif = spec.includeExif,\n        sizes = this._getSortedSizes(spec.sizes);\n\n    // Revealed API for instances of this module\n    qq.extend(this, {\n        // If no targeted sizes have been declared or if this browser doesn't support\n        // client-side image preview generation, there is no scaling to do.\n        enabled: qq.supportedFeatures.scaling && sizes.length > 0,\n\n        getFileRecords: function(originalFileUuid, originalFileName, originalBlobOrBlobData) {\n            var self = this,\n                records = [],\n                originalBlob = originalBlobOrBlobData.blob ? originalBlobOrBlobData.blob : originalBlobOrBlobData,\n                identifier = new qq.Identify(originalBlob, log);\n\n            // If the reference file cannot be rendered natively, we can't create scaled versions.\n            if (identifier.isPreviewableSync()) {\n                // Create records for each scaled version & add them to the records array, smallest first.\n                qq.each(sizes, function(idx, sizeRecord) {\n                    var outputType = self._determineOutputType({\n                        defaultType: defaultType,\n                        requestedType: sizeRecord.type,\n                        refType: originalBlob.type\n                    });\n\n                    records.push({\n                        uuid: qq.getUniqueId(),\n                        name: self._getName(originalFileName, {\n                            name: sizeRecord.name,\n                            type: outputType,\n                            refType: originalBlob.type\n                        }),\n                        blob: new qq.BlobProxy(originalBlob,\n                        qq.bind(self._generateScaledImage, self, {\n                            customResizeFunction: customResizeFunction,\n                            maxSize: sizeRecord.maxSize,\n                            orient: orient,\n                            type: outputType,\n                            quality: defaultQuality,\n                            failedText: failedToScaleText,\n                            includeExif: includeExif,\n                            log: log\n                        }))\n                    });\n                });\n\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: includeOriginal ? originalBlob : null\n                });\n            }\n            else {\n                records.push({\n                    uuid: originalFileUuid,\n                    name: originalFileName,\n                    size: originalBlob.size,\n                    blob: originalBlob\n                });\n            }\n\n            return records;\n        },\n\n        handleNewFile: function(file, name, uuid, size, fileList, batchId, uuidParamName, api) {\n            var self = this,\n                buttonId = file.qqButtonId || (file.blob && file.blob.qqButtonId),\n                scaledIds = [],\n                originalId = null,\n                addFileToHandler = api.addFileToHandler,\n                uploadData = api.uploadData,\n                paramsStore = api.paramsStore,\n                proxyGroupId = qq.getUniqueId();\n\n            qq.each(self.getFileRecords(uuid, name, file), function(idx, record) {\n                var blobSize = record.size,\n                    id;\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    blobSize = -1;\n                }\n\n                id = uploadData.addFile({\n                    uuid: record.uuid,\n                    name: record.name,\n                    size: blobSize,\n                    batchId: batchId,\n                    proxyGroupId: proxyGroupId\n                });\n\n                if (record.blob instanceof qq.BlobProxy) {\n                    scaledIds.push(id);\n                }\n                else {\n                    originalId = id;\n                }\n\n                if (record.blob) {\n                    addFileToHandler(id, record.blob);\n                    fileList.push({id: id, file: record.blob});\n                }\n                else {\n                    uploadData.setStatus(id, qq.status.REJECTED);\n                }\n            });\n\n            // If we are potentially uploading an original file and some scaled versions,\n            // ensure the scaled versions include reference's to the parent's UUID and size\n            // in their associated upload requests.\n            if (originalId !== null) {\n                qq.each(scaledIds, function(idx, scaledId) {\n                    var params = {\n                        qqparentuuid: uploadData.retrieve({id: originalId}).uuid,\n                        qqparentsize: uploadData.retrieve({id: originalId}).size\n                    };\n\n                    // Make sure the UUID for each scaled image is sent with the upload request,\n                    // to be consistent (since we may need to ensure it is sent for the original file as well).\n                    params[uuidParamName] = uploadData.retrieve({id: scaledId}).uuid;\n\n                    uploadData.setParentId(scaledId, originalId);\n                    paramsStore.addReadOnly(scaledId, params);\n                });\n\n                // If any scaled images are tied to this parent image, be SURE we send its UUID as an upload request\n                // parameter as well.\n                if (scaledIds.length) {\n                    (function() {\n                        var param = {};\n                        param[uuidParamName] = uploadData.retrieve({id: originalId}).uuid;\n                        paramsStore.addReadOnly(originalId, param);\n                    }());\n                }\n            }\n        }\n    });\n};\n\nqq.extend(qq.Scaler.prototype, {\n    scaleImage: function(id, specs, api) {\n        \"use strict\";\n\n        if (!qq.supportedFeatures.scaling) {\n            throw new qq.Error(\"Scaling is not supported in this browser!\");\n        }\n\n        var scalingEffort = new qq.Promise(),\n            log = api.log,\n            file = api.getFile(id),\n            uploadData = api.uploadData.retrieve({id: id}),\n            name = uploadData && uploadData.name,\n            uuid = uploadData && uploadData.uuid,\n            scalingOptions = {\n                customResizer: specs.customResizer,\n                sendOriginal: false,\n                orient: specs.orient,\n                defaultType: specs.type || null,\n                defaultQuality: specs.quality,\n                failedToScaleText: \"Unable to scale\",\n                sizes: [{name: \"\", maxSize: specs.maxSize}]\n            },\n            scaler = new qq.Scaler(scalingOptions, log);\n\n        if (!qq.Scaler || !qq.supportedFeatures.imagePreviews || !file) {\n            scalingEffort.failure();\n\n            log(\"Could not generate requested scaled image for \" + id + \".  \" +\n                \"Scaling is either not possible in this browser, or the file could not be located.\", \"error\");\n        }\n        else {\n            (qq.bind(function() {\n                // Assumption: There will never be more than one record\n                var record = scaler.getFileRecords(uuid, name, file)[0];\n\n                if (record && record.blob instanceof qq.BlobProxy) {\n                    record.blob.create().then(scalingEffort.success, scalingEffort.failure);\n                }\n                else {\n                    log(id + \" is not a scalable image!\", \"error\");\n                    scalingEffort.failure();\n                }\n            }, this)());\n        }\n\n        return scalingEffort;\n    },\n\n    // NOTE: We cannot reliably determine at this time if the UA supports a specific MIME type for the target format.\n    // image/jpeg and image/png are the only safe choices at this time.\n    _determineOutputType: function(spec) {\n        \"use strict\";\n\n        var requestedType = spec.requestedType,\n            defaultType = spec.defaultType,\n            referenceType = spec.refType;\n\n        // If a default type and requested type have not been specified, this should be a\n        // JPEG if the original type is a JPEG, otherwise, a PNG.\n        if (!defaultType && !requestedType) {\n            if (referenceType !== \"image/jpeg\") {\n                return \"image/png\";\n            }\n            return referenceType;\n        }\n\n        // A specified default type is used when a requested type is not specified.\n        if (!requestedType) {\n            return defaultType;\n        }\n\n        // If requested type is specified, use it, as long as this recognized type is supported by the current UA\n        if (qq.indexOf(Object.keys(qq.Identify.prototype.PREVIEWABLE_MIME_TYPES), requestedType) >= 0) {\n            if (requestedType === \"image/tiff\") {\n                return qq.supportedFeatures.tiffPreviews ? requestedType : defaultType;\n            }\n\n            return requestedType;\n        }\n\n        return defaultType;\n    },\n\n    // Get a file name for a generated scaled file record, based on the provided scaled image description\n    _getName: function(originalName, scaledVersionProperties) {\n        \"use strict\";\n\n        var startOfExt = originalName.lastIndexOf(\".\"),\n            versionType = scaledVersionProperties.type || \"image/png\",\n            referenceType = scaledVersionProperties.refType,\n            scaledName = \"\",\n            scaledExt = qq.getExtension(originalName),\n            nameAppendage = \"\";\n\n        if (scaledVersionProperties.name && scaledVersionProperties.name.trim().length) {\n            nameAppendage = \" (\" + scaledVersionProperties.name + \")\";\n        }\n\n        if (startOfExt >= 0) {\n            scaledName = originalName.substr(0, startOfExt);\n\n            if (referenceType !== versionType) {\n                scaledExt = versionType.split(\"/\")[1];\n            }\n\n            scaledName += nameAppendage + \".\" + scaledExt;\n        }\n        else {\n            scaledName = originalName + nameAppendage;\n        }\n\n        return scaledName;\n    },\n\n    // We want the smallest scaled file to be uploaded first\n    _getSortedSizes: function(sizes) {\n        \"use strict\";\n\n        sizes = qq.extend([], sizes);\n\n        return sizes.sort(function(a, b) {\n            if (a.maxSize > b.maxSize) {\n                return 1;\n            }\n            if (a.maxSize < b.maxSize) {\n                return -1;\n            }\n            return 0;\n        });\n    },\n\n    _generateScaledImage: function(spec, sourceFile) {\n        \"use strict\";\n\n        var self = this,\n            customResizeFunction = spec.customResizeFunction,\n            log = spec.log,\n            maxSize = spec.maxSize,\n            orient = spec.orient,\n            type = spec.type,\n            quality = spec.quality,\n            failedText = spec.failedText,\n            includeExif = spec.includeExif && sourceFile.type === \"image/jpeg\" && type === \"image/jpeg\",\n            scalingEffort = new qq.Promise(),\n            imageGenerator = new qq.ImageGenerator(log),\n            canvas = document.createElement(\"canvas\");\n\n        log(\"Attempting to generate scaled version for \" + sourceFile.name);\n\n        imageGenerator.generate(sourceFile, canvas, {maxSize: maxSize, orient: orient, customResizeFunction: customResizeFunction}).then(function() {\n            var scaledImageDataUri = canvas.toDataURL(type, quality),\n                signalSuccess = function() {\n                    log(\"Success generating scaled version for \" + sourceFile.name);\n                    var blob = qq.dataUriToBlob(scaledImageDataUri);\n                    scalingEffort.success(blob);\n                };\n\n            if (includeExif) {\n                self._insertExifHeader(sourceFile, scaledImageDataUri, log).then(function(scaledImageDataUriWithExif) {\n                    scaledImageDataUri = scaledImageDataUriWithExif;\n                    signalSuccess();\n                },\n                function() {\n                    log(\"Problem inserting EXIF header into scaled image.  Using scaled image w/out EXIF data.\", \"error\");\n                    signalSuccess();\n                });\n            }\n            else {\n                signalSuccess();\n            }\n        }, function() {\n            log(\"Failed attempt to generate scaled version for \" + sourceFile.name, \"error\");\n            scalingEffort.failure(failedText);\n        });\n\n        return scalingEffort;\n    },\n\n    // Attempt to insert the original image's EXIF header into a scaled version.\n    _insertExifHeader: function(originalImage, scaledImageDataUri, log) {\n        \"use strict\";\n\n        var reader = new FileReader(),\n            insertionEffort = new qq.Promise(),\n            originalImageDataUri = \"\";\n\n        reader.onload = function() {\n            originalImageDataUri = reader.result;\n            insertionEffort.success(qq.ExifRestorer.restore(originalImageDataUri, scaledImageDataUri));\n        };\n\n        reader.onerror = function() {\n            log(\"Problem reading \" + originalImage.name + \" during attempt to transfer EXIF data to scaled version.\", \"error\");\n            insertionEffort.failure();\n        };\n\n        reader.readAsDataURL(originalImage);\n\n        return insertionEffort;\n    },\n\n    _dataUriToBlob: function(dataUri) {\n        \"use strict\";\n\n        var byteString, mimeString, arrayBuffer, intArray;\n\n        // convert base64 to raw binary data held in a string\n        if (dataUri.split(\",\")[0].indexOf(\"base64\") >= 0) {\n            byteString = atob(dataUri.split(\",\")[1]);\n        }\n        else {\n            byteString = decodeURI(dataUri.split(\",\")[1]);\n        }\n\n        // extract the MIME\n        mimeString = dataUri.split(\",\")[0]\n            .split(\":\")[1]\n            .split(\";\")[0];\n\n        // write the bytes of the binary string to an ArrayBuffer\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        qq.each(byteString, function(idx, character) {\n            intArray[idx] = character.charCodeAt(0);\n        });\n\n        return this._createBlob(arrayBuffer, mimeString);\n    },\n\n    _createBlob: function(data, mime) {\n        \"use strict\";\n\n        var BlobBuilder = window.BlobBuilder ||\n                window.WebKitBlobBuilder ||\n                window.MozBlobBuilder ||\n                window.MSBlobBuilder,\n            blobBuilder = BlobBuilder && new BlobBuilder();\n\n        if (blobBuilder) {\n            blobBuilder.append(data);\n            return blobBuilder.getBlob(mime);\n        }\n        else {\n            return new Blob([data], {type: mime});\n        }\n    }\n});\n","//Based on MinifyJpeg\n//http://elicon.blog57.fc2.com/blog-entry-206.html\n\nqq.ExifRestorer = (function()\n{\n   \n\tvar ExifRestorer = {};\n\t \n    ExifRestorer.KEY_STR = \"ABCDEFGHIJKLMNOP\" +\n                         \"QRSTUVWXYZabcdef\" +\n                         \"ghijklmnopqrstuv\" +\n                         \"wxyz0123456789+/\" +\n                         \"=\";\n\n    ExifRestorer.encode64 = function(input)\n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0;\n\n        do {\n            chr1 = input[i++];\n            chr2 = input[i++];\n            chr3 = input[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n               enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n               enc4 = 64;\n            }\n\n            output = output +\n               this.KEY_STR.charAt(enc1) +\n               this.KEY_STR.charAt(enc2) +\n               this.KEY_STR.charAt(enc3) +\n               this.KEY_STR.charAt(enc4);\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n        } while (i < input.length);\n\n        return output;\n    };\n    \n    ExifRestorer.restore = function(origFileBase64, resizedFileBase64)\n    {\n        var expectedBase64Header = \"data:image/jpeg;base64,\";\n\n        if (!origFileBase64.match(expectedBase64Header))\n        {\n        \treturn resizedFileBase64;\n        }       \n        \n        var rawImage = this.decode64(origFileBase64.replace(expectedBase64Header, \"\"));\n        var segments = this.slice2Segments(rawImage);\n                \n        var image = this.exifManipulation(resizedFileBase64, segments);\n        \n        return expectedBase64Header + this.encode64(image);\n        \n    };\n\n\n    ExifRestorer.exifManipulation = function(resizedFileBase64, segments)\n    {\n            var exifArray = this.getExifArray(segments),\n                newImageArray = this.insertExif(resizedFileBase64, exifArray),\n                aBuffer = new Uint8Array(newImageArray);\n\n            return aBuffer;\n    };\n\n\n    ExifRestorer.getExifArray = function(segments)\n    {\n            var seg;\n            for (var x = 0; x < segments.length; x++)\n            {\n                seg = segments[x];\n                if (seg[0] == 255 & seg[1] == 225) //(ff e1)\n                {\n                    return seg;\n                }\n            }\n            return [];\n    };\n\n\n    ExifRestorer.insertExif = function(resizedFileBase64, exifArray)\n    {\n            var imageData = resizedFileBase64.replace(\"data:image/jpeg;base64,\", \"\"),\n                buf = this.decode64(imageData),\n                separatePoint = buf.indexOf(255,3),\n                mae = buf.slice(0, separatePoint),\n                ato = buf.slice(separatePoint),\n                array = mae;\n\n            array = array.concat(exifArray);\n            array = array.concat(ato);\n           return array;\n    };\n\n\n    \n    ExifRestorer.slice2Segments = function(rawImageArray)\n    {\n        var head = 0,\n            segments = [];\n\n        while (1)\n        {\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 218){break;}\n            if (rawImageArray[head] == 255 & rawImageArray[head + 1] == 216)\n            {\n                head += 2;\n            }\n            else\n            {\n                var length = rawImageArray[head + 2] * 256 + rawImageArray[head + 3],\n                    endPoint = head + length + 2,\n                    seg = rawImageArray.slice(head, endPoint);\n                segments.push(seg);\n                head = endPoint;\n            }\n            if (head > rawImageArray.length){break;}\n        }\n\n        return segments;\n    };\n\n\n    \n    ExifRestorer.decode64 = function(input) \n    {\n        var output = \"\",\n            chr1, chr2, chr3 = \"\",\n            enc1, enc2, enc3, enc4 = \"\",\n            i = 0,\n            buf = [];\n\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n        if (base64test.exec(input)) {\n            throw new Error(\"There were invalid base64 characters in the input text.  \" +\n                \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\");\n        }\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        do {\n            enc1 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc2 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc3 = this.KEY_STR.indexOf(input.charAt(i++));\n            enc4 = this.KEY_STR.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            buf.push(chr1);\n\n            if (enc3 != 64) {\n               buf.push(chr2);\n            }\n            if (enc4 != 64) {\n               buf.push(chr3);\n            }\n\n            chr1 = chr2 = chr3 = \"\";\n            enc1 = enc2 = enc3 = enc4 = \"\";\n\n        } while (i < input.length);\n\n        return buf;\n    };\n\n    \n    return ExifRestorer;\n})();\n","/* globals qq */\n/**\n * Keeps a running tally of total upload progress for a batch of files.\n *\n * @param callback Invoked when total progress changes, passing calculated total loaded & total size values.\n * @param getSize Function that returns the size of a file given its ID\n * @constructor\n */\nqq.TotalProgress = function(callback, getSize) {\n    \"use strict\";\n\n    var perFileProgress = {},\n        totalLoaded = 0,\n        totalSize = 0,\n\n        lastLoadedSent = -1,\n        lastTotalSent = -1,\n        callbackProxy = function(loaded, total) {\n            if (loaded !== lastLoadedSent || total !== lastTotalSent) {\n                callback(loaded, total);\n            }\n\n            lastLoadedSent = loaded;\n            lastTotalSent = total;\n        },\n\n        /**\n         * @param failed Array of file IDs that have failed\n         * @param retryable Array of file IDs that are retryable\n         * @returns true if none of the failed files are eligible for retry\n         */\n        noRetryableFiles = function(failed, retryable) {\n            var none = true;\n\n            qq.each(failed, function(idx, failedId) {\n                if (qq.indexOf(retryable, failedId) >= 0) {\n                    none = false;\n                    return false;\n                }\n            });\n\n            return none;\n        },\n\n        onCancel = function(id) {\n            updateTotalProgress(id, -1, -1);\n            delete perFileProgress[id];\n        },\n\n        onAllComplete = function(successful, failed, retryable) {\n            if (failed.length === 0 || noRetryableFiles(failed, retryable)) {\n                callbackProxy(totalSize, totalSize);\n                this.reset();\n            }\n        },\n\n        onNew = function(id) {\n            var size = getSize(id);\n\n            // We might not know the size yet, such as for blob proxies\n            if (size > 0) {\n                updateTotalProgress(id, 0, size);\n                perFileProgress[id] = {loaded: 0, total: size};\n            }\n        },\n\n        /**\n         * Invokes the callback with the current total progress of all files in the batch.  Called whenever it may\n         * be appropriate to re-calculate and disseminate this data.\n         *\n         * @param id ID of a file that has changed in some important way\n         * @param newLoaded New loaded value for this file.  -1 if this value should no longer be part of calculations\n         * @param newTotal New total size of the file.  -1 if this value should no longer be part of calculations\n         */\n        updateTotalProgress = function(id, newLoaded, newTotal) {\n            var oldLoaded = perFileProgress[id] ? perFileProgress[id].loaded : 0,\n                oldTotal = perFileProgress[id] ? perFileProgress[id].total : 0;\n\n            if (newLoaded === -1 && newTotal === -1) {\n                totalLoaded -= oldLoaded;\n                totalSize -= oldTotal;\n            }\n            else {\n                if (newLoaded) {\n                    totalLoaded += newLoaded - oldLoaded;\n                }\n                if (newTotal) {\n                    totalSize += newTotal - oldTotal;\n                }\n            }\n\n            callbackProxy(totalLoaded, totalSize);\n        };\n\n    qq.extend(this, {\n        // Called when a batch of files has completed uploading.\n        onAllComplete: onAllComplete,\n\n        // Called when the status of a file has changed.\n        onStatusChange: function(id, oldStatus, newStatus) {\n            if (newStatus === qq.status.CANCELED || newStatus === qq.status.REJECTED) {\n                onCancel(id);\n            }\n            else if (newStatus === qq.status.SUBMITTING) {\n                onNew(id);\n            }\n        },\n\n        // Called whenever the upload progress of an individual file has changed.\n        onIndividualProgress: function(id, loaded, total) {\n            updateTotalProgress(id, loaded, total);\n            perFileProgress[id] = {loaded: loaded, total: total};\n        },\n\n        // Called whenever the total size of a file has changed, such as when the size of a generated blob is known.\n        onNewSize: function(id) {\n            onNew(id);\n        },\n\n        reset: function() {\n            perFileProgress = {};\n            totalLoaded = 0;\n            totalSize = 0;\n        }\n    });\n};\n","/*globals qq*/\nqq.PasteSupport = function(o) {\n    \"use strict\";\n\n    var options, detachPasteHandler;\n\n    options = {\n        targetElement: null,\n        callbacks: {\n            log: function(message, level) {},\n            pasteReceived: function(blob) {}\n        }\n    };\n\n    function isImage(item) {\n        return item.type &&\n            item.type.indexOf(\"image/\") === 0;\n    }\n\n    function registerPasteHandler() {\n        detachPasteHandler = qq(options.targetElement).attach(\"paste\", function(event) {\n            var clipboardData = event.clipboardData;\n\n            if (clipboardData) {\n                qq.each(clipboardData.items, function(idx, item) {\n                    if (isImage(item)) {\n                        var blob = item.getAsFile();\n                        options.callbacks.pasteReceived(blob);\n                    }\n                });\n            }\n        });\n    }\n\n    function unregisterPasteHandler() {\n        if (detachPasteHandler) {\n            detachPasteHandler();\n        }\n    }\n\n    qq.extend(options, o);\n    registerPasteHandler();\n\n    qq.extend(this, {\n        reset: function() {\n            unregisterPasteHandler();\n        }\n    });\n};\n","/* globals qq */\n/**\n * Module that handles support for existing forms.\n *\n * @param options Options passed from the integrator-supplied options related to form support.\n * @param startUpload Callback to invoke when files \"stored\" should be uploaded.\n * @param log Proxy for the logger\n * @constructor\n */\nqq.FormSupport = function(options, startUpload, log) {\n    \"use strict\";\n    var self  = this,\n        interceptSubmit = options.interceptSubmit,\n        formEl = options.element,\n        autoUpload = options.autoUpload;\n\n    // Available on the public API associated with this module.\n    qq.extend(this, {\n        // To be used by the caller to determine if the endpoint will be determined by some processing\n        // that occurs in this module, such as if the form has an action attribute.\n        // Ignore if `attachToForm === false`.\n        newEndpoint: null,\n\n        // To be used by the caller to determine if auto uploading should be allowed.\n        // Ignore if `attachToForm === false`.\n        newAutoUpload: autoUpload,\n\n        // true if a form was detected and is being tracked by this module\n        attachedToForm: false,\n\n        // Returns an object with names and values for all valid form elements associated with the attached form.\n        getFormInputsAsObject: function() {\n            /* jshint eqnull:true */\n            if (formEl == null) {\n                return null;\n            }\n\n            return self._form2Obj(formEl);\n        }\n    });\n\n    // If the form contains an action attribute, this should be the new upload endpoint.\n    function determineNewEndpoint(formEl) {\n        if (formEl.getAttribute(\"action\")) {\n            self.newEndpoint = formEl.getAttribute(\"action\");\n        }\n    }\n\n    // Return true only if the form is valid, or if we cannot make this determination.\n    // If the form is invalid, ensure invalid field(s) are highlighted in the UI.\n    function validateForm(formEl, nativeSubmit) {\n        if (formEl.checkValidity && !formEl.checkValidity()) {\n            log(\"Form did not pass validation checks - will not upload.\", \"error\");\n            nativeSubmit();\n        }\n        else {\n            return true;\n        }\n    }\n\n    // Intercept form submit attempts, unless the integrator has told us not to do this.\n    function maybeUploadOnSubmit(formEl) {\n        var nativeSubmit = formEl.submit;\n\n        // Intercept and squelch submit events.\n        qq(formEl).attach(\"submit\", function(event) {\n            event = event || window.event;\n\n            if (event.preventDefault) {\n                event.preventDefault();\n            }\n            else {\n                event.returnValue = false;\n            }\n\n            validateForm(formEl, nativeSubmit) && startUpload();\n        });\n\n        // The form's `submit()` function may be called instead (i.e. via jQuery.submit()).\n        // Intercept that too.\n        formEl.submit = function() {\n            validateForm(formEl, nativeSubmit) && startUpload();\n        };\n    }\n\n    // If the element value passed from the uploader is a string, assume it is an element ID - select it.\n    // The rest of the code in this module depends on this being an HTMLElement.\n    function determineFormEl(formEl) {\n        if (formEl) {\n            if (qq.isString(formEl)) {\n                formEl = document.getElementById(formEl);\n            }\n\n            if (formEl) {\n                log(\"Attaching to form element.\");\n                determineNewEndpoint(formEl);\n                interceptSubmit && maybeUploadOnSubmit(formEl);\n            }\n        }\n\n        return formEl;\n    }\n\n    formEl = determineFormEl(formEl);\n    this.attachedToForm = !!formEl;\n};\n\nqq.extend(qq.FormSupport.prototype, {\n    // Converts all relevant form fields to key/value pairs.  This is meant to mimic the data a browser will\n    // construct from a given form when the form is submitted.\n    _form2Obj: function(form) {\n        \"use strict\";\n        var obj = {},\n            notIrrelevantType = function(type) {\n                var irrelevantTypes = [\n                    \"button\",\n                    \"image\",\n                    \"reset\",\n                    \"submit\"\n                ];\n\n                return qq.indexOf(irrelevantTypes, type.toLowerCase()) < 0;\n            },\n            radioOrCheckbox = function(type) {\n                return qq.indexOf([\"checkbox\", \"radio\"], type.toLowerCase()) >= 0;\n            },\n            ignoreValue = function(el) {\n                if (radioOrCheckbox(el.type) && !el.checked) {\n                    return true;\n                }\n\n                return el.disabled && el.type.toLowerCase() !== \"hidden\";\n            },\n            selectValue = function(select) {\n                var value = null;\n\n                qq.each(qq(select).children(), function(idx, child) {\n                    if (child.tagName.toLowerCase() === \"option\" && child.selected) {\n                        value = child.value;\n                        return false;\n                    }\n                });\n\n                return value;\n            };\n\n        qq.each(form.elements, function(idx, el) {\n            if ((qq.isInput(el, true) || el.tagName.toLowerCase() === \"textarea\") &&\n                notIrrelevantType(el.type) &&\n                !ignoreValue(el)) {\n\n                obj[el.name] = el.value;\n            }\n            else if (el.tagName.toLowerCase() === \"select\" && !ignoreValue(el)) {\n                var value = selectValue(el);\n\n                if (value !== null) {\n                    obj[el.name] = value;\n                }\n            }\n        });\n\n        return obj;\n    }\n});\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n/**\n * CryptoJS core components.\n */\nqq.CryptoJS = (function (Math, undefined) {\n    /**\n     * CryptoJS namespace.\n     */\n    var C = {};\n\n    /**\n     * Library namespace.\n     */\n    var C_lib = C.lib = {};\n\n    /**\n     * Base object for prototypal inheritance.\n     */\n    var Base = C_lib.Base = (function () {\n        function F() {}\n\n        return {\n            /**\n             * Creates a new object that inherits from this object.\n             *\n             * @param {Object} overrides Properties to copy into the new object.\n             *\n             * @return {Object} The new object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var MyType = CryptoJS.lib.Base.extend({\n             *         field: 'value',\n             *\n             *         method: function () {\n             *         }\n             *     });\n             */\n            extend: function (overrides) {\n                // Spawn\n                F.prototype = this;\n                var subtype = new F();\n\n                // Augment\n                if (overrides) {\n                    subtype.mixIn(overrides);\n                }\n\n                // Create default initializer\n                if (!subtype.hasOwnProperty('init')) {\n                    subtype.init = function () {\n                        subtype.$super.init.apply(this, arguments);\n                    };\n                }\n\n                // Initializer's prototype is the subtype object\n                subtype.init.prototype = subtype;\n\n                // Reference supertype\n                subtype.$super = this;\n\n                return subtype;\n            },\n\n            /**\n             * Extends this object and runs the init method.\n             * Arguments to create() will be passed to init().\n             *\n             * @return {Object} The new object.\n             *\n             * @static\n             *\n             * @example\n             *\n             *     var instance = MyType.create();\n             */\n            create: function () {\n                var instance = this.extend();\n                instance.init.apply(instance, arguments);\n\n                return instance;\n            },\n\n            /**\n             * Initializes a newly created object.\n             * Override this method to add some logic when your objects are created.\n             *\n             * @example\n             *\n             *     var MyType = CryptoJS.lib.Base.extend({\n             *         init: function () {\n             *             // ...\n             *         }\n             *     });\n             */\n            init: function () {\n            },\n\n            /**\n             * Copies properties into this object.\n             *\n             * @param {Object} properties The properties to mix in.\n             *\n             * @example\n             *\n             *     MyType.mixIn({\n             *         field: 'value'\n             *     });\n             */\n            mixIn: function (properties) {\n                for (var propertyName in properties) {\n                    if (properties.hasOwnProperty(propertyName)) {\n                        this[propertyName] = properties[propertyName];\n                    }\n                }\n\n                // IE won't copy toString using the loop above\n                if (properties.hasOwnProperty('toString')) {\n                    this.toString = properties.toString;\n                }\n            },\n\n            /**\n             * Creates a copy of this object.\n             *\n             * @return {Object} The clone.\n             *\n             * @example\n             *\n             *     var clone = instance.clone();\n             */\n            clone: function () {\n                return this.init.prototype.extend(this);\n            }\n        };\n    }());\n\n    /**\n     * An array of 32-bit words.\n     *\n     * @property {Array} words The array of 32-bit words.\n     * @property {number} sigBytes The number of significant bytes in this word array.\n     */\n    var WordArray = C_lib.WordArray = Base.extend({\n        /**\n         * Initializes a newly created word array.\n         *\n         * @param {Array} words (Optional) An array of 32-bit words.\n         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.lib.WordArray.create();\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n         */\n        init: function (words, sigBytes) {\n            words = this.words = words || [];\n\n            if (sigBytes != undefined) {\n                this.sigBytes = sigBytes;\n            } else {\n                this.sigBytes = words.length * 4;\n            }\n        },\n\n        /**\n         * Converts this word array to a string.\n         *\n         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n         *\n         * @return {string} The stringified word array.\n         *\n         * @example\n         *\n         *     var string = wordArray + '';\n         *     var string = wordArray.toString();\n         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n         */\n        toString: function (encoder) {\n            return (encoder || Hex).stringify(this);\n        },\n\n        /**\n         * Concatenates a word array to this word array.\n         *\n         * @param {WordArray} wordArray The word array to append.\n         *\n         * @return {WordArray} This word array.\n         *\n         * @example\n         *\n         *     wordArray1.concat(wordArray2);\n         */\n        concat: function (wordArray) {\n            // Shortcuts\n            var thisWords = this.words;\n            var thatWords = wordArray.words;\n            var thisSigBytes = this.sigBytes;\n            var thatSigBytes = wordArray.sigBytes;\n\n            // Clamp excess bits\n            this.clamp();\n\n            // Concat\n            if (thisSigBytes % 4) {\n                // Copy one byte at a time\n                for (var i = 0; i < thatSigBytes; i++) {\n                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n                }\n            } else if (thatWords.length > 0xffff) {\n                // Copy one word at a time\n                for (var i = 0; i < thatSigBytes; i += 4) {\n                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n                }\n            } else {\n                // Copy all words at once\n                thisWords.push.apply(thisWords, thatWords);\n            }\n            this.sigBytes += thatSigBytes;\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Removes insignificant bits.\n         *\n         * @example\n         *\n         *     wordArray.clamp();\n         */\n        clamp: function () {\n            // Shortcuts\n            var words = this.words;\n            var sigBytes = this.sigBytes;\n\n            // Clamp\n            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n            words.length = Math.ceil(sigBytes / 4);\n        },\n\n        /**\n         * Creates a copy of this word array.\n         *\n         * @return {WordArray} The clone.\n         *\n         * @example\n         *\n         *     var clone = wordArray.clone();\n         */\n        clone: function () {\n            var clone = Base.clone.call(this);\n            clone.words = this.words.slice(0);\n\n            return clone;\n        },\n\n        /**\n         * Creates a word array filled with random bytes.\n         *\n         * @param {number} nBytes The number of random bytes to generate.\n         *\n         * @return {WordArray} The random word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n         */\n        random: function (nBytes) {\n            var words = [];\n            for (var i = 0; i < nBytes; i += 4) {\n                words.push((Math.random() * 0x100000000) | 0);\n            }\n\n            return new WordArray.init(words, nBytes);\n        }\n    });\n\n    /**\n     * Encoder namespace.\n     */\n    var C_enc = C.enc = {};\n\n    /**\n     * Hex encoding strategy.\n     */\n    var Hex = C_enc.Hex = {\n        /**\n         * Converts a word array to a hex string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The hex string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n\n            // Convert\n            var hexChars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                hexChars.push((bite >>> 4).toString(16));\n                hexChars.push((bite & 0x0f).toString(16));\n            }\n\n            return hexChars.join('');\n        },\n\n        /**\n         * Converts a hex string to a word array.\n         *\n         * @param {string} hexStr The hex string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n         */\n        parse: function (hexStr) {\n            // Shortcut\n            var hexStrLength = hexStr.length;\n\n            // Convert\n            var words = [];\n            for (var i = 0; i < hexStrLength; i += 2) {\n                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n            }\n\n            return new WordArray.init(words, hexStrLength / 2);\n        }\n    };\n\n    /**\n     * Latin1 encoding strategy.\n     */\n    var Latin1 = C_enc.Latin1 = {\n        /**\n         * Converts a word array to a Latin1 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The Latin1 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n\n            // Convert\n            var latin1Chars = [];\n            for (var i = 0; i < sigBytes; i++) {\n                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n                latin1Chars.push(String.fromCharCode(bite));\n            }\n\n            return latin1Chars.join('');\n        },\n\n        /**\n         * Converts a Latin1 string to a word array.\n         *\n         * @param {string} latin1Str The Latin1 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n         */\n        parse: function (latin1Str) {\n            // Shortcut\n            var latin1StrLength = latin1Str.length;\n\n            // Convert\n            var words = [];\n            for (var i = 0; i < latin1StrLength; i++) {\n                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n            }\n\n            return new WordArray.init(words, latin1StrLength);\n        }\n    };\n\n    /**\n     * UTF-8 encoding strategy.\n     */\n    var Utf8 = C_enc.Utf8 = {\n        /**\n         * Converts a word array to a UTF-8 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The UTF-8 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            try {\n                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n            } catch (e) {\n                throw new Error('Malformed UTF-8 data');\n            }\n        },\n\n        /**\n         * Converts a UTF-8 string to a word array.\n         *\n         * @param {string} utf8Str The UTF-8 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n         */\n        parse: function (utf8Str) {\n            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n        }\n    };\n\n    /**\n     * Abstract buffered block algorithm template.\n     *\n     * The property blockSize must be implemented in a concrete subtype.\n     *\n     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n     */\n    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n        /**\n         * Resets this block algorithm's data buffer to its initial state.\n         *\n         * @example\n         *\n         *     bufferedBlockAlgorithm.reset();\n         */\n        reset: function () {\n            // Initial values\n            this._data = new WordArray.init();\n            this._nDataBytes = 0;\n        },\n\n        /**\n         * Adds new data to this block algorithm's buffer.\n         *\n         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n         *\n         * @example\n         *\n         *     bufferedBlockAlgorithm._append('data');\n         *     bufferedBlockAlgorithm._append(wordArray);\n         */\n        _append: function (data) {\n            // Convert string to WordArray, else assume WordArray already\n            if (typeof data == 'string') {\n                data = Utf8.parse(data);\n            }\n\n            // Append\n            this._data.concat(data);\n            this._nDataBytes += data.sigBytes;\n        },\n\n        /**\n         * Processes available data blocks.\n         *\n         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n         *\n         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n         *\n         * @return {WordArray} The processed data.\n         *\n         * @example\n         *\n         *     var processedData = bufferedBlockAlgorithm._process();\n         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n         */\n        _process: function (doFlush) {\n            // Shortcuts\n            var data = this._data;\n            var dataWords = data.words;\n            var dataSigBytes = data.sigBytes;\n            var blockSize = this.blockSize;\n            var blockSizeBytes = blockSize * 4;\n\n            // Count blocks ready\n            var nBlocksReady = dataSigBytes / blockSizeBytes;\n            if (doFlush) {\n                // Round up to include partial blocks\n                nBlocksReady = Math.ceil(nBlocksReady);\n            } else {\n                // Round down to include only full blocks,\n                // less the number of blocks that must remain in the buffer\n                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n            }\n\n            // Count words ready\n            var nWordsReady = nBlocksReady * blockSize;\n\n            // Count bytes ready\n            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n            // Process blocks\n            if (nWordsReady) {\n                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n                    // Perform concrete-algorithm logic\n                    this._doProcessBlock(dataWords, offset);\n                }\n\n                // Remove processed words\n                var processedWords = dataWords.splice(0, nWordsReady);\n                data.sigBytes -= nBytesReady;\n            }\n\n            // Return processed words\n            return new WordArray.init(processedWords, nBytesReady);\n        },\n\n        /**\n         * Creates a copy of this object.\n         *\n         * @return {Object} The clone.\n         *\n         * @example\n         *\n         *     var clone = bufferedBlockAlgorithm.clone();\n         */\n        clone: function () {\n            var clone = Base.clone.call(this);\n            clone._data = this._data.clone();\n\n            return clone;\n        },\n\n        _minBufferSize: 0\n    });\n\n    /**\n     * Abstract hasher template.\n     *\n     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n     */\n    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n        /**\n         * Configuration options.\n         */\n        cfg: Base.extend(),\n\n        /**\n         * Initializes a newly created hasher.\n         *\n         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n         *\n         * @example\n         *\n         *     var hasher = CryptoJS.algo.SHA256.create();\n         */\n        init: function (cfg) {\n            // Apply config defaults\n            this.cfg = this.cfg.extend(cfg);\n\n            // Set initial values\n            this.reset();\n        },\n\n        /**\n         * Resets this hasher to its initial state.\n         *\n         * @example\n         *\n         *     hasher.reset();\n         */\n        reset: function () {\n            // Reset data buffer\n            BufferedBlockAlgorithm.reset.call(this);\n\n            // Perform concrete-hasher logic\n            this._doReset();\n        },\n\n        /**\n         * Updates this hasher with a message.\n         *\n         * @param {WordArray|string} messageUpdate The message to append.\n         *\n         * @return {Hasher} This hasher.\n         *\n         * @example\n         *\n         *     hasher.update('message');\n         *     hasher.update(wordArray);\n         */\n        update: function (messageUpdate) {\n            // Append\n            this._append(messageUpdate);\n\n            // Update the hash\n            this._process();\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Finalizes the hash computation.\n         * Note that the finalize operation is effectively a destructive, read-once operation.\n         *\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n         *\n         * @return {WordArray} The hash.\n         *\n         * @example\n         *\n         *     var hash = hasher.finalize();\n         *     var hash = hasher.finalize('message');\n         *     var hash = hasher.finalize(wordArray);\n         */\n        finalize: function (messageUpdate) {\n            // Final message update\n            if (messageUpdate) {\n                this._append(messageUpdate);\n            }\n\n            // Perform concrete-hasher logic\n            var hash = this._doFinalize();\n\n            return hash;\n        },\n\n        blockSize: 512/32,\n\n        /**\n         * Creates a shortcut function to a hasher's object interface.\n         *\n         * @param {Hasher} hasher The hasher to create a helper for.\n         *\n         * @return {Function} The shortcut function.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n         */\n        _createHelper: function (hasher) {\n            return function (message, cfg) {\n                return new hasher.init(cfg).finalize(message);\n            };\n        },\n\n        /**\n         * Creates a shortcut function to the HMAC's object interface.\n         *\n         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n         *\n         * @return {Function} The shortcut function.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n         */\n        _createHmacHelper: function (hasher) {\n            return function (message, key) {\n                return new C_algo.HMAC.init(hasher, key).finalize(message);\n            };\n        }\n    });\n\n    /**\n     * Algorithm namespace.\n     */\n    var C_algo = C.algo = {};\n\n    return C;\n}(Math));\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var C_enc = C.enc;\n\n    /**\n     * Base64 encoding strategy.\n     */\n    var Base64 = C_enc.Base64 = {\n        /**\n         * Converts a word array to a Base64 string.\n         *\n         * @param {WordArray} wordArray The word array.\n         *\n         * @return {string} The Base64 string.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n         */\n        stringify: function (wordArray) {\n            // Shortcuts\n            var words = wordArray.words;\n            var sigBytes = wordArray.sigBytes;\n            var map = this._map;\n\n            // Clamp excess bits\n            wordArray.clamp();\n\n            // Convert\n            var base64Chars = [];\n            for (var i = 0; i < sigBytes; i += 3) {\n                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n                }\n            }\n\n            // Add padding\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                while (base64Chars.length % 4) {\n                    base64Chars.push(paddingChar);\n                }\n            }\n\n            return base64Chars.join('');\n        },\n\n        /**\n         * Converts a Base64 string to a word array.\n         *\n         * @param {string} base64Str The Base64 string.\n         *\n         * @return {WordArray} The word array.\n         *\n         * @static\n         *\n         * @example\n         *\n         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n         */\n        parse: function (base64Str) {\n            // Shortcuts\n            var base64StrLength = base64Str.length;\n            var map = this._map;\n\n            // Ignore padding\n            var paddingChar = map.charAt(64);\n            if (paddingChar) {\n                var paddingIndex = base64Str.indexOf(paddingChar);\n                if (paddingIndex != -1) {\n                    base64StrLength = paddingIndex;\n                }\n            }\n\n            // Convert\n            var words = [];\n            var nBytes = 0;\n            for (var i = 0; i < base64StrLength; i++) {\n                if (i % 4) {\n                    var bits1 = map.indexOf(base64Str.charAt(i - 1)) << ((i % 4) * 2);\n                    var bits2 = map.indexOf(base64Str.charAt(i)) >>> (6 - (i % 4) * 2);\n                    words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n                    nBytes++;\n                }\n            }\n\n            return WordArray.create(words, nBytes);\n        },\n\n        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n    };\n}());\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var Base = C_lib.Base;\n    var C_enc = C.enc;\n    var Utf8 = C_enc.Utf8;\n    var C_algo = C.algo;\n\n    /**\n     * HMAC algorithm.\n     */\n    var HMAC = C_algo.HMAC = Base.extend({\n        /**\n         * Initializes a newly created HMAC.\n         *\n         * @param {Hasher} hasher The hash algorithm to use.\n         * @param {WordArray|string} key The secret key.\n         *\n         * @example\n         *\n         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n         */\n        init: function (hasher, key) {\n            // Init hasher\n            hasher = this._hasher = new hasher.init();\n\n            // Convert string to WordArray, else assume WordArray already\n            if (typeof key == 'string') {\n                key = Utf8.parse(key);\n            }\n\n            // Shortcuts\n            var hasherBlockSize = hasher.blockSize;\n            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n            // Allow arbitrary length keys\n            if (key.sigBytes > hasherBlockSizeBytes) {\n                key = hasher.finalize(key);\n            }\n\n            // Clamp excess bits\n            key.clamp();\n\n            // Clone key for inner and outer pads\n            var oKey = this._oKey = key.clone();\n            var iKey = this._iKey = key.clone();\n\n            // Shortcuts\n            var oKeyWords = oKey.words;\n            var iKeyWords = iKey.words;\n\n            // XOR keys with pad constants\n            for (var i = 0; i < hasherBlockSize; i++) {\n                oKeyWords[i] ^= 0x5c5c5c5c;\n                iKeyWords[i] ^= 0x36363636;\n            }\n            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n            // Set initial values\n            this.reset();\n        },\n\n        /**\n         * Resets this HMAC to its initial state.\n         *\n         * @example\n         *\n         *     hmacHasher.reset();\n         */\n        reset: function () {\n            // Shortcut\n            var hasher = this._hasher;\n\n            // Reset\n            hasher.reset();\n            hasher.update(this._iKey);\n        },\n\n        /**\n         * Updates this HMAC with a message.\n         *\n         * @param {WordArray|string} messageUpdate The message to append.\n         *\n         * @return {HMAC} This HMAC instance.\n         *\n         * @example\n         *\n         *     hmacHasher.update('message');\n         *     hmacHasher.update(wordArray);\n         */\n        update: function (messageUpdate) {\n            this._hasher.update(messageUpdate);\n\n            // Chainable\n            return this;\n        },\n\n        /**\n         * Finalizes the HMAC computation.\n         * Note that the finalize operation is effectively a destructive, read-once operation.\n         *\n         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n         *\n         * @return {WordArray} The HMAC.\n         *\n         * @example\n         *\n         *     var hmac = hmacHasher.finalize();\n         *     var hmac = hmacHasher.finalize('message');\n         *     var hmac = hmacHasher.finalize(wordArray);\n         */\n        finalize: function (messageUpdate) {\n            // Shortcut\n            var hasher = this._hasher;\n\n            // Compute HMAC\n            var innerHash = hasher.finalize(messageUpdate);\n            hasher.reset();\n            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n            return hmac;\n        }\n    });\n}());\n","/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n(function () {\n    // Shortcuts\n    var C = qq.CryptoJS;\n    var C_lib = C.lib;\n    var WordArray = C_lib.WordArray;\n    var Hasher = C_lib.Hasher;\n    var C_algo = C.algo;\n\n    // Reusable object\n    var W = [];\n\n    /**\n     * SHA-1 hash algorithm.\n     */\n    var SHA1 = C_algo.SHA1 = Hasher.extend({\n        _doReset: function () {\n            this._hash = new WordArray.init([\n                0x67452301, 0xefcdab89,\n                0x98badcfe, 0x10325476,\n                0xc3d2e1f0\n            ]);\n        },\n\n        _doProcessBlock: function (M, offset) {\n            // Shortcut\n            var H = this._hash.words;\n\n            // Working variables\n            var a = H[0];\n            var b = H[1];\n            var c = H[2];\n            var d = H[3];\n            var e = H[4];\n\n            // Computation\n            for (var i = 0; i < 80; i++) {\n                if (i < 16) {\n                    W[i] = M[offset + i] | 0;\n                } else {\n                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n                    W[i] = (n << 1) | (n >>> 31);\n                }\n\n                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n                if (i < 20) {\n                    t += ((b & c) | (~b & d)) + 0x5a827999;\n                } else if (i < 40) {\n                    t += (b ^ c ^ d) + 0x6ed9eba1;\n                } else if (i < 60) {\n                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n                } else /* if (i < 80) */ {\n                    t += (b ^ c ^ d) - 0x359d3e2a;\n                }\n\n                e = d;\n                d = c;\n                c = (b << 30) | (b >>> 2);\n                b = a;\n                a = t;\n            }\n\n            // Intermediate hash value\n            H[0] = (H[0] + a) | 0;\n            H[1] = (H[1] + b) | 0;\n            H[2] = (H[2] + c) | 0;\n            H[3] = (H[3] + d) | 0;\n            H[4] = (H[4] + e) | 0;\n        },\n\n        _doFinalize: function () {\n            // Shortcuts\n            var data = this._data;\n            var dataWords = data.words;\n\n            var nBitsTotal = this._nDataBytes * 8;\n            var nBitsLeft = data.sigBytes * 8;\n\n            // Add padding\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n            data.sigBytes = dataWords.length * 4;\n\n            // Hash final blocks\n            this._process();\n\n            // Return final computed hash\n            return this._hash;\n        },\n\n        clone: function () {\n            var clone = Hasher.clone.call(this);\n            clone._hash = this._hash.clone();\n\n            return clone;\n        }\n    });\n\n    /**\n     * Shortcut function to the hasher's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     *\n     * @return {WordArray} The hash.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hash = CryptoJS.SHA1('message');\n     *     var hash = CryptoJS.SHA1(wordArray);\n     */\n    C.SHA1 = Hasher._createHelper(SHA1);\n\n    /**\n     * Shortcut function to the HMAC's object interface.\n     *\n     * @param {WordArray|string} message The message to hash.\n     * @param {WordArray|string} key The secret key.\n     *\n     * @return {WordArray} The HMAC.\n     *\n     * @static\n     *\n     * @example\n     *\n     *     var hmac = CryptoJS.HmacSHA1(message, key);\n     */\n    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n}());\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function (Math) {\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n    var Hasher = C_lib.Hasher;\r\n    var C_algo = C.algo;\r\n\r\n    // Initialization and round constants tables\r\n    var H = [];\r\n    var K = [];\r\n\r\n    // Compute constants\r\n    (function () {\r\n        function isPrime(n) {\r\n            var sqrtN = Math.sqrt(n);\r\n            for (var factor = 2; factor <= sqrtN; factor++) {\r\n                if (!(n % factor)) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        function getFractionalBits(n) {\r\n            return ((n - (n | 0)) * 0x100000000) | 0;\r\n        }\r\n\r\n        var n = 2;\r\n        var nPrime = 0;\r\n        while (nPrime < 64) {\r\n            if (isPrime(n)) {\r\n                if (nPrime < 8) {\r\n                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\r\n                }\r\n                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\r\n\r\n                nPrime++;\r\n            }\r\n\r\n            n++;\r\n        }\r\n    }());\r\n\r\n    // Reusable object\r\n    var W = [];\r\n\r\n    /**\r\n     * SHA-256 hash algorithm.\r\n     */\r\n    var SHA256 = C_algo.SHA256 = Hasher.extend({\r\n        _doReset: function () {\r\n            this._hash = new WordArray.init(H.slice(0));\r\n        },\r\n\r\n        _doProcessBlock: function (M, offset) {\r\n            // Shortcut\r\n            var H = this._hash.words;\r\n\r\n            // Working variables\r\n            var a = H[0];\r\n            var b = H[1];\r\n            var c = H[2];\r\n            var d = H[3];\r\n            var e = H[4];\r\n            var f = H[5];\r\n            var g = H[6];\r\n            var h = H[7];\r\n\r\n            // Computation\r\n            for (var i = 0; i < 64; i++) {\r\n                if (i < 16) {\r\n                    W[i] = M[offset + i] | 0;\r\n                } else {\r\n                    var gamma0x = W[i - 15];\r\n                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\r\n                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\r\n                                   (gamma0x >>> 3);\r\n\r\n                    var gamma1x = W[i - 2];\r\n                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\r\n                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\r\n                                   (gamma1x >>> 10);\r\n\r\n                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\r\n                }\r\n\r\n                var ch  = (e & f) ^ (~e & g);\r\n                var maj = (a & b) ^ (a & c) ^ (b & c);\r\n\r\n                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\r\n                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\r\n\r\n                var t1 = h + sigma1 + ch + K[i] + W[i];\r\n                var t2 = sigma0 + maj;\r\n\r\n                h = g;\r\n                g = f;\r\n                f = e;\r\n                e = (d + t1) | 0;\r\n                d = c;\r\n                c = b;\r\n                b = a;\r\n                a = (t1 + t2) | 0;\r\n            }\r\n\r\n            // Intermediate hash value\r\n            H[0] = (H[0] + a) | 0;\r\n            H[1] = (H[1] + b) | 0;\r\n            H[2] = (H[2] + c) | 0;\r\n            H[3] = (H[3] + d) | 0;\r\n            H[4] = (H[4] + e) | 0;\r\n            H[5] = (H[5] + f) | 0;\r\n            H[6] = (H[6] + g) | 0;\r\n            H[7] = (H[7] + h) | 0;\r\n        },\r\n\r\n        _doFinalize: function () {\r\n            // Shortcuts\r\n            var data = this._data;\r\n            var dataWords = data.words;\r\n\r\n            var nBitsTotal = this._nDataBytes * 8;\r\n            var nBitsLeft = data.sigBytes * 8;\r\n\r\n            // Add padding\r\n            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\r\n            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\r\n            data.sigBytes = dataWords.length * 4;\r\n\r\n            // Hash final blocks\r\n            this._process();\r\n\r\n            // Return final computed hash\r\n            return this._hash;\r\n        },\r\n\r\n        clone: function () {\r\n            var clone = Hasher.clone.call(this);\r\n            clone._hash = this._hash.clone();\r\n\r\n            return clone;\r\n        }\r\n    });\r\n\r\n    /**\r\n     * Shortcut function to the hasher's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     *\r\n     * @return {WordArray} The hash.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hash = CryptoJS.SHA256('message');\r\n     *     var hash = CryptoJS.SHA256(wordArray);\r\n     */\r\n    C.SHA256 = Hasher._createHelper(SHA256);\r\n\r\n    /**\r\n     * Shortcut function to the HMAC's object interface.\r\n     *\r\n     * @param {WordArray|string} message The message to hash.\r\n     * @param {WordArray|string} key The secret key.\r\n     *\r\n     * @return {WordArray} The HMAC.\r\n     *\r\n     * @static\r\n     *\r\n     * @example\r\n     *\r\n     *     var hmac = CryptoJS.HmacSHA256(message, key);\r\n     */\r\n    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\r\n}(Math));\r\n","/*\r\nCryptoJS v3.1.2\r\ncode.google.com/p/crypto-js\r\n(c) 2009-2013 by Jeff Mott. All rights reserved.\r\ncode.google.com/p/crypto-js/wiki/License\r\n*/\r\n(function () {\r\n    // Check if typed arrays are supported\r\n    if (typeof ArrayBuffer != 'function') {\r\n        return;\r\n    }\r\n\r\n    // Shortcuts\r\n    var C = qq.CryptoJS;\r\n    var C_lib = C.lib;\r\n    var WordArray = C_lib.WordArray;\r\n\r\n    // Reference original init\r\n    var superInit = WordArray.init;\r\n\r\n    // Augment WordArray.init to handle typed arrays\r\n    var subInit = WordArray.init = function (typedArray) {\r\n        // Convert buffers to uint8\r\n        if (typedArray instanceof ArrayBuffer) {\r\n            typedArray = new Uint8Array(typedArray);\r\n        }\r\n\r\n        // Convert other array views to uint8\r\n        if (\r\n            typedArray instanceof Int8Array ||\r\n            typedArray instanceof Uint8ClampedArray ||\r\n            typedArray instanceof Int16Array ||\r\n            typedArray instanceof Uint16Array ||\r\n            typedArray instanceof Int32Array ||\r\n            typedArray instanceof Uint32Array ||\r\n            typedArray instanceof Float32Array ||\r\n            typedArray instanceof Float64Array\r\n        ) {\r\n            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\r\n        }\r\n\r\n        // Handle Uint8Array\r\n        if (typedArray instanceof Uint8Array) {\r\n            // Shortcut\r\n            var typedArrayByteLength = typedArray.byteLength;\r\n\r\n            // Extract bytes\r\n            var words = [];\r\n            for (var i = 0; i < typedArrayByteLength; i++) {\r\n                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\r\n            }\r\n\r\n            // Initialize this word array\r\n            superInit.call(this, words, typedArrayByteLength);\r\n        } else {\r\n            // Else call normal init\r\n            superInit.apply(this, arguments);\r\n        }\r\n    };\r\n\r\n    subInit.prototype = WordArray;\r\n}());\r\n","/*globals qq */\nqq.s3 = qq.s3 || {};\n\nqq.s3.util = qq.s3.util || (function() {\n    \"use strict\";\n\n    return {\n        ALGORITHM_PARAM_NAME: \"x-amz-algorithm\",\n\n        AWS_PARAM_PREFIX: \"x-amz-meta-\",\n\n        CREDENTIAL_PARAM_NAME: \"x-amz-credential\",\n\n        DATE_PARAM_NAME: \"x-amz-date\",\n\n        REDUCED_REDUNDANCY_PARAM_NAME: \"x-amz-storage-class\",\n        REDUCED_REDUNDANCY_PARAM_VALUE: \"REDUCED_REDUNDANCY\",\n\n        SERVER_SIDE_ENCRYPTION_PARAM_NAME: \"x-amz-server-side-encryption\",\n        SERVER_SIDE_ENCRYPTION_PARAM_VALUE: \"AES256\",\n\n        SESSION_TOKEN_PARAM_NAME: \"x-amz-security-token\",\n\n        V4_ALGORITHM_PARAM_VALUE: \"AWS4-HMAC-SHA256\",\n\n        V4_SIGNATURE_PARAM_NAME: \"x-amz-signature\",\n\n        CASE_SENSITIVE_PARAM_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\"\n        ],\n\n        UNSIGNABLE_REST_HEADER_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\"\n        ],\n\n        UNPREFIXED_PARAM_NAMES: [\n            \"Cache-Control\",\n            \"Content-Disposition\",\n            \"Content-Encoding\",\n            \"Content-MD5\",\n            \"x-amz-server-side-encryption-customer-algorithm\",\n            \"x-amz-server-side-encryption-customer-key\",\n            \"x-amz-server-side-encryption-customer-key-MD5\"\n        ],\n\n        /**\n         * This allows for the region to be specified in the bucket's endpoint URL, or not.\n         *\n         * Examples of some valid endpoints are:\n         *     http://foo.s3.amazonaws.com\n         *     https://foo.s3.amazonaws.com\n         *     http://foo.s3-ap-northeast-1.amazonaws.com\n         *     foo.s3.amazonaws.com\n         *     http://foo.bar.com\n         *     http://s3.amazonaws.com/foo.bar.com\n         * ...etc\n         *\n         * @param endpoint The bucket's URL.\n         * @returns {String || undefined} The bucket name, or undefined if the URL cannot be parsed.\n         */\n        getBucket: function(endpoint) {\n            var patterns = [\n                    //bucket in domain\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)\\.s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com/i,\n                    //bucket in path\n                    /^(?:https?:\\/\\/)?s3(?:-[a-z0-9\\-]+)?\\.amazonaws\\.com\\/([a-z0-9.\\-_]+)/i,\n                    //custom domain\n                    /^(?:https?:\\/\\/)?([a-z0-9.\\-_]+)/i\n                ],\n                bucket;\n\n            qq.each(patterns, function(idx, pattern) {\n                var match = pattern.exec(endpoint);\n\n                if (match) {\n                    bucket = match[1];\n                    return false;\n                }\n            });\n\n            return bucket;\n        },\n\n        /** Create Prefixed request headers which are appropriate for S3.\n         *\n         * If the request header is appropriate for S3 (e.g. Cache-Control) then pass\n         * it along without a metadata prefix. For all other request header parameter names,\n         * apply qq.s3.util.AWS_PARAM_PREFIX before the name.\n         * See: http://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectPUT.html\n         */\n        _getPrefixedParamName: function(name) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                return name;\n            }\n            return qq.s3.util.AWS_PARAM_PREFIX + name;\n        },\n\n        /**\n         * Create a policy document to be signed and sent along with the S3 upload request.\n         *\n         * @param spec Object with properties use to construct the policy document.\n         * @returns {Object} Policy doc.\n         */\n        getPolicy: function(spec) {\n            var policy = {},\n                conditions = [],\n                bucket = spec.bucket,\n                date = spec.date,\n                drift = spec.clockDrift,\n                key = spec.key,\n                accessKey = spec.accessKey,\n                acl = spec.acl,\n                type = spec.type,\n                expectedStatus = spec.expectedStatus,\n                sessionToken = spec.sessionToken,\n                params = spec.params,\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\n                minFileSize = spec.minFileSize,\n                maxFileSize = spec.maxFileSize,\n                reducedRedundancy = spec.reducedRedundancy,\n                region = spec.region,\n                serverSideEncryption = spec.serverSideEncryption,\n                signatureVersion = spec.signatureVersion;\n\n            policy.expiration = qq.s3.util.getPolicyExpirationDate(date, drift);\n\n            conditions.push({acl: acl});\n            conditions.push({bucket: bucket});\n\n            if (type) {\n                conditions.push({\"Content-Type\": type});\n            }\n\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n            if (expectedStatus) {\n                conditions.push({success_action_status: expectedStatus.toString()});\n            }\n\n            if (successRedirectUrl) {\n                conditions.push({success_action_redirect: successRedirectUrl});\n            }\n            // jscs:enable\n            if (reducedRedundancy) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n            }\n\n            if (sessionToken) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n            }\n\n            if (serverSideEncryption) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n            }\n\n            if (signatureVersion === 2) {\n                conditions.push({key: key});\n            }\n            else if (signatureVersion === 4) {\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\n\n                conditions.push({});\n                conditions[conditions.length - 1].key = key;\n\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.CREDENTIAL_PARAM_NAME] =\n                    qq.s3.util.getV4CredentialsString({date: date, key: accessKey, region: region});\n\n                conditions.push({});\n                conditions[conditions.length - 1][qq.s3.util.DATE_PARAM_NAME] =\n                    qq.s3.util.getV4PolicyDate(date, drift);\n            }\n\n            // user metadata\n            qq.each(params, function(name, val) {\n                var awsParamName = qq.s3.util._getPrefixedParamName(name),\n                    param = {};\n\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\n                    param[awsParamName] = val;\n                }\n                else {\n                    param[awsParamName] = encodeURIComponent(val);\n                }\n\n                conditions.push(param);\n            });\n\n            policy.conditions = conditions;\n\n            qq.s3.util.enforceSizeLimits(policy, minFileSize, maxFileSize);\n\n            return policy;\n        },\n\n        /**\n         * Update a previously constructed policy document with updated credentials.  Currently, this only requires we\n         * update the session token.  This is only relevant if requests are being signed client-side.\n         *\n         * @param policy Live policy document\n         * @param newSessionToken Updated session token.\n         */\n        refreshPolicyCredentials: function(policy, newSessionToken) {\n            var sessionTokenFound = false;\n\n            qq.each(policy.conditions, function(oldCondIdx, oldCondObj) {\n                qq.each(oldCondObj, function(oldCondName, oldCondVal) {\n                    if (oldCondName === qq.s3.util.SESSION_TOKEN_PARAM_NAME) {\n                        oldCondObj[oldCondName] = newSessionToken;\n                        sessionTokenFound = true;\n                    }\n                });\n            });\n\n            if (!sessionTokenFound) {\n                policy.conditions.push({});\n                policy.conditions[policy.conditions.length - 1][qq.s3.util.SESSION_TOKEN_PARAM_NAME] = newSessionToken;\n            }\n        },\n\n        /**\n         * Generates all parameters to be passed along with the S3 upload request.  This includes invoking a callback\n         * that is expected to asynchronously retrieve a signature for the policy document.  Note that the server\n         * signing the request should reject a \"tainted\" policy document that includes unexpected values, since it is\n         * still possible for a malicious user to tamper with these values during policy document generation,\n         * before it is sent to the server for signing.\n         *\n         * @param spec Object with properties: `params`, `type`, `key`, `accessKey`, `acl`, `expectedStatus`, `successRedirectUrl`,\n         * `reducedRedundancy`, `region`, `serverSideEncryption`, `version`, and `log()`, along with any options associated with `qq.s3.util.getPolicy()`.\n         * @returns {qq.Promise} Promise that will be fulfilled once all parameters have been determined.\n         */\n        generateAwsParams: function(spec, signPolicyCallback) {\n            var awsParams = {},\n                customParams = spec.params,\n                promise = new qq.Promise(),\n                sessionToken = spec.sessionToken,\n                drift = spec.clockDrift,\n                type = spec.type,\n                key = spec.key,\n                accessKey = spec.accessKey,\n                acl = spec.acl,\n                expectedStatus = spec.expectedStatus,\n                successRedirectUrl = qq.s3.util.getSuccessRedirectAbsoluteUrl(spec.successRedirectUrl),\n                reducedRedundancy = spec.reducedRedundancy,\n                region = spec.region,\n                serverSideEncryption = spec.serverSideEncryption,\n                signatureVersion = spec.signatureVersion,\n                now = new Date(),\n                log = spec.log,\n                policyJson;\n\n            spec.date = now;\n            policyJson = qq.s3.util.getPolicy(spec);\n\n            awsParams.key = key;\n\n            if (type) {\n                awsParams[\"Content-Type\"] = type;\n            }\n            // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n            if (expectedStatus) {\n                awsParams.success_action_status = expectedStatus;\n            }\n\n            if (successRedirectUrl) {\n                awsParams.success_action_redirect = successRedirectUrl;\n            }\n            // jscs:enable\n            if (reducedRedundancy) {\n                awsParams[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n            }\n\n            if (serverSideEncryption) {\n                awsParams[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n            }\n\n            if (sessionToken) {\n                awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n            }\n\n            awsParams.acl = acl;\n\n            // Custom (user-supplied) params must be prefixed with the value of `qq.s3.util.AWS_PARAM_PREFIX`.\n            // Params such as Cache-Control or Content-Disposition will not be prefixed.\n            // Prefixed param values will be URI encoded as well.\n            qq.each(customParams, function(name, val) {\n                var awsParamName = qq.s3.util._getPrefixedParamName(name);\n\n                if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, awsParamName) >= 0) {\n                    awsParams[awsParamName] = val;\n                }\n                else {\n                    awsParams[awsParamName] = encodeURIComponent(val);\n                }\n            });\n\n            if (signatureVersion === 2) {\n                awsParams.AWSAccessKeyId = accessKey;\n            }\n            else if (signatureVersion === 4) {\n                awsParams[qq.s3.util.ALGORITHM_PARAM_NAME] = qq.s3.util.V4_ALGORITHM_PARAM_VALUE;\n                awsParams[qq.s3.util.CREDENTIAL_PARAM_NAME] = qq.s3.util.getV4CredentialsString({date: now, key: accessKey, region: region});\n                awsParams[qq.s3.util.DATE_PARAM_NAME] = qq.s3.util.getV4PolicyDate(now, drift);\n            }\n\n            // Invoke a promissory callback that should provide us with a base64-encoded policy doc and an\n            // HMAC signature for the policy doc.\n            signPolicyCallback(policyJson).then(\n                function(policyAndSignature, updatedAccessKey, updatedSessionToken) {\n                    awsParams.policy = policyAndSignature.policy;\n\n                    if (spec.signatureVersion === 2) {\n                        awsParams.signature = policyAndSignature.signature;\n\n                        if (updatedAccessKey) {\n                            awsParams.AWSAccessKeyId = updatedAccessKey;\n                        }\n                    }\n                    else if (spec.signatureVersion === 4) {\n                        awsParams[qq.s3.util.V4_SIGNATURE_PARAM_NAME] = policyAndSignature.signature;\n                    }\n\n                    if (updatedSessionToken) {\n                        awsParams[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                    }\n\n                    promise.success(awsParams);\n                },\n                function(errorMessage) {\n                    errorMessage = errorMessage || \"Can't continue further with request to S3 as we did not receive \" +\n                                                   \"a valid signature and policy from the server.\";\n\n                    log(\"Policy signing failed.  \" + errorMessage, \"error\");\n                    promise.failure(errorMessage);\n                }\n            );\n\n            return promise;\n        },\n\n        /**\n         * Add a condition to an existing S3 upload request policy document used to ensure AWS enforces any size\n         * restrictions placed on files server-side.  This is important to do, in case users mess with the client-side\n         * checks already in place.\n         *\n         * @param policy Policy document as an `Object`, with a `conditions` property already attached\n         * @param minSize Minimum acceptable size, in bytes\n         * @param maxSize Maximum acceptable size, in bytes (0 = unlimited)\n         */\n        enforceSizeLimits: function(policy, minSize, maxSize) {\n            var adjustedMinSize = minSize < 0 ? 0 : minSize,\n                // Adjust a maxSize of 0 to the largest possible integer, since we must specify a high and a low in the request\n                adjustedMaxSize = maxSize <= 0 ? 9007199254740992 : maxSize;\n\n            if (minSize > 0 || maxSize > 0) {\n                policy.conditions.push([\"content-length-range\", adjustedMinSize.toString(), adjustedMaxSize.toString()]);\n            }\n        },\n\n        getPolicyExpirationDate: function(date, drift) {\n            var adjustedDate = new Date(date.getTime() + drift);\n            return qq.s3.util.getPolicyDate(adjustedDate, 5);\n        },\n\n        getCredentialsDate: function(date) {\n            return date.getUTCFullYear() + \"\" +\n                (\"0\" + (date.getUTCMonth() + 1)).slice(-2) +\n                (\"0\" + date.getUTCDate()).slice(-2);\n        },\n\n        getPolicyDate: function(date, _minutesToAdd_) {\n            var minutesToAdd = _minutesToAdd_ || 0,\n                pad, r;\n\n            /*jshint -W014 */\n            // Is this going to be a problem if we encounter this moments before 2 AM just before daylight savings time ends?\n            date.setMinutes(date.getMinutes() + (minutesToAdd || 0));\n\n            if (Date.prototype.toISOString) {\n                return date.toISOString();\n            }\n            else {\n                pad = function(number) {\n                    r = String(number);\n\n                    if (r.length === 1) {\n                        r = \"0\" + r;\n                    }\n\n                    return r;\n                };\n\n                return date.getUTCFullYear()\n                    + \"-\" + pad(date.getUTCMonth() + 1)\n                    + \"-\" + pad(date.getUTCDate())\n                    + \"T\" + pad(date.getUTCHours())\n                    + \":\" + pad(date.getUTCMinutes())\n                    + \":\" + pad(date.getUTCSeconds())\n                    + \".\" + String((date.getUTCMilliseconds() / 1000).toFixed(3)).slice(2, 5)\n                    + \"Z\";\n            }\n        },\n\n        /**\n         * Looks at a response from S3 contained in an iframe and parses the query string in an attempt to identify\n         * the associated resource.\n         *\n         * @param iframe Iframe containing response\n         * @returns {{bucket: *, key: *, etag: *}}\n         */\n        parseIframeResponse: function(iframe) {\n            var doc = iframe.contentDocument || iframe.contentWindow.document,\n                queryString = doc.location.search,\n                match = /bucket=(.+)&key=(.+)&etag=(.+)/.exec(queryString);\n\n            if (match) {\n                return {\n                    bucket: match[1],\n                    key: match[2],\n                    etag: match[3].replace(/%22/g, \"\")\n                };\n            }\n        },\n\n        /**\n         * @param successRedirectUrl Relative or absolute location of success redirect page\n         * @returns {*|string} undefined if the parameter is undefined, otherwise the absolute location of the success redirect page\n         */\n        getSuccessRedirectAbsoluteUrl: function(successRedirectUrl) {\n            if (successRedirectUrl) {\n                var targetAnchorContainer = document.createElement(\"div\"),\n                    targetAnchor;\n\n                if (qq.ie7()) {\n                    // Note that we must make use of `innerHTML` for IE7 only instead of simply creating an anchor via\n                    // `document.createElement('a')` and setting the `href` attribute.  The latter approach does not allow us to\n                    // obtain an absolute URL in IE7 if the `endpoint` is a relative URL.\n                    targetAnchorContainer.innerHTML = \"<a href='\" + successRedirectUrl + \"'></a>\";\n                    targetAnchor = targetAnchorContainer.firstChild;\n                    return targetAnchor.href;\n                }\n                else {\n                    // IE8 and IE9 do not seem to derive an absolute URL from a relative URL using the `innerHTML`\n                    // approach above, so we'll just create an anchor this way and set it's `href` attribute.\n                    // Due to yet another quirk in IE8 and IE9, we have to set the `href` equal to itself\n                    // in order to ensure relative URLs will be properly parsed.\n                    targetAnchor = document.createElement(\"a\");\n                    targetAnchor.href = successRedirectUrl;\n                    targetAnchor.href = targetAnchor.href;\n                    return targetAnchor.href;\n                }\n            }\n        },\n\n        getV4CredentialsString: function(spec) {\n            return spec.key + \"/\" +\n                qq.s3.util.getCredentialsDate(spec.date) + \"/\" +\n                spec.region + \"/s3/aws4_request\";\n        },\n\n        getV4PolicyDate: function(date, drift) {\n            var adjustedDate = new Date(date.getTime() + drift);\n\n            return qq.s3.util.getCredentialsDate(adjustedDate) + \"T\" +\n                    (\"0\" + adjustedDate.getUTCHours()).slice(-2) +\n                    (\"0\" + adjustedDate.getUTCMinutes()).slice(-2) +\n                    (\"0\" + adjustedDate.getUTCSeconds()).slice(-2) +\n                    \"Z\";\n        },\n\n        // AWS employs a strict interpretation of [RFC 3986](http://tools.ietf.org/html/rfc3986#page-12).\n        // So, we must ensure all reserved characters listed in the spec are percent-encoded,\n        // and spaces are replaced with \"+\".\n        encodeQueryStringParam: function(param) {\n            var percentEncoded = encodeURIComponent(param);\n\n            // %-encode characters not handled by `encodeURIComponent` (to follow RFC 3986)\n            percentEncoded = percentEncoded.replace(/[!'()]/g, escape);\n\n            // %-encode characters not handled by `escape` (to follow RFC 3986)\n            percentEncoded = percentEncoded.replace(/\\*/g, \"%2A\");\n\n            // replace percent-encoded spaces with a \"+\"\n            return percentEncoded.replace(/%20/g, \"+\");\n        },\n        /**\n         * Escapes url part as for AWS requirements\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\n         */\n        uriEscape: function(string) {\n            var output = encodeURIComponent(string);\n            output = output.replace(/[^A-Za-z0-9_.~\\-%]+/g, escape);\n            output = output.replace(/[*]/g, function(ch) {\n                return \"%\" + ch.charCodeAt(0).toString(16).toUpperCase();\n            });\n            return output;\n        },\n        /**\n         * Escapes a path as for AWS requirement\n         * AWS uriEscapePath function pulled from aws-sdk-js licensed under Apache 2.0 - http://github.com/aws/aws-sdk-js\n         */\n        uriEscapePath: function(path) {\n            var parts = [];\n            qq.each(path.split(\"/\"), function(idx, item) {\n                parts.push(qq.s3.util.uriEscape(item));\n            });\n            return parts.join(\"/\");\n        }\n    };\n}());\n","/*globals qq*/\n/**\n * Defines the public API for non-traditional FineUploaderBasic mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.nonTraditionalBasePublicApi = {\n        setUploadSuccessParams: function(params, id) {\n            this._uploadSuccessParamsStore.set(params, id);\n        },\n        setUploadSuccessEndpoint: function(endpoint, id) {\n            this._uploadSuccessEndpointStore.set(endpoint, id);\n        }\n    };\n\n    qq.nonTraditionalBasePrivateApi = {\n        /**\n         * When the upload has completed, if it is successful, send a request to the `successEndpoint` (if defined).\n         * This will hold up the call to the `onComplete` callback until we have determined success of the upload\n         * according to the local server, if a `successEndpoint` has been defined by the integrator.\n         *\n         * @param id ID of the completed upload\n         * @param name Name of the associated item\n         * @param result Object created from the server's parsed JSON response.\n         * @param xhr Associated XmlHttpRequest, if this was used to send the request.\n         * @returns {boolean || qq.Promise} true/false if success can be determined immediately, otherwise a `qq.Promise`\n         * if we need to ask the server.\n         * @private\n         */\n        _onComplete: function(id, name, result, xhr) {\n            var success = result.success ? true : false,\n                self = this,\n                onCompleteArgs = arguments,\n                successEndpoint = this._uploadSuccessEndpointStore.get(id),\n                successCustomHeaders = this._options.uploadSuccess.customHeaders,\n                successMethod = this._options.uploadSuccess.method,\n                cors = this._options.cors,\n                promise = new qq.Promise(),\n                uploadSuccessParams = this._uploadSuccessParamsStore.get(id),\n                fileParams = this._paramsStore.get(id),\n\n                // If we are waiting for confirmation from the local server, and have received it,\n                // include properties from the local server response in the `response` parameter\n                // sent to the `onComplete` callback, delegate to the parent `_onComplete`, and\n                // fulfill the associated promise.\n                onSuccessFromServer = function(successRequestResult) {\n                    delete self._failedSuccessRequestCallbacks[id];\n                    qq.extend(result, successRequestResult);\n                    qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                    promise.success(successRequestResult);\n                },\n\n                // If the upload success request fails, attempt to re-send the success request (via the core retry code).\n                // The entire upload may be restarted if the server returns a \"reset\" property with a value of true as well.\n                onFailureFromServer = function(successRequestResult) {\n                    var callback = submitSuccessRequest;\n\n                    qq.extend(result, successRequestResult);\n\n                    if (result && result.reset) {\n                        callback = null;\n                    }\n\n                    if (!callback) {\n                        delete self._failedSuccessRequestCallbacks[id];\n                    }\n                    else {\n                        self._failedSuccessRequestCallbacks[id] = callback;\n                    }\n\n                    if (!self._onAutoRetry(id, name, result, xhr, callback)) {\n                        qq.FineUploaderBasic.prototype._onComplete.apply(self, onCompleteArgs);\n                        promise.failure(successRequestResult);\n                    }\n                },\n                submitSuccessRequest,\n                successAjaxRequester;\n\n            // Ask the local server if the file sent is ok.\n            if (success && successEndpoint) {\n                successAjaxRequester = new qq.UploadSuccessAjaxRequester({\n                    endpoint: successEndpoint,\n                    method: successMethod,\n                    customHeaders: successCustomHeaders,\n                    cors: cors,\n                    log: qq.bind(this.log, this)\n                });\n\n                // combine custom params and default params\n                qq.extend(uploadSuccessParams, self._getEndpointSpecificParams(id, result, xhr), true);\n\n                // include any params associated with the file\n                fileParams && qq.extend(uploadSuccessParams, fileParams, true);\n\n                submitSuccessRequest = qq.bind(function() {\n                    successAjaxRequester.sendSuccessRequest(id, uploadSuccessParams)\n                        .then(onSuccessFromServer, onFailureFromServer);\n                }, self);\n\n                submitSuccessRequest();\n\n                return promise;\n            }\n\n            // If we are not asking the local server about the file, just delegate to the parent `_onComplete`.\n            return qq.FineUploaderBasic.prototype._onComplete.apply(this, arguments);\n        },\n\n        // If the failure occurred on an upload success request (and a reset was not ordered), try to resend that instead.\n        _manualRetry: function(id) {\n            var successRequestCallback = this._failedSuccessRequestCallbacks[id];\n\n            return qq.FineUploaderBasic.prototype._manualRetry.call(this, id, successRequestCallback);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploaderBasic mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader Basic as well as code to handle uploads directly to S3.\n * Some inherited options and API methods have a special meaning in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploaderBasic = function(o) {\n        var options = {\n            request: {\n                // public key (required for server-side signing, ignored if `credentials` have been provided)\n                accessKey: null,\n\n                // padding, in milliseconds, to add to the x-amz-date header & the policy expiration date\n                clockDrift: 0\n            },\n\n            objectProperties: {\n                acl: \"private\",\n\n                // string or a function which may be promissory\n                bucket: qq.bind(function(id) {\n                    return qq.s3.util.getBucket(this.getEndpoint(id));\n                }, this),\n\n                // string or a function which may be promissory - only used for V4 multipart uploads\n                host: qq.bind(function(id) {\n                    return (/(?:http|https):\\/\\/(.+)(?:\\/.+)?/).exec(this._endpointStore.get(id))[1];\n                }, this),\n\n                // 'uuid', 'filename', or a function which may be promissory\n                key: \"uuid\",\n\n                reducedRedundancy: false,\n\n                // Defined at http://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\n                region: \"us-east-1\",\n\n                serverSideEncryption: false\n            },\n\n            credentials: {\n                // Public key (required).\n                accessKey: null,\n                // Private key (required).\n                secretKey: null,\n                // Expiration date for the credentials (required).  May be an ISO string or a `Date`.\n                expiration: null,\n                // Temporary credentials session token.\n                // Only required for temporary credentials obtained via AssumeRoleWithWebIdentity.\n                sessionToken: null\n            },\n\n            // All but `version` are ignored if `credentials` is provided.\n            signature: {\n                customHeaders: {},\n                endpoint: null,\n                version: 2\n            },\n\n            uploadSuccess: {\n                endpoint: null,\n\n                method: \"POST\",\n\n                // In addition to the default params sent by Fine Uploader\n                params: {},\n\n                customHeaders: {}\n            },\n\n            // required if non-File-API browsers, such as IE9 and older, are used\n            iframeSupport: {\n                localBlankPagePath: null\n            },\n\n            chunking: {\n                // minimum part size is 5 MiB when uploading to S3\n                partSize: 5242880\n            },\n\n            cors: {\n                allowXdr: true\n            },\n\n            callbacks: {\n                onCredentialsExpired: function() {}\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        if (!this.setCredentials(options.credentials, true)) {\n            this._currentCredentials.accessKey = options.request.accessKey;\n        }\n\n        this._aclStore = this._createStore(options.objectProperties.acl);\n\n        // Call base module\n        qq.FineUploaderBasic.call(this, options);\n\n        this._uploadSuccessParamsStore = this._createStore(this._options.uploadSuccess.params);\n        this._uploadSuccessEndpointStore = this._createStore(this._options.uploadSuccess.endpoint);\n\n        // This will hold callbacks for failed uploadSuccess requests that will be invoked on retry.\n        // Indexed by file ID.\n        this._failedSuccessRequestCallbacks = {};\n\n        // Holds S3 keys for file representations constructed from a session request.\n        this._cannedKeys = {};\n        // Holds S3 buckets for file representations constructed from a session request.\n        this._cannedBuckets = {};\n\n        this._buckets = {};\n        this._hosts = {};\n    };\n\n    // Inherit basic public & private API methods.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.basePrivateApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePublicApi);\n    qq.extend(qq.s3.FineUploaderBasic.prototype, qq.nonTraditionalBasePrivateApi);\n\n    // Define public & private API methods for this module.\n    qq.extend(qq.s3.FineUploaderBasic.prototype, {\n        getBucket: function(id) {\n            if (this._cannedBuckets[id] == null) {\n                return this._buckets[id];\n            }\n            return this._cannedBuckets[id];\n        },\n\n        /**\n         * @param id File ID\n         * @returns {*} Key name associated w/ the file, if one exists\n         */\n        getKey: function(id) {\n            /* jshint eqnull:true */\n            if (this._cannedKeys[id] == null) {\n                return this._handler.getThirdPartyFileId(id);\n            }\n\n            return this._cannedKeys[id];\n        },\n\n        /**\n         * Override the parent's reset function to cleanup various S3-related items.\n         */\n        reset: function() {\n            qq.FineUploaderBasic.prototype.reset.call(this);\n            this._failedSuccessRequestCallbacks = [];\n            this._buckets = {};\n            this._hosts = {};\n        },\n\n        setCredentials: function(credentials, ignoreEmpty) {\n            if (credentials && credentials.secretKey) {\n                if (!credentials.accessKey) {\n                    throw new qq.Error(\"Invalid credentials: no accessKey\");\n                }\n                else if (!credentials.expiration) {\n                    throw new qq.Error(\"Invalid credentials: no expiration\");\n                }\n                else {\n                    this._currentCredentials = qq.extend({}, credentials);\n\n                    // Ensure expiration is a `Date`.  If initially a string, assuming it is in ISO format.\n                    if (qq.isString(credentials.expiration)) {\n                        this._currentCredentials.expiration = new Date(credentials.expiration);\n                    }\n                }\n\n                return true;\n            }\n            else if (!ignoreEmpty) {\n                throw new qq.Error(\"Invalid credentials parameter!\");\n            }\n            else {\n                this._currentCredentials = {};\n            }\n        },\n\n        setAcl: function(acl, id) {\n            this._aclStore.set(acl, id);\n        },\n\n        /**\n         * Ensures the parent's upload handler creator passes any additional S3-specific options to the handler as well\n         * as information required to instantiate the specific handler based on the current browser's capabilities.\n         *\n         * @returns {qq.UploadHandlerController}\n         * @private\n         */\n        _createUploadHandler: function() {\n            var self = this,\n                additionalOptions = {\n                    aclStore: this._aclStore,\n                    getBucket: qq.bind(this._determineBucket, this),\n                    getHost: qq.bind(this._determineHost, this),\n                    getKeyName: qq.bind(this._determineKeyName, this),\n                    iframeSupport: this._options.iframeSupport,\n                    objectProperties: this._options.objectProperties,\n                    signature: this._options.signature,\n                    clockDrift: this._options.request.clockDrift,\n                    // pass size limit validation values to include in the request so AWS enforces this server-side\n                    validation: {\n                        minSizeLimit: this._options.validation.minSizeLimit,\n                        maxSizeLimit: this._options.validation.sizeLimit\n                    }\n                };\n\n            // We assume HTTP if it is missing from the start of the endpoint string.\n            qq.override(this._endpointStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var endpoint = super_.get(id);\n\n                        if (endpoint.indexOf(\"http\") < 0) {\n                            return \"http://\" + endpoint;\n                        }\n\n                        return endpoint;\n                    }\n                };\n            });\n\n            // Some param names should be lower case to avoid signature mismatches\n            qq.override(this._paramsStore, function(super_) {\n                return {\n                    get: function(id) {\n                        var oldParams = super_.get(id),\n                            modifiedParams = {};\n\n                        qq.each(oldParams, function(name, val) {\n                            var paramName = name;\n\n                            if (qq.indexOf(qq.s3.util.CASE_SENSITIVE_PARAM_NAMES, paramName) < 0) {\n                                paramName = paramName.toLowerCase();\n                            }\n\n                            modifiedParams[paramName] = qq.isFunction(val) ? val() : val;\n                        });\n\n                        return modifiedParams;\n                    }\n                };\n            });\n\n            additionalOptions.signature.credentialsProvider = {\n                get: function() {\n                    return self._currentCredentials;\n                },\n\n                onExpired: function() {\n                    var updateCredentials = new qq.Promise(),\n                        callbackRetVal = self._options.callbacks.onCredentialsExpired();\n\n                    if (qq.isGenericPromise(callbackRetVal)) {\n                        callbackRetVal.then(function(credentials) {\n                            try {\n                                self.setCredentials(credentials);\n                                updateCredentials.success();\n                            }\n                            catch (error) {\n                                self.log(\"Invalid credentials returned from onCredentialsExpired callback! (\" + error.message + \")\", \"error\");\n                                updateCredentials.failure(\"onCredentialsExpired did not return valid credentials.\");\n                            }\n                        }, function(errorMsg) {\n                            self.log(\"onCredentialsExpired callback indicated failure! (\" + errorMsg + \")\", \"error\");\n                            updateCredentials.failure(\"onCredentialsExpired callback failed.\");\n                        });\n                    }\n                    else {\n                        self.log(\"onCredentialsExpired callback did not return a promise!\", \"error\");\n                        updateCredentials.failure(\"Unexpected return value for onCredentialsExpired.\");\n                    }\n\n                    return updateCredentials;\n                }\n            };\n\n            return qq.FineUploaderBasic.prototype._createUploadHandler.call(this, additionalOptions, \"s3\");\n        },\n\n        _determineObjectPropertyValue: function(id, property) {\n            var maybe = this._options.objectProperties[property],\n                promise = new qq.Promise(),\n                self = this;\n\n            if (qq.isFunction(maybe)) {\n                maybe = maybe(id);\n                if (qq.isGenericPromise(maybe)) {\n                    promise = maybe;\n                }\n                else {\n                    promise.success(maybe);\n                }\n            }\n            else if (qq.isString(maybe)) {\n                promise.success(maybe);\n            }\n\n            promise.then(\n                function success(value) {\n                    self[\"_\" + property + \"s\"][id] = value;\n                },\n\n                function failure(errorMsg) {\n                    qq.log(\"Problem determining \" + property + \" for ID \" + id + \" (\" + errorMsg + \")\", \"error\");\n                }\n            );\n\n            return promise;\n        },\n\n        _determineBucket: function(id) {\n            return this._determineObjectPropertyValue(id, \"bucket\");\n        },\n\n        _determineHost: function(id) {\n            return this._determineObjectPropertyValue(id, \"host\");\n        },\n\n        /**\n         * Determine the file's key name and passes it to the caller via a promissory callback.  This also may\n         * delegate to an integrator-defined function that determines the file's key name on demand,\n         * which also may be promissory.\n         *\n         * @param id ID of the file\n         * @param filename Name of the file\n         * @returns {qq.Promise} A promise that will be fulfilled when the key name has been determined (and will be passed to the caller via the success callback).\n         * @private\n         */\n        _determineKeyName: function(id, filename) {\n            /*jshint -W015*/\n            var promise = new qq.Promise(),\n                keynameLogic = this._options.objectProperties.key,\n                extension = qq.getExtension(filename),\n                onGetKeynameFailure = promise.failure,\n                onGetKeynameSuccess = function(keyname, extension) {\n                    var keynameToUse = keyname;\n\n                    if (extension !== undefined) {\n                        keynameToUse += \".\" + extension;\n                    }\n\n                    promise.success(keynameToUse);\n                };\n\n            switch (keynameLogic) {\n                case \"uuid\":\n                    onGetKeynameSuccess(this.getUuid(id), extension);\n                    break;\n                case \"filename\":\n                    onGetKeynameSuccess(filename);\n                    break;\n                default:\n                    if (qq.isFunction(keynameLogic)) {\n                        this._handleKeynameFunction(keynameLogic, id, onGetKeynameSuccess, onGetKeynameFailure);\n                    }\n                    else {\n                        this.log(keynameLogic + \" is not a valid value for the s3.keyname option!\", \"error\");\n                        onGetKeynameFailure();\n                    }\n            }\n\n            return promise;\n        },\n\n        /**\n         * Called by the internal onUpload handler if the integrator has supplied a function to determine\n         * the file's key name.  The integrator's function may be promissory.  We also need to fulfill\n         * the promise contract associated with the caller as well.\n         *\n         * @param keynameFunc Integrator-supplied function that must be executed to determine the key name.  May be promissory.\n         * @param id ID of the associated file\n         * @param successCallback Invoke this if key name retrieval is successful, passing in the key name.\n         * @param failureCallback Invoke this if key name retrieval was unsuccessful.\n         * @private\n         */\n        _handleKeynameFunction: function(keynameFunc, id, successCallback, failureCallback) {\n            var self = this,\n                onSuccess = function(keyname) {\n                    successCallback(keyname);\n                },\n                onFailure = function(reason) {\n                    self.log(qq.format(\"Failed to retrieve key name for {}.  Reason: {}\", id, reason || \"null\"), \"error\");\n                    failureCallback(reason);\n                },\n                keyname = keynameFunc.call(this, id);\n\n            if (qq.isGenericPromise(keyname)) {\n                keyname.then(onSuccess, onFailure);\n            }\n            /*jshint -W116*/\n            else if (keyname == null) {\n                onFailure();\n            }\n            else {\n                onSuccess(keyname);\n            }\n        },\n\n        _getEndpointSpecificParams: function(id, response, maybeXhr) {\n            var params = {\n                key: this.getKey(id),\n                uuid: this.getUuid(id),\n                name: this.getName(id),\n                bucket: this.getBucket(id)\n            };\n\n            if (maybeXhr && maybeXhr.getResponseHeader(\"ETag\")) {\n                params.etag = maybeXhr.getResponseHeader(\"ETag\");\n            }\n            else if (response.etag) {\n                params.etag = response.etag;\n            }\n\n            return params;\n        },\n\n        // Hooks into the base internal `_onSubmitDelete` to add key and bucket params to the delete file request.\n        _onSubmitDelete: function(id, onSuccessCallback) {\n            var additionalMandatedParams = {\n                key: this.getKey(id),\n                bucket: this.getBucket(id)\n            };\n\n            return qq.FineUploaderBasic.prototype._onSubmitDelete.call(this, id, onSuccessCallback, additionalMandatedParams);\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id;\n\n            /* jshint eqnull:true */\n            if (sessionData.s3Key == null) {\n                throw new qq.Error(\"Did not find s3Key property in server session response.  This is required!\");\n            }\n            else {\n                id = qq.FineUploaderBasic.prototype._addCannedFile.apply(this, arguments);\n                this._cannedKeys[id] = sessionData.s3Key;\n                this._cannedBuckets[id] = sessionData.s3Bucket;\n            }\n\n            return id;\n        }\n    });\n}());\n","/* globals qq, CryptoJS */\n\n// IE 10 does not support Uint8ClampedArray. We don't need it, but CryptoJS attempts to reference it\n// inside a conditional via an instanceof check, which breaks S3 v4 signatures for chunked uploads.\nif (!window.Uint8ClampedArray) {\n    window.Uint8ClampedArray = function() {};\n}\n/**\n * Handles signature determination for HTML Form Upload requests and Multipart Uploader requests (via the S3 REST API).\n *\n * If the S3 requests are to be signed server side, this module will send a POST request to the server in an attempt\n * to solicit signatures for various S3-related requests.  This module also parses the response and attempts\n * to determine if the effort was successful.\n *\n * If the S3 requests are to be signed client-side, without the help of a server, this module will utilize CryptoJS to\n * sign the requests directly in the browser and send them off to S3.\n *\n * @param o Options associated with all such requests\n * @returns {{getSignature: Function}} API method used to initiate the signature request.\n * @constructor\n */\nqq.s3.RequestSigner = function(o) {\n    \"use strict\";\n\n    var requester,\n        thisSignatureRequester = this,\n        pendingSignatures = {},\n        options = {\n            expectingPolicy: false,\n            method: \"POST\",\n            signatureSpec: {\n                drift: 0,\n                credentialsProvider: {},\n                endpoint: null,\n                customHeaders: {},\n                version: 2\n            },\n            maxConnections: 3,\n            endpointStore: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        },\n        credentialsProvider,\n\n        generateHeaders = function(signatureConstructor, signature, promise) {\n            var headers = signatureConstructor.getHeaders();\n\n            if (options.signatureSpec.version === 4) {\n                headers.Authorization = qq.s3.util.V4_ALGORITHM_PARAM_VALUE +\n                    \" Credential=\" + options.signatureSpec.credentialsProvider.get().accessKey + \"/\" +\n                    qq.s3.util.getCredentialsDate(signatureConstructor.getRequestDate()) + \"/\" +\n                    options.signatureSpec.region + \"/\" +\n                    \"s3/aws4_request,\" +\n                    \"SignedHeaders=\" + signatureConstructor.getSignedHeaders() + \",\" +\n                    \"Signature=\" + signature;\n            }\n            else {\n                headers.Authorization = \"AWS \" + options.signatureSpec.credentialsProvider.get().accessKey + \":\" + signature;\n            }\n\n            promise.success(headers, signatureConstructor.getEndOfUrl());\n        },\n\n        v2 = {\n            getStringToSign: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n\\n{}/{}/{}\",\n                    signatureSpec.method,\n                    signatureSpec.contentMd5 || \"\",\n                    signatureSpec.contentType || \"\",\n                    signatureSpec.headersStr || \"\\n\",\n                    signatureSpec.bucket,\n                    signatureSpec.endOfUrl);\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var headersWordArray = qq.CryptoJS.enc.Utf8.parse(headersStr),\n                    headersHmacSha1 = qq.CryptoJS.HmacSHA1(headersWordArray, credentialsProvider.get().secretKey),\n                    headersHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(headersHmacSha1);\n\n                generateHeaders(signatureConstructor, headersHmacSha1Base64, signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    policyHmacSha1 = qq.CryptoJS.HmacSHA1(base64Policy, credentialsProvider.get().secretKey),\n                    policyHmacSha1Base64 = qq.CryptoJS.enc.Base64.stringify(policyHmacSha1);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: policyHmacSha1Base64\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        },\n\n        v4 = {\n            getCanonicalQueryString: function(endOfUri) {\n                var queryParamIdx = endOfUri.indexOf(\"?\"),\n                    canonicalQueryString = \"\",\n                    encodedQueryParams, encodedQueryParamNames, queryStrings;\n\n                if (queryParamIdx >= 0) {\n                    encodedQueryParams = {};\n                    queryStrings = endOfUri.substr(queryParamIdx + 1).split(\"&\");\n\n                    qq.each(queryStrings, function(idx, queryString) {\n                        var nameAndVal = queryString.split(\"=\"),\n                            paramVal = nameAndVal[1];\n\n                        if (paramVal == null) {\n                            paramVal = \"\";\n                        }\n\n                        encodedQueryParams[encodeURIComponent(nameAndVal[0])] = encodeURIComponent(paramVal);\n                    });\n\n                    encodedQueryParamNames = Object.keys(encodedQueryParams).sort();\n                    encodedQueryParamNames.forEach(function(encodedQueryParamName, idx) {\n                        canonicalQueryString += encodedQueryParamName + \"=\" + encodedQueryParams[encodedQueryParamName];\n                        if (idx < encodedQueryParamNames.length - 1) {\n                            canonicalQueryString += \"&\";\n                        }\n                    });\n                }\n\n                return canonicalQueryString;\n            },\n\n            getCanonicalRequest: function(signatureSpec) {\n                return qq.format(\"{}\\n{}\\n{}\\n{}\\n{}\\n{}\",\n                    signatureSpec.method,\n                    v4.getCanonicalUri(signatureSpec.endOfUrl),\n                    v4.getCanonicalQueryString(signatureSpec.endOfUrl),\n                    signatureSpec.headersStr || \"\\n\",\n                    v4.getSignedHeaders(signatureSpec.headerNames),\n                    signatureSpec.hashedContent);\n            },\n\n            getCanonicalUri: function(endOfUri) {\n                var path = endOfUri,\n                    queryParamIdx = endOfUri.indexOf(\"?\");\n\n                if (queryParamIdx > 0) {\n                    path = endOfUri.substr(0, queryParamIdx);\n                }\n                return \"/\" + path;\n            },\n\n            getEncodedHashedPayload: function(body) {\n                var promise = new qq.Promise(),\n                    reader;\n\n                if (qq.isBlob(body)) {\n                    // TODO hash blob in webworker if this becomes a notable perf issue\n                    reader = new FileReader();\n                    reader.onloadend = function(e) {\n                        if (e.target.readyState === FileReader.DONE) {\n                            if (e.target.error) {\n                                promise.failure(e.target.error);\n                            }\n                            else {\n                                var wordArray = qq.CryptoJS.lib.WordArray.create(e.target.result);\n                                promise.success(qq.CryptoJS.SHA256(wordArray).toString());\n                            }\n                        }\n                    };\n                    reader.readAsArrayBuffer(body);\n                }\n                else {\n                    body = body || \"\";\n                    promise.success(qq.CryptoJS.SHA256(body).toString());\n                }\n\n                return promise;\n            },\n\n            getScope: function(date, region) {\n                return qq.s3.util.getCredentialsDate(date) + \"/\" +\n                    region + \"/s3/aws4_request\";\n            },\n\n            getStringToSign: function(signatureSpec) {\n                var canonicalRequest = v4.getCanonicalRequest(signatureSpec),\n                    date = qq.s3.util.getV4PolicyDate(signatureSpec.date, signatureSpec.drift),\n                    hashedRequest = qq.CryptoJS.SHA256(canonicalRequest).toString(),\n                    scope = v4.getScope(signatureSpec.date, options.signatureSpec.region),\n                    stringToSignTemplate = \"AWS4-HMAC-SHA256\\n{}\\n{}\\n{}\";\n\n                return {\n                    hashed: qq.format(stringToSignTemplate, date, scope, hashedRequest),\n                    raw: qq.format(stringToSignTemplate, date, scope, canonicalRequest)\n                };\n            },\n\n            getSignedHeaders: function(headerNames) {\n                var signedHeaders = \"\";\n\n                headerNames.forEach(function(headerName, idx) {\n                    signedHeaders += headerName.toLowerCase();\n\n                    if (idx < headerNames.length - 1) {\n                        signedHeaders += \";\";\n                    }\n                });\n\n                return signedHeaders;\n            },\n\n            signApiRequest: function(signatureConstructor, headersStr, signatureEffort) {\n                var secretKey = credentialsProvider.get().secretKey,\n                    headersPattern = /.+\\n.+\\n(\\d+)\\/(.+)\\/s3\\/.+\\n(.+)/,\n                    matches = headersPattern.exec(headersStr),\n                    dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                generateHeaders(signatureConstructor, qq.CryptoJS.HmacSHA256(headersStr, signingKey), signatureEffort);\n            },\n\n            signPolicy: function(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n                var policyStr = JSON.stringify(policy),\n                    policyWordArray = qq.CryptoJS.enc.Utf8.parse(policyStr),\n                    base64Policy = qq.CryptoJS.enc.Base64.stringify(policyWordArray),\n                    secretKey = credentialsProvider.get().secretKey,\n                    credentialPattern = /.+\\/(.+)\\/(.+)\\/s3\\/aws4_request/,\n                    credentialCondition = (function() {\n                        var credential = null;\n                        qq.each(policy.conditions, function(key, condition) {\n                            var val = condition[\"x-amz-credential\"];\n                            if (val) {\n                                credential = val;\n                                return false;\n                            }\n                        });\n                        return credential;\n                    }()),\n                    matches, dateKey, dateRegionKey, dateRegionServiceKey, signingKey;\n\n                matches = credentialPattern.exec(credentialCondition);\n                dateKey = qq.CryptoJS.HmacSHA256(matches[1], \"AWS4\" + secretKey);\n                dateRegionKey = qq.CryptoJS.HmacSHA256(matches[2], dateKey);\n                dateRegionServiceKey = qq.CryptoJS.HmacSHA256(\"s3\", dateRegionKey);\n                signingKey = qq.CryptoJS.HmacSHA256(\"aws4_request\", dateRegionServiceKey);\n\n                signatureEffort.success({\n                    policy: base64Policy,\n                    signature: qq.CryptoJS.HmacSHA256(base64Policy, signingKey).toString()\n                }, updatedAccessKey, updatedSessionToken);\n            }\n        };\n\n    qq.extend(options, o, true);\n    credentialsProvider = options.signatureSpec.credentialsProvider;\n\n    function handleSignatureReceived(id, xhrOrXdr, isError) {\n        var responseJson = xhrOrXdr.responseText,\n            pendingSignatureData = pendingSignatures[id],\n            promise = pendingSignatureData.promise,\n            signatureConstructor = pendingSignatureData.signatureConstructor,\n            errorMessage, response;\n\n        delete pendingSignatures[id];\n\n        // Attempt to parse what we would expect to be a JSON response\n        if (responseJson) {\n            try {\n                response = qq.parseJson(responseJson);\n            }\n            catch (error) {\n                options.log(\"Error attempting to parse signature response: \" + error, \"error\");\n            }\n        }\n\n        // If the response is parsable and contains an `error` property, use it as the error message\n        if (response && response.error) {\n            isError = true;\n            errorMessage = response.error;\n        }\n        // If we have received a parsable response, and it has an `invalid` property,\n        // the policy document or request headers may have been tampered with client-side.\n        else if (response && response.invalid) {\n            isError = true;\n            errorMessage = \"Invalid policy document or request headers!\";\n        }\n        // Make sure the response contains policy & signature properties\n        else if (response) {\n            if (options.expectingPolicy && !response.policy) {\n                isError = true;\n                errorMessage = \"Response does not include the base64 encoded policy!\";\n            }\n            else if (!response.signature) {\n                isError = true;\n                errorMessage = \"Response does not include the signature!\";\n            }\n        }\n        // Something unknown went wrong\n        else {\n            isError = true;\n            errorMessage = \"Received an empty or invalid response from the server!\";\n        }\n\n        if (isError) {\n            if (errorMessage) {\n                options.log(errorMessage, \"error\");\n            }\n\n            promise.failure(errorMessage);\n        }\n        else if (signatureConstructor) {\n            generateHeaders(signatureConstructor, response.signature, promise);\n        }\n        else {\n            promise.success(response);\n        }\n    }\n\n    function getStringToSignArtifacts(id, version, requestInfo) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            headerNames = [],\n            headersStr = \"\",\n            now = new Date(),\n            endOfUrl, signatureSpec, toSign,\n\n            generateStringToSign = function(requestInfo) {\n                var contentMd5,\n                    headerIndexesToRemove = [];\n\n                qq.each(requestInfo.headers, function(name) {\n                    headerNames.push(name);\n                });\n                headerNames.sort();\n\n                qq.each(headerNames, function(idx, headerName) {\n                    if (qq.indexOf(qq.s3.util.UNSIGNABLE_REST_HEADER_NAMES, headerName) < 0) {\n                        headersStr += headerName.toLowerCase() + \":\" + requestInfo.headers[headerName].trim() + \"\\n\";\n                    }\n                    else if (headerName === \"Content-MD5\") {\n                        contentMd5 = requestInfo.headers[headerName];\n                    }\n                    else {\n                        headerIndexesToRemove.unshift(idx);\n                    }\n                });\n\n                qq.each(headerIndexesToRemove, function(idx, headerIdx) {\n                    headerNames.splice(headerIdx, 1);\n                });\n\n                signatureSpec = {\n                    bucket: requestInfo.bucket,\n                    contentMd5: contentMd5,\n                    contentType: requestInfo.contentType,\n                    date: now,\n                    drift: options.signatureSpec.drift,\n                    endOfUrl: endOfUrl,\n                    hashedContent: requestInfo.hashedContent,\n                    headerNames: headerNames,\n                    headersStr: headersStr,\n                    method: method\n                };\n\n                toSign = version === 2 ? v2.getStringToSign(signatureSpec) : v4.getStringToSign(signatureSpec);\n\n                return {\n                    date: now,\n                    endOfUrl: endOfUrl,\n                    signedHeaders: version === 4 ? v4.getSignedHeaders(signatureSpec.headerNames) : null,\n                    toSign: version === 4 ? toSign.hashed : toSign,\n                    toSignRaw: version === 4 ? toSign.raw : toSign\n                };\n            };\n\n        /*jshint indent:false */\n        switch (requestInfo.type) {\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_ABORT:\n                method = \"DELETE\";\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_INITIATE:\n                endOfUrl = \"uploads\";\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_COMPLETE:\n                endOfUrl = qq.format(\"uploadId={}\", requestInfo.uploadId);\n                break;\n            case thisSignatureRequester.REQUEST_TYPE.MULTIPART_UPLOAD:\n                method = \"PUT\";\n                endOfUrl = qq.format(\"partNumber={}&uploadId={}\", requestInfo.partNum, requestInfo.uploadId);\n                break;\n        }\n\n        endOfUrl = requestInfo.key + \"?\" + endOfUrl;\n\n        if (version === 4) {\n            v4.getEncodedHashedPayload(requestInfo.content).then(function(hashedContent) {\n                requestInfo.headers[\"x-amz-content-sha256\"] = hashedContent;\n                requestInfo.headers.Host = requestInfo.host;\n                requestInfo.headers[\"x-amz-date\"] = qq.s3.util.getV4PolicyDate(now, options.signatureSpec.drift);\n                requestInfo.hashedContent = hashedContent;\n\n                promise.success(generateStringToSign(requestInfo));\n            }, function (err) {\n                promise.failure(err);\n            });\n        }\n        else {\n            promise.success(generateStringToSign(requestInfo));\n        }\n\n        return promise;\n    }\n\n    function determineSignatureClientSide(id, toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        var updatedHeaders;\n\n        // REST API request\n        if (toBeSigned.signatureConstructor) {\n            if (updatedSessionToken) {\n                updatedHeaders = toBeSigned.signatureConstructor.getHeaders();\n                updatedHeaders[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = updatedSessionToken;\n                toBeSigned.signatureConstructor.withHeaders(updatedHeaders);\n            }\n\n            toBeSigned.signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                signApiRequest(toBeSigned.signatureConstructor, signatureArtifacts.stringToSign, signatureEffort);\n            }, function (err) {\n                signatureEffort.failure(err);\n            });\n        }\n        // Form upload (w/ policy document)\n        else {\n            updatedSessionToken && qq.s3.util.refreshPolicyCredentials(toBeSigned, updatedSessionToken);\n            signPolicy(toBeSigned, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken) {\n        if (options.signatureSpec.version === 4) {\n            v4.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n        else {\n            v2.signPolicy(policy, signatureEffort, updatedAccessKey, updatedSessionToken);\n        }\n    }\n\n    function signApiRequest(signatureConstructor, headersStr, signatureEffort) {\n        if (options.signatureSpec.version === 4) {\n            v4.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n        else {\n            v2.signApiRequest(signatureConstructor, headersStr, signatureEffort);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        contentType: \"application/json; charset=utf-8\",\n        endpointStore: {\n            get: function() {\n                return options.signatureSpec.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.signatureSpec.customHeaders,\n        log: options.log,\n        onComplete: handleSignatureReceived,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * On success, an object containing the parsed JSON response will be passed into the success handler if the\n         * request succeeds.  Otherwise an error message will be passed into the failure method.\n         *\n         * @param id File ID.\n         * @param toBeSigned an Object that holds the item(s) to be signed\n         * @returns {qq.Promise} A promise that is fulfilled when the response has been received.\n         */\n        getSignature: function(id, toBeSigned) {\n            var params = toBeSigned,\n                signatureConstructor = toBeSigned.signatureConstructor,\n                signatureEffort = new qq.Promise(),\n                queryParams;\n\n            if (options.signatureSpec.version === 4) {\n                queryParams = {v4: true};\n            }\n\n            if (credentialsProvider.get().secretKey && qq.CryptoJS) {\n                if (credentialsProvider.get().expiration.getTime() > Date.now()) {\n                    determineSignatureClientSide(id, toBeSigned, signatureEffort);\n                }\n                // If credentials are expired, ask for new ones before attempting to sign request\n                else {\n                    credentialsProvider.onExpired().then(function() {\n                        determineSignatureClientSide(id, toBeSigned,\n                            signatureEffort,\n                            credentialsProvider.get().accessKey,\n                            credentialsProvider.get().sessionToken);\n                    }, function(errorMsg) {\n                        options.log(\"Attempt to update expired credentials apparently failed! Unable to sign request.  \", \"error\");\n                        signatureEffort.failure(\"Unable to sign request - expired credentials.\");\n                    });\n                }\n            }\n            else {\n                options.log(\"Submitting S3 signature request for \" + id);\n\n                if (signatureConstructor) {\n                    signatureConstructor.getToSign(id).then(function(signatureArtifacts) {\n                        params = {headers: signatureArtifacts.stringToSignRaw};\n                        requester.initTransport(id)\n                            .withParams(params)\n                            .withQueryParams(queryParams)\n                            .send();\n                    }, function (err) {\n                        options.log(\"Failed to construct signature. \", \"error\");\n                        signatureEffort.failure(\"Failed to construct signature.\");\n                    });\n                }\n                else {\n                    requester.initTransport(id)\n                        .withParams(params)\n                        .withQueryParams(queryParams)\n                        .send();\n                }\n\n                pendingSignatures[id] = {\n                    promise: signatureEffort,\n                    signatureConstructor: signatureConstructor\n                };\n            }\n\n            return signatureEffort;\n        },\n\n        constructStringToSign: function(type, bucket, host, key) {\n            var headers = {},\n                uploadId, content, contentType, partNum, artifacts;\n\n            return {\n                withHeaders: function(theHeaders) {\n                    headers = theHeaders;\n                    return this;\n                },\n\n                withUploadId: function(theUploadId) {\n                    uploadId = theUploadId;\n                    return this;\n                },\n\n                withContent: function(theContent) {\n                    content = theContent;\n                    return this;\n                },\n\n                withContentType: function(theContentType) {\n                    contentType = theContentType;\n                    return this;\n                },\n\n                withPartNum: function(thePartNum) {\n                    partNum = thePartNum;\n                    return this;\n                },\n\n                getToSign: function(id) {\n                    var sessionToken = credentialsProvider.get().sessionToken,\n                        promise = new qq.Promise(),\n                        adjustedDate = new Date(Date.now() + options.signatureSpec.drift);\n\n                    headers[\"x-amz-date\"] = adjustedDate.toUTCString();\n\n                    if (sessionToken) {\n                        headers[qq.s3.util.SESSION_TOKEN_PARAM_NAME] = sessionToken;\n                    }\n\n                    getStringToSignArtifacts(id, options.signatureSpec.version, {\n                        bucket: bucket,\n                        content: content,\n                        contentType: contentType,\n                        headers: headers,\n                        host: host,\n                        key: key,\n                        partNum: partNum,\n                        type: type,\n                        uploadId: uploadId\n                    }).then(function(_artifacts_) {\n                        artifacts = _artifacts_;\n                        promise.success({\n                            headers: (function() {\n                                if (contentType) {\n                                    headers[\"Content-Type\"] = contentType;\n                                }\n\n                                delete headers.Host; // we don't want this to be set on the XHR-initiated request\n                                return headers;\n                            }()),\n                            date: artifacts.date,\n                            endOfUrl: artifacts.endOfUrl,\n                            signedHeaders: artifacts.signedHeaders,\n                            stringToSign: artifacts.toSign,\n                            stringToSignRaw: artifacts.toSignRaw\n                        });\n                    }, function (err) {\n                        promise.failure(err);\n                    });\n\n                    return promise;\n                },\n\n                getHeaders: function() {\n                    return qq.extend({}, headers);\n                },\n\n                getEndOfUrl: function() {\n                    return artifacts && artifacts.endOfUrl;\n                },\n\n                getRequestDate: function() {\n                    return artifacts && artifacts.date;\n                },\n\n                getSignedHeaders: function() {\n                    return artifacts && artifacts.signedHeaders;\n                }\n            };\n        }\n    });\n};\n\nqq.s3.RequestSigner.prototype.REQUEST_TYPE = {\n    MULTIPART_INITIATE: \"multipart_initiate\",\n    MULTIPART_COMPLETE: \"multipart_complete\",\n    MULTIPART_ABORT: \"multipart_abort\",\n    MULTIPART_UPLOAD: \"multipart_upload\"\n};\n","/*globals qq, XMLHttpRequest*/\n/**\n * Sends a POST request to the server to notify it of a successful upload to an endpoint.  The server is expected to indicate success\n * or failure via the response status.  Specific information about the failure can be passed from the server via an `error`\n * property (by default) in an \"application/json\" response.\n *\n * @param o Options associated with all requests.\n * @constructor\n */\nqq.UploadSuccessAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingRequests = [],\n        options = {\n            method: \"POST\",\n            endpoint: null,\n            maxConnections: 3,\n            customHeaders: {},\n            paramsStore: {},\n            cors: {\n                expected: false,\n                sendCredentials: false\n            },\n            log: function(str, level) {}\n        };\n\n    qq.extend(options, o);\n\n    function handleSuccessResponse(id, xhrOrXdr, isError) {\n        var promise = pendingRequests[id],\n            responseJson = xhrOrXdr.responseText,\n            successIndicator = {success: true},\n            failureIndicator = {success: false},\n            parsedResponse;\n\n        delete pendingRequests[id];\n\n        options.log(qq.format(\"Received the following response body to an upload success request for id {}: {}\", id, responseJson));\n\n        try {\n            parsedResponse = qq.parseJson(responseJson);\n\n            // If this is a cross-origin request, the server may return a 200 response w/ error or success properties\n            // in order to ensure any specific error message is picked up by Fine Uploader for all browsers,\n            // since XDomainRequest (used in IE9 and IE8) doesn't give you access to the\n            // response body for an \"error\" response.\n            if (isError || (parsedResponse && (parsedResponse.error || parsedResponse.success === false))) {\n                options.log(\"Upload success request was rejected by the server.\", \"error\");\n                promise.failure(qq.extend(parsedResponse, failureIndicator));\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(qq.extend(parsedResponse, successIndicator));\n            }\n        }\n        catch (error) {\n            // This will be executed if a JSON response is not present.  This is not mandatory, so account for this properly.\n            if (isError) {\n                options.log(qq.format(\"Your server indicated failure in its upload success request response for id {}!\", id), \"error\");\n                promise.failure(failureIndicator);\n            }\n            else {\n                options.log(\"Upload success was acknowledged by the server.\");\n                promise.success(successIndicator);\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        acceptHeader: \"application/json\",\n        method: options.method,\n        endpointStore: {\n            get: function() {\n                return options.endpoint;\n            }\n        },\n        paramsStore: options.paramsStore,\n        maxConnections: options.maxConnections,\n        customHeaders: options.customHeaders,\n        log: options.log,\n        onComplete: handleSuccessResponse,\n        cors: options.cors\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends a request to the server, notifying it that a recently submitted file was successfully sent.\n         *\n         * @param id ID of the associated file\n         * @param spec `Object` with the properties that correspond to important values that we want to\n         * send to the server with this request.\n         * @returns {qq.Promise} A promise to be fulfilled when the response has been received and parsed.  The parsed\n         * payload of the response will be passed into the `failure` or `success` promise method.\n         */\n        sendSuccessRequest: function(id, spec) {\n            var promise = new qq.Promise();\n\n            options.log(\"Submitting upload success request/notification for \" + id);\n\n            requester.initTransport(id)\n                .withParams(spec)\n                .send();\n\n            pendingRequests[id] = promise;\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Initiate Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html)\n * request to S3 via the REST API.\n *\n * @param o Options from the caller - will override the defaults.\n * @constructor\n */\nqq.s3.InitiateMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingInitiateRequests = {},\n        options = {\n            filenameParam: \"qqfilename\",\n            method: \"POST\",\n            endpointStore: null,\n            paramsStore: null,\n            signatureSpec: null,\n            aclStore: null,\n            reducedRedundancy: false,\n            serverSideEncryption: false,\n            maxConnections: 3,\n            getContentType: function(id) {},\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            getName: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Determine all headers for the \"Initiate MPU\" request, including the \"Authorization\" header, which must be determined\n     * by the local server.  This is a promissory function.  If the server responds with a signature, the headers\n     * (including the Authorization header) will be passed into the success method of the promise.  Otherwise, the failure\n     * method on the promise will be called.\n     *\n     * @param id Associated file ID\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id) {\n        var bucket = options.getBucket(id),\n            host = options.getHost(id),\n            headers = {},\n            promise = new qq.Promise(),\n            key = options.getKey(id),\n            signatureConstructor;\n\n        headers[\"x-amz-acl\"] = options.aclStore.get(id);\n\n        if (options.reducedRedundancy) {\n            headers[qq.s3.util.REDUCED_REDUNDANCY_PARAM_NAME] = qq.s3.util.REDUCED_REDUNDANCY_PARAM_VALUE;\n        }\n\n        if (options.serverSideEncryption) {\n            headers[qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_NAME] = qq.s3.util.SERVER_SIDE_ENCRYPTION_PARAM_VALUE;\n        }\n\n        headers[qq.s3.util.AWS_PARAM_PREFIX + options.filenameParam] = encodeURIComponent(options.getName(id));\n\n        qq.each(options.paramsStore.get(id), function(name, val) {\n            if (qq.indexOf(qq.s3.util.UNPREFIXED_PARAM_NAMES, name) >= 0) {\n                headers[name] = val;\n            }\n            else {\n                headers[qq.s3.util.AWS_PARAM_PREFIX + name] = encodeURIComponent(val);\n            }\n        });\n\n        signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n            (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_INITIATE, bucket, host, key)\n            .withContentType(options.getContentType(id))\n            .withHeaders(headers);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Initiate MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleInitiateRequestComplete(id, xhr, isError) {\n        var promise = pendingInitiateRequests[id],\n            domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            uploadIdElements, messageElements, uploadId, errorMessage, status;\n\n        delete pendingInitiateRequests[id];\n\n        // The base ajax requester may declare the request to be a failure based on status code.\n        if (isError) {\n            status = xhr.status;\n\n            messageElements = responseDoc.getElementsByTagName(\"Message\");\n            if (messageElements.length > 0) {\n                errorMessage = messageElements[0].textContent;\n            }\n        }\n        // If the base ajax requester has not declared this a failure, make sure we can retrieve the uploadId from the response.\n        else {\n            uploadIdElements = responseDoc.getElementsByTagName(\"UploadId\");\n            if (uploadIdElements.length > 0) {\n                uploadId = uploadIdElements[0].textContent;\n            }\n            else {\n                errorMessage = \"Upload ID missing from request\";\n            }\n        }\n\n        // Either fail the promise (passing a descriptive error message) or declare it a success (passing the upload ID)\n        if (uploadId === undefined) {\n            if (errorMessage) {\n                options.log(qq.format(\"Specific problem detected initiating multipart upload request for {}: '{}'.\", id, errorMessage), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Unexplained error with initiate multipart upload request for {}.  Status code {}.\", id, status), \"error\");\n            }\n\n            promise.failure(\"Problem initiating upload request.\", xhr);\n        }\n        else {\n            options.log(qq.format(\"Initiate multipart upload request successful for {}.  Upload ID is {}\", id, uploadId));\n            promise.success(uploadId, xhr);\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleInitiateRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Initiate MPU\" request to AWS via the REST API.  First, though, we must get a signature from the\n         * local server for the request.  If all is successful, the uploadId from AWS will be passed into the promise's\n         * success handler. Otherwise, an error message will ultimately be passed into the failure method.\n         *\n         * @param id The ID associated with the file\n         * @returns {qq.Promise}\n         */\n        send: function(id) {\n            var promise = new qq.Promise();\n\n            getHeaders(id).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 initiate multipart upload request for \" + id);\n\n                pendingInitiateRequests[id] = promise;\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq*/\n/**\n * Ajax requester used to send an [\"Complete Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadComplete.html)\n * request to S3 via the REST API.\n *\n * @param o Options passed by the creator, to overwrite any default option values.\n * @constructor\n */\nqq.s3.CompleteMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        pendingCompleteRequests = {},\n        options = {\n            method: \"POST\",\n            contentType: \"text/xml\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Complete\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId, body) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_COMPLETE, bucket, host, options.getKey(id))\n                .withUploadId(uploadId)\n                .withContent(body)\n                .withContentType(\"application/xml; charset=UTF-8\");\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Complete MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleCompleteRequestComplete(id, xhr, isError) {\n        var promise = pendingCompleteRequests[id],\n            domParser = new DOMParser(),\n            bucket = options.getBucket(id),\n            key = options.getKey(id),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            bucketEls = responseDoc.getElementsByTagName(\"Bucket\"),\n            keyEls = responseDoc.getElementsByTagName(\"Key\");\n\n        delete pendingCompleteRequests[id];\n\n        options.log(qq.format(\"Complete response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Complete Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (bucketEls.length && keyEls.length) {\n                if (bucketEls[0].textContent !== bucket) {\n                    isError = true;\n                    options.log(qq.format(\"Wrong bucket in response to Complete Multipart Upload request for {}.\", id), \"error\");\n                }\n\n                // TODO Compare key name from response w/ expected key name if AWS ever fixes the encoding of key names in this response.\n            }\n            else {\n                isError = true;\n                options.log(qq.format(\"Missing bucket and/or key in response to Complete Multipart Upload request for {}.\", id), \"error\");\n            }\n        }\n\n        if (isError) {\n            promise.failure(\"Problem combining the file parts!\", xhr);\n        }\n        else {\n            promise.success({}, xhr);\n        }\n    }\n\n    /**\n     * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n     * @returns {string} XML string containing the body to send with the \"Complete\" request\n     */\n    function getCompleteRequestBody(etagEntries) {\n        var doc = document.implementation.createDocument(null, \"CompleteMultipartUpload\", null);\n\n        // The entries MUST be sorted by part number, per the AWS API spec.\n        etagEntries.sort(function(a, b) {\n            return a.part - b.part;\n        });\n\n        // Construct an XML document for each pair of etag/part values that correspond to part uploads.\n        qq.each(etagEntries, function(idx, etagEntry) {\n            var part = etagEntry.part,\n                etag = etagEntry.etag,\n                partEl = doc.createElement(\"Part\"),\n                partNumEl = doc.createElement(\"PartNumber\"),\n                partNumTextEl = doc.createTextNode(part),\n                etagTextEl = doc.createTextNode(etag),\n                etagEl = doc.createElement(\"ETag\");\n\n            etagEl.appendChild(etagTextEl);\n            partNumEl.appendChild(partNumTextEl);\n            partEl.appendChild(partNumEl);\n            partEl.appendChild(etagEl);\n            qq(doc).children()[0].appendChild(partEl);\n        });\n\n        // Turn the resulting XML document into a string fit for transport.\n        return new XMLSerializer().serializeToString(doc);\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        method: options.method,\n        contentType: \"application/xml; charset=UTF-8\",\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleCompleteRequestComplete,\n        successfulResponseCodes: {\n            POST: [200]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Complete\" request and fulfills the returned promise when the success of this request is known.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         * @param etagEntries Array of objects containing `etag` values and their associated `part` numbers.\n         * @returns {qq.Promise}\n         */\n        send: function(id, uploadId, etagEntries) {\n            var promise = new qq.Promise(),\n                body = getCompleteRequestBody(etagEntries);\n\n            getHeaders(id, uploadId, body).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 complete multipart upload request for \" + id);\n\n                pendingCompleteRequests[id] = promise;\n                delete headers[\"Content-Type\"];\n\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .withPayload(body)\n                    .send();\n            }, promise.failure);\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Ajax requester used to send an [\"Abort Multipart Upload\"](http://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadAbort.html)\n * request to S3 via the REST API.\n\n * @param o\n * @constructor\n */\nqq.s3.AbortMultipartAjaxRequester = function(o) {\n    \"use strict\";\n\n    var requester,\n        options = {\n            method: \"DELETE\",\n            endpointStore: null,\n            signatureSpec: null,\n            maxConnections: 3,\n            getBucket: function(id) {},\n            getHost: function(id) {},\n            getKey: function(id) {},\n            log: function(str, level) {}\n        },\n        getSignatureAjaxRequester;\n\n    qq.extend(options, o);\n\n    // Transport for requesting signatures (for the \"Complete\" requests) from the local server\n    getSignatureAjaxRequester = new qq.s3.RequestSigner({\n        endpointStore: options.endpointStore,\n        signatureSpec: options.signatureSpec,\n        cors: options.cors,\n        log: options.log\n    });\n\n    /**\n     * Attach all required headers (including Authorization) to the \"Abort\" request.  This is a promissory function\n     * that will fulfill the associated promise once all headers have been attached or when an error has occurred that\n     * prevents headers from being attached.\n     *\n     * @param id Associated file ID\n     * @param uploadId ID of the associated upload, according to AWS\n     * @returns {qq.Promise}\n     */\n    function getHeaders(id, uploadId) {\n        var headers = {},\n            promise = new qq.Promise(),\n            bucket = options.getBucket(id),\n            host = options.getHost(id),\n            signatureConstructor = getSignatureAjaxRequester.constructStringToSign\n                (getSignatureAjaxRequester.REQUEST_TYPE.MULTIPART_ABORT, bucket, host, options.getKey(id))\n                .withUploadId(uploadId);\n\n        // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n        getSignatureAjaxRequester.getSignature(id, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n        return promise;\n    }\n\n    /**\n     * Called by the base ajax requester when the response has been received.  We definitively determine here if the\n     * \"Abort MPU\" request has been a success or not.\n     *\n     * @param id ID associated with the file.\n     * @param xhr `XMLHttpRequest` object containing the response, among other things.\n     * @param isError A boolean indicating success or failure according to the base ajax requester (primarily based on status code).\n     */\n    function handleAbortRequestComplete(id, xhr, isError) {\n        var domParser = new DOMParser(),\n            responseDoc = domParser.parseFromString(xhr.responseText, \"application/xml\"),\n            errorEls = responseDoc.getElementsByTagName(\"Error\"),\n            awsErrorMsg;\n\n        options.log(qq.format(\"Abort response status {}, body = {}\", xhr.status, xhr.responseText));\n\n        // If the base requester has determine this a failure, give up.\n        if (isError) {\n            options.log(qq.format(\"Abort Multipart Upload request for {} failed with status {}.\", id, xhr.status), \"error\");\n        }\n        else {\n            // Make sure the correct bucket and key has been specified in the XML response from AWS.\n            if (errorEls.length) {\n                isError = true;\n                awsErrorMsg = responseDoc.getElementsByTagName(\"Message\")[0].textContent;\n                options.log(qq.format(\"Failed to Abort Multipart Upload request for {}.  Error: {}\", id, awsErrorMsg), \"error\");\n            }\n            else {\n                options.log(qq.format(\"Abort MPU request succeeded for file ID {}.\", id));\n            }\n        }\n    }\n\n    requester = qq.extend(this, new qq.AjaxRequester({\n        validMethods: [\"DELETE\"],\n        method: options.method,\n        contentType: null,\n        endpointStore: options.endpointStore,\n        maxConnections: options.maxConnections,\n        allowXRequestedWithAndCacheControl: false, //These headers are not necessary & would break some installations if added\n        log: options.log,\n        onComplete: handleAbortRequestComplete,\n        successfulResponseCodes: {\n            DELETE: [204]\n        }\n    }));\n\n    qq.extend(this, {\n        /**\n         * Sends the \"Abort\" request.\n         *\n         * @param id ID associated with the file.\n         * @param uploadId AWS uploadId for this file\n         */\n        send: function(id, uploadId) {\n            getHeaders(id, uploadId).then(function(headers, endOfUrl) {\n                options.log(\"Submitting S3 Abort multipart upload request for \" + id);\n                requester.initTransport(id)\n                    .withPath(endOfUrl)\n                    .withHeaders(headers)\n                    .send();\n            });\n        }\n    });\n};\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that depends on File API support, and, therefore, makes use of\n * `XMLHttpRequest` level 2 to upload `File`s and `Blob`s directly to S3 buckets via the associated AWS API.\n *\n * If chunking is supported and enabled, the S3 Multipart Upload REST API is utilized.\n *\n * @param spec Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.XhrUploadHandler = function(spec, proxy) {\n    \"use strict\";\n\n    var getName = proxy.getName,\n        log = proxy.log,\n        clockDrift = spec.clockDrift,\n        expectedStatus = 200,\n        onGetBucket = spec.getBucket,\n        onGetHost = spec.getHost,\n        onGetKeyName = spec.getKeyName,\n        filenameParam = spec.filenameParam,\n        paramsStore = spec.paramsStore,\n        endpointStore = spec.endpointStore,\n        aclStore = spec.aclStore,\n        reducedRedundancy = spec.objectProperties.reducedRedundancy,\n        region = spec.objectProperties.region,\n        serverSideEncryption = spec.objectProperties.serverSideEncryption,\n        validation = spec.validation,\n        signature = qq.extend({region: region, drift: clockDrift}, spec.signature),\n        handler = this,\n        credentialsProvider = spec.signature.credentialsProvider,\n\n        chunked = {\n            // Sends a \"Complete Multipart Upload\" request and then signals completion of the upload\n            // when the response to this request has been parsed.\n            combine: function(id) {\n                var uploadId = handler._getPersistableData(id).uploadId,\n                    etagMap = handler._getPersistableData(id).etags,\n                    result = new qq.Promise();\n\n                requesters.completeMultipart.send(id, uploadId, etagMap).then(\n                    result.success,\n\n                    function failure(reason, xhr) {\n                        result.failure(upload.done(id, xhr).response, xhr);\n                    }\n                );\n\n                return result;\n            },\n\n            // The last step in handling a chunked upload.  This is called after each chunk has been sent.\n            // The request may be successful, or not.  If it was successful, we must extract the \"ETag\" element\n            // in the XML response and store that along with the associated part number.\n            // We need these items to \"Complete\" the multipart upload after all chunks have been successfully sent.\n            done: function(id, xhr, chunkIdx) {\n                var response = upload.response.parse(id, xhr),\n                    etag;\n\n                if (response.success) {\n                    etag = xhr.getResponseHeader(\"ETag\");\n\n                    if (!handler._getPersistableData(id).etags) {\n                        handler._getPersistableData(id).etags = [];\n                    }\n                    handler._getPersistableData(id).etags.push({part: chunkIdx + 1, etag: etag});\n                }\n            },\n\n            /**\n             * Determines headers that must be attached to the chunked (Multipart Upload) request.  One of these headers is an\n             * Authorization value, which must be determined by asking the local server to sign the request first.  So, this\n             * function returns a promise.  Once all headers are determined, the `success` method of the promise is called with\n             * the headers object.  If there was some problem determining the headers, we delegate to the caller's `failure`\n             * callback.\n             *\n             * @param id File ID\n             * @param chunkIdx Index of the chunk to PUT\n             * @returns {qq.Promise}\n             */\n            initHeaders: function(id, chunkIdx, blob) {\n                var headers = {},\n                    bucket = upload.bucket.getName(id),\n                    host = upload.host.getName(id),\n                    key = upload.key.urlSafe(id),\n                    promise = new qq.Promise(),\n                    signatureConstructor = requesters.restSignature.constructStringToSign\n                        (requesters.restSignature.REQUEST_TYPE.MULTIPART_UPLOAD, bucket, host, key)\n                        .withPartNum(chunkIdx + 1)\n                        .withContent(blob)\n                        .withUploadId(handler._getPersistableData(id).uploadId);\n\n                // Ask the local server to sign the request.  Use this signature to form the Authorization header.\n                requesters.restSignature.getSignature(id + \".\" + chunkIdx, {signatureConstructor: signatureConstructor}).then(promise.success, promise.failure);\n\n                return promise;\n            },\n\n            put: function(id, chunkIdx) {\n                var xhr = handler._createXhr(id, chunkIdx),\n                    chunkData = handler._getChunkData(id, chunkIdx),\n                    domain = spec.endpointStore.get(id),\n                    promise = new qq.Promise();\n\n                // Add appropriate headers to the multipart upload request.\n                // Once these have been determined (asynchronously) attach the headers and send the chunk.\n                chunked.initHeaders(id, chunkIdx, chunkData.blob).then(function(headers, endOfUrl) {\n                    if (xhr._cancelled) {\n                        log(qq.format(\"Upload of item {}.{} cancelled. Upload will not start after successful signature request.\", id, chunkIdx));\n                        promise.failure({error: \"Chunk upload cancelled\"});\n                    }\n                    else {\n                        var url = domain + \"/\" + endOfUrl;\n                        handler._registerProgressHandler(id, chunkIdx, chunkData.size);\n                        upload.track(id, xhr, chunkIdx).then(promise.success, promise.failure);\n                        xhr.open(\"PUT\", url, true);\n\n                        var hasContentType = false;\n                        qq.each(headers, function(name, val) {\n                            if (name === \"Content-Type\") {\n                                hasContentType = true;\n                            }\n\n                            xhr.setRequestHeader(name, val);\n                        });\n\n                        // Workaround for IE Edge\n                        if (!hasContentType) {\n                            xhr.setRequestHeader(\"Content-Type\", \"\");\n                        }\n\n                        xhr.send(chunkData.blob);\n                    }\n                }, function() {\n                    promise.failure({error: \"Problem signing the chunk!\"}, xhr);\n                });\n\n                return promise;\n            },\n\n            send: function(id, chunkIdx) {\n                var promise = new qq.Promise();\n\n                chunked.setup(id).then(\n                    // The \"Initiate\" request succeeded.  We are ready to send the first chunk.\n                    function() {\n                        chunked.put(id, chunkIdx).then(promise.success, promise.failure);\n                    },\n\n                    // We were unable to initiate the chunked upload process.\n                    function(errorMessage, xhr) {\n                        promise.failure({error: errorMessage}, xhr);\n                    }\n                );\n\n                return promise;\n            },\n\n            /**\n             * Sends an \"Initiate Multipart Upload\" request to S3 via the REST API, but only if the MPU has not already been\n             * initiated.\n             *\n             * @param id Associated file ID\n             * @returns {qq.Promise} A promise that is fulfilled when the initiate request has been sent and the response has been parsed.\n             */\n            setup: function(id) {\n                var promise = new qq.Promise(),\n                    uploadId = handler._getPersistableData(id).uploadId,\n                    uploadIdPromise = new qq.Promise();\n\n                if (!uploadId) {\n                    handler._getPersistableData(id).uploadId = uploadIdPromise;\n                    requesters.initiateMultipart.send(id).then(\n                        function(uploadId) {\n                            handler._getPersistableData(id).uploadId = uploadId;\n                            uploadIdPromise.success(uploadId);\n                            promise.success(uploadId);\n                        },\n                        function(errorMsg, xhr) {\n                            handler._getPersistableData(id).uploadId = null;\n                            promise.failure(errorMsg, xhr);\n                            uploadIdPromise.failure(errorMsg, xhr);\n                        }\n                    );\n                }\n                else if (uploadId instanceof qq.Promise) {\n                    uploadId.then(function(uploadId) {\n                        promise.success(uploadId);\n                    });\n                }\n                else {\n                    promise.success(uploadId);\n                }\n\n                return promise;\n            }\n        },\n\n        requesters = {\n            abortMultipart: new qq.s3.AbortMultipartAjaxRequester({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log,\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                }\n            }),\n\n            completeMultipart: new qq.s3.CompleteMultipartAjaxRequester({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log,\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                }\n            }),\n\n            initiateMultipart: new qq.s3.InitiateMultipartAjaxRequester({\n                filenameParam: filenameParam,\n                endpointStore: endpointStore,\n                paramsStore: paramsStore,\n                signatureSpec: signature,\n                aclStore: aclStore,\n                reducedRedundancy: reducedRedundancy,\n                serverSideEncryption: serverSideEncryption,\n                cors: spec.cors,\n                log: log,\n                getContentType: function(id) {\n                    return handler._getMimeType(id);\n                },\n                getBucket: function(id) {\n                    return upload.bucket.getName(id);\n                },\n                getHost: function(id) {\n                    return upload.host.getName(id);\n                },\n                getKey: function(id) {\n                    return upload.key.urlSafe(id);\n                },\n                getName: function(id) {\n                    return getName(id);\n                }\n            }),\n\n            policySignature: new qq.s3.RequestSigner({\n                expectingPolicy: true,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log\n            }),\n\n            restSignature: new qq.s3.RequestSigner({\n                endpointStore: endpointStore,\n                signatureSpec: signature,\n                cors: spec.cors,\n                log: log\n            })\n        },\n\n        simple = {\n            /**\n             * Used for simple (non-chunked) uploads to determine the parameters to send along with the request.  Part of this\n             * process involves asking the local server to sign the request, so this function returns a promise.  The promise\n             * is fulfilled when all parameters are determined, or when we determine that all parameters cannot be calculated\n             * due to some error.\n             *\n             * @param id File ID\n             * @returns {qq.Promise}\n             */\n            initParams: function(id) {\n                /*jshint -W040 */\n                var customParams = paramsStore.get(id);\n                customParams[filenameParam] = getName(id);\n\n                return qq.s3.util.generateAwsParams({\n                    endpoint: endpointStore.get(id),\n                    clockDrift: clockDrift,\n                    params: customParams,\n                    type: handler._getMimeType(id),\n                    bucket: upload.bucket.getName(id),\n                    key: handler.getThirdPartyFileId(id),\n                    accessKey: credentialsProvider.get().accessKey,\n                    sessionToken: credentialsProvider.get().sessionToken,\n                    acl: aclStore.get(id),\n                    expectedStatus: expectedStatus,\n                    minFileSize: validation.minSizeLimit,\n                    maxFileSize: validation.maxSizeLimit,\n                    reducedRedundancy: reducedRedundancy,\n                    region: region,\n                    serverSideEncryption: serverSideEncryption,\n                    signatureVersion: signature.version,\n                    log: log\n                },\n                qq.bind(requesters.policySignature.getSignature, this, id));\n            },\n\n            send: function(id) {\n                var promise = new qq.Promise(),\n                    xhr = handler._createXhr(id),\n                    fileOrBlob = handler.getFile(id);\n\n                handler._registerProgressHandler(id);\n                upload.track(id, xhr).then(promise.success, promise.failure);\n\n                // Delegate to a function the sets up the XHR request and notifies us when it is ready to be sent, along w/ the payload.\n                simple.setup(id, xhr, fileOrBlob).then(function(toSend) {\n                    log(\"Sending upload request for \" + id);\n                    xhr.send(toSend);\n                }, promise.failure);\n\n                return promise;\n            },\n\n            /**\n             * Starts the upload process by delegating to an async function that determine parameters to be attached to the\n             * request.  If all params can be determined, we are called back with the params and the caller of this function is\n             * informed by invoking the `success` method on the promise returned by this function, passing the payload of the\n             * request.  If some error occurs here, we delegate to a function that signals a failure for this upload attempt.\n             *\n             * Note that this is only used by the simple (non-chunked) upload process.\n             *\n             * @param id File ID\n             * @param xhr XMLHttpRequest to use for the upload\n             * @param fileOrBlob `File` or `Blob` to send\n             * @returns {qq.Promise}\n             */\n            setup: function(id, xhr, fileOrBlob) {\n                var formData = new FormData(),\n                    endpoint = endpointStore.get(id),\n                    url = endpoint,\n                    promise = new qq.Promise();\n\n                simple.initParams(id).then(\n                    // Success - all params determined\n                    function(awsParams) {\n                        xhr.open(\"POST\", url, true);\n\n                        qq.obj2FormData(awsParams, formData);\n\n                        // AWS requires the file field be named \"file\".\n                        formData.append(\"file\", fileOrBlob);\n\n                        promise.success(formData);\n                    },\n\n                    // Failure - we couldn't determine some params (likely the signature)\n                    function(errorMessage) {\n                        promise.failure({error: errorMessage});\n                    }\n                );\n\n                return promise;\n            }\n        },\n\n        upload = {\n            /**\n             * Note that this is called when an upload has reached a termination point,\n             * regardless of success/failure.  For example, it is called when we have\n             * encountered an error during the upload or when the file may have uploaded successfully.\n             *\n             * @param id file ID\n             */\n            bucket: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        cachedBucket = handler._getFileState(id).bucket;\n\n                    if (cachedBucket) {\n                        promise.success(cachedBucket);\n                    }\n                    else {\n                        onGetBucket(id).then(function(bucket) {\n                            handler._getFileState(id).bucket = bucket;\n                            promise.success(bucket);\n                        }, promise.failure);\n                    }\n\n                    return promise;\n                },\n\n                getName: function(id) {\n                    return handler._getFileState(id).bucket;\n                }\n            },\n\n            host: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        cachedHost = handler._getFileState(id).host;\n\n                    if (cachedHost) {\n                        promise.success(cachedHost);\n                    }\n                    else {\n                        onGetHost(id).then(function(host) {\n                            handler._getFileState(id).host = host;\n                            promise.success(host);\n                        }, promise.failure);\n                    }\n\n                    return promise;\n                },\n\n                getName: function(id) {\n                    return handler._getFileState(id).host;\n                }\n            },\n\n            done: function(id, xhr) {\n                var response = upload.response.parse(id, xhr),\n                    isError = response.success !== true;\n\n                if (isError && upload.response.shouldReset(response.code)) {\n                    log(\"This is an unrecoverable error, we must restart the upload entirely on the next retry attempt.\", \"error\");\n                    response.reset = true;\n                }\n\n                return {\n                    success: !isError,\n                    response: response\n                };\n            },\n\n            key: {\n                promise: function(id) {\n                    var promise = new qq.Promise(),\n                        key = handler.getThirdPartyFileId(id);\n\n                    /* jshint eqnull:true */\n                    if (key == null) {\n                        handler._setThirdPartyFileId(id, promise);\n                        onGetKeyName(id, getName(id)).then(\n                            function(keyName) {\n                                handler._setThirdPartyFileId(id, keyName);\n                                promise.success(keyName);\n                            },\n                            function(errorReason) {\n                                handler._setThirdPartyFileId(id, null);\n                                promise.failure(errorReason);\n                            }\n                        );\n                    }\n                    else if (qq.isGenericPromise(key)) {\n                        key.then(promise.success, promise.failure);\n                    }\n                    else {\n                        promise.success(key);\n                    }\n\n                    return promise;\n                },\n\n                urlSafe: function(id) {\n                    var encodedKey = handler.getThirdPartyFileId(id);\n                    return qq.s3.util.uriEscapePath(encodedKey);\n                }\n            },\n\n            response: {\n                parse: function(id, xhr) {\n                    var response = {},\n                        parsedErrorProps;\n\n                    try {\n                        log(qq.format(\"Received response status {} with body: {}\", xhr.status, xhr.responseText));\n\n                        if (xhr.status === expectedStatus) {\n                            response.success = true;\n                        }\n                        else {\n                            parsedErrorProps = upload.response.parseError(xhr.responseText);\n\n                            if (parsedErrorProps) {\n                                response.error = parsedErrorProps.message;\n                                response.code = parsedErrorProps.code;\n                            }\n                        }\n                    }\n                    catch (error) {\n                        log(\"Error when attempting to parse xhr response text (\" + error.message + \")\", \"error\");\n                    }\n\n                    return response;\n                },\n\n                /**\n                 * This parses an XML response by extracting the \"Message\" and \"Code\" elements that accompany AWS error responses.\n                 *\n                 * @param awsResponseXml XML response from AWS\n                 * @returns {object} Object w/ `code` and `message` properties, or undefined if we couldn't find error info in the XML document.\n                 */\n                parseError: function(awsResponseXml) {\n                    var parser = new DOMParser(),\n                        parsedDoc = parser.parseFromString(awsResponseXml, \"application/xml\"),\n                        errorEls = parsedDoc.getElementsByTagName(\"Error\"),\n                        errorDetails = {},\n                        codeEls, messageEls;\n\n                    if (errorEls.length) {\n                        codeEls = parsedDoc.getElementsByTagName(\"Code\");\n                        messageEls = parsedDoc.getElementsByTagName(\"Message\");\n\n                        if (messageEls.length) {\n                            errorDetails.message = messageEls[0].textContent;\n                        }\n\n                        if (codeEls.length) {\n                            errorDetails.code = codeEls[0].textContent;\n                        }\n\n                        return errorDetails;\n                    }\n                },\n\n                // Determine if the upload should be restarted on the next retry attempt\n                // based on the error code returned in the response from AWS.\n                shouldReset: function(errorCode) {\n                    /*jshint -W014 */\n                    return errorCode === \"EntityTooSmall\"\n                        || errorCode === \"InvalidPart\"\n                        || errorCode === \"InvalidPartOrder\"\n                        || errorCode === \"NoSuchUpload\";\n                }\n            },\n\n            start: function(params) {\n                var id = params.id;\n                var optChunkIdx = params.chunkIdx;\n\n                var promise = new qq.Promise();\n\n                upload.key.promise(id).then(function() {\n                    upload.bucket.promise(id).then(function() {\n                        upload.host.promise(id).then(function() {\n                            /* jshint eqnull:true */\n                            if (optChunkIdx == null) {\n                                simple.send(id).then(promise.success, promise.failure);\n                            }\n                            else {\n                                chunked.send(id, optChunkIdx).then(promise.success, promise.failure);\n                            }\n                        });\n                    });\n                },\n                function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n\n                return promise;\n            },\n\n            track: function(id, xhr, optChunkIdx) {\n                var promise = new qq.Promise();\n\n                xhr.onreadystatechange = function() {\n                    if (xhr.readyState === 4) {\n                        var result;\n\n                        /* jshint eqnull:true */\n                        if (optChunkIdx == null) {\n                            result = upload.done(id, xhr);\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\n                        }\n                        else {\n                            chunked.done(id, xhr, optChunkIdx);\n                            result = upload.done(id, xhr);\n                            promise[result.success ? \"success\" : \"failure\"](result.response, xhr);\n                        }\n                    }\n                };\n\n                return promise;\n            }\n        };\n\n    qq.extend(this, {\n        uploadChunk: upload.start,\n        uploadFile: function(id) {\n            return upload.start({ id: id });\n        }\n    });\n\n    qq.extend(this, new qq.XhrUploadHandler({\n        options: qq.extend({namespace: \"s3\"}, spec),\n        proxy: qq.extend({getEndpoint: spec.endpointStore.get}, proxy)\n    }));\n\n    qq.override(this, function(super_) {\n        return {\n            expunge: function(id) {\n                var uploadId = handler._getPersistableData(id) && handler._getPersistableData(id).uploadId,\n                    existedInLocalStorage = handler._maybeDeletePersistedChunkData(id);\n\n                if (uploadId !== undefined && existedInLocalStorage) {\n                    requesters.abortMultipart.send(id, uploadId);\n                }\n\n                super_.expunge(id);\n            },\n\n            finalizeChunks: function(id) {\n                return chunked.combine(id);\n            },\n\n            _getLocalStorageId: function(id) {\n                var baseStorageId = super_._getLocalStorageId(id),\n                    bucketName = upload.bucket.getName(id);\n\n                return baseStorageId + \"-\" + bucketName;\n            }\n        };\n    });\n};\n","/*globals qq */\n/**\n * Upload handler used by the upload to S3 module that assumes the current user agent does not have any support for the\n * File API, and, therefore, makes use of iframes and forms to submit the files directly to S3 buckets via the associated\n * AWS API.\n *\n * @param options Options passed from the base handler\n * @param proxy Callbacks & methods used to query for or push out data/changes\n */\nqq.s3.FormUploadHandler = function(options, proxy) {\n    \"use strict\";\n\n    var handler = this,\n        clockDrift = options.clockDrift,\n        onUuidChanged = proxy.onUuidChanged,\n        getName = proxy.getName,\n        getUuid = proxy.getUuid,\n        log = proxy.log,\n        onGetBucket = options.getBucket,\n        onGetKeyName = options.getKeyName,\n        filenameParam = options.filenameParam,\n        paramsStore = options.paramsStore,\n        endpointStore = options.endpointStore,\n        aclStore = options.aclStore,\n        reducedRedundancy = options.objectProperties.reducedRedundancy,\n        region = options.objectProperties.region,\n        serverSideEncryption = options.objectProperties.serverSideEncryption,\n        validation = options.validation,\n        signature = options.signature,\n        successRedirectUrl = options.iframeSupport.localBlankPagePath,\n        credentialsProvider = options.signature.credentialsProvider,\n        getSignatureAjaxRequester = new qq.s3.RequestSigner({\n            signatureSpec: signature,\n            cors: options.cors,\n            log: log\n        });\n\n    if (successRedirectUrl === undefined) {\n        throw new Error(\"successRedirectEndpoint MUST be defined if you intend to use browsers that do not support the File API!\");\n    }\n\n    /**\n     * Attempt to parse the contents of an iframe after receiving a response from the server.  If the contents cannot be\n     * read (perhaps due to a security error) it is safe to assume that the upload was not successful since Amazon should\n     * have redirected to a known endpoint that should provide a parseable response.\n     *\n     * @param id ID of the associated file\n     * @param iframe target of the form submit\n     * @returns {boolean} true if the contents can be read, false otherwise\n     */\n    function isValidResponse(id, iframe) {\n        var response,\n            endpoint = options.endpointStore.get(id),\n            bucket = handler._getFileState(id).bucket,\n            doc,\n            innerHtml,\n            responseData;\n\n        //IE may throw an \"access is denied\" error when attempting to access contentDocument on the iframe in some cases\n        try {\n            // iframe.contentWindow.document - for IE<7\n            doc = iframe.contentDocument || iframe.contentWindow.document;\n            innerHtml = doc.body.innerHTML;\n\n            responseData = qq.s3.util.parseIframeResponse(iframe);\n            if (responseData.bucket === bucket &&\n                responseData.key === qq.s3.util.encodeQueryStringParam(handler.getThirdPartyFileId(id))) {\n\n                return true;\n            }\n\n            log(\"Response from AWS included an unexpected bucket or key name.\", \"error\");\n\n        }\n        catch (error) {\n            log(\"Error when attempting to parse form upload response (\" + error.message + \")\", \"error\");\n        }\n\n        return false;\n    }\n\n    function generateAwsParams(id) {\n        /*jshint -W040 */\n        var customParams = paramsStore.get(id);\n\n        customParams[filenameParam] = getName(id);\n\n        return qq.s3.util.generateAwsParams({\n            endpoint: endpointStore.get(id),\n            clockDrift: clockDrift,\n            params: customParams,\n            bucket: handler._getFileState(id).bucket,\n            key: handler.getThirdPartyFileId(id),\n            accessKey: credentialsProvider.get().accessKey,\n            sessionToken: credentialsProvider.get().sessionToken,\n            acl: aclStore.get(id),\n            minFileSize: validation.minSizeLimit,\n            maxFileSize: validation.maxSizeLimit,\n            successRedirectUrl: successRedirectUrl,\n            reducedRedundancy: reducedRedundancy,\n            region: region,\n            serverSideEncryption: serverSideEncryption,\n            signatureVersion: signature.version,\n            log: log\n        },\n        qq.bind(getSignatureAjaxRequester.getSignature, this, id));\n    }\n\n    /**\n     * Creates form, that will be submitted to iframe\n     */\n    function createForm(id, iframe) {\n        var promise = new qq.Promise(),\n            method = \"POST\",\n            endpoint = options.endpointStore.get(id),\n            fileName = getName(id);\n\n        generateAwsParams(id).then(function(params) {\n            var form = handler._initFormForUpload({\n                method: method,\n                endpoint: endpoint,\n                params: params,\n                paramsInBody: true,\n                targetName: iframe.name\n            });\n\n            promise.success(form);\n        }, function(errorMessage) {\n            promise.failure(errorMessage);\n            handleFinishedUpload(id, iframe, fileName, {error: errorMessage});\n        });\n\n        return promise;\n    }\n\n    function handleUpload(id) {\n        var iframe = handler._createIframe(id),\n            input = handler.getInput(id),\n            promise = new qq.Promise();\n\n        createForm(id, iframe).then(function(form) {\n            form.appendChild(input);\n\n            // Register a callback when the response comes in from S3\n            handler._attachLoadEvent(iframe, function(response) {\n                log(\"iframe loaded\");\n\n                // If the common response handler has determined success or failure immediately\n                if (response) {\n                    // If there is something fundamentally wrong with the response (such as iframe content is not accessible)\n                    if (response.success === false) {\n                        log(\"Amazon likely rejected the upload request\", \"error\");\n                        promise.failure(response);\n                    }\n                }\n                // The generic response (iframe onload) handler was not able to make a determination regarding the success of the request\n                else {\n                    response = {};\n                    response.success = isValidResponse(id, iframe);\n\n                    // If the more specific response handle detected a problem with the response from S3\n                    if (response.success === false) {\n                        log(\"A success response was received by Amazon, but it was invalid in some way.\", \"error\");\n                        promise.failure(response);\n                    }\n                    else {\n                        qq.extend(response, qq.s3.util.parseIframeResponse(iframe));\n                        promise.success(response);\n                    }\n                }\n\n                handleFinishedUpload(id, iframe);\n            });\n\n            log(\"Sending upload request for \" + id);\n            form.submit();\n            qq(form).remove();\n        }, promise.failure);\n\n        return promise;\n    }\n\n    function handleFinishedUpload(id, iframe) {\n        handler._detachLoadEvent(id);\n        iframe && qq(iframe).remove();\n    }\n\n    qq.extend(this, new qq.FormUploadHandler({\n        options: {\n            isCors: false,\n            inputName: \"file\"\n        },\n\n        proxy: {\n            onCancel: options.onCancel,\n            onUuidChanged: onUuidChanged,\n            getName: getName,\n            getUuid: getUuid,\n            log: log\n        }\n    }));\n\n    qq.extend(this, {\n        uploadFile: function(id) {\n            var name = getName(id),\n                promise = new qq.Promise();\n\n            if (handler.getThirdPartyFileId(id)) {\n                if (handler._getFileState(id).bucket) {\n                    handleUpload(id).then(promise.success, promise.failure);\n                }\n                else {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handleUpload(id).then(promise.success, promise.failure);\n                    });\n                }\n            }\n            else {\n                // The S3 uploader module will either calculate the key or ask the server for it\n                // and will call us back once it is known.\n                onGetKeyName(id, name).then(function(key) {\n                    onGetBucket(id).then(function(bucket) {\n                        handler._getFileState(id).bucket = bucket;\n                        handler._setThirdPartyFileId(id, key);\n                        handleUpload(id).then(promise.success, promise.failure);\n                    }, function(errorReason) {\n                        promise.failure({error: errorReason});\n                    });\n                }, function(errorReason) {\n                    promise.failure({error: errorReason});\n                });\n            }\n\n            return promise;\n        }\n    });\n};\n","/*globals qq, document, CustomEvent*/\nqq.DragAndDrop = function(o) {\n    \"use strict\";\n\n    var options,\n        HIDE_ZONES_EVENT_NAME = \"qq-hidezones\",\n        HIDE_BEFORE_ENTER_ATTR = \"qq-hide-dropzone\",\n        uploadDropZones = [],\n        droppedFiles = [],\n        disposeSupport = new qq.DisposeSupport();\n\n    options = {\n        dropZoneElements: [],\n        allowMultipleItems: true,\n        classes: {\n            dropActive: null\n        },\n        callbacks: new qq.DragAndDrop.callbacks()\n    };\n\n    qq.extend(options, o, true);\n\n    function uploadDroppedFiles(files, uploadDropZone) {\n        // We need to convert the `FileList` to an actual `Array` to avoid iteration issues\n        var filesAsArray = Array.prototype.slice.call(files);\n\n        options.callbacks.dropLog(\"Grabbed \" + files.length + \" dropped files.\");\n        uploadDropZone.dropDisabled(false);\n        options.callbacks.processingDroppedFilesComplete(filesAsArray, uploadDropZone.getElement());\n    }\n\n    function traverseFileTree(entry) {\n        var parseEntryPromise = new qq.Promise();\n\n        if (entry.isFile) {\n            entry.file(function(file) {\n                var name = entry.name,\n                    fullPath = entry.fullPath,\n                    indexOfNameInFullPath = fullPath.indexOf(name);\n\n                // remove file name from full path string\n                fullPath = fullPath.substr(0, indexOfNameInFullPath);\n\n                // remove leading slash in full path string\n                if (fullPath.charAt(0) === \"/\") {\n                    fullPath = fullPath.substr(1);\n                }\n\n                file.qqPath = fullPath;\n                droppedFiles.push(file);\n                parseEntryPromise.success();\n            },\n            function(fileError) {\n                options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                parseEntryPromise.failure();\n            });\n        }\n        else if (entry.isDirectory) {\n            getFilesInDirectory(entry).then(\n                function allEntriesRead(entries) {\n                    var entriesLeft = entries.length;\n\n                    qq.each(entries, function(idx, entry) {\n                        traverseFileTree(entry).done(function() {\n                            entriesLeft -= 1;\n\n                            if (entriesLeft === 0) {\n                                parseEntryPromise.success();\n                            }\n                        });\n                    });\n\n                    if (!entries.length) {\n                        parseEntryPromise.success();\n                    }\n                },\n\n                function readFailure(fileError) {\n                    options.callbacks.dropLog(\"Problem parsing '\" + entry.fullPath + \"'.  FileError code \" + fileError.code + \".\", \"error\");\n                    parseEntryPromise.failure();\n                }\n            );\n        }\n\n        return parseEntryPromise;\n    }\n\n    // Promissory.  Guaranteed to read all files in the root of the passed directory.\n    function getFilesInDirectory(entry, reader, accumEntries, existingPromise) {\n        var promise = existingPromise || new qq.Promise(),\n            dirReader = reader || entry.createReader();\n\n        dirReader.readEntries(\n            function readSuccess(entries) {\n                var newEntries = accumEntries ? accumEntries.concat(entries) : entries;\n\n                if (entries.length) {\n                    setTimeout(function() { // prevent stack overflow, however unlikely\n                        getFilesInDirectory(entry, dirReader, newEntries, promise);\n                    }, 0);\n                }\n                else {\n                    promise.success(newEntries);\n                }\n            },\n\n            promise.failure\n        );\n\n        return promise;\n    }\n\n    function handleDataTransfer(dataTransfer, uploadDropZone) {\n        var pendingFolderPromises = [],\n            handleDataTransferPromise = new qq.Promise();\n\n        options.callbacks.processingDroppedFiles();\n        uploadDropZone.dropDisabled(true);\n\n        if (dataTransfer.files.length > 1 && !options.allowMultipleItems) {\n            options.callbacks.processingDroppedFilesComplete([]);\n            options.callbacks.dropError(\"tooManyFilesError\", \"\");\n            uploadDropZone.dropDisabled(false);\n            handleDataTransferPromise.failure();\n        }\n        else {\n            droppedFiles = [];\n\n            if (qq.isFolderDropSupported(dataTransfer)) {\n                qq.each(dataTransfer.items, function(idx, item) {\n                    var entry = item.webkitGetAsEntry();\n\n                    if (entry) {\n                        //due to a bug in Chrome's File System API impl - #149735\n                        if (entry.isFile) {\n                            droppedFiles.push(item.getAsFile());\n                        }\n\n                        else {\n                            pendingFolderPromises.push(traverseFileTree(entry).done(function() {\n                                pendingFolderPromises.pop();\n                                if (pendingFolderPromises.length === 0) {\n                                    handleDataTransferPromise.success();\n                                }\n                            }));\n                        }\n                    }\n                });\n            }\n            else {\n                droppedFiles = dataTransfer.files;\n            }\n\n            if (pendingFolderPromises.length === 0) {\n                handleDataTransferPromise.success();\n            }\n        }\n\n        return handleDataTransferPromise;\n    }\n\n    function setupDropzone(dropArea) {\n        var dropZone = new qq.UploadDropZone({\n            HIDE_ZONES_EVENT_NAME: HIDE_ZONES_EVENT_NAME,\n            element: dropArea,\n            onEnter: function(e) {\n                qq(dropArea).addClass(options.classes.dropActive);\n                e.stopPropagation();\n            },\n            onLeaveNotDescendants: function(e) {\n                qq(dropArea).removeClass(options.classes.dropActive);\n            },\n            onDrop: function(e) {\n                handleDataTransfer(e.dataTransfer, dropZone).then(\n                    function() {\n                        uploadDroppedFiles(droppedFiles, dropZone);\n                    },\n                    function() {\n                        options.callbacks.dropLog(\"Drop event DataTransfer parsing failed.  No files will be uploaded.\", \"error\");\n                    }\n                );\n            }\n        });\n\n        disposeSupport.addDisposer(function() {\n            dropZone.dispose();\n        });\n\n        qq(dropArea).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropArea).hide();\n\n        uploadDropZones.push(dropZone);\n\n        return dropZone;\n    }\n\n    function isFileDrag(dragEvent) {\n        var fileDrag;\n\n        qq.each(dragEvent.dataTransfer.types, function(key, val) {\n            if (val === \"Files\") {\n                fileDrag = true;\n                return false;\n            }\n        });\n\n        return fileDrag;\n    }\n\n    // Attempt to determine when the file has left the document.  It is not always possible to detect this\n    // in all cases, but it is generally possible in all browsers, with a few exceptions.\n    //\n    // Exceptions:\n    // * IE10+ & Safari: We can't detect a file leaving the document if the Explorer window housing the file\n    //                   overlays the browser window.\n    // * IE10+: If the file is dragged out of the window too quickly, IE does not set the expected values of the\n    //          event's X & Y properties.\n    function leavingDocumentOut(e) {\n        if (qq.firefox()) {\n            return !e.relatedTarget;\n        }\n\n        if (qq.safari()) {\n            return e.x < 0 || e.y < 0;\n        }\n\n        return e.x === 0 && e.y === 0;\n    }\n\n    function setupDragDrop() {\n        var dropZones = options.dropZoneElements,\n\n            maybeHideDropZones = function() {\n                setTimeout(function() {\n                    qq.each(dropZones, function(idx, dropZone) {\n                        qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR) && qq(dropZone).hide();\n                        qq(dropZone).removeClass(options.classes.dropActive);\n                    });\n                }, 10);\n            };\n\n        qq.each(dropZones, function(idx, dropZone) {\n            var uploadDropZone = setupDropzone(dropZone);\n\n            // IE <= 9 does not support the File API used for drag+drop uploads\n            if (dropZones.length && qq.supportedFeatures.fileDrop) {\n                disposeSupport.attach(document, \"dragenter\", function(e) {\n                    if (!uploadDropZone.dropDisabled() && isFileDrag(e)) {\n                        qq.each(dropZones, function(idx, dropZone) {\n                            // We can't apply styles to non-HTMLElements, since they lack the `style` property.\n                            // Also, if the drop zone isn't initially hidden, let's not mess with `style.display`.\n                            if (dropZone instanceof HTMLElement &&\n                                qq(dropZone).hasAttribute(HIDE_BEFORE_ENTER_ATTR)) {\n\n                                qq(dropZone).css({display: \"block\"});\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        disposeSupport.attach(document, \"dragleave\", function(e) {\n            if (leavingDocumentOut(e)) {\n                maybeHideDropZones();\n            }\n        });\n\n        // Just in case we were not able to detect when a dragged file has left the document,\n        // hide all relevant drop zones the next time the mouse enters the document.\n        // Note that mouse events such as this one are not fired during drag operations.\n        disposeSupport.attach(qq(document).children()[0], \"mouseenter\", function(e) {\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, \"drop\", function(e) {\n            e.preventDefault();\n            maybeHideDropZones();\n        });\n\n        disposeSupport.attach(document, HIDE_ZONES_EVENT_NAME, maybeHideDropZones);\n    }\n\n    setupDragDrop();\n\n    qq.extend(this, {\n        setupExtraDropzone: function(element) {\n            options.dropZoneElements.push(element);\n            setupDropzone(element);\n        },\n\n        removeDropzone: function(element) {\n            var i,\n                dzs = options.dropZoneElements;\n\n            for (i in dzs) {\n                if (dzs[i] === element) {\n                    return dzs.splice(i, 1);\n                }\n            }\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n            qq.each(uploadDropZones, function(idx, dropZone) {\n                dropZone.dispose();\n            });\n        }\n    });\n};\n\nqq.DragAndDrop.callbacks = function() {\n    \"use strict\";\n\n    return {\n        processingDroppedFiles: function() {},\n        processingDroppedFilesComplete: function(files, targetEl) {},\n        dropError: function(code, errorSpecifics) {\n            qq.log(\"Drag & drop error code '\" + code + \" with these specifics: '\" + errorSpecifics + \"'\", \"error\");\n        },\n        dropLog: function(message, level) {\n            qq.log(message, level);\n        }\n    };\n};\n\nqq.UploadDropZone = function(o) {\n    \"use strict\";\n\n    var disposeSupport = new qq.DisposeSupport(),\n        options, element, preventDrop, dropOutsideDisabled;\n\n    options = {\n        element: null,\n        onEnter: function(e) {},\n        onLeave: function(e) {},\n        // is not fired when leaving element by hovering descendants\n        onLeaveNotDescendants: function(e) {},\n        onDrop: function(e) {}\n    };\n\n    qq.extend(options, o);\n    element = options.element;\n\n    function dragoverShouldBeCanceled() {\n        return qq.safari() || (qq.firefox() && qq.windows());\n    }\n\n    function disableDropOutside(e) {\n        // run only once for all instances\n        if (!dropOutsideDisabled) {\n\n            // for these cases we need to catch onDrop to reset dropArea\n            if (dragoverShouldBeCanceled) {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    e.preventDefault();\n                });\n            } else {\n                disposeSupport.attach(document, \"dragover\", function(e) {\n                    if (e.dataTransfer) {\n                        e.dataTransfer.dropEffect = \"none\";\n                        e.preventDefault();\n                    }\n                });\n            }\n\n            dropOutsideDisabled = true;\n        }\n    }\n\n    function isValidFileDrag(e) {\n        // e.dataTransfer currently causing IE errors\n        // IE9 does NOT support file API, so drag-and-drop is not possible\n        if (!qq.supportedFeatures.fileDrop) {\n            return false;\n        }\n\n        var effectTest, dt = e.dataTransfer,\n        // do not check dt.types.contains in webkit, because it crashes safari 4\n        isSafari = qq.safari();\n\n        // dt.effectAllowed is none in Safari 5\n        // dt.types.contains check is for firefox\n\n        // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n        // the filesystem\n        effectTest = qq.ie() && qq.supportedFeatures.fileDrop ? true : dt.effectAllowed !== \"none\";\n        return dt && effectTest && (dt.files || (!isSafari && dt.types.contains && dt.types.contains(\"Files\")));\n    }\n\n    function isOrSetDropDisabled(isDisabled) {\n        if (isDisabled !== undefined) {\n            preventDrop = isDisabled;\n        }\n        return preventDrop;\n    }\n\n    function triggerHidezonesEvent() {\n        var hideZonesEvent;\n\n        function triggerUsingOldApi() {\n            hideZonesEvent = document.createEvent(\"Event\");\n            hideZonesEvent.initEvent(options.HIDE_ZONES_EVENT_NAME, true, true);\n        }\n\n        if (window.CustomEvent) {\n            try {\n                hideZonesEvent = new CustomEvent(options.HIDE_ZONES_EVENT_NAME);\n            }\n            catch (err) {\n                triggerUsingOldApi();\n            }\n        }\n        else {\n            triggerUsingOldApi();\n        }\n\n        document.dispatchEvent(hideZonesEvent);\n    }\n\n    function attachEvents() {\n        disposeSupport.attach(element, \"dragover\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            // dt.effectAllowed crashes IE 11 & 10 when files have been dragged from\n            // the filesystem\n            var effect = qq.ie() && qq.supportedFeatures.fileDrop ? null : e.dataTransfer.effectAllowed;\n            if (effect === \"move\" || effect === \"linkMove\") {\n                e.dataTransfer.dropEffect = \"move\"; // for FF (only move allowed)\n            } else {\n                e.dataTransfer.dropEffect = \"copy\"; // for Chrome\n            }\n\n            e.stopPropagation();\n            e.preventDefault();\n        });\n\n        disposeSupport.attach(element, \"dragenter\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n                options.onEnter(e);\n            }\n        });\n\n        disposeSupport.attach(element, \"dragleave\", function(e) {\n            if (!isValidFileDrag(e)) {\n                return;\n            }\n\n            options.onLeave(e);\n\n            var relatedTarget = document.elementFromPoint(e.clientX, e.clientY);\n            // do not fire when moving a mouse over a descendant\n            if (qq(this).contains(relatedTarget)) {\n                return;\n            }\n\n            options.onLeaveNotDescendants(e);\n        });\n\n        disposeSupport.attach(element, \"drop\", function(e) {\n            if (!isOrSetDropDisabled()) {\n                if (!isValidFileDrag(e)) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopPropagation();\n                options.onDrop(e);\n\n                triggerHidezonesEvent();\n            }\n        });\n    }\n\n    disableDropOutside();\n    attachEvents();\n\n    qq.extend(this, {\n        dropDisabled: function(isDisabled) {\n            return isOrSetDropDisabled(isDisabled);\n        },\n\n        dispose: function() {\n            disposeSupport.dispose();\n        },\n\n        getElement: function() {\n            return element;\n        }\n    });\n};\n","/*globals qq */\n/**\n * Defines the public API for FineUploader mode.\n */\n(function() {\n    \"use strict\";\n\n    qq.uiPublicApi = {\n        addInitialFiles: function(cannedFileList) {\n            this._parent.prototype.addInitialFiles.apply(this, arguments);\n            this._templating.addCacheToDom();\n        },\n\n        clearStoredFiles: function() {\n            this._parent.prototype.clearStoredFiles.apply(this, arguments);\n            this._templating.clearFiles();\n        },\n\n        addExtraDropzone: function(element) {\n            this._dnd && this._dnd.setupExtraDropzone(element);\n        },\n\n        removeExtraDropzone: function(element) {\n            if (this._dnd) {\n                return this._dnd.removeDropzone(element);\n            }\n        },\n\n        getItemByFileId: function(id) {\n            if (!this._templating.isHiddenForever(id)) {\n                return this._templating.getFileContainer(id);\n            }\n        },\n\n        reset: function() {\n            this._parent.prototype.reset.apply(this, arguments);\n            this._templating.reset();\n\n            if (!this._options.button && this._templating.getButton()) {\n                this._defaultButtonId = this._createUploadButton({\n                    element: this._templating.getButton(),\n                    title: this._options.text.fileInputTitle\n                }).getButtonId();\n            }\n\n            if (this._dnd) {\n                this._dnd.dispose();\n                this._dnd = this._setupDragAndDrop();\n            }\n\n            this._totalFilesInBatch = 0;\n            this._filesInBatchAddedToUi = 0;\n\n            this._setupClickAndEditEventHandlers();\n        },\n\n        setName: function(id, newName) {\n            var formattedFilename = this._options.formatFileName(newName);\n\n            this._parent.prototype.setName.apply(this, arguments);\n            this._templating.updateFilename(id, formattedFilename);\n        },\n\n        pauseUpload: function(id) {\n            var paused = this._parent.prototype.pauseUpload.apply(this, arguments);\n\n            paused && this._templating.uploadPaused(id);\n            return paused;\n        },\n\n        continueUpload: function(id) {\n            var continued = this._parent.prototype.continueUpload.apply(this, arguments);\n\n            continued && this._templating.uploadContinued(id);\n            return continued;\n        },\n\n        getId: function(fileContainerOrChildEl) {\n            return this._templating.getFileId(fileContainerOrChildEl);\n        },\n\n        getDropTarget: function(fileId) {\n            var file = this.getFile(fileId);\n\n            return file.qqDropTarget;\n        }\n    };\n\n    /**\n     * Defines the private (internal) API for FineUploader mode.\n     */\n    qq.uiPrivateApi = {\n        _getButton: function(buttonId) {\n            var button = this._parent.prototype._getButton.apply(this, arguments);\n\n            if (!button) {\n                if (buttonId === this._defaultButtonId) {\n                    button = this._templating.getButton();\n                }\n            }\n\n            return button;\n        },\n\n        _removeFileItem: function(fileId) {\n            this._templating.removeFile(fileId);\n        },\n\n        _setupClickAndEditEventHandlers: function() {\n            this._fileButtonsClickHandler = qq.FileButtonsClickHandler && this._bindFileButtonsClickEvent();\n\n            // A better approach would be to check specifically for focusin event support by querying the DOM API,\n            // but the DOMFocusIn event is not exposed as a property, so we have to resort to UA string sniffing.\n            this._focusinEventSupported = !qq.firefox();\n\n            if (this._isEditFilenameEnabled())\n            {\n                this._filenameClickHandler = this._bindFilenameClickEvent();\n                this._filenameInputFocusInHandler = this._bindFilenameInputFocusInEvent();\n                this._filenameInputFocusHandler = this._bindFilenameInputFocusEvent();\n            }\n        },\n\n        _setupDragAndDrop: function() {\n            var self = this,\n                dropZoneElements = this._options.dragAndDrop.extraDropzones,\n                templating = this._templating,\n                defaultDropZone = templating.getDropZone();\n\n            defaultDropZone && dropZoneElements.push(defaultDropZone);\n\n            return new qq.DragAndDrop({\n                dropZoneElements: dropZoneElements,\n                allowMultipleItems: this._options.multiple,\n                classes: {\n                    dropActive: this._options.classes.dropActive\n                },\n                callbacks: {\n                    processingDroppedFiles: function() {\n                        templating.showDropProcessing();\n                    },\n                    processingDroppedFilesComplete: function(files, targetEl) {\n                        templating.hideDropProcessing();\n\n                        qq.each(files, function(idx, file) {\n                            file.qqDropTarget = targetEl;\n                        });\n\n                        if (files.length) {\n                            self.addFiles(files, null, null);\n                        }\n                    },\n                    dropError: function(code, errorData) {\n                        self._itemError(code, errorData);\n                    },\n                    dropLog: function(message, level) {\n                        self.log(message, level);\n                    }\n                }\n            });\n        },\n\n        _bindFileButtonsClickEvent: function() {\n            var self = this;\n\n            return new qq.FileButtonsClickHandler({\n                templating: this._templating,\n\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n\n                onDeleteFile: function(fileId) {\n                    self.deleteFile(fileId);\n                },\n\n                onCancel: function(fileId) {\n                    self.cancel(fileId);\n                },\n\n                onRetry: function(fileId) {\n                    self.retry(fileId);\n                },\n\n                onPause: function(fileId) {\n                    self.pauseUpload(fileId);\n                },\n\n                onContinue: function(fileId) {\n                    self.continueUpload(fileId);\n                },\n\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                }\n            });\n        },\n\n        _isEditFilenameEnabled: function() {\n            /*jshint -W014 */\n            return this._templating.isEditFilenamePossible()\n                && !this._options.autoUpload\n                && qq.FilenameClickHandler\n                && qq.FilenameInputFocusHandler\n                && qq.FilenameInputFocusHandler;\n        },\n\n        _filenameEditHandler: function() {\n            var self = this,\n                templating = this._templating;\n\n            return {\n                templating: templating,\n                log: function(message, lvl) {\n                    self.log(message, lvl);\n                },\n                onGetUploadStatus: function(fileId) {\n                    return self.getUploads({id: fileId}).status;\n                },\n                onGetName: function(fileId) {\n                    return self.getName(fileId);\n                },\n                onSetName: function(id, newName) {\n                    self.setName(id, newName);\n                },\n                onEditingStatusChange: function(id, isEditing) {\n                    var qqInput = qq(templating.getEditInput(id)),\n                        qqFileContainer = qq(templating.getFileContainer(id));\n\n                    if (isEditing) {\n                        qqInput.addClass(\"qq-editing\");\n                        templating.hideFilename(id);\n                        templating.hideEditIcon(id);\n                    }\n                    else {\n                        qqInput.removeClass(\"qq-editing\");\n                        templating.showFilename(id);\n                        templating.showEditIcon(id);\n                    }\n\n                    // Force IE8 and older to repaint\n                    qqFileContainer.addClass(\"qq-temp\").removeClass(\"qq-temp\");\n                }\n            };\n        },\n\n        _onUploadStatusChange: function(id, oldStatus, newStatus) {\n            this._parent.prototype._onUploadStatusChange.apply(this, arguments);\n\n            if (this._isEditFilenameEnabled()) {\n                // Status for a file exists before it has been added to the DOM, so we must be careful here.\n                if (this._templating.getFileContainer(id) && newStatus !== qq.status.SUBMITTED) {\n                    this._templating.markFilenameEditable(id);\n                    this._templating.hideEditIcon(id);\n                }\n            }\n\n            if (oldStatus === qq.status.UPLOAD_RETRYING && newStatus === qq.status.UPLOADING) {\n                this._templating.hideRetry(id);\n                this._templating.setStatusText(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.retrying);\n            }\n            else if (newStatus === qq.status.UPLOAD_FAILED) {\n                this._templating.hidePause(id);\n            }\n        },\n\n        _bindFilenameInputFocusInEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusInHandler(spec);\n        },\n\n        _bindFilenameInputFocusEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameInputFocusHandler(spec);\n        },\n\n        _bindFilenameClickEvent: function() {\n            var spec = qq.extend({}, this._filenameEditHandler());\n\n            return new qq.FilenameClickHandler(spec);\n        },\n\n        _storeForLater: function(id) {\n            this._parent.prototype._storeForLater.apply(this, arguments);\n            this._templating.hideSpinner(id);\n        },\n\n        _onAllComplete: function(successful, failed) {\n            this._parent.prototype._onAllComplete.apply(this, arguments);\n            this._templating.resetTotalProgress();\n        },\n\n        _onSubmit: function(id, name) {\n            var file = this.getFile(id);\n\n            if (file && file.qqPath && this._options.dragAndDrop.reportDirectoryPaths) {\n                this._paramsStore.addReadOnly(id, {\n                    qqpath: file.qqPath\n                });\n            }\n\n            this._parent.prototype._onSubmit.apply(this, arguments);\n            this._addToList(id, name);\n        },\n\n        // The file item has been added to the DOM.\n        _onSubmitted: function(id) {\n            // If the edit filename feature is enabled, mark the filename element as \"editable\" and the associated edit icon\n            if (this._isEditFilenameEnabled()) {\n                this._templating.markFilenameEditable(id);\n                this._templating.showEditIcon(id);\n\n                // If the focusin event is not supported, we must add a focus handler to the newly create edit filename text input\n                if (!this._focusinEventSupported) {\n                    this._filenameInputFocusHandler.addHandler(this._templating.getEditInput(id));\n                }\n            }\n        },\n\n        // Update the progress bar & percentage as the file is uploaded\n        _onProgress: function(id, name, loaded, total) {\n            this._parent.prototype._onProgress.apply(this, arguments);\n\n            this._templating.updateProgress(id, loaded, total);\n\n            if (total === 0 || Math.round(loaded / total * 100) === 100) {\n                this._templating.hideCancel(id);\n                this._templating.hidePause(id);\n                this._templating.hideProgress(id);\n                this._templating.setStatusText(id, this._options.text.waitingForResponse);\n\n                // If ~last byte was sent, display total file size\n                this._displayFileSize(id);\n            }\n            else {\n                // If still uploading, display percentage - total size is actually the total request(s) size\n                this._displayFileSize(id, loaded, total);\n            }\n        },\n\n        _onTotalProgress: function(loaded, total) {\n            this._parent.prototype._onTotalProgress.apply(this, arguments);\n            this._templating.updateTotalProgress(loaded, total);\n        },\n\n        _onComplete: function(id, name, result, xhr) {\n            var parentRetVal = this._parent.prototype._onComplete.apply(this, arguments),\n                templating = this._templating,\n                fileContainer = templating.getFileContainer(id),\n                self = this;\n\n            function completeUpload(result) {\n                // If this file is not represented in the templating module, perhaps it was hidden intentionally.\n                // If so, don't perform any UI-related tasks related to this file.\n                if (!fileContainer) {\n                    return;\n                }\n\n                templating.setStatusText(id);\n\n                qq(fileContainer).removeClass(self._classes.retrying);\n                templating.hideProgress(id);\n\n                if (self.getUploads({id: id}).status !== qq.status.UPLOAD_FAILED) {\n                    templating.hideCancel(id);\n                }\n                templating.hideSpinner(id);\n\n                if (result.success) {\n                    self._markFileAsSuccessful(id);\n                }\n                else {\n                    qq(fileContainer).addClass(self._classes.fail);\n                    templating.showCancel(id);\n\n                    if (templating.isRetryPossible() && !self._preventRetries[id]) {\n                        qq(fileContainer).addClass(self._classes.retryable);\n                        templating.showRetry(id);\n                    }\n                    self._controlFailureTextDisplay(id, result);\n                }\n            }\n\n            // The parent may need to perform some async operation before we can accurately determine the status of the upload.\n            if (parentRetVal instanceof qq.Promise) {\n                parentRetVal.done(function(newResult) {\n                    completeUpload(newResult);\n                });\n\n            }\n            else {\n                completeUpload(result);\n            }\n\n            return parentRetVal;\n        },\n\n        _markFileAsSuccessful: function(id) {\n            var templating = this._templating;\n\n            if (this._isDeletePossible()) {\n                templating.showDeleteButton(id);\n            }\n\n            qq(templating.getFileContainer(id)).addClass(this._classes.success);\n\n            this._maybeUpdateThumbnail(id);\n        },\n\n        _onUploadPrep: function(id) {\n            this._parent.prototype._onUploadPrep.apply(this, arguments);\n            this._templating.showSpinner(id);\n        },\n\n        _onUpload: function(id, name) {\n            var parentRetVal = this._parent.prototype._onUpload.apply(this, arguments);\n\n            this._templating.showSpinner(id);\n\n            return parentRetVal;\n        },\n\n        _onUploadChunk: function(id, chunkData) {\n            this._parent.prototype._onUploadChunk.apply(this, arguments);\n\n            // Only display the pause button if we have finished uploading at least one chunk\n            // & this file can be resumed\n            if (chunkData.partIndex > 0 && this._handler.isResumable(id)) {\n                this._templating.allowPause(id);\n            }\n        },\n\n        _onCancel: function(id, name) {\n            this._parent.prototype._onCancel.apply(this, arguments);\n            this._removeFileItem(id);\n\n            if (this._getNotFinished() === 0) {\n                this._templating.resetTotalProgress();\n            }\n        },\n\n        _onBeforeAutoRetry: function(id) {\n            var retryNumForDisplay, maxAuto, retryNote;\n\n            this._parent.prototype._onBeforeAutoRetry.apply(this, arguments);\n\n            this._showCancelLink(id);\n\n            if (this._options.retry.showAutoRetryNote) {\n                retryNumForDisplay = this._autoRetries[id];\n                maxAuto = this._options.retry.maxAutoAttempts;\n\n                retryNote = this._options.retry.autoRetryNote.replace(/\\{retryNum\\}/g, retryNumForDisplay);\n                retryNote = retryNote.replace(/\\{maxAuto\\}/g, maxAuto);\n\n                this._templating.setStatusText(id, retryNote);\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retrying);\n            }\n        },\n\n        //return false if we should not attempt the requested retry\n        _onBeforeManualRetry: function(id) {\n            if (this._parent.prototype._onBeforeManualRetry.apply(this, arguments)) {\n                this._templating.resetProgress(id);\n                qq(this._templating.getFileContainer(id)).removeClass(this._classes.fail);\n                this._templating.setStatusText(id);\n                this._templating.showSpinner(id);\n                this._showCancelLink(id);\n                return true;\n            }\n            else {\n                qq(this._templating.getFileContainer(id)).addClass(this._classes.retryable);\n                this._templating.showRetry(id);\n                return false;\n            }\n        },\n\n        _onSubmitDelete: function(id) {\n            var onSuccessCallback = qq.bind(this._onSubmitDeleteSuccess, this);\n\n            this._parent.prototype._onSubmitDelete.call(this, id, onSuccessCallback);\n        },\n\n        _onSubmitDeleteSuccess: function(id, uuid, additionalMandatedParams) {\n            if (this._options.deleteFile.forceConfirm) {\n                this._showDeleteConfirm.apply(this, arguments);\n            }\n            else {\n                this._sendDeleteRequest.apply(this, arguments);\n            }\n        },\n\n        _onDeleteComplete: function(id, xhr, isError) {\n            this._parent.prototype._onDeleteComplete.apply(this, arguments);\n\n            this._templating.hideSpinner(id);\n\n            if (isError) {\n                this._templating.setStatusText(id, this._options.deleteFile.deletingFailedText);\n                this._templating.showDeleteButton(id);\n            }\n            else {\n                this._removeFileItem(id);\n            }\n        },\n\n        _sendDeleteRequest: function(id, uuid, additionalMandatedParams) {\n            this._templating.hideDeleteButton(id);\n            this._templating.showSpinner(id);\n            this._templating.setStatusText(id, this._options.deleteFile.deletingStatusText);\n            this._deleteHandler.sendDelete.apply(this, arguments);\n        },\n\n        _showDeleteConfirm: function(id, uuid, mandatedParams) {\n            /*jshint -W004 */\n            var fileName = this.getName(id),\n                confirmMessage = this._options.deleteFile.confirmMessage.replace(/\\{filename\\}/g, fileName),\n                uuid = this.getUuid(id),\n                deleteRequestArgs = arguments,\n                self = this,\n                retVal;\n\n            retVal = this._options.showConfirm(confirmMessage);\n\n            if (qq.isGenericPromise(retVal)) {\n                retVal.then(function() {\n                    self._sendDeleteRequest.apply(self, deleteRequestArgs);\n                });\n            }\n            else if (retVal !== false) {\n                self._sendDeleteRequest.apply(self, deleteRequestArgs);\n            }\n        },\n\n        _addToList: function(id, name, canned) {\n            var prependData,\n                prependIndex = 0,\n                dontDisplay = this._handler.isProxied(id) && this._options.scaling.hideScaled,\n                record;\n\n            if (this._options.display.prependFiles) {\n                if (this._totalFilesInBatch > 1 && this._filesInBatchAddedToUi > 0) {\n                    prependIndex = this._filesInBatchAddedToUi - 1;\n                }\n\n                prependData = {\n                    index: prependIndex\n                };\n            }\n\n            if (!canned) {\n                if (this._options.disableCancelForFormUploads && !qq.supportedFeatures.ajaxUploading) {\n                    this._templating.disableCancel();\n                }\n\n                // Cancel all existing (previous) files and clear the list if this file is not part of\n                // a scaled file group that has already been accepted, or if this file is not part of\n                // a scaled file group at all.\n                if (!this._options.multiple) {\n                    record = this.getUploads({id: id});\n\n                    this._handledProxyGroup = this._handledProxyGroup || record.proxyGroupId;\n\n                    if (record.proxyGroupId !== this._handledProxyGroup || !record.proxyGroupId) {\n                        this._handler.cancelAll();\n                        this._clearList();\n                        this._handledProxyGroup = null;\n                    }\n                }\n            }\n\n            if (canned) {\n                this._templating.addFileToCache(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.updateThumbnail(id, this._thumbnailUrls[id], true, this._options.thumbnails.customResizer);\n            }\n            else {\n                this._templating.addFile(id, this._options.formatFileName(name), prependData, dontDisplay);\n                this._templating.generatePreview(id, this.getFile(id), this._options.thumbnails.customResizer);\n            }\n\n            this._filesInBatchAddedToUi += 1;\n\n            if (canned ||\n                (this._options.display.fileSizeOnSubmit && qq.supportedFeatures.ajaxUploading)) {\n\n                this._displayFileSize(id);\n            }\n        },\n\n        _clearList: function() {\n            this._templating.clearFiles();\n            this.clearStoredFiles();\n        },\n\n        _displayFileSize: function(id, loadedSize, totalSize) {\n            var size = this.getSize(id),\n                sizeForDisplay = this._formatSize(size);\n\n            if (size >= 0) {\n                if (loadedSize !== undefined && totalSize !== undefined) {\n                    sizeForDisplay = this._formatProgress(loadedSize, totalSize);\n                }\n\n                this._templating.updateSize(id, sizeForDisplay);\n            }\n        },\n\n        _formatProgress: function(uploadedSize, totalSize) {\n            var message = this._options.text.formatProgress;\n            function r(name, replacement) { message = message.replace(name, replacement); }\n\n            r(\"{percent}\", Math.round(uploadedSize / totalSize * 100));\n            r(\"{total_size}\", this._formatSize(totalSize));\n            return message;\n        },\n\n        _controlFailureTextDisplay: function(id, response) {\n            var mode, responseProperty, failureReason;\n\n            mode = this._options.failedUploadTextDisplay.mode;\n            responseProperty = this._options.failedUploadTextDisplay.responseProperty;\n\n            if (mode === \"custom\") {\n                failureReason = response[responseProperty];\n                if (!failureReason) {\n                    failureReason = this._options.text.failUpload;\n                }\n\n                this._templating.setStatusText(id, failureReason);\n\n                if (this._options.failedUploadTextDisplay.enableTooltip) {\n                    this._showTooltip(id, failureReason);\n                }\n            }\n            else if (mode === \"default\") {\n                this._templating.setStatusText(id, this._options.text.failUpload);\n            }\n            else if (mode !== \"none\") {\n                this.log(\"failedUploadTextDisplay.mode value of '\" + mode + \"' is not valid\", \"warn\");\n            }\n        },\n\n        _showTooltip: function(id, text) {\n            this._templating.getFileContainer(id).title = text;\n        },\n\n        _showCancelLink: function(id) {\n            if (!this._options.disableCancelForFormUploads || qq.supportedFeatures.ajaxUploading) {\n                this._templating.showCancel(id);\n            }\n        },\n\n        _itemError: function(code, name, item) {\n            var message = this._parent.prototype._itemError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _batchError: function(message) {\n            this._parent.prototype._batchError.apply(this, arguments);\n            this._options.showMessage(message);\n        },\n\n        _setupPastePrompt: function() {\n            var self = this;\n\n            this._options.callbacks.onPasteReceived = function() {\n                var message = self._options.paste.namePromptMessage,\n                    defaultVal = self._options.paste.defaultName;\n\n                return self._options.showPrompt(message, defaultVal);\n            };\n        },\n\n        _fileOrBlobRejected: function(id, name) {\n            this._totalFilesInBatch -= 1;\n            this._parent.prototype._fileOrBlobRejected.apply(this, arguments);\n        },\n\n        _prepareItemsForUpload: function(items, params, endpoint) {\n            this._totalFilesInBatch = items.length;\n            this._filesInBatchAddedToUi = 0;\n            this._parent.prototype._prepareItemsForUpload.apply(this, arguments);\n        },\n\n        _maybeUpdateThumbnail: function(fileId) {\n            var thumbnailUrl = this._thumbnailUrls[fileId],\n                fileStatus = this.getUploads({id: fileId}).status;\n\n            if (fileStatus !== qq.status.DELETED &&\n                (thumbnailUrl ||\n                this._options.thumbnails.placeholders.waitUntilResponse ||\n                !qq.supportedFeatures.imagePreviews)) {\n\n                // This will replace the \"waiting\" placeholder with a \"preview not available\" placeholder\n                // if called with a null thumbnailUrl.\n                this._templating.updateThumbnail(fileId, thumbnailUrl, this._options.thumbnails.customResizer);\n            }\n        },\n\n        _addCannedFile: function(sessionData) {\n            var id = this._parent.prototype._addCannedFile.apply(this, arguments);\n\n            this._addToList(id, this.getName(id), true);\n            this._templating.hideSpinner(id);\n            this._templating.hideCancel(id);\n            this._markFileAsSuccessful(id);\n\n            return id;\n        },\n\n        _setSize: function(id, newSize) {\n            this._parent.prototype._setSize.apply(this, arguments);\n\n            this._templating.updateSize(id, this._formatSize(newSize));\n        },\n\n        _sessionRequestComplete: function() {\n            this._templating.addCacheToDom();\n            this._parent.prototype._sessionRequestComplete.apply(this, arguments);\n        }\n    };\n}());\n","/*globals qq */\n/**\n * This defines FineUploader mode, which is a default UI w/ drag & drop uploading.\n */\nqq.FineUploader = function(o, namespace) {\n    \"use strict\";\n\n    var self = this;\n\n    // By default this should inherit instance data from FineUploaderBasic, but this can be overridden\n    // if the (internal) caller defines a different parent.  The parent is also used by\n    // the private and public API functions that need to delegate to a parent function.\n    this._parent = namespace ? qq[namespace].FineUploaderBasic : qq.FineUploaderBasic;\n    this._parent.apply(this, arguments);\n\n    // Options provided by FineUploader mode\n    qq.extend(this._options, {\n        element: null,\n\n        button: null,\n\n        listElement: null,\n\n        dragAndDrop: {\n            extraDropzones: [],\n            reportDirectoryPaths: false\n        },\n\n        text: {\n            formatProgress: \"{percent}% of {total_size}\",\n            failUpload: \"Upload failed\",\n            waitingForResponse: \"Processing...\",\n            paused: \"Paused\"\n        },\n\n        template: \"qq-template\",\n\n        classes: {\n            retrying: \"qq-upload-retrying\",\n            retryable: \"qq-upload-retryable\",\n            success: \"qq-upload-success\",\n            fail: \"qq-upload-fail\",\n            editable: \"qq-editable\",\n            hide: \"qq-hide\",\n            dropActive: \"qq-upload-drop-area-active\"\n        },\n\n        failedUploadTextDisplay: {\n            mode: \"default\", //default, custom, or none\n            responseProperty: \"error\",\n            enableTooltip: true\n        },\n\n        messages: {\n            tooManyFilesError: \"You may only drop one file\",\n            unsupportedBrowser: \"Unrecoverable error - this browser does not permit file uploading of any kind.\"\n        },\n\n        retry: {\n            showAutoRetryNote: true,\n            autoRetryNote: \"Retrying {retryNum}/{maxAuto}...\"\n        },\n\n        deleteFile: {\n            forceConfirm: false,\n            confirmMessage: \"Are you sure you want to delete {filename}?\",\n            deletingStatusText: \"Deleting...\",\n            deletingFailedText: \"Delete failed\"\n\n        },\n\n        display: {\n            fileSizeOnSubmit: false,\n            prependFiles: false\n        },\n\n        paste: {\n            promptForName: false,\n            namePromptMessage: \"Please name this image\"\n        },\n\n        thumbnails: {\n            customResizer: null,\n            maxCount: 0,\n            placeholders: {\n                waitUntilResponse: false,\n                notAvailablePath: null,\n                waitingPath: null\n            },\n            timeBetweenThumbs: 750\n        },\n\n        scaling: {\n            hideScaled: false\n        },\n\n        showMessage: function(message) {\n            if (self._templating.hasDialog(\"alert\")) {\n                return self._templating.showDialog(\"alert\", message);\n            }\n            else {\n                setTimeout(function() {\n                    window.alert(message);\n                }, 0);\n            }\n        },\n\n        showConfirm: function(message) {\n            if (self._templating.hasDialog(\"confirm\")) {\n                return self._templating.showDialog(\"confirm\", message);\n            }\n            else {\n                return window.confirm(message);\n            }\n        },\n\n        showPrompt: function(message, defaultValue) {\n            if (self._templating.hasDialog(\"prompt\")) {\n                return self._templating.showDialog(\"prompt\", message, defaultValue);\n            }\n            else {\n                return window.prompt(message, defaultValue);\n            }\n        }\n    }, true);\n\n    // Replace any default options with user defined ones\n    qq.extend(this._options, o, true);\n\n    this._templating = new qq.Templating({\n        log: qq.bind(this.log, this),\n        templateIdOrEl: this._options.template,\n        containerEl: this._options.element,\n        fileContainerEl: this._options.listElement,\n        button: this._options.button,\n        imageGenerator: this._imageGenerator,\n        classes: {\n            hide: this._options.classes.hide,\n            editable: this._options.classes.editable\n        },\n        limits: {\n            maxThumbs: this._options.thumbnails.maxCount,\n            timeBetweenThumbs: this._options.thumbnails.timeBetweenThumbs\n        },\n        placeholders: {\n            waitUntilUpdate: this._options.thumbnails.placeholders.waitUntilResponse,\n            thumbnailNotAvailable: this._options.thumbnails.placeholders.notAvailablePath,\n            waitingForThumbnail: this._options.thumbnails.placeholders.waitingPath\n        },\n        text: this._options.text\n    });\n\n    if (this._options.workarounds.ios8SafariUploads && qq.ios800() && qq.iosSafari()) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowserIos8Safari);\n    }\n    else if (!qq.supportedFeatures.uploading || (this._options.cors.expected && !qq.supportedFeatures.uploadCors)) {\n        this._templating.renderFailure(this._options.messages.unsupportedBrowser);\n    }\n    else {\n        this._wrapCallbacks();\n\n        this._templating.render();\n\n        this._classes = this._options.classes;\n\n        if (!this._options.button && this._templating.getButton()) {\n            this._defaultButtonId = this._createUploadButton({\n                element: this._templating.getButton(),\n                title: this._options.text.fileInputTitle\n            }).getButtonId();\n        }\n\n        this._setupClickAndEditEventHandlers();\n\n        if (qq.DragAndDrop && qq.supportedFeatures.fileDrop) {\n            this._dnd = this._setupDragAndDrop();\n        }\n\n        if (this._options.paste.targetElement && this._options.paste.promptForName) {\n            if (qq.PasteSupport) {\n                this._setupPastePrompt();\n            }\n            else {\n                this.log(\"Paste support module not found.\", \"error\");\n            }\n        }\n\n        this._totalFilesInBatch = 0;\n        this._filesInBatchAddedToUi = 0;\n    }\n};\n\n// Inherit the base public & private API methods\nqq.extend(qq.FineUploader.prototype, qq.basePublicApi);\nqq.extend(qq.FineUploader.prototype, qq.basePrivateApi);\n\n// Add the FineUploader/default UI public & private UI methods, which may override some base methods.\nqq.extend(qq.FineUploader.prototype, qq.uiPublicApi);\nqq.extend(qq.FineUploader.prototype, qq.uiPrivateApi);\n","/* globals qq */\n/* jshint -W065 */\n/**\n * Module responsible for rendering all Fine Uploader UI templates.  This module also asserts at least\n * a limited amount of control over the template elements after they are added to the DOM.\n * Wherever possible, this module asserts total control over template elements present in the DOM.\n *\n * @param spec Specification object used to control various templating behaviors\n * @constructor\n */\nqq.Templating = function(spec) {\n    \"use strict\";\n\n    var FILE_ID_ATTR = \"qq-file-id\",\n        FILE_CLASS_PREFIX = \"qq-file-id-\",\n        THUMBNAIL_MAX_SIZE_ATTR = \"qq-max-size\",\n        THUMBNAIL_SERVER_SCALE_ATTR = \"qq-server-scale\",\n        // This variable is duplicated in the DnD module since it can function as a standalone as well\n        HIDE_DROPZONE_ATTR = \"qq-hide-dropzone\",\n        DROPZPONE_TEXT_ATTR = \"qq-drop-area-text\",\n        IN_PROGRESS_CLASS = \"qq-in-progress\",\n        HIDDEN_FOREVER_CLASS = \"qq-hidden-forever\",\n        fileBatch = {\n            content: document.createDocumentFragment(),\n            map: {}\n        },\n        isCancelDisabled = false,\n        generatedThumbnails = 0,\n        thumbnailQueueMonitorRunning = false,\n        thumbGenerationQueue = [],\n        thumbnailMaxSize = -1,\n        options = {\n            log: null,\n            limits: {\n                maxThumbs: 0,\n                timeBetweenThumbs: 750\n            },\n            templateIdOrEl: \"qq-template\",\n            containerEl: null,\n            fileContainerEl: null,\n            button: null,\n            imageGenerator: null,\n            classes: {\n                hide: \"qq-hide\",\n                editable: \"qq-editable\"\n            },\n            placeholders: {\n                waitUntilUpdate: false,\n                thumbnailNotAvailable: null,\n                waitingForThumbnail: null\n            },\n            text: {\n                paused: \"Paused\"\n            }\n        },\n        selectorClasses = {\n            button: \"qq-upload-button-selector\",\n            alertDialog: \"qq-alert-dialog-selector\",\n            dialogCancelButton: \"qq-cancel-button-selector\",\n            confirmDialog: \"qq-confirm-dialog-selector\",\n            dialogMessage: \"qq-dialog-message-selector\",\n            dialogOkButton: \"qq-ok-button-selector\",\n            promptDialog: \"qq-prompt-dialog-selector\",\n            uploader: \"qq-uploader-selector\",\n            drop: \"qq-upload-drop-area-selector\",\n            list: \"qq-upload-list-selector\",\n            progressBarContainer: \"qq-progress-bar-container-selector\",\n            progressBar: \"qq-progress-bar-selector\",\n            totalProgressBarContainer: \"qq-total-progress-bar-container-selector\",\n            totalProgressBar: \"qq-total-progress-bar-selector\",\n            file: \"qq-upload-file-selector\",\n            spinner: \"qq-upload-spinner-selector\",\n            size: \"qq-upload-size-selector\",\n            cancel: \"qq-upload-cancel-selector\",\n            pause: \"qq-upload-pause-selector\",\n            continueButton: \"qq-upload-continue-selector\",\n            deleteButton: \"qq-upload-delete-selector\",\n            retry: \"qq-upload-retry-selector\",\n            statusText: \"qq-upload-status-text-selector\",\n            editFilenameInput: \"qq-edit-filename-selector\",\n            editNameIcon: \"qq-edit-filename-icon-selector\",\n            dropText: \"qq-upload-drop-area-text-selector\",\n            dropProcessing: \"qq-drop-processing-selector\",\n            dropProcessingSpinner: \"qq-drop-processing-spinner-selector\",\n            thumbnail: \"qq-thumbnail-selector\"\n        },\n        previewGeneration = {},\n        cachedThumbnailNotAvailableImg = new qq.Promise(),\n        cachedWaitingForThumbnailImg = new qq.Promise(),\n        log,\n        isEditElementsExist,\n        isRetryElementExist,\n        templateHtml,\n        container,\n        fileList,\n        showThumbnails,\n        serverScale,\n\n        // During initialization of the templating module we should cache any\n        // placeholder images so we can quickly swap them into the file list on demand.\n        // Any placeholder images that cannot be loaded/found are simply ignored.\n        cacheThumbnailPlaceholders = function() {\n            var notAvailableUrl =  options.placeholders.thumbnailNotAvailable,\n                waitingUrl = options.placeholders.waitingForThumbnail,\n                spec = {\n                    maxSize: thumbnailMaxSize,\n                    scale: serverScale\n                };\n\n            if (showThumbnails) {\n                if (notAvailableUrl) {\n                    options.imageGenerator.generate(notAvailableUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedThumbnailNotAvailableImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedThumbnailNotAvailableImg.failure();\n                            log(\"Problem loading 'not available' placeholder image at \" + notAvailableUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedThumbnailNotAvailableImg.failure();\n                }\n\n                if (waitingUrl) {\n                    options.imageGenerator.generate(waitingUrl, new Image(), spec).then(\n                        function(updatedImg) {\n                            cachedWaitingForThumbnailImg.success(updatedImg);\n                        },\n                        function() {\n                            cachedWaitingForThumbnailImg.failure();\n                            log(\"Problem loading 'waiting for thumbnail' placeholder image at \" + waitingUrl, \"error\");\n                        }\n                    );\n                }\n                else {\n                    cachedWaitingForThumbnailImg.failure();\n                }\n            }\n        },\n\n        // Displays a \"waiting for thumbnail\" type placeholder image\n        // iff we were able to load it during initialization of the templating module.\n        displayWaitingImg = function(thumbnail) {\n            var waitingImgPlacement = new qq.Promise();\n\n            cachedWaitingForThumbnailImg.then(function(img) {\n                maybeScalePlaceholderViaCss(img, thumbnail);\n                /* jshint eqnull:true */\n                if (!thumbnail.src) {\n                    thumbnail.src = img.src;\n                    thumbnail.onload = function() {\n                        thumbnail.onload = null;\n                        show(thumbnail);\n                        waitingImgPlacement.success();\n                    };\n                }\n                else {\n                    waitingImgPlacement.success();\n                }\n            }, function() {\n                // In some browsers (such as IE9 and older) an img w/out a src attribute\n                // are displayed as \"broken\" images, so we should just hide the img tag\n                // if we aren't going to display the \"waiting\" placeholder.\n                hide(thumbnail);\n                waitingImgPlacement.success();\n            });\n\n            return waitingImgPlacement;\n        },\n\n        generateNewPreview = function(id, blob, spec) {\n            var thumbnail = getThumbnail(id);\n\n            log(\"Generating new thumbnail for \" + id);\n            blob.qqThumbnailId = id;\n\n            return options.imageGenerator.generate(blob, thumbnail, spec).then(\n                function() {\n                    generatedThumbnails++;\n                    show(thumbnail);\n                    previewGeneration[id].success();\n                },\n                function() {\n                    previewGeneration[id].failure();\n\n                    // Display the \"not available\" placeholder img only if we are\n                    // not expecting a thumbnail at a later point, such as in a server response.\n                    if (!options.placeholders.waitUntilUpdate) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    }\n                });\n        },\n\n        generateNextQueuedPreview = function() {\n            if (thumbGenerationQueue.length) {\n                thumbnailQueueMonitorRunning = true;\n\n                var queuedThumbRequest = thumbGenerationQueue.shift();\n\n                if (queuedThumbRequest.update) {\n                    processUpdateQueuedPreviewRequest(queuedThumbRequest);\n                }\n                else {\n                    processNewQueuedPreviewRequest(queuedThumbRequest);\n                }\n            }\n            else {\n                thumbnailQueueMonitorRunning = false;\n            }\n        },\n\n        getCancel = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.cancel);\n        },\n\n        getContinue = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.continueButton);\n        },\n\n        getDialog = function(type) {\n            return getTemplateEl(container, selectorClasses[type + \"Dialog\"]);\n        },\n\n        getDelete = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.deleteButton);\n        },\n\n        getDropProcessing = function() {\n            return getTemplateEl(container, selectorClasses.dropProcessing);\n        },\n\n        getEditIcon = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editNameIcon);\n        },\n\n        getFile = function(id) {\n            return fileBatch.map[id] || qq(fileList).getFirstByClass(FILE_CLASS_PREFIX + id);\n        },\n\n        getFilename = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.file);\n        },\n\n        getPause = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.pause);\n        },\n\n        getProgress = function(id) {\n            /* jshint eqnull:true */\n            // Total progress bar\n            if (id == null) {\n                return getTemplateEl(container, selectorClasses.totalProgressBarContainer) ||\n                    getTemplateEl(container, selectorClasses.totalProgressBar);\n            }\n\n            // Per-file progress bar\n            return getTemplateEl(getFile(id), selectorClasses.progressBarContainer) ||\n                getTemplateEl(getFile(id), selectorClasses.progressBar);\n        },\n\n        getRetry = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.retry);\n        },\n\n        getSize = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.size);\n        },\n\n        getSpinner = function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.spinner);\n        },\n\n        getTemplateEl = function(context, cssClass) {\n            return context && qq(context).getFirstByClass(cssClass);\n        },\n\n        getThumbnail = function(id) {\n            return showThumbnails && getTemplateEl(getFile(id), selectorClasses.thumbnail);\n        },\n\n        hide = function(el) {\n            el && qq(el).addClass(options.classes.hide);\n        },\n\n        // Ensures a placeholder image does not exceed any max size specified\n        // via `style` attribute properties iff <canvas> was not used to scale\n        // the placeholder AND the target <img> doesn't already have these `style` attribute properties set.\n        maybeScalePlaceholderViaCss = function(placeholder, thumbnail) {\n            var maxWidth = placeholder.style.maxWidth,\n                maxHeight = placeholder.style.maxHeight;\n\n            if (maxHeight && maxWidth && !thumbnail.style.maxWidth && !thumbnail.style.maxHeight) {\n                qq(thumbnail).css({\n                    maxWidth: maxWidth,\n                    maxHeight: maxHeight\n                });\n            }\n        },\n\n        // Displays a \"thumbnail not available\" type placeholder image\n        // iff we were able to load this placeholder during initialization\n        // of the templating module or after preview generation has failed.\n        maybeSetDisplayNotAvailableImg = function(id, thumbnail) {\n            var previewing = previewGeneration[id] || new qq.Promise().failure(),\n                notAvailableImgPlacement = new qq.Promise();\n\n            cachedThumbnailNotAvailableImg.then(function(img) {\n                previewing.then(\n                    function() {\n                        notAvailableImgPlacement.success();\n                    },\n                    function() {\n                        maybeScalePlaceholderViaCss(img, thumbnail);\n\n                        thumbnail.onload = function() {\n                            thumbnail.onload = null;\n                            notAvailableImgPlacement.success();\n                        };\n\n                        thumbnail.src = img.src;\n                        show(thumbnail);\n                    }\n                );\n            });\n\n            return notAvailableImgPlacement;\n        },\n\n        /**\n         * Grabs the HTML from the script tag holding the template markup.  This function will also adjust\n         * some internally-tracked state variables based on the contents of the template.\n         * The template is filtered so that irrelevant elements (such as the drop zone if DnD is not supported)\n         * are omitted from the DOM.  Useful errors will be thrown if the template cannot be parsed.\n         *\n         * @returns {{template: *, fileTemplate: *}} HTML for the top-level file items templates\n         */\n        parseAndGetTemplate = function() {\n            var scriptEl,\n                scriptHtml,\n                fileListNode,\n                tempTemplateEl,\n                fileListHtml,\n                defaultButton,\n                dropArea,\n                thumbnail,\n                dropProcessing,\n                dropTextEl,\n                uploaderEl;\n\n            log(\"Parsing template\");\n\n            /*jshint -W116*/\n            if (options.templateIdOrEl == null) {\n                throw new Error(\"You MUST specify either a template element or ID!\");\n            }\n\n            // Grab the contents of the script tag holding the template.\n            if (qq.isString(options.templateIdOrEl)) {\n                scriptEl = document.getElementById(options.templateIdOrEl);\n\n                if (scriptEl === null) {\n                    throw new Error(qq.format(\"Cannot find template script at ID '{}'!\", options.templateIdOrEl));\n                }\n\n                scriptHtml = scriptEl.innerHTML;\n            }\n            else {\n                if (options.templateIdOrEl.innerHTML === undefined) {\n                    throw new Error(\"You have specified an invalid value for the template option!  \" +\n                        \"It must be an ID or an Element.\");\n                }\n\n                scriptHtml = options.templateIdOrEl.innerHTML;\n            }\n\n            scriptHtml = qq.trimStr(scriptHtml);\n            tempTemplateEl = document.createElement(\"div\");\n            tempTemplateEl.appendChild(qq.toElement(scriptHtml));\n            uploaderEl = qq(tempTemplateEl).getFirstByClass(selectorClasses.uploader);\n\n            // Don't include the default template button in the DOM\n            // if an alternate button container has been specified.\n            if (options.button) {\n                defaultButton = qq(tempTemplateEl).getFirstByClass(selectorClasses.button);\n                if (defaultButton) {\n                    qq(defaultButton).remove();\n                }\n            }\n\n            // Omit the drop processing element from the DOM if DnD is not supported by the UA,\n            // or the drag and drop module is not found.\n            // NOTE: We are consciously not removing the drop zone if the UA doesn't support DnD\n            // to support layouts where the drop zone is also a container for visible elements,\n            // such as the file list.\n            if (!qq.DragAndDrop || !qq.supportedFeatures.fileDrop) {\n                dropProcessing = qq(tempTemplateEl).getFirstByClass(selectorClasses.dropProcessing);\n                if (dropProcessing) {\n                    qq(dropProcessing).remove();\n                }\n            }\n\n            dropArea = qq(tempTemplateEl).getFirstByClass(selectorClasses.drop);\n\n            // If DnD is not available then remove\n            // it from the DOM as well.\n            if (dropArea && !qq.DragAndDrop) {\n                log(\"DnD module unavailable.\", \"info\");\n                qq(dropArea).remove();\n            }\n\n            if (!qq.supportedFeatures.fileDrop) {\n                // don't display any \"drop files to upload\" background text\n                uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n                if (dropArea && qq(dropArea).hasAttribute(HIDE_DROPZONE_ATTR)) {\n                    // If there is a drop area defined in the template, and the current UA doesn't support DnD,\n                    // and the drop area is marked as \"hide before enter\", ensure it is hidden as the DnD module\n                    // will not do this (since we will not be loading the DnD module)\n                    qq(dropArea).css({\n                        display: \"none\"\n                    });\n                }\n            }\n            else if (qq(uploaderEl).hasAttribute(DROPZPONE_TEXT_ATTR) && dropArea) {\n                dropTextEl = qq(dropArea).getFirstByClass(selectorClasses.dropText);\n                dropTextEl && qq(dropTextEl).remove();\n            }\n\n            // Ensure the `showThumbnails` flag is only set if the thumbnail element\n            // is present in the template AND the current UA is capable of generating client-side previews.\n            thumbnail = qq(tempTemplateEl).getFirstByClass(selectorClasses.thumbnail);\n            if (!showThumbnails) {\n                thumbnail && qq(thumbnail).remove();\n            }\n            else if (thumbnail) {\n                thumbnailMaxSize = parseInt(thumbnail.getAttribute(THUMBNAIL_MAX_SIZE_ATTR));\n                // Only enforce max size if the attr value is non-zero\n                thumbnailMaxSize = thumbnailMaxSize > 0 ? thumbnailMaxSize : null;\n\n                serverScale = qq(thumbnail).hasAttribute(THUMBNAIL_SERVER_SCALE_ATTR);\n            }\n            showThumbnails = showThumbnails && thumbnail;\n\n            isEditElementsExist = qq(tempTemplateEl).getByClass(selectorClasses.editFilenameInput).length > 0;\n            isRetryElementExist = qq(tempTemplateEl).getByClass(selectorClasses.retry).length > 0;\n\n            fileListNode = qq(tempTemplateEl).getFirstByClass(selectorClasses.list);\n            /*jshint -W116*/\n            if (fileListNode == null) {\n                throw new Error(\"Could not find the file list container in the template!\");\n            }\n\n            fileListHtml = fileListNode.innerHTML;\n            fileListNode.innerHTML = \"\";\n\n            // We must call `createElement` in IE8 in order to target and hide any <dialog> via CSS\n            if (tempTemplateEl.getElementsByTagName(\"DIALOG\").length) {\n                document.createElement(\"dialog\");\n            }\n\n            log(\"Template parsing complete\");\n\n            return {\n                template: qq.trimStr(tempTemplateEl.innerHTML),\n                fileTemplate: qq.trimStr(fileListHtml)\n            };\n        },\n\n        prependFile = function(el, index, fileList) {\n            var parentEl = fileList,\n                beforeEl = parentEl.firstChild;\n\n            if (index > 0) {\n                beforeEl = qq(parentEl).children()[index].nextSibling;\n\n            }\n\n            parentEl.insertBefore(el, beforeEl);\n        },\n\n        processNewQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                optFileOrBlob = queuedThumbRequest.optFileOrBlob,\n                relatedThumbnailId = optFileOrBlob && optFileOrBlob.qqThumbnailId,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    maxSize: thumbnailMaxSize,\n                    orient: true,\n                    scale: true\n                };\n\n            if (qq.supportedFeatures.imagePreviews) {\n                if (thumbnail) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        displayWaitingImg(thumbnail).done(function() {\n                            previewGeneration[id] = new qq.Promise();\n\n                            previewGeneration[id].done(function() {\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            });\n\n                            /* jshint eqnull: true */\n                            // If we've already generated an <img> for this file, use the one that exists,\n                            // don't waste resources generating a new one.\n                            if (relatedThumbnailId != null) {\n                                useCachedPreview(id, relatedThumbnailId);\n                            }\n                            else {\n                                generateNewPreview(id, optFileOrBlob, spec);\n                            }\n                        });\n                    }\n                }\n                // File element in template may have been removed, so move on to next item in queue\n                else {\n                    generateNextQueuedPreview();\n                }\n            }\n            else if (thumbnail) {\n                displayWaitingImg(thumbnail);\n                generateNextQueuedPreview();\n            }\n        },\n\n        processUpdateQueuedPreviewRequest = function(queuedThumbRequest) {\n            var id = queuedThumbRequest.id,\n                thumbnailUrl = queuedThumbRequest.thumbnailUrl,\n                showWaitingImg = queuedThumbRequest.showWaitingImg,\n                thumbnail = getThumbnail(id),\n                spec = {\n                    customResizeFunction: queuedThumbRequest.customResizeFunction,\n                    scale: serverScale,\n                    maxSize: thumbnailMaxSize\n                };\n\n            if (thumbnail) {\n                if (thumbnailUrl) {\n                    if (options.limits.maxThumbs && options.limits.maxThumbs <= generatedThumbnails) {\n                        maybeSetDisplayNotAvailableImg(id, thumbnail);\n                        generateNextQueuedPreview();\n                    }\n                    else {\n                        if (showWaitingImg) {\n                            displayWaitingImg(thumbnail);\n                        }\n\n                        return options.imageGenerator.generate(thumbnailUrl, thumbnail, spec).then(\n                            function() {\n                                show(thumbnail);\n                                generatedThumbnails++;\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            },\n\n                            function() {\n                                maybeSetDisplayNotAvailableImg(id, thumbnail);\n                                setTimeout(generateNextQueuedPreview, options.limits.timeBetweenThumbs);\n                            }\n                        );\n                    }\n                }\n                else {\n                    maybeSetDisplayNotAvailableImg(id, thumbnail);\n                    generateNextQueuedPreview();\n                }\n            }\n        },\n\n        setProgressBarWidth = function(id, percent) {\n            var bar = getProgress(id),\n                /* jshint eqnull:true */\n                progressBarSelector = id == null ? selectorClasses.totalProgressBar : selectorClasses.progressBar;\n\n            if (bar && !qq(bar).hasClass(progressBarSelector)) {\n                bar = qq(bar).getFirstByClass(progressBarSelector);\n            }\n\n            if (bar) {\n                qq(bar).css({width: percent + \"%\"});\n                bar.setAttribute(\"aria-valuenow\", percent);\n            }\n        },\n\n        show = function(el) {\n            el && qq(el).removeClass(options.classes.hide);\n        },\n\n        useCachedPreview = function(targetThumbnailId, cachedThumbnailId) {\n            var targetThumbnail = getThumbnail(targetThumbnailId),\n                cachedThumbnail = getThumbnail(cachedThumbnailId);\n\n            log(qq.format(\"ID {} is the same file as ID {}.  Will use generated thumbnail from ID {} instead.\", targetThumbnailId, cachedThumbnailId, cachedThumbnailId));\n\n            // Generation of the related thumbnail may still be in progress, so, wait until it is done.\n            previewGeneration[cachedThumbnailId].then(function() {\n                generatedThumbnails++;\n                previewGeneration[targetThumbnailId].success();\n                log(qq.format(\"Now using previously generated thumbnail created for ID {} on ID {}.\", cachedThumbnailId, targetThumbnailId));\n                targetThumbnail.src = cachedThumbnail.src;\n                show(targetThumbnail);\n            },\n            function() {\n                previewGeneration[targetThumbnailId].failure();\n                if (!options.placeholders.waitUntilUpdate) {\n                    maybeSetDisplayNotAvailableImg(targetThumbnailId, targetThumbnail);\n                }\n            });\n        };\n\n    qq.extend(options, spec);\n    log = options.log;\n\n    // No need to worry about conserving CPU or memory on older browsers,\n    // since there is no ability to preview, and thumbnail display is primitive and quick.\n    if (!qq.supportedFeatures.imagePreviews) {\n        options.limits.timeBetweenThumbs = 0;\n        options.limits.maxThumbs = 0;\n    }\n\n    container = options.containerEl;\n    showThumbnails = options.imageGenerator !== undefined;\n    templateHtml = parseAndGetTemplate();\n\n    cacheThumbnailPlaceholders();\n\n    qq.extend(this, {\n        render: function() {\n            log(\"Rendering template in DOM.\");\n\n            generatedThumbnails = 0;\n\n            container.innerHTML = templateHtml.template;\n            hide(getDropProcessing());\n            this.hideTotalProgress();\n            fileList = options.fileContainerEl || getTemplateEl(container, selectorClasses.list);\n\n            log(\"Template rendering complete\");\n        },\n\n        renderFailure: function(message) {\n            var cantRenderEl = qq.toElement(message);\n            container.innerHTML = \"\";\n            container.appendChild(cantRenderEl);\n        },\n\n        reset: function() {\n            this.render();\n        },\n\n        clearFiles: function() {\n            fileList.innerHTML = \"\";\n        },\n\n        disableCancel: function() {\n            isCancelDisabled = true;\n        },\n\n        addFile: function(id, name, prependInfo, hideForever, batch) {\n            var fileEl = qq.toElement(templateHtml.fileTemplate),\n                fileNameEl = getTemplateEl(fileEl, selectorClasses.file),\n                uploaderEl = getTemplateEl(container, selectorClasses.uploader),\n                fileContainer = batch ? fileBatch.content : fileList,\n                thumb;\n\n            if (batch) {\n                fileBatch.map[id] = fileEl;\n            }\n\n            qq(fileEl).addClass(FILE_CLASS_PREFIX + id);\n            uploaderEl.removeAttribute(DROPZPONE_TEXT_ATTR);\n\n            if (fileNameEl) {\n                qq(fileNameEl).setText(name);\n                fileNameEl.setAttribute(\"title\", name);\n            }\n\n            fileEl.setAttribute(FILE_ID_ATTR, id);\n\n            if (prependInfo) {\n                prependFile(fileEl, prependInfo.index, fileContainer);\n            }\n            else {\n                fileContainer.appendChild(fileEl);\n            }\n\n            if (hideForever) {\n                fileEl.style.display = \"none\";\n                qq(fileEl).addClass(HIDDEN_FOREVER_CLASS);\n            }\n            else {\n                hide(getProgress(id));\n                hide(getSize(id));\n                hide(getDelete(id));\n                hide(getRetry(id));\n                hide(getPause(id));\n                hide(getContinue(id));\n\n                if (isCancelDisabled) {\n                    this.hideCancel(id);\n                }\n\n                thumb = getThumbnail(id);\n                if (thumb && !thumb.src) {\n                    cachedWaitingForThumbnailImg.then(function(waitingImg) {\n                        thumb.src = waitingImg.src;\n                        if (waitingImg.style.maxHeight && waitingImg.style.maxWidth) {\n                            qq(thumb).css({\n                                maxHeight: waitingImg.style.maxHeight,\n                                maxWidth: waitingImg.style.maxWidth\n                            });\n                        }\n\n                        show(thumb);\n                    });\n                }\n            }\n        },\n\n        addFileToCache: function(id, name, prependInfo, hideForever) {\n            this.addFile(id, name, prependInfo, hideForever, true);\n        },\n\n        addCacheToDom: function() {\n            fileList.appendChild(fileBatch.content);\n            fileBatch.content = document.createDocumentFragment();\n            fileBatch.map = {};\n        },\n\n        removeFile: function(id) {\n            qq(getFile(id)).remove();\n        },\n\n        getFileId: function(el) {\n            var currentNode = el;\n\n            if (currentNode) {\n                /*jshint -W116*/\n                while (currentNode.getAttribute(FILE_ID_ATTR) == null) {\n                    currentNode = currentNode.parentNode;\n                }\n\n                return parseInt(currentNode.getAttribute(FILE_ID_ATTR));\n            }\n        },\n\n        getFileList: function() {\n            return fileList;\n        },\n\n        markFilenameEditable: function(id) {\n            var filename = getFilename(id);\n\n            filename && qq(filename).addClass(options.classes.editable);\n        },\n\n        updateFilename: function(id, name) {\n            var filenameEl = getFilename(id);\n\n            if (filenameEl) {\n                qq(filenameEl).setText(name);\n                filenameEl.setAttribute(\"title\", name);\n            }\n        },\n\n        hideFilename: function(id) {\n            hide(getFilename(id));\n        },\n\n        showFilename: function(id) {\n            show(getFilename(id));\n        },\n\n        isFileName: function(el) {\n            return qq(el).hasClass(selectorClasses.file);\n        },\n\n        getButton: function() {\n            return options.button || getTemplateEl(container, selectorClasses.button);\n        },\n\n        hideDropProcessing: function() {\n            hide(getDropProcessing());\n        },\n\n        showDropProcessing: function() {\n            show(getDropProcessing());\n        },\n\n        getDropZone: function() {\n            return getTemplateEl(container, selectorClasses.drop);\n        },\n\n        isEditFilenamePossible: function() {\n            return isEditElementsExist;\n        },\n\n        hideRetry: function(id) {\n            hide(getRetry(id));\n        },\n\n        isRetryPossible: function() {\n            return isRetryElementExist;\n        },\n\n        showRetry: function(id) {\n            show(getRetry(id));\n        },\n\n        getFileContainer: function(id) {\n            return getFile(id);\n        },\n\n        showEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).addClass(options.classes.editable);\n        },\n\n        isHiddenForever: function(id) {\n            return qq(getFile(id)).hasClass(HIDDEN_FOREVER_CLASS);\n        },\n\n        hideEditIcon: function(id) {\n            var icon = getEditIcon(id);\n\n            icon && qq(icon).removeClass(options.classes.editable);\n        },\n\n        isEditIcon: function(el) {\n            return qq(el).hasClass(selectorClasses.editNameIcon, true);\n        },\n\n        getEditInput: function(id) {\n            return getTemplateEl(getFile(id), selectorClasses.editFilenameInput);\n        },\n\n        isEditInput: function(el) {\n            return qq(el).hasClass(selectorClasses.editFilenameInput, true);\n        },\n\n        updateProgress: function(id, loaded, total) {\n            var bar = getProgress(id),\n                percent;\n\n            if (bar && total > 0) {\n                percent = Math.round(loaded / total * 100);\n\n                if (percent === 100) {\n                    hide(bar);\n                }\n                else {\n                    show(bar);\n                }\n\n                setProgressBarWidth(id, percent);\n            }\n        },\n\n        updateTotalProgress: function(loaded, total) {\n            this.updateProgress(null, loaded, total);\n        },\n\n        hideProgress: function(id) {\n            var bar = getProgress(id);\n\n            bar && hide(bar);\n        },\n\n        hideTotalProgress: function() {\n            this.hideProgress();\n        },\n\n        resetProgress: function(id) {\n            setProgressBarWidth(id, 0);\n            this.hideTotalProgress(id);\n        },\n\n        resetTotalProgress: function() {\n            this.resetProgress();\n        },\n\n        showCancel: function(id) {\n            if (!isCancelDisabled) {\n                var cancel = getCancel(id);\n\n                cancel && qq(cancel).removeClass(options.classes.hide);\n            }\n        },\n\n        hideCancel: function(id) {\n            hide(getCancel(id));\n        },\n\n        isCancel: function(el)  {\n            return qq(el).hasClass(selectorClasses.cancel, true);\n        },\n\n        allowPause: function(id) {\n            show(getPause(id));\n            hide(getContinue(id));\n        },\n\n        uploadPaused: function(id) {\n            this.setStatusText(id, options.text.paused);\n            this.allowContinueButton(id);\n            hide(getSpinner(id));\n        },\n\n        hidePause: function(id) {\n            hide(getPause(id));\n        },\n\n        isPause: function(el) {\n            return qq(el).hasClass(selectorClasses.pause, true);\n        },\n\n        isContinueButton: function(el) {\n            return qq(el).hasClass(selectorClasses.continueButton, true);\n        },\n\n        allowContinueButton: function(id) {\n            show(getContinue(id));\n            hide(getPause(id));\n        },\n\n        uploadContinued: function(id) {\n            this.setStatusText(id, \"\");\n            this.allowPause(id);\n            show(getSpinner(id));\n        },\n\n        showDeleteButton: function(id) {\n            show(getDelete(id));\n        },\n\n        hideDeleteButton: function(id) {\n            hide(getDelete(id));\n        },\n\n        isDeleteButton: function(el) {\n            return qq(el).hasClass(selectorClasses.deleteButton, true);\n        },\n\n        isRetry: function(el) {\n            return qq(el).hasClass(selectorClasses.retry, true);\n        },\n\n        updateSize: function(id, text) {\n            var size = getSize(id);\n\n            if (size) {\n                show(size);\n                qq(size).setText(text);\n            }\n        },\n\n        setStatusText: function(id, text) {\n            var textEl = getTemplateEl(getFile(id), selectorClasses.statusText);\n\n            if (textEl) {\n                /*jshint -W116*/\n                if (text == null) {\n                    qq(textEl).clearText();\n                }\n                else {\n                    qq(textEl).setText(text);\n                }\n            }\n        },\n\n        hideSpinner: function(id) {\n            qq(getFile(id)).removeClass(IN_PROGRESS_CLASS);\n            hide(getSpinner(id));\n        },\n\n        showSpinner: function(id) {\n            qq(getFile(id)).addClass(IN_PROGRESS_CLASS);\n            show(getSpinner(id));\n        },\n\n        generatePreview: function(id, optFileOrBlob, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({id: id, customResizeFunction: customResizeFunction, optFileOrBlob: optFileOrBlob});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        updateThumbnail: function(id, thumbnailUrl, showWaitingImg, customResizeFunction) {\n            if (!this.isHiddenForever(id)) {\n                thumbGenerationQueue.push({customResizeFunction: customResizeFunction, update: true, id: id, thumbnailUrl: thumbnailUrl, showWaitingImg: showWaitingImg});\n                !thumbnailQueueMonitorRunning && generateNextQueuedPreview();\n            }\n        },\n\n        hasDialog: function(type) {\n            return qq.supportedFeatures.dialogElement && !!getDialog(type);\n        },\n\n        showDialog: function(type, message, defaultValue) {\n            var dialog = getDialog(type),\n                messageEl = getTemplateEl(dialog, selectorClasses.dialogMessage),\n                inputEl = dialog.getElementsByTagName(\"INPUT\")[0],\n                cancelBtn = getTemplateEl(dialog, selectorClasses.dialogCancelButton),\n                okBtn = getTemplateEl(dialog, selectorClasses.dialogOkButton),\n                promise = new qq.Promise(),\n\n                closeHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    okBtn && okBtn.removeEventListener(\"click\", okClickHandler);\n                    promise.failure();\n                },\n\n                cancelClickHandler = function() {\n                    cancelBtn.removeEventListener(\"click\", cancelClickHandler);\n                    dialog.close();\n                },\n\n                okClickHandler = function() {\n                    dialog.removeEventListener(\"close\", closeHandler);\n                    okBtn.removeEventListener(\"click\", okClickHandler);\n                    dialog.close();\n\n                    promise.success(inputEl && inputEl.value);\n                };\n\n            dialog.addEventListener(\"close\", closeHandler);\n            cancelBtn.addEventListener(\"click\", cancelClickHandler);\n            okBtn && okBtn.addEventListener(\"click\", okClickHandler);\n\n            if (inputEl) {\n                inputEl.value = defaultValue;\n            }\n            messageEl.textContent = message;\n\n            dialog.showModal();\n\n            return promise;\n        }\n    });\n};\n","/*globals qq */\n// Base handler for UI (FineUploader mode) events.\n// Some more specific handlers inherit from this one.\nqq.UiEventHandler = function(s, protectedApi) {\n    \"use strict\";\n\n    var disposer = new qq.DisposeSupport(),\n        spec = {\n            eventType: \"click\",\n            attachTo: null,\n            onHandled: function(target, event) {}\n        };\n\n    // This makes up the \"public\" API methods that will be accessible\n    // to instances constructing a base or child handler\n    qq.extend(this, {\n        addHandler: function(element) {\n            addHandler(element);\n        },\n\n        dispose: function() {\n            disposer.dispose();\n        }\n    });\n\n    function addHandler(element) {\n        disposer.attach(element, spec.eventType, function(event) {\n            // Only in IE: the `event` is a property of the `window`.\n            event = event || window.event;\n\n            // On older browsers, we must check the `srcElement` instead of the `target`.\n            var target = event.target || event.srcElement;\n\n            spec.onHandled(target, event);\n        });\n    }\n\n    // These make up the \"protected\" API methods that children of this base handler will utilize.\n    qq.extend(protectedApi, {\n        getFileIdFromItem: function(item) {\n            return item.qqFileId;\n        },\n\n        getDisposeSupport: function() {\n            return disposer;\n        }\n    });\n\n    qq.extend(spec, s);\n\n    if (spec.attachTo) {\n        addHandler(spec.attachTo);\n    }\n};\n","/* global qq */\nqq.FileButtonsClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onDeleteFile: function(fileId) {},\n            onCancel: function(fileId) {},\n            onRetry: function(fileId) {},\n            onPause: function(fileId) {},\n            onContinue: function(fileId) {},\n            onGetName: function(fileId) {}\n        },\n        buttonHandlers = {\n            cancel: function(id) { spec.onCancel(id); },\n            retry:  function(id) { spec.onRetry(id); },\n            deleteButton: function(id) { spec.onDeleteFile(id); },\n            pause: function(id) { spec.onPause(id); },\n            continueButton: function(id) { spec.onContinue(id); }\n        };\n\n    function examineEvent(target, event) {\n        qq.each(buttonHandlers, function(buttonType, handler) {\n            var firstLetterCapButtonType = buttonType.charAt(0).toUpperCase() + buttonType.slice(1),\n                fileId;\n\n            if (spec.templating[\"is\" + firstLetterCapButtonType](target)) {\n                fileId = spec.templating.getFileId(target);\n                qq.preventDefault(event);\n                spec.log(qq.format(\"Detected valid file button click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                handler(fileId);\n                return false;\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect click events on filename display elements.\nqq.FilenameClickHandler = function(s) {\n    \"use strict\";\n\n    var inheritedInternalApi = {},\n        spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            classes: {\n                file: \"qq-upload-file\",\n                editNameIcon: \"qq-edit-filename-icon\"\n            },\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {}\n        };\n\n    qq.extend(spec, s);\n\n    // This will be called by the parent handler when a `click` event is received on the list element.\n    function examineEvent(target, event) {\n        if (spec.templating.isFileName(target) || spec.templating.isEditIcon(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            // We only allow users to change filenames of files that have been submitted but not yet uploaded.\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename click event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                qq.preventDefault(event);\n\n                inheritedInternalApi.handleFilenameEdit(fileId, target, true);\n            }\n        }\n    }\n\n    spec.eventType = \"click\";\n    spec.onHandled = examineEvent;\n\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n// Child of FilenameEditHandler.  Used to detect focusin events on file edit input elements.\nqq.FilenameInputFocusInHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            onGetUploadStatus: function(fileId) {},\n            log: function(message, lvl) {}\n        };\n\n    if (!inheritedInternalApi) {\n        inheritedInternalApi = {};\n    }\n\n    // This will be called by the parent handler when a `focusin` event is received on the list element.\n    function handleInputFocus(target, event) {\n        if (spec.templating.isEditInput(target)) {\n            var fileId = spec.templating.getFileId(target),\n                status = spec.onGetUploadStatus(fileId);\n\n            if (status === qq.status.SUBMITTED) {\n                spec.log(qq.format(\"Detected valid filename input focus event on file '{}', ID: {}.\", spec.onGetName(fileId), fileId));\n                inheritedInternalApi.handleFilenameEdit(fileId, target);\n            }\n        }\n    }\n\n    spec.eventType = \"focusin\";\n    spec.onHandled = handleInputFocus;\n\n    qq.extend(spec, s);\n    qq.extend(this, new qq.FilenameEditHandler(spec, inheritedInternalApi));\n};\n","/*globals qq */\n/**\n * Child of FilenameInputFocusInHandler.  Used to detect focus events on file edit input elements.  This child module is only\n * needed for UAs that do not support the focusin event.  Currently, only Firefox lacks this event.\n *\n * @param spec Overrides for default specifications\n */\nqq.FilenameInputFocusHandler = function(spec) {\n    \"use strict\";\n\n    spec.eventType = \"focus\";\n    spec.attachTo = null;\n\n    qq.extend(this, new qq.FilenameInputFocusInHandler(spec, {}));\n};\n","/*globals qq */\n// Handles edit-related events on a file item (FineUploader mode).  This is meant to be a parent handler.\n// Children will delegate to this handler when specific edit-related actions are detected.\nqq.FilenameEditHandler = function(s, inheritedInternalApi) {\n    \"use strict\";\n\n    var spec = {\n            templating: null,\n            log: function(message, lvl) {},\n            onGetUploadStatus: function(fileId) {},\n            onGetName: function(fileId) {},\n            onSetName: function(fileId, newName) {},\n            onEditingStatusChange: function(fileId, isEditing) {}\n        };\n\n    function getFilenameSansExtension(fileId) {\n        var filenameSansExt = spec.onGetName(fileId),\n            extIdx = filenameSansExt.lastIndexOf(\".\");\n\n        if (extIdx > 0) {\n            filenameSansExt = filenameSansExt.substr(0, extIdx);\n        }\n\n        return filenameSansExt;\n    }\n\n    function getOriginalExtension(fileId) {\n        var origName = spec.onGetName(fileId);\n        return qq.getExtension(origName);\n    }\n\n    // Callback iff the name has been changed\n    function handleNameUpdate(newFilenameInputEl, fileId) {\n        var newName = newFilenameInputEl.value,\n            origExtension;\n\n        if (newName !== undefined && qq.trimStr(newName).length > 0) {\n            origExtension = getOriginalExtension(fileId);\n\n            if (origExtension !== undefined) {\n                newName = newName + \".\" + origExtension;\n            }\n\n            spec.onSetName(fileId, newName);\n        }\n\n        spec.onEditingStatusChange(fileId, false);\n    }\n\n    // The name has been updated if the filename edit input loses focus.\n    function registerInputBlurHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"blur\", function() {\n            handleNameUpdate(inputEl, fileId);\n        });\n    }\n\n    // The name has been updated if the user presses enter.\n    function registerInputEnterKeyHandler(inputEl, fileId) {\n        inheritedInternalApi.getDisposeSupport().attach(inputEl, \"keyup\", function(event) {\n\n            var code = event.keyCode || event.which;\n\n            if (code === 13) {\n                handleNameUpdate(inputEl, fileId);\n            }\n        });\n    }\n\n    qq.extend(spec, s);\n\n    spec.attachTo = spec.templating.getFileList();\n\n    qq.extend(this, new qq.UiEventHandler(spec, inheritedInternalApi));\n\n    qq.extend(inheritedInternalApi, {\n        handleFilenameEdit: function(id, target, focusInput) {\n            var newFilenameInputEl = spec.templating.getEditInput(id);\n\n            spec.onEditingStatusChange(id, true);\n\n            newFilenameInputEl.value = getFilenameSansExtension(id);\n\n            if (focusInput) {\n                newFilenameInputEl.focus();\n            }\n\n            registerInputBlurHandler(newFilenameInputEl, id);\n            registerInputEnterKeyHandler(newFilenameInputEl, id);\n        }\n    });\n};\n","/*globals qq */\n/**\n * This defines FineUploader mode w/ support for uploading to S3, which provides all the basic\n * functionality of Fine Uploader as well as code to handle uploads directly to S3.\n * This module inherits all logic from FineUploader mode and FineUploaderBasicS3 mode and adds some UI-related logic\n * specific to the upload-to-S3 workflow.  Some inherited options and API methods have a special meaning\n * in the context of the S3 uploader.\n */\n(function() {\n    \"use strict\";\n\n    qq.s3.FineUploader = function(o) {\n        var options = {\n            failedUploadTextDisplay: {\n                mode: \"custom\"\n            }\n        };\n\n        // Replace any default options with user defined ones\n        qq.extend(options, o, true);\n\n        // Inherit instance data from FineUploader, which should in turn inherit from s3.FineUploaderBasic.\n        qq.FineUploader.call(this, options, \"s3\");\n\n        if (!qq.supportedFeatures.ajaxUploading && options.iframeSupport.localBlankPagePath === undefined) {\n            this._options.element.innerHTML = \"<div>You MUST set the <code>localBlankPagePath</code> property \" +\n                \"of the <code>iframeSupport</code> option since this browser does not support the File API!</div>\";\n        }\n    };\n\n    // Inherit the API methods from FineUploaderBasicS3\n    qq.extend(qq.s3.FineUploader.prototype, qq.s3.FineUploaderBasic.prototype);\n\n    // Inherit public and private API methods related to UI\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPublicApi);\n    qq.extend(qq.s3.FineUploader.prototype, qq.uiPrivateApi);\n}());\n"]}