!function(e,t){"function"==typeof define&&define.amd?define(["videojs"],t):"object"==typeof module&&module.exports?module.exports=t(require("video.js")):e.returnExports=t(e.videojs)}(this,function(e){e.LamejsEngine=e.extend(e.RecordBase,{setup:function(e,t,o){this.inputStream=e,this.mediaType=t,this.debug=o;var s={debug:this.debug,sampleRate:this.sampleRate};this.audioContext=new AudioContext,this.audioSourceNode=this.audioContext.createMediaStreamSource(this.inputStream),this.processor=this.audioContext.createScriptProcessor(16384,1,1),s.sampleRate=this.audioContext.sampleRate,this.engine=new Worker(this.audioWorkerURL),this.engine.onmessage=this.onWorkerMessage.bind(this),this.engine.postMessage({cmd:"init",config:s})},start:function(){this.processor.onaudioprocess=this.onAudioProcess.bind(this),this.audioSourceNode.connect(this.processor),this.processor.connect(this.audioContext.destination)},stop:function(){this.audioSourceNode.disconnect(),this.processor.disconnect(),this.processor.onaudioprocess=null,this.engine.postMessage({cmd:"finish"})},onWorkerMessage:function(e){switch(e.data.cmd){case"end":this.onStopRecording(new Blob(e.data.buf,{type:"audio/mp3"}));break;case"error":this.player().trigger("error",e.data.error);break;default:this.player().trigger("error",e.data)}},onAudioProcess:function(e){var t=e.inputBuffer.getChannelData(0);this.engine.postMessage({cmd:"encode",buf:t})}})});